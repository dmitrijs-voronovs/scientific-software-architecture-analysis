id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/5297:6,deployability,fail,failures,6,These failures seem unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5297
https://github.com/root-project/root/pull/5297:6,performance,failur,failures,6,These failures seem unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5297
https://github.com/root-project/root/pull/5297:6,reliability,fail,failures,6,These failures seem unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5297
https://github.com/root-project/root/pull/5297:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5297
https://github.com/root-project/root/pull/5302:56,deployability,build,build,56,I have cancelled the lagging `ROOT-debian10-i386/cxx14` build because this PR is only relevant for OSX.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5302
https://github.com/root-project/root/pull/5302:7,usability,cancel,cancelled,7,I have cancelled the lagging `ROOT-debian10-i386/cxx14` build because this PR is only relevant for OSX.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5302
https://github.com/root-project/root/pull/5303:95,deployability,build,build-,95,"Sorry, but I'm not sure python-dev is really **required**: https://root-forum.cern.ch/t/cannot-build-6-20-04-without-python-dev/38707/13 To verify this, try to install python-dev, then configure ROOT, switching **OFF** pyroot option, then uninstall python-dev, and finally 'make' it. And it builds. At least for me -- I performed steps I've just enumerated, and it didn't fail. -Timur",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5303
https://github.com/root-project/root/pull/5303:160,deployability,instal,install,160,"Sorry, but I'm not sure python-dev is really **required**: https://root-forum.cern.ch/t/cannot-build-6-20-04-without-python-dev/38707/13 To verify this, try to install python-dev, then configure ROOT, switching **OFF** pyroot option, then uninstall python-dev, and finally 'make' it. And it builds. At least for me -- I performed steps I've just enumerated, and it didn't fail. -Timur",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5303
https://github.com/root-project/root/pull/5303:291,deployability,build,builds,291,"Sorry, but I'm not sure python-dev is really **required**: https://root-forum.cern.ch/t/cannot-build-6-20-04-without-python-dev/38707/13 To verify this, try to install python-dev, then configure ROOT, switching **OFF** pyroot option, then uninstall python-dev, and finally 'make' it. And it builds. At least for me -- I performed steps I've just enumerated, and it didn't fail. -Timur",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5303
https://github.com/root-project/root/pull/5303:372,deployability,fail,fail,372,"Sorry, but I'm not sure python-dev is really **required**: https://root-forum.cern.ch/t/cannot-build-6-20-04-without-python-dev/38707/13 To verify this, try to install python-dev, then configure ROOT, switching **OFF** pyroot option, then uninstall python-dev, and finally 'make' it. And it builds. At least for me -- I performed steps I've just enumerated, and it didn't fail. -Timur",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5303
https://github.com/root-project/root/pull/5303:185,integrability,configur,configure,185,"Sorry, but I'm not sure python-dev is really **required**: https://root-forum.cern.ch/t/cannot-build-6-20-04-without-python-dev/38707/13 To verify this, try to install python-dev, then configure ROOT, switching **OFF** pyroot option, then uninstall python-dev, and finally 'make' it. And it builds. At least for me -- I performed steps I've just enumerated, and it didn't fail. -Timur",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5303
https://github.com/root-project/root/pull/5303:185,modifiability,configur,configure,185,"Sorry, but I'm not sure python-dev is really **required**: https://root-forum.cern.ch/t/cannot-build-6-20-04-without-python-dev/38707/13 To verify this, try to install python-dev, then configure ROOT, switching **OFF** pyroot option, then uninstall python-dev, and finally 'make' it. And it builds. At least for me -- I performed steps I've just enumerated, and it didn't fail. -Timur",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5303
https://github.com/root-project/root/pull/5303:320,performance,perform,performed,320,"Sorry, but I'm not sure python-dev is really **required**: https://root-forum.cern.ch/t/cannot-build-6-20-04-without-python-dev/38707/13 To verify this, try to install python-dev, then configure ROOT, switching **OFF** pyroot option, then uninstall python-dev, and finally 'make' it. And it builds. At least for me -- I performed steps I've just enumerated, and it didn't fail. -Timur",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5303
https://github.com/root-project/root/pull/5303:372,reliability,fail,fail,372,"Sorry, but I'm not sure python-dev is really **required**: https://root-forum.cern.ch/t/cannot-build-6-20-04-without-python-dev/38707/13 To verify this, try to install python-dev, then configure ROOT, switching **OFF** pyroot option, then uninstall python-dev, and finally 'make' it. And it builds. At least for me -- I performed steps I've just enumerated, and it didn't fail. -Timur",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5303
https://github.com/root-project/root/pull/5303:185,security,configur,configure,185,"Sorry, but I'm not sure python-dev is really **required**: https://root-forum.cern.ch/t/cannot-build-6-20-04-without-python-dev/38707/13 To verify this, try to install python-dev, then configure ROOT, switching **OFF** pyroot option, then uninstall python-dev, and finally 'make' it. And it builds. At least for me -- I performed steps I've just enumerated, and it didn't fail. -Timur",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5303
https://github.com/root-project/root/pull/5303:140,testability,verif,verify,140,"Sorry, but I'm not sure python-dev is really **required**: https://root-forum.cern.ch/t/cannot-build-6-20-04-without-python-dev/38707/13 To verify this, try to install python-dev, then configure ROOT, switching **OFF** pyroot option, then uninstall python-dev, and finally 'make' it. And it builds. At least for me -- I performed steps I've just enumerated, and it didn't fail. -Timur",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5303
https://github.com/root-project/root/pull/5303:320,usability,perform,performed,320,"Sorry, but I'm not sure python-dev is really **required**: https://root-forum.cern.ch/t/cannot-build-6-20-04-without-python-dev/38707/13 To verify this, try to install python-dev, then configure ROOT, switching **OFF** pyroot option, then uninstall python-dev, and finally 'make' it. And it builds. At least for me -- I performed steps I've just enumerated, and it didn't fail. -Timur",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5303
https://github.com/root-project/root/pull/5304:185,safety,safe,safety,185,"Can we merge this change together with calling `EnableThreadSafety` from `TTreeProcessorMT`'s constructor too? We remove the `EnableImplicitMT` from `Process`, but we ensure the thread safety in the constructor, and we make it symmetric with `TThreadExecutor`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5304
https://github.com/root-project/root/pull/5304:240,availability,redund,redundant,240,"Yes but TTreeProcessorMT is implemented in terms of TThreadExecutor for everything related to tasks. If that ever changes, and a call to EnableThreadSafety is not otherwise added, several TTreeProcessorMT tests will crash. Do you want the (redundant) EnableThreadSafety call in TTreeProcessorMT's ctor as well?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5304
https://github.com/root-project/root/pull/5304:240,deployability,redundan,redundant,240,"Yes but TTreeProcessorMT is implemented in terms of TThreadExecutor for everything related to tasks. If that ever changes, and a call to EnableThreadSafety is not otherwise added, several TTreeProcessorMT tests will crash. Do you want the (redundant) EnableThreadSafety call in TTreeProcessorMT's ctor as well?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5304
https://github.com/root-project/root/pull/5304:240,reliability,redundan,redundant,240,"Yes but TTreeProcessorMT is implemented in terms of TThreadExecutor for everything related to tasks. If that ever changes, and a call to EnableThreadSafety is not otherwise added, several TTreeProcessorMT tests will crash. Do you want the (redundant) EnableThreadSafety call in TTreeProcessorMT's ctor as well?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5304
https://github.com/root-project/root/pull/5304:205,safety,test,tests,205,"Yes but TTreeProcessorMT is implemented in terms of TThreadExecutor for everything related to tasks. If that ever changes, and a call to EnableThreadSafety is not otherwise added, several TTreeProcessorMT tests will crash. Do you want the (redundant) EnableThreadSafety call in TTreeProcessorMT's ctor as well?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5304
https://github.com/root-project/root/pull/5304:240,safety,redund,redundant,240,"Yes but TTreeProcessorMT is implemented in terms of TThreadExecutor for everything related to tasks. If that ever changes, and a call to EnableThreadSafety is not otherwise added, several TTreeProcessorMT tests will crash. Do you want the (redundant) EnableThreadSafety call in TTreeProcessorMT's ctor as well?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5304
https://github.com/root-project/root/pull/5304:205,testability,test,tests,205,"Yes but TTreeProcessorMT is implemented in terms of TThreadExecutor for everything related to tasks. If that ever changes, and a call to EnableThreadSafety is not otherwise added, several TTreeProcessorMT tests will crash. Do you want the (redundant) EnableThreadSafety call in TTreeProcessorMT's ctor as well?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5304
https://github.com/root-project/root/pull/5304:25,availability,redund,redundancy,25,"Yes, I was aware of this redundancy, but I would prefer it because:. - It makes it symmetric with `TThreadExecutor`. - The fact of TTreeProcessorMT::Process being implemented in terms of `TThreadExecutor` could change (as it has changed in the past, at the beginning we just did plain TBB there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5304
https://github.com/root-project/root/pull/5304:25,deployability,redundan,redundancy,25,"Yes, I was aware of this redundancy, but I would prefer it because:. - It makes it symmetric with `TThreadExecutor`. - The fact of TTreeProcessorMT::Process being implemented in terms of `TThreadExecutor` could change (as it has changed in the past, at the beginning we just did plain TBB there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5304
https://github.com/root-project/root/pull/5304:25,reliability,redundan,redundancy,25,"Yes, I was aware of this redundancy, but I would prefer it because:. - It makes it symmetric with `TThreadExecutor`. - The fact of TTreeProcessorMT::Process being implemented in terms of `TThreadExecutor` could change (as it has changed in the past, at the beginning we just did plain TBB there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5304
https://github.com/root-project/root/pull/5304:25,safety,redund,redundancy,25,"Yes, I was aware of this redundancy, but I would prefer it because:. - It makes it symmetric with `TThreadExecutor`. - The fact of TTreeProcessorMT::Process being implemented in terms of `TThreadExecutor` could change (as it has changed in the past, at the beginning we just did plain TBB there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5304
https://github.com/root-project/root/pull/5304:49,usability,prefer,prefer,49,"Yes, I was aware of this redundancy, but I would prefer it because:. - It makes it symmetric with `TThreadExecutor`. - The fact of TTreeProcessorMT::Process being implemented in terms of `TThreadExecutor` could change (as it has changed in the past, at the beginning we just did plain TBB there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5304
https://github.com/root-project/root/pull/5307:11,deployability,build,build,11,@phsft-bot build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5307
https://github.com/root-project/root/pull/5307:5,availability,failur,failures,5,"Test failures are unrelated, we can safely merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5307
https://github.com/root-project/root/pull/5307:5,deployability,fail,failures,5,"Test failures are unrelated, we can safely merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5307
https://github.com/root-project/root/pull/5307:5,performance,failur,failures,5,"Test failures are unrelated, we can safely merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5307
https://github.com/root-project/root/pull/5307:5,reliability,fail,failures,5,"Test failures are unrelated, we can safely merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5307
https://github.com/root-project/root/pull/5307:0,safety,Test,Test,0,"Test failures are unrelated, we can safely merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5307
https://github.com/root-project/root/pull/5307:36,safety,safe,safely,36,"Test failures are unrelated, we can safely merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5307
https://github.com/root-project/root/pull/5307:0,testability,Test,Test,0,"Test failures are unrelated, we can safely merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5307
https://github.com/root-project/root/pull/5308:96,performance,time,times,96,> Can you also add a unit test for this pythonization? The tutorials are testing this feature 5 times or so. Can obviously add an extra test that just copies code from the tutorials and runs it ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5308
https://github.com/root-project/root/pull/5308:26,safety,test,test,26,> Can you also add a unit test for this pythonization? The tutorials are testing this feature 5 times or so. Can obviously add an extra test that just copies code from the tutorials and runs it ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5308
https://github.com/root-project/root/pull/5308:73,safety,test,testing,73,> Can you also add a unit test for this pythonization? The tutorials are testing this feature 5 times or so. Can obviously add an extra test that just copies code from the tutorials and runs it ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5308
https://github.com/root-project/root/pull/5308:136,safety,test,test,136,> Can you also add a unit test for this pythonization? The tutorials are testing this feature 5 times or so. Can obviously add an extra test that just copies code from the tutorials and runs it ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5308
https://github.com/root-project/root/pull/5308:21,testability,unit,unit,21,> Can you also add a unit test for this pythonization? The tutorials are testing this feature 5 times or so. Can obviously add an extra test that just copies code from the tutorials and runs it ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5308
https://github.com/root-project/root/pull/5308:26,testability,test,test,26,> Can you also add a unit test for this pythonization? The tutorials are testing this feature 5 times or so. Can obviously add an extra test that just copies code from the tutorials and runs it ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5308
https://github.com/root-project/root/pull/5308:73,testability,test,testing,73,> Can you also add a unit test for this pythonization? The tutorials are testing this feature 5 times or so. Can obviously add an extra test that just copies code from the tutorials and runs it ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5308
https://github.com/root-project/root/pull/5308:136,testability,test,test,136,> Can you also add a unit test for this pythonization? The tutorials are testing this feature 5 times or so. Can obviously add an extra test that just copies code from the tutorials and runs it ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5308
https://github.com/root-project/root/pull/5308:0,availability,Failur,Failures,0,Failures are unrelated. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5308
https://github.com/root-project/root/pull/5308:0,deployability,Fail,Failures,0,Failures are unrelated. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5308
https://github.com/root-project/root/pull/5308:0,performance,Failur,Failures,0,Failures are unrelated. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5308
https://github.com/root-project/root/pull/5308:0,reliability,Fail,Failures,0,Failures are unrelated. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5308
https://github.com/root-project/root/pull/5309:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5309
https://github.com/root-project/root/pull/5310:7,deployability,depend,depends,7,The PR depends on #5285 to implement the `Numba` namespace lazily.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5310:7,integrability,depend,depends,7,The PR depends on #5285 to implement the `Numba` namespace lazily.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5310:7,modifiability,depend,depends,7,The PR depends on #5285 to implement the `Numba` namespace lazily.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5310:7,safety,depend,depends,7,The PR depends on #5285 to implement the `Numba` namespace lazily.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5310:7,testability,depend,depends,7,The PR depends on #5285 to implement the `Numba` namespace lazily.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5310:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5310:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5310:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5310:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5310:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5310:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5310:15,safety,review,review,15,"Hi, I'll add a review within today",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5310:15,testability,review,review,15,"Hi, I'll add a review within today",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5310:38,deployability,integr,integration,38,@etejedor Could you review the Python integration of the feature? You don't have to review all the nitty gritty details of the impl but the infrastructure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5310:140,deployability,infrastructur,infrastructure,140,@etejedor Could you review the Python integration of the feature? You don't have to review all the nitty gritty details of the impl but the infrastructure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5310:38,integrability,integr,integration,38,@etejedor Could you review the Python integration of the feature? You don't have to review all the nitty gritty details of the impl but the infrastructure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5310:38,interoperability,integr,integration,38,@etejedor Could you review the Python integration of the feature? You don't have to review all the nitty gritty details of the impl but the infrastructure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5310:38,modifiability,integr,integration,38,@etejedor Could you review the Python integration of the feature? You don't have to review all the nitty gritty details of the impl but the infrastructure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5310:38,reliability,integr,integration,38,@etejedor Could you review the Python integration of the feature? You don't have to review all the nitty gritty details of the impl but the infrastructure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5310:20,safety,review,review,20,@etejedor Could you review the Python integration of the feature? You don't have to review all the nitty gritty details of the impl but the infrastructure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5310:84,safety,review,review,84,@etejedor Could you review the Python integration of the feature? You don't have to review all the nitty gritty details of the impl but the infrastructure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5310:38,security,integr,integration,38,@etejedor Could you review the Python integration of the feature? You don't have to review all the nitty gritty details of the impl but the infrastructure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5310:20,testability,review,review,20,@etejedor Could you review the Python integration of the feature? You don't have to review all the nitty gritty details of the impl but the infrastructure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5310:38,testability,integr,integration,38,@etejedor Could you review the Python integration of the feature? You don't have to review all the nitty gritty details of the impl but the infrastructure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5310:84,testability,review,review,84,@etejedor Could you review the Python integration of the feature? You don't have to review all the nitty gritty details of the impl but the infrastructure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5312:556,availability,reliab,reliable,556,"Olivier, provided PR is only workaround, which can fail - especially if so many objects destroyed before `TRatioPlot` destructor. I recommend in addition use `TObject::RecursiveRemove(TObject *)` functionality. `TRatioPlot` already registered in list of cleanups - see `gROOT->GetListOfCleanups()->Add(this);` in several constructors. . One need to call it also for default constructor - which used in case of I/O. Then in `TRatioPlot::RecursiveRemove(TObject *)` one can catch all objects which are destroyed with the pad list of primitives. This is more reliable solution. Something like:. ```. void TRatioPlot::RecursiveRemove(TObject *obj) . {. if (obj == fSharedXAxis) fSharedXAxis = nullptr; else. if (obj == fUpperGXaxis) fUpperGXaxis = nullptr; else . ... }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5312
https://github.com/root-project/root/pull/5312:51,deployability,fail,fail,51,"Olivier, provided PR is only workaround, which can fail - especially if so many objects destroyed before `TRatioPlot` destructor. I recommend in addition use `TObject::RecursiveRemove(TObject *)` functionality. `TRatioPlot` already registered in list of cleanups - see `gROOT->GetListOfCleanups()->Add(this);` in several constructors. . One need to call it also for default constructor - which used in case of I/O. Then in `TRatioPlot::RecursiveRemove(TObject *)` one can catch all objects which are destroyed with the pad list of primitives. This is more reliable solution. Something like:. ```. void TRatioPlot::RecursiveRemove(TObject *obj) . {. if (obj == fSharedXAxis) fSharedXAxis = nullptr; else. if (obj == fUpperGXaxis) fUpperGXaxis = nullptr; else . ... }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5312
https://github.com/root-project/root/pull/5312:410,performance,I/O,I/O,410,"Olivier, provided PR is only workaround, which can fail - especially if so many objects destroyed before `TRatioPlot` destructor. I recommend in addition use `TObject::RecursiveRemove(TObject *)` functionality. `TRatioPlot` already registered in list of cleanups - see `gROOT->GetListOfCleanups()->Add(this);` in several constructors. . One need to call it also for default constructor - which used in case of I/O. Then in `TRatioPlot::RecursiveRemove(TObject *)` one can catch all objects which are destroyed with the pad list of primitives. This is more reliable solution. Something like:. ```. void TRatioPlot::RecursiveRemove(TObject *obj) . {. if (obj == fSharedXAxis) fSharedXAxis = nullptr; else. if (obj == fUpperGXaxis) fUpperGXaxis = nullptr; else . ... }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5312
https://github.com/root-project/root/pull/5312:51,reliability,fail,fail,51,"Olivier, provided PR is only workaround, which can fail - especially if so many objects destroyed before `TRatioPlot` destructor. I recommend in addition use `TObject::RecursiveRemove(TObject *)` functionality. `TRatioPlot` already registered in list of cleanups - see `gROOT->GetListOfCleanups()->Add(this);` in several constructors. . One need to call it also for default constructor - which used in case of I/O. Then in `TRatioPlot::RecursiveRemove(TObject *)` one can catch all objects which are destroyed with the pad list of primitives. This is more reliable solution. Something like:. ```. void TRatioPlot::RecursiveRemove(TObject *obj) . {. if (obj == fSharedXAxis) fSharedXAxis = nullptr; else. if (obj == fUpperGXaxis) fUpperGXaxis = nullptr; else . ... }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5312
https://github.com/root-project/root/pull/5312:556,reliability,reliab,reliable,556,"Olivier, provided PR is only workaround, which can fail - especially if so many objects destroyed before `TRatioPlot` destructor. I recommend in addition use `TObject::RecursiveRemove(TObject *)` functionality. `TRatioPlot` already registered in list of cleanups - see `gROOT->GetListOfCleanups()->Add(this);` in several constructors. . One need to call it also for default constructor - which used in case of I/O. Then in `TRatioPlot::RecursiveRemove(TObject *)` one can catch all objects which are destroyed with the pad list of primitives. This is more reliable solution. Something like:. ```. void TRatioPlot::RecursiveRemove(TObject *obj) . {. if (obj == fSharedXAxis) fSharedXAxis = nullptr; else. if (obj == fUpperGXaxis) fUpperGXaxis = nullptr; else . ... }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5312
https://github.com/root-project/root/pull/5312:57,safety,compl,completely,57,"Thanks Sergey, I'll check this RecursiveRemove. I am not completely sure how to do it but I'll try to find out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5312
https://github.com/root-project/root/pull/5312:57,security,compl,completely,57,"Thanks Sergey, I'll check this RecursiveRemove. I am not completely sure how to do it but I'll try to find out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5312
https://github.com/root-project/root/pull/5312:63,usability,help,help,63,"Hello Sergey, Actually I am not sure the recursive remove will help in this case because `TRatioPlot` creates object in the `Pad` itself. That's a bit special. The objects are not stored in some list inside",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5312
https://github.com/root-project/root/pull/5312:56,safety,Test,TestBit,56,"In my mind, one should use both: `RecursiveRemove` and `TestBit(kNotDeleted)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5312
https://github.com/root-project/root/pull/5312:56,testability,Test,TestBit,56,"In my mind, one should use both: `RecursiveRemove` and `TestBit(kNotDeleted)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5312
https://github.com/root-project/root/pull/5312:136,deployability,patch,patch,136,I do not see a such thing set elsewhere in the grapf2d part except for the pad itself. I guess for the time being I will stay with this patch as it is.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5312
https://github.com/root-project/root/pull/5312:103,performance,time,time,103,I do not see a such thing set elsewhere in the grapf2d part except for the pad itself. I guess for the time being I will stay with this patch as it is.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5312
https://github.com/root-project/root/pull/5312:60,safety,except,except,60,I do not see a such thing set elsewhere in the grapf2d part except for the pad itself. I guess for the time being I will stay with this patch as it is.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5312
https://github.com/root-project/root/pull/5312:136,safety,patch,patch,136,I do not see a such thing set elsewhere in the grapf2d part except for the pad itself. I guess for the time being I will stay with this patch as it is.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5312
https://github.com/root-project/root/pull/5312:136,security,patch,patch,136,I do not see a such thing set elsewhere in the grapf2d part except for the pad itself. I guess for the time being I will stay with this patch as it is.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5312
https://github.com/root-project/root/pull/5312:24,deployability,patch,patch,24,"> I will stay with this patch as it is. No problem. . Just want to say, that `RecursiveRemove` was introduced exactly for such applications. Now it has to work in most cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5312
https://github.com/root-project/root/pull/5312:24,safety,patch,patch,24,"> I will stay with this patch as it is. No problem. . Just want to say, that `RecursiveRemove` was introduced exactly for such applications. Now it has to work in most cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5312
https://github.com/root-project/root/pull/5312:24,security,patch,patch,24,"> I will stay with this patch as it is. No problem. . Just want to say, that `RecursiveRemove` was introduced exactly for such applications. Now it has to work in most cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5312
https://github.com/root-project/root/pull/5312:86,modifiability,reu,reused,86,Relying on kNotDeleted is brittled (can return the wrong information is the memory is reused). Did you consider implementing TRatioPlot::RecursiveRemove that compare the argument to any of the pointee that it has (and set them to nullptr)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5312
https://github.com/root-project/root/pull/5312:76,performance,memor,memory,76,Relying on kNotDeleted is brittled (can return the wrong information is the memory is reused). Did you consider implementing TRatioPlot::RecursiveRemove that compare the argument to any of the pointee that it has (and set them to nullptr)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5312
https://github.com/root-project/root/pull/5312:76,usability,memor,memory,76,Relying on kNotDeleted is brittled (can return the wrong information is the memory is reused). Did you consider implementing TRatioPlot::RecursiveRemove that compare the argument to any of the pointee that it has (and set them to nullptr)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5312
https://github.com/root-project/root/pull/5313:30,deployability,build,build,30,I have manually cancelled the build on ROOT-debian10-i386/cxx14 as the PR is only relevant for osx and this machine has a huge backlog.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5313
https://github.com/root-project/root/pull/5313:16,usability,cancel,cancelled,16,I have manually cancelled the build on ROOT-debian10-i386/cxx14 as the PR is only relevant for osx and this machine has a huge backlog.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5313
https://github.com/root-project/root/pull/5316:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5316
https://github.com/root-project/root/pull/5316:46,safety,test,tests,46,@pcanal What's that thing about not excluding tests? Should that be our new default? Why isn't this the default?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5316
https://github.com/root-project/root/pull/5316:46,testability,test,tests,46,@pcanal What's that thing about not excluding tests? Should that be our new default? Why isn't this the default?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5316
https://github.com/root-project/root/pull/5319:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5319
https://github.com/root-project/root/pull/5319:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5319
https://github.com/root-project/root/pull/5319:96,deployability,stack,stack,96,"By switching the TStreamerSTL from being modified then stored to. storing a copy created on the stack, the kIsOnHeap bit is change and since. that information is store, the onfile representation (and thus after compression. size) change a bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5319
https://github.com/root-project/root/pull/5319:41,security,modif,modified,41,"By switching the TStreamerSTL from being modified then stored to. storing a copy created on the stack, the kIsOnHeap bit is change and since. that information is store, the onfile representation (and thus after compression. size) change a bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5319
https://github.com/root-project/root/pull/5319:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5319
https://github.com/root-project/root/pull/5322:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5322
https://github.com/root-project/root/pull/5322:0,availability,Failur,Failures,0,"Failures are unrelated to current changes, so I am merging PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5322
https://github.com/root-project/root/pull/5322:0,deployability,Fail,Failures,0,"Failures are unrelated to current changes, so I am merging PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5322
https://github.com/root-project/root/pull/5322:26,energy efficiency,current,current,26,"Failures are unrelated to current changes, so I am merging PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5322
https://github.com/root-project/root/pull/5322:0,performance,Failur,Failures,0,"Failures are unrelated to current changes, so I am merging PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5322
https://github.com/root-project/root/pull/5322:0,reliability,Fail,Failures,0,"Failures are unrelated to current changes, so I am merging PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5322
https://github.com/root-project/root/pull/5324:129,deployability,continu,continue,129,"As far as the strategy with this MR is concerned, I suggest that we cherry-pick the first commit into master. Afterwards, I will continue working on this branch to refactor a few things in accordance with the evolution of the standard as discussed in HS3. Then, when the proposal of the Standard has converged to something sufficiently stable, we can rebase this branch and then merge squashing all commits. Does this sound resonable?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5324
https://github.com/root-project/root/pull/5324:226,interoperability,standard,standard,226,"As far as the strategy with this MR is concerned, I suggest that we cherry-pick the first commit into master. Afterwards, I will continue working on this branch to refactor a few things in accordance with the evolution of the standard as discussed in HS3. Then, when the proposal of the Standard has converged to something sufficiently stable, we can rebase this branch and then merge squashing all commits. Does this sound resonable?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5324
https://github.com/root-project/root/pull/5324:287,interoperability,Standard,Standard,287,"As far as the strategy with this MR is concerned, I suggest that we cherry-pick the first commit into master. Afterwards, I will continue working on this branch to refactor a few things in accordance with the evolution of the standard as discussed in HS3. Then, when the proposal of the Standard has converged to something sufficiently stable, we can rebase this branch and then merge squashing all commits. Does this sound resonable?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5324
https://github.com/root-project/root/pull/5324:39,modifiability,concern,concerned,39,"As far as the strategy with this MR is concerned, I suggest that we cherry-pick the first commit into master. Afterwards, I will continue working on this branch to refactor a few things in accordance with the evolution of the standard as discussed in HS3. Then, when the proposal of the Standard has converged to something sufficiently stable, we can rebase this branch and then merge squashing all commits. Does this sound resonable?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5324
https://github.com/root-project/root/pull/5324:164,modifiability,refact,refactor,164,"As far as the strategy with this MR is concerned, I suggest that we cherry-pick the first commit into master. Afterwards, I will continue working on this branch to refactor a few things in accordance with the evolution of the standard as discussed in HS3. Then, when the proposal of the Standard has converged to something sufficiently stable, we can rebase this branch and then merge squashing all commits. Does this sound resonable?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5324
https://github.com/root-project/root/pull/5324:164,performance,refactor,refactor,164,"As far as the strategy with this MR is concerned, I suggest that we cherry-pick the first commit into master. Afterwards, I will continue working on this branch to refactor a few things in accordance with the evolution of the standard as discussed in HS3. Then, when the proposal of the Standard has converged to something sufficiently stable, we can rebase this branch and then merge squashing all commits. Does this sound resonable?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5324
https://github.com/root-project/root/pull/5324:408,reliability,Doe,Does,408,"As far as the strategy with this MR is concerned, I suggest that we cherry-pick the first commit into master. Afterwards, I will continue working on this branch to refactor a few things in accordance with the evolution of the standard as discussed in HS3. Then, when the proposal of the Standard has converged to something sufficiently stable, we can rebase this branch and then merge squashing all commits. Does this sound resonable?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5324
https://github.com/root-project/root/pull/5324:39,testability,concern,concerned,39,"As far as the strategy with this MR is concerned, I suggest that we cherry-pick the first commit into master. Afterwards, I will continue working on this branch to refactor a few things in accordance with the evolution of the standard as discussed in HS3. Then, when the proposal of the Standard has converged to something sufficiently stable, we can rebase this branch and then merge squashing all commits. Does this sound resonable?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5324
https://github.com/root-project/root/pull/5324:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5324
https://github.com/root-project/root/pull/5324:131,deployability,continu,continue,131,"> As far as the strategy with this MR is concerned, I suggest that we cherry-pick the first commit into master. Afterwards, I will continue working on this branch to refactor a few things in accordance with the evolution of the standard as discussed in HS3. Then, when the proposal of the Standard has converged to something sufficiently stable, we can rebase this branch and then merge squashing all commits. Does this sound resonable? Sorry, I didn't reply. Cherry-picking sounds fine. You could convert this PR to a draft until things have stabilised.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5324
https://github.com/root-project/root/pull/5324:228,interoperability,standard,standard,228,"> As far as the strategy with this MR is concerned, I suggest that we cherry-pick the first commit into master. Afterwards, I will continue working on this branch to refactor a few things in accordance with the evolution of the standard as discussed in HS3. Then, when the proposal of the Standard has converged to something sufficiently stable, we can rebase this branch and then merge squashing all commits. Does this sound resonable? Sorry, I didn't reply. Cherry-picking sounds fine. You could convert this PR to a draft until things have stabilised.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5324
https://github.com/root-project/root/pull/5324:289,interoperability,Standard,Standard,289,"> As far as the strategy with this MR is concerned, I suggest that we cherry-pick the first commit into master. Afterwards, I will continue working on this branch to refactor a few things in accordance with the evolution of the standard as discussed in HS3. Then, when the proposal of the Standard has converged to something sufficiently stable, we can rebase this branch and then merge squashing all commits. Does this sound resonable? Sorry, I didn't reply. Cherry-picking sounds fine. You could convert this PR to a draft until things have stabilised.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5324
https://github.com/root-project/root/pull/5324:41,modifiability,concern,concerned,41,"> As far as the strategy with this MR is concerned, I suggest that we cherry-pick the first commit into master. Afterwards, I will continue working on this branch to refactor a few things in accordance with the evolution of the standard as discussed in HS3. Then, when the proposal of the Standard has converged to something sufficiently stable, we can rebase this branch and then merge squashing all commits. Does this sound resonable? Sorry, I didn't reply. Cherry-picking sounds fine. You could convert this PR to a draft until things have stabilised.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5324
https://github.com/root-project/root/pull/5324:166,modifiability,refact,refactor,166,"> As far as the strategy with this MR is concerned, I suggest that we cherry-pick the first commit into master. Afterwards, I will continue working on this branch to refactor a few things in accordance with the evolution of the standard as discussed in HS3. Then, when the proposal of the Standard has converged to something sufficiently stable, we can rebase this branch and then merge squashing all commits. Does this sound resonable? Sorry, I didn't reply. Cherry-picking sounds fine. You could convert this PR to a draft until things have stabilised.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5324
https://github.com/root-project/root/pull/5324:166,performance,refactor,refactor,166,"> As far as the strategy with this MR is concerned, I suggest that we cherry-pick the first commit into master. Afterwards, I will continue working on this branch to refactor a few things in accordance with the evolution of the standard as discussed in HS3. Then, when the proposal of the Standard has converged to something sufficiently stable, we can rebase this branch and then merge squashing all commits. Does this sound resonable? Sorry, I didn't reply. Cherry-picking sounds fine. You could convert this PR to a draft until things have stabilised.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5324
https://github.com/root-project/root/pull/5324:410,reliability,Doe,Does,410,"> As far as the strategy with this MR is concerned, I suggest that we cherry-pick the first commit into master. Afterwards, I will continue working on this branch to refactor a few things in accordance with the evolution of the standard as discussed in HS3. Then, when the proposal of the Standard has converged to something sufficiently stable, we can rebase this branch and then merge squashing all commits. Does this sound resonable? Sorry, I didn't reply. Cherry-picking sounds fine. You could convert this PR to a draft until things have stabilised.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5324
https://github.com/root-project/root/pull/5324:543,reliability,stabil,stabilised,543,"> As far as the strategy with this MR is concerned, I suggest that we cherry-pick the first commit into master. Afterwards, I will continue working on this branch to refactor a few things in accordance with the evolution of the standard as discussed in HS3. Then, when the proposal of the Standard has converged to something sufficiently stable, we can rebase this branch and then merge squashing all commits. Does this sound resonable? Sorry, I didn't reply. Cherry-picking sounds fine. You could convert this PR to a draft until things have stabilised.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5324
https://github.com/root-project/root/pull/5324:41,testability,concern,concerned,41,"> As far as the strategy with this MR is concerned, I suggest that we cherry-pick the first commit into master. Afterwards, I will continue working on this branch to refactor a few things in accordance with the evolution of the standard as discussed in HS3. Then, when the proposal of the Standard has converged to something sufficiently stable, we can rebase this branch and then merge squashing all commits. Does this sound resonable? Sorry, I didn't reply. Cherry-picking sounds fine. You could convert this PR to a draft until things have stabilised.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5324
https://github.com/root-project/root/pull/5324:28,safety,review,reviewers,28,Top right below the list of reviewers:. `Still in progress? Convert to draft`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5324
https://github.com/root-project/root/pull/5324:28,testability,review,reviewers,28,Top right below the list of reviewers:. `Still in progress? Convert to draft`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5324
https://github.com/root-project/root/pull/5324:50,usability,progress,progress,50,Top right below the list of reviewers:. `Still in progress? Convert to draft`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5324
https://github.com/root-project/root/pull/5324:106,modifiability,extens,extensions,106,Thanks. Will you do the cherry-picking to master already now then so that this MR can focus on the actual extensions?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5324
https://github.com/root-project/root/pull/5324:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5324
https://github.com/root-project/root/pull/5326:9,interoperability,conflict,conflicts,9,"Yes some conflicts will need to be fixed but the ""resolve conflicts"" button is not active yet",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5326
https://github.com/root-project/root/pull/5326:58,interoperability,conflict,conflicts,58,"Yes some conflicts will need to be fixed but the ""resolve conflicts"" button is not active yet",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5326
https://github.com/root-project/root/pull/5329:370,availability,failur,failures,370,"@etejedor thanks for taking a look! 1. correct. making concurrent usage of different RDFs from different threads safe is the topic of the recently created [ROOT-10694](https://sft.its.cern.ch/jira/browse/ROOT-10694). 2. avoiding re-jitting across computation graphs needs #5356 , but the general machinery is exercised by current tests (demonstrated by the current test failures) and tutorials (results I showed in the PPP were on df104, df105, df106). What kind of test would you like to see? (i.e. what should it test exactly?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:370,deployability,fail,failures,370,"@etejedor thanks for taking a look! 1. correct. making concurrent usage of different RDFs from different threads safe is the topic of the recently created [ROOT-10694](https://sft.its.cern.ch/jira/browse/ROOT-10694). 2. avoiding re-jitting across computation graphs needs #5356 , but the general machinery is exercised by current tests (demonstrated by the current test failures) and tutorials (results I showed in the PPP were on df104, df105, df106). What kind of test would you like to see? (i.e. what should it test exactly?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:322,energy efficiency,current,current,322,"@etejedor thanks for taking a look! 1. correct. making concurrent usage of different RDFs from different threads safe is the topic of the recently created [ROOT-10694](https://sft.its.cern.ch/jira/browse/ROOT-10694). 2. avoiding re-jitting across computation graphs needs #5356 , but the general machinery is exercised by current tests (demonstrated by the current test failures) and tutorials (results I showed in the PPP were on df104, df105, df106). What kind of test would you like to see? (i.e. what should it test exactly?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:357,energy efficiency,current,current,357,"@etejedor thanks for taking a look! 1. correct. making concurrent usage of different RDFs from different threads safe is the topic of the recently created [ROOT-10694](https://sft.its.cern.ch/jira/browse/ROOT-10694). 2. avoiding re-jitting across computation graphs needs #5356 , but the general machinery is exercised by current tests (demonstrated by the current test failures) and tutorials (results I showed in the PPP were on df104, df105, df106). What kind of test would you like to see? (i.e. what should it test exactly?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:125,integrability,topic,topic,125,"@etejedor thanks for taking a look! 1. correct. making concurrent usage of different RDFs from different threads safe is the topic of the recently created [ROOT-10694](https://sft.its.cern.ch/jira/browse/ROOT-10694). 2. avoiding re-jitting across computation graphs needs #5356 , but the general machinery is exercised by current tests (demonstrated by the current test failures) and tutorials (results I showed in the PPP were on df104, df105, df106). What kind of test would you like to see? (i.e. what should it test exactly?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:55,performance,concurren,concurrent,55,"@etejedor thanks for taking a look! 1. correct. making concurrent usage of different RDFs from different threads safe is the topic of the recently created [ROOT-10694](https://sft.its.cern.ch/jira/browse/ROOT-10694). 2. avoiding re-jitting across computation graphs needs #5356 , but the general machinery is exercised by current tests (demonstrated by the current test failures) and tutorials (results I showed in the PPP were on df104, df105, df106). What kind of test would you like to see? (i.e. what should it test exactly?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:370,performance,failur,failures,370,"@etejedor thanks for taking a look! 1. correct. making concurrent usage of different RDFs from different threads safe is the topic of the recently created [ROOT-10694](https://sft.its.cern.ch/jira/browse/ROOT-10694). 2. avoiding re-jitting across computation graphs needs #5356 , but the general machinery is exercised by current tests (demonstrated by the current test failures) and tutorials (results I showed in the PPP were on df104, df105, df106). What kind of test would you like to see? (i.e. what should it test exactly?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:370,reliability,fail,failures,370,"@etejedor thanks for taking a look! 1. correct. making concurrent usage of different RDFs from different threads safe is the topic of the recently created [ROOT-10694](https://sft.its.cern.ch/jira/browse/ROOT-10694). 2. avoiding re-jitting across computation graphs needs #5356 , but the general machinery is exercised by current tests (demonstrated by the current test failures) and tutorials (results I showed in the PPP were on df104, df105, df106). What kind of test would you like to see? (i.e. what should it test exactly?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:113,safety,safe,safe,113,"@etejedor thanks for taking a look! 1. correct. making concurrent usage of different RDFs from different threads safe is the topic of the recently created [ROOT-10694](https://sft.its.cern.ch/jira/browse/ROOT-10694). 2. avoiding re-jitting across computation graphs needs #5356 , but the general machinery is exercised by current tests (demonstrated by the current test failures) and tutorials (results I showed in the PPP were on df104, df105, df106). What kind of test would you like to see? (i.e. what should it test exactly?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:220,safety,avoid,avoiding,220,"@etejedor thanks for taking a look! 1. correct. making concurrent usage of different RDFs from different threads safe is the topic of the recently created [ROOT-10694](https://sft.its.cern.ch/jira/browse/ROOT-10694). 2. avoiding re-jitting across computation graphs needs #5356 , but the general machinery is exercised by current tests (demonstrated by the current test failures) and tutorials (results I showed in the PPP were on df104, df105, df106). What kind of test would you like to see? (i.e. what should it test exactly?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:330,safety,test,tests,330,"@etejedor thanks for taking a look! 1. correct. making concurrent usage of different RDFs from different threads safe is the topic of the recently created [ROOT-10694](https://sft.its.cern.ch/jira/browse/ROOT-10694). 2. avoiding re-jitting across computation graphs needs #5356 , but the general machinery is exercised by current tests (demonstrated by the current test failures) and tutorials (results I showed in the PPP were on df104, df105, df106). What kind of test would you like to see? (i.e. what should it test exactly?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:365,safety,test,test,365,"@etejedor thanks for taking a look! 1. correct. making concurrent usage of different RDFs from different threads safe is the topic of the recently created [ROOT-10694](https://sft.its.cern.ch/jira/browse/ROOT-10694). 2. avoiding re-jitting across computation graphs needs #5356 , but the general machinery is exercised by current tests (demonstrated by the current test failures) and tutorials (results I showed in the PPP were on df104, df105, df106). What kind of test would you like to see? (i.e. what should it test exactly?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:466,safety,test,test,466,"@etejedor thanks for taking a look! 1. correct. making concurrent usage of different RDFs from different threads safe is the topic of the recently created [ROOT-10694](https://sft.its.cern.ch/jira/browse/ROOT-10694). 2. avoiding re-jitting across computation graphs needs #5356 , but the general machinery is exercised by current tests (demonstrated by the current test failures) and tutorials (results I showed in the PPP were on df104, df105, df106). What kind of test would you like to see? (i.e. what should it test exactly?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:515,safety,test,test,515,"@etejedor thanks for taking a look! 1. correct. making concurrent usage of different RDFs from different threads safe is the topic of the recently created [ROOT-10694](https://sft.its.cern.ch/jira/browse/ROOT-10694). 2. avoiding re-jitting across computation graphs needs #5356 , but the general machinery is exercised by current tests (demonstrated by the current test failures) and tutorials (results I showed in the PPP were on df104, df105, df106). What kind of test would you like to see? (i.e. what should it test exactly?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:330,testability,test,tests,330,"@etejedor thanks for taking a look! 1. correct. making concurrent usage of different RDFs from different threads safe is the topic of the recently created [ROOT-10694](https://sft.its.cern.ch/jira/browse/ROOT-10694). 2. avoiding re-jitting across computation graphs needs #5356 , but the general machinery is exercised by current tests (demonstrated by the current test failures) and tutorials (results I showed in the PPP were on df104, df105, df106). What kind of test would you like to see? (i.e. what should it test exactly?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:365,testability,test,test,365,"@etejedor thanks for taking a look! 1. correct. making concurrent usage of different RDFs from different threads safe is the topic of the recently created [ROOT-10694](https://sft.its.cern.ch/jira/browse/ROOT-10694). 2. avoiding re-jitting across computation graphs needs #5356 , but the general machinery is exercised by current tests (demonstrated by the current test failures) and tutorials (results I showed in the PPP were on df104, df105, df106). What kind of test would you like to see? (i.e. what should it test exactly?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:466,testability,test,test,466,"@etejedor thanks for taking a look! 1. correct. making concurrent usage of different RDFs from different threads safe is the topic of the recently created [ROOT-10694](https://sft.its.cern.ch/jira/browse/ROOT-10694). 2. avoiding re-jitting across computation graphs needs #5356 , but the general machinery is exercised by current tests (demonstrated by the current test failures) and tutorials (results I showed in the PPP were on df104, df105, df106). What kind of test would you like to see? (i.e. what should it test exactly?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:515,testability,test,test,515,"@etejedor thanks for taking a look! 1. correct. making concurrent usage of different RDFs from different threads safe is the topic of the recently created [ROOT-10694](https://sft.its.cern.ch/jira/browse/ROOT-10694). 2. avoiding re-jitting across computation graphs needs #5356 , but the general machinery is exercised by current tests (demonstrated by the current test failures) and tutorials (results I showed in the PPP were on df104, df105, df106). What kind of test would you like to see? (i.e. what should it test exactly?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:251,modifiability,reu,reuse,251,"I was thinking of something like this:. https://eguiraud.web.cern.ch/eguiraud/decks/20200416_reusing_rdf_jitted_lambdas_ppp/#/4. but booking all the histos before calling `GetValue` on one of them. I.e. some dedicated test with several RDFs and where reuse across RDFs clearly happens (of course other tests might exercise it to some degree already). Perhaps after merging #5356 , then.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:218,safety,test,test,218,"I was thinking of something like this:. https://eguiraud.web.cern.ch/eguiraud/decks/20200416_reusing_rdf_jitted_lambdas_ppp/#/4. but booking all the histos before calling `GetValue` on one of them. I.e. some dedicated test with several RDFs and where reuse across RDFs clearly happens (of course other tests might exercise it to some degree already). Perhaps after merging #5356 , then.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:302,safety,test,tests,302,"I was thinking of something like this:. https://eguiraud.web.cern.ch/eguiraud/decks/20200416_reusing_rdf_jitted_lambdas_ppp/#/4. but booking all the histos before calling `GetValue` on one of them. I.e. some dedicated test with several RDFs and where reuse across RDFs clearly happens (of course other tests might exercise it to some degree already). Perhaps after merging #5356 , then.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:218,testability,test,test,218,"I was thinking of something like this:. https://eguiraud.web.cern.ch/eguiraud/decks/20200416_reusing_rdf_jitted_lambdas_ppp/#/4. but booking all the histos before calling `GetValue` on one of them. I.e. some dedicated test with several RDFs and where reuse across RDFs clearly happens (of course other tests might exercise it to some degree already). Perhaps after merging #5356 , then.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:302,testability,test,tests,302,"I was thinking of something like this:. https://eguiraud.web.cern.ch/eguiraud/decks/20200416_reusing_rdf_jitted_lambdas_ppp/#/4. but booking all the histos before calling `GetValue` on one of them. I.e. some dedicated test with several RDFs and where reuse across RDFs clearly happens (of course other tests might exercise it to some degree already). Perhaps after merging #5356 , then.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:269,usability,clear,clearly,269,"I was thinking of something like this:. https://eguiraud.web.cern.ch/eguiraud/decks/20200416_reusing_rdf_jitted_lambdas_ppp/#/4. but booking all the histos before calling `GetValue` on one of them. I.e. some dedicated test with several RDFs and where reuse across RDFs clearly happens (of course other tests might exercise it to some degree already). Perhaps after merging #5356 , then.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:132,performance,perform,performance,132,"But we can't _test_ that it definitely happens (and both tutorials and tests definitely exercise the feature already). This being a performance improvement rather than a bugfix, I would suggest we add a benchmark to rootbench rather than a test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:71,safety,test,tests,71,"But we can't _test_ that it definitely happens (and both tutorials and tests definitely exercise the feature already). This being a performance improvement rather than a bugfix, I would suggest we add a benchmark to rootbench rather than a test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:240,safety,test,test,240,"But we can't _test_ that it definitely happens (and both tutorials and tests definitely exercise the feature already). This being a performance improvement rather than a bugfix, I would suggest we add a benchmark to rootbench rather than a test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:71,testability,test,tests,71,"But we can't _test_ that it definitely happens (and both tutorials and tests definitely exercise the feature already). This being a performance improvement rather than a bugfix, I would suggest we add a benchmark to rootbench rather than a test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:240,testability,test,test,240,"But we can't _test_ that it definitely happens (and both tutorials and tests definitely exercise the feature already). This being a performance improvement rather than a bugfix, I would suggest we add a benchmark to rootbench rather than a test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:132,usability,perform,performance,132,"But we can't _test_ that it definitely happens (and both tutorials and tests definitely exercise the feature already). This being a performance improvement rather than a bugfix, I would suggest we add a benchmark to rootbench rather than a test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:210,energy efficiency,current,current,210,"> But we can't test that it definitely happens . I agree, but at least you can know whether it breaks. Pushing the machinery with a dedicated test wouldn't hurt. But if you are happy with the coverage that the current tests already do, forget about my comment then.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:15,safety,test,test,15,"> But we can't test that it definitely happens . I agree, but at least you can know whether it breaks. Pushing the machinery with a dedicated test wouldn't hurt. But if you are happy with the coverage that the current tests already do, forget about my comment then.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:142,safety,test,test,142,"> But we can't test that it definitely happens . I agree, but at least you can know whether it breaks. Pushing the machinery with a dedicated test wouldn't hurt. But if you are happy with the coverage that the current tests already do, forget about my comment then.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:218,safety,test,tests,218,"> But we can't test that it definitely happens . I agree, but at least you can know whether it breaks. Pushing the machinery with a dedicated test wouldn't hurt. But if you are happy with the coverage that the current tests already do, forget about my comment then.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:15,testability,test,test,15,"> But we can't test that it definitely happens . I agree, but at least you can know whether it breaks. Pushing the machinery with a dedicated test wouldn't hurt. But if you are happy with the coverage that the current tests already do, forget about my comment then.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:142,testability,test,test,142,"> But we can't test that it definitely happens . I agree, but at least you can know whether it breaks. Pushing the machinery with a dedicated test wouldn't hurt. But if you are happy with the coverage that the current tests already do, forget about my comment then.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:192,testability,coverag,coverage,192,"> But we can't test that it definitely happens . I agree, but at least you can know whether it breaks. Pushing the machinery with a dedicated test wouldn't hurt. But if you are happy with the coverage that the current tests already do, forget about my comment then.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:218,testability,test,tests,218,"> But we can't test that it definitely happens . I agree, but at least you can know whether it breaks. Pushing the machinery with a dedicated test wouldn't hurt. But if you are happy with the coverage that the current tests already do, forget about my comment then.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5334:56,safety,test,test,56,"@stwunsch @maxgalli please have a look, there is also a test for this here: https://github.com/root-project/roottest/pull/486 . @maxgalli please review especially the changes related to multi-python in both commits.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5334
https://github.com/root-project/root/pull/5334:145,safety,review,review,145,"@stwunsch @maxgalli please have a look, there is also a test for this here: https://github.com/root-project/roottest/pull/486 . @maxgalli please review especially the changes related to multi-python in both commits.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5334
https://github.com/root-project/root/pull/5334:56,testability,test,test,56,"@stwunsch @maxgalli please have a look, there is also a test for this here: https://github.com/root-project/roottest/pull/486 . @maxgalli please review especially the changes related to multi-python in both commits.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5334
https://github.com/root-project/root/pull/5334:145,testability,review,review,145,"@stwunsch @maxgalli please have a look, there is also a test for this here: https://github.com/root-project/roottest/pull/486 . @maxgalli please review especially the changes related to multi-python in both commits.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5334
https://github.com/root-project/root/pull/5334:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5334
https://github.com/root-project/root/pull/5339:41,deployability,build,builds,41,Let's merge that before the next nightly builds.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5339
https://github.com/root-project/root/pull/5340:16,availability,failur,failure,16,Uhm @pcanal the failure in `projectroot.roottest.root.tree.friend.roottest_root_tree_friend_make` is real. Do you maybe have an idea of what it could be? Otherwise I'll throw valgrind at it,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5340
https://github.com/root-project/root/pull/5340:16,deployability,fail,failure,16,Uhm @pcanal the failure in `projectroot.roottest.root.tree.friend.roottest_root_tree_friend_make` is real. Do you maybe have an idea of what it could be? Otherwise I'll throw valgrind at it,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5340
https://github.com/root-project/root/pull/5340:16,performance,failur,failure,16,Uhm @pcanal the failure in `projectroot.roottest.root.tree.friend.roottest_root_tree_friend_make` is real. Do you maybe have an idea of what it could be? Otherwise I'll throw valgrind at it,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5340
https://github.com/root-project/root/pull/5340:16,reliability,fail,failure,16,Uhm @pcanal the failure in `projectroot.roottest.root.tree.friend.roottest_root_tree_friend_make` is real. Do you maybe have an idea of what it could be? Otherwise I'll throw valgrind at it,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5340
https://github.com/root-project/root/pull/5340:17,availability,failur,failure,17,I think the test failure is a bug that was already there and was made noisy by these changes. #5489 fixes that bug and when merged it should make this PR green.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5340
https://github.com/root-project/root/pull/5340:17,deployability,fail,failure,17,I think the test failure is a bug that was already there and was made noisy by these changes. #5489 fixes that bug and when merged it should make this PR green.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5340
https://github.com/root-project/root/pull/5340:154,energy efficiency,green,green,154,I think the test failure is a bug that was already there and was made noisy by these changes. #5489 fixes that bug and when merged it should make this PR green.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5340
https://github.com/root-project/root/pull/5340:17,performance,failur,failure,17,I think the test failure is a bug that was already there and was made noisy by these changes. #5489 fixes that bug and when merged it should make this PR green.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5340
https://github.com/root-project/root/pull/5340:17,reliability,fail,failure,17,I think the test failure is a bug that was already there and was made noisy by these changes. #5489 fixes that bug and when merged it should make this PR green.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5340
https://github.com/root-project/root/pull/5340:12,safety,test,test,12,I think the test failure is a bug that was already there and was made noisy by these changes. #5489 fixes that bug and when merged it should make this PR green.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5340
https://github.com/root-project/root/pull/5340:12,testability,test,test,12,I think the test failure is a bug that was already there and was made noisy by these changes. #5489 fixes that bug and when merged it should make this PR green.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5340
https://github.com/root-project/root/pull/5340:276,reliability,doe,does,276,"As clang-tidy rightfully points out, this PR introduces a call to a virtual method `GetTree` from inside a destructor, which is generally discouraged. However, it's [well-defined](https://en.cppreference.com/w/cpp/language/virtual#During_construction_and_destruction), and it does precisely what we want: in `~TChain` it will call TChain's GetTree and in `~TTree` it will call TTree's GetTree. I'm open to suggestions for alternative solutions though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5340
https://github.com/root-project/root/pull/5342:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5342:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5342:54,safety,test,test,54,"> The commit fixes a bug but it looks like we have no test for this case. This being TTree, I would warmly suggest a test is added for this case. Well ... that was of course useful ... as thinking about it more made it clear that there more similar cases. See https://github.com/root-project/roottest/pull/487",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5342:117,safety,test,test,117,"> The commit fixes a bug but it looks like we have no test for this case. This being TTree, I would warmly suggest a test is added for this case. Well ... that was of course useful ... as thinking about it more made it clear that there more similar cases. See https://github.com/root-project/roottest/pull/487",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5342:54,testability,test,test,54,"> The commit fixes a bug but it looks like we have no test for this case. This being TTree, I would warmly suggest a test is added for this case. Well ... that was of course useful ... as thinking about it more made it clear that there more similar cases. See https://github.com/root-project/roottest/pull/487",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5342:117,testability,test,test,117,"> The commit fixes a bug but it looks like we have no test for this case. This being TTree, I would warmly suggest a test is added for this case. Well ... that was of course useful ... as thinking about it more made it clear that there more similar cases. See https://github.com/root-project/roottest/pull/487",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5342:219,usability,clear,clear,219,"> The commit fixes a bug but it looks like we have no test for this case. This being TTree, I would warmly suggest a test is added for this case. Well ... that was of course useful ... as thinking about it more made it clear that there more similar cases. See https://github.com/root-project/roottest/pull/487",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5342:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5342:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5342:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5342:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5342:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5342:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5342:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5342:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5342:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5342:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5342:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5342:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5342:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5342:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5342:125,safety,avoid,avoiding,125,"@pcanal please check travis clang-tidy-analyzer output; consider marking TKey final, or calling `TKey::DeleteBuffer()` (i.e. avoiding the vtable evaluation).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5342:40,modifiability,inherit,inherits,40,"> consider marking TKey final,. TBasket inherits from TKey.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5342:11,deployability,build,build,11,@phsft-bot build just on mac1015/cxx17 with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5342:11,deployability,build,build,11,@phsft-bot build just on mac1015/cxx17 with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5342:11,deployability,build,build,11,@phsft-bot build just on mac1015/cxx17 with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5342:4,availability,failur,failures,4,The failures are seemingly unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5342:4,deployability,fail,failures,4,The failures are seemingly unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5342:4,performance,failur,failures,4,The failures are seemingly unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5342:4,reliability,fail,failures,4,The failures are seemingly unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5344:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5344
https://github.com/root-project/root/pull/5345:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5345
https://github.com/root-project/root/pull/5345:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5345
https://github.com/root-project/root/pull/5345:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5345
https://github.com/root-project/root/pull/5346:28,energy efficiency,green,green,28,"Added a test, will merge if green",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5346
https://github.com/root-project/root/pull/5346:8,safety,test,test,8,"Added a test, will merge if green",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5346
https://github.com/root-project/root/pull/5346:8,testability,test,test,8,"Added a test, will merge if green",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5346
https://github.com/root-project/root/pull/5346:47,deployability,patch,patch,47,"fix and test were misguided, will re-open with patch that makes more sense",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5346
https://github.com/root-project/root/pull/5346:8,safety,test,test,8,"fix and test were misguided, will re-open with patch that makes more sense",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5346
https://github.com/root-project/root/pull/5346:47,safety,patch,patch,47,"fix and test were misguided, will re-open with patch that makes more sense",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5346
https://github.com/root-project/root/pull/5346:47,security,patch,patch,47,"fix and test were misguided, will re-open with patch that makes more sense",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5346
https://github.com/root-project/root/pull/5346:8,testability,test,test,8,"fix and test were misguided, will re-open with patch that makes more sense",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5346
https://github.com/root-project/root/pull/5347:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5347
https://github.com/root-project/root/pull/5348:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:41,availability,failur,failure,41,The PR changes modules-related code. The failure in non-modules config is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:15,deployability,modul,modules-related,15,The PR changes modules-related code. The failure in non-modules config is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:41,deployability,fail,failure,41,The PR changes modules-related code. The failure in non-modules config is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:56,deployability,modul,modules,56,The PR changes modules-related code. The failure in non-modules config is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:15,modifiability,modul,modules-related,15,The PR changes modules-related code. The failure in non-modules config is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:56,modifiability,modul,modules,56,The PR changes modules-related code. The failure in non-modules config is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:41,performance,failur,failure,41,The PR changes modules-related code. The failure in non-modules config is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:41,reliability,fail,failure,41,The PR changes modules-related code. The failure in non-modules config is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:15,safety,modul,modules-related,15,The PR changes modules-related code. The failure in non-modules config is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:56,safety,modul,modules,56,The PR changes modules-related code. The failure in non-modules config is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5349:0,availability,Failur,Failure,0,Failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5349
https://github.com/root-project/root/pull/5349:0,deployability,Fail,Failure,0,Failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5349
https://github.com/root-project/root/pull/5349:0,performance,Failur,Failure,0,Failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5349
https://github.com/root-project/root/pull/5349:0,reliability,Fail,Failure,0,Failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5349
https://github.com/root-project/root/pull/5352:44,deployability,updat,update,44,"@oshadura :. > Is this some needed security update? That wasn't the motivation. It's more ""let's use the newest openssl there is"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5352
https://github.com/root-project/root/pull/5352:44,safety,updat,update,44,"@oshadura :. > Is this some needed security update? That wasn't the motivation. It's more ""let's use the newest openssl there is"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5352
https://github.com/root-project/root/pull/5352:35,security,secur,security,35,"@oshadura :. > Is this some needed security update? That wasn't the motivation. It's more ""let's use the newest openssl there is"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5352
https://github.com/root-project/root/pull/5352:44,security,updat,update,44,"@oshadura :. > Is this some needed security update? That wasn't the motivation. It's more ""let's use the newest openssl there is"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5352
https://github.com/root-project/root/pull/5353:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5353
https://github.com/root-project/root/pull/5353:12,availability,failur,failures,12,These tests failures are not related. Some of them are due to missing backports.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5353
https://github.com/root-project/root/pull/5353:12,deployability,fail,failures,12,These tests failures are not related. Some of them are due to missing backports.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5353
https://github.com/root-project/root/pull/5353:12,performance,failur,failures,12,These tests failures are not related. Some of them are due to missing backports.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5353
https://github.com/root-project/root/pull/5353:12,reliability,fail,failures,12,These tests failures are not related. Some of them are due to missing backports.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5353
https://github.com/root-project/root/pull/5353:6,safety,test,tests,6,These tests failures are not related. Some of them are due to missing backports.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5353
https://github.com/root-project/root/pull/5353:6,testability,test,tests,6,These tests failures are not related. Some of them are due to missing backports.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5353
https://github.com/root-project/root/pull/5356:49,usability,help,helper,49,"Thanks Stephan! I had forgotten to also mark the helper functions `static` (not strictly necessary, but apparently recommended), so I took that chance to also add comments that explain the purpose of the functions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5356
https://github.com/root-project/root/pull/5356:11,availability,failur,failures,11,"These test failures are unexpected, will investigate.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5356
https://github.com/root-project/root/pull/5356:11,deployability,fail,failures,11,"These test failures are unexpected, will investigate.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5356
https://github.com/root-project/root/pull/5356:11,performance,failur,failures,11,"These test failures are unexpected, will investigate.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5356
https://github.com/root-project/root/pull/5356:11,reliability,fail,failures,11,"These test failures are unexpected, will investigate.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5356
https://github.com/root-project/root/pull/5356:6,safety,test,test,6,"These test failures are unexpected, will investigate.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5356
https://github.com/root-project/root/pull/5356:6,testability,test,test,6,"These test failures are unexpected, will investigate.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5356
https://github.com/root-project/root/pull/5356:59,availability,failur,failures,59,@hageboeck new and improved logic that should fix the test failures -- can you take a look again please?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5356
https://github.com/root-project/root/pull/5356:28,deployability,log,logic,28,@hageboeck new and improved logic that should fix the test failures -- can you take a look again please?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5356
https://github.com/root-project/root/pull/5356:59,deployability,fail,failures,59,@hageboeck new and improved logic that should fix the test failures -- can you take a look again please?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5356
https://github.com/root-project/root/pull/5356:59,performance,failur,failures,59,@hageboeck new and improved logic that should fix the test failures -- can you take a look again please?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5356
https://github.com/root-project/root/pull/5356:59,reliability,fail,failures,59,@hageboeck new and improved logic that should fix the test failures -- can you take a look again please?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5356
https://github.com/root-project/root/pull/5356:28,safety,log,logic,28,@hageboeck new and improved logic that should fix the test failures -- can you take a look again please?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5356
https://github.com/root-project/root/pull/5356:54,safety,test,test,54,@hageboeck new and improved logic that should fix the test failures -- can you take a look again please?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5356
https://github.com/root-project/root/pull/5356:28,security,log,logic,28,@hageboeck new and improved logic that should fix the test failures -- can you take a look again please?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5356
https://github.com/root-project/root/pull/5356:28,testability,log,logic,28,@hageboeck new and improved logic that should fix the test failures -- can you take a look again please?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5356
https://github.com/root-project/root/pull/5356:54,testability,test,test,54,@hageboeck new and improved logic that should fix the test failures -- can you take a look again please?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5356
https://github.com/root-project/root/pull/5356:0,availability,Failur,Failures,0,"Failures are unrelated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5356
https://github.com/root-project/root/pull/5356:0,deployability,Fail,Failures,0,"Failures are unrelated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5356
https://github.com/root-project/root/pull/5356:0,performance,Failur,Failures,0,"Failures are unrelated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5356
https://github.com/root-project/root/pull/5356:0,reliability,Fail,Failures,0,"Failures are unrelated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5356
https://github.com/root-project/root/pull/5359:4,availability,failur,failures,4,The failures are unreleated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5359
https://github.com/root-project/root/pull/5359:4,deployability,fail,failures,4,The failures are unreleated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5359
https://github.com/root-project/root/pull/5359:4,performance,failur,failures,4,The failures are unreleated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5359
https://github.com/root-project/root/pull/5359:4,reliability,fail,failures,4,The failures are unreleated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5359
https://github.com/root-project/root/pull/5361:35,safety,test,tests,35,@etejedor We still want/need these tests?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5361
https://github.com/root-project/root/pull/5361:35,testability,test,tests,35,@etejedor We still want/need these tests?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5361
https://github.com/root-project/root/pull/5364:30,testability,plan,plan,30,"@xvallspl Hi Xavi, what's the plan for this pull request? Will it be worked on to be merged? Do you still need HPX in Gentoo prefix to work on it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5364:27,integrability,event,eventually,27,"I don't know if it will be eventually merged, but I plan to work on it and I would like to have HPX in gentoo if possible! 😁",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5364:52,testability,plan,plan,52,"I don't know if it will be eventually merged, but I plan to work on it and I would like to have HPX in gentoo if possible! 😁",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5365:12,integrability,repositor,repository,12,"I created a repository with all the tests I'm running at https://github.com/vepadulano/rdfrangecache. In particular, the tests I'm referring to in the PR:. 1. TTreeReader only: https://github.com/vepadulano/rdfrangecache/blob/master/treetreereader/secondcluster.cpp. 2. TTree only: https://github.com/vepadulano/rdfrangecache/blob/master/tree/secondcluster.cpp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:12,interoperability,repositor,repository,12,"I created a repository with all the tests I'm running at https://github.com/vepadulano/rdfrangecache. In particular, the tests I'm referring to in the PR:. 1. TTreeReader only: https://github.com/vepadulano/rdfrangecache/blob/master/treetreereader/secondcluster.cpp. 2. TTree only: https://github.com/vepadulano/rdfrangecache/blob/master/tree/secondcluster.cpp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:36,safety,test,tests,36,"I created a repository with all the tests I'm running at https://github.com/vepadulano/rdfrangecache. In particular, the tests I'm referring to in the PR:. 1. TTreeReader only: https://github.com/vepadulano/rdfrangecache/blob/master/treetreereader/secondcluster.cpp. 2. TTree only: https://github.com/vepadulano/rdfrangecache/blob/master/tree/secondcluster.cpp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:121,safety,test,tests,121,"I created a repository with all the tests I'm running at https://github.com/vepadulano/rdfrangecache. In particular, the tests I'm referring to in the PR:. 1. TTreeReader only: https://github.com/vepadulano/rdfrangecache/blob/master/treetreereader/secondcluster.cpp. 2. TTree only: https://github.com/vepadulano/rdfrangecache/blob/master/tree/secondcluster.cpp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:36,testability,test,tests,36,"I created a repository with all the tests I'm running at https://github.com/vepadulano/rdfrangecache. In particular, the tests I'm referring to in the PR:. 1. TTreeReader only: https://github.com/vepadulano/rdfrangecache/blob/master/treetreereader/secondcluster.cpp. 2. TTree only: https://github.com/vepadulano/rdfrangecache/blob/master/tree/secondcluster.cpp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:121,testability,test,tests,121,"I created a repository with all the tests I'm running at https://github.com/vepadulano/rdfrangecache. In particular, the tests I'm referring to in the PR:. 1. TTreeReader only: https://github.com/vepadulano/rdfrangecache/blob/master/treetreereader/secondcluster.cpp. 2. TTree only: https://github.com/vepadulano/rdfrangecache/blob/master/tree/secondcluster.cpp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:149,availability,cluster,cluster,149,"Just for clarity, the final goal is to make sure that within an RDataFrame analysis we are able to cache **only** what is being read, be it a single cluster of a branch, multiple clusters of multiple branches or the whole file. I'm working with TTreeReader to have a better grasp at what happens behind the curtains, although I also monitor RDataFrame's behaviour in my tests (https://github.com/vepadulano/rdfrangecache/tree/master/rdf) . For the moment RDataFrame acts like TTreeReader (as expected).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:179,availability,cluster,clusters,179,"Just for clarity, the final goal is to make sure that within an RDataFrame analysis we are able to cache **only** what is being read, be it a single cluster of a branch, multiple clusters of multiple branches or the whole file. I'm working with TTreeReader to have a better grasp at what happens behind the curtains, although I also monitor RDataFrame's behaviour in my tests (https://github.com/vepadulano/rdfrangecache/tree/master/rdf) . For the moment RDataFrame acts like TTreeReader (as expected).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:333,availability,monitor,monitor,333,"Just for clarity, the final goal is to make sure that within an RDataFrame analysis we are able to cache **only** what is being read, be it a single cluster of a branch, multiple clusters of multiple branches or the whole file. I'm working with TTreeReader to have a better grasp at what happens behind the curtains, although I also monitor RDataFrame's behaviour in my tests (https://github.com/vepadulano/rdfrangecache/tree/master/rdf) . For the moment RDataFrame acts like TTreeReader (as expected).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:149,deployability,cluster,cluster,149,"Just for clarity, the final goal is to make sure that within an RDataFrame analysis we are able to cache **only** what is being read, be it a single cluster of a branch, multiple clusters of multiple branches or the whole file. I'm working with TTreeReader to have a better grasp at what happens behind the curtains, although I also monitor RDataFrame's behaviour in my tests (https://github.com/vepadulano/rdfrangecache/tree/master/rdf) . For the moment RDataFrame acts like TTreeReader (as expected).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:179,deployability,cluster,clusters,179,"Just for clarity, the final goal is to make sure that within an RDataFrame analysis we are able to cache **only** what is being read, be it a single cluster of a branch, multiple clusters of multiple branches or the whole file. I'm working with TTreeReader to have a better grasp at what happens behind the curtains, although I also monitor RDataFrame's behaviour in my tests (https://github.com/vepadulano/rdfrangecache/tree/master/rdf) . For the moment RDataFrame acts like TTreeReader (as expected).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:333,deployability,monitor,monitor,333,"Just for clarity, the final goal is to make sure that within an RDataFrame analysis we are able to cache **only** what is being read, be it a single cluster of a branch, multiple clusters of multiple branches or the whole file. I'm working with TTreeReader to have a better grasp at what happens behind the curtains, although I also monitor RDataFrame's behaviour in my tests (https://github.com/vepadulano/rdfrangecache/tree/master/rdf) . For the moment RDataFrame acts like TTreeReader (as expected).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:333,energy efficiency,monitor,monitor,333,"Just for clarity, the final goal is to make sure that within an RDataFrame analysis we are able to cache **only** what is being read, be it a single cluster of a branch, multiple clusters of multiple branches or the whole file. I'm working with TTreeReader to have a better grasp at what happens behind the curtains, although I also monitor RDataFrame's behaviour in my tests (https://github.com/vepadulano/rdfrangecache/tree/master/rdf) . For the moment RDataFrame acts like TTreeReader (as expected).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:99,performance,cach,cache,99,"Just for clarity, the final goal is to make sure that within an RDataFrame analysis we are able to cache **only** what is being read, be it a single cluster of a branch, multiple clusters of multiple branches or the whole file. I'm working with TTreeReader to have a better grasp at what happens behind the curtains, although I also monitor RDataFrame's behaviour in my tests (https://github.com/vepadulano/rdfrangecache/tree/master/rdf) . For the moment RDataFrame acts like TTreeReader (as expected).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:333,reliability,monitor,monitor,333,"Just for clarity, the final goal is to make sure that within an RDataFrame analysis we are able to cache **only** what is being read, be it a single cluster of a branch, multiple clusters of multiple branches or the whole file. I'm working with TTreeReader to have a better grasp at what happens behind the curtains, although I also monitor RDataFrame's behaviour in my tests (https://github.com/vepadulano/rdfrangecache/tree/master/rdf) . For the moment RDataFrame acts like TTreeReader (as expected).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:333,safety,monitor,monitor,333,"Just for clarity, the final goal is to make sure that within an RDataFrame analysis we are able to cache **only** what is being read, be it a single cluster of a branch, multiple clusters of multiple branches or the whole file. I'm working with TTreeReader to have a better grasp at what happens behind the curtains, although I also monitor RDataFrame's behaviour in my tests (https://github.com/vepadulano/rdfrangecache/tree/master/rdf) . For the moment RDataFrame acts like TTreeReader (as expected).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:370,safety,test,tests,370,"Just for clarity, the final goal is to make sure that within an RDataFrame analysis we are able to cache **only** what is being read, be it a single cluster of a branch, multiple clusters of multiple branches or the whole file. I'm working with TTreeReader to have a better grasp at what happens behind the curtains, although I also monitor RDataFrame's behaviour in my tests (https://github.com/vepadulano/rdfrangecache/tree/master/rdf) . For the moment RDataFrame acts like TTreeReader (as expected).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:333,testability,monitor,monitor,333,"Just for clarity, the final goal is to make sure that within an RDataFrame analysis we are able to cache **only** what is being read, be it a single cluster of a branch, multiple clusters of multiple branches or the whole file. I'm working with TTreeReader to have a better grasp at what happens behind the curtains, although I also monitor RDataFrame's behaviour in my tests (https://github.com/vepadulano/rdfrangecache/tree/master/rdf) . For the moment RDataFrame acts like TTreeReader (as expected).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:370,testability,test,tests,370,"Just for clarity, the final goal is to make sure that within an RDataFrame analysis we are able to cache **only** what is being read, be it a single cluster of a branch, multiple clusters of multiple branches or the whole file. I'm working with TTreeReader to have a better grasp at what happens behind the curtains, although I also monitor RDataFrame's behaviour in my tests (https://github.com/vepadulano/rdfrangecache/tree/master/rdf) . For the moment RDataFrame acts like TTreeReader (as expected).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:9,usability,clarit,clarity,9,"Just for clarity, the final goal is to make sure that within an RDataFrame analysis we are able to cache **only** what is being read, be it a single cluster of a branch, multiple clusters of multiple branches or the whole file. I'm working with TTreeReader to have a better grasp at what happens behind the curtains, although I also monitor RDataFrame's behaviour in my tests (https://github.com/vepadulano/rdfrangecache/tree/master/rdf) . For the moment RDataFrame acts like TTreeReader (as expected).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:354,usability,behavi,behaviour,354,"Just for clarity, the final goal is to make sure that within an RDataFrame analysis we are able to cache **only** what is being read, be it a single cluster of a branch, multiple clusters of multiple branches or the whole file. I'm working with TTreeReader to have a better grasp at what happens behind the curtains, although I also monitor RDataFrame's behaviour in my tests (https://github.com/vepadulano/rdfrangecache/tree/master/rdf) . For the moment RDataFrame acts like TTreeReader (as expected).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:56,safety,test,tests,56,"The latest commit seems to fix the behaviour across all tests: TTree, TChain, TTreeReader, RDataFrame.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:56,testability,test,tests,56,"The latest commit seems to fix the behaviour across all tests: TTree, TChain, TTreeReader, RDataFrame.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:35,usability,behavi,behaviour,35,"The latest commit seems to fix the behaviour across all tests: TTree, TChain, TTreeReader, RDataFrame.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:39,deployability,build,build,39,@phsft-bot just on ROOT-fedora30/cxx14 build with flags -DCTEST_TEST_EXCLUDE_NONE=On -Druntime_cxxmodule=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:4,availability,failur,failure,4,The failure are unrelated so this is ready to merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:4,deployability,fail,failure,4,The failure are unrelated so this is ready to merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:4,performance,failur,failure,4,The failure are unrelated so this is ready to merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:4,reliability,fail,failure,4,The failure are unrelated so this is ready to merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5366:92,availability,failur,failures,92,"Hey @oshadura,. now, after making sure that the `GTEST_INCLUDE_DIRECTORY` exists, the build failures went away. The last failure on mac is actually not a failure - it just didn't manage to send the test results. Should we merge?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5366
https://github.com/root-project/root/pull/5366:121,availability,failur,failure,121,"Hey @oshadura,. now, after making sure that the `GTEST_INCLUDE_DIRECTORY` exists, the build failures went away. The last failure on mac is actually not a failure - it just didn't manage to send the test results. Should we merge?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5366
https://github.com/root-project/root/pull/5366:154,availability,failur,failure,154,"Hey @oshadura,. now, after making sure that the `GTEST_INCLUDE_DIRECTORY` exists, the build failures went away. The last failure on mac is actually not a failure - it just didn't manage to send the test results. Should we merge?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5366
https://github.com/root-project/root/pull/5366:86,deployability,build,build,86,"Hey @oshadura,. now, after making sure that the `GTEST_INCLUDE_DIRECTORY` exists, the build failures went away. The last failure on mac is actually not a failure - it just didn't manage to send the test results. Should we merge?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5366
https://github.com/root-project/root/pull/5366:92,deployability,fail,failures,92,"Hey @oshadura,. now, after making sure that the `GTEST_INCLUDE_DIRECTORY` exists, the build failures went away. The last failure on mac is actually not a failure - it just didn't manage to send the test results. Should we merge?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5366
https://github.com/root-project/root/pull/5366:121,deployability,fail,failure,121,"Hey @oshadura,. now, after making sure that the `GTEST_INCLUDE_DIRECTORY` exists, the build failures went away. The last failure on mac is actually not a failure - it just didn't manage to send the test results. Should we merge?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5366
https://github.com/root-project/root/pull/5366:154,deployability,fail,failure,154,"Hey @oshadura,. now, after making sure that the `GTEST_INCLUDE_DIRECTORY` exists, the build failures went away. The last failure on mac is actually not a failure - it just didn't manage to send the test results. Should we merge?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5366
https://github.com/root-project/root/pull/5366:179,deployability,manag,manage,179,"Hey @oshadura,. now, after making sure that the `GTEST_INCLUDE_DIRECTORY` exists, the build failures went away. The last failure on mac is actually not a failure - it just didn't manage to send the test results. Should we merge?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5366
https://github.com/root-project/root/pull/5366:179,energy efficiency,manag,manage,179,"Hey @oshadura,. now, after making sure that the `GTEST_INCLUDE_DIRECTORY` exists, the build failures went away. The last failure on mac is actually not a failure - it just didn't manage to send the test results. Should we merge?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5366
https://github.com/root-project/root/pull/5366:92,performance,failur,failures,92,"Hey @oshadura,. now, after making sure that the `GTEST_INCLUDE_DIRECTORY` exists, the build failures went away. The last failure on mac is actually not a failure - it just didn't manage to send the test results. Should we merge?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5366
https://github.com/root-project/root/pull/5366:121,performance,failur,failure,121,"Hey @oshadura,. now, after making sure that the `GTEST_INCLUDE_DIRECTORY` exists, the build failures went away. The last failure on mac is actually not a failure - it just didn't manage to send the test results. Should we merge?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5366
https://github.com/root-project/root/pull/5366:154,performance,failur,failure,154,"Hey @oshadura,. now, after making sure that the `GTEST_INCLUDE_DIRECTORY` exists, the build failures went away. The last failure on mac is actually not a failure - it just didn't manage to send the test results. Should we merge?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5366
https://github.com/root-project/root/pull/5366:92,reliability,fail,failures,92,"Hey @oshadura,. now, after making sure that the `GTEST_INCLUDE_DIRECTORY` exists, the build failures went away. The last failure on mac is actually not a failure - it just didn't manage to send the test results. Should we merge?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5366
https://github.com/root-project/root/pull/5366:121,reliability,fail,failure,121,"Hey @oshadura,. now, after making sure that the `GTEST_INCLUDE_DIRECTORY` exists, the build failures went away. The last failure on mac is actually not a failure - it just didn't manage to send the test results. Should we merge?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5366
https://github.com/root-project/root/pull/5366:154,reliability,fail,failure,154,"Hey @oshadura,. now, after making sure that the `GTEST_INCLUDE_DIRECTORY` exists, the build failures went away. The last failure on mac is actually not a failure - it just didn't manage to send the test results. Should we merge?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5366
https://github.com/root-project/root/pull/5366:179,safety,manag,manage,179,"Hey @oshadura,. now, after making sure that the `GTEST_INCLUDE_DIRECTORY` exists, the build failures went away. The last failure on mac is actually not a failure - it just didn't manage to send the test results. Should we merge?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5366
https://github.com/root-project/root/pull/5366:198,safety,test,test,198,"Hey @oshadura,. now, after making sure that the `GTEST_INCLUDE_DIRECTORY` exists, the build failures went away. The last failure on mac is actually not a failure - it just didn't manage to send the test results. Should we merge?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5366
https://github.com/root-project/root/pull/5366:198,testability,test,test,198,"Hey @oshadura,. now, after making sure that the `GTEST_INCLUDE_DIRECTORY` exists, the build failures went away. The last failure on mac is actually not a failure - it just didn't manage to send the test results. Should we merge?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5366
https://github.com/root-project/root/pull/5368:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5368
https://github.com/root-project/root/pull/5368:34,deployability,observ,observation,34,Many thanks for checking! Is your observation about the rounding to the nearest representable double platform-independent?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5368
https://github.com/root-project/root/pull/5368:101,interoperability,platform,platform-independent,101,Many thanks for checking! Is your observation about the rounding to the nearest representable double platform-independent?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5368
https://github.com/root-project/root/pull/5368:34,testability,observ,observation,34,Many thanks for checking! Is your observation about the rounding to the nearest representable double platform-independent?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5368
https://github.com/root-project/root/pull/5368:24,interoperability,platform,platforms,24,"No, it's valid only for platforms using the IEEE Standard for Floating-Point Arithmetics. However, most platforms use it. Only small processors that do floating point in software don't follow IEEE.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5368
https://github.com/root-project/root/pull/5368:49,interoperability,Standard,Standard,49,"No, it's valid only for platforms using the IEEE Standard for Floating-Point Arithmetics. However, most platforms use it. Only small processors that do floating point in software don't follow IEEE.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5368
https://github.com/root-project/root/pull/5368:104,interoperability,platform,platforms,104,"No, it's valid only for platforms using the IEEE Standard for Floating-Point Arithmetics. However, most platforms use it. Only small processors that do floating point in software don't follow IEEE.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5368
https://github.com/root-project/root/pull/5368:9,safety,valid,valid,9,"No, it's valid only for platforms using the IEEE Standard for Floating-Point Arithmetics. However, most platforms use it. Only small processors that do floating point in software don't follow IEEE.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5368
https://github.com/root-project/root/pull/5368:98,interoperability,platform,platforms,98,"I see. So, then it is actually questionable whether this PR is actually needed on IEEE-conforming platforms, right? On those platforms it would at most be a ""visual"" change, I guess.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5368
https://github.com/root-project/root/pull/5368:125,interoperability,platform,platforms,125,"I see. So, then it is actually questionable whether this PR is actually needed on IEEE-conforming platforms, right? On those platforms it would at most be a ""visual"" change, I guess.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5368
https://github.com/root-project/root/pull/5368:158,usability,visual,visual,158,"I see. So, then it is actually questionable whether this PR is actually needed on IEEE-conforming platforms, right? On those platforms it would at most be a ""visual"" change, I guess.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5368
https://github.com/root-project/root/pull/5368:17,usability,visual,visual,17,"Yes it is just a visual change, and it will not produce any difference in the obtained result. I agree anyway to merge it in case somebody is going to take the code to use with higher precision.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5368
https://github.com/root-project/root/pull/5368:65,integrability,messag,message,65,One more thing before merging: . can you maybe add in the commit message a note that this is just a visual change and it has no effect,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5368
https://github.com/root-project/root/pull/5368:65,interoperability,messag,message,65,One more thing before merging: . can you maybe add in the commit message a note that this is just a visual change and it has no effect,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5368
https://github.com/root-project/root/pull/5368:100,usability,visual,visual,100,One more thing before merging: . can you maybe add in the commit message a note that this is just a visual change and it has no effect,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5368
https://github.com/root-project/root/pull/5368:33,integrability,messag,message,33,"@lmoneta I've changed the commit message accordingly (force-pushed to overwrite the previous commit with the old commit message). Anyway, thank you both for your feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5368
https://github.com/root-project/root/pull/5368:120,integrability,messag,message,120,"@lmoneta I've changed the commit message accordingly (force-pushed to overwrite the previous commit with the old commit message). Anyway, thank you both for your feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5368
https://github.com/root-project/root/pull/5368:33,interoperability,messag,message,33,"@lmoneta I've changed the commit message accordingly (force-pushed to overwrite the previous commit with the old commit message). Anyway, thank you both for your feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5368
https://github.com/root-project/root/pull/5368:120,interoperability,messag,message,120,"@lmoneta I've changed the commit message accordingly (force-pushed to overwrite the previous commit with the old commit message). Anyway, thank you both for your feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5368
https://github.com/root-project/root/pull/5368:162,usability,feedback,feedback,162,"@lmoneta I've changed the commit message accordingly (force-pushed to overwrite the previous commit with the old commit message). Anyway, thank you both for your feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5368
https://github.com/root-project/root/pull/5370:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5370
https://github.com/root-project/root/pull/5370:11,deployability,build,build,11,@phsft-bot build just on mac1015/cxx17 with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5370
https://github.com/root-project/root/pull/5371:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5371
https://github.com/root-project/root/pull/5371:4,availability,failur,failure,4,The failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5371
https://github.com/root-project/root/pull/5371:4,deployability,fail,failure,4,The failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5371
https://github.com/root-project/root/pull/5371:4,performance,failur,failure,4,The failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5371
https://github.com/root-project/root/pull/5371:4,reliability,fail,failure,4,The failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5371
https://github.com/root-project/root/pull/5376:28,interoperability,conflict,conflict,28,but you need to solve merge conflict :(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5376
https://github.com/root-project/root/pull/5377:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5390:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5390
https://github.com/root-project/root/pull/5391:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5391
https://github.com/root-project/root/pull/5391:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5391
https://github.com/root-project/root/pull/5391:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5391
https://github.com/root-project/root/pull/5391:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5391
https://github.com/root-project/root/pull/5391:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5391
https://github.com/root-project/root/pull/5391:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5391
https://github.com/root-project/root/pull/5391:4,availability,failur,failure,4,The failure are pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5391
https://github.com/root-project/root/pull/5391:4,deployability,fail,failure,4,The failure are pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5391
https://github.com/root-project/root/pull/5391:4,performance,failur,failure,4,The failure are pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5391
https://github.com/root-project/root/pull/5391:4,reliability,fail,failure,4,The failure are pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5391
https://github.com/root-project/root/pull/5393:88,deployability,version,versions,88,"@Axel-Naumann as discussed privately. I think I actually can easily support new and old versions of arrow, so I would suggest we do to simplify porting also in the ALICE framework.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:88,integrability,version,versions,88,"@Axel-Naumann as discussed privately. I think I actually can easily support new and old versions of arrow, so I would suggest we do to simplify porting also in the ALICE framework.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:88,modifiability,version,versions,88,"@Axel-Naumann as discussed privately. I think I actually can easily support new and old versions of arrow, so I would suggest we do to simplify porting also in the ALICE framework.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:135,testability,simpl,simplify,135,"@Axel-Naumann as discussed privately. I think I actually can easily support new and old versions of arrow, so I would suggest we do to simplify porting also in the ALICE framework.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:68,usability,support,support,68,"@Axel-Naumann as discussed privately. I think I actually can easily support new and old versions of arrow, so I would suggest we do to simplify porting also in the ALICE framework.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:135,usability,simpl,simplify,135,"@Axel-Naumann as discussed privately. I think I actually can easily support new and old versions of arrow, so I would suggest we do to simplify porting also in the ALICE framework.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu2004,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu2004/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu18.04/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:51,availability,error,error,51,I am not sure I am smart enough to find the actual error. Could someone point me to it?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:51,performance,error,error,51,I am not sure I am smart enough to find the actual error. Could someone point me to it?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:51,safety,error,error,51,I am not sure I am smart enough to find the actual error. Could someone point me to it?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:51,usability,error,error,51,I am not sure I am smart enough to find the actual error. Could someone point me to it?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:41,availability,fault,fault,41,"@ktf it does not look like it's the PR's fault:. ```. 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1617 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gtest"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). 10:21:39 . 10:21:39 . 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1618 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gmock"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). ```. Let's try again, might have been a glitch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:69,availability,Error,Error,69,"@ktf it does not look like it's the PR's fault:. ```. 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1617 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gtest"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). 10:21:39 . 10:21:39 . 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1618 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gmock"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). ```. Let's try again, might have been a glitch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:354,availability,Error,Error,354,"@ktf it does not look like it's the PR's fault:. ```. 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1617 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gtest"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). 10:21:39 . 10:21:39 . 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1618 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gmock"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). ```. Let's try again, might have been a glitch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:84,deployability,modul,modules,84,"@ktf it does not look like it's the PR's fault:. ```. 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1617 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gtest"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). 10:21:39 . 10:21:39 . 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1618 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gmock"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). ```. Let's try again, might have been a glitch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:245,deployability,Stack,Stack,245,"@ktf it does not look like it's the PR's fault:. ```. 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1617 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gtest"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). 10:21:39 . 10:21:39 . 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1618 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gmock"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). ```. Let's try again, might have been a glitch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:369,deployability,modul,modules,369,"@ktf it does not look like it's the PR's fault:. ```. 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1617 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gtest"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). 10:21:39 . 10:21:39 . 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1618 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gmock"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). ```. Let's try again, might have been a glitch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:530,deployability,Stack,Stack,530,"@ktf it does not look like it's the PR's fault:. ```. 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1617 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gtest"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). 10:21:39 . 10:21:39 . 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1618 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gmock"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). ```. Let's try again, might have been a glitch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:41,energy efficiency,fault,fault,41,"@ktf it does not look like it's the PR's fault:. ```. 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1617 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gtest"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). 10:21:39 . 10:21:39 . 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1618 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gmock"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). ```. Let's try again, might have been a glitch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:174,interoperability,specif,specify,174,"@ktf it does not look like it's the PR's fault:. ```. 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1617 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gtest"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). 10:21:39 . 10:21:39 . 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1618 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gmock"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). ```. Let's try again, might have been a glitch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:459,interoperability,specif,specify,459,"@ktf it does not look like it's the PR's fault:. ```. 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1617 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gtest"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). 10:21:39 . 10:21:39 . 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1618 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gmock"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). ```. Let's try again, might have been a glitch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:84,modifiability,modul,modules,84,"@ktf it does not look like it's the PR's fault:. ```. 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1617 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gtest"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). 10:21:39 . 10:21:39 . 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1618 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gmock"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). ```. Let's try again, might have been a glitch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:369,modifiability,modul,modules,369,"@ktf it does not look like it's the PR's fault:. ```. 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1617 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gtest"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). 10:21:39 . 10:21:39 . 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1618 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gmock"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). ```. Let's try again, might have been a glitch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:41,performance,fault,fault,41,"@ktf it does not look like it's the PR's fault:. ```. 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1617 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gtest"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). 10:21:39 . 10:21:39 . 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1618 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gmock"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). ```. Let's try again, might have been a glitch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:69,performance,Error,Error,69,"@ktf it does not look like it's the PR's fault:. ```. 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1617 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gtest"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). 10:21:39 . 10:21:39 . 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1618 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gmock"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). ```. Let's try again, might have been a glitch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:354,performance,Error,Error,354,"@ktf it does not look like it's the PR's fault:. ```. 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1617 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gtest"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). 10:21:39 . 10:21:39 . 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1618 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gmock"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). ```. Let's try again, might have been a glitch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:8,reliability,doe,does,8,"@ktf it does not look like it's the PR's fault:. ```. 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1617 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gtest"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). 10:21:39 . 10:21:39 . 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1618 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gmock"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). ```. Let's try again, might have been a glitch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:41,reliability,fault,fault,41,"@ktf it does not look like it's the PR's fault:. ```. 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1617 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gtest"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). 10:21:39 . 10:21:39 . 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1618 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gmock"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). ```. Let's try again, might have been a glitch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:41,safety,fault,fault,41,"@ktf it does not look like it's the PR's fault:. ```. 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1617 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gtest"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). 10:21:39 . 10:21:39 . 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1618 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gmock"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). ```. Let's try again, might have been a glitch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:69,safety,Error,Error,69,"@ktf it does not look like it's the PR's fault:. ```. 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1617 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gtest"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). 10:21:39 . 10:21:39 . 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1618 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gmock"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). ```. Let's try again, might have been a glitch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:84,safety,modul,modules,84,"@ktf it does not look like it's the PR's fault:. ```. 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1617 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gtest"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). 10:21:39 . 10:21:39 . 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1618 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gmock"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). ```. Let's try again, might have been a glitch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:354,safety,Error,Error,354,"@ktf it does not look like it's the PR's fault:. ```. 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1617 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gtest"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). 10:21:39 . 10:21:39 . 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1618 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gmock"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). ```. Let's try again, might have been a glitch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:369,safety,modul,modules,369,"@ktf it does not look like it's the PR's fault:. ```. 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1617 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gtest"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). 10:21:39 . 10:21:39 . 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1618 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gmock"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). ```. Let's try again, might have been a glitch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:69,usability,Error,Error,69,"@ktf it does not look like it's the PR's fault:. ```. 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1617 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gtest"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). 10:21:39 . 10:21:39 . 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1618 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gmock"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). ```. Let's try again, might have been a glitch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:354,usability,Error,Error,354,"@ktf it does not look like it's the PR's fault:. ```. 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1617 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gtest"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). 10:21:39 . 10:21:39 . 10:21:39 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1618 (target_include_directories):. 10:21:39 Cannot specify include directories for imported target ""gmock"". 10:21:39 Call Stack (most recent call first):. 10:21:39 CMakeLists.txt:183 (include). ```. Let's try again, might have been a glitch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu18.04/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:82,availability,error,errors,82,"Yes, sorry about that. Your changes look ok at a quick glance (and anyway, the CI errors are definitely unrelated). We'll try to resolve this asap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:82,performance,error,errors,82,"Yes, sorry about that. Your changes look ok at a quick glance (and anyway, the CI errors are definitely unrelated). We'll try to resolve this asap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:82,safety,error,errors,82,"Yes, sorry about that. Your changes look ok at a quick glance (and anyway, the CI errors are definitely unrelated). We'll try to resolve this asap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:82,usability,error,errors,82,"Yes, sorry about that. Your changes look ok at a quick glance (and anyway, the CI errors are definitely unrelated). We'll try to resolve this asap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5393:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu18.04/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5394:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5394
https://github.com/root-project/root/pull/5394:48,availability,failur,failure,48,@ktf please fork also roottest to prevent build failure on `windows10/cxx14`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5394
https://github.com/root-project/root/pull/5394:42,deployability,build,build,42,@ktf please fork also roottest to prevent build failure on `windows10/cxx14`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5394
https://github.com/root-project/root/pull/5394:48,deployability,fail,failure,48,@ktf please fork also roottest to prevent build failure on `windows10/cxx14`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5394
https://github.com/root-project/root/pull/5394:48,performance,failur,failure,48,@ktf please fork also roottest to prevent build failure on `windows10/cxx14`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5394
https://github.com/root-project/root/pull/5394:48,reliability,fail,failure,48,@ktf please fork also roottest to prevent build failure on `windows10/cxx14`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5394
https://github.com/root-project/root/pull/5394:34,safety,prevent,prevent,34,@ktf please fork also roottest to prevent build failure on `windows10/cxx14`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5394
https://github.com/root-project/root/pull/5394:34,security,preven,prevent,34,@ktf please fork also roottest to prevent build failure on `windows10/cxx14`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5394
https://github.com/root-project/root/pull/5395:27,availability,sli,slightly,27,"The issue is resolved by a slightly different impl, see the discussion here: https://bitbucket.org/wlav/cpycppyy/pull-requests/33/return-self-for-__iter__-of-an-iterator/diff#comment-146045830",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5395
https://github.com/root-project/root/pull/5395:27,reliability,sli,slightly,27,"The issue is resolved by a slightly different impl, see the discussion here: https://bitbucket.org/wlav/cpycppyy/pull-requests/33/return-self-for-__iter__-of-an-iterator/diff#comment-146045830",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5395
https://github.com/root-project/root/pull/5396:11,deployability,build,build,11,@phsft-bot build also on ROOT-ubuntu18.04/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5396
https://github.com/root-project/root/pull/5397:114,availability,error,error,114,"@stwunsch as discussed, my opinion is that the previous message was user-friendlier than an actual python runtime error, and to increase test coverage it should be enough to change `exit()` to `exit(1)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:56,integrability,messag,message,56,"@stwunsch as discussed, my opinion is that the previous message was user-friendlier than an actual python runtime error, and to increase test coverage it should be enough to change `exit()` to `exit(1)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:56,interoperability,messag,message,56,"@stwunsch as discussed, my opinion is that the previous message was user-friendlier than an actual python runtime error, and to increase test coverage it should be enough to change `exit()` to `exit(1)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:114,performance,error,error,114,"@stwunsch as discussed, my opinion is that the previous message was user-friendlier than an actual python runtime error, and to increase test coverage it should be enough to change `exit()` to `exit(1)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:114,safety,error,error,114,"@stwunsch as discussed, my opinion is that the previous message was user-friendlier than an actual python runtime error, and to increase test coverage it should be enough to change `exit()` to `exit(1)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:137,safety,test,test,137,"@stwunsch as discussed, my opinion is that the previous message was user-friendlier than an actual python runtime error, and to increase test coverage it should be enough to change `exit()` to `exit(1)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:137,testability,test,test,137,"@stwunsch as discussed, my opinion is that the previous message was user-friendlier than an actual python runtime error, and to increase test coverage it should be enough to change `exit()` to `exit(1)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:142,testability,coverag,coverage,142,"@stwunsch as discussed, my opinion is that the previous message was user-friendlier than an actual python runtime error, and to increase test coverage it should be enough to change `exit()` to `exit(1)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:68,usability,user,user-friendlier,68,"@stwunsch as discussed, my opinion is that the previous message was user-friendlier than an actual python runtime error, and to increase test coverage it should be enough to change `exit()` to `exit(1)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:114,usability,error,error,114,"@stwunsch as discussed, my opinion is that the previous message was user-friendlier than an actual python runtime error, and to increase test coverage it should be enough to change `exit()` to `exit(1)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:118,availability,error,error,118,"Would it be nicer to catch and help the user ""please install python-pandas to run this tutorial"" and then exit 1 (aka error)? Else there will be an import error that users might not understand without Google's help? I'm asking, I don't have an opinion yet :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:155,availability,error,error,155,"Would it be nicer to catch and help the user ""please install python-pandas to run this tutorial"" and then exit 1 (aka error)? Else there will be an import error that users might not understand without Google's help? I'm asking, I don't have an opinion yet :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:53,deployability,instal,install,53,"Would it be nicer to catch and help the user ""please install python-pandas to run this tutorial"" and then exit 1 (aka error)? Else there will be an import error that users might not understand without Google's help? I'm asking, I don't have an opinion yet :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:118,performance,error,error,118,"Would it be nicer to catch and help the user ""please install python-pandas to run this tutorial"" and then exit 1 (aka error)? Else there will be an import error that users might not understand without Google's help? I'm asking, I don't have an opinion yet :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:155,performance,error,error,155,"Would it be nicer to catch and help the user ""please install python-pandas to run this tutorial"" and then exit 1 (aka error)? Else there will be an import error that users might not understand without Google's help? I'm asking, I don't have an opinion yet :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:118,safety,error,error,118,"Would it be nicer to catch and help the user ""please install python-pandas to run this tutorial"" and then exit 1 (aka error)? Else there will be an import error that users might not understand without Google's help? I'm asking, I don't have an opinion yet :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:155,safety,error,error,155,"Would it be nicer to catch and help the user ""please install python-pandas to run this tutorial"" and then exit 1 (aka error)? Else there will be an import error that users might not understand without Google's help? I'm asking, I don't have an opinion yet :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:182,testability,understand,understand,182,"Would it be nicer to catch and help the user ""please install python-pandas to run this tutorial"" and then exit 1 (aka error)? Else there will be an import error that users might not understand without Google's help? I'm asking, I don't have an opinion yet :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:31,usability,help,help,31,"Would it be nicer to catch and help the user ""please install python-pandas to run this tutorial"" and then exit 1 (aka error)? Else there will be an import error that users might not understand without Google's help? I'm asking, I don't have an opinion yet :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:40,usability,user,user,40,"Would it be nicer to catch and help the user ""please install python-pandas to run this tutorial"" and then exit 1 (aka error)? Else there will be an import error that users might not understand without Google's help? I'm asking, I don't have an opinion yet :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:118,usability,error,error,118,"Would it be nicer to catch and help the user ""please install python-pandas to run this tutorial"" and then exit 1 (aka error)? Else there will be an import error that users might not understand without Google's help? I'm asking, I don't have an opinion yet :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:155,usability,error,error,155,"Would it be nicer to catch and help the user ""please install python-pandas to run this tutorial"" and then exit 1 (aka error)? Else there will be an import error that users might not understand without Google's help? I'm asking, I don't have an opinion yet :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:166,usability,user,users,166,"Would it be nicer to catch and help the user ""please install python-pandas to run this tutorial"" and then exit 1 (aka error)? Else there will be an import error that users might not understand without Google's help? I'm asking, I don't have an opinion yet :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:210,usability,help,help,210,"Would it be nicer to catch and help the user ""please install python-pandas to run this tutorial"" and then exit 1 (aka error)? Else there will be an import error that users might not understand without Google's help? I'm asking, I don't have an opinion yet :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:133,availability,consist,consistently,133,"@Axel-Naumann You said this very nicely. That's basically my questions ;). Or also: How shall we treat such dependencies in tutorial consistently? In tests, we agreed on ""just import and fail"". Here, we still have the option. (Although, we still want to return a non-zero value for the test coverage. That's no question!)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:108,deployability,depend,dependencies,108,"@Axel-Naumann You said this very nicely. That's basically my questions ;). Or also: How shall we treat such dependencies in tutorial consistently? In tests, we agreed on ""just import and fail"". Here, we still have the option. (Although, we still want to return a non-zero value for the test coverage. That's no question!)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:187,deployability,fail,fail,187,"@Axel-Naumann You said this very nicely. That's basically my questions ;). Or also: How shall we treat such dependencies in tutorial consistently? In tests, we agreed on ""just import and fail"". Here, we still have the option. (Although, we still want to return a non-zero value for the test coverage. That's no question!)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:108,integrability,depend,dependencies,108,"@Axel-Naumann You said this very nicely. That's basically my questions ;). Or also: How shall we treat such dependencies in tutorial consistently? In tests, we agreed on ""just import and fail"". Here, we still have the option. (Although, we still want to return a non-zero value for the test coverage. That's no question!)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:108,modifiability,depend,dependencies,108,"@Axel-Naumann You said this very nicely. That's basically my questions ;). Or also: How shall we treat such dependencies in tutorial consistently? In tests, we agreed on ""just import and fail"". Here, we still have the option. (Although, we still want to return a non-zero value for the test coverage. That's no question!)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:187,reliability,fail,fail,187,"@Axel-Naumann You said this very nicely. That's basically my questions ;). Or also: How shall we treat such dependencies in tutorial consistently? In tests, we agreed on ""just import and fail"". Here, we still have the option. (Although, we still want to return a non-zero value for the test coverage. That's no question!)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:108,safety,depend,dependencies,108,"@Axel-Naumann You said this very nicely. That's basically my questions ;). Or also: How shall we treat such dependencies in tutorial consistently? In tests, we agreed on ""just import and fail"". Here, we still have the option. (Although, we still want to return a non-zero value for the test coverage. That's no question!)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:150,safety,test,tests,150,"@Axel-Naumann You said this very nicely. That's basically my questions ;). Or also: How shall we treat such dependencies in tutorial consistently? In tests, we agreed on ""just import and fail"". Here, we still have the option. (Although, we still want to return a non-zero value for the test coverage. That's no question!)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:286,safety,test,test,286,"@Axel-Naumann You said this very nicely. That's basically my questions ;). Or also: How shall we treat such dependencies in tutorial consistently? In tests, we agreed on ""just import and fail"". Here, we still have the option. (Although, we still want to return a non-zero value for the test coverage. That's no question!)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:108,testability,depend,dependencies,108,"@Axel-Naumann You said this very nicely. That's basically my questions ;). Or also: How shall we treat such dependencies in tutorial consistently? In tests, we agreed on ""just import and fail"". Here, we still have the option. (Although, we still want to return a non-zero value for the test coverage. That's no question!)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:150,testability,test,tests,150,"@Axel-Naumann You said this very nicely. That's basically my questions ;). Or also: How shall we treat such dependencies in tutorial consistently? In tests, we agreed on ""just import and fail"". Here, we still have the option. (Although, we still want to return a non-zero value for the test coverage. That's no question!)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:286,testability,test,test,286,"@Axel-Naumann You said this very nicely. That's basically my questions ;). Or also: How shall we treat such dependencies in tutorial consistently? In tests, we agreed on ""just import and fail"". Here, we still have the option. (Although, we still want to return a non-zero value for the test coverage. That's no question!)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:291,testability,coverag,coverage,291,"@Axel-Naumann You said this very nicely. That's basically my questions ;). Or also: How shall we treat such dependencies in tutorial consistently? In tests, we agreed on ""just import and fail"". Here, we still have the option. (Although, we still want to return a non-zero value for the test coverage. That's no question!)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:133,usability,consist,consistently,133,"@Axel-Naumann You said this very nicely. That's basically my questions ;). Or also: How shall we treat such dependencies in tutorial consistently? In tests, we agreed on ""just import and fail"". Here, we still have the option. (Although, we still want to return a non-zero value for the test coverage. That's no question!)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:60,deployability,fail,fails,60,I agree with @eguiraud that we need `exit(1)` if the import fails.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:60,reliability,fail,fails,60,I agree with @eguiraud that we need `exit(1)` if the import fails.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:33,deployability,fail,fail,33,The idea of making the tutorials fail more gracefully than tests sounds good to me. Messages should be more user friendly (@Axel-Naumann already provided a good suggestion for this one). Also agree with the `exit(1)`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:84,integrability,Messag,Messages,84,The idea of making the tutorials fail more gracefully than tests sounds good to me. Messages should be more user friendly (@Axel-Naumann already provided a good suggestion for this one). Also agree with the `exit(1)`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:84,interoperability,Messag,Messages,84,The idea of making the tutorials fail more gracefully than tests sounds good to me. Messages should be more user friendly (@Axel-Naumann already provided a good suggestion for this one). Also agree with the `exit(1)`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:33,reliability,fail,fail,33,The idea of making the tutorials fail more gracefully than tests sounds good to me. Messages should be more user friendly (@Axel-Naumann already provided a good suggestion for this one). Also agree with the `exit(1)`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:59,safety,test,tests,59,The idea of making the tutorials fail more gracefully than tests sounds good to me. Messages should be more user friendly (@Axel-Naumann already provided a good suggestion for this one). Also agree with the `exit(1)`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:59,testability,test,tests,59,The idea of making the tutorials fail more gracefully than tests sounds good to me. Messages should be more user friendly (@Axel-Naumann already provided a good suggestion for this one). Also agree with the `exit(1)`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:108,usability,user,user,108,The idea of making the tutorials fail more gracefully than tests sounds good to me. Messages should be more user friendly (@Axel-Naumann already provided a good suggestion for this one). Also agree with the `exit(1)`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:39,safety,except,except,39,"Alrighty, so I put there again the try/except guards and just return `exit(1)`, let's see how it goes!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:55,deployability,instal,installed,55,Either something is wrong or we have everywhere pandas installed :thinking:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5398:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5398
https://github.com/root-project/root/pull/5398:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5398
https://github.com/root-project/root/pull/5398:11,deployability,build,build,11,@phsft-bot build just on mac1015/cxx17 with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5398
https://github.com/root-project/root/pull/5398:5,availability,failur,failure,5,That failure is unrelated to the pull request.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5398
https://github.com/root-project/root/pull/5398:5,deployability,fail,failure,5,That failure is unrelated to the pull request.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5398
https://github.com/root-project/root/pull/5398:5,performance,failur,failure,5,That failure is unrelated to the pull request.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5398
https://github.com/root-project/root/pull/5398:5,reliability,fail,failure,5,That failure is unrelated to the pull request.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5398
https://github.com/root-project/root/pull/5398:69,safety,prevent,preventing,69,I am tagging this as urgent as it should resolve a problem for atlas preventing them to migrate to v6.20.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5398
https://github.com/root-project/root/pull/5398:69,security,preven,preventing,69,I am tagging this as urgent as it should resolve a problem for atlas preventing them to migrate to v6.20.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5398
https://github.com/root-project/root/pull/5400:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu18.04/default with flags -Darrow=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5400
https://github.com/root-project/root/pull/5400:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu18.04/default with flags -Darrow=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5400
https://github.com/root-project/root/pull/5400:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu18.04/default with flags -Darrow=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5400
https://github.com/root-project/root/pull/5400:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu18.04/default with flags -Darrow=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5400
https://github.com/root-project/root/pull/5401:11,deployability,build,build,11,@phsft-bot build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5401
https://github.com/root-project/root/pull/5402:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5402
https://github.com/root-project/root/pull/5402:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5402
https://github.com/root-project/root/pull/5402:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5402
https://github.com/root-project/root/pull/5402:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5402
https://github.com/root-project/root/pull/5402:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5402
https://github.com/root-project/root/pull/5402:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5402
https://github.com/root-project/root/pull/5402:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5402
https://github.com/root-project/root/pull/5402:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5402
https://github.com/root-project/root/pull/5402:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5402
https://github.com/root-project/root/pull/5402:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5402
https://github.com/root-project/root/pull/5402:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5402
https://github.com/root-project/root/pull/5402:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5402
https://github.com/root-project/root/pull/5402:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5402
https://github.com/root-project/root/pull/5402:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5402
https://github.com/root-project/root/pull/5402:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5402
https://github.com/root-project/root/pull/5402:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5402
https://github.com/root-project/root/pull/5402:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5402
https://github.com/root-project/root/pull/5402:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5402
https://github.com/root-project/root/pull/5402:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5402
https://github.com/root-project/root/pull/5402:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5402
https://github.com/root-project/root/pull/5402:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5402
https://github.com/root-project/root/pull/5402:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5402
https://github.com/root-project/root/pull/5402:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5402
https://github.com/root-project/root/pull/5402:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5402
https://github.com/root-project/root/pull/5404:0,availability,Failur,Failure,0,Failure is unrelated (apparent race condition in build system).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5404
https://github.com/root-project/root/pull/5404:0,deployability,Fail,Failure,0,Failure is unrelated (apparent race condition in build system).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5404
https://github.com/root-project/root/pull/5404:49,deployability,build,build,49,Failure is unrelated (apparent race condition in build system).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5404
https://github.com/root-project/root/pull/5404:0,performance,Failur,Failure,0,Failure is unrelated (apparent race condition in build system).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5404
https://github.com/root-project/root/pull/5404:0,reliability,Fail,Failure,0,Failure is unrelated (apparent race condition in build system).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5404
https://github.com/root-project/root/pull/5405:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu18.04/default with flags -Darrow=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5405
https://github.com/root-project/root/pull/5405:10,deployability,build,build,10,"@eguiraud build green, can you edit please commit message and it is ready to go :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5405
https://github.com/root-project/root/pull/5405:16,energy efficiency,green,green,16,"@eguiraud build green, can you edit please commit message and it is ready to go :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5405
https://github.com/root-project/root/pull/5405:50,integrability,messag,message,50,"@eguiraud build green, can you edit please commit message and it is ready to go :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5405
https://github.com/root-project/root/pull/5405:50,interoperability,messag,message,50,"@eguiraud build green, can you edit please commit message and it is ready to go :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5405
https://github.com/root-project/root/pull/5405:48,deployability,updat,updated,48,"Thanks for taking a look Oksana, commit message updated!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5405
https://github.com/root-project/root/pull/5405:40,integrability,messag,message,40,"Thanks for taking a look Oksana, commit message updated!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5405
https://github.com/root-project/root/pull/5405:40,interoperability,messag,message,40,"Thanks for taking a look Oksana, commit message updated!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5405
https://github.com/root-project/root/pull/5405:48,safety,updat,updated,48,"Thanks for taking a look Oksana, commit message updated!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5405
https://github.com/root-project/root/pull/5405:48,security,updat,updated,48,"Thanks for taking a look Oksana, commit message updated!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5405
https://github.com/root-project/root/pull/5405:64,usability,statu,status,64,"Can't press the merge button because ""WIP"" is not reporting its status, will try again tomorrow",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5405
https://github.com/root-project/root/pull/5405:18,usability,help,helped,18,Editing the title helped. Might be related to https://github.com/wip/app/issues/216 - i.e. let's give this some more weeks to see whether we get stuck again.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5405
https://github.com/root-project/root/pull/5406:47,safety,test,tests,47,@eguiraud this should solve the issue with the tests.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5406
https://github.com/root-project/root/pull/5406:47,testability,test,tests,47,@eguiraud this should solve the issue with the tests.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5406
https://github.com/root-project/root/pull/5406:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu18.04/default with flags -Darrow=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5406
https://github.com/root-project/root/pull/5406:52,availability,servic,services,52,build is waiting for the node [here](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77465/console),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5406
https://github.com/root-project/root/pull/5406:0,deployability,build,build,0,build is waiting for the node [here](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77465/console),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5406
https://github.com/root-project/root/pull/5406:52,deployability,servic,services,52,build is waiting for the node [here](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77465/console),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5406
https://github.com/root-project/root/pull/5406:104,deployability,build,build,104,build is waiting for the node [here](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77465/console),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5406
https://github.com/root-project/root/pull/5406:52,integrability,servic,services,52,build is waiting for the node [here](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77465/console),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5406
https://github.com/root-project/root/pull/5406:52,modifiability,servic,services,52,build is waiting for the node [here](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77465/console),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5406
https://github.com/root-project/root/pull/5407:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5407
https://github.com/root-project/root/pull/5407:47,deployability,continu,continue,47,"Lets remove this commit from here, so you will continue discussion in new PRs and then it is ready to go!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5407
https://github.com/root-project/root/pull/5408:128,deployability,build,build,128,"@oshadura How can I get the path to the `requirements.txt` in the test? `ROOTSYS` does not really help because it points to the build dir, I would need the path to the source dir.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:82,reliability,doe,does,82,"@oshadura How can I get the path to the `requirements.txt` in the test? `ROOTSYS` does not really help because it points to the build dir, I would need the path to the source dir.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:66,safety,test,test,66,"@oshadura How can I get the path to the `requirements.txt` in the test? `ROOTSYS` does not really help because it points to the build dir, I would need the path to the source dir.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:66,testability,test,test,66,"@oshadura How can I get the path to the `requirements.txt` in the test? `ROOTSYS` does not really help because it points to the build dir, I would need the path to the source dir.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:98,usability,help,help,98,"@oshadura How can I get the path to the `requirements.txt` in the test? `ROOTSYS` does not really help because it points to the build dir, I would need the path to the source dir.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:130,deployability,build,build,130,"> @oshadura How can I get the path to the `requirements.txt` in the test? `ROOTSYS` does not really help because it points to the build dir, I would need the path to the source dir. Supposing the test is under ""path/to/root/bindings/pyroot_experimental/pythonizations/test/"" you could do:. ```. import os. abspath = os.path.abspath(__file__) # path/to/root/bindings/pyroot_experimental/pythonizations/test/test.py. reqpath = os.path.join(abspath.partition(""bindings/"")[0], ""requirements.txt"") # path/to/root/requirements.txt. with open(reqpath) as f:. ... ```. Though I wonder whether the requirements.txt file would be better suited under the bindings folder since it's python related?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:224,interoperability,bind,bindings,224,"> @oshadura How can I get the path to the `requirements.txt` in the test? `ROOTSYS` does not really help because it points to the build dir, I would need the path to the source dir. Supposing the test is under ""path/to/root/bindings/pyroot_experimental/pythonizations/test/"" you could do:. ```. import os. abspath = os.path.abspath(__file__) # path/to/root/bindings/pyroot_experimental/pythonizations/test/test.py. reqpath = os.path.join(abspath.partition(""bindings/"")[0], ""requirements.txt"") # path/to/root/requirements.txt. with open(reqpath) as f:. ... ```. Though I wonder whether the requirements.txt file would be better suited under the bindings folder since it's python related?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:357,interoperability,bind,bindings,357,"> @oshadura How can I get the path to the `requirements.txt` in the test? `ROOTSYS` does not really help because it points to the build dir, I would need the path to the source dir. Supposing the test is under ""path/to/root/bindings/pyroot_experimental/pythonizations/test/"" you could do:. ```. import os. abspath = os.path.abspath(__file__) # path/to/root/bindings/pyroot_experimental/pythonizations/test/test.py. reqpath = os.path.join(abspath.partition(""bindings/"")[0], ""requirements.txt"") # path/to/root/requirements.txt. with open(reqpath) as f:. ... ```. Though I wonder whether the requirements.txt file would be better suited under the bindings folder since it's python related?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:457,interoperability,bind,bindings,457,"> @oshadura How can I get the path to the `requirements.txt` in the test? `ROOTSYS` does not really help because it points to the build dir, I would need the path to the source dir. Supposing the test is under ""path/to/root/bindings/pyroot_experimental/pythonizations/test/"" you could do:. ```. import os. abspath = os.path.abspath(__file__) # path/to/root/bindings/pyroot_experimental/pythonizations/test/test.py. reqpath = os.path.join(abspath.partition(""bindings/"")[0], ""requirements.txt"") # path/to/root/requirements.txt. with open(reqpath) as f:. ... ```. Though I wonder whether the requirements.txt file would be better suited under the bindings folder since it's python related?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:644,interoperability,bind,bindings,644,"> @oshadura How can I get the path to the `requirements.txt` in the test? `ROOTSYS` does not really help because it points to the build dir, I would need the path to the source dir. Supposing the test is under ""path/to/root/bindings/pyroot_experimental/pythonizations/test/"" you could do:. ```. import os. abspath = os.path.abspath(__file__) # path/to/root/bindings/pyroot_experimental/pythonizations/test/test.py. reqpath = os.path.join(abspath.partition(""bindings/"")[0], ""requirements.txt"") # path/to/root/requirements.txt. with open(reqpath) as f:. ... ```. Though I wonder whether the requirements.txt file would be better suited under the bindings folder since it's python related?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:224,modifiability,bind,bindings,224,"> @oshadura How can I get the path to the `requirements.txt` in the test? `ROOTSYS` does not really help because it points to the build dir, I would need the path to the source dir. Supposing the test is under ""path/to/root/bindings/pyroot_experimental/pythonizations/test/"" you could do:. ```. import os. abspath = os.path.abspath(__file__) # path/to/root/bindings/pyroot_experimental/pythonizations/test/test.py. reqpath = os.path.join(abspath.partition(""bindings/"")[0], ""requirements.txt"") # path/to/root/requirements.txt. with open(reqpath) as f:. ... ```. Though I wonder whether the requirements.txt file would be better suited under the bindings folder since it's python related?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:357,modifiability,bind,bindings,357,"> @oshadura How can I get the path to the `requirements.txt` in the test? `ROOTSYS` does not really help because it points to the build dir, I would need the path to the source dir. Supposing the test is under ""path/to/root/bindings/pyroot_experimental/pythonizations/test/"" you could do:. ```. import os. abspath = os.path.abspath(__file__) # path/to/root/bindings/pyroot_experimental/pythonizations/test/test.py. reqpath = os.path.join(abspath.partition(""bindings/"")[0], ""requirements.txt"") # path/to/root/requirements.txt. with open(reqpath) as f:. ... ```. Though I wonder whether the requirements.txt file would be better suited under the bindings folder since it's python related?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:457,modifiability,bind,bindings,457,"> @oshadura How can I get the path to the `requirements.txt` in the test? `ROOTSYS` does not really help because it points to the build dir, I would need the path to the source dir. Supposing the test is under ""path/to/root/bindings/pyroot_experimental/pythonizations/test/"" you could do:. ```. import os. abspath = os.path.abspath(__file__) # path/to/root/bindings/pyroot_experimental/pythonizations/test/test.py. reqpath = os.path.join(abspath.partition(""bindings/"")[0], ""requirements.txt"") # path/to/root/requirements.txt. with open(reqpath) as f:. ... ```. Though I wonder whether the requirements.txt file would be better suited under the bindings folder since it's python related?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:644,modifiability,bind,bindings,644,"> @oshadura How can I get the path to the `requirements.txt` in the test? `ROOTSYS` does not really help because it points to the build dir, I would need the path to the source dir. Supposing the test is under ""path/to/root/bindings/pyroot_experimental/pythonizations/test/"" you could do:. ```. import os. abspath = os.path.abspath(__file__) # path/to/root/bindings/pyroot_experimental/pythonizations/test/test.py. reqpath = os.path.join(abspath.partition(""bindings/"")[0], ""requirements.txt"") # path/to/root/requirements.txt. with open(reqpath) as f:. ... ```. Though I wonder whether the requirements.txt file would be better suited under the bindings folder since it's python related?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:84,reliability,doe,does,84,"> @oshadura How can I get the path to the `requirements.txt` in the test? `ROOTSYS` does not really help because it points to the build dir, I would need the path to the source dir. Supposing the test is under ""path/to/root/bindings/pyroot_experimental/pythonizations/test/"" you could do:. ```. import os. abspath = os.path.abspath(__file__) # path/to/root/bindings/pyroot_experimental/pythonizations/test/test.py. reqpath = os.path.join(abspath.partition(""bindings/"")[0], ""requirements.txt"") # path/to/root/requirements.txt. with open(reqpath) as f:. ... ```. Though I wonder whether the requirements.txt file would be better suited under the bindings folder since it's python related?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:68,safety,test,test,68,"> @oshadura How can I get the path to the `requirements.txt` in the test? `ROOTSYS` does not really help because it points to the build dir, I would need the path to the source dir. Supposing the test is under ""path/to/root/bindings/pyroot_experimental/pythonizations/test/"" you could do:. ```. import os. abspath = os.path.abspath(__file__) # path/to/root/bindings/pyroot_experimental/pythonizations/test/test.py. reqpath = os.path.join(abspath.partition(""bindings/"")[0], ""requirements.txt"") # path/to/root/requirements.txt. with open(reqpath) as f:. ... ```. Though I wonder whether the requirements.txt file would be better suited under the bindings folder since it's python related?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:196,safety,test,test,196,"> @oshadura How can I get the path to the `requirements.txt` in the test? `ROOTSYS` does not really help because it points to the build dir, I would need the path to the source dir. Supposing the test is under ""path/to/root/bindings/pyroot_experimental/pythonizations/test/"" you could do:. ```. import os. abspath = os.path.abspath(__file__) # path/to/root/bindings/pyroot_experimental/pythonizations/test/test.py. reqpath = os.path.join(abspath.partition(""bindings/"")[0], ""requirements.txt"") # path/to/root/requirements.txt. with open(reqpath) as f:. ... ```. Though I wonder whether the requirements.txt file would be better suited under the bindings folder since it's python related?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:268,safety,test,test,268,"> @oshadura How can I get the path to the `requirements.txt` in the test? `ROOTSYS` does not really help because it points to the build dir, I would need the path to the source dir. Supposing the test is under ""path/to/root/bindings/pyroot_experimental/pythonizations/test/"" you could do:. ```. import os. abspath = os.path.abspath(__file__) # path/to/root/bindings/pyroot_experimental/pythonizations/test/test.py. reqpath = os.path.join(abspath.partition(""bindings/"")[0], ""requirements.txt"") # path/to/root/requirements.txt. with open(reqpath) as f:. ... ```. Though I wonder whether the requirements.txt file would be better suited under the bindings folder since it's python related?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:401,safety,test,test,401,"> @oshadura How can I get the path to the `requirements.txt` in the test? `ROOTSYS` does not really help because it points to the build dir, I would need the path to the source dir. Supposing the test is under ""path/to/root/bindings/pyroot_experimental/pythonizations/test/"" you could do:. ```. import os. abspath = os.path.abspath(__file__) # path/to/root/bindings/pyroot_experimental/pythonizations/test/test.py. reqpath = os.path.join(abspath.partition(""bindings/"")[0], ""requirements.txt"") # path/to/root/requirements.txt. with open(reqpath) as f:. ... ```. Though I wonder whether the requirements.txt file would be better suited under the bindings folder since it's python related?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:406,safety,test,test,406,"> @oshadura How can I get the path to the `requirements.txt` in the test? `ROOTSYS` does not really help because it points to the build dir, I would need the path to the source dir. Supposing the test is under ""path/to/root/bindings/pyroot_experimental/pythonizations/test/"" you could do:. ```. import os. abspath = os.path.abspath(__file__) # path/to/root/bindings/pyroot_experimental/pythonizations/test/test.py. reqpath = os.path.join(abspath.partition(""bindings/"")[0], ""requirements.txt"") # path/to/root/requirements.txt. with open(reqpath) as f:. ... ```. Though I wonder whether the requirements.txt file would be better suited under the bindings folder since it's python related?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:68,testability,test,test,68,"> @oshadura How can I get the path to the `requirements.txt` in the test? `ROOTSYS` does not really help because it points to the build dir, I would need the path to the source dir. Supposing the test is under ""path/to/root/bindings/pyroot_experimental/pythonizations/test/"" you could do:. ```. import os. abspath = os.path.abspath(__file__) # path/to/root/bindings/pyroot_experimental/pythonizations/test/test.py. reqpath = os.path.join(abspath.partition(""bindings/"")[0], ""requirements.txt"") # path/to/root/requirements.txt. with open(reqpath) as f:. ... ```. Though I wonder whether the requirements.txt file would be better suited under the bindings folder since it's python related?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:196,testability,test,test,196,"> @oshadura How can I get the path to the `requirements.txt` in the test? `ROOTSYS` does not really help because it points to the build dir, I would need the path to the source dir. Supposing the test is under ""path/to/root/bindings/pyroot_experimental/pythonizations/test/"" you could do:. ```. import os. abspath = os.path.abspath(__file__) # path/to/root/bindings/pyroot_experimental/pythonizations/test/test.py. reqpath = os.path.join(abspath.partition(""bindings/"")[0], ""requirements.txt"") # path/to/root/requirements.txt. with open(reqpath) as f:. ... ```. Though I wonder whether the requirements.txt file would be better suited under the bindings folder since it's python related?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:268,testability,test,test,268,"> @oshadura How can I get the path to the `requirements.txt` in the test? `ROOTSYS` does not really help because it points to the build dir, I would need the path to the source dir. Supposing the test is under ""path/to/root/bindings/pyroot_experimental/pythonizations/test/"" you could do:. ```. import os. abspath = os.path.abspath(__file__) # path/to/root/bindings/pyroot_experimental/pythonizations/test/test.py. reqpath = os.path.join(abspath.partition(""bindings/"")[0], ""requirements.txt"") # path/to/root/requirements.txt. with open(reqpath) as f:. ... ```. Though I wonder whether the requirements.txt file would be better suited under the bindings folder since it's python related?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:401,testability,test,test,401,"> @oshadura How can I get the path to the `requirements.txt` in the test? `ROOTSYS` does not really help because it points to the build dir, I would need the path to the source dir. Supposing the test is under ""path/to/root/bindings/pyroot_experimental/pythonizations/test/"" you could do:. ```. import os. abspath = os.path.abspath(__file__) # path/to/root/bindings/pyroot_experimental/pythonizations/test/test.py. reqpath = os.path.join(abspath.partition(""bindings/"")[0], ""requirements.txt"") # path/to/root/requirements.txt. with open(reqpath) as f:. ... ```. Though I wonder whether the requirements.txt file would be better suited under the bindings folder since it's python related?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:406,testability,test,test,406,"> @oshadura How can I get the path to the `requirements.txt` in the test? `ROOTSYS` does not really help because it points to the build dir, I would need the path to the source dir. Supposing the test is under ""path/to/root/bindings/pyroot_experimental/pythonizations/test/"" you could do:. ```. import os. abspath = os.path.abspath(__file__) # path/to/root/bindings/pyroot_experimental/pythonizations/test/test.py. reqpath = os.path.join(abspath.partition(""bindings/"")[0], ""requirements.txt"") # path/to/root/requirements.txt. with open(reqpath) as f:. ... ```. Though I wonder whether the requirements.txt file would be better suited under the bindings folder since it's python related?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:100,usability,help,help,100,"> @oshadura How can I get the path to the `requirements.txt` in the test? `ROOTSYS` does not really help because it points to the build dir, I would need the path to the source dir. Supposing the test is under ""path/to/root/bindings/pyroot_experimental/pythonizations/test/"" you could do:. ```. import os. abspath = os.path.abspath(__file__) # path/to/root/bindings/pyroot_experimental/pythonizations/test/test.py. reqpath = os.path.join(abspath.partition(""bindings/"")[0], ""requirements.txt"") # path/to/root/requirements.txt. with open(reqpath) as f:. ... ```. Though I wonder whether the requirements.txt file would be better suited under the bindings folder since it's python related?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:73,interoperability,bind,bindings,73,"I get what you mean, but in this case I don't think the location of the `bindings/` folder will change anytime relative to the home `root` folder right? Otherwise, a new `ROOTHOME` variable could be set along with `ROOTSYS` ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:73,modifiability,bind,bindings,73,"I get what you mean, but in this case I don't think the location of the `bindings/` folder will change anytime relative to the home `root` folder right? Otherwise, a new `ROOTHOME` variable could be set along with `ROOTSYS` ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:181,modifiability,variab,variable,181,"I get what you mean, but in this case I don't think the location of the `bindings/` folder will change anytime relative to the home `root` folder right? Otherwise, a new `ROOTHOME` variable could be set along with `ROOTSYS` ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:14,safety,test,tests,14,Do we run the tests always from the source directory? I'm not 100% sure about this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:14,testability,test,tests,14,Do we run the tests always from the source directory? I'm not 100% sure about this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:153,safety,test,test,153,"I believe that `os.path.abspath` always returns the absolute path starting from the `/` folder of the machine, irrespective of the folder from where the test is running. At least on linux, not sure about windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:153,testability,test,test,153,"I believe that `os.path.abspath` always returns the absolute path starting from the `/` folder of the machine, irrespective of the folder from where the test is running. At least on linux, not sure about windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:123,integrability,sub,subprocess,123,"There is also `root-config --srcdir` that actually returns the path to the main `root` directory, it could be called with `subprocess` in python",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:73,safety,test,tests,73,"Nice! That's actually a quite nice solution, and could be viable for the tests. Just hope you don't move the source dir ;) Could be a start!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:73,testability,test,tests,73,"Nice! That's actually a quite nice solution, and could be viable for the tests. Just hope you don't move the source dir ;) Could be a start!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:121,deployability,configurat,configuration,121,"Hi,. isn't it enough (and more similar to what users would experience) to run `pip check`? It could even be done at ROOT configuration time if `-Dpython=ON`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:121,integrability,configur,configuration,121,"Hi,. isn't it enough (and more similar to what users would experience) to run `pip check`? It could even be done at ROOT configuration time if `-Dpython=ON`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:121,modifiability,configur,configuration,121,"Hi,. isn't it enough (and more similar to what users would experience) to run `pip check`? It could even be done at ROOT configuration time if `-Dpython=ON`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:135,performance,time,time,135,"Hi,. isn't it enough (and more similar to what users would experience) to run `pip check`? It could even be done at ROOT configuration time if `-Dpython=ON`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:121,security,configur,configuration,121,"Hi,. isn't it enough (and more similar to what users would experience) to run `pip check`? It could even be done at ROOT configuration time if `-Dpython=ON`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:47,usability,user,users,47,"Hi,. isn't it enough (and more similar to what users would experience) to run `pip check`? It could even be done at ROOT configuration time if `-Dpython=ON`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:59,usability,experien,experience,59,"Hi,. isn't it enough (and more similar to what users would experience) to run `pip check`? It could even be done at ROOT configuration time if `-Dpython=ON`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:72,deployability,configurat,configuration,72,"@eguiraud Good question! I don't know whether we want to enforce this a configuration time. Would make sense, tbh, though this would enforce much more stricter requirements than the ones we have now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:72,integrability,configur,configuration,72,"@eguiraud Good question! I don't know whether we want to enforce this a configuration time. Would make sense, tbh, though this would enforce much more stricter requirements than the ones we have now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:72,modifiability,configur,configuration,72,"@eguiraud Good question! I don't know whether we want to enforce this a configuration time. Would make sense, tbh, though this would enforce much more stricter requirements than the ones we have now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:86,performance,time,time,86,"@eguiraud Good question! I don't know whether we want to enforce this a configuration time. Would make sense, tbh, though this would enforce much more stricter requirements than the ones we have now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:72,security,configur,configuration,72,"@eguiraud Good question! I don't know whether we want to enforce this a configuration time. Would make sense, tbh, though this would enforce much more stricter requirements than the ones we have now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:125,deployability,configurat,configuration,125,"> Hi,. > isn't it enough (and more similar to what users would experience) to run `pip check`? It could even be done at ROOT configuration time if `-Dpython=ON`. We don't have this option anymore :) Now it is ""pyroot""...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:125,integrability,configur,configuration,125,"> Hi,. > isn't it enough (and more similar to what users would experience) to run `pip check`? It could even be done at ROOT configuration time if `-Dpython=ON`. We don't have this option anymore :) Now it is ""pyroot""...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:125,modifiability,configur,configuration,125,"> Hi,. > isn't it enough (and more similar to what users would experience) to run `pip check`? It could even be done at ROOT configuration time if `-Dpython=ON`. We don't have this option anymore :) Now it is ""pyroot""...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:139,performance,time,time,139,"> Hi,. > isn't it enough (and more similar to what users would experience) to run `pip check`? It could even be done at ROOT configuration time if `-Dpython=ON`. We don't have this option anymore :) Now it is ""pyroot""...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:125,security,configur,configuration,125,"> Hi,. > isn't it enough (and more similar to what users would experience) to run `pip check`? It could even be done at ROOT configuration time if `-Dpython=ON`. We don't have this option anymore :) Now it is ""pyroot""...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:51,usability,user,users,51,"> Hi,. > isn't it enough (and more similar to what users would experience) to run `pip check`? It could even be done at ROOT configuration time if `-Dpython=ON`. We don't have this option anymore :) Now it is ""pyroot""...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:63,usability,experien,experience,63,"> Hi,. > isn't it enough (and more similar to what users would experience) to run `pip check`? It could even be done at ROOT configuration time if `-Dpython=ON`. We don't have this option anymore :) Now it is ""pyroot""...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:116,deployability,build,build,116,"So I think what we agreed on on Mattermost: We want the thingy, but no checks at configure time (because it's not a build time dependency). We still have to iterate how exactly we want to check at test time the dependencies, but I think at a first shot, the current impl is good enough. Feel free to argue :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:127,deployability,depend,dependency,127,"So I think what we agreed on on Mattermost: We want the thingy, but no checks at configure time (because it's not a build time dependency). We still have to iterate how exactly we want to check at test time the dependencies, but I think at a first shot, the current impl is good enough. Feel free to argue :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:211,deployability,depend,dependencies,211,"So I think what we agreed on on Mattermost: We want the thingy, but no checks at configure time (because it's not a build time dependency). We still have to iterate how exactly we want to check at test time the dependencies, but I think at a first shot, the current impl is good enough. Feel free to argue :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:258,energy efficiency,current,current,258,"So I think what we agreed on on Mattermost: We want the thingy, but no checks at configure time (because it's not a build time dependency). We still have to iterate how exactly we want to check at test time the dependencies, but I think at a first shot, the current impl is good enough. Feel free to argue :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:81,integrability,configur,configure,81,"So I think what we agreed on on Mattermost: We want the thingy, but no checks at configure time (because it's not a build time dependency). We still have to iterate how exactly we want to check at test time the dependencies, but I think at a first shot, the current impl is good enough. Feel free to argue :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:127,integrability,depend,dependency,127,"So I think what we agreed on on Mattermost: We want the thingy, but no checks at configure time (because it's not a build time dependency). We still have to iterate how exactly we want to check at test time the dependencies, but I think at a first shot, the current impl is good enough. Feel free to argue :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:211,integrability,depend,dependencies,211,"So I think what we agreed on on Mattermost: We want the thingy, but no checks at configure time (because it's not a build time dependency). We still have to iterate how exactly we want to check at test time the dependencies, but I think at a first shot, the current impl is good enough. Feel free to argue :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:81,modifiability,configur,configure,81,"So I think what we agreed on on Mattermost: We want the thingy, but no checks at configure time (because it's not a build time dependency). We still have to iterate how exactly we want to check at test time the dependencies, but I think at a first shot, the current impl is good enough. Feel free to argue :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:127,modifiability,depend,dependency,127,"So I think what we agreed on on Mattermost: We want the thingy, but no checks at configure time (because it's not a build time dependency). We still have to iterate how exactly we want to check at test time the dependencies, but I think at a first shot, the current impl is good enough. Feel free to argue :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:211,modifiability,depend,dependencies,211,"So I think what we agreed on on Mattermost: We want the thingy, but no checks at configure time (because it's not a build time dependency). We still have to iterate how exactly we want to check at test time the dependencies, but I think at a first shot, the current impl is good enough. Feel free to argue :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:91,performance,time,time,91,"So I think what we agreed on on Mattermost: We want the thingy, but no checks at configure time (because it's not a build time dependency). We still have to iterate how exactly we want to check at test time the dependencies, but I think at a first shot, the current impl is good enough. Feel free to argue :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:122,performance,time,time,122,"So I think what we agreed on on Mattermost: We want the thingy, but no checks at configure time (because it's not a build time dependency). We still have to iterate how exactly we want to check at test time the dependencies, but I think at a first shot, the current impl is good enough. Feel free to argue :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:202,performance,time,time,202,"So I think what we agreed on on Mattermost: We want the thingy, but no checks at configure time (because it's not a build time dependency). We still have to iterate how exactly we want to check at test time the dependencies, but I think at a first shot, the current impl is good enough. Feel free to argue :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:127,safety,depend,dependency,127,"So I think what we agreed on on Mattermost: We want the thingy, but no checks at configure time (because it's not a build time dependency). We still have to iterate how exactly we want to check at test time the dependencies, but I think at a first shot, the current impl is good enough. Feel free to argue :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:197,safety,test,test,197,"So I think what we agreed on on Mattermost: We want the thingy, but no checks at configure time (because it's not a build time dependency). We still have to iterate how exactly we want to check at test time the dependencies, but I think at a first shot, the current impl is good enough. Feel free to argue :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:211,safety,depend,dependencies,211,"So I think what we agreed on on Mattermost: We want the thingy, but no checks at configure time (because it's not a build time dependency). We still have to iterate how exactly we want to check at test time the dependencies, but I think at a first shot, the current impl is good enough. Feel free to argue :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:81,security,configur,configure,81,"So I think what we agreed on on Mattermost: We want the thingy, but no checks at configure time (because it's not a build time dependency). We still have to iterate how exactly we want to check at test time the dependencies, but I think at a first shot, the current impl is good enough. Feel free to argue :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:127,testability,depend,dependency,127,"So I think what we agreed on on Mattermost: We want the thingy, but no checks at configure time (because it's not a build time dependency). We still have to iterate how exactly we want to check at test time the dependencies, but I think at a first shot, the current impl is good enough. Feel free to argue :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:197,testability,test,test,197,"So I think what we agreed on on Mattermost: We want the thingy, but no checks at configure time (because it's not a build time dependency). We still have to iterate how exactly we want to check at test time the dependencies, but I think at a first shot, the current impl is good enough. Feel free to argue :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:211,testability,depend,dependencies,211,"So I think what we agreed on on Mattermost: We want the thingy, but no checks at configure time (because it's not a build time dependency). We still have to iterate how exactly we want to check at test time the dependencies, but I think at a first shot, the current impl is good enough. Feel free to argue :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:123,integrability,sub,subTest,123,"Yes, of course. I thought about numba and hte requirements for the notebooks as minimal set of requriements. However, the `subTest` function seems not to be on all platforms. I'll check that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:164,interoperability,platform,platforms,164,"Yes, of course. I thought about numba and hte requirements for the notebooks as minimal set of requriements. However, the `subTest` function seems not to be on all platforms. I'll check that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:80,usability,minim,minimal,80,"Yes, of course. I thought about numba and hte requirements for the notebooks as minimal set of requriements. However, the `subTest` function seems not to be on all platforms. I'll check that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:26,deployability,manag,manager,26,"Ok, the `subTest` context manager of `pyunittest` is just there since py3.4: https://docs.python.org/3/library/unittest.html. I look for a workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:26,energy efficiency,manag,manager,26,"Ok, the `subTest` context manager of `pyunittest` is just there since py3.4: https://docs.python.org/3/library/unittest.html. I look for a workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:9,integrability,sub,subTest,9,"Ok, the `subTest` context manager of `pyunittest` is just there since py3.4: https://docs.python.org/3/library/unittest.html. I look for a workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:26,safety,manag,manager,26,"Ok, the `subTest` context manager of `pyunittest` is just there since py3.4: https://docs.python.org/3/library/unittest.html. I look for a workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:18,testability,context,context,18,"Ok, the `subTest` context manager of `pyunittest` is just there since py3.4: https://docs.python.org/3/library/unittest.html. I look for a workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:111,testability,unit,unittest,111,"Ok, the `subTest` context manager of `pyunittest` is just there since py3.4: https://docs.python.org/3/library/unittest.html. I look for a workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:73,availability,error,error,73,"Interesting to see the versions on our build nodes ;) We have now a nice error report like this:. ```. Full path to requirements.txt: /mnt/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - numba 0.47.0 is installed but numba>=0.48.0 is required. - The 'notebook>=4.4.1' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. ```. I'll go there on Monday and lower the requirements accordingly and/or update/install the packages on the nodes. But for potential reviewers, I would keep the infrastructure as it is!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:23,deployability,version,versions,23,"Interesting to see the versions on our build nodes ;) We have now a nice error report like this:. ```. Full path to requirements.txt: /mnt/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - numba 0.47.0 is installed but numba>=0.48.0 is required. - The 'notebook>=4.4.1' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. ```. I'll go there on Monday and lower the requirements accordingly and/or update/install the packages on the nodes. But for potential reviewers, I would keep the infrastructure as it is!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:39,deployability,build,build,39,"Interesting to see the versions on our build nodes ;) We have now a nice error report like this:. ```. Full path to requirements.txt: /mnt/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - numba 0.47.0 is installed but numba>=0.48.0 is required. - The 'notebook>=4.4.1' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. ```. I'll go there on Monday and lower the requirements accordingly and/or update/install the packages on the nodes. But for potential reviewers, I would keep the infrastructure as it is!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:139,deployability,build,build,139,"Interesting to see the versions on our build nodes ;) We have now a nice error report like this:. ```. Full path to requirements.txt: /mnt/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - numba 0.47.0 is installed but numba>=0.48.0 is required. - The 'notebook>=4.4.1' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. ```. I'll go there on Monday and lower the requirements accordingly and/or update/install the packages on the nodes. But for potential reviewers, I would keep the infrastructure as it is!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:173,deployability,build,build,173,"Interesting to see the versions on our build nodes ;) We have now a nice error report like this:. ```. Full path to requirements.txt: /mnt/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - numba 0.47.0 is installed but numba>=0.48.0 is required. - The 'notebook>=4.4.1' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. ```. I'll go there on Monday and lower the requirements accordingly and/or update/install the packages on the nodes. But for potential reviewers, I would keep the infrastructure as it is!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:228,deployability,depend,dependencies,228,"Interesting to see the versions on our build nodes ;) We have now a nice error report like this:. ```. Full path to requirements.txt: /mnt/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - numba 0.47.0 is installed but numba>=0.48.0 is required. - The 'notebook>=4.4.1' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. ```. I'll go there on Monday and lower the requirements accordingly and/or update/install the packages on the nodes. But for potential reviewers, I would keep the infrastructure as it is!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:261,deployability,instal,installed,261,"Interesting to see the versions on our build nodes ;) We have now a nice error report like this:. ```. Full path to requirements.txt: /mnt/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - numba 0.47.0 is installed but numba>=0.48.0 is required. - The 'notebook>=4.4.1' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. ```. I'll go there on Monday and lower the requirements accordingly and/or update/install the packages on the nodes. But for potential reviewers, I would keep the infrastructure as it is!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:554,deployability,updat,update,554,"Interesting to see the versions on our build nodes ;) We have now a nice error report like this:. ```. Full path to requirements.txt: /mnt/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - numba 0.47.0 is installed but numba>=0.48.0 is required. - The 'notebook>=4.4.1' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. ```. I'll go there on Monday and lower the requirements accordingly and/or update/install the packages on the nodes. But for potential reviewers, I would keep the infrastructure as it is!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:561,deployability,instal,install,561,"Interesting to see the versions on our build nodes ;) We have now a nice error report like this:. ```. Full path to requirements.txt: /mnt/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - numba 0.47.0 is installed but numba>=0.48.0 is required. - The 'notebook>=4.4.1' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. ```. I'll go there on Monday and lower the requirements accordingly and/or update/install the packages on the nodes. But for potential reviewers, I would keep the infrastructure as it is!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:642,deployability,infrastructur,infrastructure,642,"Interesting to see the versions on our build nodes ;) We have now a nice error report like this:. ```. Full path to requirements.txt: /mnt/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - numba 0.47.0 is installed but numba>=0.48.0 is required. - The 'notebook>=4.4.1' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. ```. I'll go there on Monday and lower the requirements accordingly and/or update/install the packages on the nodes. But for potential reviewers, I would keep the infrastructure as it is!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:23,integrability,version,versions,23,"Interesting to see the versions on our build nodes ;) We have now a nice error report like this:. ```. Full path to requirements.txt: /mnt/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - numba 0.47.0 is installed but numba>=0.48.0 is required. - The 'notebook>=4.4.1' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. ```. I'll go there on Monday and lower the requirements accordingly and/or update/install the packages on the nodes. But for potential reviewers, I would keep the infrastructure as it is!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:228,integrability,depend,dependencies,228,"Interesting to see the versions on our build nodes ;) We have now a nice error report like this:. ```. Full path to requirements.txt: /mnt/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - numba 0.47.0 is installed but numba>=0.48.0 is required. - The 'notebook>=4.4.1' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. ```. I'll go there on Monday and lower the requirements accordingly and/or update/install the packages on the nodes. But for potential reviewers, I would keep the infrastructure as it is!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:326,interoperability,distribut,distribution,326,"Interesting to see the versions on our build nodes ;) We have now a nice error report like this:. ```. Full path to requirements.txt: /mnt/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - numba 0.47.0 is installed but numba>=0.48.0 is required. - The 'notebook>=4.4.1' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. ```. I'll go there on Monday and lower the requirements accordingly and/or update/install the packages on the nodes. But for potential reviewers, I would keep the infrastructure as it is!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:416,interoperability,distribut,distribution,416,"Interesting to see the versions on our build nodes ;) We have now a nice error report like this:. ```. Full path to requirements.txt: /mnt/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - numba 0.47.0 is installed but numba>=0.48.0 is required. - The 'notebook>=4.4.1' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. ```. I'll go there on Monday and lower the requirements accordingly and/or update/install the packages on the nodes. But for potential reviewers, I would keep the infrastructure as it is!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:23,modifiability,version,versions,23,"Interesting to see the versions on our build nodes ;) We have now a nice error report like this:. ```. Full path to requirements.txt: /mnt/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - numba 0.47.0 is installed but numba>=0.48.0 is required. - The 'notebook>=4.4.1' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. ```. I'll go there on Monday and lower the requirements accordingly and/or update/install the packages on the nodes. But for potential reviewers, I would keep the infrastructure as it is!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:228,modifiability,depend,dependencies,228,"Interesting to see the versions on our build nodes ;) We have now a nice error report like this:. ```. Full path to requirements.txt: /mnt/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - numba 0.47.0 is installed but numba>=0.48.0 is required. - The 'notebook>=4.4.1' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. ```. I'll go there on Monday and lower the requirements accordingly and/or update/install the packages on the nodes. But for potential reviewers, I would keep the infrastructure as it is!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:573,modifiability,pac,packages,573,"Interesting to see the versions on our build nodes ;) We have now a nice error report like this:. ```. Full path to requirements.txt: /mnt/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - numba 0.47.0 is installed but numba>=0.48.0 is required. - The 'notebook>=4.4.1' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. ```. I'll go there on Monday and lower the requirements accordingly and/or update/install the packages on the nodes. But for potential reviewers, I would keep the infrastructure as it is!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:73,performance,error,error,73,"Interesting to see the versions on our build nodes ;) We have now a nice error report like this:. ```. Full path to requirements.txt: /mnt/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - numba 0.47.0 is installed but numba>=0.48.0 is required. - The 'notebook>=4.4.1' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. ```. I'll go there on Monday and lower the requirements accordingly and/or update/install the packages on the nodes. But for potential reviewers, I would keep the infrastructure as it is!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:73,safety,error,error,73,"Interesting to see the versions on our build nodes ;) We have now a nice error report like this:. ```. Full path to requirements.txt: /mnt/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - numba 0.47.0 is installed but numba>=0.48.0 is required. - The 'notebook>=4.4.1' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. ```. I'll go there on Monday and lower the requirements accordingly and/or update/install the packages on the nodes. But for potential reviewers, I would keep the infrastructure as it is!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:228,safety,depend,dependencies,228,"Interesting to see the versions on our build nodes ;) We have now a nice error report like this:. ```. Full path to requirements.txt: /mnt/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - numba 0.47.0 is installed but numba>=0.48.0 is required. - The 'notebook>=4.4.1' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. ```. I'll go there on Monday and lower the requirements accordingly and/or update/install the packages on the nodes. But for potential reviewers, I would keep the infrastructure as it is!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:554,safety,updat,update,554,"Interesting to see the versions on our build nodes ;) We have now a nice error report like this:. ```. Full path to requirements.txt: /mnt/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - numba 0.47.0 is installed but numba>=0.48.0 is required. - The 'notebook>=4.4.1' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. ```. I'll go there on Monday and lower the requirements accordingly and/or update/install the packages on the nodes. But for potential reviewers, I would keep the infrastructure as it is!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:614,safety,review,reviewers,614,"Interesting to see the versions on our build nodes ;) We have now a nice error report like this:. ```. Full path to requirements.txt: /mnt/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - numba 0.47.0 is installed but numba>=0.48.0 is required. - The 'notebook>=4.4.1' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. ```. I'll go there on Monday and lower the requirements accordingly and/or update/install the packages on the nodes. But for potential reviewers, I would keep the infrastructure as it is!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:554,security,updat,update,554,"Interesting to see the versions on our build nodes ;) We have now a nice error report like this:. ```. Full path to requirements.txt: /mnt/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - numba 0.47.0 is installed but numba>=0.48.0 is required. - The 'notebook>=4.4.1' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. ```. I'll go there on Monday and lower the requirements accordingly and/or update/install the packages on the nodes. But for potential reviewers, I would keep the infrastructure as it is!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:228,testability,depend,dependencies,228,"Interesting to see the versions on our build nodes ;) We have now a nice error report like this:. ```. Full path to requirements.txt: /mnt/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - numba 0.47.0 is installed but numba>=0.48.0 is required. - The 'notebook>=4.4.1' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. ```. I'll go there on Monday and lower the requirements accordingly and/or update/install the packages on the nodes. But for potential reviewers, I would keep the infrastructure as it is!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:614,testability,review,reviewers,614,"Interesting to see the versions on our build nodes ;) We have now a nice error report like this:. ```. Full path to requirements.txt: /mnt/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - numba 0.47.0 is installed but numba>=0.48.0 is required. - The 'notebook>=4.4.1' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. ```. I'll go there on Monday and lower the requirements accordingly and/or update/install the packages on the nodes. But for potential reviewers, I would keep the infrastructure as it is!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:73,usability,error,error,73,"Interesting to see the versions on our build nodes ;) We have now a nice error report like this:. ```. Full path to requirements.txt: /mnt/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - numba 0.47.0 is installed but numba>=0.48.0 is required. - The 'notebook>=4.4.1' distribution was not found and is required by the application. - The 'metakernel>=0.20.0' distribution was not found and is required by the application. ```. I'll go there on Monday and lower the requirements accordingly and/or update/install the packages on the nodes. But for potential reviewers, I would keep the infrastructure as it is!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:106,deployability,depend,dependencies,106,"We do not have yet all python requirement in the current `requirements.txt`, still have to figure out all dependencies and the respective minimum version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:146,deployability,version,version,146,"We do not have yet all python requirement in the current `requirements.txt`, still have to figure out all dependencies and the respective minimum version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:49,energy efficiency,current,current,49,"We do not have yet all python requirement in the current `requirements.txt`, still have to figure out all dependencies and the respective minimum version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:106,integrability,depend,dependencies,106,"We do not have yet all python requirement in the current `requirements.txt`, still have to figure out all dependencies and the respective minimum version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:146,integrability,version,version,146,"We do not have yet all python requirement in the current `requirements.txt`, still have to figure out all dependencies and the respective minimum version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:106,modifiability,depend,dependencies,106,"We do not have yet all python requirement in the current `requirements.txt`, still have to figure out all dependencies and the respective minimum version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:146,modifiability,version,version,146,"We do not have yet all python requirement in the current `requirements.txt`, still have to figure out all dependencies and the respective minimum version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:106,safety,depend,dependencies,106,"We do not have yet all python requirement in the current `requirements.txt`, still have to figure out all dependencies and the respective minimum version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:106,testability,depend,dependencies,106,"We do not have yet all python requirement in the current `requirements.txt`, still have to figure out all dependencies and the respective minimum version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:138,usability,minim,minimum,138,"We do not have yet all python requirement in the current `requirements.txt`, still have to figure out all dependencies and the respective minimum version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:44,deployability,depend,depend,44,"But it's a good question, because we do not depend on pandas like on jupyter or numba. we just support to push data to it and test a specific interface of pandas.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:44,integrability,depend,depend,44,"But it's a good question, because we do not depend on pandas like on jupyter or numba. we just support to push data to it and test a specific interface of pandas.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:142,integrability,interfac,interface,142,"But it's a good question, because we do not depend on pandas like on jupyter or numba. we just support to push data to it and test a specific interface of pandas.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:133,interoperability,specif,specific,133,"But it's a good question, because we do not depend on pandas like on jupyter or numba. we just support to push data to it and test a specific interface of pandas.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:142,interoperability,interfac,interface,142,"But it's a good question, because we do not depend on pandas like on jupyter or numba. we just support to push data to it and test a specific interface of pandas.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:44,modifiability,depend,depend,44,"But it's a good question, because we do not depend on pandas like on jupyter or numba. we just support to push data to it and test a specific interface of pandas.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:142,modifiability,interfac,interface,142,"But it's a good question, because we do not depend on pandas like on jupyter or numba. we just support to push data to it and test a specific interface of pandas.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:44,safety,depend,depend,44,"But it's a good question, because we do not depend on pandas like on jupyter or numba. we just support to push data to it and test a specific interface of pandas.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:126,safety,test,test,126,"But it's a good question, because we do not depend on pandas like on jupyter or numba. we just support to push data to it and test a specific interface of pandas.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:44,testability,depend,depend,44,"But it's a good question, because we do not depend on pandas like on jupyter or numba. we just support to push data to it and test a specific interface of pandas.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:126,testability,test,test,126,"But it's a good question, because we do not depend on pandas like on jupyter or numba. we just support to push data to it and test a specific interface of pandas.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:95,usability,support,support,95,"But it's a good question, because we do not depend on pandas like on jupyter or numba. we just support to push data to it and test a specific interface of pandas.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:25,availability,failur,failure,25,Here an example from the failure above how the diagnostics look like:. ```. Full path to requirements.txt: /home/sftnight/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'numba>=0.47.0' distribution was not found and is required by the application. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:25,deployability,fail,failure,25,Here an example from the failure above how the diagnostics look like:. ```. Full path to requirements.txt: /home/sftnight/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'numba>=0.47.0' distribution was not found and is required by the application. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:122,deployability,build,build,122,Here an example from the failure above how the diagnostics look like:. ```. Full path to requirements.txt: /home/sftnight/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'numba>=0.47.0' distribution was not found and is required by the application. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:156,deployability,build,build,156,Here an example from the failure above how the diagnostics look like:. ```. Full path to requirements.txt: /home/sftnight/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'numba>=0.47.0' distribution was not found and is required by the application. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:211,deployability,depend,dependencies,211,Here an example from the failure above how the diagnostics look like:. ```. Full path to requirements.txt: /home/sftnight/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'numba>=0.47.0' distribution was not found and is required by the application. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:211,integrability,depend,dependencies,211,Here an example from the failure above how the diagnostics look like:. ```. Full path to requirements.txt: /home/sftnight/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'numba>=0.47.0' distribution was not found and is required by the application. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:248,interoperability,distribut,distribution,248,Here an example from the failure above how the diagnostics look like:. ```. Full path to requirements.txt: /home/sftnight/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'numba>=0.47.0' distribution was not found and is required by the application. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:211,modifiability,depend,dependencies,211,Here an example from the failure above how the diagnostics look like:. ```. Full path to requirements.txt: /home/sftnight/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'numba>=0.47.0' distribution was not found and is required by the application. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:25,performance,failur,failure,25,Here an example from the failure above how the diagnostics look like:. ```. Full path to requirements.txt: /home/sftnight/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'numba>=0.47.0' distribution was not found and is required by the application. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:25,reliability,fail,failure,25,Here an example from the failure above how the diagnostics look like:. ```. Full path to requirements.txt: /home/sftnight/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'numba>=0.47.0' distribution was not found and is required by the application. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:47,reliability,diagno,diagnostics,47,Here an example from the failure above how the diagnostics look like:. ```. Full path to requirements.txt: /home/sftnight/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'numba>=0.47.0' distribution was not found and is required by the application. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:211,safety,depend,dependencies,211,Here an example from the failure above how the diagnostics look like:. ```. Full path to requirements.txt: /home/sftnight/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'numba>=0.47.0' distribution was not found and is required by the application. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:47,testability,diagno,diagnostics,47,Here an example from the failure above how the diagnostics look like:. ```. Full path to requirements.txt: /home/sftnight/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'numba>=0.47.0' distribution was not found and is required by the application. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:211,testability,depend,dependencies,211,Here an example from the failure above how the diagnostics look like:. ```. Full path to requirements.txt: /home/sftnight/build/workspace/root-pullrequests-build/root/requirements.txt. Details about not matched dependencies:. - The 'numba>=0.47.0' distribution was not found and is required by the application. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:87,deployability,build,build,87,We should merge https://github.com/root-project/rootspi/pull/81 first and retry the PR build (afaik rootspi is getting fetched again on each build).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:141,deployability,build,build,141,We should merge https://github.com/root-project/rootspi/pull/81 first and retry the PR build (afaik rootspi is getting fetched again on each build).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:206,availability,failur,failures,206,"You think it's good to go like this? It does not have yet all dependencies, e.g., the ones for TMVA experimental are missing. Though we should could have with this a first run through the nightlies and fix failures in our infrastructure (missing packages, version mismatches, ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:62,deployability,depend,dependencies,62,"You think it's good to go like this? It does not have yet all dependencies, e.g., the ones for TMVA experimental are missing. Though we should could have with this a first run through the nightlies and fix failures in our infrastructure (missing packages, version mismatches, ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:206,deployability,fail,failures,206,"You think it's good to go like this? It does not have yet all dependencies, e.g., the ones for TMVA experimental are missing. Though we should could have with this a first run through the nightlies and fix failures in our infrastructure (missing packages, version mismatches, ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:222,deployability,infrastructur,infrastructure,222,"You think it's good to go like this? It does not have yet all dependencies, e.g., the ones for TMVA experimental are missing. Though we should could have with this a first run through the nightlies and fix failures in our infrastructure (missing packages, version mismatches, ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:256,deployability,version,version,256,"You think it's good to go like this? It does not have yet all dependencies, e.g., the ones for TMVA experimental are missing. Though we should could have with this a first run through the nightlies and fix failures in our infrastructure (missing packages, version mismatches, ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:62,integrability,depend,dependencies,62,"You think it's good to go like this? It does not have yet all dependencies, e.g., the ones for TMVA experimental are missing. Though we should could have with this a first run through the nightlies and fix failures in our infrastructure (missing packages, version mismatches, ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:256,integrability,version,version,256,"You think it's good to go like this? It does not have yet all dependencies, e.g., the ones for TMVA experimental are missing. Though we should could have with this a first run through the nightlies and fix failures in our infrastructure (missing packages, version mismatches, ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:264,interoperability,mismatch,mismatches,264,"You think it's good to go like this? It does not have yet all dependencies, e.g., the ones for TMVA experimental are missing. Though we should could have with this a first run through the nightlies and fix failures in our infrastructure (missing packages, version mismatches, ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:62,modifiability,depend,dependencies,62,"You think it's good to go like this? It does not have yet all dependencies, e.g., the ones for TMVA experimental are missing. Though we should could have with this a first run through the nightlies and fix failures in our infrastructure (missing packages, version mismatches, ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:246,modifiability,pac,packages,246,"You think it's good to go like this? It does not have yet all dependencies, e.g., the ones for TMVA experimental are missing. Though we should could have with this a first run through the nightlies and fix failures in our infrastructure (missing packages, version mismatches, ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:256,modifiability,version,version,256,"You think it's good to go like this? It does not have yet all dependencies, e.g., the ones for TMVA experimental are missing. Though we should could have with this a first run through the nightlies and fix failures in our infrastructure (missing packages, version mismatches, ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:206,performance,failur,failures,206,"You think it's good to go like this? It does not have yet all dependencies, e.g., the ones for TMVA experimental are missing. Though we should could have with this a first run through the nightlies and fix failures in our infrastructure (missing packages, version mismatches, ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:40,reliability,doe,does,40,"You think it's good to go like this? It does not have yet all dependencies, e.g., the ones for TMVA experimental are missing. Though we should could have with this a first run through the nightlies and fix failures in our infrastructure (missing packages, version mismatches, ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:206,reliability,fail,failures,206,"You think it's good to go like this? It does not have yet all dependencies, e.g., the ones for TMVA experimental are missing. Though we should could have with this a first run through the nightlies and fix failures in our infrastructure (missing packages, version mismatches, ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:62,safety,depend,dependencies,62,"You think it's good to go like this? It does not have yet all dependencies, e.g., the ones for TMVA experimental are missing. Though we should could have with this a first run through the nightlies and fix failures in our infrastructure (missing packages, version mismatches, ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:62,testability,depend,dependencies,62,"You think it's good to go like this? It does not have yet all dependencies, e.g., the ones for TMVA experimental are missing. Though we should could have with this a first run through the nightlies and fix failures in our infrastructure (missing packages, version mismatches, ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:31,availability,failur,failures,31,"I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:31,deployability,fail,failures,31,"I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:86,deployability,fail,fail,86,"I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:31,performance,failur,failures,31,"I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:31,reliability,fail,failures,31,"I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:86,reliability,fail,fail,86,"I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:95,safety,test,test,95,"I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:95,testability,test,test,95,"I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:33,availability,failur,failures,33,"> I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:33,deployability,fail,failures,33,"> I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:88,deployability,fail,fail,88,"> I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:171,deployability,fail,fail,171,"> I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:181,energy efficiency,current,currently,181,"> I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:33,performance,failur,failures,33,"> I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:33,reliability,fail,failures,33,"> I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:88,reliability,fail,fail,88,"> I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:171,reliability,fail,fail,171,"> I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:97,safety,test,test,97,"> I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:97,testability,test,test,97,"> I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:35,availability,failur,failures,35,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:35,deployability,fail,failures,35,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:90,deployability,fail,fail,90,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:179,deployability,fail,fail,179,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:430,deployability,fail,fails,430,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:484,deployability,version,versions,484,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:782,deployability,version,version,782,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:793,deployability,instal,installed,793,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:877,deployability,depend,dependencies,877,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:189,energy efficiency,current,currently,189,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:484,integrability,version,versions,484,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:782,integrability,version,version,782,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:877,integrability,depend,dependencies,877,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:685,interoperability,specif,specific,685,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:382,modifiability,pac,package,382,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:484,modifiability,version,versions,484,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:562,modifiability,pac,package,562,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:694,modifiability,pac,packages,694,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:782,modifiability,version,version,782,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:877,modifiability,depend,dependencies,877,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:35,performance,failur,failures,35,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:35,reliability,fail,failures,35,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:90,reliability,fail,fail,90,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:179,reliability,fail,fail,179,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:430,reliability,fail,fails,430,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:467,reliability,doe,doesn,467,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:99,safety,test,test,99,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:609,safety,test,test,609,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:762,safety,test,test,762,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:824,safety,test,test,824,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:877,safety,depend,dependencies,877,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:893,safety,test,tests,893,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:99,testability,test,test,99,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:594,testability,simpl,simply,594,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:609,testability,test,test,609,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:762,testability,test,test,762,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:824,testability,test,test,824,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:877,testability,depend,dependencies,877,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:893,testability,test,tests,893,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:594,usability,simpl,simply,594,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :). > . > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ? They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:309,deployability,fail,fail,309,"This PR solves the problem of documenting our python requirements and adding a test that checks if we satisfy them at runtime. #5938 solves three main problems (plus a couple smaller things): a bug in an RDF tutorial, a bug in the vetoing of tutorials, and it adds a nice-to-have, namely having a single test fail that's clearly called ""test-if-numba-is-there"" rather than having all numba tests red. If what I said above is in the ballpark of correct, there is no conflict with #5938. so I still think this PR could go in modulo the missing requirements -- consider my approval conditional to agreeing on what should go in requirements.txt (i'll stay out of the discussion about whether pandas should be in there or not :D)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:523,deployability,modul,modulo,523,"This PR solves the problem of documenting our python requirements and adding a test that checks if we satisfy them at runtime. #5938 solves three main problems (plus a couple smaller things): a bug in an RDF tutorial, a bug in the vetoing of tutorials, and it adds a nice-to-have, namely having a single test fail that's clearly called ""test-if-numba-is-there"" rather than having all numba tests red. If what I said above is in the ballpark of correct, there is no conflict with #5938. so I still think this PR could go in modulo the missing requirements -- consider my approval conditional to agreeing on what should go in requirements.txt (i'll stay out of the discussion about whether pandas should be in there or not :D)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:168,integrability,coupl,couple,168,"This PR solves the problem of documenting our python requirements and adding a test that checks if we satisfy them at runtime. #5938 solves three main problems (plus a couple smaller things): a bug in an RDF tutorial, a bug in the vetoing of tutorials, and it adds a nice-to-have, namely having a single test fail that's clearly called ""test-if-numba-is-there"" rather than having all numba tests red. If what I said above is in the ballpark of correct, there is no conflict with #5938. so I still think this PR could go in modulo the missing requirements -- consider my approval conditional to agreeing on what should go in requirements.txt (i'll stay out of the discussion about whether pandas should be in there or not :D)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:465,interoperability,conflict,conflict,465,"This PR solves the problem of documenting our python requirements and adding a test that checks if we satisfy them at runtime. #5938 solves three main problems (plus a couple smaller things): a bug in an RDF tutorial, a bug in the vetoing of tutorials, and it adds a nice-to-have, namely having a single test fail that's clearly called ""test-if-numba-is-there"" rather than having all numba tests red. If what I said above is in the ballpark of correct, there is no conflict with #5938. so I still think this PR could go in modulo the missing requirements -- consider my approval conditional to agreeing on what should go in requirements.txt (i'll stay out of the discussion about whether pandas should be in there or not :D)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:168,modifiability,coupl,couple,168,"This PR solves the problem of documenting our python requirements and adding a test that checks if we satisfy them at runtime. #5938 solves three main problems (plus a couple smaller things): a bug in an RDF tutorial, a bug in the vetoing of tutorials, and it adds a nice-to-have, namely having a single test fail that's clearly called ""test-if-numba-is-there"" rather than having all numba tests red. If what I said above is in the ballpark of correct, there is no conflict with #5938. so I still think this PR could go in modulo the missing requirements -- consider my approval conditional to agreeing on what should go in requirements.txt (i'll stay out of the discussion about whether pandas should be in there or not :D)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:523,modifiability,modul,modulo,523,"This PR solves the problem of documenting our python requirements and adding a test that checks if we satisfy them at runtime. #5938 solves three main problems (plus a couple smaller things): a bug in an RDF tutorial, a bug in the vetoing of tutorials, and it adds a nice-to-have, namely having a single test fail that's clearly called ""test-if-numba-is-there"" rather than having all numba tests red. If what I said above is in the ballpark of correct, there is no conflict with #5938. so I still think this PR could go in modulo the missing requirements -- consider my approval conditional to agreeing on what should go in requirements.txt (i'll stay out of the discussion about whether pandas should be in there or not :D)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:309,reliability,fail,fail,309,"This PR solves the problem of documenting our python requirements and adding a test that checks if we satisfy them at runtime. #5938 solves three main problems (plus a couple smaller things): a bug in an RDF tutorial, a bug in the vetoing of tutorials, and it adds a nice-to-have, namely having a single test fail that's clearly called ""test-if-numba-is-there"" rather than having all numba tests red. If what I said above is in the ballpark of correct, there is no conflict with #5938. so I still think this PR could go in modulo the missing requirements -- consider my approval conditional to agreeing on what should go in requirements.txt (i'll stay out of the discussion about whether pandas should be in there or not :D)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:79,safety,test,test,79,"This PR solves the problem of documenting our python requirements and adding a test that checks if we satisfy them at runtime. #5938 solves three main problems (plus a couple smaller things): a bug in an RDF tutorial, a bug in the vetoing of tutorials, and it adds a nice-to-have, namely having a single test fail that's clearly called ""test-if-numba-is-there"" rather than having all numba tests red. If what I said above is in the ballpark of correct, there is no conflict with #5938. so I still think this PR could go in modulo the missing requirements -- consider my approval conditional to agreeing on what should go in requirements.txt (i'll stay out of the discussion about whether pandas should be in there or not :D)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:304,safety,test,test,304,"This PR solves the problem of documenting our python requirements and adding a test that checks if we satisfy them at runtime. #5938 solves three main problems (plus a couple smaller things): a bug in an RDF tutorial, a bug in the vetoing of tutorials, and it adds a nice-to-have, namely having a single test fail that's clearly called ""test-if-numba-is-there"" rather than having all numba tests red. If what I said above is in the ballpark of correct, there is no conflict with #5938. so I still think this PR could go in modulo the missing requirements -- consider my approval conditional to agreeing on what should go in requirements.txt (i'll stay out of the discussion about whether pandas should be in there or not :D)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:337,safety,test,test-if-numba-is-there,337,"This PR solves the problem of documenting our python requirements and adding a test that checks if we satisfy them at runtime. #5938 solves three main problems (plus a couple smaller things): a bug in an RDF tutorial, a bug in the vetoing of tutorials, and it adds a nice-to-have, namely having a single test fail that's clearly called ""test-if-numba-is-there"" rather than having all numba tests red. If what I said above is in the ballpark of correct, there is no conflict with #5938. so I still think this PR could go in modulo the missing requirements -- consider my approval conditional to agreeing on what should go in requirements.txt (i'll stay out of the discussion about whether pandas should be in there or not :D)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:390,safety,test,tests,390,"This PR solves the problem of documenting our python requirements and adding a test that checks if we satisfy them at runtime. #5938 solves three main problems (plus a couple smaller things): a bug in an RDF tutorial, a bug in the vetoing of tutorials, and it adds a nice-to-have, namely having a single test fail that's clearly called ""test-if-numba-is-there"" rather than having all numba tests red. If what I said above is in the ballpark of correct, there is no conflict with #5938. so I still think this PR could go in modulo the missing requirements -- consider my approval conditional to agreeing on what should go in requirements.txt (i'll stay out of the discussion about whether pandas should be in there or not :D)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:523,safety,modul,modulo,523,"This PR solves the problem of documenting our python requirements and adding a test that checks if we satisfy them at runtime. #5938 solves three main problems (plus a couple smaller things): a bug in an RDF tutorial, a bug in the vetoing of tutorials, and it adds a nice-to-have, namely having a single test fail that's clearly called ""test-if-numba-is-there"" rather than having all numba tests red. If what I said above is in the ballpark of correct, there is no conflict with #5938. so I still think this PR could go in modulo the missing requirements -- consider my approval conditional to agreeing on what should go in requirements.txt (i'll stay out of the discussion about whether pandas should be in there or not :D)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:79,testability,test,test,79,"This PR solves the problem of documenting our python requirements and adding a test that checks if we satisfy them at runtime. #5938 solves three main problems (plus a couple smaller things): a bug in an RDF tutorial, a bug in the vetoing of tutorials, and it adds a nice-to-have, namely having a single test fail that's clearly called ""test-if-numba-is-there"" rather than having all numba tests red. If what I said above is in the ballpark of correct, there is no conflict with #5938. so I still think this PR could go in modulo the missing requirements -- consider my approval conditional to agreeing on what should go in requirements.txt (i'll stay out of the discussion about whether pandas should be in there or not :D)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:168,testability,coupl,couple,168,"This PR solves the problem of documenting our python requirements and adding a test that checks if we satisfy them at runtime. #5938 solves three main problems (plus a couple smaller things): a bug in an RDF tutorial, a bug in the vetoing of tutorials, and it adds a nice-to-have, namely having a single test fail that's clearly called ""test-if-numba-is-there"" rather than having all numba tests red. If what I said above is in the ballpark of correct, there is no conflict with #5938. so I still think this PR could go in modulo the missing requirements -- consider my approval conditional to agreeing on what should go in requirements.txt (i'll stay out of the discussion about whether pandas should be in there or not :D)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:304,testability,test,test,304,"This PR solves the problem of documenting our python requirements and adding a test that checks if we satisfy them at runtime. #5938 solves three main problems (plus a couple smaller things): a bug in an RDF tutorial, a bug in the vetoing of tutorials, and it adds a nice-to-have, namely having a single test fail that's clearly called ""test-if-numba-is-there"" rather than having all numba tests red. If what I said above is in the ballpark of correct, there is no conflict with #5938. so I still think this PR could go in modulo the missing requirements -- consider my approval conditional to agreeing on what should go in requirements.txt (i'll stay out of the discussion about whether pandas should be in there or not :D)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:337,testability,test,test-if-numba-is-there,337,"This PR solves the problem of documenting our python requirements and adding a test that checks if we satisfy them at runtime. #5938 solves three main problems (plus a couple smaller things): a bug in an RDF tutorial, a bug in the vetoing of tutorials, and it adds a nice-to-have, namely having a single test fail that's clearly called ""test-if-numba-is-there"" rather than having all numba tests red. If what I said above is in the ballpark of correct, there is no conflict with #5938. so I still think this PR could go in modulo the missing requirements -- consider my approval conditional to agreeing on what should go in requirements.txt (i'll stay out of the discussion about whether pandas should be in there or not :D)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:390,testability,test,tests,390,"This PR solves the problem of documenting our python requirements and adding a test that checks if we satisfy them at runtime. #5938 solves three main problems (plus a couple smaller things): a bug in an RDF tutorial, a bug in the vetoing of tutorials, and it adds a nice-to-have, namely having a single test fail that's clearly called ""test-if-numba-is-there"" rather than having all numba tests red. If what I said above is in the ballpark of correct, there is no conflict with #5938. so I still think this PR could go in modulo the missing requirements -- consider my approval conditional to agreeing on what should go in requirements.txt (i'll stay out of the discussion about whether pandas should be in there or not :D)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:30,usability,document,documenting,30,"This PR solves the problem of documenting our python requirements and adding a test that checks if we satisfy them at runtime. #5938 solves three main problems (plus a couple smaller things): a bug in an RDF tutorial, a bug in the vetoing of tutorials, and it adds a nice-to-have, namely having a single test fail that's clearly called ""test-if-numba-is-there"" rather than having all numba tests red. If what I said above is in the ballpark of correct, there is no conflict with #5938. so I still think this PR could go in modulo the missing requirements -- consider my approval conditional to agreeing on what should go in requirements.txt (i'll stay out of the discussion about whether pandas should be in there or not :D)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:321,usability,clear,clearly,321,"This PR solves the problem of documenting our python requirements and adding a test that checks if we satisfy them at runtime. #5938 solves three main problems (plus a couple smaller things): a bug in an RDF tutorial, a bug in the vetoing of tutorials, and it adds a nice-to-have, namely having a single test fail that's clearly called ""test-if-numba-is-there"" rather than having all numba tests red. If what I said above is in the ballpark of correct, there is no conflict with #5938. so I still think this PR could go in modulo the missing requirements -- consider my approval conditional to agreeing on what should go in requirements.txt (i'll stay out of the discussion about whether pandas should be in there or not :D)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:97,deployability,build,builds,97,"Alrighty, I'll add `sklearn`, `numpy`, `xgboost` and `keras` one by one and check against the PR builds the status on the nodes. This will cause havoc for a few iterations :grimacing:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:108,usability,statu,status,108,"Alrighty, I'll add `sklearn`, `numpy`, `xgboost` and `keras` one by one and check against the PR builds the status on the nodes. This will cause havoc for a few iterations :grimacing:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:99,deployability,build,builds,99,"> Alrighty, I'll add `sklearn`, `numpy`, `xgboost` and `keras` one by one and check against the PR builds the status on the nodes. This will cause havoc for a few iterations 😬. I guess that's what Philippe meant. You can merge as-is, and I'll adapt the other PR accordingly. Let's maybe agree that the ML things are not hard requirements.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:243,energy efficiency,adapt,adapt,243,"> Alrighty, I'll add `sklearn`, `numpy`, `xgboost` and `keras` one by one and check against the PR builds the status on the nodes. This will cause havoc for a few iterations 😬. I guess that's what Philippe meant. You can merge as-is, and I'll adapt the other PR accordingly. Let's maybe agree that the ML things are not hard requirements.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:243,integrability,adapt,adapt,243,"> Alrighty, I'll add `sklearn`, `numpy`, `xgboost` and `keras` one by one and check against the PR builds the status on the nodes. This will cause havoc for a few iterations 😬. I guess that's what Philippe meant. You can merge as-is, and I'll adapt the other PR accordingly. Let's maybe agree that the ML things are not hard requirements.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:243,interoperability,adapt,adapt,243,"> Alrighty, I'll add `sklearn`, `numpy`, `xgboost` and `keras` one by one and check against the PR builds the status on the nodes. This will cause havoc for a few iterations 😬. I guess that's what Philippe meant. You can merge as-is, and I'll adapt the other PR accordingly. Let's maybe agree that the ML things are not hard requirements.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:243,modifiability,adapt,adapt,243,"> Alrighty, I'll add `sklearn`, `numpy`, `xgboost` and `keras` one by one and check against the PR builds the status on the nodes. This will cause havoc for a few iterations 😬. I guess that's what Philippe meant. You can merge as-is, and I'll adapt the other PR accordingly. Let's maybe agree that the ML things are not hard requirements.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:110,usability,statu,status,110,"> Alrighty, I'll add `sklearn`, `numpy`, `xgboost` and `keras` one by one and check against the PR builds the status on the nodes. This will cause havoc for a few iterations 😬. I guess that's what Philippe meant. You can merge as-is, and I'll adapt the other PR accordingly. Let's maybe agree that the ML things are not hard requirements.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:101,deployability,build,builds,101,"> > Alrighty, I'll add `sklearn`, `numpy`, `xgboost` and `keras` one by one and check against the PR builds the status on the nodes. This will cause havoc for a few iterations grimacing. > . > I guess that's what Philippe meant. You can merge as-is, and I'll adapt the other PR accordingly. Let's maybe agree that the ML things are not hard requirements. For me it means that we have actually no idea whether some things work or not ;) I've added numpy and that's good for now. I think it's overkill to add the TMVA deps now, because I also don't know exactly what the required versions are.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:578,deployability,version,versions,578,"> > Alrighty, I'll add `sklearn`, `numpy`, `xgboost` and `keras` one by one and check against the PR builds the status on the nodes. This will cause havoc for a few iterations grimacing. > . > I guess that's what Philippe meant. You can merge as-is, and I'll adapt the other PR accordingly. Let's maybe agree that the ML things are not hard requirements. For me it means that we have actually no idea whether some things work or not ;) I've added numpy and that's good for now. I think it's overkill to add the TMVA deps now, because I also don't know exactly what the required versions are.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:259,energy efficiency,adapt,adapt,259,"> > Alrighty, I'll add `sklearn`, `numpy`, `xgboost` and `keras` one by one and check against the PR builds the status on the nodes. This will cause havoc for a few iterations grimacing. > . > I guess that's what Philippe meant. You can merge as-is, and I'll adapt the other PR accordingly. Let's maybe agree that the ML things are not hard requirements. For me it means that we have actually no idea whether some things work or not ;) I've added numpy and that's good for now. I think it's overkill to add the TMVA deps now, because I also don't know exactly what the required versions are.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:259,integrability,adapt,adapt,259,"> > Alrighty, I'll add `sklearn`, `numpy`, `xgboost` and `keras` one by one and check against the PR builds the status on the nodes. This will cause havoc for a few iterations grimacing. > . > I guess that's what Philippe meant. You can merge as-is, and I'll adapt the other PR accordingly. Let's maybe agree that the ML things are not hard requirements. For me it means that we have actually no idea whether some things work or not ;) I've added numpy and that's good for now. I think it's overkill to add the TMVA deps now, because I also don't know exactly what the required versions are.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:578,integrability,version,versions,578,"> > Alrighty, I'll add `sklearn`, `numpy`, `xgboost` and `keras` one by one and check against the PR builds the status on the nodes. This will cause havoc for a few iterations grimacing. > . > I guess that's what Philippe meant. You can merge as-is, and I'll adapt the other PR accordingly. Let's maybe agree that the ML things are not hard requirements. For me it means that we have actually no idea whether some things work or not ;) I've added numpy and that's good for now. I think it's overkill to add the TMVA deps now, because I also don't know exactly what the required versions are.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:259,interoperability,adapt,adapt,259,"> > Alrighty, I'll add `sklearn`, `numpy`, `xgboost` and `keras` one by one and check against the PR builds the status on the nodes. This will cause havoc for a few iterations grimacing. > . > I guess that's what Philippe meant. You can merge as-is, and I'll adapt the other PR accordingly. Let's maybe agree that the ML things are not hard requirements. For me it means that we have actually no idea whether some things work or not ;) I've added numpy and that's good for now. I think it's overkill to add the TMVA deps now, because I also don't know exactly what the required versions are.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:259,modifiability,adapt,adapt,259,"> > Alrighty, I'll add `sklearn`, `numpy`, `xgboost` and `keras` one by one and check against the PR builds the status on the nodes. This will cause havoc for a few iterations grimacing. > . > I guess that's what Philippe meant. You can merge as-is, and I'll adapt the other PR accordingly. Let's maybe agree that the ML things are not hard requirements. For me it means that we have actually no idea whether some things work or not ;) I've added numpy and that's good for now. I think it's overkill to add the TMVA deps now, because I also don't know exactly what the required versions are.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:578,modifiability,version,versions,578,"> > Alrighty, I'll add `sklearn`, `numpy`, `xgboost` and `keras` one by one and check against the PR builds the status on the nodes. This will cause havoc for a few iterations grimacing. > . > I guess that's what Philippe meant. You can merge as-is, and I'll adapt the other PR accordingly. Let's maybe agree that the ML things are not hard requirements. For me it means that we have actually no idea whether some things work or not ;) I've added numpy and that's good for now. I think it's overkill to add the TMVA deps now, because I also don't know exactly what the required versions are.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:112,usability,statu,status,112,"> > Alrighty, I'll add `sklearn`, `numpy`, `xgboost` and `keras` one by one and check against the PR builds the status on the nodes. This will cause havoc for a few iterations grimacing. > . > I guess that's what Philippe meant. You can merge as-is, and I'll adapt the other PR accordingly. Let's maybe agree that the ML things are not hard requirements. For me it means that we have actually no idea whether some things work or not ;) I've added numpy and that's good for now. I think it's overkill to add the TMVA deps now, because I also don't know exactly what the required versions are.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5410:52,deployability,patch,patch,52,"To protect against a division by zero? The original patch is from @pzhristov, so he might have more to say.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5410
https://github.com/root-project/root/pull/5410:52,safety,patch,patch,52,"To protect against a division by zero? The original patch is from @pzhristov, so he might have more to say.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5410
https://github.com/root-project/root/pull/5410:52,security,patch,patch,52,"To protect against a division by zero? The original patch is from @pzhristov, so he might have more to say.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5410
https://github.com/root-project/root/pull/5410:81,interoperability,specif,specific,81,Yes very likely. I was just wondering if there was some kind of reproducer for a specific situation. It does not arm anyway.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5410
https://github.com/root-project/root/pull/5410:104,reliability,doe,does,104,Yes very likely. I was just wondering if there was some kind of reproducer for a specific situation. It does not arm anyway.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5410
https://github.com/root-project/root/pull/5410:97,energy efficiency,Draw,Draw,97,"It seems already protected :. ```. root [0] auto h = new TH2D(""h"",""h"",1,0,1,1,0,1);. root [1] h->Draw(""COL""). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. root [2] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5410
https://github.com/root-project/root/pull/5410:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5410
https://github.com/root-project/root/pull/5410:14,deployability,log,log,14,"Could the git log be augmented to include the short description of the issues (div by zero, null pointer de-reference) [Without it the commit can not be skimmed without looking at the diff, i.e. git log vs git show]. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5410
https://github.com/root-project/root/pull/5410:199,deployability,log,log,199,"Could the git log be augmented to include the short description of the issues (div by zero, null pointer de-reference) [Without it the commit can not be skimmed without looking at the diff, i.e. git log vs git show]. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5410
https://github.com/root-project/root/pull/5410:14,safety,log,log,14,"Could the git log be augmented to include the short description of the issues (div by zero, null pointer de-reference) [Without it the commit can not be skimmed without looking at the diff, i.e. git log vs git show]. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5410
https://github.com/root-project/root/pull/5410:199,safety,log,log,199,"Could the git log be augmented to include the short description of the issues (div by zero, null pointer de-reference) [Without it the commit can not be skimmed without looking at the diff, i.e. git log vs git show]. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5410
https://github.com/root-project/root/pull/5410:14,security,log,log,14,"Could the git log be augmented to include the short description of the issues (div by zero, null pointer de-reference) [Without it the commit can not be skimmed without looking at the diff, i.e. git log vs git show]. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5410
https://github.com/root-project/root/pull/5410:199,security,log,log,199,"Could the git log be augmented to include the short description of the issues (div by zero, null pointer de-reference) [Without it the commit can not be skimmed without looking at the diff, i.e. git log vs git show]. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5410
https://github.com/root-project/root/pull/5410:14,testability,log,log,14,"Could the git log be augmented to include the short description of the issues (div by zero, null pointer de-reference) [Without it the commit can not be skimmed without looking at the diff, i.e. git log vs git show]. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5410
https://github.com/root-project/root/pull/5410:199,testability,log,log,199,"Could the git log be augmented to include the short description of the issues (div by zero, null pointer de-reference) [Without it the commit can not be skimmed without looking at the diff, i.e. git log vs git show]. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5410
https://github.com/root-project/root/pull/5410:52,deployability,patch,patches,52,@ktf . I think this PR can be removed right ? . The patches to THistPainter.cxx and TFileMerger.cxx have been applied already ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5410
https://github.com/root-project/root/pull/5410:52,safety,patch,patches,52,@ktf . I think this PR can be removed right ? . The patches to THistPainter.cxx and TFileMerger.cxx have been applied already ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5410
https://github.com/root-project/root/pull/5410:52,security,patch,patches,52,@ktf . I think this PR can be removed right ? . The patches to THistPainter.cxx and TFileMerger.cxx have been applied already ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5410
https://github.com/root-project/root/pull/5412:235,availability,operat,operation,235,"> Please check the schema evolution for me. Is it correct to ""read"" an array of pointers like this? You may or may not have also do:. ```. onfile.fCells = nullptr;. ```. i.e. It is plausible that onfile.fCells is deleted after the I/O operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5412
https://github.com/root-project/root/pull/5412:19,integrability,schema,schema,19,"> Please check the schema evolution for me. Is it correct to ""read"" an array of pointers like this? You may or may not have also do:. ```. onfile.fCells = nullptr;. ```. i.e. It is plausible that onfile.fCells is deleted after the I/O operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5412
https://github.com/root-project/root/pull/5412:231,performance,I/O,I/O,231,"> Please check the schema evolution for me. Is it correct to ""read"" an array of pointers like this? You may or may not have also do:. ```. onfile.fCells = nullptr;. ```. i.e. It is plausible that onfile.fCells is deleted after the I/O operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5412
https://github.com/root-project/root/pull/5418:27,safety,test,tests,27,"@lmoneta There are several tests in mathcore, which are using SpecFunc.h .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5418
https://github.com/root-project/root/pull/5418:27,testability,test,tests,27,"@lmoneta There are several tests in mathcore, which are using SpecFunc.h .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5418
https://github.com/root-project/root/pull/5418:160,deployability,build,build,160,"@lmoneta Also there are several source files in MathCore, where `R__HAS_MATHMORE` tested and some MathMore includes are used. Once you merge PR - I will try to build my `source_includes` branch again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5418
https://github.com/root-project/root/pull/5418:82,safety,test,tested,82,"@lmoneta Also there are several source files in MathCore, where `R__HAS_MATHMORE` tested and some MathMore includes are used. Once you merge PR - I will try to build my `source_includes` branch again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5418
https://github.com/root-project/root/pull/5418:82,testability,test,tested,82,"@lmoneta Also there are several source files in MathCore, where `R__HAS_MATHMORE` tested and some MathMore includes are used. Once you merge PR - I will try to build my `source_includes` branch again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5418
https://github.com/root-project/root/pull/5419:126,modifiability,variab,variables,126,Is there any issue with using `std::numeric_limits<std::uint64_t>::max()` in principle? that would align with the type of the variables used in the comparison.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5419
https://github.com/root-project/root/pull/5420:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:266,deployability,unload,unload,266,> If we call TCling::Load on an already loaded library we dlclose and dlopen the library. Do we still distinguish (as I think we ought to) between the case .L which might reload the library (probably 'only' if it changed) and the case gSystem->Load which should not unload the library (and for that matter I would also not really expect ```.L name.so``` to reload the library (by .L script.C yes and .L script.C+ yes if the library was recreated).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:21,energy efficiency,Load,Load,21,> If we call TCling::Load on an already loaded library we dlclose and dlopen the library. Do we still distinguish (as I think we ought to) between the case .L which might reload the library (probably 'only' if it changed) and the case gSystem->Load which should not unload the library (and for that matter I would also not really expect ```.L name.so``` to reload the library (by .L script.C yes and .L script.C+ yes if the library was recreated).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:40,energy efficiency,load,loaded,40,> If we call TCling::Load on an already loaded library we dlclose and dlopen the library. Do we still distinguish (as I think we ought to) between the case .L which might reload the library (probably 'only' if it changed) and the case gSystem->Load which should not unload the library (and for that matter I would also not really expect ```.L name.so``` to reload the library (by .L script.C yes and .L script.C+ yes if the library was recreated).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:244,energy efficiency,Load,Load,244,> If we call TCling::Load on an already loaded library we dlclose and dlopen the library. Do we still distinguish (as I think we ought to) between the case .L which might reload the library (probably 'only' if it changed) and the case gSystem->Load which should not unload the library (and for that matter I would also not really expect ```.L name.so``` to reload the library (by .L script.C yes and .L script.C+ yes if the library was recreated).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:21,performance,Load,Load,21,> If we call TCling::Load on an already loaded library we dlclose and dlopen the library. Do we still distinguish (as I think we ought to) between the case .L which might reload the library (probably 'only' if it changed) and the case gSystem->Load which should not unload the library (and for that matter I would also not really expect ```.L name.so``` to reload the library (by .L script.C yes and .L script.C+ yes if the library was recreated).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:40,performance,load,loaded,40,> If we call TCling::Load on an already loaded library we dlclose and dlopen the library. Do we still distinguish (as I think we ought to) between the case .L which might reload the library (probably 'only' if it changed) and the case gSystem->Load which should not unload the library (and for that matter I would also not really expect ```.L name.so``` to reload the library (by .L script.C yes and .L script.C+ yes if the library was recreated).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:244,performance,Load,Load,244,> If we call TCling::Load on an already loaded library we dlclose and dlopen the library. Do we still distinguish (as I think we ought to) between the case .L which might reload the library (probably 'only' if it changed) and the case gSystem->Load which should not unload the library (and for that matter I would also not really expect ```.L name.so``` to reload the library (by .L script.C yes and .L script.C+ yes if the library was recreated).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:21,deployability,patch,patch,21,> The intent of this patch is to fix the failing OSX tests with. Can you remind me why:. a) it only fails on the MacOS node? b) it (seems to) not be reproduce-able on my own Mac?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:41,deployability,fail,failing,41,> The intent of this patch is to fix the failing OSX tests with. Can you remind me why:. a) it only fails on the MacOS node? b) it (seems to) not be reproduce-able on my own Mac?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:100,deployability,fail,fails,100,> The intent of this patch is to fix the failing OSX tests with. Can you remind me why:. a) it only fails on the MacOS node? b) it (seems to) not be reproduce-able on my own Mac?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:41,reliability,fail,failing,41,> The intent of this patch is to fix the failing OSX tests with. Can you remind me why:. a) it only fails on the MacOS node? b) it (seems to) not be reproduce-able on my own Mac?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:100,reliability,fail,fails,100,> The intent of this patch is to fix the failing OSX tests with. Can you remind me why:. a) it only fails on the MacOS node? b) it (seems to) not be reproduce-able on my own Mac?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:21,safety,patch,patch,21,> The intent of this patch is to fix the failing OSX tests with. Can you remind me why:. a) it only fails on the MacOS node? b) it (seems to) not be reproduce-able on my own Mac?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:53,safety,test,tests,53,> The intent of this patch is to fix the failing OSX tests with. Can you remind me why:. a) it only fails on the MacOS node? b) it (seems to) not be reproduce-able on my own Mac?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:21,security,patch,patch,21,> The intent of this patch is to fix the failing OSX tests with. Can you remind me why:. a) it only fails on the MacOS node? b) it (seems to) not be reproduce-able on my own Mac?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:53,testability,test,tests,53,> The intent of this patch is to fix the failing OSX tests with. Can you remind me why:. a) it only fails on the MacOS node? b) it (seems to) not be reproduce-able on my own Mac?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:30,availability,error,error,30,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:15,deployability,build,build,15,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:114,deployability,fail,fails,114,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:413,deployability,depend,depend,413,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:851,deployability,version,versioned,851,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:877,deployability,version,version,877,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1077,deployability,depend,depend,1077,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1424,deployability,depend,depend,1424,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1469,deployability,automat,automatically,1469,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1596,deployability,updat,updating,1596,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1793,deployability,unload,unload,1793,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:231,energy efficiency,load,loadcode,231,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:432,energy efficiency,load,loaded,432,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:566,energy efficiency,core,core,566,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:744,energy efficiency,Load,Load,744,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1340,energy efficiency,load,loaded,1340,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1464,energy efficiency,Load,Load,1464,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1614,energy efficiency,Load,Load,1614,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:413,integrability,depend,depend,413,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:695,integrability,coupl,coupled,695,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:851,integrability,version,versioned,851,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:877,integrability,version,version,877,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1077,integrability,depend,depend,1077,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1424,integrability,depend,depend,1424,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:413,modifiability,depend,depend,413,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:695,modifiability,coupl,coupled,695,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:851,modifiability,version,versioned,851,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:877,modifiability,version,version,877,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1077,modifiability,depend,depend,1077,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1424,modifiability,depend,depend,1424,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:30,performance,error,error,30,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:231,performance,load,loadcode,231,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:432,performance,load,loaded,432,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:744,performance,Load,Load,744,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:827,performance,time,times,827,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1340,performance,load,loaded,1340,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1464,performance,Load,Load,1464,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1614,performance,Load,Load,1614,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:114,reliability,fail,fails,114,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1294,reliability,doe,does,1294,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:30,safety,error,error,30,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:104,safety,test,test,104,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:413,safety,depend,depend,413,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1077,safety,depend,depend,1077,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1424,safety,depend,depend,1424,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1573,safety,test,test,1573,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1596,safety,updat,updating,1596,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:913,security,sign,significant,913,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1596,security,updat,updating,1596,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:104,testability,test,test,104,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:413,testability,depend,depend,413,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:695,testability,coupl,coupled,695,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1077,testability,depend,depend,1077,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1424,testability,depend,depend,1424,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1469,testability,automat,automatically,1469,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1573,testability,test,test,1573,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:30,usability,error,error,30,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:892,usability,behavi,behavior,892,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:955,usability,behavi,behavior,955,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1739,usability,support,support,1739,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1777,usability,user,user,1777,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):. ```. {. gROOT->ProcessLine("".L loadcode.C+"");. ... TTree *t; _file0->GetObject(""t"",t);. }. ```. The use of TTree means that before executing the script libTree is laoded. During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) . And in this case the result is:. ```. loadcode_C.so libTree.6.21.01.so libTree.so. ```. which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library? 2) When should gSystem->Load automatically reload a library, if ever? @Axel-Naumann @vgvassilev opinions? PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:23,deployability,patch,patch,23,> > The intent of this patch is to fix the failing OSX tests with. > . > Can you remind me why:. > a) it only fails on the MacOS node? > b) it (seems to) not be reproduce-able on my own Mac? Because ROOT need to be built with `-Dsoversion=On`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:43,deployability,fail,failing,43,> > The intent of this patch is to fix the failing OSX tests with. > . > Can you remind me why:. > a) it only fails on the MacOS node? > b) it (seems to) not be reproduce-able on my own Mac? Because ROOT need to be built with `-Dsoversion=On`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:110,deployability,fail,fails,110,> > The intent of this patch is to fix the failing OSX tests with. > . > Can you remind me why:. > a) it only fails on the MacOS node? > b) it (seems to) not be reproduce-able on my own Mac? Because ROOT need to be built with `-Dsoversion=On`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:43,reliability,fail,failing,43,> > The intent of this patch is to fix the failing OSX tests with. > . > Can you remind me why:. > a) it only fails on the MacOS node? > b) it (seems to) not be reproduce-able on my own Mac? Because ROOT need to be built with `-Dsoversion=On`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:110,reliability,fail,fails,110,> > The intent of this patch is to fix the failing OSX tests with. > . > Can you remind me why:. > a) it only fails on the MacOS node? > b) it (seems to) not be reproduce-able on my own Mac? Because ROOT need to be built with `-Dsoversion=On`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:23,safety,patch,patch,23,> > The intent of this patch is to fix the failing OSX tests with. > . > Can you remind me why:. > a) it only fails on the MacOS node? > b) it (seems to) not be reproduce-able on my own Mac? Because ROOT need to be built with `-Dsoversion=On`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:55,safety,test,tests,55,> > The intent of this patch is to fix the failing OSX tests with. > . > Can you remind me why:. > a) it only fails on the MacOS node? > b) it (seems to) not be reproduce-able on my own Mac? Because ROOT need to be built with `-Dsoversion=On`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:23,security,patch,patch,23,> > The intent of this patch is to fix the failing OSX tests with. > . > Can you remind me why:. > a) it only fails on the MacOS node? > b) it (seems to) not be reproduce-able on my own Mac? Because ROOT need to be built with `-Dsoversion=On`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:55,testability,test,tests,55,> > The intent of this patch is to fix the failing OSX tests with. > . > Can you remind me why:. > a) it only fails on the MacOS node? > b) it (seems to) not be reproduce-able on my own Mac? Because ROOT need to be built with `-Dsoversion=On`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:198,deployability,depend,depend,198,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:563,deployability,depend,depend,563,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:695,deployability,depend,dependent,695,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:865,deployability,automat,automatically,865,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1281,deployability,updat,updating,1281,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1478,deployability,unload,unload,1478,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:467,energy efficiency,load,loaded,467,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:720,energy efficiency,current,currently,720,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:860,energy efficiency,Load,Load,860,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1033,energy efficiency,Load,Load,1033,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1299,energy efficiency,Load,Load,1299,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:198,integrability,depend,depend,198,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:563,integrability,depend,depend,563,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:695,integrability,depend,dependent,695,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1045,integrability,translat,translates,1045,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1045,interoperability,translat,translates,1045,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:198,modifiability,depend,depend,198,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:563,modifiability,depend,depend,563,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:695,modifiability,depend,dependent,695,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:467,performance,load,loaded,467,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:860,performance,Load,Load,860,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1033,performance,Load,Load,1033,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1299,performance,Load,Load,1299,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:421,reliability,doe,does,421,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:730,reliability,doe,does,730,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:198,safety,depend,depend,198,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:563,safety,depend,depend,563,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:695,safety,depend,dependent,695,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1258,safety,test,test,1258,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1281,safety,updat,updating,1281,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:28,security,sign,significant,28,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:712,security,scanner,scanner,712,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1281,security,updat,updating,1281,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:198,testability,depend,depend,198,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:563,testability,depend,depend,563,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:695,testability,depend,dependent,695,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:865,testability,automat,automatically,865,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1258,testability,test,test,1258,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:7,usability,behavi,behavior,7,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:70,usability,behavi,behavior,70,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1424,usability,support,support,1424,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1462,usability,user,user,1462,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). > . > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). > . > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. > . > But still several questions:. > . > 1. Why is libTree listed twice in the list of depend library? The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > . > 2. When should gSystem->Load automatically reload a library, if ever? If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > . > . > @Axel-Naumann @vgvassilev opinions? > . > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:13,energy efficiency,Load,Load,13,As `TSystem::Load()` says: ` // don't load libraries that have already been loaded` - so I guess we should be using that interface?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:38,energy efficiency,load,load,38,As `TSystem::Load()` says: ` // don't load libraries that have already been loaded` - so I guess we should be using that interface?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:76,energy efficiency,load,loaded,76,As `TSystem::Load()` says: ` // don't load libraries that have already been loaded` - so I guess we should be using that interface?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:121,integrability,interfac,interface,121,As `TSystem::Load()` says: ` // don't load libraries that have already been loaded` - so I guess we should be using that interface?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:121,interoperability,interfac,interface,121,As `TSystem::Load()` says: ` // don't load libraries that have already been loaded` - so I guess we should be using that interface?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:121,modifiability,interfac,interface,121,As `TSystem::Load()` says: ` // don't load libraries that have already been loaded` - so I guess we should be using that interface?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:13,performance,Load,Load,13,As `TSystem::Load()` says: ` // don't load libraries that have already been loaded` - so I guess we should be using that interface?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:38,performance,load,load,38,As `TSystem::Load()` says: ` // don't load libraries that have already been loaded` - so I guess we should be using that interface?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:76,performance,load,loaded,76,As `TSystem::Load()` says: ` // don't load libraries that have already been loaded` - so I guess we should be using that interface?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1959,deployability,unload,unloading,1959,"me as dlopen (once upon a time it was a thin layer around it). . > we should reimplement the calls to gInterpreter->Load as it translates them to .L libName which reloads. Alternatively, we could check if the library changed and only reload it if it changed. There a case to be made for returning TSystem::Load to never reload while keeping gInterpreter->Load and "".L"" being the same (so TSystem::Load and gInterpreter->Load behaving differently). In my opinion "".L ...so"" (and thus gInterpreter->Load) have several possibilities but they are indeed intimately link to the behavior of "".L ....C"" and "".L ...C+"", so exhaustive list:. (1.a) never reload *.so, never reload *.C and *.C+. (1.b) never reload *.so only reload *.C and *.C+ when changed. (1.c) never reload *.so always reload *.C only reload *.C+ when changed (I think this was v5 behavior). (1.d) never reload *.so, always reload *.C and *.C+. (2.a) only reload *.so when changed, never reload *.C and *.C+. (2.b) only reload *.so when changed only reload *.C and *.C+ when changed. (2.c) only reload *.so when changed always reload *.C only reload *.C+ when changed . (2.d) only reload *.so when changed, always reload *.C and *.C+. (3.a) always reload *.so, never reload *.C and *.C+. (3.b) always reload *.so only reload *.C and *.C+ when changed. (3.c) always reload *.so always reload *.C only reload *.C+ when changed . (3.d) always reload *.so, always reload *.C and *.C+ (current behavior if I understood correctly). Note: CompileMacro was implemented with the ""only reload *.C+ when changed in mind). (2.b) has the minimal amount of unloading but consequently has an 'unpredictable' number of static initialization. So (1.b) might be a better alternative if we assume that user macro are unlikely to have static initialization that matter/must-be-exact (and if it does then the user can use explicit .U I guess). Because "".L *.so"" might be used to load 'global' (for example Athena's or CMSSW's) libraries, I find (3.*) too harsh.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:211,energy efficiency,load,loaded,211,"> The libTree.6.21.01.so libTree.so are the same library . And it would not (and should not) matter except that it _currently_ leads to the library being reloaded yet an additional time (for every macro that is loaded and uses TTree!!!). > If we decide that it won't ever reload (which I do not see issues with) . I think TSystem::Load should behave the same as dlopen (once upon a time it was a thin layer around it). . > we should reimplement the calls to gInterpreter->Load as it translates them to .L libName which reloads. Alternatively, we could check if the library changed and only reload it if it changed. There a case to be made for returning TSystem::Load to never reload while keeping gInterpreter->Load and "".L"" being the same (so TSystem::Load and gInterpreter->Load behaving differently). In my opinion "".L ...so"" (and thus gInterpreter->Load) have several possibilities but they are indeed intimately link to the behavior of "".L ....C"" and "".L ...C+"", so exhaustive list:. (1.a) never reload *.so, never reload *.C and *.C+. (1.b) never reload *.so only reload *.C and *.C+ when changed. (1.c) never reload *.so always reload *.C only reload *.C+ when changed (I think this was v5 behavior). (1.d) never reload *.so, always reload *.C and *.C+. (2.a) only reload *.so when changed, never reload *.C and *.C+. (2.b) only reload *.so when changed only reload *.C and *.C+ when changed. (2.c) only reload *.so when changed always reload *.C only reload *.C+ when changed . (2.d) only reload *.so when changed, always reload *.C and *.C+. (3.a) always reload *.so, never reload *.C and *.C+. (3.b) always reload *.so only reload *.C and *.C+ when changed. (3.c) always reload *.so always reload *.C only reload *.C+ when changed . (3.d) always reload *.so, always reload *.C and *.C+ (current behavior if I understood correctly). Note: CompileMacro was implemented with the ""only reload *.C+ when changed in mind). (2.b) has the minimal amount of unloading but consequently has an 'unpred",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:331,energy efficiency,Load,Load,331,"> The libTree.6.21.01.so libTree.so are the same library . And it would not (and should not) matter except that it _currently_ leads to the library being reloaded yet an additional time (for every macro that is loaded and uses TTree!!!). > If we decide that it won't ever reload (which I do not see issues with) . I think TSystem::Load should behave the same as dlopen (once upon a time it was a thin layer around it). . > we should reimplement the calls to gInterpreter->Load as it translates them to .L libName which reloads. Alternatively, we could check if the library changed and only reload it if it changed. There a case to be made for returning TSystem::Load to never reload while keeping gInterpreter->Load and "".L"" being the same (so TSystem::Load and gInterpreter->Load behaving differently). In my opinion "".L ...so"" (and thus gInterpreter->Load) have several possibilities but they are indeed intimately link to the behavior of "".L ....C"" and "".L ...C+"", so exhaustive list:. (1.a) never reload *.so, never reload *.C and *.C+. (1.b) never reload *.so only reload *.C and *.C+ when changed. (1.c) never reload *.so always reload *.C only reload *.C+ when changed (I think this was v5 behavior). (1.d) never reload *.so, always reload *.C and *.C+. (2.a) only reload *.so when changed, never reload *.C and *.C+. (2.b) only reload *.so when changed only reload *.C and *.C+ when changed. (2.c) only reload *.so when changed always reload *.C only reload *.C+ when changed . (2.d) only reload *.so when changed, always reload *.C and *.C+. (3.a) always reload *.so, never reload *.C and *.C+. (3.b) always reload *.so only reload *.C and *.C+ when changed. (3.c) always reload *.so always reload *.C only reload *.C+ when changed . (3.d) always reload *.so, always reload *.C and *.C+ (current behavior if I understood correctly). Note: CompileMacro was implemented with the ""only reload *.C+ when changed in mind). (2.b) has the minimal amount of unloading but consequently has an 'unpred",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:472,energy efficiency,Load,Load,472,"> The libTree.6.21.01.so libTree.so are the same library . And it would not (and should not) matter except that it _currently_ leads to the library being reloaded yet an additional time (for every macro that is loaded and uses TTree!!!). > If we decide that it won't ever reload (which I do not see issues with) . I think TSystem::Load should behave the same as dlopen (once upon a time it was a thin layer around it). . > we should reimplement the calls to gInterpreter->Load as it translates them to .L libName which reloads. Alternatively, we could check if the library changed and only reload it if it changed. There a case to be made for returning TSystem::Load to never reload while keeping gInterpreter->Load and "".L"" being the same (so TSystem::Load and gInterpreter->Load behaving differently). In my opinion "".L ...so"" (and thus gInterpreter->Load) have several possibilities but they are indeed intimately link to the behavior of "".L ....C"" and "".L ...C+"", so exhaustive list:. (1.a) never reload *.so, never reload *.C and *.C+. (1.b) never reload *.so only reload *.C and *.C+ when changed. (1.c) never reload *.so always reload *.C only reload *.C+ when changed (I think this was v5 behavior). (1.d) never reload *.so, always reload *.C and *.C+. (2.a) only reload *.so when changed, never reload *.C and *.C+. (2.b) only reload *.so when changed only reload *.C and *.C+ when changed. (2.c) only reload *.so when changed always reload *.C only reload *.C+ when changed . (2.d) only reload *.so when changed, always reload *.C and *.C+. (3.a) always reload *.so, never reload *.C and *.C+. (3.b) always reload *.so only reload *.C and *.C+ when changed. (3.c) always reload *.so always reload *.C only reload *.C+ when changed . (3.d) always reload *.so, always reload *.C and *.C+ (current behavior if I understood correctly). Note: CompileMacro was implemented with the ""only reload *.C+ when changed in mind). (2.b) has the minimal amount of unloading but consequently has an 'unpred",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:662,energy efficiency,Load,Load,662,"> The libTree.6.21.01.so libTree.so are the same library . And it would not (and should not) matter except that it _currently_ leads to the library being reloaded yet an additional time (for every macro that is loaded and uses TTree!!!). > If we decide that it won't ever reload (which I do not see issues with) . I think TSystem::Load should behave the same as dlopen (once upon a time it was a thin layer around it). . > we should reimplement the calls to gInterpreter->Load as it translates them to .L libName which reloads. Alternatively, we could check if the library changed and only reload it if it changed. There a case to be made for returning TSystem::Load to never reload while keeping gInterpreter->Load and "".L"" being the same (so TSystem::Load and gInterpreter->Load behaving differently). In my opinion "".L ...so"" (and thus gInterpreter->Load) have several possibilities but they are indeed intimately link to the behavior of "".L ....C"" and "".L ...C+"", so exhaustive list:. (1.a) never reload *.so, never reload *.C and *.C+. (1.b) never reload *.so only reload *.C and *.C+ when changed. (1.c) never reload *.so always reload *.C only reload *.C+ when changed (I think this was v5 behavior). (1.d) never reload *.so, always reload *.C and *.C+. (2.a) only reload *.so when changed, never reload *.C and *.C+. (2.b) only reload *.so when changed only reload *.C and *.C+ when changed. (2.c) only reload *.so when changed always reload *.C only reload *.C+ when changed . (2.d) only reload *.so when changed, always reload *.C and *.C+. (3.a) always reload *.so, never reload *.C and *.C+. (3.b) always reload *.so only reload *.C and *.C+ when changed. (3.c) always reload *.so always reload *.C only reload *.C+ when changed . (3.d) always reload *.so, always reload *.C and *.C+ (current behavior if I understood correctly). Note: CompileMacro was implemented with the ""only reload *.C+ when changed in mind). (2.b) has the minimal amount of unloading but consequently has an 'unpred",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:711,energy efficiency,Load,Load,711,"> The libTree.6.21.01.so libTree.so are the same library . And it would not (and should not) matter except that it _currently_ leads to the library being reloaded yet an additional time (for every macro that is loaded and uses TTree!!!). > If we decide that it won't ever reload (which I do not see issues with) . I think TSystem::Load should behave the same as dlopen (once upon a time it was a thin layer around it). . > we should reimplement the calls to gInterpreter->Load as it translates them to .L libName which reloads. Alternatively, we could check if the library changed and only reload it if it changed. There a case to be made for returning TSystem::Load to never reload while keeping gInterpreter->Load and "".L"" being the same (so TSystem::Load and gInterpreter->Load behaving differently). In my opinion "".L ...so"" (and thus gInterpreter->Load) have several possibilities but they are indeed intimately link to the behavior of "".L ....C"" and "".L ...C+"", so exhaustive list:. (1.a) never reload *.so, never reload *.C and *.C+. (1.b) never reload *.so only reload *.C and *.C+ when changed. (1.c) never reload *.so always reload *.C only reload *.C+ when changed (I think this was v5 behavior). (1.d) never reload *.so, always reload *.C and *.C+. (2.a) only reload *.so when changed, never reload *.C and *.C+. (2.b) only reload *.so when changed only reload *.C and *.C+ when changed. (2.c) only reload *.so when changed always reload *.C only reload *.C+ when changed . (2.d) only reload *.so when changed, always reload *.C and *.C+. (3.a) always reload *.so, never reload *.C and *.C+. (3.b) always reload *.so only reload *.C and *.C+ when changed. (3.c) always reload *.so always reload *.C only reload *.C+ when changed . (3.d) always reload *.so, always reload *.C and *.C+ (current behavior if I understood correctly). Note: CompileMacro was implemented with the ""only reload *.C+ when changed in mind). (2.b) has the minimal amount of unloading but consequently has an 'unpred",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:753,energy efficiency,Load,Load,753,"> The libTree.6.21.01.so libTree.so are the same library . And it would not (and should not) matter except that it _currently_ leads to the library being reloaded yet an additional time (for every macro that is loaded and uses TTree!!!). > If we decide that it won't ever reload (which I do not see issues with) . I think TSystem::Load should behave the same as dlopen (once upon a time it was a thin layer around it). . > we should reimplement the calls to gInterpreter->Load as it translates them to .L libName which reloads. Alternatively, we could check if the library changed and only reload it if it changed. There a case to be made for returning TSystem::Load to never reload while keeping gInterpreter->Load and "".L"" being the same (so TSystem::Load and gInterpreter->Load behaving differently). In my opinion "".L ...so"" (and thus gInterpreter->Load) have several possibilities but they are indeed intimately link to the behavior of "".L ....C"" and "".L ...C+"", so exhaustive list:. (1.a) never reload *.so, never reload *.C and *.C+. (1.b) never reload *.so only reload *.C and *.C+ when changed. (1.c) never reload *.so always reload *.C only reload *.C+ when changed (I think this was v5 behavior). (1.d) never reload *.so, always reload *.C and *.C+. (2.a) only reload *.so when changed, never reload *.C and *.C+. (2.b) only reload *.so when changed only reload *.C and *.C+ when changed. (2.c) only reload *.so when changed always reload *.C only reload *.C+ when changed . (2.d) only reload *.so when changed, always reload *.C and *.C+. (3.a) always reload *.so, never reload *.C and *.C+. (3.b) always reload *.so only reload *.C and *.C+ when changed. (3.c) always reload *.so always reload *.C only reload *.C+ when changed . (3.d) always reload *.so, always reload *.C and *.C+ (current behavior if I understood correctly). Note: CompileMacro was implemented with the ""only reload *.C+ when changed in mind). (2.b) has the minimal amount of unloading but consequently has an 'unpred",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:776,energy efficiency,Load,Load,776,"> The libTree.6.21.01.so libTree.so are the same library . And it would not (and should not) matter except that it _currently_ leads to the library being reloaded yet an additional time (for every macro that is loaded and uses TTree!!!). > If we decide that it won't ever reload (which I do not see issues with) . I think TSystem::Load should behave the same as dlopen (once upon a time it was a thin layer around it). . > we should reimplement the calls to gInterpreter->Load as it translates them to .L libName which reloads. Alternatively, we could check if the library changed and only reload it if it changed. There a case to be made for returning TSystem::Load to never reload while keeping gInterpreter->Load and "".L"" being the same (so TSystem::Load and gInterpreter->Load behaving differently). In my opinion "".L ...so"" (and thus gInterpreter->Load) have several possibilities but they are indeed intimately link to the behavior of "".L ....C"" and "".L ...C+"", so exhaustive list:. (1.a) never reload *.so, never reload *.C and *.C+. (1.b) never reload *.so only reload *.C and *.C+ when changed. (1.c) never reload *.so always reload *.C only reload *.C+ when changed (I think this was v5 behavior). (1.d) never reload *.so, always reload *.C and *.C+. (2.a) only reload *.so when changed, never reload *.C and *.C+. (2.b) only reload *.so when changed only reload *.C and *.C+ when changed. (2.c) only reload *.so when changed always reload *.C only reload *.C+ when changed . (2.d) only reload *.so when changed, always reload *.C and *.C+. (3.a) always reload *.so, never reload *.C and *.C+. (3.b) always reload *.so only reload *.C and *.C+ when changed. (3.c) always reload *.so always reload *.C only reload *.C+ when changed . (3.d) always reload *.so, always reload *.C and *.C+ (current behavior if I understood correctly). Note: CompileMacro was implemented with the ""only reload *.C+ when changed in mind). (2.b) has the minimal amount of unloading but consequently has an 'unpred",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:853,energy efficiency,Load,Load,853,"> The libTree.6.21.01.so libTree.so are the same library . And it would not (and should not) matter except that it _currently_ leads to the library being reloaded yet an additional time (for every macro that is loaded and uses TTree!!!). > If we decide that it won't ever reload (which I do not see issues with) . I think TSystem::Load should behave the same as dlopen (once upon a time it was a thin layer around it). . > we should reimplement the calls to gInterpreter->Load as it translates them to .L libName which reloads. Alternatively, we could check if the library changed and only reload it if it changed. There a case to be made for returning TSystem::Load to never reload while keeping gInterpreter->Load and "".L"" being the same (so TSystem::Load and gInterpreter->Load behaving differently). In my opinion "".L ...so"" (and thus gInterpreter->Load) have several possibilities but they are indeed intimately link to the behavior of "".L ....C"" and "".L ...C+"", so exhaustive list:. (1.a) never reload *.so, never reload *.C and *.C+. (1.b) never reload *.so only reload *.C and *.C+ when changed. (1.c) never reload *.so always reload *.C only reload *.C+ when changed (I think this was v5 behavior). (1.d) never reload *.so, always reload *.C and *.C+. (2.a) only reload *.so when changed, never reload *.C and *.C+. (2.b) only reload *.so when changed only reload *.C and *.C+ when changed. (2.c) only reload *.so when changed always reload *.C only reload *.C+ when changed . (2.d) only reload *.so when changed, always reload *.C and *.C+. (3.a) always reload *.so, never reload *.C and *.C+. (3.b) always reload *.so only reload *.C and *.C+ when changed. (3.c) always reload *.so always reload *.C only reload *.C+ when changed . (3.d) always reload *.so, always reload *.C and *.C+ (current behavior if I understood correctly). Note: CompileMacro was implemented with the ""only reload *.C+ when changed in mind). (2.b) has the minimal amount of unloading but consequently has an 'unpred",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1797,energy efficiency,current,current,1797,"me as dlopen (once upon a time it was a thin layer around it). . > we should reimplement the calls to gInterpreter->Load as it translates them to .L libName which reloads. Alternatively, we could check if the library changed and only reload it if it changed. There a case to be made for returning TSystem::Load to never reload while keeping gInterpreter->Load and "".L"" being the same (so TSystem::Load and gInterpreter->Load behaving differently). In my opinion "".L ...so"" (and thus gInterpreter->Load) have several possibilities but they are indeed intimately link to the behavior of "".L ....C"" and "".L ...C+"", so exhaustive list:. (1.a) never reload *.so, never reload *.C and *.C+. (1.b) never reload *.so only reload *.C and *.C+ when changed. (1.c) never reload *.so always reload *.C only reload *.C+ when changed (I think this was v5 behavior). (1.d) never reload *.so, always reload *.C and *.C+. (2.a) only reload *.so when changed, never reload *.C and *.C+. (2.b) only reload *.so when changed only reload *.C and *.C+ when changed. (2.c) only reload *.so when changed always reload *.C only reload *.C+ when changed . (2.d) only reload *.so when changed, always reload *.C and *.C+. (3.a) always reload *.so, never reload *.C and *.C+. (3.b) always reload *.so only reload *.C and *.C+ when changed. (3.c) always reload *.so always reload *.C only reload *.C+ when changed . (3.d) always reload *.so, always reload *.C and *.C+ (current behavior if I understood correctly). Note: CompileMacro was implemented with the ""only reload *.C+ when changed in mind). (2.b) has the minimal amount of unloading but consequently has an 'unpredictable' number of static initialization. So (1.b) might be a better alternative if we assume that user macro are unlikely to have static initialization that matter/must-be-exact (and if it does then the user can use explicit .U I guess). Because "".L *.so"" might be used to load 'global' (for example Athena's or CMSSW's) libraries, I find (3.*) too harsh.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:2274,energy efficiency,load,load,2274,"me as dlopen (once upon a time it was a thin layer around it). . > we should reimplement the calls to gInterpreter->Load as it translates them to .L libName which reloads. Alternatively, we could check if the library changed and only reload it if it changed. There a case to be made for returning TSystem::Load to never reload while keeping gInterpreter->Load and "".L"" being the same (so TSystem::Load and gInterpreter->Load behaving differently). In my opinion "".L ...so"" (and thus gInterpreter->Load) have several possibilities but they are indeed intimately link to the behavior of "".L ....C"" and "".L ...C+"", so exhaustive list:. (1.a) never reload *.so, never reload *.C and *.C+. (1.b) never reload *.so only reload *.C and *.C+ when changed. (1.c) never reload *.so always reload *.C only reload *.C+ when changed (I think this was v5 behavior). (1.d) never reload *.so, always reload *.C and *.C+. (2.a) only reload *.so when changed, never reload *.C and *.C+. (2.b) only reload *.so when changed only reload *.C and *.C+ when changed. (2.c) only reload *.so when changed always reload *.C only reload *.C+ when changed . (2.d) only reload *.so when changed, always reload *.C and *.C+. (3.a) always reload *.so, never reload *.C and *.C+. (3.b) always reload *.so only reload *.C and *.C+ when changed. (3.c) always reload *.so always reload *.C only reload *.C+ when changed . (3.d) always reload *.so, always reload *.C and *.C+ (current behavior if I understood correctly). Note: CompileMacro was implemented with the ""only reload *.C+ when changed in mind). (2.b) has the minimal amount of unloading but consequently has an 'unpredictable' number of static initialization. So (1.b) might be a better alternative if we assume that user macro are unlikely to have static initialization that matter/must-be-exact (and if it does then the user can use explicit .U I guess). Because "".L *.so"" might be used to load 'global' (for example Athena's or CMSSW's) libraries, I find (3.*) too harsh.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:483,integrability,translat,translates,483,"> The libTree.6.21.01.so libTree.so are the same library . And it would not (and should not) matter except that it _currently_ leads to the library being reloaded yet an additional time (for every macro that is loaded and uses TTree!!!). > If we decide that it won't ever reload (which I do not see issues with) . I think TSystem::Load should behave the same as dlopen (once upon a time it was a thin layer around it). . > we should reimplement the calls to gInterpreter->Load as it translates them to .L libName which reloads. Alternatively, we could check if the library changed and only reload it if it changed. There a case to be made for returning TSystem::Load to never reload while keeping gInterpreter->Load and "".L"" being the same (so TSystem::Load and gInterpreter->Load behaving differently). In my opinion "".L ...so"" (and thus gInterpreter->Load) have several possibilities but they are indeed intimately link to the behavior of "".L ....C"" and "".L ...C+"", so exhaustive list:. (1.a) never reload *.so, never reload *.C and *.C+. (1.b) never reload *.so only reload *.C and *.C+ when changed. (1.c) never reload *.so always reload *.C only reload *.C+ when changed (I think this was v5 behavior). (1.d) never reload *.so, always reload *.C and *.C+. (2.a) only reload *.so when changed, never reload *.C and *.C+. (2.b) only reload *.so when changed only reload *.C and *.C+ when changed. (2.c) only reload *.so when changed always reload *.C only reload *.C+ when changed . (2.d) only reload *.so when changed, always reload *.C and *.C+. (3.a) always reload *.so, never reload *.C and *.C+. (3.b) always reload *.so only reload *.C and *.C+ when changed. (3.c) always reload *.so always reload *.C only reload *.C+ when changed . (3.d) always reload *.so, always reload *.C and *.C+ (current behavior if I understood correctly). Note: CompileMacro was implemented with the ""only reload *.C+ when changed in mind). (2.b) has the minimal amount of unloading but consequently has an 'unpred",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:483,interoperability,translat,translates,483,"> The libTree.6.21.01.so libTree.so are the same library . And it would not (and should not) matter except that it _currently_ leads to the library being reloaded yet an additional time (for every macro that is loaded and uses TTree!!!). > If we decide that it won't ever reload (which I do not see issues with) . I think TSystem::Load should behave the same as dlopen (once upon a time it was a thin layer around it). . > we should reimplement the calls to gInterpreter->Load as it translates them to .L libName which reloads. Alternatively, we could check if the library changed and only reload it if it changed. There a case to be made for returning TSystem::Load to never reload while keeping gInterpreter->Load and "".L"" being the same (so TSystem::Load and gInterpreter->Load behaving differently). In my opinion "".L ...so"" (and thus gInterpreter->Load) have several possibilities but they are indeed intimately link to the behavior of "".L ....C"" and "".L ...C+"", so exhaustive list:. (1.a) never reload *.so, never reload *.C and *.C+. (1.b) never reload *.so only reload *.C and *.C+ when changed. (1.c) never reload *.so always reload *.C only reload *.C+ when changed (I think this was v5 behavior). (1.d) never reload *.so, always reload *.C and *.C+. (2.a) only reload *.so when changed, never reload *.C and *.C+. (2.b) only reload *.so when changed only reload *.C and *.C+ when changed. (2.c) only reload *.so when changed always reload *.C only reload *.C+ when changed . (2.d) only reload *.so when changed, always reload *.C and *.C+. (3.a) always reload *.so, never reload *.C and *.C+. (3.b) always reload *.so only reload *.C and *.C+ when changed. (3.c) always reload *.so always reload *.C only reload *.C+ when changed . (3.d) always reload *.so, always reload *.C and *.C+ (current behavior if I understood correctly). Note: CompileMacro was implemented with the ""only reload *.C+ when changed in mind). (2.b) has the minimal amount of unloading but consequently has an 'unpred",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:401,modifiability,layer,layer,401,"> The libTree.6.21.01.so libTree.so are the same library . And it would not (and should not) matter except that it _currently_ leads to the library being reloaded yet an additional time (for every macro that is loaded and uses TTree!!!). > If we decide that it won't ever reload (which I do not see issues with) . I think TSystem::Load should behave the same as dlopen (once upon a time it was a thin layer around it). . > we should reimplement the calls to gInterpreter->Load as it translates them to .L libName which reloads. Alternatively, we could check if the library changed and only reload it if it changed. There a case to be made for returning TSystem::Load to never reload while keeping gInterpreter->Load and "".L"" being the same (so TSystem::Load and gInterpreter->Load behaving differently). In my opinion "".L ...so"" (and thus gInterpreter->Load) have several possibilities but they are indeed intimately link to the behavior of "".L ....C"" and "".L ...C+"", so exhaustive list:. (1.a) never reload *.so, never reload *.C and *.C+. (1.b) never reload *.so only reload *.C and *.C+ when changed. (1.c) never reload *.so always reload *.C only reload *.C+ when changed (I think this was v5 behavior). (1.d) never reload *.so, always reload *.C and *.C+. (2.a) only reload *.so when changed, never reload *.C and *.C+. (2.b) only reload *.so when changed only reload *.C and *.C+ when changed. (2.c) only reload *.so when changed always reload *.C only reload *.C+ when changed . (2.d) only reload *.so when changed, always reload *.C and *.C+. (3.a) always reload *.so, never reload *.C and *.C+. (3.b) always reload *.so only reload *.C and *.C+ when changed. (3.c) always reload *.so always reload *.C only reload *.C+ when changed . (3.d) always reload *.so, always reload *.C and *.C+ (current behavior if I understood correctly). Note: CompileMacro was implemented with the ""only reload *.C+ when changed in mind). (2.b) has the minimal amount of unloading but consequently has an 'unpred",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:181,performance,time,time,181,"> The libTree.6.21.01.so libTree.so are the same library . And it would not (and should not) matter except that it _currently_ leads to the library being reloaded yet an additional time (for every macro that is loaded and uses TTree!!!). > If we decide that it won't ever reload (which I do not see issues with) . I think TSystem::Load should behave the same as dlopen (once upon a time it was a thin layer around it). . > we should reimplement the calls to gInterpreter->Load as it translates them to .L libName which reloads. Alternatively, we could check if the library changed and only reload it if it changed. There a case to be made for returning TSystem::Load to never reload while keeping gInterpreter->Load and "".L"" being the same (so TSystem::Load and gInterpreter->Load behaving differently). In my opinion "".L ...so"" (and thus gInterpreter->Load) have several possibilities but they are indeed intimately link to the behavior of "".L ....C"" and "".L ...C+"", so exhaustive list:. (1.a) never reload *.so, never reload *.C and *.C+. (1.b) never reload *.so only reload *.C and *.C+ when changed. (1.c) never reload *.so always reload *.C only reload *.C+ when changed (I think this was v5 behavior). (1.d) never reload *.so, always reload *.C and *.C+. (2.a) only reload *.so when changed, never reload *.C and *.C+. (2.b) only reload *.so when changed only reload *.C and *.C+ when changed. (2.c) only reload *.so when changed always reload *.C only reload *.C+ when changed . (2.d) only reload *.so when changed, always reload *.C and *.C+. (3.a) always reload *.so, never reload *.C and *.C+. (3.b) always reload *.so only reload *.C and *.C+ when changed. (3.c) always reload *.so always reload *.C only reload *.C+ when changed . (3.d) always reload *.so, always reload *.C and *.C+ (current behavior if I understood correctly). Note: CompileMacro was implemented with the ""only reload *.C+ when changed in mind). (2.b) has the minimal amount of unloading but consequently has an 'unpred",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:211,performance,load,loaded,211,"> The libTree.6.21.01.so libTree.so are the same library . And it would not (and should not) matter except that it _currently_ leads to the library being reloaded yet an additional time (for every macro that is loaded and uses TTree!!!). > If we decide that it won't ever reload (which I do not see issues with) . I think TSystem::Load should behave the same as dlopen (once upon a time it was a thin layer around it). . > we should reimplement the calls to gInterpreter->Load as it translates them to .L libName which reloads. Alternatively, we could check if the library changed and only reload it if it changed. There a case to be made for returning TSystem::Load to never reload while keeping gInterpreter->Load and "".L"" being the same (so TSystem::Load and gInterpreter->Load behaving differently). In my opinion "".L ...so"" (and thus gInterpreter->Load) have several possibilities but they are indeed intimately link to the behavior of "".L ....C"" and "".L ...C+"", so exhaustive list:. (1.a) never reload *.so, never reload *.C and *.C+. (1.b) never reload *.so only reload *.C and *.C+ when changed. (1.c) never reload *.so always reload *.C only reload *.C+ when changed (I think this was v5 behavior). (1.d) never reload *.so, always reload *.C and *.C+. (2.a) only reload *.so when changed, never reload *.C and *.C+. (2.b) only reload *.so when changed only reload *.C and *.C+ when changed. (2.c) only reload *.so when changed always reload *.C only reload *.C+ when changed . (2.d) only reload *.so when changed, always reload *.C and *.C+. (3.a) always reload *.so, never reload *.C and *.C+. (3.b) always reload *.so only reload *.C and *.C+ when changed. (3.c) always reload *.so always reload *.C only reload *.C+ when changed . (3.d) always reload *.so, always reload *.C and *.C+ (current behavior if I understood correctly). Note: CompileMacro was implemented with the ""only reload *.C+ when changed in mind). (2.b) has the minimal amount of unloading but consequently has an 'unpred",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:331,performance,Load,Load,331,"> The libTree.6.21.01.so libTree.so are the same library . And it would not (and should not) matter except that it _currently_ leads to the library being reloaded yet an additional time (for every macro that is loaded and uses TTree!!!). > If we decide that it won't ever reload (which I do not see issues with) . I think TSystem::Load should behave the same as dlopen (once upon a time it was a thin layer around it). . > we should reimplement the calls to gInterpreter->Load as it translates them to .L libName which reloads. Alternatively, we could check if the library changed and only reload it if it changed. There a case to be made for returning TSystem::Load to never reload while keeping gInterpreter->Load and "".L"" being the same (so TSystem::Load and gInterpreter->Load behaving differently). In my opinion "".L ...so"" (and thus gInterpreter->Load) have several possibilities but they are indeed intimately link to the behavior of "".L ....C"" and "".L ...C+"", so exhaustive list:. (1.a) never reload *.so, never reload *.C and *.C+. (1.b) never reload *.so only reload *.C and *.C+ when changed. (1.c) never reload *.so always reload *.C only reload *.C+ when changed (I think this was v5 behavior). (1.d) never reload *.so, always reload *.C and *.C+. (2.a) only reload *.so when changed, never reload *.C and *.C+. (2.b) only reload *.so when changed only reload *.C and *.C+ when changed. (2.c) only reload *.so when changed always reload *.C only reload *.C+ when changed . (2.d) only reload *.so when changed, always reload *.C and *.C+. (3.a) always reload *.so, never reload *.C and *.C+. (3.b) always reload *.so only reload *.C and *.C+ when changed. (3.c) always reload *.so always reload *.C only reload *.C+ when changed . (3.d) always reload *.so, always reload *.C and *.C+ (current behavior if I understood correctly). Note: CompileMacro was implemented with the ""only reload *.C+ when changed in mind). (2.b) has the minimal amount of unloading but consequently has an 'unpred",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:382,performance,time,time,382,"> The libTree.6.21.01.so libTree.so are the same library . And it would not (and should not) matter except that it _currently_ leads to the library being reloaded yet an additional time (for every macro that is loaded and uses TTree!!!). > If we decide that it won't ever reload (which I do not see issues with) . I think TSystem::Load should behave the same as dlopen (once upon a time it was a thin layer around it). . > we should reimplement the calls to gInterpreter->Load as it translates them to .L libName which reloads. Alternatively, we could check if the library changed and only reload it if it changed. There a case to be made for returning TSystem::Load to never reload while keeping gInterpreter->Load and "".L"" being the same (so TSystem::Load and gInterpreter->Load behaving differently). In my opinion "".L ...so"" (and thus gInterpreter->Load) have several possibilities but they are indeed intimately link to the behavior of "".L ....C"" and "".L ...C+"", so exhaustive list:. (1.a) never reload *.so, never reload *.C and *.C+. (1.b) never reload *.so only reload *.C and *.C+ when changed. (1.c) never reload *.so always reload *.C only reload *.C+ when changed (I think this was v5 behavior). (1.d) never reload *.so, always reload *.C and *.C+. (2.a) only reload *.so when changed, never reload *.C and *.C+. (2.b) only reload *.so when changed only reload *.C and *.C+ when changed. (2.c) only reload *.so when changed always reload *.C only reload *.C+ when changed . (2.d) only reload *.so when changed, always reload *.C and *.C+. (3.a) always reload *.so, never reload *.C and *.C+. (3.b) always reload *.so only reload *.C and *.C+ when changed. (3.c) always reload *.so always reload *.C only reload *.C+ when changed . (3.d) always reload *.so, always reload *.C and *.C+ (current behavior if I understood correctly). Note: CompileMacro was implemented with the ""only reload *.C+ when changed in mind). (2.b) has the minimal amount of unloading but consequently has an 'unpred",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:472,performance,Load,Load,472,"> The libTree.6.21.01.so libTree.so are the same library . And it would not (and should not) matter except that it _currently_ leads to the library being reloaded yet an additional time (for every macro that is loaded and uses TTree!!!). > If we decide that it won't ever reload (which I do not see issues with) . I think TSystem::Load should behave the same as dlopen (once upon a time it was a thin layer around it). . > we should reimplement the calls to gInterpreter->Load as it translates them to .L libName which reloads. Alternatively, we could check if the library changed and only reload it if it changed. There a case to be made for returning TSystem::Load to never reload while keeping gInterpreter->Load and "".L"" being the same (so TSystem::Load and gInterpreter->Load behaving differently). In my opinion "".L ...so"" (and thus gInterpreter->Load) have several possibilities but they are indeed intimately link to the behavior of "".L ....C"" and "".L ...C+"", so exhaustive list:. (1.a) never reload *.so, never reload *.C and *.C+. (1.b) never reload *.so only reload *.C and *.C+ when changed. (1.c) never reload *.so always reload *.C only reload *.C+ when changed (I think this was v5 behavior). (1.d) never reload *.so, always reload *.C and *.C+. (2.a) only reload *.so when changed, never reload *.C and *.C+. (2.b) only reload *.so when changed only reload *.C and *.C+ when changed. (2.c) only reload *.so when changed always reload *.C only reload *.C+ when changed . (2.d) only reload *.so when changed, always reload *.C and *.C+. (3.a) always reload *.so, never reload *.C and *.C+. (3.b) always reload *.so only reload *.C and *.C+ when changed. (3.c) always reload *.so always reload *.C only reload *.C+ when changed . (3.d) always reload *.so, always reload *.C and *.C+ (current behavior if I understood correctly). Note: CompileMacro was implemented with the ""only reload *.C+ when changed in mind). (2.b) has the minimal amount of unloading but consequently has an 'unpred",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:662,performance,Load,Load,662,"> The libTree.6.21.01.so libTree.so are the same library . And it would not (and should not) matter except that it _currently_ leads to the library being reloaded yet an additional time (for every macro that is loaded and uses TTree!!!). > If we decide that it won't ever reload (which I do not see issues with) . I think TSystem::Load should behave the same as dlopen (once upon a time it was a thin layer around it). . > we should reimplement the calls to gInterpreter->Load as it translates them to .L libName which reloads. Alternatively, we could check if the library changed and only reload it if it changed. There a case to be made for returning TSystem::Load to never reload while keeping gInterpreter->Load and "".L"" being the same (so TSystem::Load and gInterpreter->Load behaving differently). In my opinion "".L ...so"" (and thus gInterpreter->Load) have several possibilities but they are indeed intimately link to the behavior of "".L ....C"" and "".L ...C+"", so exhaustive list:. (1.a) never reload *.so, never reload *.C and *.C+. (1.b) never reload *.so only reload *.C and *.C+ when changed. (1.c) never reload *.so always reload *.C only reload *.C+ when changed (I think this was v5 behavior). (1.d) never reload *.so, always reload *.C and *.C+. (2.a) only reload *.so when changed, never reload *.C and *.C+. (2.b) only reload *.so when changed only reload *.C and *.C+ when changed. (2.c) only reload *.so when changed always reload *.C only reload *.C+ when changed . (2.d) only reload *.so when changed, always reload *.C and *.C+. (3.a) always reload *.so, never reload *.C and *.C+. (3.b) always reload *.so only reload *.C and *.C+ when changed. (3.c) always reload *.so always reload *.C only reload *.C+ when changed . (3.d) always reload *.so, always reload *.C and *.C+ (current behavior if I understood correctly). Note: CompileMacro was implemented with the ""only reload *.C+ when changed in mind). (2.b) has the minimal amount of unloading but consequently has an 'unpred",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:711,performance,Load,Load,711,"> The libTree.6.21.01.so libTree.so are the same library . And it would not (and should not) matter except that it _currently_ leads to the library being reloaded yet an additional time (for every macro that is loaded and uses TTree!!!). > If we decide that it won't ever reload (which I do not see issues with) . I think TSystem::Load should behave the same as dlopen (once upon a time it was a thin layer around it). . > we should reimplement the calls to gInterpreter->Load as it translates them to .L libName which reloads. Alternatively, we could check if the library changed and only reload it if it changed. There a case to be made for returning TSystem::Load to never reload while keeping gInterpreter->Load and "".L"" being the same (so TSystem::Load and gInterpreter->Load behaving differently). In my opinion "".L ...so"" (and thus gInterpreter->Load) have several possibilities but they are indeed intimately link to the behavior of "".L ....C"" and "".L ...C+"", so exhaustive list:. (1.a) never reload *.so, never reload *.C and *.C+. (1.b) never reload *.so only reload *.C and *.C+ when changed. (1.c) never reload *.so always reload *.C only reload *.C+ when changed (I think this was v5 behavior). (1.d) never reload *.so, always reload *.C and *.C+. (2.a) only reload *.so when changed, never reload *.C and *.C+. (2.b) only reload *.so when changed only reload *.C and *.C+ when changed. (2.c) only reload *.so when changed always reload *.C only reload *.C+ when changed . (2.d) only reload *.so when changed, always reload *.C and *.C+. (3.a) always reload *.so, never reload *.C and *.C+. (3.b) always reload *.so only reload *.C and *.C+ when changed. (3.c) always reload *.so always reload *.C only reload *.C+ when changed . (3.d) always reload *.so, always reload *.C and *.C+ (current behavior if I understood correctly). Note: CompileMacro was implemented with the ""only reload *.C+ when changed in mind). (2.b) has the minimal amount of unloading but consequently has an 'unpred",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:753,performance,Load,Load,753,"> The libTree.6.21.01.so libTree.so are the same library . And it would not (and should not) matter except that it _currently_ leads to the library being reloaded yet an additional time (for every macro that is loaded and uses TTree!!!). > If we decide that it won't ever reload (which I do not see issues with) . I think TSystem::Load should behave the same as dlopen (once upon a time it was a thin layer around it). . > we should reimplement the calls to gInterpreter->Load as it translates them to .L libName which reloads. Alternatively, we could check if the library changed and only reload it if it changed. There a case to be made for returning TSystem::Load to never reload while keeping gInterpreter->Load and "".L"" being the same (so TSystem::Load and gInterpreter->Load behaving differently). In my opinion "".L ...so"" (and thus gInterpreter->Load) have several possibilities but they are indeed intimately link to the behavior of "".L ....C"" and "".L ...C+"", so exhaustive list:. (1.a) never reload *.so, never reload *.C and *.C+. (1.b) never reload *.so only reload *.C and *.C+ when changed. (1.c) never reload *.so always reload *.C only reload *.C+ when changed (I think this was v5 behavior). (1.d) never reload *.so, always reload *.C and *.C+. (2.a) only reload *.so when changed, never reload *.C and *.C+. (2.b) only reload *.so when changed only reload *.C and *.C+ when changed. (2.c) only reload *.so when changed always reload *.C only reload *.C+ when changed . (2.d) only reload *.so when changed, always reload *.C and *.C+. (3.a) always reload *.so, never reload *.C and *.C+. (3.b) always reload *.so only reload *.C and *.C+ when changed. (3.c) always reload *.so always reload *.C only reload *.C+ when changed . (3.d) always reload *.so, always reload *.C and *.C+ (current behavior if I understood correctly). Note: CompileMacro was implemented with the ""only reload *.C+ when changed in mind). (2.b) has the minimal amount of unloading but consequently has an 'unpred",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:776,performance,Load,Load,776,"> The libTree.6.21.01.so libTree.so are the same library . And it would not (and should not) matter except that it _currently_ leads to the library being reloaded yet an additional time (for every macro that is loaded and uses TTree!!!). > If we decide that it won't ever reload (which I do not see issues with) . I think TSystem::Load should behave the same as dlopen (once upon a time it was a thin layer around it). . > we should reimplement the calls to gInterpreter->Load as it translates them to .L libName which reloads. Alternatively, we could check if the library changed and only reload it if it changed. There a case to be made for returning TSystem::Load to never reload while keeping gInterpreter->Load and "".L"" being the same (so TSystem::Load and gInterpreter->Load behaving differently). In my opinion "".L ...so"" (and thus gInterpreter->Load) have several possibilities but they are indeed intimately link to the behavior of "".L ....C"" and "".L ...C+"", so exhaustive list:. (1.a) never reload *.so, never reload *.C and *.C+. (1.b) never reload *.so only reload *.C and *.C+ when changed. (1.c) never reload *.so always reload *.C only reload *.C+ when changed (I think this was v5 behavior). (1.d) never reload *.so, always reload *.C and *.C+. (2.a) only reload *.so when changed, never reload *.C and *.C+. (2.b) only reload *.so when changed only reload *.C and *.C+ when changed. (2.c) only reload *.so when changed always reload *.C only reload *.C+ when changed . (2.d) only reload *.so when changed, always reload *.C and *.C+. (3.a) always reload *.so, never reload *.C and *.C+. (3.b) always reload *.so only reload *.C and *.C+ when changed. (3.c) always reload *.so always reload *.C only reload *.C+ when changed . (3.d) always reload *.so, always reload *.C and *.C+ (current behavior if I understood correctly). Note: CompileMacro was implemented with the ""only reload *.C+ when changed in mind). (2.b) has the minimal amount of unloading but consequently has an 'unpred",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:853,performance,Load,Load,853,"> The libTree.6.21.01.so libTree.so are the same library . And it would not (and should not) matter except that it _currently_ leads to the library being reloaded yet an additional time (for every macro that is loaded and uses TTree!!!). > If we decide that it won't ever reload (which I do not see issues with) . I think TSystem::Load should behave the same as dlopen (once upon a time it was a thin layer around it). . > we should reimplement the calls to gInterpreter->Load as it translates them to .L libName which reloads. Alternatively, we could check if the library changed and only reload it if it changed. There a case to be made for returning TSystem::Load to never reload while keeping gInterpreter->Load and "".L"" being the same (so TSystem::Load and gInterpreter->Load behaving differently). In my opinion "".L ...so"" (and thus gInterpreter->Load) have several possibilities but they are indeed intimately link to the behavior of "".L ....C"" and "".L ...C+"", so exhaustive list:. (1.a) never reload *.so, never reload *.C and *.C+. (1.b) never reload *.so only reload *.C and *.C+ when changed. (1.c) never reload *.so always reload *.C only reload *.C+ when changed (I think this was v5 behavior). (1.d) never reload *.so, always reload *.C and *.C+. (2.a) only reload *.so when changed, never reload *.C and *.C+. (2.b) only reload *.so when changed only reload *.C and *.C+ when changed. (2.c) only reload *.so when changed always reload *.C only reload *.C+ when changed . (2.d) only reload *.so when changed, always reload *.C and *.C+. (3.a) always reload *.so, never reload *.C and *.C+. (3.b) always reload *.so only reload *.C and *.C+ when changed. (3.c) always reload *.so always reload *.C only reload *.C+ when changed . (3.d) always reload *.so, always reload *.C and *.C+ (current behavior if I understood correctly). Note: CompileMacro was implemented with the ""only reload *.C+ when changed in mind). (2.b) has the minimal amount of unloading but consequently has an 'unpred",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:2274,performance,load,load,2274,"me as dlopen (once upon a time it was a thin layer around it). . > we should reimplement the calls to gInterpreter->Load as it translates them to .L libName which reloads. Alternatively, we could check if the library changed and only reload it if it changed. There a case to be made for returning TSystem::Load to never reload while keeping gInterpreter->Load and "".L"" being the same (so TSystem::Load and gInterpreter->Load behaving differently). In my opinion "".L ...so"" (and thus gInterpreter->Load) have several possibilities but they are indeed intimately link to the behavior of "".L ....C"" and "".L ...C+"", so exhaustive list:. (1.a) never reload *.so, never reload *.C and *.C+. (1.b) never reload *.so only reload *.C and *.C+ when changed. (1.c) never reload *.so always reload *.C only reload *.C+ when changed (I think this was v5 behavior). (1.d) never reload *.so, always reload *.C and *.C+. (2.a) only reload *.so when changed, never reload *.C and *.C+. (2.b) only reload *.so when changed only reload *.C and *.C+ when changed. (2.c) only reload *.so when changed always reload *.C only reload *.C+ when changed . (2.d) only reload *.so when changed, always reload *.C and *.C+. (3.a) always reload *.so, never reload *.C and *.C+. (3.b) always reload *.so only reload *.C and *.C+ when changed. (3.c) always reload *.so always reload *.C only reload *.C+ when changed . (3.d) always reload *.so, always reload *.C and *.C+ (current behavior if I understood correctly). Note: CompileMacro was implemented with the ""only reload *.C+ when changed in mind). (2.b) has the minimal amount of unloading but consequently has an 'unpredictable' number of static initialization. So (1.b) might be a better alternative if we assume that user macro are unlikely to have static initialization that matter/must-be-exact (and if it does then the user can use explicit .U I guess). Because "".L *.so"" might be used to load 'global' (for example Athena's or CMSSW's) libraries, I find (3.*) too harsh.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:2190,reliability,doe,does,2190,"me as dlopen (once upon a time it was a thin layer around it). . > we should reimplement the calls to gInterpreter->Load as it translates them to .L libName which reloads. Alternatively, we could check if the library changed and only reload it if it changed. There a case to be made for returning TSystem::Load to never reload while keeping gInterpreter->Load and "".L"" being the same (so TSystem::Load and gInterpreter->Load behaving differently). In my opinion "".L ...so"" (and thus gInterpreter->Load) have several possibilities but they are indeed intimately link to the behavior of "".L ....C"" and "".L ...C+"", so exhaustive list:. (1.a) never reload *.so, never reload *.C and *.C+. (1.b) never reload *.so only reload *.C and *.C+ when changed. (1.c) never reload *.so always reload *.C only reload *.C+ when changed (I think this was v5 behavior). (1.d) never reload *.so, always reload *.C and *.C+. (2.a) only reload *.so when changed, never reload *.C and *.C+. (2.b) only reload *.so when changed only reload *.C and *.C+ when changed. (2.c) only reload *.so when changed always reload *.C only reload *.C+ when changed . (2.d) only reload *.so when changed, always reload *.C and *.C+. (3.a) always reload *.so, never reload *.C and *.C+. (3.b) always reload *.so only reload *.C and *.C+ when changed. (3.c) always reload *.so always reload *.C only reload *.C+ when changed . (3.d) always reload *.so, always reload *.C and *.C+ (current behavior if I understood correctly). Note: CompileMacro was implemented with the ""only reload *.C+ when changed in mind). (2.b) has the minimal amount of unloading but consequently has an 'unpredictable' number of static initialization. So (1.b) might be a better alternative if we assume that user macro are unlikely to have static initialization that matter/must-be-exact (and if it does then the user can use explicit .U I guess). Because "".L *.so"" might be used to load 'global' (for example Athena's or CMSSW's) libraries, I find (3.*) too harsh.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:100,safety,except,except,100,"> The libTree.6.21.01.so libTree.so are the same library . And it would not (and should not) matter except that it _currently_ leads to the library being reloaded yet an additional time (for every macro that is loaded and uses TTree!!!). > If we decide that it won't ever reload (which I do not see issues with) . I think TSystem::Load should behave the same as dlopen (once upon a time it was a thin layer around it). . > we should reimplement the calls to gInterpreter->Load as it translates them to .L libName which reloads. Alternatively, we could check if the library changed and only reload it if it changed. There a case to be made for returning TSystem::Load to never reload while keeping gInterpreter->Load and "".L"" being the same (so TSystem::Load and gInterpreter->Load behaving differently). In my opinion "".L ...so"" (and thus gInterpreter->Load) have several possibilities but they are indeed intimately link to the behavior of "".L ....C"" and "".L ...C+"", so exhaustive list:. (1.a) never reload *.so, never reload *.C and *.C+. (1.b) never reload *.so only reload *.C and *.C+ when changed. (1.c) never reload *.so always reload *.C only reload *.C+ when changed (I think this was v5 behavior). (1.d) never reload *.so, always reload *.C and *.C+. (2.a) only reload *.so when changed, never reload *.C and *.C+. (2.b) only reload *.so when changed only reload *.C and *.C+ when changed. (2.c) only reload *.so when changed always reload *.C only reload *.C+ when changed . (2.d) only reload *.so when changed, always reload *.C and *.C+. (3.a) always reload *.so, never reload *.C and *.C+. (3.b) always reload *.so only reload *.C and *.C+ when changed. (3.c) always reload *.so always reload *.C only reload *.C+ when changed . (3.d) always reload *.so, always reload *.C and *.C+ (current behavior if I understood correctly). Note: CompileMacro was implemented with the ""only reload *.C+ when changed in mind). (2.b) has the minimal amount of unloading but consequently has an 'unpred",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:781,usability,behavi,behaving,781,"> The libTree.6.21.01.so libTree.so are the same library . And it would not (and should not) matter except that it _currently_ leads to the library being reloaded yet an additional time (for every macro that is loaded and uses TTree!!!). > If we decide that it won't ever reload (which I do not see issues with) . I think TSystem::Load should behave the same as dlopen (once upon a time it was a thin layer around it). . > we should reimplement the calls to gInterpreter->Load as it translates them to .L libName which reloads. Alternatively, we could check if the library changed and only reload it if it changed. There a case to be made for returning TSystem::Load to never reload while keeping gInterpreter->Load and "".L"" being the same (so TSystem::Load and gInterpreter->Load behaving differently). In my opinion "".L ...so"" (and thus gInterpreter->Load) have several possibilities but they are indeed intimately link to the behavior of "".L ....C"" and "".L ...C+"", so exhaustive list:. (1.a) never reload *.so, never reload *.C and *.C+. (1.b) never reload *.so only reload *.C and *.C+ when changed. (1.c) never reload *.so always reload *.C only reload *.C+ when changed (I think this was v5 behavior). (1.d) never reload *.so, always reload *.C and *.C+. (2.a) only reload *.so when changed, never reload *.C and *.C+. (2.b) only reload *.so when changed only reload *.C and *.C+ when changed. (2.c) only reload *.so when changed always reload *.C only reload *.C+ when changed . (2.d) only reload *.so when changed, always reload *.C and *.C+. (3.a) always reload *.so, never reload *.C and *.C+. (3.b) always reload *.so only reload *.C and *.C+ when changed. (3.c) always reload *.so always reload *.C only reload *.C+ when changed . (3.d) always reload *.so, always reload *.C and *.C+ (current behavior if I understood correctly). Note: CompileMacro was implemented with the ""only reload *.C+ when changed in mind). (2.b) has the minimal amount of unloading but consequently has an 'unpred",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:929,usability,behavi,behavior,929,"> The libTree.6.21.01.so libTree.so are the same library . And it would not (and should not) matter except that it _currently_ leads to the library being reloaded yet an additional time (for every macro that is loaded and uses TTree!!!). > If we decide that it won't ever reload (which I do not see issues with) . I think TSystem::Load should behave the same as dlopen (once upon a time it was a thin layer around it). . > we should reimplement the calls to gInterpreter->Load as it translates them to .L libName which reloads. Alternatively, we could check if the library changed and only reload it if it changed. There a case to be made for returning TSystem::Load to never reload while keeping gInterpreter->Load and "".L"" being the same (so TSystem::Load and gInterpreter->Load behaving differently). In my opinion "".L ...so"" (and thus gInterpreter->Load) have several possibilities but they are indeed intimately link to the behavior of "".L ....C"" and "".L ...C+"", so exhaustive list:. (1.a) never reload *.so, never reload *.C and *.C+. (1.b) never reload *.so only reload *.C and *.C+ when changed. (1.c) never reload *.so always reload *.C only reload *.C+ when changed (I think this was v5 behavior). (1.d) never reload *.so, always reload *.C and *.C+. (2.a) only reload *.so when changed, never reload *.C and *.C+. (2.b) only reload *.so when changed only reload *.C and *.C+ when changed. (2.c) only reload *.so when changed always reload *.C only reload *.C+ when changed . (2.d) only reload *.so when changed, always reload *.C and *.C+. (3.a) always reload *.so, never reload *.C and *.C+. (3.b) always reload *.so only reload *.C and *.C+ when changed. (3.c) always reload *.so always reload *.C only reload *.C+ when changed . (3.d) always reload *.so, always reload *.C and *.C+ (current behavior if I understood correctly). Note: CompileMacro was implemented with the ""only reload *.C+ when changed in mind). (2.b) has the minimal amount of unloading but consequently has an 'unpred",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1197,usability,behavi,behavior,1197,"o that is loaded and uses TTree!!!). > If we decide that it won't ever reload (which I do not see issues with) . I think TSystem::Load should behave the same as dlopen (once upon a time it was a thin layer around it). . > we should reimplement the calls to gInterpreter->Load as it translates them to .L libName which reloads. Alternatively, we could check if the library changed and only reload it if it changed. There a case to be made for returning TSystem::Load to never reload while keeping gInterpreter->Load and "".L"" being the same (so TSystem::Load and gInterpreter->Load behaving differently). In my opinion "".L ...so"" (and thus gInterpreter->Load) have several possibilities but they are indeed intimately link to the behavior of "".L ....C"" and "".L ...C+"", so exhaustive list:. (1.a) never reload *.so, never reload *.C and *.C+. (1.b) never reload *.so only reload *.C and *.C+ when changed. (1.c) never reload *.so always reload *.C only reload *.C+ when changed (I think this was v5 behavior). (1.d) never reload *.so, always reload *.C and *.C+. (2.a) only reload *.so when changed, never reload *.C and *.C+. (2.b) only reload *.so when changed only reload *.C and *.C+ when changed. (2.c) only reload *.so when changed always reload *.C only reload *.C+ when changed . (2.d) only reload *.so when changed, always reload *.C and *.C+. (3.a) always reload *.so, never reload *.C and *.C+. (3.b) always reload *.so only reload *.C and *.C+ when changed. (3.c) always reload *.so always reload *.C only reload *.C+ when changed . (3.d) always reload *.so, always reload *.C and *.C+ (current behavior if I understood correctly). Note: CompileMacro was implemented with the ""only reload *.C+ when changed in mind). (2.b) has the minimal amount of unloading but consequently has an 'unpredictable' number of static initialization. So (1.b) might be a better alternative if we assume that user macro are unlikely to have static initialization that matter/must-be-exact (and if it does then t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1805,usability,behavi,behavior,1805,"me as dlopen (once upon a time it was a thin layer around it). . > we should reimplement the calls to gInterpreter->Load as it translates them to .L libName which reloads. Alternatively, we could check if the library changed and only reload it if it changed. There a case to be made for returning TSystem::Load to never reload while keeping gInterpreter->Load and "".L"" being the same (so TSystem::Load and gInterpreter->Load behaving differently). In my opinion "".L ...so"" (and thus gInterpreter->Load) have several possibilities but they are indeed intimately link to the behavior of "".L ....C"" and "".L ...C+"", so exhaustive list:. (1.a) never reload *.so, never reload *.C and *.C+. (1.b) never reload *.so only reload *.C and *.C+ when changed. (1.c) never reload *.so always reload *.C only reload *.C+ when changed (I think this was v5 behavior). (1.d) never reload *.so, always reload *.C and *.C+. (2.a) only reload *.so when changed, never reload *.C and *.C+. (2.b) only reload *.so when changed only reload *.C and *.C+ when changed. (2.c) only reload *.so when changed always reload *.C only reload *.C+ when changed . (2.d) only reload *.so when changed, always reload *.C and *.C+. (3.a) always reload *.so, never reload *.C and *.C+. (3.b) always reload *.so only reload *.C and *.C+ when changed. (3.c) always reload *.so always reload *.C only reload *.C+ when changed . (3.d) always reload *.so, always reload *.C and *.C+ (current behavior if I understood correctly). Note: CompileMacro was implemented with the ""only reload *.C+ when changed in mind). (2.b) has the minimal amount of unloading but consequently has an 'unpredictable' number of static initialization. So (1.b) might be a better alternative if we assume that user macro are unlikely to have static initialization that matter/must-be-exact (and if it does then the user can use explicit .U I guess). Because "".L *.so"" might be used to load 'global' (for example Athena's or CMSSW's) libraries, I find (3.*) too harsh.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1941,usability,minim,minimal,1941,"me as dlopen (once upon a time it was a thin layer around it). . > we should reimplement the calls to gInterpreter->Load as it translates them to .L libName which reloads. Alternatively, we could check if the library changed and only reload it if it changed. There a case to be made for returning TSystem::Load to never reload while keeping gInterpreter->Load and "".L"" being the same (so TSystem::Load and gInterpreter->Load behaving differently). In my opinion "".L ...so"" (and thus gInterpreter->Load) have several possibilities but they are indeed intimately link to the behavior of "".L ....C"" and "".L ...C+"", so exhaustive list:. (1.a) never reload *.so, never reload *.C and *.C+. (1.b) never reload *.so only reload *.C and *.C+ when changed. (1.c) never reload *.so always reload *.C only reload *.C+ when changed (I think this was v5 behavior). (1.d) never reload *.so, always reload *.C and *.C+. (2.a) only reload *.so when changed, never reload *.C and *.C+. (2.b) only reload *.so when changed only reload *.C and *.C+ when changed. (2.c) only reload *.so when changed always reload *.C only reload *.C+ when changed . (2.d) only reload *.so when changed, always reload *.C and *.C+. (3.a) always reload *.so, never reload *.C and *.C+. (3.b) always reload *.so only reload *.C and *.C+ when changed. (3.c) always reload *.so always reload *.C only reload *.C+ when changed . (3.d) always reload *.so, always reload *.C and *.C+ (current behavior if I understood correctly). Note: CompileMacro was implemented with the ""only reload *.C+ when changed in mind). (2.b) has the minimal amount of unloading but consequently has an 'unpredictable' number of static initialization. So (1.b) might be a better alternative if we assume that user macro are unlikely to have static initialization that matter/must-be-exact (and if it does then the user can use explicit .U I guess). Because "".L *.so"" might be used to load 'global' (for example Athena's or CMSSW's) libraries, I find (3.*) too harsh.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:2099,usability,user,user,2099,"me as dlopen (once upon a time it was a thin layer around it). . > we should reimplement the calls to gInterpreter->Load as it translates them to .L libName which reloads. Alternatively, we could check if the library changed and only reload it if it changed. There a case to be made for returning TSystem::Load to never reload while keeping gInterpreter->Load and "".L"" being the same (so TSystem::Load and gInterpreter->Load behaving differently). In my opinion "".L ...so"" (and thus gInterpreter->Load) have several possibilities but they are indeed intimately link to the behavior of "".L ....C"" and "".L ...C+"", so exhaustive list:. (1.a) never reload *.so, never reload *.C and *.C+. (1.b) never reload *.so only reload *.C and *.C+ when changed. (1.c) never reload *.so always reload *.C only reload *.C+ when changed (I think this was v5 behavior). (1.d) never reload *.so, always reload *.C and *.C+. (2.a) only reload *.so when changed, never reload *.C and *.C+. (2.b) only reload *.so when changed only reload *.C and *.C+ when changed. (2.c) only reload *.so when changed always reload *.C only reload *.C+ when changed . (2.d) only reload *.so when changed, always reload *.C and *.C+. (3.a) always reload *.so, never reload *.C and *.C+. (3.b) always reload *.so only reload *.C and *.C+ when changed. (3.c) always reload *.so always reload *.C only reload *.C+ when changed . (3.d) always reload *.so, always reload *.C and *.C+ (current behavior if I understood correctly). Note: CompileMacro was implemented with the ""only reload *.C+ when changed in mind). (2.b) has the minimal amount of unloading but consequently has an 'unpredictable' number of static initialization. So (1.b) might be a better alternative if we assume that user macro are unlikely to have static initialization that matter/must-be-exact (and if it does then the user can use explicit .U I guess). Because "".L *.so"" might be used to load 'global' (for example Athena's or CMSSW's) libraries, I find (3.*) too harsh.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:2204,usability,user,user,2204,"me as dlopen (once upon a time it was a thin layer around it). . > we should reimplement the calls to gInterpreter->Load as it translates them to .L libName which reloads. Alternatively, we could check if the library changed and only reload it if it changed. There a case to be made for returning TSystem::Load to never reload while keeping gInterpreter->Load and "".L"" being the same (so TSystem::Load and gInterpreter->Load behaving differently). In my opinion "".L ...so"" (and thus gInterpreter->Load) have several possibilities but they are indeed intimately link to the behavior of "".L ....C"" and "".L ...C+"", so exhaustive list:. (1.a) never reload *.so, never reload *.C and *.C+. (1.b) never reload *.so only reload *.C and *.C+ when changed. (1.c) never reload *.so always reload *.C only reload *.C+ when changed (I think this was v5 behavior). (1.d) never reload *.so, always reload *.C and *.C+. (2.a) only reload *.so when changed, never reload *.C and *.C+. (2.b) only reload *.so when changed only reload *.C and *.C+ when changed. (2.c) only reload *.so when changed always reload *.C only reload *.C+ when changed . (2.d) only reload *.so when changed, always reload *.C and *.C+. (3.a) always reload *.so, never reload *.C and *.C+. (3.b) always reload *.so only reload *.C and *.C+ when changed. (3.c) always reload *.so always reload *.C only reload *.C+ when changed . (3.d) always reload *.so, always reload *.C and *.C+ (current behavior if I understood correctly). Note: CompileMacro was implemented with the ""only reload *.C+ when changed in mind). (2.b) has the minimal amount of unloading but consequently has an 'unpredictable' number of static initialization. So (1.b) might be a better alternative if we assume that user macro are unlikely to have static initialization that matter/must-be-exact (and if it does then the user can use explicit .U I guess). Because "".L *.so"" might be used to load 'global' (for example Athena's or CMSSW's) libraries, I find (3.*) too harsh.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:36,usability,progress,progress,36,"Converted to draft because ""work in progress"" label will be discarded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:9,availability,ping,ping,9,"@pcanal, ping.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5428:11,deployability,build,build,11,@phsft-bot build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5428
https://github.com/root-project/root/pull/5428:11,deployability,build,build,11,@phsft-bot build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5428
https://github.com/root-project/root/pull/5428:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5428
https://github.com/root-project/root/pull/5428:11,deployability,build,build,11,@phsft-bot build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5428
https://github.com/root-project/root/pull/5430:12,usability,close,closed,12,Can this be closed now? It should have been superseded by #6277,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5430
https://github.com/root-project/root/pull/5430:95,safety,test,test,95,> Can this be closed now? It should have been superseded by #6277. I'll check that we have the test coverage and whether this works.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5430
https://github.com/root-project/root/pull/5430:95,testability,test,test,95,> Can this be closed now? It should have been superseded by #6277. I'll check that we have the test coverage and whether this works.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5430
https://github.com/root-project/root/pull/5430:100,testability,coverag,coverage,100,> Can this be closed now? It should have been superseded by #6277. I'll check that we have the test coverage and whether this works.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5430
https://github.com/root-project/root/pull/5430:14,usability,close,closed,14,> Can this be closed now? It should have been superseded by #6277. I'll check that we have the test coverage and whether this works.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5430
https://github.com/root-project/root/pull/5430:32,safety,test,test,32,Works! I've added an additional test in this PR: https://github.com/root-project/roottest/pull/605,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5430
https://github.com/root-project/root/pull/5430:32,testability,test,test,32,Works! I've added an additional test in this PR: https://github.com/root-project/roottest/pull/605,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5430
https://github.com/root-project/root/pull/5432:11,deployability,build,build,11,@phsft-bot build only on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5432
https://github.com/root-project/root/pull/5436:11,deployability,build,build,11,@phsft-bot build just on mac1015/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5436
https://github.com/root-project/root/pull/5438:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5438
https://github.com/root-project/root/pull/5439:83,deployability,depend,dependency,83,"Lorenzo wanted to move all MathMore stuff into RooFitMore. Did you try to add this dependency only to RooFitMore? If that's not enough, there stuff needs to be moved to RooFitMore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:83,integrability,depend,dependency,83,"Lorenzo wanted to move all MathMore stuff into RooFitMore. Did you try to add this dependency only to RooFitMore? If that's not enough, there stuff needs to be moved to RooFitMore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:83,modifiability,depend,dependency,83,"Lorenzo wanted to move all MathMore stuff into RooFitMore. Did you try to add this dependency only to RooFitMore? If that's not enough, there stuff needs to be moved to RooFitMore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:83,safety,depend,dependency,83,"Lorenzo wanted to move all MathMore stuff into RooFitMore. Did you try to add this dependency only to RooFitMore? If that's not enough, there stuff needs to be moved to RooFitMore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:83,testability,depend,dependency,83,"Lorenzo wanted to move all MathMore stuff into RooFitMore. Did you try to add this dependency only to RooFitMore? If that's not enough, there stuff needs to be moved to RooFitMore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:134,deployability,fail,fail,134,Currently roofit indirectly uses includes from MathMore. I really trying to remove `$ROOTSYS/include` from all include paths and then fail to compile `roofit`. When Lorenzo will be ready with such changes?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:0,energy efficiency,Current,Currently,0,Currently roofit indirectly uses includes from MathMore. I really trying to remove `$ROOTSYS/include` from all include paths and then fail to compile `roofit`. When Lorenzo will be ready with such changes?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:134,reliability,fail,fail,134,Currently roofit indirectly uses includes from MathMore. I really trying to remove `$ROOTSYS/include` from all include paths and then fail to compile `roofit`. When Lorenzo will be ready with such changes?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:39,deployability,depend,dependency,39,I propose to merge now and revert once dependency is vanishes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:39,integrability,depend,dependency,39,I propose to merge now and revert once dependency is vanishes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:39,modifiability,depend,dependency,39,I propose to merge now and revert once dependency is vanishes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:39,safety,depend,dependency,39,I propose to merge now and revert once dependency is vanishes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:39,testability,depend,dependency,39,I propose to merge now and revert once dependency is vanishes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:55,deployability,build,build,55,"@hageboeck Without this PR I cannot solve `cxxmodules` build problem. I already have a solution, but it will brake ROOT build because of this missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:120,deployability,build,build,120,"@hageboeck Without this PR I cannot solve `cxxmodules` build problem. I already have a solution, but it will brake ROOT build because of this missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:150,deployability,depend,dependency,150,"@hageboeck Without this PR I cannot solve `cxxmodules` build problem. I already have a solution, but it will brake ROOT build because of this missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:150,integrability,depend,dependency,150,"@hageboeck Without this PR I cannot solve `cxxmodules` build problem. I already have a solution, but it will brake ROOT build because of this missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:150,modifiability,depend,dependency,150,"@hageboeck Without this PR I cannot solve `cxxmodules` build problem. I already have a solution, but it will brake ROOT build because of this missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:150,safety,depend,dependency,150,"@hageboeck Without this PR I cannot solve `cxxmodules` build problem. I already have a solution, but it will brake ROOT build because of this missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:150,testability,depend,dependency,150,"@hageboeck Without this PR I cannot solve `cxxmodules` build problem. I already have a solution, but it will brake ROOT build because of this missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:22,deployability,depend,dependency,22,"I understand, but the dependency must vanish before the next release if I understood Axel and Lorenzo correctly. @Axel-Naumann @lmoneta ? So I'm not sure if we introduce it now, it might end up in the next release. How do we make sure that this is taken care of?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:61,deployability,releas,release,61,"I understand, but the dependency must vanish before the next release if I understood Axel and Lorenzo correctly. @Axel-Naumann @lmoneta ? So I'm not sure if we introduce it now, it might end up in the next release. How do we make sure that this is taken care of?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:206,deployability,releas,release,206,"I understand, but the dependency must vanish before the next release if I understood Axel and Lorenzo correctly. @Axel-Naumann @lmoneta ? So I'm not sure if we introduce it now, it might end up in the next release. How do we make sure that this is taken care of?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:22,integrability,depend,dependency,22,"I understand, but the dependency must vanish before the next release if I understood Axel and Lorenzo correctly. @Axel-Naumann @lmoneta ? So I'm not sure if we introduce it now, it might end up in the next release. How do we make sure that this is taken care of?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:22,modifiability,depend,dependency,22,"I understand, but the dependency must vanish before the next release if I understood Axel and Lorenzo correctly. @Axel-Naumann @lmoneta ? So I'm not sure if we introduce it now, it might end up in the next release. How do we make sure that this is taken care of?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:22,safety,depend,dependency,22,"I understand, but the dependency must vanish before the next release if I understood Axel and Lorenzo correctly. @Axel-Naumann @lmoneta ? So I'm not sure if we introduce it now, it might end up in the next release. How do we make sure that this is taken care of?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:2,testability,understand,understand,2,"I understand, but the dependency must vanish before the next release if I understood Axel and Lorenzo correctly. @Axel-Naumann @lmoneta ? So I'm not sure if we introduce it now, it might end up in the next release. How do we make sure that this is taken care of?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:22,testability,depend,dependency,22,"I understand, but the dependency must vanish before the next release if I understood Axel and Lorenzo correctly. @Axel-Naumann @lmoneta ? So I'm not sure if we introduce it now, it might end up in the next release. How do we make sure that this is taken care of?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:38,deployability,build,build,38,"(for context about broken ""cxxmodule"" build http://cdash.cern.ch/viewBuildError.php?buildid=859431)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:84,deployability,build,buildid,84,"(for context about broken ""cxxmodule"" build http://cdash.cern.ch/viewBuildError.php?buildid=859431)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:5,testability,context,context,5,"(for context about broken ""cxxmodule"" build http://cdash.cern.ch/viewBuildError.php?buildid=859431)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:62,deployability,depend,dependency,62,@hageboeck I am confused. Could you clarify how that optional dependency to mathmore is a blocker for another PR in future removing it altogether?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:62,integrability,depend,dependency,62,@hageboeck I am confused. Could you clarify how that optional dependency to mathmore is a blocker for another PR in future removing it altogether?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:62,modifiability,depend,dependency,62,@hageboeck I am confused. Could you clarify how that optional dependency to mathmore is a blocker for another PR in future removing it altogether?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:62,safety,depend,dependency,62,@hageboeck I am confused. Could you clarify how that optional dependency to mathmore is a blocker for another PR in future removing it altogether?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:62,testability,depend,dependency,62,@hageboeck I am confused. Could you clarify how that optional dependency to mathmore is a blocker for another PR in future removing it altogether?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:57,deployability,depend,depend,57,"If I understood Axel correctly, RooFit is not allowed to depend on mathmore. So if there's a dependency, it's a blocker for the next release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:93,deployability,depend,dependency,93,"If I understood Axel correctly, RooFit is not allowed to depend on mathmore. So if there's a dependency, it's a blocker for the next release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:133,deployability,releas,release,133,"If I understood Axel correctly, RooFit is not allowed to depend on mathmore. So if there's a dependency, it's a blocker for the next release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:57,integrability,depend,depend,57,"If I understood Axel correctly, RooFit is not allowed to depend on mathmore. So if there's a dependency, it's a blocker for the next release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:93,integrability,depend,dependency,93,"If I understood Axel correctly, RooFit is not allowed to depend on mathmore. So if there's a dependency, it's a blocker for the next release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:57,modifiability,depend,depend,57,"If I understood Axel correctly, RooFit is not allowed to depend on mathmore. So if there's a dependency, it's a blocker for the next release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:93,modifiability,depend,dependency,93,"If I understood Axel correctly, RooFit is not allowed to depend on mathmore. So if there's a dependency, it's a blocker for the next release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:57,safety,depend,depend,57,"If I understood Axel correctly, RooFit is not allowed to depend on mathmore. So if there's a dependency, it's a blocker for the next release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:93,safety,depend,dependency,93,"If I understood Axel correctly, RooFit is not allowed to depend on mathmore. So if there's a dependency, it's a blocker for the next release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:57,testability,depend,depend,57,"If I understood Axel correctly, RooFit is not allowed to depend on mathmore. So if there's a dependency, it's a blocker for the next release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:93,testability,depend,dependency,93,"If I understood Axel correctly, RooFit is not allowed to depend on mathmore. So if there's a dependency, it's a blocker for the next release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:28,deployability,depend,dependency,28,"We do have an actual header dependency, that PR just makes it more obvious, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:28,integrability,depend,dependency,28,"We do have an actual header dependency, that PR just makes it more obvious, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:28,modifiability,depend,dependency,28,"We do have an actual header dependency, that PR just makes it more obvious, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:28,safety,depend,dependency,28,"We do have an actual header dependency, that PR just makes it more obvious, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:28,testability,depend,dependency,28,"We do have an actual header dependency, that PR just makes it more obvious, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5440:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5440
https://github.com/root-project/root/pull/5440:4,availability,failur,failure,4,"the failure on osx was ""Problems when submitting via HTTP"" to cdash.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5440
https://github.com/root-project/root/pull/5440:4,deployability,fail,failure,4,"the failure on osx was ""Problems when submitting via HTTP"" to cdash.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5440
https://github.com/root-project/root/pull/5440:38,integrability,sub,submitting,38,"the failure on osx was ""Problems when submitting via HTTP"" to cdash.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5440
https://github.com/root-project/root/pull/5440:4,performance,failur,failure,4,"the failure on osx was ""Problems when submitting via HTTP"" to cdash.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5440
https://github.com/root-project/root/pull/5440:4,reliability,fail,failure,4,"the failure on osx was ""Problems when submitting via HTTP"" to cdash.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5440
https://github.com/root-project/root/pull/5441:89,deployability,updat,update,89,Thank you very much Anirudth for your review. I have included your suggested fixed in an update of the last commit. Cheers,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:38,safety,review,review,38,Thank you very much Anirudth for your review. I have included your suggested fixed in an update of the last commit. Cheers,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:89,safety,updat,update,89,Thank you very much Anirudth for your review. I have included your suggested fixed in an update of the last commit. Cheers,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:89,security,updat,update,89,Thank you very much Anirudth for your review. I have included your suggested fixed in an update of the last commit. Cheers,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:38,testability,review,review,38,Thank you very much Anirudth for your review. I have included your suggested fixed in an update of the last commit. Cheers,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5443:29,availability,failur,failures,29,"@Axel-Naumann, weren't these failures in the master and then fixed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:29,deployability,fail,failures,29,"@Axel-Naumann, weren't these failures in the master and then fixed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:29,performance,failur,failures,29,"@Axel-Naumann, weren't these failures in the master and then fixed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:29,reliability,fail,failures,29,"@Axel-Naumann, weren't these failures in the master and then fixed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:48,availability,failur,failures,48,Should we proceed with this PR and then fix the failures as we will have a reproducer?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:48,deployability,fail,failures,48,Should we proceed with this PR and then fix the failures as we will have a reproducer?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:48,performance,failur,failures,48,Should we proceed with this PR and then fix the failures as we will have a reproducer?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:48,reliability,fail,failures,48,Should we proceed with this PR and then fix the failures as we will have a reproducer?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:11,deployability,build,build,11,@phsft-bot build just on ROOT-fedora30/cxx14 with flags -DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug. I fail to reproduce this issue locally. Let's try to debug it at the bot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:108,deployability,fail,fail,108,@phsft-bot build just on ROOT-fedora30/cxx14 with flags -DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug. I fail to reproduce this issue locally. Let's try to debug it at the bot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:108,reliability,fail,fail,108,@phsft-bot build just on ROOT-fedora30/cxx14 with flags -DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug. I fail to reproduce this issue locally. Let's try to debug it at the bot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:11,deployability,build,build,11,@phsft-bot build just on ROOT-fedora30/cxx14 with flags -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_BUILD_TYPE=RelWithDebInfo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:318,deployability,build,build,318,"```cpp. cat repro.C . #include <vector>. template <typename T>. struct Template {. Template() {}. private:. T m[12];. };. struct S {. std::vector<Template<float> > use;. };. template class Template<std::vector<float> >;. void repro() {}. ```. This reproduces the problem. It is seen only on `ROOT-fedora30/cxx14` with build config:. ```. cmake -DCMAKE_BUILD_TYPE=""RelWithDebInfo"" -DCMAKE_CXX_FLAGS=""-UNDEBUG"" -DCMAKE_CXX_STANDARD=""14"" -DCMAKE_INSTALL_PREFIX=""../install"" -DLLVM_BUILD_TYPE=""RelWithDebInfo"" -Dalien=""Off"" -Darrow=""Off"" -Dasimage=""On"" -Dbuiltin_afterimage=""On"" -Dbuiltin_cfitsio=""Off"" -Dbuiltin_davix=""On"" -Dbuiltin_fftw3=""Off"" -Dbuiltin_freetype=""Off"" -Dbuiltin_ftgl=""On"" -Dbuiltin_gl2ps=""On"" -Dbuiltin_glew=""On"" -Dbuiltin_gsl=""Off"" -Dbuiltin_lz4=""On"" -Dbuiltin_lzma=""On"" -Dbuiltin_openssl=""Off"" -Dbuiltin_pcre=""On"" -Dbuiltin_tbb=""On"" -Dbuiltin_unuran=""On"" -Dbuiltin_vc=""On"" -Dbuiltin_vdt=""On"" -Dbuiltin_veccore=""On"" -Dbuiltin_xrootd=""On"" -Dbuiltin_xxhash=""On"" -Dbuiltin_zlib=""On"" -Dbuiltin_zstd=""Off"" -Dccache=""ON"" -Dcefweb=""Off"" -Dclad=""On"" -Dcocoa=""Off"" -Dcuda=""Off"" -Dcudnn=""Off"" -Ddataframe=""On"" -Ddavix=""On"" -Ddcache=""Off"" -Ddev=""Off"" -Dfail-on-missing=""On"" -Dfcgi=""Off"" -Dfftw3=""On"" -Dfitsio=""On"" -Dfortran=""On"" -Dgdml=""On"" -Dgfal=""Off"" -Dgsl_shared=""Off"" -Dgviz=""Off"" -Dhttp=""On"" -Dimt=""On"" -Dlibcxx=""Off"" -Dmathmore=""On"" -Dmemstat=""Off"" -Dminuit2=""On"" -Dmlp=""On"" -Dmonalisa=""Off"" -Dmpi=""Off"" -Dmysql=""On"" -Dodbc=""Off"" -Dopengl=""On"" -Doracle=""Off"" -Dpgsql=""On"" -Dpyroot=""On"" -Dpythia6=""Off"" -Dpythia6_nolink=""Off"" -Dpythia8=""On"" -Dqt5web=""Off"" -Dr=""Off"" -Droofit=""On"" -Droottest=""ON"" -Dshadowpw=""On"" -Dsoversion=""On"" -Dspectrum=""On"" -Dsqlite=""On"" -Dssl=""On"" -Dtesting=""ON"" -Dtmva=""On"" -Dtmva-cpu=""On"" -Dtmva-gpu=""Off"" -Dtmva-pymva=""On"" -Dtmva-rmva=""Off"" -Dunuran=""On"" -Dvc=""On"" -Dvdt=""On"" -Dveccore=""On"" -Dvecgeom=""Off"" -Dvmc=""On"" -Dwin_broken_tests=""Off"" -Dx11=""On"" -Dxml=""On"" -Dxrootd=""On"" ../root -G Ninjacmake -DCMAKE_BUILD_TYPE=""RelWithDebInfo"" -DCMAKE_CXX_FLAGS=""-UNDEBUG",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:462,deployability,instal,install,462,"```cpp. cat repro.C . #include <vector>. template <typename T>. struct Template {. Template() {}. private:. T m[12];. };. struct S {. std::vector<Template<float> > use;. };. template class Template<std::vector<float> >;. void repro() {}. ```. This reproduces the problem. It is seen only on `ROOT-fedora30/cxx14` with build config:. ```. cmake -DCMAKE_BUILD_TYPE=""RelWithDebInfo"" -DCMAKE_CXX_FLAGS=""-UNDEBUG"" -DCMAKE_CXX_STANDARD=""14"" -DCMAKE_INSTALL_PREFIX=""../install"" -DLLVM_BUILD_TYPE=""RelWithDebInfo"" -Dalien=""Off"" -Darrow=""Off"" -Dasimage=""On"" -Dbuiltin_afterimage=""On"" -Dbuiltin_cfitsio=""Off"" -Dbuiltin_davix=""On"" -Dbuiltin_fftw3=""Off"" -Dbuiltin_freetype=""Off"" -Dbuiltin_ftgl=""On"" -Dbuiltin_gl2ps=""On"" -Dbuiltin_glew=""On"" -Dbuiltin_gsl=""Off"" -Dbuiltin_lz4=""On"" -Dbuiltin_lzma=""On"" -Dbuiltin_openssl=""Off"" -Dbuiltin_pcre=""On"" -Dbuiltin_tbb=""On"" -Dbuiltin_unuran=""On"" -Dbuiltin_vc=""On"" -Dbuiltin_vdt=""On"" -Dbuiltin_veccore=""On"" -Dbuiltin_xrootd=""On"" -Dbuiltin_xxhash=""On"" -Dbuiltin_zlib=""On"" -Dbuiltin_zstd=""Off"" -Dccache=""ON"" -Dcefweb=""Off"" -Dclad=""On"" -Dcocoa=""Off"" -Dcuda=""Off"" -Dcudnn=""Off"" -Ddataframe=""On"" -Ddavix=""On"" -Ddcache=""Off"" -Ddev=""Off"" -Dfail-on-missing=""On"" -Dfcgi=""Off"" -Dfftw3=""On"" -Dfitsio=""On"" -Dfortran=""On"" -Dgdml=""On"" -Dgfal=""Off"" -Dgsl_shared=""Off"" -Dgviz=""Off"" -Dhttp=""On"" -Dimt=""On"" -Dlibcxx=""Off"" -Dmathmore=""On"" -Dmemstat=""Off"" -Dminuit2=""On"" -Dmlp=""On"" -Dmonalisa=""Off"" -Dmpi=""Off"" -Dmysql=""On"" -Dodbc=""Off"" -Dopengl=""On"" -Doracle=""Off"" -Dpgsql=""On"" -Dpyroot=""On"" -Dpythia6=""Off"" -Dpythia6_nolink=""Off"" -Dpythia8=""On"" -Dqt5web=""Off"" -Dr=""Off"" -Droofit=""On"" -Droottest=""ON"" -Dshadowpw=""On"" -Dsoversion=""On"" -Dspectrum=""On"" -Dsqlite=""On"" -Dssl=""On"" -Dtesting=""ON"" -Dtmva=""On"" -Dtmva-cpu=""On"" -Dtmva-gpu=""Off"" -Dtmva-pymva=""On"" -Dtmva-rmva=""Off"" -Dunuran=""On"" -Dvc=""On"" -Dvdt=""On"" -Dveccore=""On"" -Dvecgeom=""Off"" -Dvmc=""On"" -Dwin_broken_tests=""Off"" -Dx11=""On"" -Dxml=""On"" -Dxrootd=""On"" ../root -G Ninjacmake -DCMAKE_BUILD_TYPE=""RelWithDebInfo"" -DCMAKE_CXX_FLAGS=""-UNDEBUG",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:2055,deployability,instal,install,2055,"Dcocoa=""Off"" -Dcuda=""Off"" -Dcudnn=""Off"" -Ddataframe=""On"" -Ddavix=""On"" -Ddcache=""Off"" -Ddev=""Off"" -Dfail-on-missing=""On"" -Dfcgi=""Off"" -Dfftw3=""On"" -Dfitsio=""On"" -Dfortran=""On"" -Dgdml=""On"" -Dgfal=""Off"" -Dgsl_shared=""Off"" -Dgviz=""Off"" -Dhttp=""On"" -Dimt=""On"" -Dlibcxx=""Off"" -Dmathmore=""On"" -Dmemstat=""Off"" -Dminuit2=""On"" -Dmlp=""On"" -Dmonalisa=""Off"" -Dmpi=""Off"" -Dmysql=""On"" -Dodbc=""Off"" -Dopengl=""On"" -Doracle=""Off"" -Dpgsql=""On"" -Dpyroot=""On"" -Dpythia6=""Off"" -Dpythia6_nolink=""Off"" -Dpythia8=""On"" -Dqt5web=""Off"" -Dr=""Off"" -Droofit=""On"" -Droottest=""ON"" -Dshadowpw=""On"" -Dsoversion=""On"" -Dspectrum=""On"" -Dsqlite=""On"" -Dssl=""On"" -Dtesting=""ON"" -Dtmva=""On"" -Dtmva-cpu=""On"" -Dtmva-gpu=""Off"" -Dtmva-pymva=""On"" -Dtmva-rmva=""Off"" -Dunuran=""On"" -Dvc=""On"" -Dvdt=""On"" -Dveccore=""On"" -Dvecgeom=""Off"" -Dvmc=""On"" -Dwin_broken_tests=""Off"" -Dx11=""On"" -Dxml=""On"" -Dxrootd=""On"" ../root -G Ninjacmake -DCMAKE_BUILD_TYPE=""RelWithDebInfo"" -DCMAKE_CXX_FLAGS=""-UNDEBUG"" -DCMAKE_CXX_STANDARD=""14"" -DCMAKE_INSTALL_PREFIX=""../install"" -DLLVM_BUILD_TYPE=""RelWithDebInfo"" -Dalien=""Off"" -Darrow=""Off"" -Dasimage=""On"" -Dbuiltin_afterimage=""On"" -Dbuiltin_cfitsio=""Off"" -Dbuiltin_davix=""On"" -Dbuiltin_fftw3=""Off"" -Dbuiltin_freetype=""Off"" -Dbuiltin_ftgl=""On"" -Dbuiltin_gl2ps=""On"" -Dbuiltin_glew=""On"" -Dbuiltin_gsl=""Off"" -Dbuiltin_lz4=""On"" -Dbuiltin_lzma=""On"" -Dbuiltin_openssl=""Off"" -Dbuiltin_pcre=""On"" -Dbuiltin_tbb=""On"" -Dbuiltin_unuran=""On"" -Dbuiltin_vc=""On"" -Dbuiltin_vdt=""On"" -Dbuiltin_veccore=""On"" -Dbuiltin_xrootd=""On"" -Dbuiltin_xxhash=""On"" -Dbuiltin_zlib=""On"" -Dbuiltin_zstd=""Off"" -Dccache=""ON"" -Dcefweb=""Off"" -Dclad=""On"" -Dcocoa=""Off"" -Dcuda=""Off"" -Dcudnn=""Off"" -Ddataframe=""On"" -Ddavix=""On"" -Ddcache=""Off"" -Ddev=""Off"" -Dfail-on-missing=""On"" -Dfcgi=""Off"" -Dfftw3=""On"" -Dfitsio=""On"" -Dfortran=""On"" -Dgdml=""On"" -Dgfal=""Off"" -Dgsl_shared=""Off"" -Dgviz=""Off"" -Dhttp=""On"" -Dimt=""On"" -Dlibcxx=""Off"" -Dmathmore=""On"" -Dmemstat=""Off"" -Dminuit2=""On"" -Dmlp=""On"" -Dmonalisa=""Off"" -Dmpi=""Off"" -Dmysql=""On"" -Dodbc=""Off"" -Dopengl=""On"" -Doracle=""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:1715,energy efficiency,cpu,cpu,1715,"_glew=""On"" -Dbuiltin_gsl=""Off"" -Dbuiltin_lz4=""On"" -Dbuiltin_lzma=""On"" -Dbuiltin_openssl=""Off"" -Dbuiltin_pcre=""On"" -Dbuiltin_tbb=""On"" -Dbuiltin_unuran=""On"" -Dbuiltin_vc=""On"" -Dbuiltin_vdt=""On"" -Dbuiltin_veccore=""On"" -Dbuiltin_xrootd=""On"" -Dbuiltin_xxhash=""On"" -Dbuiltin_zlib=""On"" -Dbuiltin_zstd=""Off"" -Dccache=""ON"" -Dcefweb=""Off"" -Dclad=""On"" -Dcocoa=""Off"" -Dcuda=""Off"" -Dcudnn=""Off"" -Ddataframe=""On"" -Ddavix=""On"" -Ddcache=""Off"" -Ddev=""Off"" -Dfail-on-missing=""On"" -Dfcgi=""Off"" -Dfftw3=""On"" -Dfitsio=""On"" -Dfortran=""On"" -Dgdml=""On"" -Dgfal=""Off"" -Dgsl_shared=""Off"" -Dgviz=""Off"" -Dhttp=""On"" -Dimt=""On"" -Dlibcxx=""Off"" -Dmathmore=""On"" -Dmemstat=""Off"" -Dminuit2=""On"" -Dmlp=""On"" -Dmonalisa=""Off"" -Dmpi=""Off"" -Dmysql=""On"" -Dodbc=""Off"" -Dopengl=""On"" -Doracle=""Off"" -Dpgsql=""On"" -Dpyroot=""On"" -Dpythia6=""Off"" -Dpythia6_nolink=""Off"" -Dpythia8=""On"" -Dqt5web=""Off"" -Dr=""Off"" -Droofit=""On"" -Droottest=""ON"" -Dshadowpw=""On"" -Dsoversion=""On"" -Dspectrum=""On"" -Dsqlite=""On"" -Dssl=""On"" -Dtesting=""ON"" -Dtmva=""On"" -Dtmva-cpu=""On"" -Dtmva-gpu=""Off"" -Dtmva-pymva=""On"" -Dtmva-rmva=""Off"" -Dunuran=""On"" -Dvc=""On"" -Dvdt=""On"" -Dveccore=""On"" -Dvecgeom=""Off"" -Dvmc=""On"" -Dwin_broken_tests=""Off"" -Dx11=""On"" -Dxml=""On"" -Dxrootd=""On"" ../root -G Ninjacmake -DCMAKE_BUILD_TYPE=""RelWithDebInfo"" -DCMAKE_CXX_FLAGS=""-UNDEBUG"" -DCMAKE_CXX_STANDARD=""14"" -DCMAKE_INSTALL_PREFIX=""../install"" -DLLVM_BUILD_TYPE=""RelWithDebInfo"" -Dalien=""Off"" -Darrow=""Off"" -Dasimage=""On"" -Dbuiltin_afterimage=""On"" -Dbuiltin_cfitsio=""Off"" -Dbuiltin_davix=""On"" -Dbuiltin_fftw3=""Off"" -Dbuiltin_freetype=""Off"" -Dbuiltin_ftgl=""On"" -Dbuiltin_gl2ps=""On"" -Dbuiltin_glew=""On"" -Dbuiltin_gsl=""Off"" -Dbuiltin_lz4=""On"" -Dbuiltin_lzma=""On"" -Dbuiltin_openssl=""Off"" -Dbuiltin_pcre=""On"" -Dbuiltin_tbb=""On"" -Dbuiltin_unuran=""On"" -Dbuiltin_vc=""On"" -Dbuiltin_vdt=""On"" -Dbuiltin_veccore=""On"" -Dbuiltin_xrootd=""On"" -Dbuiltin_xxhash=""On"" -Dbuiltin_zlib=""On"" -Dbuiltin_zstd=""Off"" -Dccache=""ON"" -Dcefweb=""Off"" -Dclad=""On"" -Dcocoa=""Off"" -Dcuda=""Off"" -Dcudnn=""Off"" -Ddataframe=""On"" -Ddavix=",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:1731,energy efficiency,gpu,gpu,1731,"ltin_gsl=""Off"" -Dbuiltin_lz4=""On"" -Dbuiltin_lzma=""On"" -Dbuiltin_openssl=""Off"" -Dbuiltin_pcre=""On"" -Dbuiltin_tbb=""On"" -Dbuiltin_unuran=""On"" -Dbuiltin_vc=""On"" -Dbuiltin_vdt=""On"" -Dbuiltin_veccore=""On"" -Dbuiltin_xrootd=""On"" -Dbuiltin_xxhash=""On"" -Dbuiltin_zlib=""On"" -Dbuiltin_zstd=""Off"" -Dccache=""ON"" -Dcefweb=""Off"" -Dclad=""On"" -Dcocoa=""Off"" -Dcuda=""Off"" -Dcudnn=""Off"" -Ddataframe=""On"" -Ddavix=""On"" -Ddcache=""Off"" -Ddev=""Off"" -Dfail-on-missing=""On"" -Dfcgi=""Off"" -Dfftw3=""On"" -Dfitsio=""On"" -Dfortran=""On"" -Dgdml=""On"" -Dgfal=""Off"" -Dgsl_shared=""Off"" -Dgviz=""Off"" -Dhttp=""On"" -Dimt=""On"" -Dlibcxx=""Off"" -Dmathmore=""On"" -Dmemstat=""Off"" -Dminuit2=""On"" -Dmlp=""On"" -Dmonalisa=""Off"" -Dmpi=""Off"" -Dmysql=""On"" -Dodbc=""Off"" -Dopengl=""On"" -Doracle=""Off"" -Dpgsql=""On"" -Dpyroot=""On"" -Dpythia6=""Off"" -Dpythia6_nolink=""Off"" -Dpythia8=""On"" -Dqt5web=""Off"" -Dr=""Off"" -Droofit=""On"" -Droottest=""ON"" -Dshadowpw=""On"" -Dsoversion=""On"" -Dspectrum=""On"" -Dsqlite=""On"" -Dssl=""On"" -Dtesting=""ON"" -Dtmva=""On"" -Dtmva-cpu=""On"" -Dtmva-gpu=""Off"" -Dtmva-pymva=""On"" -Dtmva-rmva=""Off"" -Dunuran=""On"" -Dvc=""On"" -Dvdt=""On"" -Dveccore=""On"" -Dvecgeom=""Off"" -Dvmc=""On"" -Dwin_broken_tests=""Off"" -Dx11=""On"" -Dxml=""On"" -Dxrootd=""On"" ../root -G Ninjacmake -DCMAKE_BUILD_TYPE=""RelWithDebInfo"" -DCMAKE_CXX_FLAGS=""-UNDEBUG"" -DCMAKE_CXX_STANDARD=""14"" -DCMAKE_INSTALL_PREFIX=""../install"" -DLLVM_BUILD_TYPE=""RelWithDebInfo"" -Dalien=""Off"" -Darrow=""Off"" -Dasimage=""On"" -Dbuiltin_afterimage=""On"" -Dbuiltin_cfitsio=""Off"" -Dbuiltin_davix=""On"" -Dbuiltin_fftw3=""Off"" -Dbuiltin_freetype=""Off"" -Dbuiltin_ftgl=""On"" -Dbuiltin_gl2ps=""On"" -Dbuiltin_glew=""On"" -Dbuiltin_gsl=""Off"" -Dbuiltin_lz4=""On"" -Dbuiltin_lzma=""On"" -Dbuiltin_openssl=""Off"" -Dbuiltin_pcre=""On"" -Dbuiltin_tbb=""On"" -Dbuiltin_unuran=""On"" -Dbuiltin_vc=""On"" -Dbuiltin_vdt=""On"" -Dbuiltin_veccore=""On"" -Dbuiltin_xrootd=""On"" -Dbuiltin_xxhash=""On"" -Dbuiltin_zlib=""On"" -Dbuiltin_zstd=""Off"" -Dccache=""ON"" -Dcefweb=""Off"" -Dclad=""On"" -Dcocoa=""Off"" -Dcuda=""Off"" -Dcudnn=""Off"" -Ddataframe=""On"" -Ddavix=""On"" -Ddcache=""O",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:3308,energy efficiency,cpu,cpu,3308,"k=""Off"" -Dpythia8=""On"" -Dqt5web=""Off"" -Dr=""Off"" -Droofit=""On"" -Droottest=""ON"" -Dshadowpw=""On"" -Dsoversion=""On"" -Dspectrum=""On"" -Dsqlite=""On"" -Dssl=""On"" -Dtesting=""ON"" -Dtmva=""On"" -Dtmva-cpu=""On"" -Dtmva-gpu=""Off"" -Dtmva-pymva=""On"" -Dtmva-rmva=""Off"" -Dunuran=""On"" -Dvc=""On"" -Dvdt=""On"" -Dveccore=""On"" -Dvecgeom=""Off"" -Dvmc=""On"" -Dwin_broken_tests=""Off"" -Dx11=""On"" -Dxml=""On"" -Dxrootd=""On"" ../root -G Ninjacmake -DCMAKE_BUILD_TYPE=""RelWithDebInfo"" -DCMAKE_CXX_FLAGS=""-UNDEBUG"" -DCMAKE_CXX_STANDARD=""14"" -DCMAKE_INSTALL_PREFIX=""../install"" -DLLVM_BUILD_TYPE=""RelWithDebInfo"" -Dalien=""Off"" -Darrow=""Off"" -Dasimage=""On"" -Dbuiltin_afterimage=""On"" -Dbuiltin_cfitsio=""Off"" -Dbuiltin_davix=""On"" -Dbuiltin_fftw3=""Off"" -Dbuiltin_freetype=""Off"" -Dbuiltin_ftgl=""On"" -Dbuiltin_gl2ps=""On"" -Dbuiltin_glew=""On"" -Dbuiltin_gsl=""Off"" -Dbuiltin_lz4=""On"" -Dbuiltin_lzma=""On"" -Dbuiltin_openssl=""Off"" -Dbuiltin_pcre=""On"" -Dbuiltin_tbb=""On"" -Dbuiltin_unuran=""On"" -Dbuiltin_vc=""On"" -Dbuiltin_vdt=""On"" -Dbuiltin_veccore=""On"" -Dbuiltin_xrootd=""On"" -Dbuiltin_xxhash=""On"" -Dbuiltin_zlib=""On"" -Dbuiltin_zstd=""Off"" -Dccache=""ON"" -Dcefweb=""Off"" -Dclad=""On"" -Dcocoa=""Off"" -Dcuda=""Off"" -Dcudnn=""Off"" -Ddataframe=""On"" -Ddavix=""On"" -Ddcache=""Off"" -Ddev=""Off"" -Dfail-on-missing=""On"" -Dfcgi=""Off"" -Dfftw3=""On"" -Dfitsio=""On"" -Dfortran=""On"" -Dgdml=""On"" -Dgfal=""Off"" -Dgsl_shared=""Off"" -Dgviz=""Off"" -Dhttp=""On"" -Dimt=""On"" -Dlibcxx=""Off"" -Dmathmore=""On"" -Dmemstat=""Off"" -Dminuit2=""On"" -Dmlp=""On"" -Dmonalisa=""Off"" -Dmpi=""Off"" -Dmysql=""On"" -Dodbc=""Off"" -Dopengl=""On"" -Doracle=""Off"" -Dpgsql=""On"" -Dpyroot=""On"" -Dpythia6=""Off"" -Dpythia6_nolink=""Off"" -Dpythia8=""On"" -Dqt5web=""Off"" -Dr=""Off"" -Droofit=""On"" -Droottest=""ON"" -Dshadowpw=""On"" -Dsoversion=""On"" -Dspectrum=""On"" -Dsqlite=""On"" -Dssl=""On"" -Dtesting=""ON"" -Dtmva=""On"" -Dtmva-cpu=""On"" -Dtmva-gpu=""Off"" -Dtmva-pymva=""On"" -Dtmva-rmva=""Off"" -Dunuran=""On"" -Dvc=""On"" -Dvdt=""On"" -Dveccore=""On"" -Dvecgeom=""Off"" -Dvmc=""On"" -Dwin_broken_tests=""Off"" -Dx11=""On"" -Dxml=""On"" -Dxrootd=""On"" ../root -G Ninja. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:3324,energy efficiency,gpu,gpu,3324,"k=""Off"" -Dpythia8=""On"" -Dqt5web=""Off"" -Dr=""Off"" -Droofit=""On"" -Droottest=""ON"" -Dshadowpw=""On"" -Dsoversion=""On"" -Dspectrum=""On"" -Dsqlite=""On"" -Dssl=""On"" -Dtesting=""ON"" -Dtmva=""On"" -Dtmva-cpu=""On"" -Dtmva-gpu=""Off"" -Dtmva-pymva=""On"" -Dtmva-rmva=""Off"" -Dunuran=""On"" -Dvc=""On"" -Dvdt=""On"" -Dveccore=""On"" -Dvecgeom=""Off"" -Dvmc=""On"" -Dwin_broken_tests=""Off"" -Dx11=""On"" -Dxml=""On"" -Dxrootd=""On"" ../root -G Ninjacmake -DCMAKE_BUILD_TYPE=""RelWithDebInfo"" -DCMAKE_CXX_FLAGS=""-UNDEBUG"" -DCMAKE_CXX_STANDARD=""14"" -DCMAKE_INSTALL_PREFIX=""../install"" -DLLVM_BUILD_TYPE=""RelWithDebInfo"" -Dalien=""Off"" -Darrow=""Off"" -Dasimage=""On"" -Dbuiltin_afterimage=""On"" -Dbuiltin_cfitsio=""Off"" -Dbuiltin_davix=""On"" -Dbuiltin_fftw3=""Off"" -Dbuiltin_freetype=""Off"" -Dbuiltin_ftgl=""On"" -Dbuiltin_gl2ps=""On"" -Dbuiltin_glew=""On"" -Dbuiltin_gsl=""Off"" -Dbuiltin_lz4=""On"" -Dbuiltin_lzma=""On"" -Dbuiltin_openssl=""Off"" -Dbuiltin_pcre=""On"" -Dbuiltin_tbb=""On"" -Dbuiltin_unuran=""On"" -Dbuiltin_vc=""On"" -Dbuiltin_vdt=""On"" -Dbuiltin_veccore=""On"" -Dbuiltin_xrootd=""On"" -Dbuiltin_xxhash=""On"" -Dbuiltin_zlib=""On"" -Dbuiltin_zstd=""Off"" -Dccache=""ON"" -Dcefweb=""Off"" -Dclad=""On"" -Dcocoa=""Off"" -Dcuda=""Off"" -Dcudnn=""Off"" -Ddataframe=""On"" -Ddavix=""On"" -Ddcache=""Off"" -Ddev=""Off"" -Dfail-on-missing=""On"" -Dfcgi=""Off"" -Dfftw3=""On"" -Dfitsio=""On"" -Dfortran=""On"" -Dgdml=""On"" -Dgfal=""Off"" -Dgsl_shared=""Off"" -Dgviz=""Off"" -Dhttp=""On"" -Dimt=""On"" -Dlibcxx=""Off"" -Dmathmore=""On"" -Dmemstat=""Off"" -Dminuit2=""On"" -Dmlp=""On"" -Dmonalisa=""Off"" -Dmpi=""Off"" -Dmysql=""On"" -Dodbc=""Off"" -Dopengl=""On"" -Doracle=""Off"" -Dpgsql=""On"" -Dpyroot=""On"" -Dpythia6=""Off"" -Dpythia6_nolink=""Off"" -Dpythia8=""On"" -Dqt5web=""Off"" -Dr=""Off"" -Droofit=""On"" -Droottest=""ON"" -Dshadowpw=""On"" -Dsoversion=""On"" -Dspectrum=""On"" -Dsqlite=""On"" -Dssl=""On"" -Dtesting=""ON"" -Dtmva=""On"" -Dtmva-cpu=""On"" -Dtmva-gpu=""Off"" -Dtmva-pymva=""On"" -Dtmva-rmva=""Off"" -Dunuran=""On"" -Dvc=""On"" -Dvdt=""On"" -Dveccore=""On"" -Dvecgeom=""Off"" -Dvmc=""On"" -Dwin_broken_tests=""Off"" -Dx11=""On"" -Dxml=""On"" -Dxrootd=""On"" ../root -G Ninja. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:1715,performance,cpu,cpu,1715,"_glew=""On"" -Dbuiltin_gsl=""Off"" -Dbuiltin_lz4=""On"" -Dbuiltin_lzma=""On"" -Dbuiltin_openssl=""Off"" -Dbuiltin_pcre=""On"" -Dbuiltin_tbb=""On"" -Dbuiltin_unuran=""On"" -Dbuiltin_vc=""On"" -Dbuiltin_vdt=""On"" -Dbuiltin_veccore=""On"" -Dbuiltin_xrootd=""On"" -Dbuiltin_xxhash=""On"" -Dbuiltin_zlib=""On"" -Dbuiltin_zstd=""Off"" -Dccache=""ON"" -Dcefweb=""Off"" -Dclad=""On"" -Dcocoa=""Off"" -Dcuda=""Off"" -Dcudnn=""Off"" -Ddataframe=""On"" -Ddavix=""On"" -Ddcache=""Off"" -Ddev=""Off"" -Dfail-on-missing=""On"" -Dfcgi=""Off"" -Dfftw3=""On"" -Dfitsio=""On"" -Dfortran=""On"" -Dgdml=""On"" -Dgfal=""Off"" -Dgsl_shared=""Off"" -Dgviz=""Off"" -Dhttp=""On"" -Dimt=""On"" -Dlibcxx=""Off"" -Dmathmore=""On"" -Dmemstat=""Off"" -Dminuit2=""On"" -Dmlp=""On"" -Dmonalisa=""Off"" -Dmpi=""Off"" -Dmysql=""On"" -Dodbc=""Off"" -Dopengl=""On"" -Doracle=""Off"" -Dpgsql=""On"" -Dpyroot=""On"" -Dpythia6=""Off"" -Dpythia6_nolink=""Off"" -Dpythia8=""On"" -Dqt5web=""Off"" -Dr=""Off"" -Droofit=""On"" -Droottest=""ON"" -Dshadowpw=""On"" -Dsoversion=""On"" -Dspectrum=""On"" -Dsqlite=""On"" -Dssl=""On"" -Dtesting=""ON"" -Dtmva=""On"" -Dtmva-cpu=""On"" -Dtmva-gpu=""Off"" -Dtmva-pymva=""On"" -Dtmva-rmva=""Off"" -Dunuran=""On"" -Dvc=""On"" -Dvdt=""On"" -Dveccore=""On"" -Dvecgeom=""Off"" -Dvmc=""On"" -Dwin_broken_tests=""Off"" -Dx11=""On"" -Dxml=""On"" -Dxrootd=""On"" ../root -G Ninjacmake -DCMAKE_BUILD_TYPE=""RelWithDebInfo"" -DCMAKE_CXX_FLAGS=""-UNDEBUG"" -DCMAKE_CXX_STANDARD=""14"" -DCMAKE_INSTALL_PREFIX=""../install"" -DLLVM_BUILD_TYPE=""RelWithDebInfo"" -Dalien=""Off"" -Darrow=""Off"" -Dasimage=""On"" -Dbuiltin_afterimage=""On"" -Dbuiltin_cfitsio=""Off"" -Dbuiltin_davix=""On"" -Dbuiltin_fftw3=""Off"" -Dbuiltin_freetype=""Off"" -Dbuiltin_ftgl=""On"" -Dbuiltin_gl2ps=""On"" -Dbuiltin_glew=""On"" -Dbuiltin_gsl=""Off"" -Dbuiltin_lz4=""On"" -Dbuiltin_lzma=""On"" -Dbuiltin_openssl=""Off"" -Dbuiltin_pcre=""On"" -Dbuiltin_tbb=""On"" -Dbuiltin_unuran=""On"" -Dbuiltin_vc=""On"" -Dbuiltin_vdt=""On"" -Dbuiltin_veccore=""On"" -Dbuiltin_xrootd=""On"" -Dbuiltin_xxhash=""On"" -Dbuiltin_zlib=""On"" -Dbuiltin_zstd=""Off"" -Dccache=""ON"" -Dcefweb=""Off"" -Dclad=""On"" -Dcocoa=""Off"" -Dcuda=""Off"" -Dcudnn=""Off"" -Ddataframe=""On"" -Ddavix=",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:1731,performance,gpu,gpu,1731,"ltin_gsl=""Off"" -Dbuiltin_lz4=""On"" -Dbuiltin_lzma=""On"" -Dbuiltin_openssl=""Off"" -Dbuiltin_pcre=""On"" -Dbuiltin_tbb=""On"" -Dbuiltin_unuran=""On"" -Dbuiltin_vc=""On"" -Dbuiltin_vdt=""On"" -Dbuiltin_veccore=""On"" -Dbuiltin_xrootd=""On"" -Dbuiltin_xxhash=""On"" -Dbuiltin_zlib=""On"" -Dbuiltin_zstd=""Off"" -Dccache=""ON"" -Dcefweb=""Off"" -Dclad=""On"" -Dcocoa=""Off"" -Dcuda=""Off"" -Dcudnn=""Off"" -Ddataframe=""On"" -Ddavix=""On"" -Ddcache=""Off"" -Ddev=""Off"" -Dfail-on-missing=""On"" -Dfcgi=""Off"" -Dfftw3=""On"" -Dfitsio=""On"" -Dfortran=""On"" -Dgdml=""On"" -Dgfal=""Off"" -Dgsl_shared=""Off"" -Dgviz=""Off"" -Dhttp=""On"" -Dimt=""On"" -Dlibcxx=""Off"" -Dmathmore=""On"" -Dmemstat=""Off"" -Dminuit2=""On"" -Dmlp=""On"" -Dmonalisa=""Off"" -Dmpi=""Off"" -Dmysql=""On"" -Dodbc=""Off"" -Dopengl=""On"" -Doracle=""Off"" -Dpgsql=""On"" -Dpyroot=""On"" -Dpythia6=""Off"" -Dpythia6_nolink=""Off"" -Dpythia8=""On"" -Dqt5web=""Off"" -Dr=""Off"" -Droofit=""On"" -Droottest=""ON"" -Dshadowpw=""On"" -Dsoversion=""On"" -Dspectrum=""On"" -Dsqlite=""On"" -Dssl=""On"" -Dtesting=""ON"" -Dtmva=""On"" -Dtmva-cpu=""On"" -Dtmva-gpu=""Off"" -Dtmva-pymva=""On"" -Dtmva-rmva=""Off"" -Dunuran=""On"" -Dvc=""On"" -Dvdt=""On"" -Dveccore=""On"" -Dvecgeom=""Off"" -Dvmc=""On"" -Dwin_broken_tests=""Off"" -Dx11=""On"" -Dxml=""On"" -Dxrootd=""On"" ../root -G Ninjacmake -DCMAKE_BUILD_TYPE=""RelWithDebInfo"" -DCMAKE_CXX_FLAGS=""-UNDEBUG"" -DCMAKE_CXX_STANDARD=""14"" -DCMAKE_INSTALL_PREFIX=""../install"" -DLLVM_BUILD_TYPE=""RelWithDebInfo"" -Dalien=""Off"" -Darrow=""Off"" -Dasimage=""On"" -Dbuiltin_afterimage=""On"" -Dbuiltin_cfitsio=""Off"" -Dbuiltin_davix=""On"" -Dbuiltin_fftw3=""Off"" -Dbuiltin_freetype=""Off"" -Dbuiltin_ftgl=""On"" -Dbuiltin_gl2ps=""On"" -Dbuiltin_glew=""On"" -Dbuiltin_gsl=""Off"" -Dbuiltin_lz4=""On"" -Dbuiltin_lzma=""On"" -Dbuiltin_openssl=""Off"" -Dbuiltin_pcre=""On"" -Dbuiltin_tbb=""On"" -Dbuiltin_unuran=""On"" -Dbuiltin_vc=""On"" -Dbuiltin_vdt=""On"" -Dbuiltin_veccore=""On"" -Dbuiltin_xrootd=""On"" -Dbuiltin_xxhash=""On"" -Dbuiltin_zlib=""On"" -Dbuiltin_zstd=""Off"" -Dccache=""ON"" -Dcefweb=""Off"" -Dclad=""On"" -Dcocoa=""Off"" -Dcuda=""Off"" -Dcudnn=""Off"" -Ddataframe=""On"" -Ddavix=""On"" -Ddcache=""O",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:3308,performance,cpu,cpu,3308,"k=""Off"" -Dpythia8=""On"" -Dqt5web=""Off"" -Dr=""Off"" -Droofit=""On"" -Droottest=""ON"" -Dshadowpw=""On"" -Dsoversion=""On"" -Dspectrum=""On"" -Dsqlite=""On"" -Dssl=""On"" -Dtesting=""ON"" -Dtmva=""On"" -Dtmva-cpu=""On"" -Dtmva-gpu=""Off"" -Dtmva-pymva=""On"" -Dtmva-rmva=""Off"" -Dunuran=""On"" -Dvc=""On"" -Dvdt=""On"" -Dveccore=""On"" -Dvecgeom=""Off"" -Dvmc=""On"" -Dwin_broken_tests=""Off"" -Dx11=""On"" -Dxml=""On"" -Dxrootd=""On"" ../root -G Ninjacmake -DCMAKE_BUILD_TYPE=""RelWithDebInfo"" -DCMAKE_CXX_FLAGS=""-UNDEBUG"" -DCMAKE_CXX_STANDARD=""14"" -DCMAKE_INSTALL_PREFIX=""../install"" -DLLVM_BUILD_TYPE=""RelWithDebInfo"" -Dalien=""Off"" -Darrow=""Off"" -Dasimage=""On"" -Dbuiltin_afterimage=""On"" -Dbuiltin_cfitsio=""Off"" -Dbuiltin_davix=""On"" -Dbuiltin_fftw3=""Off"" -Dbuiltin_freetype=""Off"" -Dbuiltin_ftgl=""On"" -Dbuiltin_gl2ps=""On"" -Dbuiltin_glew=""On"" -Dbuiltin_gsl=""Off"" -Dbuiltin_lz4=""On"" -Dbuiltin_lzma=""On"" -Dbuiltin_openssl=""Off"" -Dbuiltin_pcre=""On"" -Dbuiltin_tbb=""On"" -Dbuiltin_unuran=""On"" -Dbuiltin_vc=""On"" -Dbuiltin_vdt=""On"" -Dbuiltin_veccore=""On"" -Dbuiltin_xrootd=""On"" -Dbuiltin_xxhash=""On"" -Dbuiltin_zlib=""On"" -Dbuiltin_zstd=""Off"" -Dccache=""ON"" -Dcefweb=""Off"" -Dclad=""On"" -Dcocoa=""Off"" -Dcuda=""Off"" -Dcudnn=""Off"" -Ddataframe=""On"" -Ddavix=""On"" -Ddcache=""Off"" -Ddev=""Off"" -Dfail-on-missing=""On"" -Dfcgi=""Off"" -Dfftw3=""On"" -Dfitsio=""On"" -Dfortran=""On"" -Dgdml=""On"" -Dgfal=""Off"" -Dgsl_shared=""Off"" -Dgviz=""Off"" -Dhttp=""On"" -Dimt=""On"" -Dlibcxx=""Off"" -Dmathmore=""On"" -Dmemstat=""Off"" -Dminuit2=""On"" -Dmlp=""On"" -Dmonalisa=""Off"" -Dmpi=""Off"" -Dmysql=""On"" -Dodbc=""Off"" -Dopengl=""On"" -Doracle=""Off"" -Dpgsql=""On"" -Dpyroot=""On"" -Dpythia6=""Off"" -Dpythia6_nolink=""Off"" -Dpythia8=""On"" -Dqt5web=""Off"" -Dr=""Off"" -Droofit=""On"" -Droottest=""ON"" -Dshadowpw=""On"" -Dsoversion=""On"" -Dspectrum=""On"" -Dsqlite=""On"" -Dssl=""On"" -Dtesting=""ON"" -Dtmva=""On"" -Dtmva-cpu=""On"" -Dtmva-gpu=""Off"" -Dtmva-pymva=""On"" -Dtmva-rmva=""Off"" -Dunuran=""On"" -Dvc=""On"" -Dvdt=""On"" -Dveccore=""On"" -Dvecgeom=""Off"" -Dvmc=""On"" -Dwin_broken_tests=""Off"" -Dx11=""On"" -Dxml=""On"" -Dxrootd=""On"" ../root -G Ninja. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:3324,performance,gpu,gpu,3324,"k=""Off"" -Dpythia8=""On"" -Dqt5web=""Off"" -Dr=""Off"" -Droofit=""On"" -Droottest=""ON"" -Dshadowpw=""On"" -Dsoversion=""On"" -Dspectrum=""On"" -Dsqlite=""On"" -Dssl=""On"" -Dtesting=""ON"" -Dtmva=""On"" -Dtmva-cpu=""On"" -Dtmva-gpu=""Off"" -Dtmva-pymva=""On"" -Dtmva-rmva=""Off"" -Dunuran=""On"" -Dvc=""On"" -Dvdt=""On"" -Dveccore=""On"" -Dvecgeom=""Off"" -Dvmc=""On"" -Dwin_broken_tests=""Off"" -Dx11=""On"" -Dxml=""On"" -Dxrootd=""On"" ../root -G Ninjacmake -DCMAKE_BUILD_TYPE=""RelWithDebInfo"" -DCMAKE_CXX_FLAGS=""-UNDEBUG"" -DCMAKE_CXX_STANDARD=""14"" -DCMAKE_INSTALL_PREFIX=""../install"" -DLLVM_BUILD_TYPE=""RelWithDebInfo"" -Dalien=""Off"" -Darrow=""Off"" -Dasimage=""On"" -Dbuiltin_afterimage=""On"" -Dbuiltin_cfitsio=""Off"" -Dbuiltin_davix=""On"" -Dbuiltin_fftw3=""Off"" -Dbuiltin_freetype=""Off"" -Dbuiltin_ftgl=""On"" -Dbuiltin_gl2ps=""On"" -Dbuiltin_glew=""On"" -Dbuiltin_gsl=""Off"" -Dbuiltin_lz4=""On"" -Dbuiltin_lzma=""On"" -Dbuiltin_openssl=""Off"" -Dbuiltin_pcre=""On"" -Dbuiltin_tbb=""On"" -Dbuiltin_unuran=""On"" -Dbuiltin_vc=""On"" -Dbuiltin_vdt=""On"" -Dbuiltin_veccore=""On"" -Dbuiltin_xrootd=""On"" -Dbuiltin_xxhash=""On"" -Dbuiltin_zlib=""On"" -Dbuiltin_zstd=""Off"" -Dccache=""ON"" -Dcefweb=""Off"" -Dclad=""On"" -Dcocoa=""Off"" -Dcuda=""Off"" -Dcudnn=""Off"" -Ddataframe=""On"" -Ddavix=""On"" -Ddcache=""Off"" -Ddev=""Off"" -Dfail-on-missing=""On"" -Dfcgi=""Off"" -Dfftw3=""On"" -Dfitsio=""On"" -Dfortran=""On"" -Dgdml=""On"" -Dgfal=""Off"" -Dgsl_shared=""Off"" -Dgviz=""Off"" -Dhttp=""On"" -Dimt=""On"" -Dlibcxx=""Off"" -Dmathmore=""On"" -Dmemstat=""Off"" -Dminuit2=""On"" -Dmlp=""On"" -Dmonalisa=""Off"" -Dmpi=""Off"" -Dmysql=""On"" -Dodbc=""Off"" -Dopengl=""On"" -Doracle=""Off"" -Dpgsql=""On"" -Dpyroot=""On"" -Dpythia6=""Off"" -Dpythia6_nolink=""Off"" -Dpythia8=""On"" -Dqt5web=""Off"" -Dr=""Off"" -Droofit=""On"" -Droottest=""ON"" -Dshadowpw=""On"" -Dsoversion=""On"" -Dspectrum=""On"" -Dsqlite=""On"" -Dssl=""On"" -Dtesting=""ON"" -Dtmva=""On"" -Dtmva-cpu=""On"" -Dtmva-gpu=""Off"" -Dtmva-pymva=""On"" -Dtmva-rmva=""Off"" -Dunuran=""On"" -Dvc=""On"" -Dvdt=""On"" -Dveccore=""On"" -Dvecgeom=""Off"" -Dvmc=""On"" -Dwin_broken_tests=""Off"" -Dx11=""On"" -Dxml=""On"" -Dxrootd=""On"" ../root -G Ninja. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:25,deployability,depend,dependent,25,"@vgvassilev I think most dependent PRs are merged, so this PR could be simplified...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:25,integrability,depend,dependent,25,"@vgvassilev I think most dependent PRs are merged, so this PR could be simplified...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:25,modifiability,depend,dependent,25,"@vgvassilev I think most dependent PRs are merged, so this PR could be simplified...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:25,safety,depend,dependent,25,"@vgvassilev I think most dependent PRs are merged, so this PR could be simplified...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:25,testability,depend,dependent,25,"@vgvassilev I think most dependent PRs are merged, so this PR could be simplified...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:71,testability,simpl,simplified,71,"@vgvassilev I think most dependent PRs are merged, so this PR could be simplified...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:71,usability,simpl,simplified,71,"@vgvassilev I think most dependent PRs are merged, so this PR could be simplified...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:330,availability,servic,services,330,> Build failed on mac1015/cxx17. > Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filterco,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:533,availability,servic,services,533,> Build failed on mac1015/cxx17. > Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filterco,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:804,availability,servic,services,804,> Build failed on mac1015/cxx17. > Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filterco,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:1077,availability,servic,services,1077,tnight/build/jenkins/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&da,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:1347,availability,servic,services,1347,-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:1612,availability,servic,services,1612,oot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-ser,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:2135,availability,servic,services,2135,"9301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). Fail with `Parent appears to have exited, shutting down.`. Both seem unrelated to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:2342,availability,servic,services,2342,"9301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). Fail with `Parent appears to have exited, shutting down.`. Both seem unrelated to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:2613,availability,servic,services,2613,"9301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). Fail with `Parent appears to have exited, shutting down.`. Both seem unrelated to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:2824,availability,down,down,2824,"9301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). Fail with `Parent appears to have exited, shutting down.`. Both seem unrelated to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:2,deployability,Build,Build,2,> Build failed on mac1015/cxx17. > Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filterco,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:8,deployability,fail,failed,8,> Build failed on mac1015/cxx17. > Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filterco,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:88,deployability,build,build,88,> Build failed on mac1015/cxx17. > Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filterco,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:130,deployability,build,build,130,> Build failed on mac1015/cxx17. > Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filterco,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:216,deployability,build,buildname,216,> Build failed on mac1015/cxx17. > Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filterco,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:330,deployability,servic,services,330,> Build failed on mac1015/cxx17. > Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filterco,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:382,deployability,build,build,382,> Build failed on mac1015/cxx17. > Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filterco,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:410,deployability,Fail,Failing,410,> Build failed on mac1015/cxx17. > Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filterco,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:533,deployability,servic,services,533,> Build failed on mac1015/cxx17. > Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filterco,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:585,deployability,build,build,585,> Build failed on mac1015/cxx17. > Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filterco,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:804,deployability,servic,services,804,> Build failed on mac1015/cxx17. > Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filterco,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:856,deployability,build,build,856,> Build failed on mac1015/cxx17. > Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filterco,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:1077,deployability,servic,services,1077,tnight/build/jenkins/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&da,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:1129,deployability,build,build,1129,ild. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcga,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:1347,deployability,servic,services,1347,-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:1399,deployability,build,build,1399,. > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:1612,deployability,servic,services,1612,oot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-ser,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:1664,deployability,build,build,1664,OT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-bu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:1769,deployability,Fail,Fail,1769,ppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:1816,deployability,Build,Build,1816,"h/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). Fail with `Parent appears to have exited, shut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:1822,deployability,fail,failed,1822,"-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). Fail with `Parent appears to have exited, shutting d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:1893,deployability,build,build,1893,"9301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). Fail with `Parent appears to have exited, shutting down.`. Both seem unrelated to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:1927,deployability,build,build,1927,"9301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). Fail with `Parent appears to have exited, shutting down.`. Both seem unrelated to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:2013,deployability,build,buildname,2013,"9301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). Fail with `Parent appears to have exited, shutting down.`. Both seem unrelated to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:2135,deployability,servic,services,2135,"9301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). Fail with `Parent appears to have exited, shutting down.`. Both seem unrelated to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:2187,deployability,build,build,2187,"9301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). Fail with `Parent appears to have exited, shutting down.`. Both seem unrelated to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:2215,deployability,Fail,Failing,2215,"9301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). Fail with `Parent appears to have exited, shutting down.`. Both seem unrelated to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:2342,deployability,servic,services,2342,"9301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). Fail with `Parent appears to have exited, shutting down.`. Both seem unrelated to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:2394,deployability,build,build,2394,"9301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). Fail with `Parent appears to have exited, shutting down.`. Both seem unrelated to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:2613,deployability,servic,services,2613,"9301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). Fail with `Parent appears to have exited, shutting down.`. Both seem unrelated to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:2665,deployability,build,build,2665,"9301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). Fail with `Parent appears to have exited, shutting down.`. Both seem unrelated to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:2773,deployability,Fail,Fail,2773,"9301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). Fail with `Parent appears to have exited, shutting down.`. Both seem unrelated to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:195,integrability,filter,filtercount,195,> Build failed on mac1015/cxx17. > Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filterco,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:330,integrability,servic,services,330,> Build failed on mac1015/cxx17. > Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filterco,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:533,integrability,servic,services,533,> Build failed on mac1015/cxx17. > Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filterco,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:804,integrability,servic,services,804,> Build failed on mac1015/cxx17. > Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filterco,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:1077,integrability,servic,services,1077,tnight/build/jenkins/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&da,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:1347,integrability,servic,services,1347,-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:1612,integrability,servic,services,1612,oot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-ser,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:1992,integrability,filter,filtercount,1992,"9301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). Fail with `Parent appears to have exited, shutting down.`. Both seem unrelated to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:2135,integrability,servic,services,2135,"9301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). Fail with `Parent appears to have exited, shutting down.`. Both seem unrelated to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:2342,integrability,servic,services,2342,"9301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). Fail with `Parent appears to have exited, shutting down.`. Both seem unrelated to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:2613,integrability,servic,services,2613,"9301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). Fail with `Parent appears to have exited, shutting down.`. Both seem unrelated to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:330,modifiability,servic,services,330,> Build failed on mac1015/cxx17. > Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filterco,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:533,modifiability,servic,services,533,> Build failed on mac1015/cxx17. > Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filterco,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:804,modifiability,servic,services,804,> Build failed on mac1015/cxx17. > Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filterco,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:1077,modifiability,servic,services,1077,tnight/build/jenkins/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&da,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:1347,modifiability,servic,services,1347,-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:1612,modifiability,servic,services,1612,oot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-ser,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:2135,modifiability,servic,services,2135,"9301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). Fail with `Parent appears to have exited, shutting down.`. Both seem unrelated to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:2342,modifiability,servic,services,2342,"9301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). Fail with `Parent appears to have exited, shutting down.`. Both seem unrelated to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:2613,modifiability,servic,services,2613,"9301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). Fail with `Parent appears to have exited, shutting down.`. Both seem unrelated to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:8,reliability,fail,failed,8,> Build failed on mac1015/cxx17. > Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filterco,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:410,reliability,Fail,Failing,410,> Build failed on mac1015/cxx17. > Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filterco,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:1769,reliability,Fail,Fail,1769,ppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:1822,reliability,fail,failed,1822,"-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). Fail with `Parent appears to have exited, shutting d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:2215,reliability,Fail,Failing,2215,"9301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). Fail with `Parent appears to have exited, shutting down.`. Both seem unrelated to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:2773,reliability,Fail,Fail,2773,"9301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). Fail with `Parent appears to have exited, shutting down.`. Both seem unrelated to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:418,safety,test,tests,418,> Build failed on mac1015/cxx17. > Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filterco,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:597,safety,test,testReport,597,> Build failed on mac1015/cxx17. > Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filterco,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:868,safety,test,testReport,868,> Build failed on mac1015/cxx17. > Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filterco,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:1141,safety,test,testReport,1141,ash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.ce,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:1411,safety,test,testReport,1411,g tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:1676,safety,test,testReport,1676,notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:2223,safety,test,tests,2223,"9301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). Fail with `Parent appears to have exited, shutting down.`. Both seem unrelated to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:2406,safety,test,testReport,2406,"9301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). Fail with `Parent appears to have exited, shutting down.`. Both seem unrelated to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:2677,safety,test,testReport,2677,"9301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). Fail with `Parent appears to have exited, shutting down.`. Both seem unrelated to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:418,testability,test,tests,418,> Build failed on mac1015/cxx17. > Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filterco,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:597,testability,test,testReport,597,> Build failed on mac1015/cxx17. > Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filterco,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:868,testability,test,testReport,868,> Build failed on mac1015/cxx17. > Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filterco,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:1141,testability,test,testReport,1141,ash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.ce,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:1411,testability,test,testReport,1411,g tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:1676,testability,test,testReport,1676,notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:2223,testability,test,tests,2223,"9301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). Fail with `Parent appears to have exited, shutting down.`. Both seem unrelated to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:2406,testability,test,testReport,2406,"9301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). Fail with `Parent appears to have exited, shutting down.`. Both seem unrelated to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:2677,testability,test,testReport,2677,"9301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). Fail with `Parent appears to have exited, shutting down.`. Both seem unrelated to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:73,usability,User,Users,73,> Build failed on mac1015/cxx17. > Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-mac1015-cxx17&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filterco,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:1794,usability,command,command,1794,cgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_tpython_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79301/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_tpython_notebook/). Fail with `sh: ipython3: command not found`. > Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/console). > ### Failing tests:. > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/). > . > * [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79297/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). Fail with `Parent appears,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:7,availability,failur,failures,7,Fedora failures are not unrelated...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:7,deployability,fail,failures,7,Fedora failures are not unrelated...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:7,performance,failur,failures,7,Fedora failures are not unrelated...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:7,reliability,fail,failures,7,Fedora failures are not unrelated...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:39,deployability,integr,integrated,39,@davidlange6 may want his change to be integrated tonight first and maybe the next round?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:39,integrability,integr,integrated,39,@davidlange6 may want his change to be integrated tonight first and maybe the next round?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:39,interoperability,integr,integrated,39,@davidlange6 may want his change to be integrated tonight first and maybe the next round?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:39,modifiability,integr,integrated,39,@davidlange6 may want his change to be integrated tonight first and maybe the next round?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:39,reliability,integr,integrated,39,@davidlange6 may want his change to be integrated tonight first and maybe the next round?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:39,security,integr,integrated,39,@davidlange6 may want his change to be integrated tonight first and maybe the next round?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:39,testability,integr,integrated,39,@davidlange6 may want his change to be integrated tonight first and maybe the next round?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5444:0,availability,Error,Error,0,"Error ""Could NOT find Python3 (missing: Python3_EXECUTABLE Interpreter)"" is unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5444
https://github.com/root-project/root/pull/5444:0,performance,Error,Error,0,"Error ""Could NOT find Python3 (missing: Python3_EXECUTABLE Interpreter)"" is unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5444
https://github.com/root-project/root/pull/5444:0,safety,Error,Error,0,"Error ""Could NOT find Python3 (missing: Python3_EXECUTABLE Interpreter)"" is unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5444
https://github.com/root-project/root/pull/5444:0,usability,Error,Error,0,"Error ""Could NOT find Python3 (missing: Python3_EXECUTABLE Interpreter)"" is unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5444
https://github.com/root-project/root/pull/5445:11,deployability,build,build,11,@phsft-bot build with flags -Dcxxmodules=On.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:23,interoperability,platform,platform,23,"@linev, we need a unix platform with clang10.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:195,deployability,configurat,configuration,195,> we need a unix platform with clang10. On my machine I test with `-Dcxxmodules=ON -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang`. But I have no idea if Jenkins has node with appropriate configuration,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:195,integrability,configur,configuration,195,> we need a unix platform with clang10. On my machine I test with `-Dcxxmodules=ON -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang`. But I have no idea if Jenkins has node with appropriate configuration,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:17,interoperability,platform,platform,17,> we need a unix platform with clang10. On my machine I test with `-Dcxxmodules=ON -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang`. But I have no idea if Jenkins has node with appropriate configuration,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:195,modifiability,configur,configuration,195,> we need a unix platform with clang10. On my machine I test with `-Dcxxmodules=ON -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang`. But I have no idea if Jenkins has node with appropriate configuration,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:56,safety,test,test,56,> we need a unix platform with clang10. On my machine I test with `-Dcxxmodules=ON -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang`. But I have no idea if Jenkins has node with appropriate configuration,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:195,security,configur,configuration,195,> we need a unix platform with clang10. On my machine I test with `-Dcxxmodules=ON -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang`. But I have no idea if Jenkins has node with appropriate configuration,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:56,testability,test,test,56,> we need a unix platform with clang10. On my machine I test with `-Dcxxmodules=ON -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang`. But I have no idea if Jenkins has node with appropriate configuration,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:95,availability,error,errors,95,"@vgvassilev Is `cxxmodules=ON` was working on mac? When I try, I very fast getting compilation errors already in standard Cocoa includes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:113,interoperability,standard,standard,113,"@vgvassilev Is `cxxmodules=ON` was working on mac? When I try, I very fast getting compilation errors already in standard Cocoa includes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:95,performance,error,errors,95,"@vgvassilev Is `cxxmodules=ON` was working on mac? When I try, I very fast getting compilation errors already in standard Cocoa includes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:95,safety,error,errors,95,"@vgvassilev Is `cxxmodules=ON` was working on mac? When I try, I very fast getting compilation errors already in standard Cocoa includes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:95,usability,error,errors,95,"@vgvassilev Is `cxxmodules=ON` was working on mac? When I try, I very fast getting compilation errors already in standard Cocoa includes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:12,safety,test,testing,12,@linev I am testing your PR locally and let you know! Thanks a lot!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:12,testability,test,testing,12,@linev I am testing your PR locally and let you know! Thanks a lot!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:969,availability,error,error,969,"@linev for me cxxmodules are broken but it is most luckily not CMake related issue (so there is nothing you can do). ```. While building module 'TreePlayer' imported from /home/oksana/CERN_sources/root-rntuple/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:35:. In file included from <module-includes>:17:. In file included from /home/oksana/CERN_sources/root-rntuple/builds/include/TSimpleAnalysis.h:29:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/fstream:38:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/istream:38:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/ios:44:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/basic_ios.h:37:. /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/locale_facets.h:2611:5: error: inline declaration of 'ispunct' follows non-inline definition. ispunct(_CharT __c, const locale& __loc). ^. In module 'Core' imported from /home/oksana/CERN_sources/root-rntuple/builds/include/TBranchProxyDirector.h:15:. /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/locale_facets.h:2611:5: note: previous definition is here. ispunct(_CharT __c, const locale& __loc). ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:128,deployability,build,building,128,"@linev for me cxxmodules are broken but it is most luckily not CMake related issue (so there is nothing you can do). ```. While building module 'TreePlayer' imported from /home/oksana/CERN_sources/root-rntuple/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:35:. In file included from <module-includes>:17:. In file included from /home/oksana/CERN_sources/root-rntuple/builds/include/TSimpleAnalysis.h:29:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/fstream:38:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/istream:38:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/ios:44:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/basic_ios.h:37:. /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/locale_facets.h:2611:5: error: inline declaration of 'ispunct' follows non-inline definition. ispunct(_CharT __c, const locale& __loc). ^. In module 'Core' imported from /home/oksana/CERN_sources/root-rntuple/builds/include/TBranchProxyDirector.h:15:. /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/locale_facets.h:2611:5: note: previous definition is here. ispunct(_CharT __c, const locale& __loc). ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:137,deployability,modul,module,137,"@linev for me cxxmodules are broken but it is most luckily not CMake related issue (so there is nothing you can do). ```. While building module 'TreePlayer' imported from /home/oksana/CERN_sources/root-rntuple/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:35:. In file included from <module-includes>:17:. In file included from /home/oksana/CERN_sources/root-rntuple/builds/include/TSimpleAnalysis.h:29:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/fstream:38:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/istream:38:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/ios:44:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/basic_ios.h:37:. /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/locale_facets.h:2611:5: error: inline declaration of 'ispunct' follows non-inline definition. ispunct(_CharT __c, const locale& __loc). ^. In module 'Core' imported from /home/oksana/CERN_sources/root-rntuple/builds/include/TBranchProxyDirector.h:15:. /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/locale_facets.h:2611:5: note: previous definition is here. ispunct(_CharT __c, const locale& __loc). ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:284,deployability,modul,module-includes,284,"@linev for me cxxmodules are broken but it is most luckily not CMake related issue (so there is nothing you can do). ```. While building module 'TreePlayer' imported from /home/oksana/CERN_sources/root-rntuple/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:35:. In file included from <module-includes>:17:. In file included from /home/oksana/CERN_sources/root-rntuple/builds/include/TSimpleAnalysis.h:29:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/fstream:38:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/istream:38:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/ios:44:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/basic_ios.h:37:. /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/locale_facets.h:2611:5: error: inline declaration of 'ispunct' follows non-inline definition. ispunct(_CharT __c, const locale& __loc). ^. In module 'Core' imported from /home/oksana/CERN_sources/root-rntuple/builds/include/TBranchProxyDirector.h:15:. /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/locale_facets.h:2611:5: note: previous definition is here. ispunct(_CharT __c, const locale& __loc). ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:367,deployability,build,builds,367,"@linev for me cxxmodules are broken but it is most luckily not CMake related issue (so there is nothing you can do). ```. While building module 'TreePlayer' imported from /home/oksana/CERN_sources/root-rntuple/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:35:. In file included from <module-includes>:17:. In file included from /home/oksana/CERN_sources/root-rntuple/builds/include/TSimpleAnalysis.h:29:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/fstream:38:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/istream:38:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/ios:44:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/basic_ios.h:37:. /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/locale_facets.h:2611:5: error: inline declaration of 'ispunct' follows non-inline definition. ispunct(_CharT __c, const locale& __loc). ^. In module 'Core' imported from /home/oksana/CERN_sources/root-rntuple/builds/include/TBranchProxyDirector.h:15:. /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/locale_facets.h:2611:5: note: previous definition is here. ispunct(_CharT __c, const locale& __loc). ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:1087,deployability,modul,module,1087,"@linev for me cxxmodules are broken but it is most luckily not CMake related issue (so there is nothing you can do). ```. While building module 'TreePlayer' imported from /home/oksana/CERN_sources/root-rntuple/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:35:. In file included from <module-includes>:17:. In file included from /home/oksana/CERN_sources/root-rntuple/builds/include/TSimpleAnalysis.h:29:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/fstream:38:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/istream:38:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/ios:44:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/basic_ios.h:37:. /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/locale_facets.h:2611:5: error: inline declaration of 'ispunct' follows non-inline definition. ispunct(_CharT __c, const locale& __loc). ^. In module 'Core' imported from /home/oksana/CERN_sources/root-rntuple/builds/include/TBranchProxyDirector.h:15:. /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/locale_facets.h:2611:5: note: previous definition is here. ispunct(_CharT __c, const locale& __loc). ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:1154,deployability,build,builds,1154,"@linev for me cxxmodules are broken but it is most luckily not CMake related issue (so there is nothing you can do). ```. While building module 'TreePlayer' imported from /home/oksana/CERN_sources/root-rntuple/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:35:. In file included from <module-includes>:17:. In file included from /home/oksana/CERN_sources/root-rntuple/builds/include/TSimpleAnalysis.h:29:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/fstream:38:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/istream:38:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/ios:44:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/basic_ios.h:37:. /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/locale_facets.h:2611:5: error: inline declaration of 'ispunct' follows non-inline definition. ispunct(_CharT __c, const locale& __loc). ^. In module 'Core' imported from /home/oksana/CERN_sources/root-rntuple/builds/include/TBranchProxyDirector.h:15:. /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/locale_facets.h:2611:5: note: previous definition is here. ispunct(_CharT __c, const locale& __loc). ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:1095,energy efficiency,Core,Core,1095,"@linev for me cxxmodules are broken but it is most luckily not CMake related issue (so there is nothing you can do). ```. While building module 'TreePlayer' imported from /home/oksana/CERN_sources/root-rntuple/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:35:. In file included from <module-includes>:17:. In file included from /home/oksana/CERN_sources/root-rntuple/builds/include/TSimpleAnalysis.h:29:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/fstream:38:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/istream:38:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/ios:44:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/basic_ios.h:37:. /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/locale_facets.h:2611:5: error: inline declaration of 'ispunct' follows non-inline definition. ispunct(_CharT __c, const locale& __loc). ^. In module 'Core' imported from /home/oksana/CERN_sources/root-rntuple/builds/include/TBranchProxyDirector.h:15:. /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/locale_facets.h:2611:5: note: previous definition is here. ispunct(_CharT __c, const locale& __loc). ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:137,modifiability,modul,module,137,"@linev for me cxxmodules are broken but it is most luckily not CMake related issue (so there is nothing you can do). ```. While building module 'TreePlayer' imported from /home/oksana/CERN_sources/root-rntuple/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:35:. In file included from <module-includes>:17:. In file included from /home/oksana/CERN_sources/root-rntuple/builds/include/TSimpleAnalysis.h:29:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/fstream:38:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/istream:38:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/ios:44:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/basic_ios.h:37:. /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/locale_facets.h:2611:5: error: inline declaration of 'ispunct' follows non-inline definition. ispunct(_CharT __c, const locale& __loc). ^. In module 'Core' imported from /home/oksana/CERN_sources/root-rntuple/builds/include/TBranchProxyDirector.h:15:. /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/locale_facets.h:2611:5: note: previous definition is here. ispunct(_CharT __c, const locale& __loc). ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:284,modifiability,modul,module-includes,284,"@linev for me cxxmodules are broken but it is most luckily not CMake related issue (so there is nothing you can do). ```. While building module 'TreePlayer' imported from /home/oksana/CERN_sources/root-rntuple/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:35:. In file included from <module-includes>:17:. In file included from /home/oksana/CERN_sources/root-rntuple/builds/include/TSimpleAnalysis.h:29:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/fstream:38:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/istream:38:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/ios:44:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/basic_ios.h:37:. /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/locale_facets.h:2611:5: error: inline declaration of 'ispunct' follows non-inline definition. ispunct(_CharT __c, const locale& __loc). ^. In module 'Core' imported from /home/oksana/CERN_sources/root-rntuple/builds/include/TBranchProxyDirector.h:15:. /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/locale_facets.h:2611:5: note: previous definition is here. ispunct(_CharT __c, const locale& __loc). ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:1087,modifiability,modul,module,1087,"@linev for me cxxmodules are broken but it is most luckily not CMake related issue (so there is nothing you can do). ```. While building module 'TreePlayer' imported from /home/oksana/CERN_sources/root-rntuple/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:35:. In file included from <module-includes>:17:. In file included from /home/oksana/CERN_sources/root-rntuple/builds/include/TSimpleAnalysis.h:29:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/fstream:38:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/istream:38:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/ios:44:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/basic_ios.h:37:. /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/locale_facets.h:2611:5: error: inline declaration of 'ispunct' follows non-inline definition. ispunct(_CharT __c, const locale& __loc). ^. In module 'Core' imported from /home/oksana/CERN_sources/root-rntuple/builds/include/TBranchProxyDirector.h:15:. /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/locale_facets.h:2611:5: note: previous definition is here. ispunct(_CharT __c, const locale& __loc). ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:969,performance,error,error,969,"@linev for me cxxmodules are broken but it is most luckily not CMake related issue (so there is nothing you can do). ```. While building module 'TreePlayer' imported from /home/oksana/CERN_sources/root-rntuple/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:35:. In file included from <module-includes>:17:. In file included from /home/oksana/CERN_sources/root-rntuple/builds/include/TSimpleAnalysis.h:29:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/fstream:38:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/istream:38:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/ios:44:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/basic_ios.h:37:. /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/locale_facets.h:2611:5: error: inline declaration of 'ispunct' follows non-inline definition. ispunct(_CharT __c, const locale& __loc). ^. In module 'Core' imported from /home/oksana/CERN_sources/root-rntuple/builds/include/TBranchProxyDirector.h:15:. /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/locale_facets.h:2611:5: note: previous definition is here. ispunct(_CharT __c, const locale& __loc). ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:137,safety,modul,module,137,"@linev for me cxxmodules are broken but it is most luckily not CMake related issue (so there is nothing you can do). ```. While building module 'TreePlayer' imported from /home/oksana/CERN_sources/root-rntuple/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:35:. In file included from <module-includes>:17:. In file included from /home/oksana/CERN_sources/root-rntuple/builds/include/TSimpleAnalysis.h:29:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/fstream:38:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/istream:38:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/ios:44:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/basic_ios.h:37:. /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/locale_facets.h:2611:5: error: inline declaration of 'ispunct' follows non-inline definition. ispunct(_CharT __c, const locale& __loc). ^. In module 'Core' imported from /home/oksana/CERN_sources/root-rntuple/builds/include/TBranchProxyDirector.h:15:. /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/locale_facets.h:2611:5: note: previous definition is here. ispunct(_CharT __c, const locale& __loc). ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:284,safety,modul,module-includes,284,"@linev for me cxxmodules are broken but it is most luckily not CMake related issue (so there is nothing you can do). ```. While building module 'TreePlayer' imported from /home/oksana/CERN_sources/root-rntuple/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:35:. In file included from <module-includes>:17:. In file included from /home/oksana/CERN_sources/root-rntuple/builds/include/TSimpleAnalysis.h:29:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/fstream:38:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/istream:38:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/ios:44:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/basic_ios.h:37:. /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/locale_facets.h:2611:5: error: inline declaration of 'ispunct' follows non-inline definition. ispunct(_CharT __c, const locale& __loc). ^. In module 'Core' imported from /home/oksana/CERN_sources/root-rntuple/builds/include/TBranchProxyDirector.h:15:. /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/locale_facets.h:2611:5: note: previous definition is here. ispunct(_CharT __c, const locale& __loc). ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:969,safety,error,error,969,"@linev for me cxxmodules are broken but it is most luckily not CMake related issue (so there is nothing you can do). ```. While building module 'TreePlayer' imported from /home/oksana/CERN_sources/root-rntuple/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:35:. In file included from <module-includes>:17:. In file included from /home/oksana/CERN_sources/root-rntuple/builds/include/TSimpleAnalysis.h:29:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/fstream:38:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/istream:38:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/ios:44:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/basic_ios.h:37:. /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/locale_facets.h:2611:5: error: inline declaration of 'ispunct' follows non-inline definition. ispunct(_CharT __c, const locale& __loc). ^. In module 'Core' imported from /home/oksana/CERN_sources/root-rntuple/builds/include/TBranchProxyDirector.h:15:. /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/locale_facets.h:2611:5: note: previous definition is here. ispunct(_CharT __c, const locale& __loc). ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:1087,safety,modul,module,1087,"@linev for me cxxmodules are broken but it is most luckily not CMake related issue (so there is nothing you can do). ```. While building module 'TreePlayer' imported from /home/oksana/CERN_sources/root-rntuple/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:35:. In file included from <module-includes>:17:. In file included from /home/oksana/CERN_sources/root-rntuple/builds/include/TSimpleAnalysis.h:29:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/fstream:38:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/istream:38:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/ios:44:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/basic_ios.h:37:. /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/locale_facets.h:2611:5: error: inline declaration of 'ispunct' follows non-inline definition. ispunct(_CharT __c, const locale& __loc). ^. In module 'Core' imported from /home/oksana/CERN_sources/root-rntuple/builds/include/TBranchProxyDirector.h:15:. /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/locale_facets.h:2611:5: note: previous definition is here. ispunct(_CharT __c, const locale& __loc). ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:969,usability,error,error,969,"@linev for me cxxmodules are broken but it is most luckily not CMake related issue (so there is nothing you can do). ```. While building module 'TreePlayer' imported from /home/oksana/CERN_sources/root-rntuple/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:35:. In file included from <module-includes>:17:. In file included from /home/oksana/CERN_sources/root-rntuple/builds/include/TSimpleAnalysis.h:29:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/fstream:38:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/istream:38:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/ios:44:. In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/basic_ios.h:37:. /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/locale_facets.h:2611:5: error: inline declaration of 'ispunct' follows non-inline definition. ispunct(_CharT __c, const locale& __loc). ^. In module 'Core' imported from /home/oksana/CERN_sources/root-rntuple/builds/include/TBranchProxyDirector.h:15:. /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/bits/locale_facets.h:2611:5: note: previous definition is here. ispunct(_CharT __c, const locale& __loc). ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:173,deployability,continu,continue,173,"@oshadura Seems to be, there are still some builtins which are used on your machine and which expose `${CMAKE_BINARY_DIR}/include` to include paths. . I merging PR and will continue to adjust cmake files",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:94,security,expos,expose,94,"@oshadura Seems to be, there are still some builtins which are used on your machine and which expose `${CMAKE_BINARY_DIR}/include` to include paths. . I merging PR and will continue to adjust cmake files",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5446:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5446
https://github.com/root-project/root/pull/5446:61,usability,Clear,Clear,61,I guess you need one more check in the function `TProcessID::Clear()` at line 222 of the same file?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5446
https://github.com/root-project/root/pull/5446:67,energy efficiency,current,current,67,"I don't think so. The case is already filter by line 218, i.e. the current/this TProcessID has index greater than 255 and we are iterating over its objects so (unless :) I mis-remember) they should all be the TExMap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5446
https://github.com/root-project/root/pull/5446:38,integrability,filter,filter,38,"I don't think so. The case is already filter by line 218, i.e. the current/this TProcessID has index greater than 255 and we are iterating over its objects so (unless :) I mis-remember) they should all be the TExMap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5446
https://github.com/root-project/root/pull/5446:176,safety,reme,remember,176,"I don't think so. The case is already filter by line 218, i.e. the current/this TProcessID has index greater than 255 and we are iterating over its objects so (unless :) I mis-remember) they should all be the TExMap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5446
https://github.com/root-project/root/pull/5446:0,availability,Failur,Failure,0,Failure is unrelated/pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5446
https://github.com/root-project/root/pull/5446:0,deployability,Fail,Failure,0,Failure is unrelated/pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5446
https://github.com/root-project/root/pull/5446:0,performance,Failur,Failure,0,Failure is unrelated/pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5446
https://github.com/root-project/root/pull/5446:0,reliability,Fail,Failure,0,Failure is unrelated/pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5446
https://github.com/root-project/root/pull/5447:13,availability,error,errored,13,"Tests passed errored with ""Problems when submitting via HTTP""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5447
https://github.com/root-project/root/pull/5447:41,integrability,sub,submitting,41,"Tests passed errored with ""Problems when submitting via HTTP""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5447
https://github.com/root-project/root/pull/5447:13,performance,error,errored,13,"Tests passed errored with ""Problems when submitting via HTTP""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5447
https://github.com/root-project/root/pull/5447:0,safety,Test,Tests,0,"Tests passed errored with ""Problems when submitting via HTTP""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5447
https://github.com/root-project/root/pull/5447:13,safety,error,errored,13,"Tests passed errored with ""Problems when submitting via HTTP""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5447
https://github.com/root-project/root/pull/5447:0,testability,Test,Tests,0,"Tests passed errored with ""Problems when submitting via HTTP""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5447
https://github.com/root-project/root/pull/5447:13,usability,error,errored,13,"Tests passed errored with ""Problems when submitting via HTTP""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5447
https://github.com/root-project/root/pull/5448:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5448
https://github.com/root-project/root/pull/5448:17,safety,test,tests,17,This PR actually tests the noimt setup which seems to have passed now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5448
https://github.com/root-project/root/pull/5448:17,testability,test,tests,17,This PR actually tests the noimt setup which seems to have passed now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5448
https://github.com/root-project/root/pull/5449:50,deployability,build,build,50,"I have manually cancelled ""ROOT-fedora29/python3"" build as the PR is osx-only and the machine has a huge backlog.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5449
https://github.com/root-project/root/pull/5449:16,usability,cancel,cancelled,16,"I have manually cancelled ""ROOT-fedora29/python3"" build as the PR is osx-only and the machine has a huge backlog.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5449
https://github.com/root-project/root/pull/5450:26,deployability,instal,installation,26,Do we need these files in installation? . They are used only internally and therefore I did not copy them to `${CMAKE_BINARY_DIR}/include` directory.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:76,availability,restor,restore,76,"I am not sure how they used outside, we were installing them before so lets restore working state of ROOT installation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:92,availability,state,state,92,"I am not sure how they used outside, we were installing them before so lets restore working state of ROOT installation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:45,deployability,instal,installing,45,"I am not sure how they used outside, we were installing them before so lets restore working state of ROOT installation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:106,deployability,instal,installation,106,"I am not sure how they used outside, we were installing them before so lets restore working state of ROOT installation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:92,integrability,state,state,92,"I am not sure how they used outside, we were installing them before so lets restore working state of ROOT installation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:76,reliability,restor,restore,76,"I am not sure how they used outside, we were installing them before so lets restore working state of ROOT installation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:78,availability,restor,restore,78,"> I am not sure how they used outside, we were installing them before so lets restore working state of ROOT installation. But then it will be difference between installed and ""compiled-at-place"" version. Without installation these includes no longer available for the users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:94,availability,state,state,94,"> I am not sure how they used outside, we were installing them before so lets restore working state of ROOT installation. But then it will be difference between installed and ""compiled-at-place"" version. Without installation these includes no longer available for the users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:250,availability,avail,available,250,"> I am not sure how they used outside, we were installing them before so lets restore working state of ROOT installation. But then it will be difference between installed and ""compiled-at-place"" version. Without installation these includes no longer available for the users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:47,deployability,instal,installing,47,"> I am not sure how they used outside, we were installing them before so lets restore working state of ROOT installation. But then it will be difference between installed and ""compiled-at-place"" version. Without installation these includes no longer available for the users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:108,deployability,instal,installation,108,"> I am not sure how they used outside, we were installing them before so lets restore working state of ROOT installation. But then it will be difference between installed and ""compiled-at-place"" version. Without installation these includes no longer available for the users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:161,deployability,instal,installed,161,"> I am not sure how they used outside, we were installing them before so lets restore working state of ROOT installation. But then it will be difference between installed and ""compiled-at-place"" version. Without installation these includes no longer available for the users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:195,deployability,version,version,195,"> I am not sure how they used outside, we were installing them before so lets restore working state of ROOT installation. But then it will be difference between installed and ""compiled-at-place"" version. Without installation these includes no longer available for the users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:212,deployability,instal,installation,212,"> I am not sure how they used outside, we were installing them before so lets restore working state of ROOT installation. But then it will be difference between installed and ""compiled-at-place"" version. Without installation these includes no longer available for the users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:94,integrability,state,state,94,"> I am not sure how they used outside, we were installing them before so lets restore working state of ROOT installation. But then it will be difference between installed and ""compiled-at-place"" version. Without installation these includes no longer available for the users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:195,integrability,version,version,195,"> I am not sure how they used outside, we were installing them before so lets restore working state of ROOT installation. But then it will be difference between installed and ""compiled-at-place"" version. Without installation these includes no longer available for the users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:195,modifiability,version,version,195,"> I am not sure how they used outside, we were installing them before so lets restore working state of ROOT installation. But then it will be difference between installed and ""compiled-at-place"" version. Without installation these includes no longer available for the users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:78,reliability,restor,restore,78,"> I am not sure how they used outside, we were installing them before so lets restore working state of ROOT installation. But then it will be difference between installed and ""compiled-at-place"" version. Without installation these includes no longer available for the users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:250,reliability,availab,available,250,"> I am not sure how they used outside, we were installing them before so lets restore working state of ROOT installation. But then it will be difference between installed and ""compiled-at-place"" version. Without installation these includes no longer available for the users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:250,safety,avail,available,250,"> I am not sure how they used outside, we were installing them before so lets restore working state of ROOT installation. But then it will be difference between installed and ""compiled-at-place"" version. Without installation these includes no longer available for the users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:250,security,availab,available,250,"> I am not sure how they used outside, we were installing them before so lets restore working state of ROOT installation. But then it will be difference between installed and ""compiled-at-place"" version. Without installation these includes no longer available for the users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:268,usability,user,users,268,"> I am not sure how they used outside, we were installing them before so lets restore working state of ROOT installation. But then it will be difference between installed and ""compiled-at-place"" version. Without installation these includes no longer available for the users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:32,usability,user,users,32,@Axel-Naumann are you aware our users using these.h files?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:274,deployability,releas,release,274,"The ""right"" procedure is:. - deprecate these files. - then remove them. I am not aware of any users of these files other than ROOT. I expect no users for `RConfigOptions.h` and few for `compiledata.h`. I am not opposed to moving them out of `include/` (and saying so in the release notes). @pcanal what's your take? The discussion of hiding these files from `include/` should not block this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:94,usability,user,users,94,"The ""right"" procedure is:. - deprecate these files. - then remove them. I am not aware of any users of these files other than ROOT. I expect no users for `RConfigOptions.h` and few for `compiledata.h`. I am not opposed to moving them out of `include/` (and saying so in the release notes). @pcanal what's your take? The discussion of hiding these files from `include/` should not block this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:144,usability,user,users,144,"The ""right"" procedure is:. - deprecate these files. - then remove them. I am not aware of any users of these files other than ROOT. I expect no users for `RConfigOptions.h` and few for `compiledata.h`. I am not opposed to moving them out of `include/` (and saying so in the release notes). @pcanal what's your take? The discussion of hiding these files from `include/` should not block this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:29,deployability,stage,stage,29,"Oki, so then it will be next stage of this PR (I am waiting for feedabck of @pcanal). For now, I will merge it as soon as PR is green (it fixes LCG externals builds and etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:158,deployability,build,builds,158,"Oki, so then it will be next stage of this PR (I am waiting for feedabck of @pcanal). For now, I will merge it as soon as PR is green (it fixes LCG externals builds and etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:128,energy efficiency,green,green,128,"Oki, so then it will be next stage of this PR (I am waiting for feedabck of @pcanal). For now, I will merge it as soon as PR is green (it fixes LCG externals builds and etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:20,availability,servic,services,20,Plus https://lcgapp-services.cern.ch/root-jenkins/job/root-release-master/176/ - we had two consecutive failing days now and I'd like to re-run to make sure we're green again.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:20,deployability,servic,services,20,Plus https://lcgapp-services.cern.ch/root-jenkins/job/root-release-master/176/ - we had two consecutive failing days now and I'd like to re-run to make sure we're green again.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:59,deployability,releas,release-master,59,Plus https://lcgapp-services.cern.ch/root-jenkins/job/root-release-master/176/ - we had two consecutive failing days now and I'd like to re-run to make sure we're green again.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:104,deployability,fail,failing,104,Plus https://lcgapp-services.cern.ch/root-jenkins/job/root-release-master/176/ - we had two consecutive failing days now and I'd like to re-run to make sure we're green again.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:163,energy efficiency,green,green,163,Plus https://lcgapp-services.cern.ch/root-jenkins/job/root-release-master/176/ - we had two consecutive failing days now and I'd like to re-run to make sure we're green again.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:20,integrability,servic,services,20,Plus https://lcgapp-services.cern.ch/root-jenkins/job/root-release-master/176/ - we had two consecutive failing days now and I'd like to re-run to make sure we're green again.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:20,modifiability,servic,services,20,Plus https://lcgapp-services.cern.ch/root-jenkins/job/root-release-master/176/ - we had two consecutive failing days now and I'd like to re-run to make sure we're green again.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:104,reliability,fail,failing,104,Plus https://lcgapp-services.cern.ch/root-jenkins/job/root-release-master/176/ - we had two consecutive failing days now and I'd like to re-run to make sure we're green again.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:94,deployability,releas,release,94,"*We* are user of compiledata.h, it is a forensic tools to make sure we can understand how the release the user is using has really been built. It is important that it is part of the release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:182,deployability,releas,release,182,"*We* are user of compiledata.h, it is a forensic tools to make sure we can understand how the release the user is using has really been built. It is important that it is part of the release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:75,testability,understand,understand,75,"*We* are user of compiledata.h, it is a forensic tools to make sure we can understand how the release the user is using has really been built. It is important that it is part of the release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:9,usability,user,user,9,"*We* are user of compiledata.h, it is a forensic tools to make sure we can understand how the release the user is using has really been built. It is important that it is part of the release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:49,usability,tool,tools,49,"*We* are user of compiledata.h, it is a forensic tools to make sure we can understand how the release the user is using has really been built. It is important that it is part of the release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:106,usability,user,user,106,"*We* are user of compiledata.h, it is a forensic tools to make sure we can understand how the release the user is using has really been built. It is important that it is part of the release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:149,deployability,instal,installed,149,"The same reasoning goes for RConfigOptions.h. That said, the probably don't have to be in $ROOTSYS/include itself (but they must be somewhere in the installed version)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:159,deployability,version,version,159,"The same reasoning goes for RConfigOptions.h. That said, the probably don't have to be in $ROOTSYS/include itself (but they must be somewhere in the installed version)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:159,integrability,version,version,159,"The same reasoning goes for RConfigOptions.h. That said, the probably don't have to be in $ROOTSYS/include itself (but they must be somewhere in the installed version)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:159,modifiability,version,version,159,"The same reasoning goes for RConfigOptions.h. That said, the probably don't have to be in $ROOTSYS/include itself (but they must be somewhere in the installed version)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:40,deployability,releas,release,40,"In this case PR is absolutely fine - in release builds includes can be found, with standard source builds we know where includes are. @oshadura, you can merge it!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:48,deployability,build,builds,48,"In this case PR is absolutely fine - in release builds includes can be found, with standard source builds we know where includes are. @oshadura, you can merge it!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:99,deployability,build,builds,99,"In this case PR is absolutely fine - in release builds includes can be found, with standard source builds we know where includes are. @oshadura, you can merge it!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:83,interoperability,standard,standard,83,"In this case PR is absolutely fine - in release builds includes can be found, with standard source builds we know where includes are. @oshadura, you can merge it!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5451:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5451
https://github.com/root-project/root/pull/5453:392,performance,time,time,392,"> I trust you that it works, but how does this fix it? You match with `\\.exe` literally `\.exe` in the name `${executable}`. Why there should be a name like `foo\.exe`? I miss something here in the regex magic, right? Right, the correct regex is `\.exe`, but in CMake the backslash has to be escaped, so it becomes `\\.exe`. So at the end, it will match `foo.exe` (trust me, it took me some time to figure that out...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5453
https://github.com/root-project/root/pull/5453:37,reliability,doe,does,37,"> I trust you that it works, but how does this fix it? You match with `\\.exe` literally `\.exe` in the name `${executable}`. Why there should be a name like `foo\.exe`? I miss something here in the regex magic, right? Right, the correct regex is `\.exe`, but in CMake the backslash has to be escaped, so it becomes `\\.exe`. So at the end, it will match `foo.exe` (trust me, it took me some time to figure that out...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5453
https://github.com/root-project/root/pull/5453:4,security,trust,trust,4,"> I trust you that it works, but how does this fix it? You match with `\\.exe` literally `\.exe` in the name `${executable}`. Why there should be a name like `foo\.exe`? I miss something here in the regex magic, right? Right, the correct regex is `\.exe`, but in CMake the backslash has to be escaped, so it becomes `\\.exe`. So at the end, it will match `foo.exe` (trust me, it took me some time to figure that out...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5453
https://github.com/root-project/root/pull/5453:366,security,trust,trust,366,"> I trust you that it works, but how does this fix it? You match with `\\.exe` literally `\.exe` in the name `${executable}`. Why there should be a name like `foo\.exe`? I miss something here in the regex magic, right? Right, the correct regex is `\.exe`, but in CMake the backslash has to be escaped, so it becomes `\\.exe`. So at the end, it will match `foo.exe` (trust me, it took me some time to figure that out...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5453
https://github.com/root-project/root/pull/5453:44,safety,review,reviewing,44,"You called it ""simple"", you tricked us into reviewing! :P",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5453
https://github.com/root-project/root/pull/5453:15,testability,simpl,simple,15,"You called it ""simple"", you tricked us into reviewing! :P",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5453
https://github.com/root-project/root/pull/5453:44,testability,review,reviewing,44,"You called it ""simple"", you tricked us into reviewing! :P",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5453
https://github.com/root-project/root/pull/5453:15,usability,simpl,simple,15,"You called it ""simple"", you tricked us into reviewing! :P",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5453
https://github.com/root-project/root/pull/5458:22,safety,review,review,22,@Axel-Naumann can you review? I would like to land it in 6.22...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5458
https://github.com/root-project/root/pull/5458:22,testability,review,review,22,@Axel-Naumann can you review? I would like to land it in 6.22...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5458
https://github.com/root-project/root/pull/5462:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:185,deployability,stack,stack,185,"> This fixes ROOT-10712. > . > Note, that the problem appears if. > . > ```. > TClass::GetClass(""""art::Wrapper<art::Assns<string,int,void> >"")->SetUnloaded();. > ```. Can you paste the stack trace?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:103,integrability,Wrap,Wrapper,103,"> This fixes ROOT-10712. > . > Note, that the problem appears if. > . > ```. > TClass::GetClass(""""art::Wrapper<art::Assns<string,int,void> >"")->SetUnloaded();. > ```. Can you paste the stack trace?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:103,interoperability,Wrapper,Wrapper,103,"> This fixes ROOT-10712. > . > Note, that the problem appears if. > . > ```. > TClass::GetClass(""""art::Wrapper<art::Assns<string,int,void> >"")->SetUnloaded();. > ```. Can you paste the stack trace?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:191,testability,trace,trace,191,"> This fixes ROOT-10712. > . > Note, that the problem appears if. > . > ```. > TClass::GetClass(""""art::Wrapper<art::Assns<string,int,void> >"")->SetUnloaded();. > ```. Can you paste the stack trace?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:2,deployability,updat,updated,2,I updated the stack trace. Note that we verified that in the 'real' case neither TROOT::~TROOT nor TCling::~TCling have been run before the assert. We also verified that calling SetUnloaded for that class 'right before' the end/return of main have the same behavior.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:14,deployability,stack,stack,14,I updated the stack trace. Note that we verified that in the 'real' case neither TROOT::~TROOT nor TCling::~TCling have been run before the assert. We also verified that calling SetUnloaded for that class 'right before' the end/return of main have the same behavior.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:2,safety,updat,updated,2,I updated the stack trace. Note that we verified that in the 'real' case neither TROOT::~TROOT nor TCling::~TCling have been run before the assert. We also verified that calling SetUnloaded for that class 'right before' the end/return of main have the same behavior.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:2,security,updat,updated,2,I updated the stack trace. Note that we verified that in the 'real' case neither TROOT::~TROOT nor TCling::~TCling have been run before the assert. We also verified that calling SetUnloaded for that class 'right before' the end/return of main have the same behavior.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:20,testability,trace,trace,20,I updated the stack trace. Note that we verified that in the 'real' case neither TROOT::~TROOT nor TCling::~TCling have been run before the assert. We also verified that calling SetUnloaded for that class 'right before' the end/return of main have the same behavior.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:40,testability,verif,verified,40,I updated the stack trace. Note that we verified that in the 'real' case neither TROOT::~TROOT nor TCling::~TCling have been run before the assert. We also verified that calling SetUnloaded for that class 'right before' the end/return of main have the same behavior.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:140,testability,assert,assert,140,I updated the stack trace. Note that we verified that in the 'real' case neither TROOT::~TROOT nor TCling::~TCling have been run before the assert. We also verified that calling SetUnloaded for that class 'right before' the end/return of main have the same behavior.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:156,testability,verif,verified,156,I updated the stack trace. Note that we verified that in the 'real' case neither TROOT::~TROOT nor TCling::~TCling have been run before the assert. We also verified that calling SetUnloaded for that class 'right before' the end/return of main have the same behavior.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:257,usability,behavi,behavior,257,I updated the stack trace. Note that we verified that in the 'real' case neither TROOT::~TROOT nor TCling::~TCling have been run before the assert. We also verified that calling SetUnloaded for that class 'right before' the end/return of main have the same behavior.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:4,deployability,updat,updated,4,> I updated the stack trace. Note that we verified that in the 'real' case neither TROOT::~TROOT nor TCling::~TCling have been run before the assert. We also verified that calling SetUnloaded for that class 'right before' the end/return of main have the same behavior. That confuses me. So we call explicitly from users code `SetUnloaded` when we have properly initialized TROOT and TCling?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:16,deployability,stack,stack,16,> I updated the stack trace. Note that we verified that in the 'real' case neither TROOT::~TROOT nor TCling::~TCling have been run before the assert. We also verified that calling SetUnloaded for that class 'right before' the end/return of main have the same behavior. That confuses me. So we call explicitly from users code `SetUnloaded` when we have properly initialized TROOT and TCling?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:4,safety,updat,updated,4,> I updated the stack trace. Note that we verified that in the 'real' case neither TROOT::~TROOT nor TCling::~TCling have been run before the assert. We also verified that calling SetUnloaded for that class 'right before' the end/return of main have the same behavior. That confuses me. So we call explicitly from users code `SetUnloaded` when we have properly initialized TROOT and TCling?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:4,security,updat,updated,4,> I updated the stack trace. Note that we verified that in the 'real' case neither TROOT::~TROOT nor TCling::~TCling have been run before the assert. We also verified that calling SetUnloaded for that class 'right before' the end/return of main have the same behavior. That confuses me. So we call explicitly from users code `SetUnloaded` when we have properly initialized TROOT and TCling?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:22,testability,trace,trace,22,> I updated the stack trace. Note that we verified that in the 'real' case neither TROOT::~TROOT nor TCling::~TCling have been run before the assert. We also verified that calling SetUnloaded for that class 'right before' the end/return of main have the same behavior. That confuses me. So we call explicitly from users code `SetUnloaded` when we have properly initialized TROOT and TCling?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:42,testability,verif,verified,42,> I updated the stack trace. Note that we verified that in the 'real' case neither TROOT::~TROOT nor TCling::~TCling have been run before the assert. We also verified that calling SetUnloaded for that class 'right before' the end/return of main have the same behavior. That confuses me. So we call explicitly from users code `SetUnloaded` when we have properly initialized TROOT and TCling?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:142,testability,assert,assert,142,> I updated the stack trace. Note that we verified that in the 'real' case neither TROOT::~TROOT nor TCling::~TCling have been run before the assert. We also verified that calling SetUnloaded for that class 'right before' the end/return of main have the same behavior. That confuses me. So we call explicitly from users code `SetUnloaded` when we have properly initialized TROOT and TCling?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:158,testability,verif,verified,158,> I updated the stack trace. Note that we verified that in the 'real' case neither TROOT::~TROOT nor TCling::~TCling have been run before the assert. We also verified that calling SetUnloaded for that class 'right before' the end/return of main have the same behavior. That confuses me. So we call explicitly from users code `SetUnloaded` when we have properly initialized TROOT and TCling?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:259,usability,behavi,behavior,259,> I updated the stack trace. Note that we verified that in the 'real' case neither TROOT::~TROOT nor TCling::~TCling have been run before the assert. We also verified that calling SetUnloaded for that class 'right before' the end/return of main have the same behavior. That confuses me. So we call explicitly from users code `SetUnloaded` when we have properly initialized TROOT and TCling?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:314,usability,user,users,314,> I updated the stack trace. Note that we verified that in the 'real' case neither TROOT::~TROOT nor TCling::~TCling have been run before the assert. We also verified that calling SetUnloaded for that class 'right before' the end/return of main have the same behavior. That confuses me. So we call explicitly from users code `SetUnloaded` when we have properly initialized TROOT and TCling?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5463:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5463
https://github.com/root-project/root/pull/5463:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5463
https://github.com/root-project/root/pull/5463:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5463
https://github.com/root-project/root/pull/5466:149,deployability,version,version,149,"@hageboeck, do you think this could be safely cherry-picked to the 6.20 branch? I would like to run a production fit and would rather use the stable version of ROOT? I can build ROOT myself, but you can probably answer me quicker if lots of things changed in RooFit/RooStats in master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5466
https://github.com/root-project/root/pull/5466:172,deployability,build,build,172,"@hageboeck, do you think this could be safely cherry-picked to the 6.20 branch? I would like to run a production fit and would rather use the stable version of ROOT? I can build ROOT myself, but you can probably answer me quicker if lots of things changed in RooFit/RooStats in master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5466
https://github.com/root-project/root/pull/5466:149,integrability,version,version,149,"@hageboeck, do you think this could be safely cherry-picked to the 6.20 branch? I would like to run a production fit and would rather use the stable version of ROOT? I can build ROOT myself, but you can probably answer me quicker if lots of things changed in RooFit/RooStats in master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5466
https://github.com/root-project/root/pull/5466:149,modifiability,version,version,149,"@hageboeck, do you think this could be safely cherry-picked to the 6.20 branch? I would like to run a production fit and would rather use the stable version of ROOT? I can build ROOT myself, but you can probably answer me quicker if lots of things changed in RooFit/RooStats in master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5466
https://github.com/root-project/root/pull/5466:39,safety,safe,safely,39,"@hageboeck, do you think this could be safely cherry-picked to the 6.20 branch? I would like to run a production fit and would rather use the stable version of ROOT? I can build ROOT myself, but you can probably answer me quicker if lots of things changed in RooFit/RooStats in master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5466
https://github.com/root-project/root/pull/5466:412,availability,avail,available,412,"@ntadej I tried to cherry-pick, but it only worked with three of the four fixes. Also, I only know that *merging* worked at the moment, but it's not clear whether it compiles or if tests work. I will let it run and see, but to get the full fixes, you will have to wait for ROOT 6.22. The good news is that we will branch off the release candidate this week, so you could use the tag v6-22-00-rc1 or so when it's available.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5466
https://github.com/root-project/root/pull/5466:329,deployability,releas,release,329,"@ntadej I tried to cherry-pick, but it only worked with three of the four fixes. Also, I only know that *merging* worked at the moment, but it's not clear whether it compiles or if tests work. I will let it run and see, but to get the full fixes, you will have to wait for ROOT 6.22. The good news is that we will branch off the release candidate this week, so you could use the tag v6-22-00-rc1 or so when it's available.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5466
https://github.com/root-project/root/pull/5466:412,reliability,availab,available,412,"@ntadej I tried to cherry-pick, but it only worked with three of the four fixes. Also, I only know that *merging* worked at the moment, but it's not clear whether it compiles or if tests work. I will let it run and see, but to get the full fixes, you will have to wait for ROOT 6.22. The good news is that we will branch off the release candidate this week, so you could use the tag v6-22-00-rc1 or so when it's available.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5466
https://github.com/root-project/root/pull/5466:181,safety,test,tests,181,"@ntadej I tried to cherry-pick, but it only worked with three of the four fixes. Also, I only know that *merging* worked at the moment, but it's not clear whether it compiles or if tests work. I will let it run and see, but to get the full fixes, you will have to wait for ROOT 6.22. The good news is that we will branch off the release candidate this week, so you could use the tag v6-22-00-rc1 or so when it's available.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5466
https://github.com/root-project/root/pull/5466:412,safety,avail,available,412,"@ntadej I tried to cherry-pick, but it only worked with three of the four fixes. Also, I only know that *merging* worked at the moment, but it's not clear whether it compiles or if tests work. I will let it run and see, but to get the full fixes, you will have to wait for ROOT 6.22. The good news is that we will branch off the release candidate this week, so you could use the tag v6-22-00-rc1 or so when it's available.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5466
https://github.com/root-project/root/pull/5466:412,security,availab,available,412,"@ntadej I tried to cherry-pick, but it only worked with three of the four fixes. Also, I only know that *merging* worked at the moment, but it's not clear whether it compiles or if tests work. I will let it run and see, but to get the full fixes, you will have to wait for ROOT 6.22. The good news is that we will branch off the release candidate this week, so you could use the tag v6-22-00-rc1 or so when it's available.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5466
https://github.com/root-project/root/pull/5466:181,testability,test,tests,181,"@ntadej I tried to cherry-pick, but it only worked with three of the four fixes. Also, I only know that *merging* worked at the moment, but it's not clear whether it compiles or if tests work. I will let it run and see, but to get the full fixes, you will have to wait for ROOT 6.22. The good news is that we will branch off the release candidate this week, so you could use the tag v6-22-00-rc1 or so when it's available.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5466
https://github.com/root-project/root/pull/5466:149,usability,clear,clear,149,"@ntadej I tried to cherry-pick, but it only worked with three of the four fixes. Also, I only know that *merging* worked at the moment, but it's not clear whether it compiles or if tests work. I will let it run and see, but to get the full fixes, you will have to wait for ROOT 6.22. The good news is that we will branch off the release candidate this week, so you could use the tag v6-22-00-rc1 or so when it's available.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5466
https://github.com/root-project/root/pull/5466:0,deployability,Manag,Managed,0,"Managed to cherry-pick manually and it seems to compile. Will try to run, otherwise I'll wait for 6.22. Thanks for your help!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5466
https://github.com/root-project/root/pull/5466:0,energy efficiency,Manag,Managed,0,"Managed to cherry-pick manually and it seems to compile. Will try to run, otherwise I'll wait for 6.22. Thanks for your help!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5466
https://github.com/root-project/root/pull/5466:0,safety,Manag,Managed,0,"Managed to cherry-pick manually and it seems to compile. Will try to run, otherwise I'll wait for 6.22. Thanks for your help!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5466
https://github.com/root-project/root/pull/5466:120,usability,help,help,120,"Managed to cherry-pick manually and it seems to compile. Will try to run, otherwise I'll wait for 6.22. Thanks for your help!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5466
https://github.com/root-project/root/pull/5470:15,deployability,patch,patch,15,I'll apply the patch manually on the respective node and check that it's fixed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5470
https://github.com/root-project/root/pull/5470:15,safety,patch,patch,15,I'll apply the patch manually on the respective node and check that it's fixed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5470
https://github.com/root-project/root/pull/5470:15,security,patch,patch,15,I'll apply the patch manually on the respective node and check that it's fixed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5470
https://github.com/root-project/root/pull/5470:0,reliability,Doe,Doesn,0,"Doesn't fix the issue, damit. Apparently python still parses the file even though you don't import it explicitely.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5470
https://github.com/root-project/root/pull/5470:261,deployability,releas,releaselevel,261,"Still like this in Python 3.8.2:. ```. Python 3.8.2 (default, Apr 8 2020, 14:31:25) . [GCC 9.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import sys. >>> sys.version_info. sys.version_info(major=3, minor=8, micro=2, releaselevel='final', serial=0). >>> sys.version_info > (3, 8, 2). True. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5470
https://github.com/root-project/root/pull/5470:114,usability,help,help,114,"Still like this in Python 3.8.2:. ```. Python 3.8.2 (default, Apr 8 2020, 14:31:25) . [GCC 9.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import sys. >>> sys.version_info. sys.version_info(major=3, minor=8, micro=2, releaselevel='final', serial=0). >>> sys.version_info > (3, 8, 2). True. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5470
https://github.com/root-project/root/pull/5471:5,availability,failur,failures,5,"Test failures are unrelated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5471
https://github.com/root-project/root/pull/5471:5,deployability,fail,failures,5,"Test failures are unrelated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5471
https://github.com/root-project/root/pull/5471:5,performance,failur,failures,5,"Test failures are unrelated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5471
https://github.com/root-project/root/pull/5471:5,reliability,fail,failures,5,"Test failures are unrelated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5471
https://github.com/root-project/root/pull/5471:0,safety,Test,Test,0,"Test failures are unrelated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5471
https://github.com/root-project/root/pull/5471:0,testability,Test,Test,0,"Test failures are unrelated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5471
https://github.com/root-project/root/pull/5473:23,deployability,fail,failing,23,unrelated python tests failing,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5473
https://github.com/root-project/root/pull/5473:23,reliability,fail,failing,23,unrelated python tests failing,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5473
https://github.com/root-project/root/pull/5473:17,safety,test,tests,17,unrelated python tests failing,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5473
https://github.com/root-project/root/pull/5473:17,testability,test,tests,17,unrelated python tests failing,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5473
https://github.com/root-project/root/pull/5473:60,safety,review,reviewer,60,"This should be merged, but I cannot merge anymore without 1 reviewer approval",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5473
https://github.com/root-project/root/pull/5473:60,testability,review,reviewer,60,"This should be merged, but I cannot merge anymore without 1 reviewer approval",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5473
https://github.com/root-project/root/pull/5474:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5474:371,availability,echo,echo,371,"@Axel-Naumann When a file (or console) has been created without the `FILE_SHARE_READ | FILE_SHARE_WRITE` flags, there is no way to change this, but by closing it and re-opening it (or a new one) . And I suspect that a standard console doesn't have those flags, so when redirecting the output to a file with `.> blah.txt`, all the output is going to the file, without any echo on the console, and when typing `.>` to suppress the redirection, the file contains this kind of errors:. ```. Error 6 in textinput::TerminalDisplayWin attaching to console output: The handle is invalid. Error 6 in textinput::TerminalDisplayWin attaching / getting console info: The handle is invalid. Error 6 in textinput::TerminalDisplayWin writing to output: The handle is invalid. ```. This patch solves those issues, even if I'm not sure if it is the root of the problem (it might be something else deep in the `MetaSema::actOnRedirectCommand` function). NB I don't know if this can have any side effect, but I didn't see any so far...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5474:473,availability,error,errors,473,"@Axel-Naumann When a file (or console) has been created without the `FILE_SHARE_READ | FILE_SHARE_WRITE` flags, there is no way to change this, but by closing it and re-opening it (or a new one) . And I suspect that a standard console doesn't have those flags, so when redirecting the output to a file with `.> blah.txt`, all the output is going to the file, without any echo on the console, and when typing `.>` to suppress the redirection, the file contains this kind of errors:. ```. Error 6 in textinput::TerminalDisplayWin attaching to console output: The handle is invalid. Error 6 in textinput::TerminalDisplayWin attaching / getting console info: The handle is invalid. Error 6 in textinput::TerminalDisplayWin writing to output: The handle is invalid. ```. This patch solves those issues, even if I'm not sure if it is the root of the problem (it might be something else deep in the `MetaSema::actOnRedirectCommand` function). NB I don't know if this can have any side effect, but I didn't see any so far...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5474:487,availability,Error,Error,487,"@Axel-Naumann When a file (or console) has been created without the `FILE_SHARE_READ | FILE_SHARE_WRITE` flags, there is no way to change this, but by closing it and re-opening it (or a new one) . And I suspect that a standard console doesn't have those flags, so when redirecting the output to a file with `.> blah.txt`, all the output is going to the file, without any echo on the console, and when typing `.>` to suppress the redirection, the file contains this kind of errors:. ```. Error 6 in textinput::TerminalDisplayWin attaching to console output: The handle is invalid. Error 6 in textinput::TerminalDisplayWin attaching / getting console info: The handle is invalid. Error 6 in textinput::TerminalDisplayWin writing to output: The handle is invalid. ```. This patch solves those issues, even if I'm not sure if it is the root of the problem (it might be something else deep in the `MetaSema::actOnRedirectCommand` function). NB I don't know if this can have any side effect, but I didn't see any so far...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5474:580,availability,Error,Error,580,"@Axel-Naumann When a file (or console) has been created without the `FILE_SHARE_READ | FILE_SHARE_WRITE` flags, there is no way to change this, but by closing it and re-opening it (or a new one) . And I suspect that a standard console doesn't have those flags, so when redirecting the output to a file with `.> blah.txt`, all the output is going to the file, without any echo on the console, and when typing `.>` to suppress the redirection, the file contains this kind of errors:. ```. Error 6 in textinput::TerminalDisplayWin attaching to console output: The handle is invalid. Error 6 in textinput::TerminalDisplayWin attaching / getting console info: The handle is invalid. Error 6 in textinput::TerminalDisplayWin writing to output: The handle is invalid. ```. This patch solves those issues, even if I'm not sure if it is the root of the problem (it might be something else deep in the `MetaSema::actOnRedirectCommand` function). NB I don't know if this can have any side effect, but I didn't see any so far...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5474:678,availability,Error,Error,678,"@Axel-Naumann When a file (or console) has been created without the `FILE_SHARE_READ | FILE_SHARE_WRITE` flags, there is no way to change this, but by closing it and re-opening it (or a new one) . And I suspect that a standard console doesn't have those flags, so when redirecting the output to a file with `.> blah.txt`, all the output is going to the file, without any echo on the console, and when typing `.>` to suppress the redirection, the file contains this kind of errors:. ```. Error 6 in textinput::TerminalDisplayWin attaching to console output: The handle is invalid. Error 6 in textinput::TerminalDisplayWin attaching / getting console info: The handle is invalid. Error 6 in textinput::TerminalDisplayWin writing to output: The handle is invalid. ```. This patch solves those issues, even if I'm not sure if it is the root of the problem (it might be something else deep in the `MetaSema::actOnRedirectCommand` function). NB I don't know if this can have any side effect, but I didn't see any so far...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5474:451,deployability,contain,contains,451,"@Axel-Naumann When a file (or console) has been created without the `FILE_SHARE_READ | FILE_SHARE_WRITE` flags, there is no way to change this, but by closing it and re-opening it (or a new one) . And I suspect that a standard console doesn't have those flags, so when redirecting the output to a file with `.> blah.txt`, all the output is going to the file, without any echo on the console, and when typing `.>` to suppress the redirection, the file contains this kind of errors:. ```. Error 6 in textinput::TerminalDisplayWin attaching to console output: The handle is invalid. Error 6 in textinput::TerminalDisplayWin attaching / getting console info: The handle is invalid. Error 6 in textinput::TerminalDisplayWin writing to output: The handle is invalid. ```. This patch solves those issues, even if I'm not sure if it is the root of the problem (it might be something else deep in the `MetaSema::actOnRedirectCommand` function). NB I don't know if this can have any side effect, but I didn't see any so far...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5474:771,deployability,patch,patch,771,"@Axel-Naumann When a file (or console) has been created without the `FILE_SHARE_READ | FILE_SHARE_WRITE` flags, there is no way to change this, but by closing it and re-opening it (or a new one) . And I suspect that a standard console doesn't have those flags, so when redirecting the output to a file with `.> blah.txt`, all the output is going to the file, without any echo on the console, and when typing `.>` to suppress the redirection, the file contains this kind of errors:. ```. Error 6 in textinput::TerminalDisplayWin attaching to console output: The handle is invalid. Error 6 in textinput::TerminalDisplayWin attaching / getting console info: The handle is invalid. Error 6 in textinput::TerminalDisplayWin writing to output: The handle is invalid. ```. This patch solves those issues, even if I'm not sure if it is the root of the problem (it might be something else deep in the `MetaSema::actOnRedirectCommand` function). NB I don't know if this can have any side effect, but I didn't see any so far...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5474:218,interoperability,standard,standard,218,"@Axel-Naumann When a file (or console) has been created without the `FILE_SHARE_READ | FILE_SHARE_WRITE` flags, there is no way to change this, but by closing it and re-opening it (or a new one) . And I suspect that a standard console doesn't have those flags, so when redirecting the output to a file with `.> blah.txt`, all the output is going to the file, without any echo on the console, and when typing `.>` to suppress the redirection, the file contains this kind of errors:. ```. Error 6 in textinput::TerminalDisplayWin attaching to console output: The handle is invalid. Error 6 in textinput::TerminalDisplayWin attaching / getting console info: The handle is invalid. Error 6 in textinput::TerminalDisplayWin writing to output: The handle is invalid. ```. This patch solves those issues, even if I'm not sure if it is the root of the problem (it might be something else deep in the `MetaSema::actOnRedirectCommand` function). NB I don't know if this can have any side effect, but I didn't see any so far...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5474:473,performance,error,errors,473,"@Axel-Naumann When a file (or console) has been created without the `FILE_SHARE_READ | FILE_SHARE_WRITE` flags, there is no way to change this, but by closing it and re-opening it (or a new one) . And I suspect that a standard console doesn't have those flags, so when redirecting the output to a file with `.> blah.txt`, all the output is going to the file, without any echo on the console, and when typing `.>` to suppress the redirection, the file contains this kind of errors:. ```. Error 6 in textinput::TerminalDisplayWin attaching to console output: The handle is invalid. Error 6 in textinput::TerminalDisplayWin attaching / getting console info: The handle is invalid. Error 6 in textinput::TerminalDisplayWin writing to output: The handle is invalid. ```. This patch solves those issues, even if I'm not sure if it is the root of the problem (it might be something else deep in the `MetaSema::actOnRedirectCommand` function). NB I don't know if this can have any side effect, but I didn't see any so far...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5474:487,performance,Error,Error,487,"@Axel-Naumann When a file (or console) has been created without the `FILE_SHARE_READ | FILE_SHARE_WRITE` flags, there is no way to change this, but by closing it and re-opening it (or a new one) . And I suspect that a standard console doesn't have those flags, so when redirecting the output to a file with `.> blah.txt`, all the output is going to the file, without any echo on the console, and when typing `.>` to suppress the redirection, the file contains this kind of errors:. ```. Error 6 in textinput::TerminalDisplayWin attaching to console output: The handle is invalid. Error 6 in textinput::TerminalDisplayWin attaching / getting console info: The handle is invalid. Error 6 in textinput::TerminalDisplayWin writing to output: The handle is invalid. ```. This patch solves those issues, even if I'm not sure if it is the root of the problem (it might be something else deep in the `MetaSema::actOnRedirectCommand` function). NB I don't know if this can have any side effect, but I didn't see any so far...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5474:580,performance,Error,Error,580,"@Axel-Naumann When a file (or console) has been created without the `FILE_SHARE_READ | FILE_SHARE_WRITE` flags, there is no way to change this, but by closing it and re-opening it (or a new one) . And I suspect that a standard console doesn't have those flags, so when redirecting the output to a file with `.> blah.txt`, all the output is going to the file, without any echo on the console, and when typing `.>` to suppress the redirection, the file contains this kind of errors:. ```. Error 6 in textinput::TerminalDisplayWin attaching to console output: The handle is invalid. Error 6 in textinput::TerminalDisplayWin attaching / getting console info: The handle is invalid. Error 6 in textinput::TerminalDisplayWin writing to output: The handle is invalid. ```. This patch solves those issues, even if I'm not sure if it is the root of the problem (it might be something else deep in the `MetaSema::actOnRedirectCommand` function). NB I don't know if this can have any side effect, but I didn't see any so far...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5474:678,performance,Error,Error,678,"@Axel-Naumann When a file (or console) has been created without the `FILE_SHARE_READ | FILE_SHARE_WRITE` flags, there is no way to change this, but by closing it and re-opening it (or a new one) . And I suspect that a standard console doesn't have those flags, so when redirecting the output to a file with `.> blah.txt`, all the output is going to the file, without any echo on the console, and when typing `.>` to suppress the redirection, the file contains this kind of errors:. ```. Error 6 in textinput::TerminalDisplayWin attaching to console output: The handle is invalid. Error 6 in textinput::TerminalDisplayWin attaching / getting console info: The handle is invalid. Error 6 in textinput::TerminalDisplayWin writing to output: The handle is invalid. ```. This patch solves those issues, even if I'm not sure if it is the root of the problem (it might be something else deep in the `MetaSema::actOnRedirectCommand` function). NB I don't know if this can have any side effect, but I didn't see any so far...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5474:235,reliability,doe,doesn,235,"@Axel-Naumann When a file (or console) has been created without the `FILE_SHARE_READ | FILE_SHARE_WRITE` flags, there is no way to change this, but by closing it and re-opening it (or a new one) . And I suspect that a standard console doesn't have those flags, so when redirecting the output to a file with `.> blah.txt`, all the output is going to the file, without any echo on the console, and when typing `.>` to suppress the redirection, the file contains this kind of errors:. ```. Error 6 in textinput::TerminalDisplayWin attaching to console output: The handle is invalid. Error 6 in textinput::TerminalDisplayWin attaching / getting console info: The handle is invalid. Error 6 in textinput::TerminalDisplayWin writing to output: The handle is invalid. ```. This patch solves those issues, even if I'm not sure if it is the root of the problem (it might be something else deep in the `MetaSema::actOnRedirectCommand` function). NB I don't know if this can have any side effect, but I didn't see any so far...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5474:473,safety,error,errors,473,"@Axel-Naumann When a file (or console) has been created without the `FILE_SHARE_READ | FILE_SHARE_WRITE` flags, there is no way to change this, but by closing it and re-opening it (or a new one) . And I suspect that a standard console doesn't have those flags, so when redirecting the output to a file with `.> blah.txt`, all the output is going to the file, without any echo on the console, and when typing `.>` to suppress the redirection, the file contains this kind of errors:. ```. Error 6 in textinput::TerminalDisplayWin attaching to console output: The handle is invalid. Error 6 in textinput::TerminalDisplayWin attaching / getting console info: The handle is invalid. Error 6 in textinput::TerminalDisplayWin writing to output: The handle is invalid. ```. This patch solves those issues, even if I'm not sure if it is the root of the problem (it might be something else deep in the `MetaSema::actOnRedirectCommand` function). NB I don't know if this can have any side effect, but I didn't see any so far...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5474:487,safety,Error,Error,487,"@Axel-Naumann When a file (or console) has been created without the `FILE_SHARE_READ | FILE_SHARE_WRITE` flags, there is no way to change this, but by closing it and re-opening it (or a new one) . And I suspect that a standard console doesn't have those flags, so when redirecting the output to a file with `.> blah.txt`, all the output is going to the file, without any echo on the console, and when typing `.>` to suppress the redirection, the file contains this kind of errors:. ```. Error 6 in textinput::TerminalDisplayWin attaching to console output: The handle is invalid. Error 6 in textinput::TerminalDisplayWin attaching / getting console info: The handle is invalid. Error 6 in textinput::TerminalDisplayWin writing to output: The handle is invalid. ```. This patch solves those issues, even if I'm not sure if it is the root of the problem (it might be something else deep in the `MetaSema::actOnRedirectCommand` function). NB I don't know if this can have any side effect, but I didn't see any so far...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5474:580,safety,Error,Error,580,"@Axel-Naumann When a file (or console) has been created without the `FILE_SHARE_READ | FILE_SHARE_WRITE` flags, there is no way to change this, but by closing it and re-opening it (or a new one) . And I suspect that a standard console doesn't have those flags, so when redirecting the output to a file with `.> blah.txt`, all the output is going to the file, without any echo on the console, and when typing `.>` to suppress the redirection, the file contains this kind of errors:. ```. Error 6 in textinput::TerminalDisplayWin attaching to console output: The handle is invalid. Error 6 in textinput::TerminalDisplayWin attaching / getting console info: The handle is invalid. Error 6 in textinput::TerminalDisplayWin writing to output: The handle is invalid. ```. This patch solves those issues, even if I'm not sure if it is the root of the problem (it might be something else deep in the `MetaSema::actOnRedirectCommand` function). NB I don't know if this can have any side effect, but I didn't see any so far...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5474:678,safety,Error,Error,678,"@Axel-Naumann When a file (or console) has been created without the `FILE_SHARE_READ | FILE_SHARE_WRITE` flags, there is no way to change this, but by closing it and re-opening it (or a new one) . And I suspect that a standard console doesn't have those flags, so when redirecting the output to a file with `.> blah.txt`, all the output is going to the file, without any echo on the console, and when typing `.>` to suppress the redirection, the file contains this kind of errors:. ```. Error 6 in textinput::TerminalDisplayWin attaching to console output: The handle is invalid. Error 6 in textinput::TerminalDisplayWin attaching / getting console info: The handle is invalid. Error 6 in textinput::TerminalDisplayWin writing to output: The handle is invalid. ```. This patch solves those issues, even if I'm not sure if it is the root of the problem (it might be something else deep in the `MetaSema::actOnRedirectCommand` function). NB I don't know if this can have any side effect, but I didn't see any so far...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5474:771,safety,patch,patch,771,"@Axel-Naumann When a file (or console) has been created without the `FILE_SHARE_READ | FILE_SHARE_WRITE` flags, there is no way to change this, but by closing it and re-opening it (or a new one) . And I suspect that a standard console doesn't have those flags, so when redirecting the output to a file with `.> blah.txt`, all the output is going to the file, without any echo on the console, and when typing `.>` to suppress the redirection, the file contains this kind of errors:. ```. Error 6 in textinput::TerminalDisplayWin attaching to console output: The handle is invalid. Error 6 in textinput::TerminalDisplayWin attaching / getting console info: The handle is invalid. Error 6 in textinput::TerminalDisplayWin writing to output: The handle is invalid. ```. This patch solves those issues, even if I'm not sure if it is the root of the problem (it might be something else deep in the `MetaSema::actOnRedirectCommand` function). NB I don't know if this can have any side effect, but I didn't see any so far...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5474:771,security,patch,patch,771,"@Axel-Naumann When a file (or console) has been created without the `FILE_SHARE_READ | FILE_SHARE_WRITE` flags, there is no way to change this, but by closing it and re-opening it (or a new one) . And I suspect that a standard console doesn't have those flags, so when redirecting the output to a file with `.> blah.txt`, all the output is going to the file, without any echo on the console, and when typing `.>` to suppress the redirection, the file contains this kind of errors:. ```. Error 6 in textinput::TerminalDisplayWin attaching to console output: The handle is invalid. Error 6 in textinput::TerminalDisplayWin attaching / getting console info: The handle is invalid. Error 6 in textinput::TerminalDisplayWin writing to output: The handle is invalid. ```. This patch solves those issues, even if I'm not sure if it is the root of the problem (it might be something else deep in the `MetaSema::actOnRedirectCommand` function). NB I don't know if this can have any side effect, but I didn't see any so far...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5474:473,usability,error,errors,473,"@Axel-Naumann When a file (or console) has been created without the `FILE_SHARE_READ | FILE_SHARE_WRITE` flags, there is no way to change this, but by closing it and re-opening it (or a new one) . And I suspect that a standard console doesn't have those flags, so when redirecting the output to a file with `.> blah.txt`, all the output is going to the file, without any echo on the console, and when typing `.>` to suppress the redirection, the file contains this kind of errors:. ```. Error 6 in textinput::TerminalDisplayWin attaching to console output: The handle is invalid. Error 6 in textinput::TerminalDisplayWin attaching / getting console info: The handle is invalid. Error 6 in textinput::TerminalDisplayWin writing to output: The handle is invalid. ```. This patch solves those issues, even if I'm not sure if it is the root of the problem (it might be something else deep in the `MetaSema::actOnRedirectCommand` function). NB I don't know if this can have any side effect, but I didn't see any so far...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5474:487,usability,Error,Error,487,"@Axel-Naumann When a file (or console) has been created without the `FILE_SHARE_READ | FILE_SHARE_WRITE` flags, there is no way to change this, but by closing it and re-opening it (or a new one) . And I suspect that a standard console doesn't have those flags, so when redirecting the output to a file with `.> blah.txt`, all the output is going to the file, without any echo on the console, and when typing `.>` to suppress the redirection, the file contains this kind of errors:. ```. Error 6 in textinput::TerminalDisplayWin attaching to console output: The handle is invalid. Error 6 in textinput::TerminalDisplayWin attaching / getting console info: The handle is invalid. Error 6 in textinput::TerminalDisplayWin writing to output: The handle is invalid. ```. This patch solves those issues, even if I'm not sure if it is the root of the problem (it might be something else deep in the `MetaSema::actOnRedirectCommand` function). NB I don't know if this can have any side effect, but I didn't see any so far...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5474:580,usability,Error,Error,580,"@Axel-Naumann When a file (or console) has been created without the `FILE_SHARE_READ | FILE_SHARE_WRITE` flags, there is no way to change this, but by closing it and re-opening it (or a new one) . And I suspect that a standard console doesn't have those flags, so when redirecting the output to a file with `.> blah.txt`, all the output is going to the file, without any echo on the console, and when typing `.>` to suppress the redirection, the file contains this kind of errors:. ```. Error 6 in textinput::TerminalDisplayWin attaching to console output: The handle is invalid. Error 6 in textinput::TerminalDisplayWin attaching / getting console info: The handle is invalid. Error 6 in textinput::TerminalDisplayWin writing to output: The handle is invalid. ```. This patch solves those issues, even if I'm not sure if it is the root of the problem (it might be something else deep in the `MetaSema::actOnRedirectCommand` function). NB I don't know if this can have any side effect, but I didn't see any so far...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5474:678,usability,Error,Error,678,"@Axel-Naumann When a file (or console) has been created without the `FILE_SHARE_READ | FILE_SHARE_WRITE` flags, there is no way to change this, but by closing it and re-opening it (or a new one) . And I suspect that a standard console doesn't have those flags, so when redirecting the output to a file with `.> blah.txt`, all the output is going to the file, without any echo on the console, and when typing `.>` to suppress the redirection, the file contains this kind of errors:. ```. Error 6 in textinput::TerminalDisplayWin attaching to console output: The handle is invalid. Error 6 in textinput::TerminalDisplayWin attaching / getting console info: The handle is invalid. Error 6 in textinput::TerminalDisplayWin writing to output: The handle is invalid. ```. This patch solves those issues, even if I'm not sure if it is the root of the problem (it might be something else deep in the `MetaSema::actOnRedirectCommand` function). NB I don't know if this can have any side effect, but I didn't see any so far...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5474:23,deployability,updat,update,23,"Great, thanks! Can you update the commit message (`git commit --amend; git push -f`) to include these findings? That makes the motivation for the change much clearer!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5474:41,integrability,messag,message,41,"Great, thanks! Can you update the commit message (`git commit --amend; git push -f`) to include these findings? That makes the motivation for the change much clearer!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5474:41,interoperability,messag,message,41,"Great, thanks! Can you update the commit message (`git commit --amend; git push -f`) to include these findings? That makes the motivation for the change much clearer!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5474:23,safety,updat,update,23,"Great, thanks! Can you update the commit message (`git commit --amend; git push -f`) to include these findings? That makes the motivation for the change much clearer!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5474:23,security,updat,update,23,"Great, thanks! Can you update the commit message (`git commit --amend; git push -f`) to include these findings? That makes the motivation for the change much clearer!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5474:158,usability,clear,clearer,158,"Great, thanks! Can you update the commit message (`git commit --amend; git push -f`) to include these findings? That makes the motivation for the change much clearer!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5474:25,deployability,updat,update,25,"> Great, thanks! Can you update the commit message (`git commit --amend; git push -f`) to include these findings? That makes the motivation for the change much clearer! Done. thanks @Axel-Naumann ! Is it OK like this now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5474:43,integrability,messag,message,43,"> Great, thanks! Can you update the commit message (`git commit --amend; git push -f`) to include these findings? That makes the motivation for the change much clearer! Done. thanks @Axel-Naumann ! Is it OK like this now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5474:43,interoperability,messag,message,43,"> Great, thanks! Can you update the commit message (`git commit --amend; git push -f`) to include these findings? That makes the motivation for the change much clearer! Done. thanks @Axel-Naumann ! Is it OK like this now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5474:25,safety,updat,update,25,"> Great, thanks! Can you update the commit message (`git commit --amend; git push -f`) to include these findings? That makes the motivation for the change much clearer! Done. thanks @Axel-Naumann ! Is it OK like this now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5474:25,security,updat,update,25,"> Great, thanks! Can you update the commit message (`git commit --amend; git push -f`) to include these findings? That makes the motivation for the change much clearer! Done. thanks @Axel-Naumann ! Is it OK like this now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5474:160,usability,clear,clearer,160,"> Great, thanks! Can you update the commit message (`git commit --amend; git push -f`) to include these findings? That makes the motivation for the change much clearer! Done. thanks @Axel-Naumann ! Is it OK like this now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5474
https://github.com/root-project/root/pull/5475:0,availability,Error,Errors,0,Errors are unrelated. Merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5475
https://github.com/root-project/root/pull/5475:0,performance,Error,Errors,0,Errors are unrelated. Merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5475
https://github.com/root-project/root/pull/5475:0,safety,Error,Errors,0,Errors are unrelated. Merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5475
https://github.com/root-project/root/pull/5475:0,usability,Error,Errors,0,Errors are unrelated. Merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5475
https://github.com/root-project/root/pull/5477:9,availability,failur,failures,9,"The test failures seems to come from a slightly difference in the Poisson implementation between TMath::Poisson(n,mu) and ROOT::Math::poisson_pdf(n,mu) for n = 0. In teh first case it was computing 1./exp(mu) while in the second exp(-mu). For small mu (e.g. mu= 0.001) the results is different at one bit level. exp(-mu) is more correct and I think we should then update the tests reference files",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5477
https://github.com/root-project/root/pull/5477:39,availability,sli,slightly,39,"The test failures seems to come from a slightly difference in the Poisson implementation between TMath::Poisson(n,mu) and ROOT::Math::poisson_pdf(n,mu) for n = 0. In teh first case it was computing 1./exp(mu) while in the second exp(-mu). For small mu (e.g. mu= 0.001) the results is different at one bit level. exp(-mu) is more correct and I think we should then update the tests reference files",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5477
https://github.com/root-project/root/pull/5477:9,deployability,fail,failures,9,"The test failures seems to come from a slightly difference in the Poisson implementation between TMath::Poisson(n,mu) and ROOT::Math::poisson_pdf(n,mu) for n = 0. In teh first case it was computing 1./exp(mu) while in the second exp(-mu). For small mu (e.g. mu= 0.001) the results is different at one bit level. exp(-mu) is more correct and I think we should then update the tests reference files",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5477
https://github.com/root-project/root/pull/5477:364,deployability,updat,update,364,"The test failures seems to come from a slightly difference in the Poisson implementation between TMath::Poisson(n,mu) and ROOT::Math::poisson_pdf(n,mu) for n = 0. In teh first case it was computing 1./exp(mu) while in the second exp(-mu). For small mu (e.g. mu= 0.001) the results is different at one bit level. exp(-mu) is more correct and I think we should then update the tests reference files",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5477
https://github.com/root-project/root/pull/5477:9,performance,failur,failures,9,"The test failures seems to come from a slightly difference in the Poisson implementation between TMath::Poisson(n,mu) and ROOT::Math::poisson_pdf(n,mu) for n = 0. In teh first case it was computing 1./exp(mu) while in the second exp(-mu). For small mu (e.g. mu= 0.001) the results is different at one bit level. exp(-mu) is more correct and I think we should then update the tests reference files",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5477
https://github.com/root-project/root/pull/5477:9,reliability,fail,failures,9,"The test failures seems to come from a slightly difference in the Poisson implementation between TMath::Poisson(n,mu) and ROOT::Math::poisson_pdf(n,mu) for n = 0. In teh first case it was computing 1./exp(mu) while in the second exp(-mu). For small mu (e.g. mu= 0.001) the results is different at one bit level. exp(-mu) is more correct and I think we should then update the tests reference files",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5477
https://github.com/root-project/root/pull/5477:39,reliability,sli,slightly,39,"The test failures seems to come from a slightly difference in the Poisson implementation between TMath::Poisson(n,mu) and ROOT::Math::poisson_pdf(n,mu) for n = 0. In teh first case it was computing 1./exp(mu) while in the second exp(-mu). For small mu (e.g. mu= 0.001) the results is different at one bit level. exp(-mu) is more correct and I think we should then update the tests reference files",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5477
https://github.com/root-project/root/pull/5477:66,reliability,Poisson,Poisson,66,"The test failures seems to come from a slightly difference in the Poisson implementation between TMath::Poisson(n,mu) and ROOT::Math::poisson_pdf(n,mu) for n = 0. In teh first case it was computing 1./exp(mu) while in the second exp(-mu). For small mu (e.g. mu= 0.001) the results is different at one bit level. exp(-mu) is more correct and I think we should then update the tests reference files",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5477
https://github.com/root-project/root/pull/5477:104,reliability,Poisson,Poisson,104,"The test failures seems to come from a slightly difference in the Poisson implementation between TMath::Poisson(n,mu) and ROOT::Math::poisson_pdf(n,mu) for n = 0. In teh first case it was computing 1./exp(mu) while in the second exp(-mu). For small mu (e.g. mu= 0.001) the results is different at one bit level. exp(-mu) is more correct and I think we should then update the tests reference files",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5477
https://github.com/root-project/root/pull/5477:4,safety,test,test,4,"The test failures seems to come from a slightly difference in the Poisson implementation between TMath::Poisson(n,mu) and ROOT::Math::poisson_pdf(n,mu) for n = 0. In teh first case it was computing 1./exp(mu) while in the second exp(-mu). For small mu (e.g. mu= 0.001) the results is different at one bit level. exp(-mu) is more correct and I think we should then update the tests reference files",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5477
https://github.com/root-project/root/pull/5477:364,safety,updat,update,364,"The test failures seems to come from a slightly difference in the Poisson implementation between TMath::Poisson(n,mu) and ROOT::Math::poisson_pdf(n,mu) for n = 0. In teh first case it was computing 1./exp(mu) while in the second exp(-mu). For small mu (e.g. mu= 0.001) the results is different at one bit level. exp(-mu) is more correct and I think we should then update the tests reference files",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5477
https://github.com/root-project/root/pull/5477:375,safety,test,tests,375,"The test failures seems to come from a slightly difference in the Poisson implementation between TMath::Poisson(n,mu) and ROOT::Math::poisson_pdf(n,mu) for n = 0. In teh first case it was computing 1./exp(mu) while in the second exp(-mu). For small mu (e.g. mu= 0.001) the results is different at one bit level. exp(-mu) is more correct and I think we should then update the tests reference files",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5477
https://github.com/root-project/root/pull/5477:364,security,updat,update,364,"The test failures seems to come from a slightly difference in the Poisson implementation between TMath::Poisson(n,mu) and ROOT::Math::poisson_pdf(n,mu) for n = 0. In teh first case it was computing 1./exp(mu) while in the second exp(-mu). For small mu (e.g. mu= 0.001) the results is different at one bit level. exp(-mu) is more correct and I think we should then update the tests reference files",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5477
https://github.com/root-project/root/pull/5477:4,testability,test,test,4,"The test failures seems to come from a slightly difference in the Poisson implementation between TMath::Poisson(n,mu) and ROOT::Math::poisson_pdf(n,mu) for n = 0. In teh first case it was computing 1./exp(mu) while in the second exp(-mu). For small mu (e.g. mu= 0.001) the results is different at one bit level. exp(-mu) is more correct and I think we should then update the tests reference files",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5477
https://github.com/root-project/root/pull/5477:375,testability,test,tests,375,"The test failures seems to come from a slightly difference in the Poisson implementation between TMath::Poisson(n,mu) and ROOT::Math::poisson_pdf(n,mu) for n = 0. In teh first case it was computing 1./exp(mu) while in the second exp(-mu). For small mu (e.g. mu= 0.001) the results is different at one bit level. exp(-mu) is more correct and I think we should then update the tests reference files",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5477
https://github.com/root-project/root/pull/5477:111,performance,time,time,111,"That sounds correct, but I'm surprised that the tests are strict enough to catch such differences. I need some time to have a detailed look.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5477
https://github.com/root-project/root/pull/5477:48,safety,test,tests,48,"That sounds correct, but I'm surprised that the tests are strict enough to catch such differences. I need some time to have a detailed look.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5477
https://github.com/root-project/root/pull/5477:48,testability,test,tests,48,"That sounds correct, but I'm surprised that the tests are strict enough to catch such differences. I need some time to have a detailed look.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5477
https://github.com/root-project/root/pull/5477:412,integrability,event,events,412,"You are right ! The difference in the test is that roofit uses TMath::Poisson(h,mu) con n in same case a real number. The fix I have put rounds the n to an integer and that is the difference. . Now, TMath::Poisson(x,mu) with x real is not anymore a Poisson distribution, it is something else. and I hope it is when needed correctly normalized in RooFit. But it is used in the case of Asimov data set or weighted events.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5477
https://github.com/root-project/root/pull/5477:257,interoperability,distribut,distribution,257,"You are right ! The difference in the test is that roofit uses TMath::Poisson(h,mu) con n in same case a real number. The fix I have put rounds the n to an integer and that is the difference. . Now, TMath::Poisson(x,mu) with x real is not anymore a Poisson distribution, it is something else. and I hope it is when needed correctly normalized in RooFit. But it is used in the case of Asimov data set or weighted events.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5477
https://github.com/root-project/root/pull/5477:70,reliability,Poisson,Poisson,70,"You are right ! The difference in the test is that roofit uses TMath::Poisson(h,mu) con n in same case a real number. The fix I have put rounds the n to an integer and that is the difference. . Now, TMath::Poisson(x,mu) with x real is not anymore a Poisson distribution, it is something else. and I hope it is when needed correctly normalized in RooFit. But it is used in the case of Asimov data set or weighted events.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5477
https://github.com/root-project/root/pull/5477:206,reliability,Poisson,Poisson,206,"You are right ! The difference in the test is that roofit uses TMath::Poisson(h,mu) con n in same case a real number. The fix I have put rounds the n to an integer and that is the difference. . Now, TMath::Poisson(x,mu) with x real is not anymore a Poisson distribution, it is something else. and I hope it is when needed correctly normalized in RooFit. But it is used in the case of Asimov data set or weighted events.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5477
https://github.com/root-project/root/pull/5477:249,reliability,Poisson,Poisson,249,"You are right ! The difference in the test is that roofit uses TMath::Poisson(h,mu) con n in same case a real number. The fix I have put rounds the n to an integer and that is the difference. . Now, TMath::Poisson(x,mu) with x real is not anymore a Poisson distribution, it is something else. and I hope it is when needed correctly normalized in RooFit. But it is used in the case of Asimov data set or weighted events.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5477
https://github.com/root-project/root/pull/5477:38,safety,test,test,38,"You are right ! The difference in the test is that roofit uses TMath::Poisson(h,mu) con n in same case a real number. The fix I have put rounds the n to an integer and that is the difference. . Now, TMath::Poisson(x,mu) with x real is not anymore a Poisson distribution, it is something else. and I hope it is when needed correctly normalized in RooFit. But it is used in the case of Asimov data set or weighted events.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5477
https://github.com/root-project/root/pull/5477:38,testability,test,test,38,"You are right ! The difference in the test is that roofit uses TMath::Poisson(h,mu) con n in same case a real number. The fix I have put rounds the n to an integer and that is the difference. . Now, TMath::Poisson(x,mu) with x real is not anymore a Poisson distribution, it is something else. and I hope it is when needed correctly normalized in RooFit. But it is used in the case of Asimov data set or weighted events.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5477
https://github.com/root-project/root/pull/5478:32,availability,failur,failures,32,"This PR should fix the JupyROOT failures on MacOS 10.15, such as:. https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/5479/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/. by ensuring `libJupyROOT` is generated with the `.so` suffix as the other libraries.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5478
https://github.com/root-project/root/pull/5478:82,availability,servic,services,82,"This PR should fix the JupyROOT failures on MacOS 10.15, such as:. https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/5479/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/. by ensuring `libJupyROOT` is generated with the `.so` suffix as the other libraries.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5478
https://github.com/root-project/root/pull/5478:32,deployability,fail,failures,32,"This PR should fix the JupyROOT failures on MacOS 10.15, such as:. https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/5479/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/. by ensuring `libJupyROOT` is generated with the `.so` suffix as the other libraries.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5478
https://github.com/root-project/root/pull/5478:82,deployability,servic,services,82,"This PR should fix the JupyROOT failures on MacOS 10.15, such as:. https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/5479/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/. by ensuring `libJupyROOT` is generated with the `.so` suffix as the other libraries.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5478
https://github.com/root-project/root/pull/5478:138,deployability,build,build,138,"This PR should fix the JupyROOT failures on MacOS 10.15, such as:. https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/5479/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/. by ensuring `libJupyROOT` is generated with the `.so` suffix as the other libraries.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5478
https://github.com/root-project/root/pull/5478:82,integrability,servic,services,82,"This PR should fix the JupyROOT failures on MacOS 10.15, such as:. https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/5479/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/. by ensuring `libJupyROOT` is generated with the `.so` suffix as the other libraries.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5478
https://github.com/root-project/root/pull/5478:82,modifiability,servic,services,82,"This PR should fix the JupyROOT failures on MacOS 10.15, such as:. https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/5479/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/. by ensuring `libJupyROOT` is generated with the `.so` suffix as the other libraries.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5478
https://github.com/root-project/root/pull/5478:32,performance,failur,failures,32,"This PR should fix the JupyROOT failures on MacOS 10.15, such as:. https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/5479/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/. by ensuring `libJupyROOT` is generated with the `.so` suffix as the other libraries.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5478
https://github.com/root-project/root/pull/5478:32,reliability,fail,failures,32,"This PR should fix the JupyROOT failures on MacOS 10.15, such as:. https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/5479/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/. by ensuring `libJupyROOT` is generated with the `.so` suffix as the other libraries.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5478
https://github.com/root-project/root/pull/5478:149,safety,test,testReport,149,"This PR should fix the JupyROOT failures on MacOS 10.15, such as:. https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/5479/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/. by ensuring `libJupyROOT` is generated with the `.so` suffix as the other libraries.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5478
https://github.com/root-project/root/pull/5478:149,testability,test,testReport,149,"This PR should fix the JupyROOT failures on MacOS 10.15, such as:. https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/5479/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/. by ensuring `libJupyROOT` is generated with the `.so` suffix as the other libraries.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5478
https://github.com/root-project/root/pull/5478:14,availability,failur,failures,14,"The last test failures are different to the ones this PR wanted to solve. They are related to not finding ipython, similar to what was observed in the 32 bit machine:. `sh: ipython3: command not found`. So it has nothing to do with the changes of this PR. I am therefore merging to fix the first issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5478
https://github.com/root-project/root/pull/5478:14,deployability,fail,failures,14,"The last test failures are different to the ones this PR wanted to solve. They are related to not finding ipython, similar to what was observed in the 32 bit machine:. `sh: ipython3: command not found`. So it has nothing to do with the changes of this PR. I am therefore merging to fix the first issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5478
https://github.com/root-project/root/pull/5478:135,deployability,observ,observed,135,"The last test failures are different to the ones this PR wanted to solve. They are related to not finding ipython, similar to what was observed in the 32 bit machine:. `sh: ipython3: command not found`. So it has nothing to do with the changes of this PR. I am therefore merging to fix the first issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5478
https://github.com/root-project/root/pull/5478:14,performance,failur,failures,14,"The last test failures are different to the ones this PR wanted to solve. They are related to not finding ipython, similar to what was observed in the 32 bit machine:. `sh: ipython3: command not found`. So it has nothing to do with the changes of this PR. I am therefore merging to fix the first issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5478
https://github.com/root-project/root/pull/5478:14,reliability,fail,failures,14,"The last test failures are different to the ones this PR wanted to solve. They are related to not finding ipython, similar to what was observed in the 32 bit machine:. `sh: ipython3: command not found`. So it has nothing to do with the changes of this PR. I am therefore merging to fix the first issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5478
https://github.com/root-project/root/pull/5478:9,safety,test,test,9,"The last test failures are different to the ones this PR wanted to solve. They are related to not finding ipython, similar to what was observed in the 32 bit machine:. `sh: ipython3: command not found`. So it has nothing to do with the changes of this PR. I am therefore merging to fix the first issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5478
https://github.com/root-project/root/pull/5478:9,testability,test,test,9,"The last test failures are different to the ones this PR wanted to solve. They are related to not finding ipython, similar to what was observed in the 32 bit machine:. `sh: ipython3: command not found`. So it has nothing to do with the changes of this PR. I am therefore merging to fix the first issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5478
https://github.com/root-project/root/pull/5478:135,testability,observ,observed,135,"The last test failures are different to the ones this PR wanted to solve. They are related to not finding ipython, similar to what was observed in the 32 bit machine:. `sh: ipython3: command not found`. So it has nothing to do with the changes of this PR. I am therefore merging to fix the first issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5478
https://github.com/root-project/root/pull/5478:183,usability,command,command,183,"The last test failures are different to the ones this PR wanted to solve. They are related to not finding ipython, similar to what was observed in the 32 bit machine:. `sh: ipython3: command not found`. So it has nothing to do with the changes of this PR. I am therefore merging to fix the first issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5478
https://github.com/root-project/root/pull/5481:53,availability,error,error,53,@Axel-Naumann Is that a possible replacement for the error function in core/clingutils/res/TClingUtils.h ? (see the PR #4717),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5481
https://github.com/root-project/root/pull/5481:71,energy efficiency,core,core,71,@Axel-Naumann Is that a possible replacement for the error function in core/clingutils/res/TClingUtils.h ? (see the PR #4717),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5481
https://github.com/root-project/root/pull/5481:53,performance,error,error,53,@Axel-Naumann Is that a possible replacement for the error function in core/clingutils/res/TClingUtils.h ? (see the PR #4717),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5481
https://github.com/root-project/root/pull/5481:53,safety,error,error,53,@Axel-Naumann Is that a possible replacement for the error function in core/clingutils/res/TClingUtils.h ? (see the PR #4717),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5481
https://github.com/root-project/root/pull/5481:53,usability,error,error,53,@Axel-Naumann Is that a possible replacement for the error function in core/clingutils/res/TClingUtils.h ? (see the PR #4717),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5481
https://github.com/root-project/root/pull/5484:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5484
https://github.com/root-project/root/pull/5484:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5484
https://github.com/root-project/root/pull/5484:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5484
https://github.com/root-project/root/pull/5484:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5484
https://github.com/root-project/root/pull/5485:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5485
https://github.com/root-project/root/pull/5485:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5485
https://github.com/root-project/root/pull/5485:4,availability,failur,failures,4,The failures are present in the last nightly builds.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5485
https://github.com/root-project/root/pull/5485:4,deployability,fail,failures,4,The failures are present in the last nightly builds.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5485
https://github.com/root-project/root/pull/5485:45,deployability,build,builds,45,The failures are present in the last nightly builds.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5485
https://github.com/root-project/root/pull/5485:4,performance,failur,failures,4,The failures are present in the last nightly builds.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5485
https://github.com/root-project/root/pull/5485:4,reliability,fail,failures,4,The failures are present in the last nightly builds.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5485
https://github.com/root-project/root/pull/5485:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5485
https://github.com/root-project/root/pull/5485:0,availability,Failur,Failures,0,Failures are present in the nightlies so they are independent on this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5485
https://github.com/root-project/root/pull/5485:0,deployability,Fail,Failures,0,Failures are present in the nightlies so they are independent on this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5485
https://github.com/root-project/root/pull/5485:0,performance,Failur,Failures,0,Failures are present in the nightlies so they are independent on this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5485
https://github.com/root-project/root/pull/5485:0,reliability,Fail,Failures,0,Failures are present in the nightlies so they are independent on this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5485
https://github.com/root-project/root/pull/5486:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5486
https://github.com/root-project/root/pull/5486:11,deployability,build,build,11,@phsft-bot build just on mac1015/cxx17 with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5486
https://github.com/root-project/root/pull/5486:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5486
https://github.com/root-project/root/pull/5486:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5486
https://github.com/root-project/root/pull/5486:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5486
https://github.com/root-project/root/pull/5486:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5486
https://github.com/root-project/root/pull/5486:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5486
https://github.com/root-project/root/pull/5486:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5486
https://github.com/root-project/root/pull/5486:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5486
https://github.com/root-project/root/pull/5486:8,availability,ping,ping,8,@pcanal ping...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5486
https://github.com/root-project/root/pull/5486:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5486
https://github.com/root-project/root/pull/5486:30,availability,failur,failure,30,@Axel-Naumann @vgvassilev The failure are unrelated. This looks ready to merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5486
https://github.com/root-project/root/pull/5486:30,deployability,fail,failure,30,@Axel-Naumann @vgvassilev The failure are unrelated. This looks ready to merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5486
https://github.com/root-project/root/pull/5486:30,performance,failur,failure,30,@Axel-Naumann @vgvassilev The failure are unrelated. This looks ready to merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5486
https://github.com/root-project/root/pull/5486:30,reliability,fail,failure,30,@Axel-Naumann @vgvassilev The failure are unrelated. This looks ready to merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5486
https://github.com/root-project/root/pull/5488:4,availability,failur,failure,4,"The failure in `dataframe_interface` is bad, investigating.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:4,deployability,fail,failure,4,"The failure in `dataframe_interface` is bad, investigating.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:4,performance,failur,failure,4,"The failure in `dataframe_interface` is bad, investigating.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:4,reliability,fail,failure,4,"The failure in `dataframe_interface` is bad, investigating.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:478,availability,Failur,Failure,478,"I started looking, but the first thing I noticed is that allocating weak_ptrs on heap, and making somebody responsible for deleting them seems to defy the point. Maybe I didn't get the logic yet, but wouldn't something like this be easier? - Somebody needs code jitted. Makes a shared_ptr to it and holds it. - Jitter gets a weak_ptr observing the shared_ptr. - Common code is shared using shared_ptr. - When jitter starts, it tries to lock weak_ptr. - Success: Jit the code. - Failure: Throw away weak_ptr - nobody seems to need the code. Can give it a second try to understand the code if that model doesn't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:185,deployability,log,logic,185,"I started looking, but the first thing I noticed is that allocating weak_ptrs on heap, and making somebody responsible for deleting them seems to defy the point. Maybe I didn't get the logic yet, but wouldn't something like this be easier? - Somebody needs code jitted. Makes a shared_ptr to it and holds it. - Jitter gets a weak_ptr observing the shared_ptr. - Common code is shared using shared_ptr. - When jitter starts, it tries to lock weak_ptr. - Success: Jit the code. - Failure: Throw away weak_ptr - nobody seems to need the code. Can give it a second try to understand the code if that model doesn't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:334,deployability,observ,observing,334,"I started looking, but the first thing I noticed is that allocating weak_ptrs on heap, and making somebody responsible for deleting them seems to defy the point. Maybe I didn't get the logic yet, but wouldn't something like this be easier? - Somebody needs code jitted. Makes a shared_ptr to it and holds it. - Jitter gets a weak_ptr observing the shared_ptr. - Common code is shared using shared_ptr. - When jitter starts, it tries to lock weak_ptr. - Success: Jit the code. - Failure: Throw away weak_ptr - nobody seems to need the code. Can give it a second try to understand the code if that model doesn't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:478,deployability,Fail,Failure,478,"I started looking, but the first thing I noticed is that allocating weak_ptrs on heap, and making somebody responsible for deleting them seems to defy the point. Maybe I didn't get the logic yet, but wouldn't something like this be easier? - Somebody needs code jitted. Makes a shared_ptr to it and holds it. - Jitter gets a weak_ptr observing the shared_ptr. - Common code is shared using shared_ptr. - When jitter starts, it tries to lock weak_ptr. - Success: Jit the code. - Failure: Throw away weak_ptr - nobody seems to need the code. Can give it a second try to understand the code if that model doesn't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:57,energy efficiency,alloc,allocating,57,"I started looking, but the first thing I noticed is that allocating weak_ptrs on heap, and making somebody responsible for deleting them seems to defy the point. Maybe I didn't get the logic yet, but wouldn't something like this be easier? - Somebody needs code jitted. Makes a shared_ptr to it and holds it. - Jitter gets a weak_ptr observing the shared_ptr. - Common code is shared using shared_ptr. - When jitter starts, it tries to lock weak_ptr. - Success: Jit the code. - Failure: Throw away weak_ptr - nobody seems to need the code. Can give it a second try to understand the code if that model doesn't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:596,energy efficiency,model,model,596,"I started looking, but the first thing I noticed is that allocating weak_ptrs on heap, and making somebody responsible for deleting them seems to defy the point. Maybe I didn't get the logic yet, but wouldn't something like this be easier? - Somebody needs code jitted. Makes a shared_ptr to it and holds it. - Jitter gets a weak_ptr observing the shared_ptr. - Common code is shared using shared_ptr. - When jitter starts, it tries to lock weak_ptr. - Success: Jit the code. - Failure: Throw away weak_ptr - nobody seems to need the code. Can give it a second try to understand the code if that model doesn't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:377,interoperability,share,shared,377,"I started looking, but the first thing I noticed is that allocating weak_ptrs on heap, and making somebody responsible for deleting them seems to defy the point. Maybe I didn't get the logic yet, but wouldn't something like this be easier? - Somebody needs code jitted. Makes a shared_ptr to it and holds it. - Jitter gets a weak_ptr observing the shared_ptr. - Common code is shared using shared_ptr. - When jitter starts, it tries to lock weak_ptr. - Success: Jit the code. - Failure: Throw away weak_ptr - nobody seems to need the code. Can give it a second try to understand the code if that model doesn't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:436,performance,lock,lock,436,"I started looking, but the first thing I noticed is that allocating weak_ptrs on heap, and making somebody responsible for deleting them seems to defy the point. Maybe I didn't get the logic yet, but wouldn't something like this be easier? - Somebody needs code jitted. Makes a shared_ptr to it and holds it. - Jitter gets a weak_ptr observing the shared_ptr. - Common code is shared using shared_ptr. - When jitter starts, it tries to lock weak_ptr. - Success: Jit the code. - Failure: Throw away weak_ptr - nobody seems to need the code. Can give it a second try to understand the code if that model doesn't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:478,performance,Failur,Failure,478,"I started looking, but the first thing I noticed is that allocating weak_ptrs on heap, and making somebody responsible for deleting them seems to defy the point. Maybe I didn't get the logic yet, but wouldn't something like this be easier? - Somebody needs code jitted. Makes a shared_ptr to it and holds it. - Jitter gets a weak_ptr observing the shared_ptr. - Common code is shared using shared_ptr. - When jitter starts, it tries to lock weak_ptr. - Success: Jit the code. - Failure: Throw away weak_ptr - nobody seems to need the code. Can give it a second try to understand the code if that model doesn't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:478,reliability,Fail,Failure,478,"I started looking, but the first thing I noticed is that allocating weak_ptrs on heap, and making somebody responsible for deleting them seems to defy the point. Maybe I didn't get the logic yet, but wouldn't something like this be easier? - Somebody needs code jitted. Makes a shared_ptr to it and holds it. - Jitter gets a weak_ptr observing the shared_ptr. - Common code is shared using shared_ptr. - When jitter starts, it tries to lock weak_ptr. - Success: Jit the code. - Failure: Throw away weak_ptr - nobody seems to need the code. Can give it a second try to understand the code if that model doesn't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:602,reliability,doe,doesn,602,"I started looking, but the first thing I noticed is that allocating weak_ptrs on heap, and making somebody responsible for deleting them seems to defy the point. Maybe I didn't get the logic yet, but wouldn't something like this be easier? - Somebody needs code jitted. Makes a shared_ptr to it and holds it. - Jitter gets a weak_ptr observing the shared_ptr. - Common code is shared using shared_ptr. - When jitter starts, it tries to lock weak_ptr. - Success: Jit the code. - Failure: Throw away weak_ptr - nobody seems to need the code. Can give it a second try to understand the code if that model doesn't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:185,safety,log,logic,185,"I started looking, but the first thing I noticed is that allocating weak_ptrs on heap, and making somebody responsible for deleting them seems to defy the point. Maybe I didn't get the logic yet, but wouldn't something like this be easier? - Somebody needs code jitted. Makes a shared_ptr to it and holds it. - Jitter gets a weak_ptr observing the shared_ptr. - Common code is shared using shared_ptr. - When jitter starts, it tries to lock weak_ptr. - Success: Jit the code. - Failure: Throw away weak_ptr - nobody seems to need the code. Can give it a second try to understand the code if that model doesn't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:185,security,log,logic,185,"I started looking, but the first thing I noticed is that allocating weak_ptrs on heap, and making somebody responsible for deleting them seems to defy the point. Maybe I didn't get the logic yet, but wouldn't something like this be easier? - Somebody needs code jitted. Makes a shared_ptr to it and holds it. - Jitter gets a weak_ptr observing the shared_ptr. - Common code is shared using shared_ptr. - When jitter starts, it tries to lock weak_ptr. - Success: Jit the code. - Failure: Throw away weak_ptr - nobody seems to need the code. Can give it a second try to understand the code if that model doesn't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:436,security,lock,lock,436,"I started looking, but the first thing I noticed is that allocating weak_ptrs on heap, and making somebody responsible for deleting them seems to defy the point. Maybe I didn't get the logic yet, but wouldn't something like this be easier? - Somebody needs code jitted. Makes a shared_ptr to it and holds it. - Jitter gets a weak_ptr observing the shared_ptr. - Common code is shared using shared_ptr. - When jitter starts, it tries to lock weak_ptr. - Success: Jit the code. - Failure: Throw away weak_ptr - nobody seems to need the code. Can give it a second try to understand the code if that model doesn't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:596,security,model,model,596,"I started looking, but the first thing I noticed is that allocating weak_ptrs on heap, and making somebody responsible for deleting them seems to defy the point. Maybe I didn't get the logic yet, but wouldn't something like this be easier? - Somebody needs code jitted. Makes a shared_ptr to it and holds it. - Jitter gets a weak_ptr observing the shared_ptr. - Common code is shared using shared_ptr. - When jitter starts, it tries to lock weak_ptr. - Success: Jit the code. - Failure: Throw away weak_ptr - nobody seems to need the code. Can give it a second try to understand the code if that model doesn't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:185,testability,log,logic,185,"I started looking, but the first thing I noticed is that allocating weak_ptrs on heap, and making somebody responsible for deleting them seems to defy the point. Maybe I didn't get the logic yet, but wouldn't something like this be easier? - Somebody needs code jitted. Makes a shared_ptr to it and holds it. - Jitter gets a weak_ptr observing the shared_ptr. - Common code is shared using shared_ptr. - When jitter starts, it tries to lock weak_ptr. - Success: Jit the code. - Failure: Throw away weak_ptr - nobody seems to need the code. Can give it a second try to understand the code if that model doesn't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:334,testability,observ,observing,334,"I started looking, but the first thing I noticed is that allocating weak_ptrs on heap, and making somebody responsible for deleting them seems to defy the point. Maybe I didn't get the logic yet, but wouldn't something like this be easier? - Somebody needs code jitted. Makes a shared_ptr to it and holds it. - Jitter gets a weak_ptr observing the shared_ptr. - Common code is shared using shared_ptr. - When jitter starts, it tries to lock weak_ptr. - Success: Jit the code. - Failure: Throw away weak_ptr - nobody seems to need the code. Can give it a second try to understand the code if that model doesn't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:568,testability,understand,understand,568,"I started looking, but the first thing I noticed is that allocating weak_ptrs on heap, and making somebody responsible for deleting them seems to defy the point. Maybe I didn't get the logic yet, but wouldn't something like this be easier? - Somebody needs code jitted. Makes a shared_ptr to it and holds it. - Jitter gets a weak_ptr observing the shared_ptr. - Common code is shared using shared_ptr. - When jitter starts, it tries to lock weak_ptr. - Success: Jit the code. - Failure: Throw away weak_ptr - nobody seems to need the code. Can give it a second try to understand the code if that model doesn't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:239,energy efficiency,alloc,allocated,239,"Hi Stephan, that's exactly how it works, and to pass a weak_ptr from compiled code to lazily jitted code I have to put it on the heap and pass the address of the weak_ptr to the lazily jitted code (which then will have to delete this heap-allocated weak_ptr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:10,energy efficiency,green,green,10,"Tests are green (at least on my machine, let's see if jenkins agrees) but valgrind is still not happy, to be investigated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:0,safety,Test,Tests,0,"Tests are green (at least on my machine, let's see if jenkins agrees) but valgrind is still not happy, to be investigated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:0,testability,Test,Tests,0,"Tests are green (at least on my machine, let's see if jenkins agrees) but valgrind is still not happy, to be investigated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:36,availability,error,errors,36,A bisect revealed that the valgrind errors were introduced by previous changes. They will be resolved by a different PR. Will merge this in the meanwhile.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:36,performance,error,errors,36,A bisect revealed that the valgrind errors were introduced by previous changes. They will be resolved by a different PR. Will merge this in the meanwhile.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:36,safety,error,errors,36,A bisect revealed that the valgrind errors were introduced by previous changes. They will be resolved by a different PR. Will merge this in the meanwhile.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:36,usability,error,errors,36,A bisect revealed that the valgrind errors were introduced by previous changes. They will be resolved by a different PR. Will merge this in the meanwhile.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5496:321,availability,servic,services,321,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:405,availability,Error,Errors,405,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:451,availability,Error,Error,451,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:558,availability,Error,Error,558,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:2,deployability,Build,Build,2,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:8,deployability,fail,failed,8,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:79,deployability,build,build,79,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:113,deployability,build,build,113,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:199,deployability,build,buildname,199,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:321,deployability,servic,services,321,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:373,deployability,build,build,373,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:466,deployability,modul,modules,466,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:572,deployability,build,build,572,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:606,deployability,build,build,606,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:633,deployability,build,build,633,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:709,deployability,fail,fail-on-missing,709,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:728,energy efficiency,adapt,adapt,728,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:178,integrability,filter,filtercount,178,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:321,integrability,servic,services,321,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:510,integrability,messag,message,510,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:650,integrability,messag,message,650,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:728,integrability,adapt,adapt,728,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:510,interoperability,messag,message,510,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:650,interoperability,messag,message,650,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:728,interoperability,adapt,adapt,728,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:321,modifiability,servic,services,321,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:466,modifiability,modul,modules,466,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:728,modifiability,adapt,adapt,728,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:405,performance,Error,Errors,405,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:451,performance,Error,Error,451,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:558,performance,Error,Error,558,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:8,reliability,fail,failed,8,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:709,reliability,fail,fail-on-missing,709,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:405,safety,Error,Errors,405,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:451,safety,Error,Error,451,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:466,safety,modul,modules,466,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:558,safety,Error,Error,558,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:405,usability,Error,Errors,405,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:451,usability,Error,Error,451,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5496:558,usability,Error,Error,558,"> Build failed on ROOT-fedora29/python3. > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console). > . > ### Errors:. > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):. > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5496
https://github.com/root-project/root/pull/5500:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5500
https://github.com/root-project/root/pull/5500:37,deployability,updat,updated,37,"We can actually test before :-) I've updated build-root.cmake to require pyroot2, pyroot3.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5500
https://github.com/root-project/root/pull/5500:45,deployability,build,build-root,45,"We can actually test before :-) I've updated build-root.cmake to require pyroot2, pyroot3.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5500
https://github.com/root-project/root/pull/5500:16,safety,test,test,16,"We can actually test before :-) I've updated build-root.cmake to require pyroot2, pyroot3.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5500
https://github.com/root-project/root/pull/5500:37,safety,updat,updated,37,"We can actually test before :-) I've updated build-root.cmake to require pyroot2, pyroot3.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5500
https://github.com/root-project/root/pull/5500:37,security,updat,updated,37,"We can actually test before :-) I've updated build-root.cmake to require pyroot2, pyroot3.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5500
https://github.com/root-project/root/pull/5500:16,testability,test,test,16,"We can actually test before :-) I've updated build-root.cmake to require pyroot2, pyroot3.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5500
https://github.com/root-project/root/pull/5500:11,deployability,build,build,11,@phsft-bot build just on ROOT-centos8/default with -Dpyroot2=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5500
https://github.com/root-project/root/pull/5500:11,deployability,build,build,11,@phsft-bot build just on ROOT-centos8/default with flags -Dpyroot2=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5500
https://github.com/root-project/root/pull/5500:10,deployability,fail,fails,10,Hurray it fails! :-),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5500
https://github.com/root-project/root/pull/5500:10,reliability,fail,fails,10,Hurray it fails! :-),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5500
https://github.com/root-project/root/pull/5502:87,interoperability,conflict,conflicts,87,"Hi, I'll take a look today, probably in the afternoon. @hageboeck looks like there are conflicts",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5502
https://github.com/root-project/root/pull/5502:16,deployability,updat,update,16,Due to Oksana's update of gtest. Rebasing gave me the opportunity to add a fix and squash commits. Pushing soon.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5502
https://github.com/root-project/root/pull/5502:16,safety,updat,update,16,Due to Oksana's update of gtest. Rebasing gave me the opportunity to add a fix and squash commits. Pushing soon.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5502
https://github.com/root-project/root/pull/5502:16,security,updat,update,16,Due to Oksana's update of gtest. Rebasing gave me the opportunity to add a fix and squash commits. Pushing soon.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5502
https://github.com/root-project/root/pull/5503:87,deployability,patch,patches,87,"@bellenot sadly I will need to revert it because it broke discovery of python for 6.20 patches. @maxgalli and me, we will think about how to fix it without creating breaking configuration of other people.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5503
https://github.com/root-project/root/pull/5503:174,deployability,configurat,configuration,174,"@bellenot sadly I will need to revert it because it broke discovery of python for 6.20 patches. @maxgalli and me, we will think about how to fix it without creating breaking configuration of other people.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5503
https://github.com/root-project/root/pull/5503:58,integrability,discover,discovery,58,"@bellenot sadly I will need to revert it because it broke discovery of python for 6.20 patches. @maxgalli and me, we will think about how to fix it without creating breaking configuration of other people.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5503
https://github.com/root-project/root/pull/5503:174,integrability,configur,configuration,174,"@bellenot sadly I will need to revert it because it broke discovery of python for 6.20 patches. @maxgalli and me, we will think about how to fix it without creating breaking configuration of other people.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5503
https://github.com/root-project/root/pull/5503:58,interoperability,discover,discovery,58,"@bellenot sadly I will need to revert it because it broke discovery of python for 6.20 patches. @maxgalli and me, we will think about how to fix it without creating breaking configuration of other people.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5503
https://github.com/root-project/root/pull/5503:174,modifiability,configur,configuration,174,"@bellenot sadly I will need to revert it because it broke discovery of python for 6.20 patches. @maxgalli and me, we will think about how to fix it without creating breaking configuration of other people.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5503
https://github.com/root-project/root/pull/5503:87,safety,patch,patches,87,"@bellenot sadly I will need to revert it because it broke discovery of python for 6.20 patches. @maxgalli and me, we will think about how to fix it without creating breaking configuration of other people.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5503
https://github.com/root-project/root/pull/5503:87,security,patch,patches,87,"@bellenot sadly I will need to revert it because it broke discovery of python for 6.20 patches. @maxgalli and me, we will think about how to fix it without creating breaking configuration of other people.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5503
https://github.com/root-project/root/pull/5503:174,security,configur,configuration,174,"@bellenot sadly I will need to revert it because it broke discovery of python for 6.20 patches. @maxgalli and me, we will think about how to fix it without creating breaking configuration of other people.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5503
https://github.com/root-project/root/pull/5503:58,usability,discov,discovery,58,"@bellenot sadly I will need to revert it because it broke discovery of python for 6.20 patches. @maxgalli and me, we will think about how to fix it without creating breaking configuration of other people.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5503
https://github.com/root-project/root/pull/5503:89,deployability,patch,patches,89,"> @bellenot sadly I will need to revert it because it broke discovery of python for 6.20 patches. > @maxgalli and me, we will think about how to fix it without creating breaking configuration of other people. Well, no problem, up to you, at least now you know one way to fix it... :wink:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5503
https://github.com/root-project/root/pull/5503:178,deployability,configurat,configuration,178,"> @bellenot sadly I will need to revert it because it broke discovery of python for 6.20 patches. > @maxgalli and me, we will think about how to fix it without creating breaking configuration of other people. Well, no problem, up to you, at least now you know one way to fix it... :wink:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5503
https://github.com/root-project/root/pull/5503:60,integrability,discover,discovery,60,"> @bellenot sadly I will need to revert it because it broke discovery of python for 6.20 patches. > @maxgalli and me, we will think about how to fix it without creating breaking configuration of other people. Well, no problem, up to you, at least now you know one way to fix it... :wink:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5503
https://github.com/root-project/root/pull/5503:178,integrability,configur,configuration,178,"> @bellenot sadly I will need to revert it because it broke discovery of python for 6.20 patches. > @maxgalli and me, we will think about how to fix it without creating breaking configuration of other people. Well, no problem, up to you, at least now you know one way to fix it... :wink:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5503
https://github.com/root-project/root/pull/5503:60,interoperability,discover,discovery,60,"> @bellenot sadly I will need to revert it because it broke discovery of python for 6.20 patches. > @maxgalli and me, we will think about how to fix it without creating breaking configuration of other people. Well, no problem, up to you, at least now you know one way to fix it... :wink:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5503
https://github.com/root-project/root/pull/5503:178,modifiability,configur,configuration,178,"> @bellenot sadly I will need to revert it because it broke discovery of python for 6.20 patches. > @maxgalli and me, we will think about how to fix it without creating breaking configuration of other people. Well, no problem, up to you, at least now you know one way to fix it... :wink:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5503
https://github.com/root-project/root/pull/5503:89,safety,patch,patches,89,"> @bellenot sadly I will need to revert it because it broke discovery of python for 6.20 patches. > @maxgalli and me, we will think about how to fix it without creating breaking configuration of other people. Well, no problem, up to you, at least now you know one way to fix it... :wink:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5503
https://github.com/root-project/root/pull/5503:89,security,patch,patches,89,"> @bellenot sadly I will need to revert it because it broke discovery of python for 6.20 patches. > @maxgalli and me, we will think about how to fix it without creating breaking configuration of other people. Well, no problem, up to you, at least now you know one way to fix it... :wink:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5503
https://github.com/root-project/root/pull/5503:178,security,configur,configuration,178,"> @bellenot sadly I will need to revert it because it broke discovery of python for 6.20 patches. > @maxgalli and me, we will think about how to fix it without creating breaking configuration of other people. Well, no problem, up to you, at least now you know one way to fix it... :wink:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5503
https://github.com/root-project/root/pull/5503:60,usability,discov,discovery,60,"> @bellenot sadly I will need to revert it because it broke discovery of python for 6.20 patches. > @maxgalli and me, we will think about how to fix it without creating breaking configuration of other people. Well, no problem, up to you, at least now you know one way to fix it... :wink:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5503
https://github.com/root-project/root/pull/5505:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu18.04/default with flags -Darrow=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5505
https://github.com/root-project/root/pull/5505:26,deployability,updat,updating,26,"The unit test also needed updating, now done.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5505
https://github.com/root-project/root/pull/5505:9,safety,test,test,9,"The unit test also needed updating, now done.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5505
https://github.com/root-project/root/pull/5505:26,safety,updat,updating,26,"The unit test also needed updating, now done.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5505
https://github.com/root-project/root/pull/5505:26,security,updat,updating,26,"The unit test also needed updating, now done.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5505
https://github.com/root-project/root/pull/5505:4,testability,unit,unit,4,"The unit test also needed updating, now done.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5505
https://github.com/root-project/root/pull/5505:9,testability,test,test,9,"The unit test also needed updating, now done.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5505
https://github.com/root-project/root/pull/5505:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu18.04/default with flags -Darrow=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5505
https://github.com/root-project/root/pull/5505:65,deployability,fail,failing,65,@eguiraud there is something else needed to be backported to fix failing tests?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5505
https://github.com/root-project/root/pull/5505:65,reliability,fail,failing,65,@eguiraud there is something else needed to be backported to fix failing tests?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5505
https://github.com/root-project/root/pull/5505:73,safety,test,tests,73,@eguiraud there is something else needed to be backported to fix failing tests?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5505
https://github.com/root-project/root/pull/5505:73,testability,test,tests,73,@eguiraud there is something else needed to be backported to fix failing tests?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5505
https://github.com/root-project/root/pull/5505:155,availability,failur,failures,155,"Hi Oksana, I was hoping to get @ktf or at least @Axel-Naumann to sign this off, since there seems to be breaking changes included in the backport (see the failures in `projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_arrow` above, before I also backported changes in that test).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5505
https://github.com/root-project/root/pull/5505:155,deployability,fail,failures,155,"Hi Oksana, I was hoping to get @ktf or at least @Axel-Naumann to sign this off, since there seems to be breaking changes included in the backport (see the failures in `projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_arrow` above, before I also backported changes in that test).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5505
https://github.com/root-project/root/pull/5505:155,performance,failur,failures,155,"Hi Oksana, I was hoping to get @ktf or at least @Axel-Naumann to sign this off, since there seems to be breaking changes included in the backport (see the failures in `projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_arrow` above, before I also backported changes in that test).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5505
https://github.com/root-project/root/pull/5505:155,reliability,fail,failures,155,"Hi Oksana, I was hoping to get @ktf or at least @Axel-Naumann to sign this off, since there seems to be breaking changes included in the backport (see the failures in `projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_arrow` above, before I also backported changes in that test).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5505
https://github.com/root-project/root/pull/5505:195,safety,test,test,195,"Hi Oksana, I was hoping to get @ktf or at least @Axel-Naumann to sign this off, since there seems to be breaking changes included in the backport (see the failures in `projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_arrow` above, before I also backported changes in that test).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5505
https://github.com/root-project/root/pull/5505:292,safety,test,test,292,"Hi Oksana, I was hoping to get @ktf or at least @Axel-Naumann to sign this off, since there seems to be breaking changes included in the backport (see the failures in `projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_arrow` above, before I also backported changes in that test).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5505
https://github.com/root-project/root/pull/5505:65,security,sign,sign,65,"Hi Oksana, I was hoping to get @ktf or at least @Axel-Naumann to sign this off, since there seems to be breaking changes included in the backport (see the failures in `projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_arrow` above, before I also backported changes in that test).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5505
https://github.com/root-project/root/pull/5505:195,testability,test,test,195,"Hi Oksana, I was hoping to get @ktf or at least @Axel-Naumann to sign this off, since there seems to be breaking changes included in the backport (see the failures in `projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_arrow` above, before I also backported changes in that test).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5505
https://github.com/root-project/root/pull/5505:292,testability,test,test,292,"Hi Oksana, I was hoping to get @ktf or at least @Axel-Naumann to sign this off, since there seems to be breaking changes included in the backport (see the failures in `projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_arrow` above, before I also backported changes in that test).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5505
https://github.com/root-project/root/pull/5506:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5506
https://github.com/root-project/root/pull/5506:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5506
https://github.com/root-project/root/pull/5506:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5506
https://github.com/root-project/root/pull/5506:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5506
https://github.com/root-project/root/pull/5506:4,availability,failur,failures,4,"The failures are known problems, so ready to merge. (For the one on windows, you would have to fork roottest to your github, if I'm not mistaken.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5506
https://github.com/root-project/root/pull/5506:4,deployability,fail,failures,4,"The failures are known problems, so ready to merge. (For the one on windows, you would have to fork roottest to your github, if I'm not mistaken.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5506
https://github.com/root-project/root/pull/5506:4,performance,failur,failures,4,"The failures are known problems, so ready to merge. (For the one on windows, you would have to fork roottest to your github, if I'm not mistaken.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5506
https://github.com/root-project/root/pull/5506:4,reliability,fail,failures,4,"The failures are known problems, so ready to merge. (For the one on windows, you would have to fork roottest to your github, if I'm not mistaken.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5506
https://github.com/root-project/root/pull/5507:52,safety,test,test,52,Aligned with solution proposed upstream and added a test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5507
https://github.com/root-project/root/pull/5507:52,testability,test,test,52,Aligned with solution proposed upstream and added a test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5507
https://github.com/root-project/root/pull/5507:19,safety,test,test,19,"You are right, the test should go to `roottest`. I've opened a PR!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5507
https://github.com/root-project/root/pull/5507:19,testability,test,test,19,"You are right, the test should go to `roottest`. I've opened a PR!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5507
https://github.com/root-project/root/pull/5507:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5507
https://github.com/root-project/root/pull/5507:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5507
https://github.com/root-project/root/pull/5509:63,availability,failur,failure,63,"PR fixes broken Travis, since vecgeom is not tested in CI, all failure should be unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5509
https://github.com/root-project/root/pull/5509:63,deployability,fail,failure,63,"PR fixes broken Travis, since vecgeom is not tested in CI, all failure should be unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5509
https://github.com/root-project/root/pull/5509:63,performance,failur,failure,63,"PR fixes broken Travis, since vecgeom is not tested in CI, all failure should be unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5509
https://github.com/root-project/root/pull/5509:63,reliability,fail,failure,63,"PR fixes broken Travis, since vecgeom is not tested in CI, all failure should be unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5509
https://github.com/root-project/root/pull/5509:45,safety,test,tested,45,"PR fixes broken Travis, since vecgeom is not tested in CI, all failure should be unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5509
https://github.com/root-project/root/pull/5509:45,testability,test,tested,45,"PR fixes broken Travis, since vecgeom is not tested in CI, all failure should be unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5509
https://github.com/root-project/root/pull/5510:75,interoperability,conflict,conflict,75,Ok... Apparently this is already in master.... Not sure why I do not get a conflict....,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5510
https://github.com/root-project/root/pull/5513:103,deployability,releas,release,103,I don't know what to do...I need to find a way to find in safe way to find python3 on windows for 6.20 release. (now we have two different implementations for 6.20 and master).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5513
https://github.com/root-project/root/pull/5513:58,safety,safe,safe,58,I don't know what to do...I need to find a way to find in safe way to find python3 on windows for 6.20 release. (now we have two different implementations for 6.20 and master).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5513
https://github.com/root-project/root/pull/5513:94,integrability,COMPON,COMPONENTS,94,"@maxgalli @bellenot The only difference we have is here vs master:. ```. find_package(Python3 COMPONENTS Interpreter REQUIRED). # Search for NumPy and Development, but not required:. find_package(Python3 COMPONENTS Development NumPy QUIET). ```. and. `find_package(Python3 COMPONENTS Interpreter Development NumPy)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5513
https://github.com/root-project/root/pull/5513:204,integrability,COMPON,COMPONENTS,204,"@maxgalli @bellenot The only difference we have is here vs master:. ```. find_package(Python3 COMPONENTS Interpreter REQUIRED). # Search for NumPy and Development, but not required:. find_package(Python3 COMPONENTS Development NumPy QUIET). ```. and. `find_package(Python3 COMPONENTS Interpreter Development NumPy)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5513
https://github.com/root-project/root/pull/5513:273,integrability,COMPON,COMPONENTS,273,"@maxgalli @bellenot The only difference we have is here vs master:. ```. find_package(Python3 COMPONENTS Interpreter REQUIRED). # Search for NumPy and Development, but not required:. find_package(Python3 COMPONENTS Development NumPy QUIET). ```. and. `find_package(Python3 COMPONENTS Interpreter Development NumPy)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5513
https://github.com/root-project/root/pull/5513:94,interoperability,COMPON,COMPONENTS,94,"@maxgalli @bellenot The only difference we have is here vs master:. ```. find_package(Python3 COMPONENTS Interpreter REQUIRED). # Search for NumPy and Development, but not required:. find_package(Python3 COMPONENTS Development NumPy QUIET). ```. and. `find_package(Python3 COMPONENTS Interpreter Development NumPy)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5513
https://github.com/root-project/root/pull/5513:204,interoperability,COMPON,COMPONENTS,204,"@maxgalli @bellenot The only difference we have is here vs master:. ```. find_package(Python3 COMPONENTS Interpreter REQUIRED). # Search for NumPy and Development, but not required:. find_package(Python3 COMPONENTS Development NumPy QUIET). ```. and. `find_package(Python3 COMPONENTS Interpreter Development NumPy)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5513
https://github.com/root-project/root/pull/5513:273,interoperability,COMPON,COMPONENTS,273,"@maxgalli @bellenot The only difference we have is here vs master:. ```. find_package(Python3 COMPONENTS Interpreter REQUIRED). # Search for NumPy and Development, but not required:. find_package(Python3 COMPONENTS Development NumPy QUIET). ```. and. `find_package(Python3 COMPONENTS Interpreter Development NumPy)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5513
https://github.com/root-project/root/pull/5513:94,modifiability,COMPON,COMPONENTS,94,"@maxgalli @bellenot The only difference we have is here vs master:. ```. find_package(Python3 COMPONENTS Interpreter REQUIRED). # Search for NumPy and Development, but not required:. find_package(Python3 COMPONENTS Development NumPy QUIET). ```. and. `find_package(Python3 COMPONENTS Interpreter Development NumPy)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5513
https://github.com/root-project/root/pull/5513:204,modifiability,COMPON,COMPONENTS,204,"@maxgalli @bellenot The only difference we have is here vs master:. ```. find_package(Python3 COMPONENTS Interpreter REQUIRED). # Search for NumPy and Development, but not required:. find_package(Python3 COMPONENTS Development NumPy QUIET). ```. and. `find_package(Python3 COMPONENTS Interpreter Development NumPy)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5513
https://github.com/root-project/root/pull/5513:273,modifiability,COMPON,COMPONENTS,273,"@maxgalli @bellenot The only difference we have is here vs master:. ```. find_package(Python3 COMPONENTS Interpreter REQUIRED). # Search for NumPy and Development, but not required:. find_package(Python3 COMPONENTS Development NumPy QUIET). ```. and. `find_package(Python3 COMPONENTS Interpreter Development NumPy)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5513
https://github.com/root-project/root/pull/5514:231,deployability,contain,container,231,"> LGTM, many nice small improvements. > . > IIUC `RooAbsCollection` offers _some_ STL compatibility support, namely `begin`, `end`, `rbegin` and `rend`. At this point it might be good to decide if it should satisfy all of the [STL container requirements](https://en.cppreference.com/w/cpp/named_req/Container) or not. It's a bit misleading to only offer _part_ of the interface expected from an STL container. Point taken. This is now:. https://sft.its.cern.ch/jira/browse/ROOT-10750",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5514
https://github.com/root-project/root/pull/5514:299,deployability,Contain,Container,299,"> LGTM, many nice small improvements. > . > IIUC `RooAbsCollection` offers _some_ STL compatibility support, namely `begin`, `end`, `rbegin` and `rend`. At this point it might be good to decide if it should satisfy all of the [STL container requirements](https://en.cppreference.com/w/cpp/named_req/Container) or not. It's a bit misleading to only offer _part_ of the interface expected from an STL container. Point taken. This is now:. https://sft.its.cern.ch/jira/browse/ROOT-10750",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5514
https://github.com/root-project/root/pull/5514:399,deployability,contain,container,399,"> LGTM, many nice small improvements. > . > IIUC `RooAbsCollection` offers _some_ STL compatibility support, namely `begin`, `end`, `rbegin` and `rend`. At this point it might be good to decide if it should satisfy all of the [STL container requirements](https://en.cppreference.com/w/cpp/named_req/Container) or not. It's a bit misleading to only offer _part_ of the interface expected from an STL container. Point taken. This is now:. https://sft.its.cern.ch/jira/browse/ROOT-10750",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5514
https://github.com/root-project/root/pull/5514:368,integrability,interfac,interface,368,"> LGTM, many nice small improvements. > . > IIUC `RooAbsCollection` offers _some_ STL compatibility support, namely `begin`, `end`, `rbegin` and `rend`. At this point it might be good to decide if it should satisfy all of the [STL container requirements](https://en.cppreference.com/w/cpp/named_req/Container) or not. It's a bit misleading to only offer _part_ of the interface expected from an STL container. Point taken. This is now:. https://sft.its.cern.ch/jira/browse/ROOT-10750",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5514
https://github.com/root-project/root/pull/5514:86,interoperability,compatib,compatibility,86,"> LGTM, many nice small improvements. > . > IIUC `RooAbsCollection` offers _some_ STL compatibility support, namely `begin`, `end`, `rbegin` and `rend`. At this point it might be good to decide if it should satisfy all of the [STL container requirements](https://en.cppreference.com/w/cpp/named_req/Container) or not. It's a bit misleading to only offer _part_ of the interface expected from an STL container. Point taken. This is now:. https://sft.its.cern.ch/jira/browse/ROOT-10750",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5514
https://github.com/root-project/root/pull/5514:368,interoperability,interfac,interface,368,"> LGTM, many nice small improvements. > . > IIUC `RooAbsCollection` offers _some_ STL compatibility support, namely `begin`, `end`, `rbegin` and `rend`. At this point it might be good to decide if it should satisfy all of the [STL container requirements](https://en.cppreference.com/w/cpp/named_req/Container) or not. It's a bit misleading to only offer _part_ of the interface expected from an STL container. Point taken. This is now:. https://sft.its.cern.ch/jira/browse/ROOT-10750",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5514
https://github.com/root-project/root/pull/5514:368,modifiability,interfac,interface,368,"> LGTM, many nice small improvements. > . > IIUC `RooAbsCollection` offers _some_ STL compatibility support, namely `begin`, `end`, `rbegin` and `rend`. At this point it might be good to decide if it should satisfy all of the [STL container requirements](https://en.cppreference.com/w/cpp/named_req/Container) or not. It's a bit misleading to only offer _part_ of the interface expected from an STL container. Point taken. This is now:. https://sft.its.cern.ch/jira/browse/ROOT-10750",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5514
https://github.com/root-project/root/pull/5514:100,usability,support,support,100,"> LGTM, many nice small improvements. > . > IIUC `RooAbsCollection` offers _some_ STL compatibility support, namely `begin`, `end`, `rbegin` and `rend`. At this point it might be good to decide if it should satisfy all of the [STL container requirements](https://en.cppreference.com/w/cpp/named_req/Container) or not. It's a bit misleading to only offer _part_ of the interface expected from an STL container. Point taken. This is now:. https://sft.its.cern.ch/jira/browse/ROOT-10750",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5514
https://github.com/root-project/root/pull/5517:24,deployability,build,builds,24,"No need to wait for the builds (this tutorial does not even run because it is interactive), merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5517
https://github.com/root-project/root/pull/5517:46,reliability,doe,does,46,"No need to wait for the builds (this tutorial does not even run because it is interactive), merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5517
https://github.com/root-project/root/pull/5517:78,usability,interact,interactive,78,"No need to wait for the builds (this tutorial does not even run because it is interactive), merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5517
https://github.com/root-project/root/pull/5517:414,deployability,fail,fails,414,"> parse_CSV_file_with_TTree_ReadStream. The print lines that I see in these two scripts are ```print('returning 0')``` and ```print(""Usage: %s file_to_parse.dat"" % sys.argv[0])```, both Python3 compatible, fixed by this commit: . https://github.com/root-project/root/commit/dffafb93c8783448b3c98bcbad04cba266d80ff9#diff-bfad69ddd3dd134b48f95430a6008ae4. Am I correct? On the other hand, @etejedor, ```guy_ex.py``` fails in pyroot_experimental due to a ```TPyDispatcher``` class that doesn't seem to have been ported yet.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5517
https://github.com/root-project/root/pull/5517:194,interoperability,compatib,compatible,194,"> parse_CSV_file_with_TTree_ReadStream. The print lines that I see in these two scripts are ```print('returning 0')``` and ```print(""Usage: %s file_to_parse.dat"" % sys.argv[0])```, both Python3 compatible, fixed by this commit: . https://github.com/root-project/root/commit/dffafb93c8783448b3c98bcbad04cba266d80ff9#diff-bfad69ddd3dd134b48f95430a6008ae4. Am I correct? On the other hand, @etejedor, ```guy_ex.py``` fails in pyroot_experimental due to a ```TPyDispatcher``` class that doesn't seem to have been ported yet.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5517
https://github.com/root-project/root/pull/5517:414,reliability,fail,fails,414,"> parse_CSV_file_with_TTree_ReadStream. The print lines that I see in these two scripts are ```print('returning 0')``` and ```print(""Usage: %s file_to_parse.dat"" % sys.argv[0])```, both Python3 compatible, fixed by this commit: . https://github.com/root-project/root/commit/dffafb93c8783448b3c98bcbad04cba266d80ff9#diff-bfad69ddd3dd134b48f95430a6008ae4. Am I correct? On the other hand, @etejedor, ```guy_ex.py``` fails in pyroot_experimental due to a ```TPyDispatcher``` class that doesn't seem to have been ported yet.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5517
https://github.com/root-project/root/pull/5517:483,reliability,doe,doesn,483,"> parse_CSV_file_with_TTree_ReadStream. The print lines that I see in these two scripts are ```print('returning 0')``` and ```print(""Usage: %s file_to_parse.dat"" % sys.argv[0])```, both Python3 compatible, fixed by this commit: . https://github.com/root-project/root/commit/dffafb93c8783448b3c98bcbad04cba266d80ff9#diff-bfad69ddd3dd134b48f95430a6008ae4. Am I correct? On the other hand, @etejedor, ```guy_ex.py``` fails in pyroot_experimental due to a ```TPyDispatcher``` class that doesn't seem to have been ported yet.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5517
https://github.com/root-project/root/pull/5518:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5518
https://github.com/root-project/root/pull/5518:0,availability,failur,failure,0,failure are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5518
https://github.com/root-project/root/pull/5518:0,deployability,fail,failure,0,failure are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5518
https://github.com/root-project/root/pull/5518:0,performance,failur,failure,0,failure are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5518
https://github.com/root-project/root/pull/5518:0,reliability,fail,failure,0,failure are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5518
https://github.com/root-project/root/pull/5519:324,deployability,build,builds,324,"The option Standard was before a complete implementation of the dense layer using the TMatrix classes. It was mainly for testing, and as far as I know not used. . A replacements exists now, and it is used when TMVA is built without BLAS or IMT support. But before this PR it was buggy and for this reason the no-imt nightly builds were failing. . I will apply the changes as you suggest above before merging this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5519
https://github.com/root-project/root/pull/5519:336,deployability,fail,failing,336,"The option Standard was before a complete implementation of the dense layer using the TMatrix classes. It was mainly for testing, and as far as I know not used. . A replacements exists now, and it is used when TMVA is built without BLAS or IMT support. But before this PR it was buggy and for this reason the no-imt nightly builds were failing. . I will apply the changes as you suggest above before merging this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5519
https://github.com/root-project/root/pull/5519:11,interoperability,Standard,Standard,11,"The option Standard was before a complete implementation of the dense layer using the TMatrix classes. It was mainly for testing, and as far as I know not used. . A replacements exists now, and it is used when TMVA is built without BLAS or IMT support. But before this PR it was buggy and for this reason the no-imt nightly builds were failing. . I will apply the changes as you suggest above before merging this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5519
https://github.com/root-project/root/pull/5519:70,modifiability,layer,layer,70,"The option Standard was before a complete implementation of the dense layer using the TMatrix classes. It was mainly for testing, and as far as I know not used. . A replacements exists now, and it is used when TMVA is built without BLAS or IMT support. But before this PR it was buggy and for this reason the no-imt nightly builds were failing. . I will apply the changes as you suggest above before merging this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5519
https://github.com/root-project/root/pull/5519:336,reliability,fail,failing,336,"The option Standard was before a complete implementation of the dense layer using the TMatrix classes. It was mainly for testing, and as far as I know not used. . A replacements exists now, and it is used when TMVA is built without BLAS or IMT support. But before this PR it was buggy and for this reason the no-imt nightly builds were failing. . I will apply the changes as you suggest above before merging this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5519
https://github.com/root-project/root/pull/5519:33,safety,compl,complete,33,"The option Standard was before a complete implementation of the dense layer using the TMatrix classes. It was mainly for testing, and as far as I know not used. . A replacements exists now, and it is used when TMVA is built without BLAS or IMT support. But before this PR it was buggy and for this reason the no-imt nightly builds were failing. . I will apply the changes as you suggest above before merging this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5519
https://github.com/root-project/root/pull/5519:121,safety,test,testing,121,"The option Standard was before a complete implementation of the dense layer using the TMatrix classes. It was mainly for testing, and as far as I know not used. . A replacements exists now, and it is used when TMVA is built without BLAS or IMT support. But before this PR it was buggy and for this reason the no-imt nightly builds were failing. . I will apply the changes as you suggest above before merging this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5519
https://github.com/root-project/root/pull/5519:33,security,compl,complete,33,"The option Standard was before a complete implementation of the dense layer using the TMatrix classes. It was mainly for testing, and as far as I know not used. . A replacements exists now, and it is used when TMVA is built without BLAS or IMT support. But before this PR it was buggy and for this reason the no-imt nightly builds were failing. . I will apply the changes as you suggest above before merging this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5519
https://github.com/root-project/root/pull/5519:121,testability,test,testing,121,"The option Standard was before a complete implementation of the dense layer using the TMatrix classes. It was mainly for testing, and as far as I know not used. . A replacements exists now, and it is used when TMVA is built without BLAS or IMT support. But before this PR it was buggy and for this reason the no-imt nightly builds were failing. . I will apply the changes as you suggest above before merging this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5519
https://github.com/root-project/root/pull/5519:244,usability,support,support,244,"The option Standard was before a complete implementation of the dense layer using the TMatrix classes. It was mainly for testing, and as far as I know not used. . A replacements exists now, and it is used when TMVA is built without BLAS or IMT support. But before this PR it was buggy and for this reason the no-imt nightly builds were failing. . I will apply the changes as you suggest above before merging this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5519
https://github.com/root-project/root/pull/5520:11,deployability,build,build,11,@phsft-bot build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5520
https://github.com/root-project/root/pull/5521:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5521
https://github.com/root-project/root/pull/5521:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5521
https://github.com/root-project/root/pull/5523:0,availability,failur,failure,0,"failure is unrelated, merging since this fix is fixing master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5523
https://github.com/root-project/root/pull/5523:0,deployability,fail,failure,0,"failure is unrelated, merging since this fix is fixing master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5523
https://github.com/root-project/root/pull/5523:0,performance,failur,failure,0,"failure is unrelated, merging since this fix is fixing master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5523
https://github.com/root-project/root/pull/5523:0,reliability,fail,failure,0,"failure is unrelated, merging since this fix is fixing master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5523
https://github.com/root-project/root/pull/5524:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5524
https://github.com/root-project/root/pull/5524:24,safety,review,review,24,@linev could you please review again?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5524
https://github.com/root-project/root/pull/5524:24,testability,review,review,24,@linev could you please review again?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5524
https://github.com/root-project/root/pull/5525:171,deployability,modul,modules,171,"@oshadura, I think both cases would get covered with these changes also as [this](https://github.com/root-project/root/blob/3e646ff121d003774df2d884b16db0f05b3f0b53/cmake/modules/SearchInstalledSoftware.cmake#L529) line sets builtin_glew which will later be detected on this [line](https://github.com/root-project/root/blob/726a49d24fe0a67200b064853f5522db9609fb8f/cmake/modules/SearchInstalledSoftware.cmake#L534). . Anyways, #5526 also fixes the issue. So no worries.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5525
https://github.com/root-project/root/pull/5525:371,deployability,modul,modules,371,"@oshadura, I think both cases would get covered with these changes also as [this](https://github.com/root-project/root/blob/3e646ff121d003774df2d884b16db0f05b3f0b53/cmake/modules/SearchInstalledSoftware.cmake#L529) line sets builtin_glew which will later be detected on this [line](https://github.com/root-project/root/blob/726a49d24fe0a67200b064853f5522db9609fb8f/cmake/modules/SearchInstalledSoftware.cmake#L534). . Anyways, #5526 also fixes the issue. So no worries.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5525
https://github.com/root-project/root/pull/5525:171,modifiability,modul,modules,171,"@oshadura, I think both cases would get covered with these changes also as [this](https://github.com/root-project/root/blob/3e646ff121d003774df2d884b16db0f05b3f0b53/cmake/modules/SearchInstalledSoftware.cmake#L529) line sets builtin_glew which will later be detected on this [line](https://github.com/root-project/root/blob/726a49d24fe0a67200b064853f5522db9609fb8f/cmake/modules/SearchInstalledSoftware.cmake#L534). . Anyways, #5526 also fixes the issue. So no worries.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5525
https://github.com/root-project/root/pull/5525:371,modifiability,modul,modules,371,"@oshadura, I think both cases would get covered with these changes also as [this](https://github.com/root-project/root/blob/3e646ff121d003774df2d884b16db0f05b3f0b53/cmake/modules/SearchInstalledSoftware.cmake#L529) line sets builtin_glew which will later be detected on this [line](https://github.com/root-project/root/blob/726a49d24fe0a67200b064853f5522db9609fb8f/cmake/modules/SearchInstalledSoftware.cmake#L534). . Anyways, #5526 also fixes the issue. So no worries.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5525
https://github.com/root-project/root/pull/5525:171,safety,modul,modules,171,"@oshadura, I think both cases would get covered with these changes also as [this](https://github.com/root-project/root/blob/3e646ff121d003774df2d884b16db0f05b3f0b53/cmake/modules/SearchInstalledSoftware.cmake#L529) line sets builtin_glew which will later be detected on this [line](https://github.com/root-project/root/blob/726a49d24fe0a67200b064853f5522db9609fb8f/cmake/modules/SearchInstalledSoftware.cmake#L534). . Anyways, #5526 also fixes the issue. So no worries.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5525
https://github.com/root-project/root/pull/5525:258,safety,detect,detected,258,"@oshadura, I think both cases would get covered with these changes also as [this](https://github.com/root-project/root/blob/3e646ff121d003774df2d884b16db0f05b3f0b53/cmake/modules/SearchInstalledSoftware.cmake#L529) line sets builtin_glew which will later be detected on this [line](https://github.com/root-project/root/blob/726a49d24fe0a67200b064853f5522db9609fb8f/cmake/modules/SearchInstalledSoftware.cmake#L534). . Anyways, #5526 also fixes the issue. So no worries.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5525
https://github.com/root-project/root/pull/5525:371,safety,modul,modules,371,"@oshadura, I think both cases would get covered with these changes also as [this](https://github.com/root-project/root/blob/3e646ff121d003774df2d884b16db0f05b3f0b53/cmake/modules/SearchInstalledSoftware.cmake#L529) line sets builtin_glew which will later be detected on this [line](https://github.com/root-project/root/blob/726a49d24fe0a67200b064853f5522db9609fb8f/cmake/modules/SearchInstalledSoftware.cmake#L534). . Anyways, #5526 also fixes the issue. So no worries.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5525
https://github.com/root-project/root/pull/5525:258,security,detect,detected,258,"@oshadura, I think both cases would get covered with these changes also as [this](https://github.com/root-project/root/blob/3e646ff121d003774df2d884b16db0f05b3f0b53/cmake/modules/SearchInstalledSoftware.cmake#L529) line sets builtin_glew which will later be detected on this [line](https://github.com/root-project/root/blob/726a49d24fe0a67200b064853f5522db9609fb8f/cmake/modules/SearchInstalledSoftware.cmake#L534). . Anyways, #5526 also fixes the issue. So no worries.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5525
https://github.com/root-project/root/pull/5525:120,safety,test,test,120,"Actually, I think your fix it better because it similiar to all other builtins in SearchInstalledSoftware.cmake. I will test it and merge after!Thank you!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5525
https://github.com/root-project/root/pull/5525:120,testability,test,test,120,"Actually, I think your fix it better because it similiar to all other builtins in SearchInstalledSoftware.cmake. I will test it and merge after!Thank you!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5525
https://github.com/root-project/root/pull/5525:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5525
https://github.com/root-project/root/pull/5525:68,deployability,fail,fails,68,"with this change the GL directory in include disappeared and now it fails to find glew.h:. https://github.com/cms-sw/cmsdist/pull/5800. we are using -Dbuiltin_glew=ON which should be enough during install time (I guess). I can see the end of the config saying . `-- Enabled support for: asimage builtin_afterimage builtin_clang builtin_ftgl builtin_gl2ps builtin_glew ...`. and the builtins dir contains this: `davix glew lz4 openssl pcre xxhash zlib zstd`. There is a build log on cmadev25, in . `/build/mrodozov/root/build_root/BUILD/slc7_amd64_gcc820/lcg/root/6.21.01-cms/log`. could you help me whats wrong ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5525
https://github.com/root-project/root/pull/5525:197,deployability,instal,install,197,"with this change the GL directory in include disappeared and now it fails to find glew.h:. https://github.com/cms-sw/cmsdist/pull/5800. we are using -Dbuiltin_glew=ON which should be enough during install time (I guess). I can see the end of the config saying . `-- Enabled support for: asimage builtin_afterimage builtin_clang builtin_ftgl builtin_gl2ps builtin_glew ...`. and the builtins dir contains this: `davix glew lz4 openssl pcre xxhash zlib zstd`. There is a build log on cmadev25, in . `/build/mrodozov/root/build_root/BUILD/slc7_amd64_gcc820/lcg/root/6.21.01-cms/log`. could you help me whats wrong ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5525
https://github.com/root-project/root/pull/5525:395,deployability,contain,contains,395,"with this change the GL directory in include disappeared and now it fails to find glew.h:. https://github.com/cms-sw/cmsdist/pull/5800. we are using -Dbuiltin_glew=ON which should be enough during install time (I guess). I can see the end of the config saying . `-- Enabled support for: asimage builtin_afterimage builtin_clang builtin_ftgl builtin_gl2ps builtin_glew ...`. and the builtins dir contains this: `davix glew lz4 openssl pcre xxhash zlib zstd`. There is a build log on cmadev25, in . `/build/mrodozov/root/build_root/BUILD/slc7_amd64_gcc820/lcg/root/6.21.01-cms/log`. could you help me whats wrong ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5525
https://github.com/root-project/root/pull/5525:469,deployability,build,build,469,"with this change the GL directory in include disappeared and now it fails to find glew.h:. https://github.com/cms-sw/cmsdist/pull/5800. we are using -Dbuiltin_glew=ON which should be enough during install time (I guess). I can see the end of the config saying . `-- Enabled support for: asimage builtin_afterimage builtin_clang builtin_ftgl builtin_gl2ps builtin_glew ...`. and the builtins dir contains this: `davix glew lz4 openssl pcre xxhash zlib zstd`. There is a build log on cmadev25, in . `/build/mrodozov/root/build_root/BUILD/slc7_amd64_gcc820/lcg/root/6.21.01-cms/log`. could you help me whats wrong ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5525
https://github.com/root-project/root/pull/5525:475,deployability,log,log,475,"with this change the GL directory in include disappeared and now it fails to find glew.h:. https://github.com/cms-sw/cmsdist/pull/5800. we are using -Dbuiltin_glew=ON which should be enough during install time (I guess). I can see the end of the config saying . `-- Enabled support for: asimage builtin_afterimage builtin_clang builtin_ftgl builtin_gl2ps builtin_glew ...`. and the builtins dir contains this: `davix glew lz4 openssl pcre xxhash zlib zstd`. There is a build log on cmadev25, in . `/build/mrodozov/root/build_root/BUILD/slc7_amd64_gcc820/lcg/root/6.21.01-cms/log`. could you help me whats wrong ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5525
https://github.com/root-project/root/pull/5525:499,deployability,build,build,499,"with this change the GL directory in include disappeared and now it fails to find glew.h:. https://github.com/cms-sw/cmsdist/pull/5800. we are using -Dbuiltin_glew=ON which should be enough during install time (I guess). I can see the end of the config saying . `-- Enabled support for: asimage builtin_afterimage builtin_clang builtin_ftgl builtin_gl2ps builtin_glew ...`. and the builtins dir contains this: `davix glew lz4 openssl pcre xxhash zlib zstd`. There is a build log on cmadev25, in . `/build/mrodozov/root/build_root/BUILD/slc7_amd64_gcc820/lcg/root/6.21.01-cms/log`. could you help me whats wrong ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5525
https://github.com/root-project/root/pull/5525:530,deployability,BUILD,BUILD,530,"with this change the GL directory in include disappeared and now it fails to find glew.h:. https://github.com/cms-sw/cmsdist/pull/5800. we are using -Dbuiltin_glew=ON which should be enough during install time (I guess). I can see the end of the config saying . `-- Enabled support for: asimage builtin_afterimage builtin_clang builtin_ftgl builtin_gl2ps builtin_glew ...`. and the builtins dir contains this: `davix glew lz4 openssl pcre xxhash zlib zstd`. There is a build log on cmadev25, in . `/build/mrodozov/root/build_root/BUILD/slc7_amd64_gcc820/lcg/root/6.21.01-cms/log`. could you help me whats wrong ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5525
https://github.com/root-project/root/pull/5525:575,deployability,log,log,575,"with this change the GL directory in include disappeared and now it fails to find glew.h:. https://github.com/cms-sw/cmsdist/pull/5800. we are using -Dbuiltin_glew=ON which should be enough during install time (I guess). I can see the end of the config saying . `-- Enabled support for: asimage builtin_afterimage builtin_clang builtin_ftgl builtin_gl2ps builtin_glew ...`. and the builtins dir contains this: `davix glew lz4 openssl pcre xxhash zlib zstd`. There is a build log on cmadev25, in . `/build/mrodozov/root/build_root/BUILD/slc7_amd64_gcc820/lcg/root/6.21.01-cms/log`. could you help me whats wrong ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5525
https://github.com/root-project/root/pull/5525:205,performance,time,time,205,"with this change the GL directory in include disappeared and now it fails to find glew.h:. https://github.com/cms-sw/cmsdist/pull/5800. we are using -Dbuiltin_glew=ON which should be enough during install time (I guess). I can see the end of the config saying . `-- Enabled support for: asimage builtin_afterimage builtin_clang builtin_ftgl builtin_gl2ps builtin_glew ...`. and the builtins dir contains this: `davix glew lz4 openssl pcre xxhash zlib zstd`. There is a build log on cmadev25, in . `/build/mrodozov/root/build_root/BUILD/slc7_amd64_gcc820/lcg/root/6.21.01-cms/log`. could you help me whats wrong ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5525
https://github.com/root-project/root/pull/5525:68,reliability,fail,fails,68,"with this change the GL directory in include disappeared and now it fails to find glew.h:. https://github.com/cms-sw/cmsdist/pull/5800. we are using -Dbuiltin_glew=ON which should be enough during install time (I guess). I can see the end of the config saying . `-- Enabled support for: asimage builtin_afterimage builtin_clang builtin_ftgl builtin_gl2ps builtin_glew ...`. and the builtins dir contains this: `davix glew lz4 openssl pcre xxhash zlib zstd`. There is a build log on cmadev25, in . `/build/mrodozov/root/build_root/BUILD/slc7_amd64_gcc820/lcg/root/6.21.01-cms/log`. could you help me whats wrong ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5525
https://github.com/root-project/root/pull/5525:475,safety,log,log,475,"with this change the GL directory in include disappeared and now it fails to find glew.h:. https://github.com/cms-sw/cmsdist/pull/5800. we are using -Dbuiltin_glew=ON which should be enough during install time (I guess). I can see the end of the config saying . `-- Enabled support for: asimage builtin_afterimage builtin_clang builtin_ftgl builtin_gl2ps builtin_glew ...`. and the builtins dir contains this: `davix glew lz4 openssl pcre xxhash zlib zstd`. There is a build log on cmadev25, in . `/build/mrodozov/root/build_root/BUILD/slc7_amd64_gcc820/lcg/root/6.21.01-cms/log`. could you help me whats wrong ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5525
https://github.com/root-project/root/pull/5525:575,safety,log,log,575,"with this change the GL directory in include disappeared and now it fails to find glew.h:. https://github.com/cms-sw/cmsdist/pull/5800. we are using -Dbuiltin_glew=ON which should be enough during install time (I guess). I can see the end of the config saying . `-- Enabled support for: asimage builtin_afterimage builtin_clang builtin_ftgl builtin_gl2ps builtin_glew ...`. and the builtins dir contains this: `davix glew lz4 openssl pcre xxhash zlib zstd`. There is a build log on cmadev25, in . `/build/mrodozov/root/build_root/BUILD/slc7_amd64_gcc820/lcg/root/6.21.01-cms/log`. could you help me whats wrong ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5525
https://github.com/root-project/root/pull/5525:475,security,log,log,475,"with this change the GL directory in include disappeared and now it fails to find glew.h:. https://github.com/cms-sw/cmsdist/pull/5800. we are using -Dbuiltin_glew=ON which should be enough during install time (I guess). I can see the end of the config saying . `-- Enabled support for: asimage builtin_afterimage builtin_clang builtin_ftgl builtin_gl2ps builtin_glew ...`. and the builtins dir contains this: `davix glew lz4 openssl pcre xxhash zlib zstd`. There is a build log on cmadev25, in . `/build/mrodozov/root/build_root/BUILD/slc7_amd64_gcc820/lcg/root/6.21.01-cms/log`. could you help me whats wrong ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5525
https://github.com/root-project/root/pull/5525:575,security,log,log,575,"with this change the GL directory in include disappeared and now it fails to find glew.h:. https://github.com/cms-sw/cmsdist/pull/5800. we are using -Dbuiltin_glew=ON which should be enough during install time (I guess). I can see the end of the config saying . `-- Enabled support for: asimage builtin_afterimage builtin_clang builtin_ftgl builtin_gl2ps builtin_glew ...`. and the builtins dir contains this: `davix glew lz4 openssl pcre xxhash zlib zstd`. There is a build log on cmadev25, in . `/build/mrodozov/root/build_root/BUILD/slc7_amd64_gcc820/lcg/root/6.21.01-cms/log`. could you help me whats wrong ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5525
https://github.com/root-project/root/pull/5525:475,testability,log,log,475,"with this change the GL directory in include disappeared and now it fails to find glew.h:. https://github.com/cms-sw/cmsdist/pull/5800. we are using -Dbuiltin_glew=ON which should be enough during install time (I guess). I can see the end of the config saying . `-- Enabled support for: asimage builtin_afterimage builtin_clang builtin_ftgl builtin_gl2ps builtin_glew ...`. and the builtins dir contains this: `davix glew lz4 openssl pcre xxhash zlib zstd`. There is a build log on cmadev25, in . `/build/mrodozov/root/build_root/BUILD/slc7_amd64_gcc820/lcg/root/6.21.01-cms/log`. could you help me whats wrong ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5525
https://github.com/root-project/root/pull/5525:575,testability,log,log,575,"with this change the GL directory in include disappeared and now it fails to find glew.h:. https://github.com/cms-sw/cmsdist/pull/5800. we are using -Dbuiltin_glew=ON which should be enough during install time (I guess). I can see the end of the config saying . `-- Enabled support for: asimage builtin_afterimage builtin_clang builtin_ftgl builtin_gl2ps builtin_glew ...`. and the builtins dir contains this: `davix glew lz4 openssl pcre xxhash zlib zstd`. There is a build log on cmadev25, in . `/build/mrodozov/root/build_root/BUILD/slc7_amd64_gcc820/lcg/root/6.21.01-cms/log`. could you help me whats wrong ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5525
https://github.com/root-project/root/pull/5525:274,usability,support,support,274,"with this change the GL directory in include disappeared and now it fails to find glew.h:. https://github.com/cms-sw/cmsdist/pull/5800. we are using -Dbuiltin_glew=ON which should be enough during install time (I guess). I can see the end of the config saying . `-- Enabled support for: asimage builtin_afterimage builtin_clang builtin_ftgl builtin_gl2ps builtin_glew ...`. and the builtins dir contains this: `davix glew lz4 openssl pcre xxhash zlib zstd`. There is a build log on cmadev25, in . `/build/mrodozov/root/build_root/BUILD/slc7_amd64_gcc820/lcg/root/6.21.01-cms/log`. could you help me whats wrong ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5525
https://github.com/root-project/root/pull/5525:591,usability,help,help,591,"with this change the GL directory in include disappeared and now it fails to find glew.h:. https://github.com/cms-sw/cmsdist/pull/5800. we are using -Dbuiltin_glew=ON which should be enough during install time (I guess). I can see the end of the config saying . `-- Enabled support for: asimage builtin_afterimage builtin_clang builtin_ftgl builtin_gl2ps builtin_glew ...`. and the builtins dir contains this: `davix glew lz4 openssl pcre xxhash zlib zstd`. There is a build log on cmadev25, in . `/build/mrodozov/root/build_root/BUILD/slc7_amd64_gcc820/lcg/root/6.21.01-cms/log`. could you help me whats wrong ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5525
https://github.com/root-project/root/pull/5528:53,usability,close,close,53,"Yes, seems to be 6.18 has some other side effects. I close it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5528
https://github.com/root-project/root/pull/5530:107,deployability,releas,release,107,"It's understood. Older gccs won't allow to construct std::tuple from e.g. {1, 1}. That was fixed after the release of C++11. Fix incoming. Clarification:. c++11 didn't allow, and gcc implemented. They were conforming to the standard at the time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5530
https://github.com/root-project/root/pull/5530:224,interoperability,standard,standard,224,"It's understood. Older gccs won't allow to construct std::tuple from e.g. {1, 1}. That was fixed after the release of C++11. Fix incoming. Clarification:. c++11 didn't allow, and gcc implemented. They were conforming to the standard at the time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5530
https://github.com/root-project/root/pull/5530:240,performance,time,time,240,"It's understood. Older gccs won't allow to construct std::tuple from e.g. {1, 1}. That was fixed after the release of C++11. Fix incoming. Clarification:. c++11 didn't allow, and gcc implemented. They were conforming to the standard at the time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5530
https://github.com/root-project/root/pull/5530:49,deployability,Build,BuildCheck,49,"There is also a. ```. Warning in <TStreamerInfo::BuildCheck>: . The StreamerInfo of class RooExponential read from file ./exponentialPdf.root. has the same version (=1) as the active class but a different checksum. You should update the version to ClassDef(RooExponential,2). Do not try to write objects with the current class definition,. the files will not be readable. ```. not sure if related",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5530
https://github.com/root-project/root/pull/5530:156,deployability,version,version,156,"There is also a. ```. Warning in <TStreamerInfo::BuildCheck>: . The StreamerInfo of class RooExponential read from file ./exponentialPdf.root. has the same version (=1) as the active class but a different checksum. You should update the version to ClassDef(RooExponential,2). Do not try to write objects with the current class definition,. the files will not be readable. ```. not sure if related",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5530
https://github.com/root-project/root/pull/5530:226,deployability,updat,update,226,"There is also a. ```. Warning in <TStreamerInfo::BuildCheck>: . The StreamerInfo of class RooExponential read from file ./exponentialPdf.root. has the same version (=1) as the active class but a different checksum. You should update the version to ClassDef(RooExponential,2). Do not try to write objects with the current class definition,. the files will not be readable. ```. not sure if related",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5530
https://github.com/root-project/root/pull/5530:237,deployability,version,version,237,"There is also a. ```. Warning in <TStreamerInfo::BuildCheck>: . The StreamerInfo of class RooExponential read from file ./exponentialPdf.root. has the same version (=1) as the active class but a different checksum. You should update the version to ClassDef(RooExponential,2). Do not try to write objects with the current class definition,. the files will not be readable. ```. not sure if related",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5530
https://github.com/root-project/root/pull/5530:313,energy efficiency,current,current,313,"There is also a. ```. Warning in <TStreamerInfo::BuildCheck>: . The StreamerInfo of class RooExponential read from file ./exponentialPdf.root. has the same version (=1) as the active class but a different checksum. You should update the version to ClassDef(RooExponential,2). Do not try to write objects with the current class definition,. the files will not be readable. ```. not sure if related",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5530
https://github.com/root-project/root/pull/5530:156,integrability,version,version,156,"There is also a. ```. Warning in <TStreamerInfo::BuildCheck>: . The StreamerInfo of class RooExponential read from file ./exponentialPdf.root. has the same version (=1) as the active class but a different checksum. You should update the version to ClassDef(RooExponential,2). Do not try to write objects with the current class definition,. the files will not be readable. ```. not sure if related",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5530
https://github.com/root-project/root/pull/5530:237,integrability,version,version,237,"There is also a. ```. Warning in <TStreamerInfo::BuildCheck>: . The StreamerInfo of class RooExponential read from file ./exponentialPdf.root. has the same version (=1) as the active class but a different checksum. You should update the version to ClassDef(RooExponential,2). Do not try to write objects with the current class definition,. the files will not be readable. ```. not sure if related",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5530
https://github.com/root-project/root/pull/5530:156,modifiability,version,version,156,"There is also a. ```. Warning in <TStreamerInfo::BuildCheck>: . The StreamerInfo of class RooExponential read from file ./exponentialPdf.root. has the same version (=1) as the active class but a different checksum. You should update the version to ClassDef(RooExponential,2). Do not try to write objects with the current class definition,. the files will not be readable. ```. not sure if related",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5530
https://github.com/root-project/root/pull/5530:237,modifiability,version,version,237,"There is also a. ```. Warning in <TStreamerInfo::BuildCheck>: . The StreamerInfo of class RooExponential read from file ./exponentialPdf.root. has the same version (=1) as the active class but a different checksum. You should update the version to ClassDef(RooExponential,2). Do not try to write objects with the current class definition,. the files will not be readable. ```. not sure if related",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5530
https://github.com/root-project/root/pull/5530:226,safety,updat,update,226,"There is also a. ```. Warning in <TStreamerInfo::BuildCheck>: . The StreamerInfo of class RooExponential read from file ./exponentialPdf.root. has the same version (=1) as the active class but a different checksum. You should update the version to ClassDef(RooExponential,2). Do not try to write objects with the current class definition,. the files will not be readable. ```. not sure if related",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5530
https://github.com/root-project/root/pull/5530:205,security,checksum,checksum,205,"There is also a. ```. Warning in <TStreamerInfo::BuildCheck>: . The StreamerInfo of class RooExponential read from file ./exponentialPdf.root. has the same version (=1) as the active class but a different checksum. You should update the version to ClassDef(RooExponential,2). Do not try to write objects with the current class definition,. the files will not be readable. ```. not sure if related",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5530
https://github.com/root-project/root/pull/5530:226,security,updat,update,226,"There is also a. ```. Warning in <TStreamerInfo::BuildCheck>: . The StreamerInfo of class RooExponential read from file ./exponentialPdf.root. has the same version (=1) as the active class but a different checksum. You should update the version to ClassDef(RooExponential,2). Do not try to write objects with the current class definition,. the files will not be readable. ```. not sure if related",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5530
https://github.com/root-project/root/pull/5530:62,deployability,Build,BuildCheck,62,"F. > There is also a. > . > ```. > Warning in <TStreamerInfo::BuildCheck>: . > The StreamerInfo of class RooExponential read from file ./exponentialPdf.root. > has the same version (=1) as the active class but a different checksum. > You should update the version to ClassDef(RooExponential,2). > Do not try to write objects with the current class definition,. > the files will not be readable. > ```. > . > not sure if related. That's fixed in the monster-PR. Good spot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5530
https://github.com/root-project/root/pull/5530:173,deployability,version,version,173,"F. > There is also a. > . > ```. > Warning in <TStreamerInfo::BuildCheck>: . > The StreamerInfo of class RooExponential read from file ./exponentialPdf.root. > has the same version (=1) as the active class but a different checksum. > You should update the version to ClassDef(RooExponential,2). > Do not try to write objects with the current class definition,. > the files will not be readable. > ```. > . > not sure if related. That's fixed in the monster-PR. Good spot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5530
https://github.com/root-project/root/pull/5530:245,deployability,updat,update,245,"F. > There is also a. > . > ```. > Warning in <TStreamerInfo::BuildCheck>: . > The StreamerInfo of class RooExponential read from file ./exponentialPdf.root. > has the same version (=1) as the active class but a different checksum. > You should update the version to ClassDef(RooExponential,2). > Do not try to write objects with the current class definition,. > the files will not be readable. > ```. > . > not sure if related. That's fixed in the monster-PR. Good spot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5530
https://github.com/root-project/root/pull/5530:256,deployability,version,version,256,"F. > There is also a. > . > ```. > Warning in <TStreamerInfo::BuildCheck>: . > The StreamerInfo of class RooExponential read from file ./exponentialPdf.root. > has the same version (=1) as the active class but a different checksum. > You should update the version to ClassDef(RooExponential,2). > Do not try to write objects with the current class definition,. > the files will not be readable. > ```. > . > not sure if related. That's fixed in the monster-PR. Good spot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5530
https://github.com/root-project/root/pull/5530:334,energy efficiency,current,current,334,"F. > There is also a. > . > ```. > Warning in <TStreamerInfo::BuildCheck>: . > The StreamerInfo of class RooExponential read from file ./exponentialPdf.root. > has the same version (=1) as the active class but a different checksum. > You should update the version to ClassDef(RooExponential,2). > Do not try to write objects with the current class definition,. > the files will not be readable. > ```. > . > not sure if related. That's fixed in the monster-PR. Good spot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5530
https://github.com/root-project/root/pull/5530:173,integrability,version,version,173,"F. > There is also a. > . > ```. > Warning in <TStreamerInfo::BuildCheck>: . > The StreamerInfo of class RooExponential read from file ./exponentialPdf.root. > has the same version (=1) as the active class but a different checksum. > You should update the version to ClassDef(RooExponential,2). > Do not try to write objects with the current class definition,. > the files will not be readable. > ```. > . > not sure if related. That's fixed in the monster-PR. Good spot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5530
https://github.com/root-project/root/pull/5530:256,integrability,version,version,256,"F. > There is also a. > . > ```. > Warning in <TStreamerInfo::BuildCheck>: . > The StreamerInfo of class RooExponential read from file ./exponentialPdf.root. > has the same version (=1) as the active class but a different checksum. > You should update the version to ClassDef(RooExponential,2). > Do not try to write objects with the current class definition,. > the files will not be readable. > ```. > . > not sure if related. That's fixed in the monster-PR. Good spot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5530
https://github.com/root-project/root/pull/5530:173,modifiability,version,version,173,"F. > There is also a. > . > ```. > Warning in <TStreamerInfo::BuildCheck>: . > The StreamerInfo of class RooExponential read from file ./exponentialPdf.root. > has the same version (=1) as the active class but a different checksum. > You should update the version to ClassDef(RooExponential,2). > Do not try to write objects with the current class definition,. > the files will not be readable. > ```. > . > not sure if related. That's fixed in the monster-PR. Good spot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5530
https://github.com/root-project/root/pull/5530:256,modifiability,version,version,256,"F. > There is also a. > . > ```. > Warning in <TStreamerInfo::BuildCheck>: . > The StreamerInfo of class RooExponential read from file ./exponentialPdf.root. > has the same version (=1) as the active class but a different checksum. > You should update the version to ClassDef(RooExponential,2). > Do not try to write objects with the current class definition,. > the files will not be readable. > ```. > . > not sure if related. That's fixed in the monster-PR. Good spot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5530
https://github.com/root-project/root/pull/5530:245,safety,updat,update,245,"F. > There is also a. > . > ```. > Warning in <TStreamerInfo::BuildCheck>: . > The StreamerInfo of class RooExponential read from file ./exponentialPdf.root. > has the same version (=1) as the active class but a different checksum. > You should update the version to ClassDef(RooExponential,2). > Do not try to write objects with the current class definition,. > the files will not be readable. > ```. > . > not sure if related. That's fixed in the monster-PR. Good spot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5530
https://github.com/root-project/root/pull/5530:222,security,checksum,checksum,222,"F. > There is also a. > . > ```. > Warning in <TStreamerInfo::BuildCheck>: . > The StreamerInfo of class RooExponential read from file ./exponentialPdf.root. > has the same version (=1) as the active class but a different checksum. > You should update the version to ClassDef(RooExponential,2). > Do not try to write objects with the current class definition,. > the files will not be readable. > ```. > . > not sure if related. That's fixed in the monster-PR. Good spot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5530
https://github.com/root-project/root/pull/5530:245,security,updat,update,245,"F. > There is also a. > . > ```. > Warning in <TStreamerInfo::BuildCheck>: . > The StreamerInfo of class RooExponential read from file ./exponentialPdf.root. > has the same version (=1) as the active class but a different checksum. > You should update the version to ClassDef(RooExponential,2). > Do not try to write objects with the current class definition,. > the files will not be readable. > ```. > . > not sure if related. That's fixed in the monster-PR. Good spot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5530
https://github.com/root-project/root/pull/5531:11,deployability,build,build,11,@phsft-bot build with flags -Dxrootd=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5531
https://github.com/root-project/root/pull/5532:94,deployability,fail,fail,94,"Here goes the explanation: We need runtime flags to decide whether we expect a python test to fail or not. We would love to have environment variables for this, however, if we just define them in `root-build.cmake`, they are not visible in the testing run by `root-test.cmake`. Because I haven't found a way to export the variables, we use the `CTestCustom.cmake` script to hook in (optionally) the environment variables when we call ctest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5532
https://github.com/root-project/root/pull/5532:202,deployability,build,build,202,"Here goes the explanation: We need runtime flags to decide whether we expect a python test to fail or not. We would love to have environment variables for this, however, if we just define them in `root-build.cmake`, they are not visible in the testing run by `root-test.cmake`. Because I haven't found a way to export the variables, we use the `CTestCustom.cmake` script to hook in (optionally) the environment variables when we call ctest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5532
https://github.com/root-project/root/pull/5532:141,modifiability,variab,variables,141,"Here goes the explanation: We need runtime flags to decide whether we expect a python test to fail or not. We would love to have environment variables for this, however, if we just define them in `root-build.cmake`, they are not visible in the testing run by `root-test.cmake`. Because I haven't found a way to export the variables, we use the `CTestCustom.cmake` script to hook in (optionally) the environment variables when we call ctest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5532
https://github.com/root-project/root/pull/5532:322,modifiability,variab,variables,322,"Here goes the explanation: We need runtime flags to decide whether we expect a python test to fail or not. We would love to have environment variables for this, however, if we just define them in `root-build.cmake`, they are not visible in the testing run by `root-test.cmake`. Because I haven't found a way to export the variables, we use the `CTestCustom.cmake` script to hook in (optionally) the environment variables when we call ctest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5532
https://github.com/root-project/root/pull/5532:411,modifiability,variab,variables,411,"Here goes the explanation: We need runtime flags to decide whether we expect a python test to fail or not. We would love to have environment variables for this, however, if we just define them in `root-build.cmake`, they are not visible in the testing run by `root-test.cmake`. Because I haven't found a way to export the variables, we use the `CTestCustom.cmake` script to hook in (optionally) the environment variables when we call ctest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5532
https://github.com/root-project/root/pull/5532:94,reliability,fail,fail,94,"Here goes the explanation: We need runtime flags to decide whether we expect a python test to fail or not. We would love to have environment variables for this, however, if we just define them in `root-build.cmake`, they are not visible in the testing run by `root-test.cmake`. Because I haven't found a way to export the variables, we use the `CTestCustom.cmake` script to hook in (optionally) the environment variables when we call ctest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5532
https://github.com/root-project/root/pull/5532:86,safety,test,test,86,"Here goes the explanation: We need runtime flags to decide whether we expect a python test to fail or not. We would love to have environment variables for this, however, if we just define them in `root-build.cmake`, they are not visible in the testing run by `root-test.cmake`. Because I haven't found a way to export the variables, we use the `CTestCustom.cmake` script to hook in (optionally) the environment variables when we call ctest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5532
https://github.com/root-project/root/pull/5532:244,safety,test,testing,244,"Here goes the explanation: We need runtime flags to decide whether we expect a python test to fail or not. We would love to have environment variables for this, however, if we just define them in `root-build.cmake`, they are not visible in the testing run by `root-test.cmake`. Because I haven't found a way to export the variables, we use the `CTestCustom.cmake` script to hook in (optionally) the environment variables when we call ctest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5532
https://github.com/root-project/root/pull/5532:265,safety,test,test,265,"Here goes the explanation: We need runtime flags to decide whether we expect a python test to fail or not. We would love to have environment variables for this, however, if we just define them in `root-build.cmake`, they are not visible in the testing run by `root-test.cmake`. Because I haven't found a way to export the variables, we use the `CTestCustom.cmake` script to hook in (optionally) the environment variables when we call ctest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5532
https://github.com/root-project/root/pull/5532:86,testability,test,test,86,"Here goes the explanation: We need runtime flags to decide whether we expect a python test to fail or not. We would love to have environment variables for this, however, if we just define them in `root-build.cmake`, they are not visible in the testing run by `root-test.cmake`. Because I haven't found a way to export the variables, we use the `CTestCustom.cmake` script to hook in (optionally) the environment variables when we call ctest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5532
https://github.com/root-project/root/pull/5532:244,testability,test,testing,244,"Here goes the explanation: We need runtime flags to decide whether we expect a python test to fail or not. We would love to have environment variables for this, however, if we just define them in `root-build.cmake`, they are not visible in the testing run by `root-test.cmake`. Because I haven't found a way to export the variables, we use the `CTestCustom.cmake` script to hook in (optionally) the environment variables when we call ctest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5532
https://github.com/root-project/root/pull/5532:265,testability,test,test,265,"Here goes the explanation: We need runtime flags to decide whether we expect a python test to fail or not. We would love to have environment variables for this, however, if we just define them in `root-build.cmake`, they are not visible in the testing run by `root-test.cmake`. Because I haven't found a way to export the variables, we use the `CTestCustom.cmake` script to hook in (optionally) the environment variables when we call ctest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5532
https://github.com/root-project/root/pull/5532:374,testability,hook,hook,374,"Here goes the explanation: We need runtime flags to decide whether we expect a python test to fail or not. We would love to have environment variables for this, however, if we just define them in `root-build.cmake`, they are not visible in the testing run by `root-test.cmake`. Because I haven't found a way to export the variables, we use the `CTestCustom.cmake` script to hook in (optionally) the environment variables when we call ctest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5532
https://github.com/root-project/root/pull/5535:32,interoperability,conflict,conflicts,32,"@linev . I tried to resolve the conflicts on github. The editing mode is actually nice, but I'm not sure if this merge commit that now appeared is what we want. It probably makes sense to squash this into the roofit commit of your branch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5535
https://github.com/root-project/root/pull/5535:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5535
https://github.com/root-project/root/pull/5536:32,reliability,doe,does,32,"Hi Stephan, I'm confused, #5530 does not seem to have those warnings anymore? Also, ROOT is simply able to read an old `RooRealProxy` into a new `RooTemplateProxy<RooAbsReal>` with no problem, no instructions needed other than. ```. #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";. ```. ? Do we need a test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:234,reliability,pra,pragma,234,"Hi Stephan, I'm confused, #5530 does not seem to have those warnings anymore? Also, ROOT is simply able to read an old `RooRealProxy` into a new `RooTemplateProxy<RooAbsReal>` with no problem, no instructions needed other than. ```. #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";. ```. ? Do we need a test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:338,safety,test,test,338,"Hi Stephan, I'm confused, #5530 does not seem to have those warnings anymore? Also, ROOT is simply able to read an old `RooRealProxy` into a new `RooTemplateProxy<RooAbsReal>` with no problem, no instructions needed other than. ```. #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";. ```. ? Do we need a test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:92,testability,simpl,simply,92,"Hi Stephan, I'm confused, #5530 does not seem to have those warnings anymore? Also, ROOT is simply able to read an old `RooRealProxy` into a new `RooTemplateProxy<RooAbsReal>` with no problem, no instructions needed other than. ```. #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";. ```. ? Do we need a test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:338,testability,test,test,338,"Hi Stephan, I'm confused, #5530 does not seem to have those warnings anymore? Also, ROOT is simply able to read an old `RooRealProxy` into a new `RooTemplateProxy<RooAbsReal>` with no problem, no instructions needed other than. ```. #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";. ```. ? Do we need a test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:92,usability,simpl,simply,92,"Hi Stephan, I'm confused, #5530 does not seem to have those warnings anymore? Also, ROOT is simply able to read an old `RooRealProxy` into a new `RooTemplateProxy<RooAbsReal>` with no problem, no instructions needed other than. ```. #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";. ```. ? Do we need a test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:557,deployability,version,version,557,"@pcanal . > Really? > Or is it just the ""renaming rules"" that solves the problem? Positive! I tested by removing the renaming rule. The typedef is `using RooRealProxy = RooTemplateProxy<RooAbsReal>;`. I use this so old classes can keep using `RooRealProxy`, although this is now a specific instance of a template. When reading, if you use for the LinkDef.h:. ```. #pragma link C++ class RooTemplateProxy<RooAbsReal>+; //What it actually is now. ```. You get. ```. Warning in <TStreamerInfo::CompareContent>: The following data member of. the on-file layout version 1 of class 'RooExponential' differs from . the in-memory layout version 1:. RooRealProxy x; //. vs. RooTemplateProxy<RooAbsReal> x; //. ```. for *all* old classes in RooFit. However, with. ```. #pragma link C++ class RooRealProxy+; // == RooTemplateProxy<RooAbsReal>. ```. all old classes can remain as they are. Thinking about it, I now came to the conclusion that the schema evolution problem I mentioned to Philippe about two weeks ago is exactly the same problem. The solution is just to mention the ""right"" typedef in LinkDef.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:629,deployability,version,version,629,"@pcanal . > Really? > Or is it just the ""renaming rules"" that solves the problem? Positive! I tested by removing the renaming rule. The typedef is `using RooRealProxy = RooTemplateProxy<RooAbsReal>;`. I use this so old classes can keep using `RooRealProxy`, although this is now a specific instance of a template. When reading, if you use for the LinkDef.h:. ```. #pragma link C++ class RooTemplateProxy<RooAbsReal>+; //What it actually is now. ```. You get. ```. Warning in <TStreamerInfo::CompareContent>: The following data member of. the on-file layout version 1 of class 'RooExponential' differs from . the in-memory layout version 1:. RooRealProxy x; //. vs. RooTemplateProxy<RooAbsReal> x; //. ```. for *all* old classes in RooFit. However, with. ```. #pragma link C++ class RooRealProxy+; // == RooTemplateProxy<RooAbsReal>. ```. all old classes can remain as they are. Thinking about it, I now came to the conclusion that the schema evolution problem I mentioned to Philippe about two weeks ago is exactly the same problem. The solution is just to mention the ""right"" typedef in LinkDef.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:557,integrability,version,version,557,"@pcanal . > Really? > Or is it just the ""renaming rules"" that solves the problem? Positive! I tested by removing the renaming rule. The typedef is `using RooRealProxy = RooTemplateProxy<RooAbsReal>;`. I use this so old classes can keep using `RooRealProxy`, although this is now a specific instance of a template. When reading, if you use for the LinkDef.h:. ```. #pragma link C++ class RooTemplateProxy<RooAbsReal>+; //What it actually is now. ```. You get. ```. Warning in <TStreamerInfo::CompareContent>: The following data member of. the on-file layout version 1 of class 'RooExponential' differs from . the in-memory layout version 1:. RooRealProxy x; //. vs. RooTemplateProxy<RooAbsReal> x; //. ```. for *all* old classes in RooFit. However, with. ```. #pragma link C++ class RooRealProxy+; // == RooTemplateProxy<RooAbsReal>. ```. all old classes can remain as they are. Thinking about it, I now came to the conclusion that the schema evolution problem I mentioned to Philippe about two weeks ago is exactly the same problem. The solution is just to mention the ""right"" typedef in LinkDef.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:629,integrability,version,version,629,"@pcanal . > Really? > Or is it just the ""renaming rules"" that solves the problem? Positive! I tested by removing the renaming rule. The typedef is `using RooRealProxy = RooTemplateProxy<RooAbsReal>;`. I use this so old classes can keep using `RooRealProxy`, although this is now a specific instance of a template. When reading, if you use for the LinkDef.h:. ```. #pragma link C++ class RooTemplateProxy<RooAbsReal>+; //What it actually is now. ```. You get. ```. Warning in <TStreamerInfo::CompareContent>: The following data member of. the on-file layout version 1 of class 'RooExponential' differs from . the in-memory layout version 1:. RooRealProxy x; //. vs. RooTemplateProxy<RooAbsReal> x; //. ```. for *all* old classes in RooFit. However, with. ```. #pragma link C++ class RooRealProxy+; // == RooTemplateProxy<RooAbsReal>. ```. all old classes can remain as they are. Thinking about it, I now came to the conclusion that the schema evolution problem I mentioned to Philippe about two weeks ago is exactly the same problem. The solution is just to mention the ""right"" typedef in LinkDef.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:935,integrability,schema,schema,935,"@pcanal . > Really? > Or is it just the ""renaming rules"" that solves the problem? Positive! I tested by removing the renaming rule. The typedef is `using RooRealProxy = RooTemplateProxy<RooAbsReal>;`. I use this so old classes can keep using `RooRealProxy`, although this is now a specific instance of a template. When reading, if you use for the LinkDef.h:. ```. #pragma link C++ class RooTemplateProxy<RooAbsReal>+; //What it actually is now. ```. You get. ```. Warning in <TStreamerInfo::CompareContent>: The following data member of. the on-file layout version 1 of class 'RooExponential' differs from . the in-memory layout version 1:. RooRealProxy x; //. vs. RooTemplateProxy<RooAbsReal> x; //. ```. for *all* old classes in RooFit. However, with. ```. #pragma link C++ class RooRealProxy+; // == RooTemplateProxy<RooAbsReal>. ```. all old classes can remain as they are. Thinking about it, I now came to the conclusion that the schema evolution problem I mentioned to Philippe about two weeks ago is exactly the same problem. The solution is just to mention the ""right"" typedef in LinkDef.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:281,interoperability,specif,specific,281,"@pcanal . > Really? > Or is it just the ""renaming rules"" that solves the problem? Positive! I tested by removing the renaming rule. The typedef is `using RooRealProxy = RooTemplateProxy<RooAbsReal>;`. I use this so old classes can keep using `RooRealProxy`, although this is now a specific instance of a template. When reading, if you use for the LinkDef.h:. ```. #pragma link C++ class RooTemplateProxy<RooAbsReal>+; //What it actually is now. ```. You get. ```. Warning in <TStreamerInfo::CompareContent>: The following data member of. the on-file layout version 1 of class 'RooExponential' differs from . the in-memory layout version 1:. RooRealProxy x; //. vs. RooTemplateProxy<RooAbsReal> x; //. ```. for *all* old classes in RooFit. However, with. ```. #pragma link C++ class RooRealProxy+; // == RooTemplateProxy<RooAbsReal>. ```. all old classes can remain as they are. Thinking about it, I now came to the conclusion that the schema evolution problem I mentioned to Philippe about two weeks ago is exactly the same problem. The solution is just to mention the ""right"" typedef in LinkDef.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:557,modifiability,version,version,557,"@pcanal . > Really? > Or is it just the ""renaming rules"" that solves the problem? Positive! I tested by removing the renaming rule. The typedef is `using RooRealProxy = RooTemplateProxy<RooAbsReal>;`. I use this so old classes can keep using `RooRealProxy`, although this is now a specific instance of a template. When reading, if you use for the LinkDef.h:. ```. #pragma link C++ class RooTemplateProxy<RooAbsReal>+; //What it actually is now. ```. You get. ```. Warning in <TStreamerInfo::CompareContent>: The following data member of. the on-file layout version 1 of class 'RooExponential' differs from . the in-memory layout version 1:. RooRealProxy x; //. vs. RooTemplateProxy<RooAbsReal> x; //. ```. for *all* old classes in RooFit. However, with. ```. #pragma link C++ class RooRealProxy+; // == RooTemplateProxy<RooAbsReal>. ```. all old classes can remain as they are. Thinking about it, I now came to the conclusion that the schema evolution problem I mentioned to Philippe about two weeks ago is exactly the same problem. The solution is just to mention the ""right"" typedef in LinkDef.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:629,modifiability,version,version,629,"@pcanal . > Really? > Or is it just the ""renaming rules"" that solves the problem? Positive! I tested by removing the renaming rule. The typedef is `using RooRealProxy = RooTemplateProxy<RooAbsReal>;`. I use this so old classes can keep using `RooRealProxy`, although this is now a specific instance of a template. When reading, if you use for the LinkDef.h:. ```. #pragma link C++ class RooTemplateProxy<RooAbsReal>+; //What it actually is now. ```. You get. ```. Warning in <TStreamerInfo::CompareContent>: The following data member of. the on-file layout version 1 of class 'RooExponential' differs from . the in-memory layout version 1:. RooRealProxy x; //. vs. RooTemplateProxy<RooAbsReal> x; //. ```. for *all* old classes in RooFit. However, with. ```. #pragma link C++ class RooRealProxy+; // == RooTemplateProxy<RooAbsReal>. ```. all old classes can remain as they are. Thinking about it, I now came to the conclusion that the schema evolution problem I mentioned to Philippe about two weeks ago is exactly the same problem. The solution is just to mention the ""right"" typedef in LinkDef.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:615,performance,memor,memory,615,"@pcanal . > Really? > Or is it just the ""renaming rules"" that solves the problem? Positive! I tested by removing the renaming rule. The typedef is `using RooRealProxy = RooTemplateProxy<RooAbsReal>;`. I use this so old classes can keep using `RooRealProxy`, although this is now a specific instance of a template. When reading, if you use for the LinkDef.h:. ```. #pragma link C++ class RooTemplateProxy<RooAbsReal>+; //What it actually is now. ```. You get. ```. Warning in <TStreamerInfo::CompareContent>: The following data member of. the on-file layout version 1 of class 'RooExponential' differs from . the in-memory layout version 1:. RooRealProxy x; //. vs. RooTemplateProxy<RooAbsReal> x; //. ```. for *all* old classes in RooFit. However, with. ```. #pragma link C++ class RooRealProxy+; // == RooTemplateProxy<RooAbsReal>. ```. all old classes can remain as they are. Thinking about it, I now came to the conclusion that the schema evolution problem I mentioned to Philippe about two weeks ago is exactly the same problem. The solution is just to mention the ""right"" typedef in LinkDef.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:365,reliability,pra,pragma,365,"@pcanal . > Really? > Or is it just the ""renaming rules"" that solves the problem? Positive! I tested by removing the renaming rule. The typedef is `using RooRealProxy = RooTemplateProxy<RooAbsReal>;`. I use this so old classes can keep using `RooRealProxy`, although this is now a specific instance of a template. When reading, if you use for the LinkDef.h:. ```. #pragma link C++ class RooTemplateProxy<RooAbsReal>+; //What it actually is now. ```. You get. ```. Warning in <TStreamerInfo::CompareContent>: The following data member of. the on-file layout version 1 of class 'RooExponential' differs from . the in-memory layout version 1:. RooRealProxy x; //. vs. RooTemplateProxy<RooAbsReal> x; //. ```. for *all* old classes in RooFit. However, with. ```. #pragma link C++ class RooRealProxy+; // == RooTemplateProxy<RooAbsReal>. ```. all old classes can remain as they are. Thinking about it, I now came to the conclusion that the schema evolution problem I mentioned to Philippe about two weeks ago is exactly the same problem. The solution is just to mention the ""right"" typedef in LinkDef.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:760,reliability,pra,pragma,760,"@pcanal . > Really? > Or is it just the ""renaming rules"" that solves the problem? Positive! I tested by removing the renaming rule. The typedef is `using RooRealProxy = RooTemplateProxy<RooAbsReal>;`. I use this so old classes can keep using `RooRealProxy`, although this is now a specific instance of a template. When reading, if you use for the LinkDef.h:. ```. #pragma link C++ class RooTemplateProxy<RooAbsReal>+; //What it actually is now. ```. You get. ```. Warning in <TStreamerInfo::CompareContent>: The following data member of. the on-file layout version 1 of class 'RooExponential' differs from . the in-memory layout version 1:. RooRealProxy x; //. vs. RooTemplateProxy<RooAbsReal> x; //. ```. for *all* old classes in RooFit. However, with. ```. #pragma link C++ class RooRealProxy+; // == RooTemplateProxy<RooAbsReal>. ```. all old classes can remain as they are. Thinking about it, I now came to the conclusion that the schema evolution problem I mentioned to Philippe about two weeks ago is exactly the same problem. The solution is just to mention the ""right"" typedef in LinkDef.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:94,safety,test,tested,94,"@pcanal . > Really? > Or is it just the ""renaming rules"" that solves the problem? Positive! I tested by removing the renaming rule. The typedef is `using RooRealProxy = RooTemplateProxy<RooAbsReal>;`. I use this so old classes can keep using `RooRealProxy`, although this is now a specific instance of a template. When reading, if you use for the LinkDef.h:. ```. #pragma link C++ class RooTemplateProxy<RooAbsReal>+; //What it actually is now. ```. You get. ```. Warning in <TStreamerInfo::CompareContent>: The following data member of. the on-file layout version 1 of class 'RooExponential' differs from . the in-memory layout version 1:. RooRealProxy x; //. vs. RooTemplateProxy<RooAbsReal> x; //. ```. for *all* old classes in RooFit. However, with. ```. #pragma link C++ class RooRealProxy+; // == RooTemplateProxy<RooAbsReal>. ```. all old classes can remain as they are. Thinking about it, I now came to the conclusion that the schema evolution problem I mentioned to Philippe about two weeks ago is exactly the same problem. The solution is just to mention the ""right"" typedef in LinkDef.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:94,testability,test,tested,94,"@pcanal . > Really? > Or is it just the ""renaming rules"" that solves the problem? Positive! I tested by removing the renaming rule. The typedef is `using RooRealProxy = RooTemplateProxy<RooAbsReal>;`. I use this so old classes can keep using `RooRealProxy`, although this is now a specific instance of a template. When reading, if you use for the LinkDef.h:. ```. #pragma link C++ class RooTemplateProxy<RooAbsReal>+; //What it actually is now. ```. You get. ```. Warning in <TStreamerInfo::CompareContent>: The following data member of. the on-file layout version 1 of class 'RooExponential' differs from . the in-memory layout version 1:. RooRealProxy x; //. vs. RooTemplateProxy<RooAbsReal> x; //. ```. for *all* old classes in RooFit. However, with. ```. #pragma link C++ class RooRealProxy+; // == RooTemplateProxy<RooAbsReal>. ```. all old classes can remain as they are. Thinking about it, I now came to the conclusion that the schema evolution problem I mentioned to Philippe about two weeks ago is exactly the same problem. The solution is just to mention the ""right"" typedef in LinkDef.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:615,usability,memor,memory,615,"@pcanal . > Really? > Or is it just the ""renaming rules"" that solves the problem? Positive! I tested by removing the renaming rule. The typedef is `using RooRealProxy = RooTemplateProxy<RooAbsReal>;`. I use this so old classes can keep using `RooRealProxy`, although this is now a specific instance of a template. When reading, if you use for the LinkDef.h:. ```. #pragma link C++ class RooTemplateProxy<RooAbsReal>+; //What it actually is now. ```. You get. ```. Warning in <TStreamerInfo::CompareContent>: The following data member of. the on-file layout version 1 of class 'RooExponential' differs from . the in-memory layout version 1:. RooRealProxy x; //. vs. RooTemplateProxy<RooAbsReal> x; //. ```. for *all* old classes in RooFit. However, with. ```. #pragma link C++ class RooRealProxy+; // == RooTemplateProxy<RooAbsReal>. ```. all old classes can remain as they are. Thinking about it, I now came to the conclusion that the schema evolution problem I mentioned to Philippe about two weeks ago is exactly the same problem. The solution is just to mention the ""right"" typedef in LinkDef.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:473,deployability,build,build,473,"@eguiraud . > Hi Stephan, I'm confused, #5530 does not seem to have those warnings anymore? Also, ROOT is simply able to read an old `RooRealProxy` into a new `RooTemplateProxy<RooAbsReal>` with no problem, no instructions needed other than. > . > ```. > #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";. > ```. > . > ? > . > Do we need a test? Actually, #5530 *does have* this problem. http://cdash.cern.ch/testDetails.php?test=85254326&build=868739. It's not fatal, since the typedef and the things that it's `typedef`ed to are strictly identical, so all tests proceed normally. However, the warning shows up. A follow-up question of this is whether gtests should have a failregex or something so we see warnings popping up.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:708,deployability,fail,failregex,708,"@eguiraud . > Hi Stephan, I'm confused, #5530 does not seem to have those warnings anymore? Also, ROOT is simply able to read an old `RooRealProxy` into a new `RooTemplateProxy<RooAbsReal>` with no problem, no instructions needed other than. > . > ```. > #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";. > ```. > . > ? > . > Do we need a test? Actually, #5530 *does have* this problem. http://cdash.cern.ch/testDetails.php?test=85254326&build=868739. It's not fatal, since the typedef and the things that it's `typedef`ed to are strictly identical, so all tests proceed normally. However, the warning shows up. A follow-up question of this is whether gtests should have a failregex or something so we see warnings popping up.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:46,reliability,doe,does,46,"@eguiraud . > Hi Stephan, I'm confused, #5530 does not seem to have those warnings anymore? Also, ROOT is simply able to read an old `RooRealProxy` into a new `RooTemplateProxy<RooAbsReal>` with no problem, no instructions needed other than. > . > ```. > #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";. > ```. > . > ? > . > Do we need a test? Actually, #5530 *does have* this problem. http://cdash.cern.ch/testDetails.php?test=85254326&build=868739. It's not fatal, since the typedef and the things that it's `typedef`ed to are strictly identical, so all tests proceed normally. However, the warning shows up. A follow-up question of this is whether gtests should have a failregex or something so we see warnings popping up.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:256,reliability,pra,pragma,256,"@eguiraud . > Hi Stephan, I'm confused, #5530 does not seem to have those warnings anymore? Also, ROOT is simply able to read an old `RooRealProxy` into a new `RooTemplateProxy<RooAbsReal>` with no problem, no instructions needed other than. > . > ```. > #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";. > ```. > . > ? > . > Do we need a test? Actually, #5530 *does have* this problem. http://cdash.cern.ch/testDetails.php?test=85254326&build=868739. It's not fatal, since the typedef and the things that it's `typedef`ed to are strictly identical, so all tests proceed normally. However, the warning shows up. A follow-up question of this is whether gtests should have a failregex or something so we see warnings popping up.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:397,reliability,doe,does,397,"@eguiraud . > Hi Stephan, I'm confused, #5530 does not seem to have those warnings anymore? Also, ROOT is simply able to read an old `RooRealProxy` into a new `RooTemplateProxy<RooAbsReal>` with no problem, no instructions needed other than. > . > ```. > #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";. > ```. > . > ? > . > Do we need a test? Actually, #5530 *does have* this problem. http://cdash.cern.ch/testDetails.php?test=85254326&build=868739. It's not fatal, since the typedef and the things that it's `typedef`ed to are strictly identical, so all tests proceed normally. However, the warning shows up. A follow-up question of this is whether gtests should have a failregex or something so we see warnings popping up.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:708,reliability,fail,failregex,708,"@eguiraud . > Hi Stephan, I'm confused, #5530 does not seem to have those warnings anymore? Also, ROOT is simply able to read an old `RooRealProxy` into a new `RooTemplateProxy<RooAbsReal>` with no problem, no instructions needed other than. > . > ```. > #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";. > ```. > . > ? > . > Do we need a test? Actually, #5530 *does have* this problem. http://cdash.cern.ch/testDetails.php?test=85254326&build=868739. It's not fatal, since the typedef and the things that it's `typedef`ed to are strictly identical, so all tests proceed normally. However, the warning shows up. A follow-up question of this is whether gtests should have a failregex or something so we see warnings popping up.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:374,safety,test,test,374,"@eguiraud . > Hi Stephan, I'm confused, #5530 does not seem to have those warnings anymore? Also, ROOT is simply able to read an old `RooRealProxy` into a new `RooTemplateProxy<RooAbsReal>` with no problem, no instructions needed other than. > . > ```. > #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";. > ```. > . > ? > . > Do we need a test? Actually, #5530 *does have* this problem. http://cdash.cern.ch/testDetails.php?test=85254326&build=868739. It's not fatal, since the typedef and the things that it's `typedef`ed to are strictly identical, so all tests proceed normally. However, the warning shows up. A follow-up question of this is whether gtests should have a failregex or something so we see warnings popping up.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:443,safety,test,testDetails,443,"@eguiraud . > Hi Stephan, I'm confused, #5530 does not seem to have those warnings anymore? Also, ROOT is simply able to read an old `RooRealProxy` into a new `RooTemplateProxy<RooAbsReal>` with no problem, no instructions needed other than. > . > ```. > #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";. > ```. > . > ? > . > Do we need a test? Actually, #5530 *does have* this problem. http://cdash.cern.ch/testDetails.php?test=85254326&build=868739. It's not fatal, since the typedef and the things that it's `typedef`ed to are strictly identical, so all tests proceed normally. However, the warning shows up. A follow-up question of this is whether gtests should have a failregex or something so we see warnings popping up.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:459,safety,test,test,459,"@eguiraud . > Hi Stephan, I'm confused, #5530 does not seem to have those warnings anymore? Also, ROOT is simply able to read an old `RooRealProxy` into a new `RooTemplateProxy<RooAbsReal>` with no problem, no instructions needed other than. > . > ```. > #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";. > ```. > . > ? > . > Do we need a test? Actually, #5530 *does have* this problem. http://cdash.cern.ch/testDetails.php?test=85254326&build=868739. It's not fatal, since the typedef and the things that it's `typedef`ed to are strictly identical, so all tests proceed normally. However, the warning shows up. A follow-up question of this is whether gtests should have a failregex or something so we see warnings popping up.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:592,safety,test,tests,592,"@eguiraud . > Hi Stephan, I'm confused, #5530 does not seem to have those warnings anymore? Also, ROOT is simply able to read an old `RooRealProxy` into a new `RooTemplateProxy<RooAbsReal>` with no problem, no instructions needed other than. > . > ```. > #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";. > ```. > . > ? > . > Do we need a test? Actually, #5530 *does have* this problem. http://cdash.cern.ch/testDetails.php?test=85254326&build=868739. It's not fatal, since the typedef and the things that it's `typedef`ed to are strictly identical, so all tests proceed normally. However, the warning shows up. A follow-up question of this is whether gtests should have a failregex or something so we see warnings popping up.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:574,security,ident,identical,574,"@eguiraud . > Hi Stephan, I'm confused, #5530 does not seem to have those warnings anymore? Also, ROOT is simply able to read an old `RooRealProxy` into a new `RooTemplateProxy<RooAbsReal>` with no problem, no instructions needed other than. > . > ```. > #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";. > ```. > . > ? > . > Do we need a test? Actually, #5530 *does have* this problem. http://cdash.cern.ch/testDetails.php?test=85254326&build=868739. It's not fatal, since the typedef and the things that it's `typedef`ed to are strictly identical, so all tests proceed normally. However, the warning shows up. A follow-up question of this is whether gtests should have a failregex or something so we see warnings popping up.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:106,testability,simpl,simply,106,"@eguiraud . > Hi Stephan, I'm confused, #5530 does not seem to have those warnings anymore? Also, ROOT is simply able to read an old `RooRealProxy` into a new `RooTemplateProxy<RooAbsReal>` with no problem, no instructions needed other than. > . > ```. > #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";. > ```. > . > ? > . > Do we need a test? Actually, #5530 *does have* this problem. http://cdash.cern.ch/testDetails.php?test=85254326&build=868739. It's not fatal, since the typedef and the things that it's `typedef`ed to are strictly identical, so all tests proceed normally. However, the warning shows up. A follow-up question of this is whether gtests should have a failregex or something so we see warnings popping up.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:374,testability,test,test,374,"@eguiraud . > Hi Stephan, I'm confused, #5530 does not seem to have those warnings anymore? Also, ROOT is simply able to read an old `RooRealProxy` into a new `RooTemplateProxy<RooAbsReal>` with no problem, no instructions needed other than. > . > ```. > #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";. > ```. > . > ? > . > Do we need a test? Actually, #5530 *does have* this problem. http://cdash.cern.ch/testDetails.php?test=85254326&build=868739. It's not fatal, since the typedef and the things that it's `typedef`ed to are strictly identical, so all tests proceed normally. However, the warning shows up. A follow-up question of this is whether gtests should have a failregex or something so we see warnings popping up.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:443,testability,test,testDetails,443,"@eguiraud . > Hi Stephan, I'm confused, #5530 does not seem to have those warnings anymore? Also, ROOT is simply able to read an old `RooRealProxy` into a new `RooTemplateProxy<RooAbsReal>` with no problem, no instructions needed other than. > . > ```. > #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";. > ```. > . > ? > . > Do we need a test? Actually, #5530 *does have* this problem. http://cdash.cern.ch/testDetails.php?test=85254326&build=868739. It's not fatal, since the typedef and the things that it's `typedef`ed to are strictly identical, so all tests proceed normally. However, the warning shows up. A follow-up question of this is whether gtests should have a failregex or something so we see warnings popping up.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:459,testability,test,test,459,"@eguiraud . > Hi Stephan, I'm confused, #5530 does not seem to have those warnings anymore? Also, ROOT is simply able to read an old `RooRealProxy` into a new `RooTemplateProxy<RooAbsReal>` with no problem, no instructions needed other than. > . > ```. > #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";. > ```. > . > ? > . > Do we need a test? Actually, #5530 *does have* this problem. http://cdash.cern.ch/testDetails.php?test=85254326&build=868739. It's not fatal, since the typedef and the things that it's `typedef`ed to are strictly identical, so all tests proceed normally. However, the warning shows up. A follow-up question of this is whether gtests should have a failregex or something so we see warnings popping up.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:592,testability,test,tests,592,"@eguiraud . > Hi Stephan, I'm confused, #5530 does not seem to have those warnings anymore? Also, ROOT is simply able to read an old `RooRealProxy` into a new `RooTemplateProxy<RooAbsReal>` with no problem, no instructions needed other than. > . > ```. > #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";. > ```. > . > ? > . > Do we need a test? Actually, #5530 *does have* this problem. http://cdash.cern.ch/testDetails.php?test=85254326&build=868739. It's not fatal, since the typedef and the things that it's `typedef`ed to are strictly identical, so all tests proceed normally. However, the warning shows up. A follow-up question of this is whether gtests should have a failregex or something so we see warnings popping up.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:106,usability,simpl,simply,106,"@eguiraud . > Hi Stephan, I'm confused, #5530 does not seem to have those warnings anymore? Also, ROOT is simply able to read an old `RooRealProxy` into a new `RooTemplateProxy<RooAbsReal>` with no problem, no instructions needed other than. > . > ```. > #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";. > ```. > . > ? > . > Do we need a test? Actually, #5530 *does have* this problem. http://cdash.cern.ch/testDetails.php?test=85254326&build=868739. It's not fatal, since the typedef and the things that it's `typedef`ed to are strictly identical, so all tests proceed normally. However, the warning shows up. A follow-up question of this is whether gtests should have a failregex or something so we see warnings popping up.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:107,deployability,version,version,107,"```. You get. Warning in <TStreamerInfo::CompareContent>: The following data member of. the on-file layout version 1 of class 'RooExponential' differs from . the in-memory layout version 1:. RooRealProxy x; //. vs. RooTemplateProxy<RooAbsReal> x; //. for all old classes in RooFit. ```. If that was that with the LinkDef:. ```. #pragma link C++ class RooTemplateProxy<RooAbsReal>+;. #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";. ```. Then that means that the feature to enable 'short' names for templates (dropping default value) would also somehow allow/remember alias/typedef ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:179,deployability,version,version,179,"```. You get. Warning in <TStreamerInfo::CompareContent>: The following data member of. the on-file layout version 1 of class 'RooExponential' differs from . the in-memory layout version 1:. RooRealProxy x; //. vs. RooTemplateProxy<RooAbsReal> x; //. for all old classes in RooFit. ```. If that was that with the LinkDef:. ```. #pragma link C++ class RooTemplateProxy<RooAbsReal>+;. #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";. ```. Then that means that the feature to enable 'short' names for templates (dropping default value) would also somehow allow/remember alias/typedef ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:107,integrability,version,version,107,"```. You get. Warning in <TStreamerInfo::CompareContent>: The following data member of. the on-file layout version 1 of class 'RooExponential' differs from . the in-memory layout version 1:. RooRealProxy x; //. vs. RooTemplateProxy<RooAbsReal> x; //. for all old classes in RooFit. ```. If that was that with the LinkDef:. ```. #pragma link C++ class RooTemplateProxy<RooAbsReal>+;. #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";. ```. Then that means that the feature to enable 'short' names for templates (dropping default value) would also somehow allow/remember alias/typedef ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:179,integrability,version,version,179,"```. You get. Warning in <TStreamerInfo::CompareContent>: The following data member of. the on-file layout version 1 of class 'RooExponential' differs from . the in-memory layout version 1:. RooRealProxy x; //. vs. RooTemplateProxy<RooAbsReal> x; //. for all old classes in RooFit. ```. If that was that with the LinkDef:. ```. #pragma link C++ class RooTemplateProxy<RooAbsReal>+;. #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";. ```. Then that means that the feature to enable 'short' names for templates (dropping default value) would also somehow allow/remember alias/typedef ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:107,modifiability,version,version,107,"```. You get. Warning in <TStreamerInfo::CompareContent>: The following data member of. the on-file layout version 1 of class 'RooExponential' differs from . the in-memory layout version 1:. RooRealProxy x; //. vs. RooTemplateProxy<RooAbsReal> x; //. for all old classes in RooFit. ```. If that was that with the LinkDef:. ```. #pragma link C++ class RooTemplateProxy<RooAbsReal>+;. #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";. ```. Then that means that the feature to enable 'short' names for templates (dropping default value) would also somehow allow/remember alias/typedef ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:179,modifiability,version,version,179,"```. You get. Warning in <TStreamerInfo::CompareContent>: The following data member of. the on-file layout version 1 of class 'RooExponential' differs from . the in-memory layout version 1:. RooRealProxy x; //. vs. RooTemplateProxy<RooAbsReal> x; //. for all old classes in RooFit. ```. If that was that with the LinkDef:. ```. #pragma link C++ class RooTemplateProxy<RooAbsReal>+;. #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";. ```. Then that means that the feature to enable 'short' names for templates (dropping default value) would also somehow allow/remember alias/typedef ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:165,performance,memor,memory,165,"```. You get. Warning in <TStreamerInfo::CompareContent>: The following data member of. the on-file layout version 1 of class 'RooExponential' differs from . the in-memory layout version 1:. RooRealProxy x; //. vs. RooTemplateProxy<RooAbsReal> x; //. for all old classes in RooFit. ```. If that was that with the LinkDef:. ```. #pragma link C++ class RooTemplateProxy<RooAbsReal>+;. #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";. ```. Then that means that the feature to enable 'short' names for templates (dropping default value) would also somehow allow/remember alias/typedef ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:329,reliability,pra,pragma,329,"```. You get. Warning in <TStreamerInfo::CompareContent>: The following data member of. the on-file layout version 1 of class 'RooExponential' differs from . the in-memory layout version 1:. RooRealProxy x; //. vs. RooTemplateProxy<RooAbsReal> x; //. for all old classes in RooFit. ```. If that was that with the LinkDef:. ```. #pragma link C++ class RooTemplateProxy<RooAbsReal>+;. #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";. ```. Then that means that the feature to enable 'short' names for templates (dropping default value) would also somehow allow/remember alias/typedef ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:384,reliability,pra,pragma,384,"```. You get. Warning in <TStreamerInfo::CompareContent>: The following data member of. the on-file layout version 1 of class 'RooExponential' differs from . the in-memory layout version 1:. RooRealProxy x; //. vs. RooTemplateProxy<RooAbsReal> x; //. for all old classes in RooFit. ```. If that was that with the LinkDef:. ```. #pragma link C++ class RooTemplateProxy<RooAbsReal>+;. #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";. ```. Then that means that the feature to enable 'short' names for templates (dropping default value) would also somehow allow/remember alias/typedef ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:594,safety,reme,remember,594,"```. You get. Warning in <TStreamerInfo::CompareContent>: The following data member of. the on-file layout version 1 of class 'RooExponential' differs from . the in-memory layout version 1:. RooRealProxy x; //. vs. RooTemplateProxy<RooAbsReal> x; //. for all old classes in RooFit. ```. If that was that with the LinkDef:. ```. #pragma link C++ class RooTemplateProxy<RooAbsReal>+;. #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";. ```. Then that means that the feature to enable 'short' names for templates (dropping default value) would also somehow allow/remember alias/typedef ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5536:165,usability,memor,memory,165,"```. You get. Warning in <TStreamerInfo::CompareContent>: The following data member of. the on-file layout version 1 of class 'RooExponential' differs from . the in-memory layout version 1:. RooRealProxy x; //. vs. RooTemplateProxy<RooAbsReal> x; //. for all old classes in RooFit. ```. If that was that with the LinkDef:. ```. #pragma link C++ class RooTemplateProxy<RooAbsReal>+;. #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";. ```. Then that means that the feature to enable 'short' names for templates (dropping default value) would also somehow allow/remember alias/typedef ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5540:64,deployability,updat,update,64,"@hageboeck Can you approve check this PR? . Without it I cannot update #5535 - changes in core classes have side effects in roofit, which are fixed here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5540
https://github.com/root-project/root/pull/5540:90,energy efficiency,core,core,90,"@hageboeck Can you approve check this PR? . Without it I cannot update #5535 - changes in core classes have side effects in roofit, which are fixed here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5540
https://github.com/root-project/root/pull/5540:64,safety,updat,update,64,"@hageboeck Can you approve check this PR? . Without it I cannot update #5535 - changes in core classes have side effects in roofit, which are fixed here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5540
https://github.com/root-project/root/pull/5540:64,security,updat,update,64,"@hageboeck Can you approve check this PR? . Without it I cannot update #5535 - changes in core classes have side effects in roofit, which are fixed here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5540
https://github.com/root-project/root/pull/5540:200,interoperability,conflict,conflicts,200,"Hi,. sorry, cannot approve. I'm removing almost all uses of RooCatType in #5514 . If I approve this now, I cannot merge that. I can try to rebase your commit on top of #5514 and then remove all merge conflicts. Would that be an option?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5540
https://github.com/root-project/root/pull/5540:146,deployability,build,builds,146,"@hageboeck . It is up to you now. I extract changes in roofit in separate PR. . But would be nice to merge changes together soon, otherwise `dev` builds after #5535 will be corrupted.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5540
https://github.com/root-project/root/pull/5540:0,usability,Close,Close,0,Close in favor of #5542,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5540
https://github.com/root-project/root/pull/5542:23,interoperability,conflict,conflict,23,"Yes, but it's only one conflict instead of >10. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5542
https://github.com/root-project/root/pull/5544:4,availability,failur,failures,4,"The failures are definitely due to my changes. Did not see them on my machine, will investigate.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5544
https://github.com/root-project/root/pull/5544:4,deployability,fail,failures,4,"The failures are definitely due to my changes. Did not see them on my machine, will investigate.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5544
https://github.com/root-project/root/pull/5544:4,performance,failur,failures,4,"The failures are definitely due to my changes. Did not see them on my machine, will investigate.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5544
https://github.com/root-project/root/pull/5544:4,reliability,fail,failures,4,"The failures are definitely due to my changes. Did not see them on my machine, will investigate.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5544
https://github.com/root-project/root/pull/5547:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5547
https://github.com/root-project/root/pull/5547:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5547
https://github.com/root-project/root/pull/5548:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5548
https://github.com/root-project/root/pull/5548:76,deployability,manag,manage,76,@daritter could you rebase onto current master? Somehow CMake's git doesn't manage (while Github does...),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5548
https://github.com/root-project/root/pull/5548:32,energy efficiency,current,current,32,@daritter could you rebase onto current master? Somehow CMake's git doesn't manage (while Github does...),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5548
https://github.com/root-project/root/pull/5548:76,energy efficiency,manag,manage,76,@daritter could you rebase onto current master? Somehow CMake's git doesn't manage (while Github does...),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5548
https://github.com/root-project/root/pull/5548:68,reliability,doe,doesn,68,@daritter could you rebase onto current master? Somehow CMake's git doesn't manage (while Github does...),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5548
https://github.com/root-project/root/pull/5548:97,reliability,doe,does,97,@daritter could you rebase onto current master? Somehow CMake's git doesn't manage (while Github does...),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5548
https://github.com/root-project/root/pull/5548:76,safety,manag,manage,76,@daritter could you rebase onto current master? Somehow CMake's git doesn't manage (while Github does...),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5548
https://github.com/root-project/root/pull/5548:29,usability,help,helps,29,I did a rebase ... hope that helps,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5548
https://github.com/root-project/root/pull/5548:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5548
https://github.com/root-project/root/pull/5548:24,testability,understand,understanding,24,"@pcanal true, but in my understanding it's more removing a workaround for an older issue that is no longer needed. So at least we don't *add* a workaround ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5548
https://github.com/root-project/root/pull/5548:49,deployability,unload,unloaded,49,"Right ... *but* :) ... If TCling_UnloadMarker is unloaded then any of the other global (file or function static) in TCling.cxx might also be unloaded at that time ... which means that TCling is ""technically"" unusable after that ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5548
https://github.com/root-project/root/pull/5548:141,deployability,unload,unloaded,141,"Right ... *but* :) ... If TCling_UnloadMarker is unloaded then any of the other global (file or function static) in TCling.cxx might also be unloaded at that time ... which means that TCling is ""technically"" unusable after that ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5548
https://github.com/root-project/root/pull/5548:158,performance,time,time,158,"Right ... *but* :) ... If TCling_UnloadMarker is unloaded then any of the other global (file or function static) in TCling.cxx might also be unloaded at that time ... which means that TCling is ""technically"" unusable after that ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5548
https://github.com/root-project/root/pull/5548:19,performance,time,timeout,19,"I'd like to call a timeout, merge this and revert once we reach a better understanding or find a better solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5548
https://github.com/root-project/root/pull/5548:19,safety,timeout,timeout,19,"I'd like to call a timeout, merge this and revert once we reach a better understanding or find a better solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5548
https://github.com/root-project/root/pull/5548:73,testability,understand,understanding,73,"I'd like to call a timeout, merge this and revert once we reach a better understanding or find a better solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5548
https://github.com/root-project/root/pull/5549:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5549
https://github.com/root-project/root/pull/5550:25,safety,test,test,25,looks good to me. Let me test it first before committing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5550
https://github.com/root-project/root/pull/5550:25,testability,test,test,25,looks good to me. Let me test it first before committing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5550
https://github.com/root-project/root/pull/5550:164,security,modif,modified,164,@daritter : I have to comments:. 1. Can you add one comment line in the header the the Style constructor ? (see the comment for ALTAS). 2. `Reset` needs also to be modified (again se the ATLAS style) . Once you have done that I will push your PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5550
https://github.com/root-project/root/pull/5550:28,safety,compl,complete,28,I push this change and will complete it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5550
https://github.com/root-project/root/pull/5550:28,security,compl,complete,28,I push this change and will complete it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5550
https://github.com/root-project/root/pull/5551:112,reliability,doe,doesn,112,"Independently, why can't travis include `tbb/task_arena`? is it a problem in our CI, should we try to solve it, doesn't matter...? @oshadura",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5551
https://github.com/root-project/root/pull/5552:480,availability,operat,operation,480,"Updates:. * Changed the logic of the `GetMergeableValue` method of the action helpers: now all the information needed to create the `RMergeableValue` should be created inside the function itself, e.g. the `std::function` that merges to values of the same type held by the helper. * Added the logic for merging results of `Histo1D` action. . * Define `GetMergeableValue` in the `FillHelper` action helper. * Define `RMergeableHisto1D` subclass of `RMergeableValue` to avoid a copy operation. * Add a test for merging two 1D histograms. TODO:. - [x] The test for histograms only works when calling the `Histo1D` action without a `TH1DModel`. In that case `ROOT::Detail::RDF::GetMergeableValue()` returns a `nullptr`. It may be that it's not using the correct helper. - [x] Add other mergeable values. - [x] Add docs. - [x] Apply coding conventions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:0,deployability,Updat,Updates,0,"Updates:. * Changed the logic of the `GetMergeableValue` method of the action helpers: now all the information needed to create the `RMergeableValue` should be created inside the function itself, e.g. the `std::function` that merges to values of the same type held by the helper. * Added the logic for merging results of `Histo1D` action. . * Define `GetMergeableValue` in the `FillHelper` action helper. * Define `RMergeableHisto1D` subclass of `RMergeableValue` to avoid a copy operation. * Add a test for merging two 1D histograms. TODO:. - [x] The test for histograms only works when calling the `Histo1D` action without a `TH1DModel`. In that case `ROOT::Detail::RDF::GetMergeableValue()` returns a `nullptr`. It may be that it's not using the correct helper. - [x] Add other mergeable values. - [x] Add docs. - [x] Apply coding conventions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:24,deployability,log,logic,24,"Updates:. * Changed the logic of the `GetMergeableValue` method of the action helpers: now all the information needed to create the `RMergeableValue` should be created inside the function itself, e.g. the `std::function` that merges to values of the same type held by the helper. * Added the logic for merging results of `Histo1D` action. . * Define `GetMergeableValue` in the `FillHelper` action helper. * Define `RMergeableHisto1D` subclass of `RMergeableValue` to avoid a copy operation. * Add a test for merging two 1D histograms. TODO:. - [x] The test for histograms only works when calling the `Histo1D` action without a `TH1DModel`. In that case `ROOT::Detail::RDF::GetMergeableValue()` returns a `nullptr`. It may be that it's not using the correct helper. - [x] Add other mergeable values. - [x] Add docs. - [x] Apply coding conventions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:292,deployability,log,logic,292,"Updates:. * Changed the logic of the `GetMergeableValue` method of the action helpers: now all the information needed to create the `RMergeableValue` should be created inside the function itself, e.g. the `std::function` that merges to values of the same type held by the helper. * Added the logic for merging results of `Histo1D` action. . * Define `GetMergeableValue` in the `FillHelper` action helper. * Define `RMergeableHisto1D` subclass of `RMergeableValue` to avoid a copy operation. * Add a test for merging two 1D histograms. TODO:. - [x] The test for histograms only works when calling the `Histo1D` action without a `TH1DModel`. In that case `ROOT::Detail::RDF::GetMergeableValue()` returns a `nullptr`. It may be that it's not using the correct helper. - [x] Add other mergeable values. - [x] Add docs. - [x] Apply coding conventions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:434,integrability,sub,subclass,434,"Updates:. * Changed the logic of the `GetMergeableValue` method of the action helpers: now all the information needed to create the `RMergeableValue` should be created inside the function itself, e.g. the `std::function` that merges to values of the same type held by the helper. * Added the logic for merging results of `Histo1D` action. . * Define `GetMergeableValue` in the `FillHelper` action helper. * Define `RMergeableHisto1D` subclass of `RMergeableValue` to avoid a copy operation. * Add a test for merging two 1D histograms. TODO:. - [x] The test for histograms only works when calling the `Histo1D` action without a `TH1DModel`. In that case `ROOT::Detail::RDF::GetMergeableValue()` returns a `nullptr`. It may be that it's not using the correct helper. - [x] Add other mergeable values. - [x] Add docs. - [x] Apply coding conventions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:0,safety,Updat,Updates,0,"Updates:. * Changed the logic of the `GetMergeableValue` method of the action helpers: now all the information needed to create the `RMergeableValue` should be created inside the function itself, e.g. the `std::function` that merges to values of the same type held by the helper. * Added the logic for merging results of `Histo1D` action. . * Define `GetMergeableValue` in the `FillHelper` action helper. * Define `RMergeableHisto1D` subclass of `RMergeableValue` to avoid a copy operation. * Add a test for merging two 1D histograms. TODO:. - [x] The test for histograms only works when calling the `Histo1D` action without a `TH1DModel`. In that case `ROOT::Detail::RDF::GetMergeableValue()` returns a `nullptr`. It may be that it's not using the correct helper. - [x] Add other mergeable values. - [x] Add docs. - [x] Apply coding conventions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:24,safety,log,logic,24,"Updates:. * Changed the logic of the `GetMergeableValue` method of the action helpers: now all the information needed to create the `RMergeableValue` should be created inside the function itself, e.g. the `std::function` that merges to values of the same type held by the helper. * Added the logic for merging results of `Histo1D` action. . * Define `GetMergeableValue` in the `FillHelper` action helper. * Define `RMergeableHisto1D` subclass of `RMergeableValue` to avoid a copy operation. * Add a test for merging two 1D histograms. TODO:. - [x] The test for histograms only works when calling the `Histo1D` action without a `TH1DModel`. In that case `ROOT::Detail::RDF::GetMergeableValue()` returns a `nullptr`. It may be that it's not using the correct helper. - [x] Add other mergeable values. - [x] Add docs. - [x] Apply coding conventions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:292,safety,log,logic,292,"Updates:. * Changed the logic of the `GetMergeableValue` method of the action helpers: now all the information needed to create the `RMergeableValue` should be created inside the function itself, e.g. the `std::function` that merges to values of the same type held by the helper. * Added the logic for merging results of `Histo1D` action. . * Define `GetMergeableValue` in the `FillHelper` action helper. * Define `RMergeableHisto1D` subclass of `RMergeableValue` to avoid a copy operation. * Add a test for merging two 1D histograms. TODO:. - [x] The test for histograms only works when calling the `Histo1D` action without a `TH1DModel`. In that case `ROOT::Detail::RDF::GetMergeableValue()` returns a `nullptr`. It may be that it's not using the correct helper. - [x] Add other mergeable values. - [x] Add docs. - [x] Apply coding conventions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:467,safety,avoid,avoid,467,"Updates:. * Changed the logic of the `GetMergeableValue` method of the action helpers: now all the information needed to create the `RMergeableValue` should be created inside the function itself, e.g. the `std::function` that merges to values of the same type held by the helper. * Added the logic for merging results of `Histo1D` action. . * Define `GetMergeableValue` in the `FillHelper` action helper. * Define `RMergeableHisto1D` subclass of `RMergeableValue` to avoid a copy operation. * Add a test for merging two 1D histograms. TODO:. - [x] The test for histograms only works when calling the `Histo1D` action without a `TH1DModel`. In that case `ROOT::Detail::RDF::GetMergeableValue()` returns a `nullptr`. It may be that it's not using the correct helper. - [x] Add other mergeable values. - [x] Add docs. - [x] Apply coding conventions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:499,safety,test,test,499,"Updates:. * Changed the logic of the `GetMergeableValue` method of the action helpers: now all the information needed to create the `RMergeableValue` should be created inside the function itself, e.g. the `std::function` that merges to values of the same type held by the helper. * Added the logic for merging results of `Histo1D` action. . * Define `GetMergeableValue` in the `FillHelper` action helper. * Define `RMergeableHisto1D` subclass of `RMergeableValue` to avoid a copy operation. * Add a test for merging two 1D histograms. TODO:. - [x] The test for histograms only works when calling the `Histo1D` action without a `TH1DModel`. In that case `ROOT::Detail::RDF::GetMergeableValue()` returns a `nullptr`. It may be that it's not using the correct helper. - [x] Add other mergeable values. - [x] Add docs. - [x] Apply coding conventions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:552,safety,test,test,552,"Updates:. * Changed the logic of the `GetMergeableValue` method of the action helpers: now all the information needed to create the `RMergeableValue` should be created inside the function itself, e.g. the `std::function` that merges to values of the same type held by the helper. * Added the logic for merging results of `Histo1D` action. . * Define `GetMergeableValue` in the `FillHelper` action helper. * Define `RMergeableHisto1D` subclass of `RMergeableValue` to avoid a copy operation. * Add a test for merging two 1D histograms. TODO:. - [x] The test for histograms only works when calling the `Histo1D` action without a `TH1DModel`. In that case `ROOT::Detail::RDF::GetMergeableValue()` returns a `nullptr`. It may be that it's not using the correct helper. - [x] Add other mergeable values. - [x] Add docs. - [x] Apply coding conventions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:0,security,Updat,Updates,0,"Updates:. * Changed the logic of the `GetMergeableValue` method of the action helpers: now all the information needed to create the `RMergeableValue` should be created inside the function itself, e.g. the `std::function` that merges to values of the same type held by the helper. * Added the logic for merging results of `Histo1D` action. . * Define `GetMergeableValue` in the `FillHelper` action helper. * Define `RMergeableHisto1D` subclass of `RMergeableValue` to avoid a copy operation. * Add a test for merging two 1D histograms. TODO:. - [x] The test for histograms only works when calling the `Histo1D` action without a `TH1DModel`. In that case `ROOT::Detail::RDF::GetMergeableValue()` returns a `nullptr`. It may be that it's not using the correct helper. - [x] Add other mergeable values. - [x] Add docs. - [x] Apply coding conventions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:24,security,log,logic,24,"Updates:. * Changed the logic of the `GetMergeableValue` method of the action helpers: now all the information needed to create the `RMergeableValue` should be created inside the function itself, e.g. the `std::function` that merges to values of the same type held by the helper. * Added the logic for merging results of `Histo1D` action. . * Define `GetMergeableValue` in the `FillHelper` action helper. * Define `RMergeableHisto1D` subclass of `RMergeableValue` to avoid a copy operation. * Add a test for merging two 1D histograms. TODO:. - [x] The test for histograms only works when calling the `Histo1D` action without a `TH1DModel`. In that case `ROOT::Detail::RDF::GetMergeableValue()` returns a `nullptr`. It may be that it's not using the correct helper. - [x] Add other mergeable values. - [x] Add docs. - [x] Apply coding conventions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:292,security,log,logic,292,"Updates:. * Changed the logic of the `GetMergeableValue` method of the action helpers: now all the information needed to create the `RMergeableValue` should be created inside the function itself, e.g. the `std::function` that merges to values of the same type held by the helper. * Added the logic for merging results of `Histo1D` action. . * Define `GetMergeableValue` in the `FillHelper` action helper. * Define `RMergeableHisto1D` subclass of `RMergeableValue` to avoid a copy operation. * Add a test for merging two 1D histograms. TODO:. - [x] The test for histograms only works when calling the `Histo1D` action without a `TH1DModel`. In that case `ROOT::Detail::RDF::GetMergeableValue()` returns a `nullptr`. It may be that it's not using the correct helper. - [x] Add other mergeable values. - [x] Add docs. - [x] Apply coding conventions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:24,testability,log,logic,24,"Updates:. * Changed the logic of the `GetMergeableValue` method of the action helpers: now all the information needed to create the `RMergeableValue` should be created inside the function itself, e.g. the `std::function` that merges to values of the same type held by the helper. * Added the logic for merging results of `Histo1D` action. . * Define `GetMergeableValue` in the `FillHelper` action helper. * Define `RMergeableHisto1D` subclass of `RMergeableValue` to avoid a copy operation. * Add a test for merging two 1D histograms. TODO:. - [x] The test for histograms only works when calling the `Histo1D` action without a `TH1DModel`. In that case `ROOT::Detail::RDF::GetMergeableValue()` returns a `nullptr`. It may be that it's not using the correct helper. - [x] Add other mergeable values. - [x] Add docs. - [x] Apply coding conventions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:292,testability,log,logic,292,"Updates:. * Changed the logic of the `GetMergeableValue` method of the action helpers: now all the information needed to create the `RMergeableValue` should be created inside the function itself, e.g. the `std::function` that merges to values of the same type held by the helper. * Added the logic for merging results of `Histo1D` action. . * Define `GetMergeableValue` in the `FillHelper` action helper. * Define `RMergeableHisto1D` subclass of `RMergeableValue` to avoid a copy operation. * Add a test for merging two 1D histograms. TODO:. - [x] The test for histograms only works when calling the `Histo1D` action without a `TH1DModel`. In that case `ROOT::Detail::RDF::GetMergeableValue()` returns a `nullptr`. It may be that it's not using the correct helper. - [x] Add other mergeable values. - [x] Add docs. - [x] Apply coding conventions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:499,testability,test,test,499,"Updates:. * Changed the logic of the `GetMergeableValue` method of the action helpers: now all the information needed to create the `RMergeableValue` should be created inside the function itself, e.g. the `std::function` that merges to values of the same type held by the helper. * Added the logic for merging results of `Histo1D` action. . * Define `GetMergeableValue` in the `FillHelper` action helper. * Define `RMergeableHisto1D` subclass of `RMergeableValue` to avoid a copy operation. * Add a test for merging two 1D histograms. TODO:. - [x] The test for histograms only works when calling the `Histo1D` action without a `TH1DModel`. In that case `ROOT::Detail::RDF::GetMergeableValue()` returns a `nullptr`. It may be that it's not using the correct helper. - [x] Add other mergeable values. - [x] Add docs. - [x] Apply coding conventions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:552,testability,test,test,552,"Updates:. * Changed the logic of the `GetMergeableValue` method of the action helpers: now all the information needed to create the `RMergeableValue` should be created inside the function itself, e.g. the `std::function` that merges to values of the same type held by the helper. * Added the logic for merging results of `Histo1D` action. . * Define `GetMergeableValue` in the `FillHelper` action helper. * Define `RMergeableHisto1D` subclass of `RMergeableValue` to avoid a copy operation. * Add a test for merging two 1D histograms. TODO:. - [x] The test for histograms only works when calling the `Histo1D` action without a `TH1DModel`. In that case `ROOT::Detail::RDF::GetMergeableValue()` returns a `nullptr`. It may be that it's not using the correct helper. - [x] Add other mergeable values. - [x] Add docs. - [x] Apply coding conventions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:78,usability,help,helpers,78,"Updates:. * Changed the logic of the `GetMergeableValue` method of the action helpers: now all the information needed to create the `RMergeableValue` should be created inside the function itself, e.g. the `std::function` that merges to values of the same type held by the helper. * Added the logic for merging results of `Histo1D` action. . * Define `GetMergeableValue` in the `FillHelper` action helper. * Define `RMergeableHisto1D` subclass of `RMergeableValue` to avoid a copy operation. * Add a test for merging two 1D histograms. TODO:. - [x] The test for histograms only works when calling the `Histo1D` action without a `TH1DModel`. In that case `ROOT::Detail::RDF::GetMergeableValue()` returns a `nullptr`. It may be that it's not using the correct helper. - [x] Add other mergeable values. - [x] Add docs. - [x] Apply coding conventions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:272,usability,help,helper,272,"Updates:. * Changed the logic of the `GetMergeableValue` method of the action helpers: now all the information needed to create the `RMergeableValue` should be created inside the function itself, e.g. the `std::function` that merges to values of the same type held by the helper. * Added the logic for merging results of `Histo1D` action. . * Define `GetMergeableValue` in the `FillHelper` action helper. * Define `RMergeableHisto1D` subclass of `RMergeableValue` to avoid a copy operation. * Add a test for merging two 1D histograms. TODO:. - [x] The test for histograms only works when calling the `Histo1D` action without a `TH1DModel`. In that case `ROOT::Detail::RDF::GetMergeableValue()` returns a `nullptr`. It may be that it's not using the correct helper. - [x] Add other mergeable values. - [x] Add docs. - [x] Apply coding conventions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:397,usability,help,helper,397,"Updates:. * Changed the logic of the `GetMergeableValue` method of the action helpers: now all the information needed to create the `RMergeableValue` should be created inside the function itself, e.g. the `std::function` that merges to values of the same type held by the helper. * Added the logic for merging results of `Histo1D` action. . * Define `GetMergeableValue` in the `FillHelper` action helper. * Define `RMergeableHisto1D` subclass of `RMergeableValue` to avoid a copy operation. * Add a test for merging two 1D histograms. TODO:. - [x] The test for histograms only works when calling the `Histo1D` action without a `TH1DModel`. In that case `ROOT::Detail::RDF::GetMergeableValue()` returns a `nullptr`. It may be that it's not using the correct helper. - [x] Add other mergeable values. - [x] Add docs. - [x] Apply coding conventions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:757,usability,help,helper,757,"Updates:. * Changed the logic of the `GetMergeableValue` method of the action helpers: now all the information needed to create the `RMergeableValue` should be created inside the function itself, e.g. the `std::function` that merges to values of the same type held by the helper. * Added the logic for merging results of `Histo1D` action. . * Define `GetMergeableValue` in the `FillHelper` action helper. * Define `RMergeableHisto1D` subclass of `RMergeableValue` to avoid a copy operation. * Add a test for merging two 1D histograms. TODO:. - [x] The test for histograms only works when calling the `Histo1D` action without a `TH1DModel`. In that case `ROOT::Detail::RDF::GetMergeableValue()` returns a `nullptr`. It may be that it's not using the correct helper. - [x] Add other mergeable values. - [x] Add docs. - [x] Apply coding conventions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:292,availability,servic,services,292,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5552-windows10-cxx14&date=2020-06-06). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85621/console). > . > ### Errors:. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(3019,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp_CL_60f507d3sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\test\TBench.vcxproj]. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual > . > And 50 more. Sorry, my bad, I had to free disk space on the Windows nodes...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:376,availability,Error,Errors,376,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5552-windows10-cxx14&date=2020-06-06). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85621/console). > . > ### Errors:. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(3019,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp_CL_60f507d3sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\test\TBench.vcxproj]. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual > . > And 50 more. Sorry, my bad, I had to free disk space on the Windows nodes...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:535,availability,error,error,535,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5552-windows10-cxx14&date=2020-06-06). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85621/console). > . > ### Errors:. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(3019,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp_CL_60f507d3sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\test\TBench.vcxproj]. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual > . > And 50 more. Sorry, my bad, I had to free disk space on the Windows nodes...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:2,deployability,Build,Build,2,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5552-windows10-cxx14&date=2020-06-06). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85621/console). > . > ### Errors:. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(3019,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp_CL_60f507d3sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\test\TBench.vcxproj]. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual > . > And 50 more. Sorry, my bad, I had to free disk space on the Windows nodes...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:8,deployability,fail,failed,8,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5552-windows10-cxx14&date=2020-06-06). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85621/console). > . > ### Errors:. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(3019,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp_CL_60f507d3sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\test\TBench.vcxproj]. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual > . > And 50 more. Sorry, my bad, I had to free disk space on the Windows nodes...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:56,deployability,build,build,56,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5552-windows10-cxx14&date=2020-06-06). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85621/console). > . > ### Errors:. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(3019,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp_CL_60f507d3sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\test\TBench.vcxproj]. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual > . > And 50 more. Sorry, my bad, I had to free disk space on the Windows nodes...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:90,deployability,build,build,90,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5552-windows10-cxx14&date=2020-06-06). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85621/console). > . > ### Errors:. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(3019,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp_CL_60f507d3sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\test\TBench.vcxproj]. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual > . > And 50 more. Sorry, my bad, I had to free disk space on the Windows nodes...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:176,deployability,build,buildname,176,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5552-windows10-cxx14&date=2020-06-06). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85621/console). > . > ### Errors:. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(3019,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp_CL_60f507d3sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\test\TBench.vcxproj]. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual > . > And 50 more. Sorry, my bad, I had to free disk space on the Windows nodes...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:292,deployability,servic,services,292,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5552-windows10-cxx14&date=2020-06-06). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85621/console). > . > ### Errors:. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(3019,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp_CL_60f507d3sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\test\TBench.vcxproj]. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual > . > And 50 more. Sorry, my bad, I had to free disk space on the Windows nodes...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:344,deployability,build,build,344,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5552-windows10-cxx14&date=2020-06-06). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85621/console). > . > ### Errors:. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(3019,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp_CL_60f507d3sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\test\TBench.vcxproj]. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual > . > And 50 more. Sorry, my bad, I had to free disk space on the Windows nodes...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:671,deployability,build,build,671,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5552-windows10-cxx14&date=2020-06-06). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85621/console). > . > ### Errors:. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(3019,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp_CL_60f507d3sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\test\TBench.vcxproj]. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual > . > And 50 more. Sorry, my bad, I had to free disk space on the Windows nodes...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:705,deployability,build,build,705,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5552-windows10-cxx14&date=2020-06-06). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85621/console). > . > ### Errors:. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(3019,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp_CL_60f507d3sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\test\TBench.vcxproj]. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual > . > And 50 more. Sorry, my bad, I had to free disk space on the Windows nodes...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:711,deployability,build,build,711,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5552-windows10-cxx14&date=2020-06-06). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85621/console). > . > ### Errors:. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(3019,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp_CL_60f507d3sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\test\TBench.vcxproj]. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual > . > And 50 more. Sorry, my bad, I had to free disk space on the Windows nodes...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:155,integrability,filter,filtercount,155,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5552-windows10-cxx14&date=2020-06-06). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85621/console). > . > ### Errors:. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(3019,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp_CL_60f507d3sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\test\TBench.vcxproj]. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual > . > And 50 more. Sorry, my bad, I had to free disk space on the Windows nodes...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:292,integrability,servic,services,292,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5552-windows10-cxx14&date=2020-06-06). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85621/console). > . > ### Errors:. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(3019,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp_CL_60f507d3sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\test\TBench.vcxproj]. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual > . > And 50 more. Sorry, my bad, I had to free disk space on the Windows nodes...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:292,modifiability,servic,services,292,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5552-windows10-cxx14&date=2020-06-06). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85621/console). > . > ### Errors:. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(3019,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp_CL_60f507d3sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\test\TBench.vcxproj]. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual > . > And 50 more. Sorry, my bad, I had to free disk space on the Windows nodes...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:570,modifiability,interm,intermediate,570,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5552-windows10-cxx14&date=2020-06-06). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85621/console). > . > ### Errors:. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(3019,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp_CL_60f507d3sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\test\TBench.vcxproj]. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual > . > And 50 more. Sorry, my bad, I had to free disk space on the Windows nodes...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:376,performance,Error,Errors,376,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5552-windows10-cxx14&date=2020-06-06). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85621/console). > . > ### Errors:. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(3019,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp_CL_60f507d3sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\test\TBench.vcxproj]. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual > . > And 50 more. Sorry, my bad, I had to free disk space on the Windows nodes...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:535,performance,error,error,535,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5552-windows10-cxx14&date=2020-06-06). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85621/console). > . > ### Errors:. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(3019,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp_CL_60f507d3sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\test\TBench.vcxproj]. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual > . > And 50 more. Sorry, my bad, I had to free disk space on the Windows nodes...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:858,performance,disk,disk,858,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5552-windows10-cxx14&date=2020-06-06). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85621/console). > . > ### Errors:. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(3019,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp_CL_60f507d3sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\test\TBench.vcxproj]. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual > . > And 50 more. Sorry, my bad, I had to free disk space on the Windows nodes...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:8,reliability,fail,failed,8,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5552-windows10-cxx14&date=2020-06-06). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85621/console). > . > ### Errors:. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(3019,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp_CL_60f507d3sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\test\TBench.vcxproj]. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual > . > And 50 more. Sorry, my bad, I had to free disk space on the Windows nodes...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:376,safety,Error,Errors,376,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5552-windows10-cxx14&date=2020-06-06). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85621/console). > . > ### Errors:. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(3019,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp_CL_60f507d3sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\test\TBench.vcxproj]. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual > . > And 50 more. Sorry, my bad, I had to free disk space on the Windows nodes...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:535,safety,error,error,535,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5552-windows10-cxx14&date=2020-06-06). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85621/console). > . > ### Errors:. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(3019,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp_CL_60f507d3sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\test\TBench.vcxproj]. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual > . > And 50 more. Sorry, my bad, I had to free disk space on the Windows nodes...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:717,safety,test,test,717,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5552-windows10-cxx14&date=2020-06-06). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85621/console). > . > ### Errors:. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(3019,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp_CL_60f507d3sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\test\TBench.vcxproj]. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual > . > And 50 more. Sorry, my bad, I had to free disk space on the Windows nodes...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:717,testability,test,test,717,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5552-windows10-cxx14&date=2020-06-06). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85621/console). > . > ### Errors:. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(3019,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp_CL_60f507d3sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\test\TBench.vcxproj]. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual > . > And 50 more. Sorry, my bad, I had to free disk space on the Windows nodes...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:376,usability,Error,Errors,376,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5552-windows10-cxx14&date=2020-06-06). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85621/console). > . > ### Errors:. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(3019,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp_CL_60f507d3sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\test\TBench.vcxproj]. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual > . > And 50 more. Sorry, my bad, I had to free disk space on the Windows nodes...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:449,usability,Visual,Visual,449,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5552-windows10-cxx14&date=2020-06-06). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85621/console). > . > ### Errors:. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(3019,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp_CL_60f507d3sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\test\TBench.vcxproj]. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual > . > And 50 more. Sorry, my bad, I had to free disk space on the Windows nodes...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:481,usability,Tool,Tools,481,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5552-windows10-cxx14&date=2020-06-06). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85621/console). > . > ### Errors:. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(3019,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp_CL_60f507d3sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\test\TBench.vcxproj]. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual > . > And 50 more. Sorry, my bad, I had to free disk space on the Windows nodes...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:535,usability,error,error,535,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5552-windows10-cxx14&date=2020-06-06). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85621/console). > . > ### Errors:. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(3019,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp_CL_60f507d3sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\test\TBench.vcxproj]. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual > . > And 50 more. Sorry, my bad, I had to free disk space on the Windows nodes...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:593,usability,User,Users,593,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5552-windows10-cxx14&date=2020-06-06). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85621/console). > . > ### Errors:. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(3019,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp_CL_60f507d3sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\test\TBench.vcxproj]. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual > . > And 50 more. Sorry, my bad, I had to free disk space on the Windows nodes...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:803,usability,Visual,Visual,803,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5552-windows10-cxx14&date=2020-06-06). > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85621/console). > . > ### Errors:. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(3019,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp_CL_60f507d3sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\test\TBench.vcxproj]. > * [2020-06-06T10:06:37.755Z] C:\Program Files (x86)\Microsoft Visual > . > And 50 more. Sorry, my bad, I had to free disk space on the Windows nodes...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5553:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5553
https://github.com/root-project/root/pull/5554:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5554
https://github.com/root-project/root/pull/5554:23,deployability,build,builds,23,needs another round of builds after https://github.com/root-project/root/pull/5556 is merged,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5554
https://github.com/root-project/root/pull/5554:11,deployability,build,build,11,@phsft-bot build please,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5554
https://github.com/root-project/root/pull/5554:98,deployability,build,builds,98,"Hi Axel, I did it the other way around if it's not a problem (so I won't trigger another round of builds with a rebase): the new [ROOT-10754](https://sft.its.cern.ch/jira/browse/ROOT-10754) points to the commits to revert once the underlying problem in cling is fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5554
https://github.com/root-project/root/pull/5556:0,availability,failur,failures,0,"failures in `projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis` are understood, they were hidden by the bug that this PR fixes, and should be fixed by #5554",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5556
https://github.com/root-project/root/pull/5556:0,deployability,fail,failures,0,"failures in `projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis` are understood, they were hidden by the bug that this PR fixes, and should be fixed by #5554",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5556
https://github.com/root-project/root/pull/5556:0,performance,failur,failures,0,"failures in `projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis` are understood, they were hidden by the bug that this PR fixes, and should be fixed by #5554",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5556
https://github.com/root-project/root/pull/5556:0,reliability,fail,failures,0,"failures in `projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis` are understood, they were hidden by the bug that this PR fixes, and should be fixed by #5554",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5556
https://github.com/root-project/root/pull/5559:81,energy efficiency,load,load,81,"Wouldn't it be easier to just remove the pymva part? I think an explicit library load in a tutorial is a little bit weird, from the users perspective. It does not convey the message of a clean tutorial for a stable feature.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5559
https://github.com/root-project/root/pull/5559:174,integrability,messag,message,174,"Wouldn't it be easier to just remove the pymva part? I think an explicit library load in a tutorial is a little bit weird, from the users perspective. It does not convey the message of a clean tutorial for a stable feature.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5559
https://github.com/root-project/root/pull/5559:174,interoperability,messag,message,174,"Wouldn't it be easier to just remove the pymva part? I think an explicit library load in a tutorial is a little bit weird, from the users perspective. It does not convey the message of a clean tutorial for a stable feature.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5559
https://github.com/root-project/root/pull/5559:81,performance,load,load,81,"Wouldn't it be easier to just remove the pymva part? I think an explicit library load in a tutorial is a little bit weird, from the users perspective. It does not convey the message of a clean tutorial for a stable feature.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5559
https://github.com/root-project/root/pull/5559:154,reliability,doe,does,154,"Wouldn't it be easier to just remove the pymva part? I think an explicit library load in a tutorial is a little bit weird, from the users perspective. It does not convey the message of a clean tutorial for a stable feature.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5559
https://github.com/root-project/root/pull/5559:132,usability,user,users,132,"Wouldn't it be easier to just remove the pymva part? I think an explicit library load in a tutorial is a little bit weird, from the users perspective. It does not convey the message of a clean tutorial for a stable feature.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5559
https://github.com/root-project/root/pull/5559:261,deployability,manag,manager,261,"HI, . I think is nice to show in a tutorial that we can run different methods and TMVA and Keras at the same time. . We could add a pre-processing macro for pymva, something like R__HAS_PYMVA. or even better fix the loading of the library using the ROOT plugin-manager. I will see if I can provide a PR for one of these tomorrow.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5559
https://github.com/root-project/root/pull/5559:216,energy efficiency,load,loading,216,"HI, . I think is nice to show in a tutorial that we can run different methods and TMVA and Keras at the same time. . We could add a pre-processing macro for pymva, something like R__HAS_PYMVA. or even better fix the loading of the library using the ROOT plugin-manager. I will see if I can provide a PR for one of these tomorrow.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5559
https://github.com/root-project/root/pull/5559:261,energy efficiency,manag,manager,261,"HI, . I think is nice to show in a tutorial that we can run different methods and TMVA and Keras at the same time. . We could add a pre-processing macro for pymva, something like R__HAS_PYMVA. or even better fix the loading of the library using the ROOT plugin-manager. I will see if I can provide a PR for one of these tomorrow.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5559
https://github.com/root-project/root/pull/5559:254,interoperability,plug,plugin-manager,254,"HI, . I think is nice to show in a tutorial that we can run different methods and TMVA and Keras at the same time. . We could add a pre-processing macro for pymva, something like R__HAS_PYMVA. or even better fix the loading of the library using the ROOT plugin-manager. I will see if I can provide a PR for one of these tomorrow.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5559
https://github.com/root-project/root/pull/5559:109,performance,time,time,109,"HI, . I think is nice to show in a tutorial that we can run different methods and TMVA and Keras at the same time. . We could add a pre-processing macro for pymva, something like R__HAS_PYMVA. or even better fix the loading of the library using the ROOT plugin-manager. I will see if I can provide a PR for one of these tomorrow.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5559
https://github.com/root-project/root/pull/5559:216,performance,load,loading,216,"HI, . I think is nice to show in a tutorial that we can run different methods and TMVA and Keras at the same time. . We could add a pre-processing macro for pymva, something like R__HAS_PYMVA. or even better fix the loading of the library using the ROOT plugin-manager. I will see if I can provide a PR for one of these tomorrow.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5559
https://github.com/root-project/root/pull/5559:261,safety,manag,manager,261,"HI, . I think is nice to show in a tutorial that we can run different methods and TMVA and Keras at the same time. . We could add a pre-processing macro for pymva, something like R__HAS_PYMVA. or even better fix the loading of the library using the ROOT plugin-manager. I will see if I can provide a PR for one of these tomorrow.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5559
https://github.com/root-project/root/pull/5559:15,usability,close,close,15,I think we can close this PR. It is not needed anymore,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5559
https://github.com/root-project/root/pull/5559:23,usability,close,closed,23,@stwunsch I am sorry I closed PR but please reopen it if you feel it is something still needed :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5559
https://github.com/root-project/root/pull/5562:0,availability,Failur,Failures,0,Failures are due to [ROOT-10754](https://sft.its.cern.ch/jira/browse/ROOT-10754),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5562
https://github.com/root-project/root/pull/5562:0,deployability,Fail,Failures,0,Failures are due to [ROOT-10754](https://sft.its.cern.ch/jira/browse/ROOT-10754),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5562
https://github.com/root-project/root/pull/5562:0,performance,Failur,Failures,0,Failures are due to [ROOT-10754](https://sft.its.cern.ch/jira/browse/ROOT-10754),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5562
https://github.com/root-project/root/pull/5562:0,reliability,Fail,Failures,0,Failures are due to [ROOT-10754](https://sft.its.cern.ch/jira/browse/ROOT-10754),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5562
https://github.com/root-project/root/pull/5562:11,deployability,build,build,11,@phsft-bot build please,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5562
https://github.com/root-project/root/pull/5566:321,integrability,messag,message,321,"> New feature (as in, RooFit can now do something more than before) but no new test or changes in the docs is suspicious 😄. True, but writing a test that checks graphics output would consume too much time. Docs have actually improved. They are just not in function docstrings, but where they were before:. RooFit sends a message when this feature is invoked, and this message is much more informative now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5566
https://github.com/root-project/root/pull/5566:368,integrability,messag,message,368,"> New feature (as in, RooFit can now do something more than before) but no new test or changes in the docs is suspicious 😄. True, but writing a test that checks graphics output would consume too much time. Docs have actually improved. They are just not in function docstrings, but where they were before:. RooFit sends a message when this feature is invoked, and this message is much more informative now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5566
https://github.com/root-project/root/pull/5566:321,interoperability,messag,message,321,"> New feature (as in, RooFit can now do something more than before) but no new test or changes in the docs is suspicious 😄. True, but writing a test that checks graphics output would consume too much time. Docs have actually improved. They are just not in function docstrings, but where they were before:. RooFit sends a message when this feature is invoked, and this message is much more informative now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5566
https://github.com/root-project/root/pull/5566:368,interoperability,messag,message,368,"> New feature (as in, RooFit can now do something more than before) but no new test or changes in the docs is suspicious 😄. True, but writing a test that checks graphics output would consume too much time. Docs have actually improved. They are just not in function docstrings, but where they were before:. RooFit sends a message when this feature is invoked, and this message is much more informative now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5566
https://github.com/root-project/root/pull/5566:200,performance,time,time,200,"> New feature (as in, RooFit can now do something more than before) but no new test or changes in the docs is suspicious 😄. True, but writing a test that checks graphics output would consume too much time. Docs have actually improved. They are just not in function docstrings, but where they were before:. RooFit sends a message when this feature is invoked, and this message is much more informative now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5566
https://github.com/root-project/root/pull/5566:79,safety,test,test,79,"> New feature (as in, RooFit can now do something more than before) but no new test or changes in the docs is suspicious 😄. True, but writing a test that checks graphics output would consume too much time. Docs have actually improved. They are just not in function docstrings, but where they were before:. RooFit sends a message when this feature is invoked, and this message is much more informative now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5566
https://github.com/root-project/root/pull/5566:144,safety,test,test,144,"> New feature (as in, RooFit can now do something more than before) but no new test or changes in the docs is suspicious 😄. True, but writing a test that checks graphics output would consume too much time. Docs have actually improved. They are just not in function docstrings, but where they were before:. RooFit sends a message when this feature is invoked, and this message is much more informative now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5566
https://github.com/root-project/root/pull/5566:79,testability,test,test,79,"> New feature (as in, RooFit can now do something more than before) but no new test or changes in the docs is suspicious 😄. True, but writing a test that checks graphics output would consume too much time. Docs have actually improved. They are just not in function docstrings, but where they were before:. RooFit sends a message when this feature is invoked, and this message is much more informative now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5566
https://github.com/root-project/root/pull/5566:144,testability,test,test,144,"> New feature (as in, RooFit can now do something more than before) but no new test or changes in the docs is suspicious 😄. True, but writing a test that checks graphics output would consume too much time. Docs have actually improved. They are just not in function docstrings, but where they were before:. RooFit sends a message when this feature is invoked, and this message is much more informative now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5566
https://github.com/root-project/root/pull/5568:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5568
https://github.com/root-project/root/pull/5570:22,availability,failur,failures,22,"The two JupyROOT test failures are not caused by this PR, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5570
https://github.com/root-project/root/pull/5570:22,deployability,fail,failures,22,"The two JupyROOT test failures are not caused by this PR, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5570
https://github.com/root-project/root/pull/5570:22,performance,failur,failures,22,"The two JupyROOT test failures are not caused by this PR, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5570
https://github.com/root-project/root/pull/5570:22,reliability,fail,failures,22,"The two JupyROOT test failures are not caused by this PR, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5570
https://github.com/root-project/root/pull/5570:17,safety,test,test,17,"The two JupyROOT test failures are not caused by this PR, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5570
https://github.com/root-project/root/pull/5570:17,testability,test,test,17,"The two JupyROOT test failures are not caused by this PR, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5570
https://github.com/root-project/root/pull/5571:0,availability,Failur,Failures,0,"Failures are unrelated, merging PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5571
https://github.com/root-project/root/pull/5571:0,deployability,Fail,Failures,0,"Failures are unrelated, merging PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5571
https://github.com/root-project/root/pull/5571:0,performance,Failur,Failures,0,"Failures are unrelated, merging PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5571
https://github.com/root-project/root/pull/5571:0,reliability,Fail,Failures,0,"Failures are unrelated, merging PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5571
https://github.com/root-project/root/pull/5572:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5572
https://github.com/root-project/root/pull/5572:11,deployability,build,build,11,@phsft-bot build just on ROOT-fedora29/python3,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5572
https://github.com/root-project/root/pull/5573:333,deployability,build,build,333,"> @vgvassilev If I see it correctly - it is just cleanup of historical code. No any real changes. That's what I am worried about. When this code changes even for NFCs there is always somebody that complains something broke. Doing it before branching leaves almost no place for testing even from within the team and experiments which build often against the master. The question is whether it pays off to change that so late and then potentially fix things under pressure asap, backport patches and make urgent patch releases. I think it does not. If @Axel-Naumann thinks otherwise, go ahead...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5573
https://github.com/root-project/root/pull/5573:486,deployability,patch,patches,486,"> @vgvassilev If I see it correctly - it is just cleanup of historical code. No any real changes. That's what I am worried about. When this code changes even for NFCs there is always somebody that complains something broke. Doing it before branching leaves almost no place for testing even from within the team and experiments which build often against the master. The question is whether it pays off to change that so late and then potentially fix things under pressure asap, backport patches and make urgent patch releases. I think it does not. If @Axel-Naumann thinks otherwise, go ahead...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5573
https://github.com/root-project/root/pull/5573:510,deployability,patch,patch,510,"> @vgvassilev If I see it correctly - it is just cleanup of historical code. No any real changes. That's what I am worried about. When this code changes even for NFCs there is always somebody that complains something broke. Doing it before branching leaves almost no place for testing even from within the team and experiments which build often against the master. The question is whether it pays off to change that so late and then potentially fix things under pressure asap, backport patches and make urgent patch releases. I think it does not. If @Axel-Naumann thinks otherwise, go ahead...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5573
https://github.com/root-project/root/pull/5573:516,deployability,releas,releases,516,"> @vgvassilev If I see it correctly - it is just cleanup of historical code. No any real changes. That's what I am worried about. When this code changes even for NFCs there is always somebody that complains something broke. Doing it before branching leaves almost no place for testing even from within the team and experiments which build often against the master. The question is whether it pays off to change that so late and then potentially fix things under pressure asap, backport patches and make urgent patch releases. I think it does not. If @Axel-Naumann thinks otherwise, go ahead...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5573
https://github.com/root-project/root/pull/5573:537,reliability,doe,does,537,"> @vgvassilev If I see it correctly - it is just cleanup of historical code. No any real changes. That's what I am worried about. When this code changes even for NFCs there is always somebody that complains something broke. Doing it before branching leaves almost no place for testing even from within the team and experiments which build often against the master. The question is whether it pays off to change that so late and then potentially fix things under pressure asap, backport patches and make urgent patch releases. I think it does not. If @Axel-Naumann thinks otherwise, go ahead...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5573
https://github.com/root-project/root/pull/5573:197,safety,compl,complains,197,"> @vgvassilev If I see it correctly - it is just cleanup of historical code. No any real changes. That's what I am worried about. When this code changes even for NFCs there is always somebody that complains something broke. Doing it before branching leaves almost no place for testing even from within the team and experiments which build often against the master. The question is whether it pays off to change that so late and then potentially fix things under pressure asap, backport patches and make urgent patch releases. I think it does not. If @Axel-Naumann thinks otherwise, go ahead...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5573
https://github.com/root-project/root/pull/5573:277,safety,test,testing,277,"> @vgvassilev If I see it correctly - it is just cleanup of historical code. No any real changes. That's what I am worried about. When this code changes even for NFCs there is always somebody that complains something broke. Doing it before branching leaves almost no place for testing even from within the team and experiments which build often against the master. The question is whether it pays off to change that so late and then potentially fix things under pressure asap, backport patches and make urgent patch releases. I think it does not. If @Axel-Naumann thinks otherwise, go ahead...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5573
https://github.com/root-project/root/pull/5573:486,safety,patch,patches,486,"> @vgvassilev If I see it correctly - it is just cleanup of historical code. No any real changes. That's what I am worried about. When this code changes even for NFCs there is always somebody that complains something broke. Doing it before branching leaves almost no place for testing even from within the team and experiments which build often against the master. The question is whether it pays off to change that so late and then potentially fix things under pressure asap, backport patches and make urgent patch releases. I think it does not. If @Axel-Naumann thinks otherwise, go ahead...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5573
https://github.com/root-project/root/pull/5573:510,safety,patch,patch,510,"> @vgvassilev If I see it correctly - it is just cleanup of historical code. No any real changes. That's what I am worried about. When this code changes even for NFCs there is always somebody that complains something broke. Doing it before branching leaves almost no place for testing even from within the team and experiments which build often against the master. The question is whether it pays off to change that so late and then potentially fix things under pressure asap, backport patches and make urgent patch releases. I think it does not. If @Axel-Naumann thinks otherwise, go ahead...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5573
https://github.com/root-project/root/pull/5573:197,security,compl,complains,197,"> @vgvassilev If I see it correctly - it is just cleanup of historical code. No any real changes. That's what I am worried about. When this code changes even for NFCs there is always somebody that complains something broke. Doing it before branching leaves almost no place for testing even from within the team and experiments which build often against the master. The question is whether it pays off to change that so late and then potentially fix things under pressure asap, backport patches and make urgent patch releases. I think it does not. If @Axel-Naumann thinks otherwise, go ahead...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5573
https://github.com/root-project/root/pull/5573:306,security,team,team,306,"> @vgvassilev If I see it correctly - it is just cleanup of historical code. No any real changes. That's what I am worried about. When this code changes even for NFCs there is always somebody that complains something broke. Doing it before branching leaves almost no place for testing even from within the team and experiments which build often against the master. The question is whether it pays off to change that so late and then potentially fix things under pressure asap, backport patches and make urgent patch releases. I think it does not. If @Axel-Naumann thinks otherwise, go ahead...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5573
https://github.com/root-project/root/pull/5573:486,security,patch,patches,486,"> @vgvassilev If I see it correctly - it is just cleanup of historical code. No any real changes. That's what I am worried about. When this code changes even for NFCs there is always somebody that complains something broke. Doing it before branching leaves almost no place for testing even from within the team and experiments which build often against the master. The question is whether it pays off to change that so late and then potentially fix things under pressure asap, backport patches and make urgent patch releases. I think it does not. If @Axel-Naumann thinks otherwise, go ahead...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5573
https://github.com/root-project/root/pull/5573:510,security,patch,patch,510,"> @vgvassilev If I see it correctly - it is just cleanup of historical code. No any real changes. That's what I am worried about. When this code changes even for NFCs there is always somebody that complains something broke. Doing it before branching leaves almost no place for testing even from within the team and experiments which build often against the master. The question is whether it pays off to change that so late and then potentially fix things under pressure asap, backport patches and make urgent patch releases. I think it does not. If @Axel-Naumann thinks otherwise, go ahead...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5573
https://github.com/root-project/root/pull/5573:277,testability,test,testing,277,"> @vgvassilev If I see it correctly - it is just cleanup of historical code. No any real changes. That's what I am worried about. When this code changes even for NFCs there is always somebody that complains something broke. Doing it before branching leaves almost no place for testing even from within the team and experiments which build often against the master. The question is whether it pays off to change that so late and then potentially fix things under pressure asap, backport patches and make urgent patch releases. I think it does not. If @Axel-Naumann thinks otherwise, go ahead...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5573
https://github.com/root-project/root/pull/5573:64,integrability,sub,submit,64,"@vgvassilev It can wait until 6.22 branching. I have in mind to submit several other PRs, which definitely have to wait",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5573
https://github.com/root-project/root/pull/5573:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5573
https://github.com/root-project/root/pull/5577:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5577
https://github.com/root-project/root/pull/5577:271,modifiability,variab,variables,271,"> It is a bit confusing, it is possible to run this code as standalone still? I would actually remove . > everywhere this possibility (e.g remove -> find_package(ROOT REQUIRED) and etc.). I explained in Mattermost - `find_package(ROOT REQUIRED)` kept in two places while variables like `ROOT_vs_FOUND` or `ROOT_mathcore_FOUND` defined only after calling `ROOTConfigure.cmake`. One need to change a lot in `test/CMakeLists.txt` and `tutorials/CMakeLists.txt`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5577
https://github.com/root-project/root/pull/5577:406,safety,test,test,406,"> It is a bit confusing, it is possible to run this code as standalone still? I would actually remove . > everywhere this possibility (e.g remove -> find_package(ROOT REQUIRED) and etc.). I explained in Mattermost - `find_package(ROOT REQUIRED)` kept in two places while variables like `ROOT_vs_FOUND` or `ROOT_mathcore_FOUND` defined only after calling `ROOTConfigure.cmake`. One need to change a lot in `test/CMakeLists.txt` and `tutorials/CMakeLists.txt`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5577
https://github.com/root-project/root/pull/5577:406,testability,test,test,406,"> It is a bit confusing, it is possible to run this code as standalone still? I would actually remove . > everywhere this possibility (e.g remove -> find_package(ROOT REQUIRED) and etc.). I explained in Mattermost - `find_package(ROOT REQUIRED)` kept in two places while variables like `ROOT_vs_FOUND` or `ROOT_mathcore_FOUND` defined only after calling `ROOTConfigure.cmake`. One need to change a lot in `test/CMakeLists.txt` and `tutorials/CMakeLists.txt`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5577
https://github.com/root-project/root/pull/5577:32,deployability,updat,update,32,I will be thankful if you could update minimal version of CMake everywhere in these files (it is too much noticeable).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5577
https://github.com/root-project/root/pull/5577:47,deployability,version,version,47,I will be thankful if you could update minimal version of CMake everywhere in these files (it is too much noticeable).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5577
https://github.com/root-project/root/pull/5577:47,integrability,version,version,47,I will be thankful if you could update minimal version of CMake everywhere in these files (it is too much noticeable).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5577
https://github.com/root-project/root/pull/5577:47,modifiability,version,version,47,I will be thankful if you could update minimal version of CMake everywhere in these files (it is too much noticeable).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5577
https://github.com/root-project/root/pull/5577:32,safety,updat,update,32,I will be thankful if you could update minimal version of CMake everywhere in these files (it is too much noticeable).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5577
https://github.com/root-project/root/pull/5577:32,security,updat,update,32,I will be thankful if you could update minimal version of CMake everywhere in these files (it is too much noticeable).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5577
https://github.com/root-project/root/pull/5577:39,usability,minim,minimal,39,I will be thankful if you could update minimal version of CMake everywhere in these files (it is too much noticeable).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5577
https://github.com/root-project/root/pull/5577:25,deployability,version,version,25,"@oshadura I adjust cmake version, lets wait for jenkins. Also please check #5573",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5577
https://github.com/root-project/root/pull/5577:25,integrability,version,version,25,"@oshadura I adjust cmake version, lets wait for jenkins. Also please check #5573",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5577
https://github.com/root-project/root/pull/5577:25,modifiability,version,version,25,"@oshadura I adjust cmake version, lets wait for jenkins. Also please check #5573",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5577
https://github.com/root-project/root/pull/5577:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5577
https://github.com/root-project/root/pull/5577:12,safety,test,tests,12,Finally all tests passed!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5577
https://github.com/root-project/root/pull/5577:12,testability,test,tests,12,Finally all tests passed!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5577
https://github.com/root-project/root/pull/5578:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5578
https://github.com/root-project/root/pull/5579:11,deployability,build,build,11,@phsft-bot build just on ROOT-fedora29/python3,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5579
https://github.com/root-project/root/pull/5582:123,deployability,depend,dependent,123,"I give up, I'll forward declare tbb::interface7::task_arena and ask the TBB developers about the chances for the interface-dependent name to change in the near future",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5582
https://github.com/root-project/root/pull/5582:113,integrability,interfac,interface-dependent,113,"I give up, I'll forward declare tbb::interface7::task_arena and ask the TBB developers about the chances for the interface-dependent name to change in the near future",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5582
https://github.com/root-project/root/pull/5582:113,interoperability,interfac,interface-dependent,113,"I give up, I'll forward declare tbb::interface7::task_arena and ask the TBB developers about the chances for the interface-dependent name to change in the near future",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5582
https://github.com/root-project/root/pull/5582:113,modifiability,interfac,interface-dependent,113,"I give up, I'll forward declare tbb::interface7::task_arena and ask the TBB developers about the chances for the interface-dependent name to change in the near future",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5582
https://github.com/root-project/root/pull/5582:123,safety,depend,dependent,123,"I give up, I'll forward declare tbb::interface7::task_arena and ask the TBB developers about the chances for the interface-dependent name to change in the near future",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5582
https://github.com/root-project/root/pull/5582:123,testability,depend,dependent,123,"I give up, I'll forward declare tbb::interface7::task_arena and ask the TBB developers about the chances for the interface-dependent name to change in the near future",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5582
https://github.com/root-project/root/pull/5582:22,safety,safe,safety,22,"Also, enabling thread safety on initialization of the task arena should allow us to get rid of all ROOT::EnableThreadSafety() calls throughout ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5582
https://github.com/root-project/root/pull/5582:35,testability,simpl,simplified,35,All this circling to end up with a simplified TPoolManager,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5582
https://github.com/root-project/root/pull/5582:35,usability,simpl,simplified,35,All this circling to end up with a simplified TPoolManager,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5582
https://github.com/root-project/root/pull/5582:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5582
https://github.com/root-project/root/pull/5582:179,deployability,build,building,179,> [3fa8acb](https://github.com/root-project/root/commit/3fa8acb3c445f2949ea73ef62c89d761f150ebb9) has a funny character int he commit message. Will correct as soon as we are done building,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5582
https://github.com/root-project/root/pull/5582:134,integrability,messag,message,134,> [3fa8acb](https://github.com/root-project/root/commit/3fa8acb3c445f2949ea73ef62c89d761f150ebb9) has a funny character int he commit message. Will correct as soon as we are done building,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5582
https://github.com/root-project/root/pull/5582:134,interoperability,messag,message,134,> [3fa8acb](https://github.com/root-project/root/commit/3fa8acb3c445f2949ea73ef62c89d761f150ebb9) has a funny character int he commit message. Will correct as soon as we are done building,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5582
https://github.com/root-project/root/pull/5582:19,interoperability,format,format,19,"Sorry, I run clang-format before but I guess I missed most of a file (?). . I disagree with clang-format on what's left, for clarity and legibility reasons. Let me know if you still think I should change it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5582
https://github.com/root-project/root/pull/5582:98,interoperability,format,format,98,"Sorry, I run clang-format before but I guess I missed most of a file (?). . I disagree with clang-format on what's left, for clarity and legibility reasons. Let me know if you still think I should change it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5582
https://github.com/root-project/root/pull/5582:125,usability,clarit,clarity,125,"Sorry, I run clang-format before but I guess I missed most of a file (?). . I disagree with clang-format on what's left, for clarity and legibility reasons. Let me know if you still think I should change it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5582
https://github.com/root-project/root/pull/5582:35,deployability,build,build,35,"All good. @xvallspl do all commits build (i.e. I can do a rebase and merge), or can I do a squash (i.e. all commits actually amount to one logical change) or do you want to rebase and fix up commits on your side?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5582
https://github.com/root-project/root/pull/5582:139,deployability,log,logical,139,"All good. @xvallspl do all commits build (i.e. I can do a rebase and merge), or can I do a squash (i.e. all commits actually amount to one logical change) or do you want to rebase and fix up commits on your side?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5582
https://github.com/root-project/root/pull/5582:139,safety,log,logical,139,"All good. @xvallspl do all commits build (i.e. I can do a rebase and merge), or can I do a squash (i.e. all commits actually amount to one logical change) or do you want to rebase and fix up commits on your side?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5582
https://github.com/root-project/root/pull/5582:139,security,log,logical,139,"All good. @xvallspl do all commits build (i.e. I can do a rebase and merge), or can I do a squash (i.e. all commits actually amount to one logical change) or do you want to rebase and fix up commits on your side?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5582
https://github.com/root-project/root/pull/5582:139,testability,log,logical,139,"All good. @xvallspl do all commits build (i.e. I can do a rebase and merge), or can I do a squash (i.e. all commits actually amount to one logical change) or do you want to rebase and fix up commits on your side?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5582
https://github.com/root-project/root/pull/5582:96,energy efficiency,reduc,reduce,96,"Rebase and merge would be the quickest option. I would not squash them but, If necessary, I can reduce the amount of commits on my side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5582
https://github.com/root-project/root/pull/5584:22,safety,test,tests,22,"Problem with JupyROOT tests found! . One need to cleanup a lot of temporary files in roottest/python/JupyROOT directory. This was same code as #5577, therefore closing it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5584
https://github.com/root-project/root/pull/5584:22,testability,test,tests,22,"Problem with JupyROOT tests found! . One need to cleanup a lot of temporary files in roottest/python/JupyROOT directory. This was same code as #5577, therefore closing it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5584
https://github.com/root-project/root/pull/5586:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5586
https://github.com/root-project/root/pull/5586:11,interoperability,format,formatting,11,Check the [formatting report](https://travis-ci.org/github/root-project/root/jobs/685505719),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5586
https://github.com/root-project/root/pull/5586:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14 with flags -Druntime_cxxmodules=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5586
https://github.com/root-project/root/pull/5586:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5586
https://github.com/root-project/root/pull/5587:7,safety,compl,complains,7,"Travis complains about CPyCppyy, PR should be fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5587
https://github.com/root-project/root/pull/5587:7,security,compl,complains,7,"Travis complains about CPyCppyy, PR should be fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5587
https://github.com/root-project/root/pull/5591:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:100,integrability,messag,messages,100,"Now that #5297 is merged, we can activate this, and fix the few tests that actually need diagnostic messages. @Axel-Naumann @eguiraud ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:100,interoperability,messag,messages,100,"Now that #5297 is merged, we can activate this, and fix the few tests that actually need diagnostic messages. @Axel-Naumann @eguiraud ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:89,reliability,diagno,diagnostic,89,"Now that #5297 is merged, we can activate this, and fix the few tests that actually need diagnostic messages. @Axel-Naumann @eguiraud ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:64,safety,test,tests,64,"Now that #5297 is merged, we can activate this, and fix the few tests that actually need diagnostic messages. @Axel-Naumann @eguiraud ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:64,testability,test,tests,64,"Now that #5297 is merged, we can activate this, and fix the few tests that actually need diagnostic messages. @Axel-Naumann @eguiraud ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:89,testability,diagno,diagnostic,89,"Now that #5297 is merged, we can activate this, and fix the few tests that actually need diagnostic messages. @Axel-Naumann @eguiraud ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:77,availability,Error,Error,77,> projectroot.core.meta.test.gtest_core_meta_test_testStatusBitsChecker. The Error message are intentional and it would be an improvement to add a check that they are present.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:14,energy efficiency,core,core,14,> projectroot.core.meta.test.gtest_core_meta_test_testStatusBitsChecker. The Error message are intentional and it would be an improvement to add a check that they are present.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:83,integrability,messag,message,83,> projectroot.core.meta.test.gtest_core_meta_test_testStatusBitsChecker. The Error message are intentional and it would be an improvement to add a check that they are present.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:83,interoperability,messag,message,83,> projectroot.core.meta.test.gtest_core_meta_test_testStatusBitsChecker. The Error message are intentional and it would be an improvement to add a check that they are present.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:77,performance,Error,Error,77,> projectroot.core.meta.test.gtest_core_meta_test_testStatusBitsChecker. The Error message are intentional and it would be an improvement to add a check that they are present.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:24,safety,test,test,24,> projectroot.core.meta.test.gtest_core_meta_test_testStatusBitsChecker. The Error message are intentional and it would be an improvement to add a check that they are present.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:77,safety,Error,Error,77,> projectroot.core.meta.test.gtest_core_meta_test_testStatusBitsChecker. The Error message are intentional and it would be an improvement to add a check that they are present.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:24,testability,test,test,24,> projectroot.core.meta.test.gtest_core_meta_test_testStatusBitsChecker. The Error message are intentional and it would be an improvement to add a check that they are present.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:77,usability,Error,Error,77,> projectroot.core.meta.test.gtest_core_meta_test_testStatusBitsChecker. The Error message are intentional and it would be an improvement to add a check that they are present.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:32,safety,test,tests,32,Will take care of the three RDF tests asap,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:32,testability,test,tests,32,Will take care of the three RDF tests asap,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:103,availability,Error,Error,103,"Well, `dataframe_simple` has a problem: `RLoopManager::Run` prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to std::terminate. It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. @hageboeck @vgvassilev @reikdas what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:162,availability,Error,Error,162,"Well, `dataframe_simple` has a problem: `RLoopManager::Run` prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to std::terminate. It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. @hageboeck @vgvassilev @reikdas what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:103,performance,Error,Error,103,"Well, `dataframe_simple` has a problem: `RLoopManager::Run` prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to std::terminate. It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. @hageboeck @vgvassilev @reikdas what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:162,performance,Error,Error,162,"Well, `dataframe_simple` has a problem: `RLoopManager::Run` prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to std::terminate. It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. @hageboeck @vgvassilev @reikdas what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:121,reliability,doe,does,121,"Well, `dataframe_simple` has a problem: `RLoopManager::Run` prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to std::terminate. It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. @hageboeck @vgvassilev @reikdas what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:103,safety,Error,Error,103,"Well, `dataframe_simple` has a problem: `RLoopManager::Run` prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to std::terminate. It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. @hageboeck @vgvassilev @reikdas what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:162,safety,Error,Error,162,"Well, `dataframe_simple` has a problem: `RLoopManager::Run` prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to std::terminate. It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. @hageboeck @vgvassilev @reikdas what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:188,safety,except,exceptions,188,"Well, `dataframe_simple` has a problem: `RLoopManager::Run` prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to std::terminate. It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. @hageboeck @vgvassilev @reikdas what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:103,usability,Error,Error,103,"Well, `dataframe_simple` has a problem: `RLoopManager::Run` prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to std::terminate. It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. @hageboeck @vgvassilev @reikdas what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:162,usability,Error,Error,162,"Well, `dataframe_simple` has a problem: `RLoopManager::Run` prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to std::terminate. It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. @hageboeck @vgvassilev @reikdas what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:313,availability,Error,Error,313,"> It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. That's an option. But if that's the only place where we ever use `cerr`, we could also just ignore the specific diagnostic by either tweaking the FAILREGEX to something like. `Warning|Error|Info in <...> [^Whatever comes here]`, or disabling it altogether.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:275,deployability,FAIL,FAILREGEX,275,"> It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. That's an option. But if that's the only place where we ever use `cerr`, we could also just ignore the specific diagnostic by either tweaking the FAILREGEX to something like. `Warning|Error|Info in <...> [^Whatever comes here]`, or disabling it altogether.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:232,interoperability,specif,specific,232,"> It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. That's an option. But if that's the only place where we ever use `cerr`, we could also just ignore the specific diagnostic by either tweaking the FAILREGEX to something like. `Warning|Error|Info in <...> [^Whatever comes here]`, or disabling it altogether.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:313,performance,Error,Error,313,"> It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. That's an option. But if that's the only place where we ever use `cerr`, we could also just ignore the specific diagnostic by either tweaking the FAILREGEX to something like. `Warning|Error|Info in <...> [^Whatever comes here]`, or disabling it altogether.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:241,reliability,diagno,diagnostic,241,"> It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. That's an option. But if that's the only place where we ever use `cerr`, we could also just ignore the specific diagnostic by either tweaking the FAILREGEX to something like. `Warning|Error|Info in <...> [^Whatever comes here]`, or disabling it altogether.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:275,reliability,FAIL,FAILREGEX,275,"> It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. That's an option. But if that's the only place where we ever use `cerr`, we could also just ignore the specific diagnostic by either tweaking the FAILREGEX to something like. `Warning|Error|Info in <...> [^Whatever comes here]`, or disabling it altogether.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:313,safety,Error,Error,313,"> It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. That's an option. But if that's the only place where we ever use `cerr`, we could also just ignore the specific diagnostic by either tweaking the FAILREGEX to something like. `Warning|Error|Info in <...> [^Whatever comes here]`, or disabling it altogether.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:241,testability,diagno,diagnostic,241,"> It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. That's an option. But if that's the only place where we ever use `cerr`, we could also just ignore the specific diagnostic by either tweaking the FAILREGEX to something like. `Warning|Error|Info in <...> [^Whatever comes here]`, or disabling it altogether.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:313,usability,Error,Error,313,"> It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. That's an option. But if that's the only place where we ever use `cerr`, we could also just ignore the specific diagnostic by either tweaking the FAILREGEX to something like. `Warning|Error|Info in <...> [^Whatever comes here]`, or disabling it altogether.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:105,availability,Error,Error,105,"> Well, `dataframe_simple` has a problem: `RLoopManager::Run` prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to std::terminate. > . > It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. @hageboeck @vgvassilev @reikdas what do you think? I am kind of hesitant. `ROOT_EXPECT_ERROR` for example, enforces the error format coming from the error handler. If we want such a facility to capture stderr it should be something like `ROOT_CAPTURE_STDERR_BLOCK` but I guess that goes beyond the intentional scope of the feature. I think @Axel-Naumann would want to have this for broader discussion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:164,availability,Error,Error,164,"> Well, `dataframe_simple` has a problem: `RLoopManager::Run` prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to std::terminate. > . > It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. @hageboeck @vgvassilev @reikdas what do you think? I am kind of hesitant. `ROOT_EXPECT_ERROR` for example, enforces the error format coming from the error handler. If we want such a facility to capture stderr it should be something like `ROOT_CAPTURE_STDERR_BLOCK` but I guess that goes beyond the intentional scope of the feature. I think @Axel-Naumann would want to have this for broader discussion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:518,availability,error,error,518,"> Well, `dataframe_simple` has a problem: `RLoopManager::Run` prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to std::terminate. > . > It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. @hageboeck @vgvassilev @reikdas what do you think? I am kind of hesitant. `ROOT_EXPECT_ERROR` for example, enforces the error format coming from the error handler. If we want such a facility to capture stderr it should be something like `ROOT_CAPTURE_STDERR_BLOCK` but I guess that goes beyond the intentional scope of the feature. I think @Axel-Naumann would want to have this for broader discussion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:547,availability,error,error,547,"> Well, `dataframe_simple` has a problem: `RLoopManager::Run` prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to std::terminate. > . > It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. @hageboeck @vgvassilev @reikdas what do you think? I am kind of hesitant. `ROOT_EXPECT_ERROR` for example, enforces the error format coming from the error handler. If we want such a facility to capture stderr it should be something like `ROOT_CAPTURE_STDERR_BLOCK` but I guess that goes beyond the intentional scope of the feature. I think @Axel-Naumann would want to have this for broader discussion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:524,interoperability,format,format,524,"> Well, `dataframe_simple` has a problem: `RLoopManager::Run` prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to std::terminate. > . > It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. @hageboeck @vgvassilev @reikdas what do you think? I am kind of hesitant. `ROOT_EXPECT_ERROR` for example, enforces the error format coming from the error handler. If we want such a facility to capture stderr it should be something like `ROOT_CAPTURE_STDERR_BLOCK` but I guess that goes beyond the intentional scope of the feature. I think @Axel-Naumann would want to have this for broader discussion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:105,performance,Error,Error,105,"> Well, `dataframe_simple` has a problem: `RLoopManager::Run` prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to std::terminate. > . > It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. @hageboeck @vgvassilev @reikdas what do you think? I am kind of hesitant. `ROOT_EXPECT_ERROR` for example, enforces the error format coming from the error handler. If we want such a facility to capture stderr it should be something like `ROOT_CAPTURE_STDERR_BLOCK` but I guess that goes beyond the intentional scope of the feature. I think @Axel-Naumann would want to have this for broader discussion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:164,performance,Error,Error,164,"> Well, `dataframe_simple` has a problem: `RLoopManager::Run` prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to std::terminate. > . > It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. @hageboeck @vgvassilev @reikdas what do you think? I am kind of hesitant. `ROOT_EXPECT_ERROR` for example, enforces the error format coming from the error handler. If we want such a facility to capture stderr it should be something like `ROOT_CAPTURE_STDERR_BLOCK` but I guess that goes beyond the intentional scope of the feature. I think @Axel-Naumann would want to have this for broader discussion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:518,performance,error,error,518,"> Well, `dataframe_simple` has a problem: `RLoopManager::Run` prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to std::terminate. > . > It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. @hageboeck @vgvassilev @reikdas what do you think? I am kind of hesitant. `ROOT_EXPECT_ERROR` for example, enforces the error format coming from the error handler. If we want such a facility to capture stderr it should be something like `ROOT_CAPTURE_STDERR_BLOCK` but I guess that goes beyond the intentional scope of the feature. I think @Axel-Naumann would want to have this for broader discussion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:547,performance,error,error,547,"> Well, `dataframe_simple` has a problem: `RLoopManager::Run` prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to std::terminate. > . > It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. @hageboeck @vgvassilev @reikdas what do you think? I am kind of hesitant. `ROOT_EXPECT_ERROR` for example, enforces the error format coming from the error handler. If we want such a facility to capture stderr it should be something like `ROOT_CAPTURE_STDERR_BLOCK` but I guess that goes beyond the intentional scope of the feature. I think @Axel-Naumann would want to have this for broader discussion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:123,reliability,doe,does,123,"> Well, `dataframe_simple` has a problem: `RLoopManager::Run` prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to std::terminate. > . > It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. @hageboeck @vgvassilev @reikdas what do you think? I am kind of hesitant. `ROOT_EXPECT_ERROR` for example, enforces the error format coming from the error handler. If we want such a facility to capture stderr it should be something like `ROOT_CAPTURE_STDERR_BLOCK` but I guess that goes beyond the intentional scope of the feature. I think @Axel-Naumann would want to have this for broader discussion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:105,safety,Error,Error,105,"> Well, `dataframe_simple` has a problem: `RLoopManager::Run` prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to std::terminate. > . > It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. @hageboeck @vgvassilev @reikdas what do you think? I am kind of hesitant. `ROOT_EXPECT_ERROR` for example, enforces the error format coming from the error handler. If we want such a facility to capture stderr it should be something like `ROOT_CAPTURE_STDERR_BLOCK` but I guess that goes beyond the intentional scope of the feature. I think @Axel-Naumann would want to have this for broader discussion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:164,safety,Error,Error,164,"> Well, `dataframe_simple` has a problem: `RLoopManager::Run` prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to std::terminate. > . > It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. @hageboeck @vgvassilev @reikdas what do you think? I am kind of hesitant. `ROOT_EXPECT_ERROR` for example, enforces the error format coming from the error handler. If we want such a facility to capture stderr it should be something like `ROOT_CAPTURE_STDERR_BLOCK` but I guess that goes beyond the intentional scope of the feature. I think @Axel-Naumann would want to have this for broader discussion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:190,safety,except,exceptions,190,"> Well, `dataframe_simple` has a problem: `RLoopManager::Run` prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to std::terminate. > . > It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. @hageboeck @vgvassilev @reikdas what do you think? I am kind of hesitant. `ROOT_EXPECT_ERROR` for example, enforces the error format coming from the error handler. If we want such a facility to capture stderr it should be something like `ROOT_CAPTURE_STDERR_BLOCK` but I guess that goes beyond the intentional scope of the feature. I think @Axel-Naumann would want to have this for broader discussion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:518,safety,error,error,518,"> Well, `dataframe_simple` has a problem: `RLoopManager::Run` prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to std::terminate. > . > It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. @hageboeck @vgvassilev @reikdas what do you think? I am kind of hesitant. `ROOT_EXPECT_ERROR` for example, enforces the error format coming from the error handler. If we want such a facility to capture stderr it should be something like `ROOT_CAPTURE_STDERR_BLOCK` but I guess that goes beyond the intentional scope of the feature. I think @Axel-Naumann would want to have this for broader discussion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:547,safety,error,error,547,"> Well, `dataframe_simple` has a problem: `RLoopManager::Run` prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to std::terminate. > . > It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. @hageboeck @vgvassilev @reikdas what do you think? I am kind of hesitant. `ROOT_EXPECT_ERROR` for example, enforces the error format coming from the error handler. If we want such a facility to capture stderr it should be something like `ROOT_CAPTURE_STDERR_BLOCK` but I guess that goes beyond the intentional scope of the feature. I think @Axel-Naumann would want to have this for broader discussion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:105,usability,Error,Error,105,"> Well, `dataframe_simple` has a problem: `RLoopManager::Run` prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to std::terminate. > . > It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. @hageboeck @vgvassilev @reikdas what do you think? I am kind of hesitant. `ROOT_EXPECT_ERROR` for example, enforces the error format coming from the error handler. If we want such a facility to capture stderr it should be something like `ROOT_CAPTURE_STDERR_BLOCK` but I guess that goes beyond the intentional scope of the feature. I think @Axel-Naumann would want to have this for broader discussion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:164,usability,Error,Error,164,"> Well, `dataframe_simple` has a problem: `RLoopManager::Run` prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to std::terminate. > . > It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. @hageboeck @vgvassilev @reikdas what do you think? I am kind of hesitant. `ROOT_EXPECT_ERROR` for example, enforces the error format coming from the error handler. If we want such a facility to capture stderr it should be something like `ROOT_CAPTURE_STDERR_BLOCK` but I guess that goes beyond the intentional scope of the feature. I think @Axel-Naumann would want to have this for broader discussion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:518,usability,error,error,518,"> Well, `dataframe_simple` has a problem: `RLoopManager::Run` prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to std::terminate. > . > It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. @hageboeck @vgvassilev @reikdas what do you think? I am kind of hesitant. `ROOT_EXPECT_ERROR` for example, enforces the error format coming from the error handler. If we want such a facility to capture stderr it should be something like `ROOT_CAPTURE_STDERR_BLOCK` but I guess that goes beyond the intentional scope of the feature. I think @Axel-Naumann would want to have this for broader discussion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:547,usability,error,error,547,"> Well, `dataframe_simple` has a problem: `RLoopManager::Run` prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to std::terminate. > . > It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. @hageboeck @vgvassilev @reikdas what do you think? I am kind of hesitant. `ROOT_EXPECT_ERROR` for example, enforces the error format coming from the error handler. If we want such a facility to capture stderr it should be something like `ROOT_CAPTURE_STDERR_BLOCK` but I guess that goes beyond the intentional scope of the feature. I think @Axel-Naumann would want to have this for broader discussion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:732,security,hack,hack,732,"> Next issue: I have a constructor that warns. > . > Obviously, switching from. > . > ```c++. > auto rdf = MakeSqliteDataFrame(fileName0, query0);. > ```. > . > to. > . > ```c++. > ROOT_EXPECT_WARNING(auto rdf = MakeSqliteDataFrame(fileName0, query0), ..., ...);. > ```. > . > makes it impossible to use `rdf` after this line. To make things worse, `rdf` is not default-constructible, so I cannot do. > . > ```c++. > RDFType rdf;. > ROOT_EXPECT_WARNING(rdf = MakeSqliteDataFrame(....), ...., ...);. > ```. > . > ...so I don't know how to catch that warning. I want to support that but I do not yet know how. I can think of adding a private factory function which then can be called only by our facility using the repriving template hack...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:568,usability,support,support,568,"> Next issue: I have a constructor that warns. > . > Obviously, switching from. > . > ```c++. > auto rdf = MakeSqliteDataFrame(fileName0, query0);. > ```. > . > to. > . > ```c++. > ROOT_EXPECT_WARNING(auto rdf = MakeSqliteDataFrame(fileName0, query0), ..., ...);. > ```. > . > makes it impossible to use `rdf` after this line. To make things worse, `rdf` is not default-constructible, so I cannot do. > . > ```c++. > RDFType rdf;. > ROOT_EXPECT_WARNING(rdf = MakeSqliteDataFrame(....), ...., ...);. > ```. > . > ...so I don't know how to catch that warning. I want to support that but I do not yet know how. I can think of adding a private factory function which then can be called only by our facility using the repriving template hack...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DDIAGNOSTICS_FAIL_TESTS=ON -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DDIAGNOSTICS_FAIL_TESTS=ON -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DDIAGNOSTICS_FAIL_TESTS=ON -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DDIAGNOSTICS_FAIL_TESTS=ON -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DDIAGNOSTICS_FAIL_TESTS=ON -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DDIAGNOSTICS_FAIL_TESTS=ON -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:4,availability,error,error,4,"The error messages in `treetreeplayertestUnit2` are expected, but should be checked",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:10,integrability,messag,messages,10,"The error messages in `treetreeplayertestUnit2` are expected, but should be checked",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:10,interoperability,messag,messages,10,"The error messages in `treetreeplayertestUnit2` are expected, but should be checked",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:4,performance,error,error,4,"The error messages in `treetreeplayertestUnit2` are expected, but should be checked",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:4,safety,error,error,4,"The error messages in `treetreeplayertestUnit2` are expected, but should be checked",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:4,usability,error,error,4,"The error messages in `treetreeplayertestUnit2` are expected, but should be checked",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:5,performance,perform,performance-,5,ROOT-performance-centos7-multicore/default with flags -DDIAGNOSTICS_FAIL_TESTS=ON -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:5,usability,perform,performance-,5,ROOT-performance-centos7-multicore/default with flags -DDIAGNOSTICS_FAIL_TESTS=ON -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:6,availability,error,error,6,"> The error messages in `treetreeplayertestUnit2` are expected, but should be checked. I actually tried to whitelist this one, but CMake makes no difference between an unset variable and a set, but empty string. Now, it should do the right thing, and ROOT_ADD_GTEST has one argument less.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:12,integrability,messag,messages,12,"> The error messages in `treetreeplayertestUnit2` are expected, but should be checked. I actually tried to whitelist this one, but CMake makes no difference between an unset variable and a set, but empty string. Now, it should do the right thing, and ROOT_ADD_GTEST has one argument less.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:12,interoperability,messag,messages,12,"> The error messages in `treetreeplayertestUnit2` are expected, but should be checked. I actually tried to whitelist this one, but CMake makes no difference between an unset variable and a set, but empty string. Now, it should do the right thing, and ROOT_ADD_GTEST has one argument less.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:174,modifiability,variab,variable,174,"> The error messages in `treetreeplayertestUnit2` are expected, but should be checked. I actually tried to whitelist this one, but CMake makes no difference between an unset variable and a set, but empty string. Now, it should do the right thing, and ROOT_ADD_GTEST has one argument less.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:6,performance,error,error,6,"> The error messages in `treetreeplayertestUnit2` are expected, but should be checked. I actually tried to whitelist this one, but CMake makes no difference between an unset variable and a set, but empty string. Now, it should do the right thing, and ROOT_ADD_GTEST has one argument less.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:6,safety,error,error,6,"> The error messages in `treetreeplayertestUnit2` are expected, but should be checked. I actually tried to whitelist this one, but CMake makes no difference between an unset variable and a set, but empty string. Now, it should do the right thing, and ROOT_ADD_GTEST has one argument less.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:6,usability,error,error,6,"> The error messages in `treetreeplayertestUnit2` are expected, but should be checked. I actually tried to whitelist this one, but CMake makes no difference between an unset variable and a set, but empty string. Now, it should do the right thing, and ROOT_ADD_GTEST has one argument less.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DDIAGNOSTICS_FAIL_TESTS=ON -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DDIAGNOSTICS_FAIL_TESTS=ON -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DDIAGNOSTICS_FAIL_TESTS=ON -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
