id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/5187:1291,testability,Trace,Traceback,1291,"r now:. ```bash. >>> import ROOT. >>> ROOT.foo. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 171, in _getattr. return getattr(self, name). File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 144, in _fallback_getattr. raise AttributeError(""Failed to import {} from ROOT"".format(name)). AttributeError: Failed to import foo from ROOT. ```. The behaviour before:. ```bash. >>> import ROOT. >>> ROOT.foo. Traceback (most recent call last):. File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 137, in _fallback_getattr. return getattr(gbl_namespace, name). AttributeError: <namespace cppyy.gbl at 0x5641444c41f0> has no attribute 'foo'. Full details:. type object '' has no attribute 'foo'. 'foo' is not a known C++ class. 'foo' is not a known C++ template. 'foo' is not a known C++ enum. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 140, in _fallback_getattr. return getattr(gbl_namespace.ROOT, name). AttributeError: <namespace cppyy.gbl.ROOT at 0x564145da5680> has no attribute 'foo'. Full details:. type object 'ROOT' has no attribute 'foo'. 'ROOT::foo' is not a known C++ class. 'foo' is not a known C++ template. 'foo' is not a known C++ enum. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 173, in _getattr. return getattr(self, name). File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 146, in _fallback_getattr. raise AttributeError(str(err)). AttributeError: <namespace cppyy.gbl at 0x5641444c41f0> has no attribute 'foo'. Full details:. type object '' has no attribute 'foo'. 'foo' is not a known C++ class. 'foo' is not a known C++",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5187
https://github.com/root-project/root/pull/5187:1784,testability,Trace,Traceback,1784,"o. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 171, in _getattr. return getattr(self, name). File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 144, in _fallback_getattr. raise AttributeError(""Failed to import {} from ROOT"".format(name)). AttributeError: Failed to import foo from ROOT. ```. The behaviour before:. ```bash. >>> import ROOT. >>> ROOT.foo. Traceback (most recent call last):. File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 137, in _fallback_getattr. return getattr(gbl_namespace, name). AttributeError: <namespace cppyy.gbl at 0x5641444c41f0> has no attribute 'foo'. Full details:. type object '' has no attribute 'foo'. 'foo' is not a known C++ class. 'foo' is not a known C++ template. 'foo' is not a known C++ enum. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 140, in _fallback_getattr. return getattr(gbl_namespace.ROOT, name). AttributeError: <namespace cppyy.gbl.ROOT at 0x564145da5680> has no attribute 'foo'. Full details:. type object 'ROOT' has no attribute 'foo'. 'ROOT::foo' is not a known C++ class. 'foo' is not a known C++ template. 'foo' is not a known C++ enum. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 173, in _getattr. return getattr(self, name). File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 146, in _fallback_getattr. raise AttributeError(str(err)). AttributeError: <namespace cppyy.gbl at 0x5641444c41f0> has no attribute 'foo'. Full details:. type object '' has no attribute 'foo'. 'foo' is not a known C++ class. 'foo' is not a known C++ template. 'foo' is not a known C++ enum. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5187
https://github.com/root-project/root/pull/5187:9,usability,Simpl,Simplify,9,"[PyROOT] Simplify lookup logic; I'm looking into the facade to fix [ROOT-10629](https://sft.its.cern.ch/jira/browse/ROOT-10629). However, we can improve in the lookup logic. Especially to throw more meaningful error messages. In short: Imho, stacking `try` blocks is not a good idea. The behaviour now:. ```bash. >>> import ROOT. >>> ROOT.foo. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 171, in _getattr. return getattr(self, name). File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 144, in _fallback_getattr. raise AttributeError(""Failed to import {} from ROOT"".format(name)). AttributeError: Failed to import foo from ROOT. ```. The behaviour before:. ```bash. >>> import ROOT. >>> ROOT.foo. Traceback (most recent call last):. File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 137, in _fallback_getattr. return getattr(gbl_namespace, name). AttributeError: <namespace cppyy.gbl at 0x5641444c41f0> has no attribute 'foo'. Full details:. type object '' has no attribute 'foo'. 'foo' is not a known C++ class. 'foo' is not a known C++ template. 'foo' is not a known C++ enum. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 140, in _fallback_getattr. return getattr(gbl_namespace.ROOT, name). AttributeError: <namespace cppyy.gbl.ROOT at 0x564145da5680> has no attribute 'foo'. Full details:. type object 'ROOT' has no attribute 'foo'. 'ROOT::foo' is not a known C++ class. 'foo' is not a known C++ template. 'foo' is not a known C++ enum. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 173, in _getattr. return getattr(self, name). File ""/home/stefan/builds",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5187
https://github.com/root-project/root/pull/5187:210,usability,error,error,210,"[PyROOT] Simplify lookup logic; I'm looking into the facade to fix [ROOT-10629](https://sft.its.cern.ch/jira/browse/ROOT-10629). However, we can improve in the lookup logic. Especially to throw more meaningful error messages. In short: Imho, stacking `try` blocks is not a good idea. The behaviour now:. ```bash. >>> import ROOT. >>> ROOT.foo. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 171, in _getattr. return getattr(self, name). File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 144, in _fallback_getattr. raise AttributeError(""Failed to import {} from ROOT"".format(name)). AttributeError: Failed to import foo from ROOT. ```. The behaviour before:. ```bash. >>> import ROOT. >>> ROOT.foo. Traceback (most recent call last):. File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 137, in _fallback_getattr. return getattr(gbl_namespace, name). AttributeError: <namespace cppyy.gbl at 0x5641444c41f0> has no attribute 'foo'. Full details:. type object '' has no attribute 'foo'. 'foo' is not a known C++ class. 'foo' is not a known C++ template. 'foo' is not a known C++ enum. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 140, in _fallback_getattr. return getattr(gbl_namespace.ROOT, name). AttributeError: <namespace cppyy.gbl.ROOT at 0x564145da5680> has no attribute 'foo'. Full details:. type object 'ROOT' has no attribute 'foo'. 'ROOT::foo' is not a known C++ class. 'foo' is not a known C++ template. 'foo' is not a known C++ enum. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 173, in _getattr. return getattr(self, name). File ""/home/stefan/builds",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5187
https://github.com/root-project/root/pull/5187:288,usability,behavi,behaviour,288,"[PyROOT] Simplify lookup logic; I'm looking into the facade to fix [ROOT-10629](https://sft.its.cern.ch/jira/browse/ROOT-10629). However, we can improve in the lookup logic. Especially to throw more meaningful error messages. In short: Imho, stacking `try` blocks is not a good idea. The behaviour now:. ```bash. >>> import ROOT. >>> ROOT.foo. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 171, in _getattr. return getattr(self, name). File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 144, in _fallback_getattr. raise AttributeError(""Failed to import {} from ROOT"".format(name)). AttributeError: Failed to import foo from ROOT. ```. The behaviour before:. ```bash. >>> import ROOT. >>> ROOT.foo. Traceback (most recent call last):. File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 137, in _fallback_getattr. return getattr(gbl_namespace, name). AttributeError: <namespace cppyy.gbl at 0x5641444c41f0> has no attribute 'foo'. Full details:. type object '' has no attribute 'foo'. 'foo' is not a known C++ class. 'foo' is not a known C++ template. 'foo' is not a known C++ enum. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 140, in _fallback_getattr. return getattr(gbl_namespace.ROOT, name). AttributeError: <namespace cppyy.gbl.ROOT at 0x564145da5680> has no attribute 'foo'. Full details:. type object 'ROOT' has no attribute 'foo'. 'ROOT::foo' is not a known C++ class. 'foo' is not a known C++ template. 'foo' is not a known C++ enum. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 173, in _getattr. return getattr(self, name). File ""/home/stefan/builds",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5187
https://github.com/root-project/root/pull/5187:759,usability,behavi,behaviour,759,"[PyROOT] Simplify lookup logic; I'm looking into the facade to fix [ROOT-10629](https://sft.its.cern.ch/jira/browse/ROOT-10629). However, we can improve in the lookup logic. Especially to throw more meaningful error messages. In short: Imho, stacking `try` blocks is not a good idea. The behaviour now:. ```bash. >>> import ROOT. >>> ROOT.foo. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 171, in _getattr. return getattr(self, name). File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 144, in _fallback_getattr. raise AttributeError(""Failed to import {} from ROOT"".format(name)). AttributeError: Failed to import foo from ROOT. ```. The behaviour before:. ```bash. >>> import ROOT. >>> ROOT.foo. Traceback (most recent call last):. File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 137, in _fallback_getattr. return getattr(gbl_namespace, name). AttributeError: <namespace cppyy.gbl at 0x5641444c41f0> has no attribute 'foo'. Full details:. type object '' has no attribute 'foo'. 'foo' is not a known C++ class. 'foo' is not a known C++ template. 'foo' is not a known C++ enum. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 140, in _fallback_getattr. return getattr(gbl_namespace.ROOT, name). AttributeError: <namespace cppyy.gbl.ROOT at 0x564145da5680> has no attribute 'foo'. Full details:. type object 'ROOT' has no attribute 'foo'. 'ROOT::foo' is not a known C++ class. 'foo' is not a known C++ template. 'foo' is not a known C++ enum. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 173, in _getattr. return getattr(self, name). File ""/home/stefan/builds",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5187
https://github.com/root-project/root/pull/5189:127,modifiability,variab,variables,127,[RDF] Clean-up tutorials; * Remove ROOT.ROOT calls in the Python tutorials. * Use rdfentry_ instead of tdfentry_. * Use df for variables instead of tdf. @etejedor Fine by you? The tutorials will now break with the old PyROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5189
https://github.com/root-project/root/pull/5190:15,modifiability,refact,refactoring,15,"RHist overflow refactoring; Overview. ---------. The under-/overflow bins are stored in a different array than that of the regular bins, and are refered to with negative indices. This lead to many functions reviews and reworking, so that they may work with both array.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5190
https://github.com/root-project/root/pull/5190:15,performance,refactor,refactoring,15,"RHist overflow refactoring; Overview. ---------. The under-/overflow bins are stored in a different array than that of the regular bins, and are refered to with negative indices. This lead to many functions reviews and reworking, so that they may work with both array.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5190
https://github.com/root-project/root/pull/5190:207,safety,review,reviews,207,"RHist overflow refactoring; Overview. ---------. The under-/overflow bins are stored in a different array than that of the regular bins, and are refered to with negative indices. This lead to many functions reviews and reworking, so that they may work with both array.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5190
https://github.com/root-project/root/pull/5190:207,testability,review,reviews,207,"RHist overflow refactoring; Overview. ---------. The under-/overflow bins are stored in a different array than that of the regular bins, and are refered to with negative indices. This lead to many functions reviews and reworking, so that they may work with both array.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5190
https://github.com/root-project/root/pull/5191:10,performance,time,time,10,universal time in pdf file; Small improvements in header in pdf file. * universal timestamp (time zone and daylight saving time). * add ModDate (same as CreationDate).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5191
https://github.com/root-project/root/pull/5191:82,performance,time,timestamp,82,universal time in pdf file; Small improvements in header in pdf file. * universal timestamp (time zone and daylight saving time). * add ModDate (same as CreationDate).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5191
https://github.com/root-project/root/pull/5191:93,performance,time,time,93,universal time in pdf file; Small improvements in header in pdf file. * universal timestamp (time zone and daylight saving time). * add ModDate (same as CreationDate).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5191
https://github.com/root-project/root/pull/5191:123,performance,time,time,123,universal time in pdf file; Small improvements in header in pdf file. * universal timestamp (time zone and daylight saving time). * add ModDate (same as CreationDate).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5191
https://github.com/root-project/root/pull/5192:212,availability,error,error,212,[HF] Several improvements for HistFactory; - [ROOT-5311] Make it much less verbose. - [ROOT-4060] Make it abort when invalid sample names are given. - [ROOT-8033] **Needs review** @lmoneta Switch default MC stat error constraint from Gaus to Poisson to follow HistFactory paper. - [ROOT-9365] Make documentation a bit easier to find. - Properly format documentation of RooWorkspace::factory(),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5192
https://github.com/root-project/root/pull/5192:345,interoperability,format,format,345,[HF] Several improvements for HistFactory; - [ROOT-5311] Make it much less verbose. - [ROOT-4060] Make it abort when invalid sample names are given. - [ROOT-8033] **Needs review** @lmoneta Switch default MC stat error constraint from Gaus to Poisson to follow HistFactory paper. - [ROOT-9365] Make documentation a bit easier to find. - Properly format documentation of RooWorkspace::factory(),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5192
https://github.com/root-project/root/pull/5192:212,performance,error,error,212,[HF] Several improvements for HistFactory; - [ROOT-5311] Make it much less verbose. - [ROOT-4060] Make it abort when invalid sample names are given. - [ROOT-8033] **Needs review** @lmoneta Switch default MC stat error constraint from Gaus to Poisson to follow HistFactory paper. - [ROOT-9365] Make documentation a bit easier to find. - Properly format documentation of RooWorkspace::factory(),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5192
https://github.com/root-project/root/pull/5192:242,reliability,Poisson,Poisson,242,[HF] Several improvements for HistFactory; - [ROOT-5311] Make it much less verbose. - [ROOT-4060] Make it abort when invalid sample names are given. - [ROOT-8033] **Needs review** @lmoneta Switch default MC stat error constraint from Gaus to Poisson to follow HistFactory paper. - [ROOT-9365] Make documentation a bit easier to find. - Properly format documentation of RooWorkspace::factory(),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5192
https://github.com/root-project/root/pull/5192:171,safety,review,review,171,[HF] Several improvements for HistFactory; - [ROOT-5311] Make it much less verbose. - [ROOT-4060] Make it abort when invalid sample names are given. - [ROOT-8033] **Needs review** @lmoneta Switch default MC stat error constraint from Gaus to Poisson to follow HistFactory paper. - [ROOT-9365] Make documentation a bit easier to find. - Properly format documentation of RooWorkspace::factory(),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5192
https://github.com/root-project/root/pull/5192:212,safety,error,error,212,[HF] Several improvements for HistFactory; - [ROOT-5311] Make it much less verbose. - [ROOT-4060] Make it abort when invalid sample names are given. - [ROOT-8033] **Needs review** @lmoneta Switch default MC stat error constraint from Gaus to Poisson to follow HistFactory paper. - [ROOT-9365] Make documentation a bit easier to find. - Properly format documentation of RooWorkspace::factory(),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5192
https://github.com/root-project/root/pull/5192:171,testability,review,review,171,[HF] Several improvements for HistFactory; - [ROOT-5311] Make it much less verbose. - [ROOT-4060] Make it abort when invalid sample names are given. - [ROOT-8033] **Needs review** @lmoneta Switch default MC stat error constraint from Gaus to Poisson to follow HistFactory paper. - [ROOT-9365] Make documentation a bit easier to find. - Properly format documentation of RooWorkspace::factory(),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5192
https://github.com/root-project/root/pull/5192:212,usability,error,error,212,[HF] Several improvements for HistFactory; - [ROOT-5311] Make it much less verbose. - [ROOT-4060] Make it abort when invalid sample names are given. - [ROOT-8033] **Needs review** @lmoneta Switch default MC stat error constraint from Gaus to Poisson to follow HistFactory paper. - [ROOT-9365] Make documentation a bit easier to find. - Properly format documentation of RooWorkspace::factory(),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5192
https://github.com/root-project/root/pull/5192:298,usability,document,documentation,298,[HF] Several improvements for HistFactory; - [ROOT-5311] Make it much less verbose. - [ROOT-4060] Make it abort when invalid sample names are given. - [ROOT-8033] **Needs review** @lmoneta Switch default MC stat error constraint from Gaus to Poisson to follow HistFactory paper. - [ROOT-9365] Make documentation a bit easier to find. - Properly format documentation of RooWorkspace::factory(),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5192
https://github.com/root-project/root/pull/5192:352,usability,document,documentation,352,[HF] Several improvements for HistFactory; - [ROOT-5311] Make it much less verbose. - [ROOT-4060] Make it abort when invalid sample names are given. - [ROOT-8033] **Needs review** @lmoneta Switch default MC stat error constraint from Gaus to Poisson to follow HistFactory paper. - [ROOT-9365] Make documentation a bit easier to find. - Properly format documentation of RooWorkspace::factory(),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5192
https://github.com/root-project/root/pull/5193:191,deployability,UPDAT,UPDATE,191,"[DF] Throw if Snapshot's output TTree is already present in output file; ...and add RSnapshotOptions::fOverwriteIfExists to give users the chance. to still write a TTree to a TFile opened in UPDATE mode, even if a TTree. with the same name is already present in the file, at the cost of deleting. the previous TTree from the file. This fixes ROOT-10573. ~~EDIT: still missing a test for `fOverwriteIfExists`, coming soon~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5193
https://github.com/root-project/root/pull/5193:191,safety,UPDAT,UPDATE,191,"[DF] Throw if Snapshot's output TTree is already present in output file; ...and add RSnapshotOptions::fOverwriteIfExists to give users the chance. to still write a TTree to a TFile opened in UPDATE mode, even if a TTree. with the same name is already present in the file, at the cost of deleting. the previous TTree from the file. This fixes ROOT-10573. ~~EDIT: still missing a test for `fOverwriteIfExists`, coming soon~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5193
https://github.com/root-project/root/pull/5193:378,safety,test,test,378,"[DF] Throw if Snapshot's output TTree is already present in output file; ...and add RSnapshotOptions::fOverwriteIfExists to give users the chance. to still write a TTree to a TFile opened in UPDATE mode, even if a TTree. with the same name is already present in the file, at the cost of deleting. the previous TTree from the file. This fixes ROOT-10573. ~~EDIT: still missing a test for `fOverwriteIfExists`, coming soon~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5193
https://github.com/root-project/root/pull/5193:191,security,UPDAT,UPDATE,191,"[DF] Throw if Snapshot's output TTree is already present in output file; ...and add RSnapshotOptions::fOverwriteIfExists to give users the chance. to still write a TTree to a TFile opened in UPDATE mode, even if a TTree. with the same name is already present in the file, at the cost of deleting. the previous TTree from the file. This fixes ROOT-10573. ~~EDIT: still missing a test for `fOverwriteIfExists`, coming soon~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5193
https://github.com/root-project/root/pull/5193:378,testability,test,test,378,"[DF] Throw if Snapshot's output TTree is already present in output file; ...and add RSnapshotOptions::fOverwriteIfExists to give users the chance. to still write a TTree to a TFile opened in UPDATE mode, even if a TTree. with the same name is already present in the file, at the cost of deleting. the previous TTree from the file. This fixes ROOT-10573. ~~EDIT: still missing a test for `fOverwriteIfExists`, coming soon~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5193
https://github.com/root-project/root/pull/5193:129,usability,user,users,129,"[DF] Throw if Snapshot's output TTree is already present in output file; ...and add RSnapshotOptions::fOverwriteIfExists to give users the chance. to still write a TTree to a TFile opened in UPDATE mode, even if a TTree. with the same name is already present in the file, at the cost of deleting. the previous TTree from the file. This fixes ROOT-10573. ~~EDIT: still missing a test for `fOverwriteIfExists`, coming soon~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5193
https://github.com/root-project/root/pull/5196:12,energy efficiency,Reduc,Reduce,12,[rootcling] Reduce code duplication and make includes more explicit.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5196
https://github.com/root-project/root/pull/5197:5,safety,Prevent,Prevent,5,"[RF] Prevent access into empty vector in ConfidenceBelt.; When not setting CreateConfBelt() for FeldmanCousins or. NeymanConstruction, GetConfidenceBelt() returns nullptr instead of a. broken belt. The documentation also reflects this now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5197
https://github.com/root-project/root/pull/5197:5,security,Preven,Prevent,5,"[RF] Prevent access into empty vector in ConfidenceBelt.; When not setting CreateConfBelt() for FeldmanCousins or. NeymanConstruction, GetConfidenceBelt() returns nullptr instead of a. broken belt. The documentation also reflects this now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5197
https://github.com/root-project/root/pull/5197:13,security,access,access,13,"[RF] Prevent access into empty vector in ConfidenceBelt.; When not setting CreateConfBelt() for FeldmanCousins or. NeymanConstruction, GetConfidenceBelt() returns nullptr instead of a. broken belt. The documentation also reflects this now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5197
https://github.com/root-project/root/pull/5197:202,usability,document,documentation,202,"[RF] Prevent access into empty vector in ConfidenceBelt.; When not setting CreateConfBelt() for FeldmanCousins or. NeymanConstruction, GetConfidenceBelt() returns nullptr instead of a. broken belt. The documentation also reflects this now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5197
https://github.com/root-project/root/pull/5198:12,usability,document,documentation,12,Improve the documentation for the `W` and `EX0` fit option; As suggested in https://root-forum.cern.ch/t/fitting-tgraphasymerrors-difference-between-w-and-ex0/38522,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5198
https://github.com/root-project/root/pull/5200:0,deployability,updat,update,0,update ROOT --help; update -a and -l options,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5200
https://github.com/root-project/root/pull/5200:20,deployability,updat,update,20,update ROOT --help; update -a and -l options,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5200
https://github.com/root-project/root/pull/5200:0,safety,updat,update,0,update ROOT --help; update -a and -l options,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5200
https://github.com/root-project/root/pull/5200:20,safety,updat,update,20,update ROOT --help; update -a and -l options,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5200
https://github.com/root-project/root/pull/5200:0,security,updat,update,0,update ROOT --help; update -a and -l options,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5200
https://github.com/root-project/root/pull/5200:20,security,updat,update,20,update ROOT --help; update -a and -l options,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5200
https://github.com/root-project/root/pull/5200:14,usability,help,help,14,update ROOT --help; update -a and -l options,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5200
https://github.com/root-project/root/pull/5201:86,deployability,build,build,86,Don't use `win_broken_tests` to change compiler flags [skip-ci]; otherwise it doesn't build at all (the compilation fails),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5201
https://github.com/root-project/root/pull/5201:116,deployability,fail,fails,116,Don't use `win_broken_tests` to change compiler flags [skip-ci]; otherwise it doesn't build at all (the compilation fails),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5201
https://github.com/root-project/root/pull/5201:78,reliability,doe,doesn,78,Don't use `win_broken_tests` to change compiler flags [skip-ci]; otherwise it doesn't build at all (the compilation fails),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5201
https://github.com/root-project/root/pull/5201:116,reliability,fail,fails,116,Don't use `win_broken_tests` to change compiler flags [skip-ci]; otherwise it doesn't build at all (the compilation fails),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5201
https://github.com/root-project/root/pull/5202:52,performance,time,times,52,"[RF] Fix plotting when running ranged fits multiple times.; [ROOT-10550] When a ranged fit is repeated, RooAbsOptTestStatistic would. attach the fit range to the PDF for each iteration. This makes the fit. range string grow with every iteration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5202
https://github.com/root-project/root/pull/5204:78,availability,failur,failure,78,you can now select how MAKEEXE is building the test executable in cas…; …e of failure. This is a follow up of f52497607d370f688e93df316da41af9ed1ff297 and a fix for ROOT-10632,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5204
https://github.com/root-project/root/pull/5204:34,deployability,build,building,34,you can now select how MAKEEXE is building the test executable in cas…; …e of failure. This is a follow up of f52497607d370f688e93df316da41af9ed1ff297 and a fix for ROOT-10632,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5204
https://github.com/root-project/root/pull/5204:78,deployability,fail,failure,78,you can now select how MAKEEXE is building the test executable in cas…; …e of failure. This is a follow up of f52497607d370f688e93df316da41af9ed1ff297 and a fix for ROOT-10632,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5204
https://github.com/root-project/root/pull/5204:78,performance,failur,failure,78,you can now select how MAKEEXE is building the test executable in cas…; …e of failure. This is a follow up of f52497607d370f688e93df316da41af9ed1ff297 and a fix for ROOT-10632,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5204
https://github.com/root-project/root/pull/5204:78,reliability,fail,failure,78,you can now select how MAKEEXE is building the test executable in cas…; …e of failure. This is a follow up of f52497607d370f688e93df316da41af9ed1ff297 and a fix for ROOT-10632,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5204
https://github.com/root-project/root/pull/5204:47,safety,test,test,47,you can now select how MAKEEXE is building the test executable in cas…; …e of failure. This is a follow up of f52497607d370f688e93df316da41af9ed1ff297 and a fix for ROOT-10632,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5204
https://github.com/root-project/root/pull/5204:47,testability,test,test,47,you can now select how MAKEEXE is building the test executable in cas…; …e of failure. This is a follow up of f52497607d370f688e93df316da41af9ed1ff297 and a fix for ROOT-10632,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5204
https://github.com/root-project/root/pull/5205:0,deployability,Updat,Update,0,Update help; Modify option -l and add option -a in the --help list.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5205
https://github.com/root-project/root/pull/5205:0,safety,Updat,Update,0,Update help; Modify option -l and add option -a in the --help list.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5205
https://github.com/root-project/root/pull/5205:0,security,Updat,Update,0,Update help; Modify option -l and add option -a in the --help list.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5205
https://github.com/root-project/root/pull/5205:13,security,Modif,Modify,13,Update help; Modify option -l and add option -a in the --help list.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5205
https://github.com/root-project/root/pull/5205:7,usability,help,help,7,Update help; Modify option -l and add option -a in the --help list.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5205
https://github.com/root-project/root/pull/5205:57,usability,help,help,57,Update help; Modify option -l and add option -a in the --help list.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5205
https://github.com/root-project/root/pull/5206:0,deployability,Updat,Update,0,Update --help option; Add option -a and modify -l option in --help list,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5206
https://github.com/root-project/root/pull/5206:0,safety,Updat,Update,0,Update --help option; Add option -a and modify -l option in --help list,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5206
https://github.com/root-project/root/pull/5206:0,security,Updat,Update,0,Update --help option; Add option -a and modify -l option in --help list,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5206
https://github.com/root-project/root/pull/5206:40,security,modif,modify,40,Update --help option; Add option -a and modify -l option in --help list,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5206
https://github.com/root-project/root/pull/5206:9,usability,help,help,9,Update --help option; Add option -a and modify -l option in --help list,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5206
https://github.com/root-project/root/pull/5206:62,usability,help,help,62,Update --help option; Add option -a and modify -l option in --help list,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5206
https://github.com/root-project/root/pull/5207:33,availability,error,error,33,[DF] Throw instead of logging an error if a file or tree is unreadable; This fixes ROOT-10549.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5207
https://github.com/root-project/root/pull/5207:22,deployability,log,logging,22,[DF] Throw instead of logging an error if a file or tree is unreadable; This fixes ROOT-10549.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5207
https://github.com/root-project/root/pull/5207:33,performance,error,error,33,[DF] Throw instead of logging an error if a file or tree is unreadable; This fixes ROOT-10549.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5207
https://github.com/root-project/root/pull/5207:22,safety,log,logging,22,[DF] Throw instead of logging an error if a file or tree is unreadable; This fixes ROOT-10549.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5207
https://github.com/root-project/root/pull/5207:33,safety,error,error,33,[DF] Throw instead of logging an error if a file or tree is unreadable; This fixes ROOT-10549.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5207
https://github.com/root-project/root/pull/5207:22,security,log,logging,22,[DF] Throw instead of logging an error if a file or tree is unreadable; This fixes ROOT-10549.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5207
https://github.com/root-project/root/pull/5207:22,testability,log,logging,22,[DF] Throw instead of logging an error if a file or tree is unreadable; This fixes ROOT-10549.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5207
https://github.com/root-project/root/pull/5207:33,usability,error,error,33,[DF] Throw instead of logging an error if a file or tree is unreadable; This fixes ROOT-10549.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5207
https://github.com/root-project/root/pull/5208:5,availability,Sli,Slightly,5,[DF] Slightly reduce Define jitting times;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5208
https://github.com/root-project/root/pull/5208:14,energy efficiency,reduc,reduce,14,[DF] Slightly reduce Define jitting times;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5208
https://github.com/root-project/root/pull/5208:36,performance,time,times,36,[DF] Slightly reduce Define jitting times;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5208
https://github.com/root-project/root/pull/5208:5,reliability,Sli,Slightly,5,[DF] Slightly reduce Define jitting times;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5208
https://github.com/root-project/root/pull/5209:50,energy efficiency,draw,drawings,50,"[notebook] add custom colors and gStyle in JSROOT drawings [ROOT-10624][skip-ci]; When custom colors created in ROOT (in most cases - due to custom. palette), list of custom colors will be temporary inserted into canvas. list of primitives. Also current palette will be placed there. And gStyle object inserted into list of primitives - it has defaults. which can affect produced JSROOT output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5209
https://github.com/root-project/root/pull/5209:246,energy efficiency,current,current,246,"[notebook] add custom colors and gStyle in JSROOT drawings [ROOT-10624][skip-ci]; When custom colors created in ROOT (in most cases - due to custom. palette), list of custom colors will be temporary inserted into canvas. list of primitives. Also current palette will be placed there. And gStyle object inserted into list of primitives - it has defaults. which can affect produced JSROOT output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5209
https://github.com/root-project/root/pull/5209:15,usability,custom,custom,15,"[notebook] add custom colors and gStyle in JSROOT drawings [ROOT-10624][skip-ci]; When custom colors created in ROOT (in most cases - due to custom. palette), list of custom colors will be temporary inserted into canvas. list of primitives. Also current palette will be placed there. And gStyle object inserted into list of primitives - it has defaults. which can affect produced JSROOT output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5209
https://github.com/root-project/root/pull/5209:87,usability,custom,custom,87,"[notebook] add custom colors and gStyle in JSROOT drawings [ROOT-10624][skip-ci]; When custom colors created in ROOT (in most cases - due to custom. palette), list of custom colors will be temporary inserted into canvas. list of primitives. Also current palette will be placed there. And gStyle object inserted into list of primitives - it has defaults. which can affect produced JSROOT output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5209
https://github.com/root-project/root/pull/5209:141,usability,custom,custom,141,"[notebook] add custom colors and gStyle in JSROOT drawings [ROOT-10624][skip-ci]; When custom colors created in ROOT (in most cases - due to custom. palette), list of custom colors will be temporary inserted into canvas. list of primitives. Also current palette will be placed there. And gStyle object inserted into list of primitives - it has defaults. which can affect produced JSROOT output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5209
https://github.com/root-project/root/pull/5209:167,usability,custom,custom,167,"[notebook] add custom colors and gStyle in JSROOT drawings [ROOT-10624][skip-ci]; When custom colors created in ROOT (in most cases - due to custom. palette), list of custom colors will be temporary inserted into canvas. list of primitives. Also current palette will be placed there. And gStyle object inserted into list of primitives - it has defaults. which can affect produced JSROOT output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5209
https://github.com/root-project/root/pull/5210:12,deployability,depend,dependency,12,"add GLEW as dependency for FTGL, v 6.20 [ROOT-10631];",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5210
https://github.com/root-project/root/pull/5210:12,integrability,depend,dependency,12,"add GLEW as dependency for FTGL, v 6.20 [ROOT-10631];",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5210
https://github.com/root-project/root/pull/5210:12,modifiability,depend,dependency,12,"add GLEW as dependency for FTGL, v 6.20 [ROOT-10631];",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5210
https://github.com/root-project/root/pull/5210:12,safety,depend,dependency,12,"add GLEW as dependency for FTGL, v 6.20 [ROOT-10631];",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5210
https://github.com/root-project/root/pull/5210:12,testability,depend,dependency,12,"add GLEW as dependency for FTGL, v 6.20 [ROOT-10631];",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5210
https://github.com/root-project/root/pull/5211:78,deployability,depend,dependency,78,[rootcling] Remove unused information from the rdict files.; rootcling writes dependency information which is never read/used when loading the rdict file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5211
https://github.com/root-project/root/pull/5211:131,energy efficiency,load,loading,131,[rootcling] Remove unused information from the rdict files.; rootcling writes dependency information which is never read/used when loading the rdict file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5211
https://github.com/root-project/root/pull/5211:78,integrability,depend,dependency,78,[rootcling] Remove unused information from the rdict files.; rootcling writes dependency information which is never read/used when loading the rdict file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5211
https://github.com/root-project/root/pull/5211:78,modifiability,depend,dependency,78,[rootcling] Remove unused information from the rdict files.; rootcling writes dependency information which is never read/used when loading the rdict file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5211
https://github.com/root-project/root/pull/5211:131,performance,load,loading,131,[rootcling] Remove unused information from the rdict files.; rootcling writes dependency information which is never read/used when loading the rdict file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5211
https://github.com/root-project/root/pull/5211:78,safety,depend,dependency,78,[rootcling] Remove unused information from the rdict files.; rootcling writes dependency information which is never read/used when loading the rdict file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5211
https://github.com/root-project/root/pull/5211:78,testability,depend,dependency,78,[rootcling] Remove unused information from the rdict files.; rootcling writes dependency information which is never read/used when loading the rdict file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5211
https://github.com/root-project/root/pull/5212:45,availability,error,error,45,[Tree] Mention branch name in TBranchElement error message;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5212
https://github.com/root-project/root/pull/5212:51,integrability,messag,message,51,[Tree] Mention branch name in TBranchElement error message;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5212
https://github.com/root-project/root/pull/5212:51,interoperability,messag,message,51,[Tree] Mention branch name in TBranchElement error message;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5212
https://github.com/root-project/root/pull/5212:45,performance,error,error,45,[Tree] Mention branch name in TBranchElement error message;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5212
https://github.com/root-project/root/pull/5212:45,safety,error,error,45,[Tree] Mention branch name in TBranchElement error message;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5212
https://github.com/root-project/root/pull/5212:45,usability,error,error,45,[Tree] Mention branch name in TBranchElement error message;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5212
https://github.com/root-project/root/pull/5213:134,deployability,updat,update,134,"[RF] Cleanups in RooFit and Preparation for Modernisation of category classes; This is a collection of commits that are preparing the update of category functions. Since this is a very heavy change, it's better to first merge the preparation works here. So, here we have:. - Improvements of docs, especially to group legacy interfaces into dedicated legacy groups. - Cleanups, such as removing unnecessary overrides, dead files. - Introduce small feature to batch data storage such that batch data from function calls like `getVal()` doesn't get overwritten by a subsequent call to `getLogVal()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5213
https://github.com/root-project/root/pull/5213:324,integrability,interfac,interfaces,324,"[RF] Cleanups in RooFit and Preparation for Modernisation of category classes; This is a collection of commits that are preparing the update of category functions. Since this is a very heavy change, it's better to first merge the preparation works here. So, here we have:. - Improvements of docs, especially to group legacy interfaces into dedicated legacy groups. - Cleanups, such as removing unnecessary overrides, dead files. - Introduce small feature to batch data storage such that batch data from function calls like `getVal()` doesn't get overwritten by a subsequent call to `getLogVal()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5213
https://github.com/root-project/root/pull/5213:458,integrability,batch,batch,458,"[RF] Cleanups in RooFit and Preparation for Modernisation of category classes; This is a collection of commits that are preparing the update of category functions. Since this is a very heavy change, it's better to first merge the preparation works here. So, here we have:. - Improvements of docs, especially to group legacy interfaces into dedicated legacy groups. - Cleanups, such as removing unnecessary overrides, dead files. - Introduce small feature to batch data storage such that batch data from function calls like `getVal()` doesn't get overwritten by a subsequent call to `getLogVal()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5213
https://github.com/root-project/root/pull/5213:487,integrability,batch,batch,487,"[RF] Cleanups in RooFit and Preparation for Modernisation of category classes; This is a collection of commits that are preparing the update of category functions. Since this is a very heavy change, it's better to first merge the preparation works here. So, here we have:. - Improvements of docs, especially to group legacy interfaces into dedicated legacy groups. - Cleanups, such as removing unnecessary overrides, dead files. - Introduce small feature to batch data storage such that batch data from function calls like `getVal()` doesn't get overwritten by a subsequent call to `getLogVal()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5213
https://github.com/root-project/root/pull/5213:563,integrability,sub,subsequent,563,"[RF] Cleanups in RooFit and Preparation for Modernisation of category classes; This is a collection of commits that are preparing the update of category functions. Since this is a very heavy change, it's better to first merge the preparation works here. So, here we have:. - Improvements of docs, especially to group legacy interfaces into dedicated legacy groups. - Cleanups, such as removing unnecessary overrides, dead files. - Introduce small feature to batch data storage such that batch data from function calls like `getVal()` doesn't get overwritten by a subsequent call to `getLogVal()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5213
https://github.com/root-project/root/pull/5213:324,interoperability,interfac,interfaces,324,"[RF] Cleanups in RooFit and Preparation for Modernisation of category classes; This is a collection of commits that are preparing the update of category functions. Since this is a very heavy change, it's better to first merge the preparation works here. So, here we have:. - Improvements of docs, especially to group legacy interfaces into dedicated legacy groups. - Cleanups, such as removing unnecessary overrides, dead files. - Introduce small feature to batch data storage such that batch data from function calls like `getVal()` doesn't get overwritten by a subsequent call to `getLogVal()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5213
https://github.com/root-project/root/pull/5213:324,modifiability,interfac,interfaces,324,"[RF] Cleanups in RooFit and Preparation for Modernisation of category classes; This is a collection of commits that are preparing the update of category functions. Since this is a very heavy change, it's better to first merge the preparation works here. So, here we have:. - Improvements of docs, especially to group legacy interfaces into dedicated legacy groups. - Cleanups, such as removing unnecessary overrides, dead files. - Introduce small feature to batch data storage such that batch data from function calls like `getVal()` doesn't get overwritten by a subsequent call to `getLogVal()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5213
https://github.com/root-project/root/pull/5213:458,performance,batch,batch,458,"[RF] Cleanups in RooFit and Preparation for Modernisation of category classes; This is a collection of commits that are preparing the update of category functions. Since this is a very heavy change, it's better to first merge the preparation works here. So, here we have:. - Improvements of docs, especially to group legacy interfaces into dedicated legacy groups. - Cleanups, such as removing unnecessary overrides, dead files. - Introduce small feature to batch data storage such that batch data from function calls like `getVal()` doesn't get overwritten by a subsequent call to `getLogVal()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5213
https://github.com/root-project/root/pull/5213:487,performance,batch,batch,487,"[RF] Cleanups in RooFit and Preparation for Modernisation of category classes; This is a collection of commits that are preparing the update of category functions. Since this is a very heavy change, it's better to first merge the preparation works here. So, here we have:. - Improvements of docs, especially to group legacy interfaces into dedicated legacy groups. - Cleanups, such as removing unnecessary overrides, dead files. - Introduce small feature to batch data storage such that batch data from function calls like `getVal()` doesn't get overwritten by a subsequent call to `getLogVal()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5213
https://github.com/root-project/root/pull/5213:534,reliability,doe,doesn,534,"[RF] Cleanups in RooFit and Preparation for Modernisation of category classes; This is a collection of commits that are preparing the update of category functions. Since this is a very heavy change, it's better to first merge the preparation works here. So, here we have:. - Improvements of docs, especially to group legacy interfaces into dedicated legacy groups. - Cleanups, such as removing unnecessary overrides, dead files. - Introduce small feature to batch data storage such that batch data from function calls like `getVal()` doesn't get overwritten by a subsequent call to `getLogVal()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5213
https://github.com/root-project/root/pull/5213:134,safety,updat,update,134,"[RF] Cleanups in RooFit and Preparation for Modernisation of category classes; This is a collection of commits that are preparing the update of category functions. Since this is a very heavy change, it's better to first merge the preparation works here. So, here we have:. - Improvements of docs, especially to group legacy interfaces into dedicated legacy groups. - Cleanups, such as removing unnecessary overrides, dead files. - Introduce small feature to batch data storage such that batch data from function calls like `getVal()` doesn't get overwritten by a subsequent call to `getLogVal()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5213
https://github.com/root-project/root/pull/5213:134,security,updat,update,134,"[RF] Cleanups in RooFit and Preparation for Modernisation of category classes; This is a collection of commits that are preparing the update of category functions. Since this is a very heavy change, it's better to first merge the preparation works here. So, here we have:. - Improvements of docs, especially to group legacy interfaces into dedicated legacy groups. - Cleanups, such as removing unnecessary overrides, dead files. - Introduce small feature to batch data storage such that batch data from function calls like `getVal()` doesn't get overwritten by a subsequent call to `getLogVal()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5213
https://github.com/root-project/root/pull/5214:30,integrability,event,event,30,"[DF] Call CleanUpTask even if event loop throws; Even if something within the event loop throws, we still need to call `CleanUpTask` to make sure `SnapshotHelperMT::FinalizeTask` gets called, to avoid teardown issues due to input and output TTrees of a Snapshot being deleted concurrently.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5214
https://github.com/root-project/root/pull/5214:78,integrability,event,event,78,"[DF] Call CleanUpTask even if event loop throws; Even if something within the event loop throws, we still need to call `CleanUpTask` to make sure `SnapshotHelperMT::FinalizeTask` gets called, to avoid teardown issues due to input and output TTrees of a Snapshot being deleted concurrently.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5214
https://github.com/root-project/root/pull/5214:276,performance,concurren,concurrently,276,"[DF] Call CleanUpTask even if event loop throws; Even if something within the event loop throws, we still need to call `CleanUpTask` to make sure `SnapshotHelperMT::FinalizeTask` gets called, to avoid teardown issues due to input and output TTrees of a Snapshot being deleted concurrently.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5214
https://github.com/root-project/root/pull/5214:195,safety,avoid,avoid,195,"[DF] Call CleanUpTask even if event loop throws; Even if something within the event loop throws, we still need to call `CleanUpTask` to make sure `SnapshotHelperMT::FinalizeTask` gets called, to avoid teardown issues due to input and output TTrees of a Snapshot being deleted concurrently.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5214
https://github.com/root-project/root/pull/5214:224,safety,input,input,224,"[DF] Call CleanUpTask even if event loop throws; Even if something within the event loop throws, we still need to call `CleanUpTask` to make sure `SnapshotHelperMT::FinalizeTask` gets called, to avoid teardown issues due to input and output TTrees of a Snapshot being deleted concurrently.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5214
https://github.com/root-project/root/pull/5214:224,usability,input,input,224,"[DF] Call CleanUpTask even if event loop throws; Even if something within the event loop throws, we still need to call `CleanUpTask` to make sure `SnapshotHelperMT::FinalizeTask` gets called, to avoid teardown issues due to input and output TTrees of a Snapshot being deleted concurrently.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5214
https://github.com/root-project/root/pull/5215:50,deployability,version,version,50,[Exp PyROOT] Use VERSION_GREATER_EQUAL for Python version in dotted s…; …tring,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5215
https://github.com/root-project/root/pull/5215:50,integrability,version,version,50,[Exp PyROOT] Use VERSION_GREATER_EQUAL for Python version in dotted s…; …tring,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5215
https://github.com/root-project/root/pull/5215:50,modifiability,version,version,50,[Exp PyROOT] Use VERSION_GREATER_EQUAL for Python version in dotted s…; …tring,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5215
https://github.com/root-project/root/pull/5216:197,safety,test,testing,197,Use std::numeric_limits<double>::epsilon for machine precision in Minuit2; This PR replace #2215 from @HDembinski as suggested by him. . There is no need to compute the precision in Minuit2. . For testing and comparison the previous code to compute the numerical precision is now put in a new function MnMachinePrecision::ComputePrecision(),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5216
https://github.com/root-project/root/pull/5216:197,testability,test,testing,197,Use std::numeric_limits<double>::epsilon for machine precision in Minuit2; This PR replace #2215 from @HDembinski as suggested by him. . There is no need to compute the precision in Minuit2. . For testing and comparison the previous code to compute the numerical precision is now put in a new function MnMachinePrecision::ComputePrecision(),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5216
https://github.com/root-project/root/pull/5217:100,deployability,build,build,100,"[CMake][Exp PyROOT] Keep PYTHON_VERSION_STRING with '.' and set DUNDE…; …R_PYTHON_VERSION_STRING to build PyROOT instead. - Keep PYTHON_VERSION_STRING as set by CMake. - Set DUNDER_PYTHON_VERSION_STRING to build PyROOT. - Remove from Cache not needed OTHER... variables. - Revert 2082d7ce. Plus fixes in parsing of libcppyy_backend library name and extension, which caused:. http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=839381",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5217
https://github.com/root-project/root/pull/5217:206,deployability,build,build,206,"[CMake][Exp PyROOT] Keep PYTHON_VERSION_STRING with '.' and set DUNDE…; …R_PYTHON_VERSION_STRING to build PyROOT instead. - Keep PYTHON_VERSION_STRING as set by CMake. - Set DUNDER_PYTHON_VERSION_STRING to build PyROOT. - Remove from Cache not needed OTHER... variables. - Revert 2082d7ce. Plus fixes in parsing of libcppyy_backend library name and extension, which caused:. http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=839381",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5217
https://github.com/root-project/root/pull/5217:420,deployability,build,buildid,420,"[CMake][Exp PyROOT] Keep PYTHON_VERSION_STRING with '.' and set DUNDE…; …R_PYTHON_VERSION_STRING to build PyROOT instead. - Keep PYTHON_VERSION_STRING as set by CMake. - Set DUNDER_PYTHON_VERSION_STRING to build PyROOT. - Remove from Cache not needed OTHER... variables. - Revert 2082d7ce. Plus fixes in parsing of libcppyy_backend library name and extension, which caused:. http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=839381",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5217
https://github.com/root-project/root/pull/5217:260,modifiability,variab,variables,260,"[CMake][Exp PyROOT] Keep PYTHON_VERSION_STRING with '.' and set DUNDE…; …R_PYTHON_VERSION_STRING to build PyROOT instead. - Keep PYTHON_VERSION_STRING as set by CMake. - Set DUNDER_PYTHON_VERSION_STRING to build PyROOT. - Remove from Cache not needed OTHER... variables. - Revert 2082d7ce. Plus fixes in parsing of libcppyy_backend library name and extension, which caused:. http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=839381",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5217
https://github.com/root-project/root/pull/5217:349,modifiability,extens,extension,349,"[CMake][Exp PyROOT] Keep PYTHON_VERSION_STRING with '.' and set DUNDE…; …R_PYTHON_VERSION_STRING to build PyROOT instead. - Keep PYTHON_VERSION_STRING as set by CMake. - Set DUNDER_PYTHON_VERSION_STRING to build PyROOT. - Remove from Cache not needed OTHER... variables. - Revert 2082d7ce. Plus fixes in parsing of libcppyy_backend library name and extension, which caused:. http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=839381",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5217
https://github.com/root-project/root/pull/5217:234,performance,Cach,Cache,234,"[CMake][Exp PyROOT] Keep PYTHON_VERSION_STRING with '.' and set DUNDE…; …R_PYTHON_VERSION_STRING to build PyROOT instead. - Keep PYTHON_VERSION_STRING as set by CMake. - Set DUNDER_PYTHON_VERSION_STRING to build PyROOT. - Remove from Cache not needed OTHER... variables. - Revert 2082d7ce. Plus fixes in parsing of libcppyy_backend library name and extension, which caused:. http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=839381",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5217
https://github.com/root-project/root/pull/5219:144,availability,state,states,144,"[RF] Modernise RooCategory; RooFit categories were using the class `RooCatType (: public TObject)`. instead of an integer to represent category states. It contains an integer. and a char[256], which can store a part of the category name. This prevents fast batch access, and increases the overhead for data storage. and data loading. From now on, categories are represented as integers. Every state index also has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:393,availability,state,state,393,"[RF] Modernise RooCategory; RooFit categories were using the class `RooCatType (: public TObject)`. instead of an integer to represent category states. It contains an integer. and a char[256], which can store a part of the category name. This prevents fast batch access, and increases the overhead for data storage. and data loading. From now on, categories are represented as integers. Every state index also has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:416,availability,state,state,416,"[RF] Modernise RooCategory; RooFit categories were using the class `RooCatType (: public TObject)`. instead of an integer to represent category states. It contains an integer. and a char[256], which can store a part of the category name. This prevents fast batch access, and increases the overhead for data storage. and data loading. From now on, categories are represented as integers. Every state index also has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:509,availability,state,state,509,"[RF] Modernise RooCategory; RooFit categories were using the class `RooCatType (: public TObject)`. instead of an integer to represent category states. It contains an integer. and a char[256], which can store a part of the category name. This prevents fast batch access, and increases the overhead for data storage. and data loading. From now on, categories are represented as integers. Every state index also has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:525,availability,state,state,525,"[RF] Modernise RooCategory; RooFit categories were using the class `RooCatType (: public TObject)`. instead of an integer to represent category states. It contains an integer. and a char[256], which can store a part of the category name. This prevents fast batch access, and increases the overhead for data storage. and data loading. From now on, categories are represented as integers. Every state index also has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:1287,availability,state,state,1287,"verhead for data storage. and data loading. From now on, categories are represented as integers. Every state index also has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSup",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:1503,availability,state,states,1503,"om state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additional functionality for. RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:1879,availability,state,states,1879,"e proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additional functionality for. RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws. - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a. map of allowed ranges. - Deprecate RooMultiCatIter, remove from dictionaries. - Remove the seemingly unused class RooMapCatEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:2338,availability,state,state,2338,"e proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additional functionality for. RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws. - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a. map of allowed ranges. - Deprecate RooMultiCatIter, remove from dictionaries. - Remove the seemingly unused class RooMapCatEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:2448,availability,state,states,2448,"e proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additional functionality for. RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws. - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a. map of allowed ranges. - Deprecate RooMultiCatIter, remove from dictionaries. - Remove the seemingly unused class RooMapCatEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:155,deployability,contain,contains,155,"[RF] Modernise RooCategory; RooFit categories were using the class `RooCatType (: public TObject)`. instead of an integer to represent category states. It contains an integer. and a char[256], which can store a part of the category name. This prevents fast batch access, and increases the overhead for data storage. and data loading. From now on, categories are represented as integers. Every state index also has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:2155,deployability,continu,continue,2155,"e proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additional functionality for. RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws. - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a. map of allowed ranges. - Deprecate RooMultiCatIter, remove from dictionaries. - Remove the seemingly unused class RooMapCatEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:325,energy efficiency,load,loading,325,"[RF] Modernise RooCategory; RooFit categories were using the class `RooCatType (: public TObject)`. instead of an integer to represent category states. It contains an integer. and a char[256], which can store a part of the category name. This prevents fast batch access, and increases the overhead for data storage. and data loading. From now on, categories are represented as integers. Every state index also has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:1382,energy efficiency,load,loading,1382," Every state index also has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:1529,energy efficiency,reduc,reduce,1529,"ame is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additional functionality for. RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws. - Deprecate ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:82,integrability,pub,public,82,"[RF] Modernise RooCategory; RooFit categories were using the class `RooCatType (: public TObject)`. instead of an integer to represent category states. It contains an integer. and a char[256], which can store a part of the category name. This prevents fast batch access, and increases the overhead for data storage. and data loading. From now on, categories are represented as integers. Every state index also has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:144,integrability,state,states,144,"[RF] Modernise RooCategory; RooFit categories were using the class `RooCatType (: public TObject)`. instead of an integer to represent category states. It contains an integer. and a char[256], which can store a part of the category name. This prevents fast batch access, and increases the overhead for data storage. and data loading. From now on, categories are represented as integers. Every state index also has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:257,integrability,batch,batch,257,"[RF] Modernise RooCategory; RooFit categories were using the class `RooCatType (: public TObject)`. instead of an integer to represent category states. It contains an integer. and a char[256], which can store a part of the category name. This prevents fast batch access, and increases the overhead for data storage. and data loading. From now on, categories are represented as integers. Every state index also has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:393,integrability,state,state,393,"[RF] Modernise RooCategory; RooFit categories were using the class `RooCatType (: public TObject)`. instead of an integer to represent category states. It contains an integer. and a char[256], which can store a part of the category name. This prevents fast batch access, and increases the overhead for data storage. and data loading. From now on, categories are represented as integers. Every state index also has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:416,integrability,state,state,416,"[RF] Modernise RooCategory; RooFit categories were using the class `RooCatType (: public TObject)`. instead of an integer to represent category states. It contains an integer. and a char[256], which can store a part of the category name. This prevents fast batch access, and increases the overhead for data storage. and data loading. From now on, categories are represented as integers. Every state index also has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:509,integrability,state,state,509,"[RF] Modernise RooCategory; RooFit categories were using the class `RooCatType (: public TObject)`. instead of an integer to represent category states. It contains an integer. and a char[256], which can store a part of the category name. This prevents fast batch access, and increases the overhead for data storage. and data loading. From now on, categories are represented as integers. Every state index also has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:525,integrability,state,state,525,"[RF] Modernise RooCategory; RooFit categories were using the class `RooCatType (: public TObject)`. instead of an integer to represent category states. It contains an integer. and a char[256], which can store a part of the category name. This prevents fast batch access, and increases the overhead for data storage. and data loading. From now on, categories are represented as integers. Every state index also has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:693,integrability,interfac,interfaces,693,"[RF] Modernise RooCategory; RooFit categories were using the class `RooCatType (: public TObject)`. instead of an integer to represent category states. It contains an integer. and a char[256], which can store a part of the category name. This prevents fast batch access, and increases the overhead for data storage. and data loading. From now on, categories are represented as integers. Every state index also has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:868,integrability,interfac,interface,868,"[RF] Modernise RooCategory; RooFit categories were using the class `RooCatType (: public TObject)`. instead of an integer to represent category states. It contains an integer. and a char[256], which can store a part of the category name. This prevents fast batch access, and increases the overhead for data storage. and data loading. From now on, categories are represented as integers. Every state index also has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:1287,integrability,state,state,1287,"verhead for data storage. and data loading. From now on, categories are represented as integers. Every state index also has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSup",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:1365,integrability,event,event,1365,"ented as integers. Every state index also has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:1407,integrability,event,event,1407,"has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additional functionality for. R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:1503,integrability,state,states,1503,"om state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additional functionality for. RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:1607,integrability,interfac,interfaces,1607," lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additional functionality for. RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws. - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a. map of allowed ranges",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:1879,integrability,state,states,1879,"e proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additional functionality for. RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws. - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a. map of allowed ranges. - Deprecate RooMultiCatIter, remove from dictionaries. - Remove the seemingly unused class RooMapCatEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:1933,integrability,interfac,interfaces,1933,"e proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additional functionality for. RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws. - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a. map of allowed ranges. - Deprecate RooMultiCatIter, remove from dictionaries. - Remove the seemingly unused class RooMapCatEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:2062,integrability,interfac,interface,2062,"e proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additional functionality for. RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws. - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a. map of allowed ranges. - Deprecate RooMultiCatIter, remove from dictionaries. - Remove the seemingly unused class RooMapCatEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:2183,integrability,interfac,interface,2183,"e proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additional functionality for. RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws. - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a. map of allowed ranges. - Deprecate RooMultiCatIter, remove from dictionaries. - Remove the seemingly unused class RooMapCatEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:2338,integrability,state,state,2338,"e proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additional functionality for. RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws. - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a. map of allowed ranges. - Deprecate RooMultiCatIter, remove from dictionaries. - Remove the seemingly unused class RooMapCatEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:2448,integrability,state,states,2448,"e proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additional functionality for. RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws. - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a. map of allowed ranges. - Deprecate RooMultiCatIter, remove from dictionaries. - Remove the seemingly unused class RooMapCatEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:2462,integrability,sub,subcategories,2462,"e proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additional functionality for. RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws. - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a. map of allowed ranges. - Deprecate RooMultiCatIter, remove from dictionaries. - Remove the seemingly unused class RooMapCatEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:693,interoperability,interfac,interfaces,693,"[RF] Modernise RooCategory; RooFit categories were using the class `RooCatType (: public TObject)`. instead of an integer to represent category states. It contains an integer. and a char[256], which can store a part of the category name. This prevents fast batch access, and increases the overhead for data storage. and data loading. From now on, categories are represented as integers. Every state index also has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:868,interoperability,interfac,interface,868,"[RF] Modernise RooCategory; RooFit categories were using the class `RooCatType (: public TObject)`. instead of an integer to represent category states. It contains an integer. and a char[256], which can store a part of the category name. This prevents fast batch access, and increases the overhead for data storage. and data loading. From now on, categories are represented as integers. Every state index also has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:909,interoperability,specif,specifically,909,"[RF] Modernise RooCategory; RooFit categories were using the class `RooCatType (: public TObject)`. instead of an integer to represent category states. It contains an integer. and a char[256], which can store a part of the category name. This prevents fast batch access, and increases the overhead for data storage. and data loading. From now on, categories are represented as integers. Every state index also has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:1607,interoperability,interfac,interfaces,1607," lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additional functionality for. RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws. - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a. map of allowed ranges",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:1933,interoperability,interfac,interfaces,1933,"e proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additional functionality for. RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws. - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a. map of allowed ranges. - Deprecate RooMultiCatIter, remove from dictionaries. - Remove the seemingly unused class RooMapCatEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:2062,interoperability,interfac,interface,2062,"e proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additional functionality for. RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws. - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a. map of allowed ranges. - Deprecate RooMultiCatIter, remove from dictionaries. - Remove the seemingly unused class RooMapCatEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:2183,interoperability,interfac,interface,2183,"e proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additional functionality for. RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws. - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a. map of allowed ranges. - Deprecate RooMultiCatIter, remove from dictionaries. - Remove the seemingly unused class RooMapCatEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:2253,interoperability,share,share,2253,"e proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additional functionality for. RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws. - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a. map of allowed ranges. - Deprecate RooMultiCatIter, remove from dictionaries. - Remove the seemingly unused class RooMapCatEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:693,modifiability,interfac,interfaces,693,"[RF] Modernise RooCategory; RooFit categories were using the class `RooCatType (: public TObject)`. instead of an integer to represent category states. It contains an integer. and a char[256], which can store a part of the category name. This prevents fast batch access, and increases the overhead for data storage. and data loading. From now on, categories are represented as integers. Every state index also has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:868,modifiability,interfac,interface,868,"[RF] Modernise RooCategory; RooFit categories were using the class `RooCatType (: public TObject)`. instead of an integer to represent category states. It contains an integer. and a char[256], which can store a part of the category name. This prevents fast batch access, and increases the overhead for data storage. and data loading. From now on, categories are represented as integers. Every state index also has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:1607,modifiability,interfac,interfaces,1607," lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additional functionality for. RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws. - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a. map of allowed ranges",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:1933,modifiability,interfac,interfaces,1933,"e proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additional functionality for. RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws. - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a. map of allowed ranges. - Deprecate RooMultiCatIter, remove from dictionaries. - Remove the seemingly unused class RooMapCatEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:2062,modifiability,interfac,interface,2062,"e proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additional functionality for. RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws. - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a. map of allowed ranges. - Deprecate RooMultiCatIter, remove from dictionaries. - Remove the seemingly unused class RooMapCatEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:2183,modifiability,interfac,interface,2183,"e proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additional functionality for. RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws. - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a. map of allowed ranges. - Deprecate RooMultiCatIter, remove from dictionaries. - Remove the seemingly unused class RooMapCatEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:257,performance,batch,batch,257,"[RF] Modernise RooCategory; RooFit categories were using the class `RooCatType (: public TObject)`. instead of an integer to represent category states. It contains an integer. and a char[256], which can store a part of the category name. This prevents fast batch access, and increases the overhead for data storage. and data loading. From now on, categories are represented as integers. Every state index also has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:289,performance,overhead,overhead,289,"[RF] Modernise RooCategory; RooFit categories were using the class `RooCatType (: public TObject)`. instead of an integer to represent category states. It contains an integer. and a char[256], which can store a part of the category name. This prevents fast batch access, and increases the overhead for data storage. and data loading. From now on, categories are represented as integers. Every state index also has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:325,performance,load,loading,325,"[RF] Modernise RooCategory; RooFit categories were using the class `RooCatType (: public TObject)`. instead of an integer to represent category states. It contains an integer. and a char[256], which can store a part of the category name. This prevents fast batch access, and increases the overhead for data storage. and data loading. From now on, categories are represented as integers. Every state index also has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:1382,performance,load,loading,1382," Every state index also has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:243,safety,prevent,prevents,243,"[RF] Modernise RooCategory; RooFit categories were using the class `RooCatType (: public TObject)`. instead of an integer to represent category states. It contains an integer. and a char[256], which can store a part of the category name. This prevents fast batch access, and increases the overhead for data storage. and data loading. From now on, categories are represented as integers. Every state index also has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:579,safety,review,reviewers,579,"[RF] Modernise RooCategory; RooFit categories were using the class `RooCatType (: public TObject)`. instead of an integer to represent category states. It contains an integer. and a char[256], which can store a part of the category name. This prevents fast batch access, and increases the overhead for data storage. and data loading. From now on, categories are represented as integers. Every state index also has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:1663,safety,Prevent,Prevent,1663," classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additional functionality for. RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws. - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a. map of allowed ranges. - Deprecate RooMultiCatIter, remove from dictionaries",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:1811,safety,input,input,1811,"e proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additional functionality for. RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws. - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a. map of allowed ranges. - Deprecate RooMultiCatIter, remove from dictionaries. - Remove the seemingly unused class RooMapCatEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:243,security,preven,prevents,243,"[RF] Modernise RooCategory; RooFit categories were using the class `RooCatType (: public TObject)`. instead of an integer to represent category states. It contains an integer. and a char[256], which can store a part of the category name. This prevents fast batch access, and increases the overhead for data storage. and data loading. From now on, categories are represented as integers. Every state index also has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:263,security,access,access,263,"[RF] Modernise RooCategory; RooFit categories were using the class `RooCatType (: public TObject)`. instead of an integer to represent category states. It contains an integer. and a char[256], which can store a part of the category name. This prevents fast batch access, and increases the overhead for data storage. and data loading. From now on, categories are represented as integers. Every state index also has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:1663,security,Preven,Prevent,1663," classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additional functionality for. RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws. - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a. map of allowed ranges. - Deprecate RooMultiCatIter, remove from dictionaries",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:1944,security,expos,exposing,1944,"e proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additional functionality for. RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws. - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a. map of allowed ranges. - Deprecate RooMultiCatIter, remove from dictionaries. - Remove the seemingly unused class RooMapCatEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:579,testability,review,reviewers,579,"[RF] Modernise RooCategory; RooFit categories were using the class `RooCatType (: public TObject)`. instead of an integer to represent category states. It contains an integer. and a char[256], which can store a part of the category name. This prevents fast batch access, and increases the overhead for data storage. and data loading. From now on, categories are represented as integers. Every state index also has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:2499,testability,assert,assert,2499,"e proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additional functionality for. RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws. - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a. map of allowed ranges. - Deprecate RooMultiCatIter, remove from dictionaries. - Remove the seemingly unused class RooMapCatEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:681,usability,user,user-facing,681,"[RF] Modernise RooCategory; RooFit categories were using the class `RooCatType (: public TObject)`. instead of an integer to represent category states. It contains an integer. and a char[256], which can store a part of the category name. This prevents fast batch access, and increases the overhead for data storage. and data loading. From now on, categories are represented as integers. Every state index also has a state name attached, but instead of storing. it in each row of the dataset, the mapping from state index to. state name is now stored in the category class. **For reviewers**:. Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:1671,usability,clear,clearing,1671,". The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additional functionality for. RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws. - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a. map of allowed ranges. - Deprecate RooMultiCatIter, remove from dictionaries. - Remo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:1811,usability,input,input,1811,"e proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additional functionality for. RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws. - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a. map of allowed ranges. - Deprecate RooMultiCatIter, remove from dictionaries. - Remove the seemingly unused class RooMapCatEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:1992,usability,Stop,Stop,1992,"e proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additional functionality for. RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws. - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a. map of allowed ranges. - Deprecate RooMultiCatIter, remove from dictionaries. - Remove the seemingly unused class RooMapCatEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:2149,usability,user,users,2149,"e proven by the fact that all the rest of RooFit still compiles, and that tutorials run). This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:. https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:. - Replace RooCatType by an integer. - Replace names saved in each instance of RooCatType by a map in. RooAbsCategory that maps state numbers to strings. This saves 64 bytes. + the size of TObject for each event, and makes loading strings in each. event unnecessary. - Convert RooVectorDataStore from saving RooCatType to integers of. category states. - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since. derived category classes might need to recompute their shapes if one. of their input categories change. - Add function to define multiple category states at once with. initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen. - Stop including RooCatType when R__LESS_INCLUDES is set. - Flag legacy interface with R__SUGGEST_ALTERNATIVE. - Create RooCatType instances on-demand in case users continue to use. the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost. all the code, so RooSuperCategory will now use a RooMultiCategory for. state definition and retrieval. The only additional functionality for. RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws. - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a. map of allowed ranges. - Deprecate RooMultiCatIter, remove from dictionaries. - Remove the seemingly unused class RooMapCatEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5220:36,modifiability,variab,variables,36,"[CMAKE] Make CXX_FLAGS on Mac cache variables.; On linux, the compiler flags are cache variables, i.e. they can be. overridden by the user. On Mac, that wasn't the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5220
https://github.com/root-project/root/pull/5220:87,modifiability,variab,variables,87,"[CMAKE] Make CXX_FLAGS on Mac cache variables.; On linux, the compiler flags are cache variables, i.e. they can be. overridden by the user. On Mac, that wasn't the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5220
https://github.com/root-project/root/pull/5220:30,performance,cach,cache,30,"[CMAKE] Make CXX_FLAGS on Mac cache variables.; On linux, the compiler flags are cache variables, i.e. they can be. overridden by the user. On Mac, that wasn't the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5220
https://github.com/root-project/root/pull/5220:81,performance,cach,cache,81,"[CMAKE] Make CXX_FLAGS on Mac cache variables.; On linux, the compiler flags are cache variables, i.e. they can be. overridden by the user. On Mac, that wasn't the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5220
https://github.com/root-project/root/pull/5220:134,usability,user,user,134,"[CMAKE] Make CXX_FLAGS on Mac cache variables.; On linux, the compiler flags are cache variables, i.e. they can be. overridden by the user. On Mac, that wasn't the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5220
https://github.com/root-project/root/pull/5221:0,deployability,updat,update,0,"update df103*.py; When generating the reference guide tutorial pages the doxygen ROOT filter invokes the Python script `makeimage.py` to generate the pictures produce by the tutorials. This Python script relies on the fact the canvases produced by the tutorial (Python ones) are still in memory after execution. They are retrieved with `ROOT.gROOT.GetListOfCanvases()` . . In the case of most `df*.py` examples it works fine: the later command gives the list of canvases. But with `df103_NanoAODHiggsAnalysis.py` it gives an empty list of canvases because the canvases are created in a sub-function called `plot`. Python does some memory clean up at the end of `plot` and delete the canvas in memory. Adding `ROOT.SetOwnership(d, False)` allows to keep the canvases alive in the list of canvases after the macro execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5221
https://github.com/root-project/root/pull/5221:86,integrability,filter,filter,86,"update df103*.py; When generating the reference guide tutorial pages the doxygen ROOT filter invokes the Python script `makeimage.py` to generate the pictures produce by the tutorials. This Python script relies on the fact the canvases produced by the tutorial (Python ones) are still in memory after execution. They are retrieved with `ROOT.gROOT.GetListOfCanvases()` . . In the case of most `df*.py` examples it works fine: the later command gives the list of canvases. But with `df103_NanoAODHiggsAnalysis.py` it gives an empty list of canvases because the canvases are created in a sub-function called `plot`. Python does some memory clean up at the end of `plot` and delete the canvas in memory. Adding `ROOT.SetOwnership(d, False)` allows to keep the canvases alive in the list of canvases after the macro execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5221
https://github.com/root-project/root/pull/5221:586,integrability,sub,sub-function,586,"update df103*.py; When generating the reference guide tutorial pages the doxygen ROOT filter invokes the Python script `makeimage.py` to generate the pictures produce by the tutorials. This Python script relies on the fact the canvases produced by the tutorial (Python ones) are still in memory after execution. They are retrieved with `ROOT.gROOT.GetListOfCanvases()` . . In the case of most `df*.py` examples it works fine: the later command gives the list of canvases. But with `df103_NanoAODHiggsAnalysis.py` it gives an empty list of canvases because the canvases are created in a sub-function called `plot`. Python does some memory clean up at the end of `plot` and delete the canvas in memory. Adding `ROOT.SetOwnership(d, False)` allows to keep the canvases alive in the list of canvases after the macro execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5221
https://github.com/root-project/root/pull/5221:288,performance,memor,memory,288,"update df103*.py; When generating the reference guide tutorial pages the doxygen ROOT filter invokes the Python script `makeimage.py` to generate the pictures produce by the tutorials. This Python script relies on the fact the canvases produced by the tutorial (Python ones) are still in memory after execution. They are retrieved with `ROOT.gROOT.GetListOfCanvases()` . . In the case of most `df*.py` examples it works fine: the later command gives the list of canvases. But with `df103_NanoAODHiggsAnalysis.py` it gives an empty list of canvases because the canvases are created in a sub-function called `plot`. Python does some memory clean up at the end of `plot` and delete the canvas in memory. Adding `ROOT.SetOwnership(d, False)` allows to keep the canvases alive in the list of canvases after the macro execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5221
https://github.com/root-project/root/pull/5221:631,performance,memor,memory,631,"update df103*.py; When generating the reference guide tutorial pages the doxygen ROOT filter invokes the Python script `makeimage.py` to generate the pictures produce by the tutorials. This Python script relies on the fact the canvases produced by the tutorial (Python ones) are still in memory after execution. They are retrieved with `ROOT.gROOT.GetListOfCanvases()` . . In the case of most `df*.py` examples it works fine: the later command gives the list of canvases. But with `df103_NanoAODHiggsAnalysis.py` it gives an empty list of canvases because the canvases are created in a sub-function called `plot`. Python does some memory clean up at the end of `plot` and delete the canvas in memory. Adding `ROOT.SetOwnership(d, False)` allows to keep the canvases alive in the list of canvases after the macro execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5221
https://github.com/root-project/root/pull/5221:693,performance,memor,memory,693,"update df103*.py; When generating the reference guide tutorial pages the doxygen ROOT filter invokes the Python script `makeimage.py` to generate the pictures produce by the tutorials. This Python script relies on the fact the canvases produced by the tutorial (Python ones) are still in memory after execution. They are retrieved with `ROOT.gROOT.GetListOfCanvases()` . . In the case of most `df*.py` examples it works fine: the later command gives the list of canvases. But with `df103_NanoAODHiggsAnalysis.py` it gives an empty list of canvases because the canvases are created in a sub-function called `plot`. Python does some memory clean up at the end of `plot` and delete the canvas in memory. Adding `ROOT.SetOwnership(d, False)` allows to keep the canvases alive in the list of canvases after the macro execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5221
https://github.com/root-project/root/pull/5221:621,reliability,doe,does,621,"update df103*.py; When generating the reference guide tutorial pages the doxygen ROOT filter invokes the Python script `makeimage.py` to generate the pictures produce by the tutorials. This Python script relies on the fact the canvases produced by the tutorial (Python ones) are still in memory after execution. They are retrieved with `ROOT.gROOT.GetListOfCanvases()` . . In the case of most `df*.py` examples it works fine: the later command gives the list of canvases. But with `df103_NanoAODHiggsAnalysis.py` it gives an empty list of canvases because the canvases are created in a sub-function called `plot`. Python does some memory clean up at the end of `plot` and delete the canvas in memory. Adding `ROOT.SetOwnership(d, False)` allows to keep the canvases alive in the list of canvases after the macro execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5221
https://github.com/root-project/root/pull/5221:0,safety,updat,update,0,"update df103*.py; When generating the reference guide tutorial pages the doxygen ROOT filter invokes the Python script `makeimage.py` to generate the pictures produce by the tutorials. This Python script relies on the fact the canvases produced by the tutorial (Python ones) are still in memory after execution. They are retrieved with `ROOT.gROOT.GetListOfCanvases()` . . In the case of most `df*.py` examples it works fine: the later command gives the list of canvases. But with `df103_NanoAODHiggsAnalysis.py` it gives an empty list of canvases because the canvases are created in a sub-function called `plot`. Python does some memory clean up at the end of `plot` and delete the canvas in memory. Adding `ROOT.SetOwnership(d, False)` allows to keep the canvases alive in the list of canvases after the macro execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5221
https://github.com/root-project/root/pull/5221:0,security,updat,update,0,"update df103*.py; When generating the reference guide tutorial pages the doxygen ROOT filter invokes the Python script `makeimage.py` to generate the pictures produce by the tutorials. This Python script relies on the fact the canvases produced by the tutorial (Python ones) are still in memory after execution. They are retrieved with `ROOT.gROOT.GetListOfCanvases()` . . In the case of most `df*.py` examples it works fine: the later command gives the list of canvases. But with `df103_NanoAODHiggsAnalysis.py` it gives an empty list of canvases because the canvases are created in a sub-function called `plot`. Python does some memory clean up at the end of `plot` and delete the canvas in memory. Adding `ROOT.SetOwnership(d, False)` allows to keep the canvases alive in the list of canvases after the macro execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5221
https://github.com/root-project/root/pull/5221:48,usability,guid,guide,48,"update df103*.py; When generating the reference guide tutorial pages the doxygen ROOT filter invokes the Python script `makeimage.py` to generate the pictures produce by the tutorials. This Python script relies on the fact the canvases produced by the tutorial (Python ones) are still in memory after execution. They are retrieved with `ROOT.gROOT.GetListOfCanvases()` . . In the case of most `df*.py` examples it works fine: the later command gives the list of canvases. But with `df103_NanoAODHiggsAnalysis.py` it gives an empty list of canvases because the canvases are created in a sub-function called `plot`. Python does some memory clean up at the end of `plot` and delete the canvas in memory. Adding `ROOT.SetOwnership(d, False)` allows to keep the canvases alive in the list of canvases after the macro execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5221
https://github.com/root-project/root/pull/5221:288,usability,memor,memory,288,"update df103*.py; When generating the reference guide tutorial pages the doxygen ROOT filter invokes the Python script `makeimage.py` to generate the pictures produce by the tutorials. This Python script relies on the fact the canvases produced by the tutorial (Python ones) are still in memory after execution. They are retrieved with `ROOT.gROOT.GetListOfCanvases()` . . In the case of most `df*.py` examples it works fine: the later command gives the list of canvases. But with `df103_NanoAODHiggsAnalysis.py` it gives an empty list of canvases because the canvases are created in a sub-function called `plot`. Python does some memory clean up at the end of `plot` and delete the canvas in memory. Adding `ROOT.SetOwnership(d, False)` allows to keep the canvases alive in the list of canvases after the macro execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5221
https://github.com/root-project/root/pull/5221:436,usability,command,command,436,"update df103*.py; When generating the reference guide tutorial pages the doxygen ROOT filter invokes the Python script `makeimage.py` to generate the pictures produce by the tutorials. This Python script relies on the fact the canvases produced by the tutorial (Python ones) are still in memory after execution. They are retrieved with `ROOT.gROOT.GetListOfCanvases()` . . In the case of most `df*.py` examples it works fine: the later command gives the list of canvases. But with `df103_NanoAODHiggsAnalysis.py` it gives an empty list of canvases because the canvases are created in a sub-function called `plot`. Python does some memory clean up at the end of `plot` and delete the canvas in memory. Adding `ROOT.SetOwnership(d, False)` allows to keep the canvases alive in the list of canvases after the macro execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5221
https://github.com/root-project/root/pull/5221:631,usability,memor,memory,631,"update df103*.py; When generating the reference guide tutorial pages the doxygen ROOT filter invokes the Python script `makeimage.py` to generate the pictures produce by the tutorials. This Python script relies on the fact the canvases produced by the tutorial (Python ones) are still in memory after execution. They are retrieved with `ROOT.gROOT.GetListOfCanvases()` . . In the case of most `df*.py` examples it works fine: the later command gives the list of canvases. But with `df103_NanoAODHiggsAnalysis.py` it gives an empty list of canvases because the canvases are created in a sub-function called `plot`. Python does some memory clean up at the end of `plot` and delete the canvas in memory. Adding `ROOT.SetOwnership(d, False)` allows to keep the canvases alive in the list of canvases after the macro execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5221
https://github.com/root-project/root/pull/5221:693,usability,memor,memory,693,"update df103*.py; When generating the reference guide tutorial pages the doxygen ROOT filter invokes the Python script `makeimage.py` to generate the pictures produce by the tutorials. This Python script relies on the fact the canvases produced by the tutorial (Python ones) are still in memory after execution. They are retrieved with `ROOT.gROOT.GetListOfCanvases()` . . In the case of most `df*.py` examples it works fine: the later command gives the list of canvases. But with `df103_NanoAODHiggsAnalysis.py` it gives an empty list of canvases because the canvases are created in a sub-function called `plot`. Python does some memory clean up at the end of `plot` and delete the canvas in memory. Adding `ROOT.SetOwnership(d, False)` allows to keep the canvases alive in the list of canvases after the macro execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5221
https://github.com/root-project/root/pull/5222:60,availability,error,error,60,"Fix ACLiC on Windows (taken from master); Fix the following error with ACLiC:. input_line_12:8:38: error: use of undeclared identifier 'IC'. ""C:/Users/bellenot/build/debug/etc"" -IC:/Users/bellenot/build/debug/etc//cling -IC:/Users/bellenot/build/debug/include"""",. ^. Error in <ACLiC>: Dictionary generation failed!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5222
https://github.com/root-project/root/pull/5222:99,availability,error,error,99,"Fix ACLiC on Windows (taken from master); Fix the following error with ACLiC:. input_line_12:8:38: error: use of undeclared identifier 'IC'. ""C:/Users/bellenot/build/debug/etc"" -IC:/Users/bellenot/build/debug/etc//cling -IC:/Users/bellenot/build/debug/include"""",. ^. Error in <ACLiC>: Dictionary generation failed!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5222
https://github.com/root-project/root/pull/5222:267,availability,Error,Error,267,"Fix ACLiC on Windows (taken from master); Fix the following error with ACLiC:. input_line_12:8:38: error: use of undeclared identifier 'IC'. ""C:/Users/bellenot/build/debug/etc"" -IC:/Users/bellenot/build/debug/etc//cling -IC:/Users/bellenot/build/debug/include"""",. ^. Error in <ACLiC>: Dictionary generation failed!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5222
https://github.com/root-project/root/pull/5222:160,deployability,build,build,160,"Fix ACLiC on Windows (taken from master); Fix the following error with ACLiC:. input_line_12:8:38: error: use of undeclared identifier 'IC'. ""C:/Users/bellenot/build/debug/etc"" -IC:/Users/bellenot/build/debug/etc//cling -IC:/Users/bellenot/build/debug/include"""",. ^. Error in <ACLiC>: Dictionary generation failed!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5222
https://github.com/root-project/root/pull/5222:197,deployability,build,build,197,"Fix ACLiC on Windows (taken from master); Fix the following error with ACLiC:. input_line_12:8:38: error: use of undeclared identifier 'IC'. ""C:/Users/bellenot/build/debug/etc"" -IC:/Users/bellenot/build/debug/etc//cling -IC:/Users/bellenot/build/debug/include"""",. ^. Error in <ACLiC>: Dictionary generation failed!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5222
https://github.com/root-project/root/pull/5222:240,deployability,build,build,240,"Fix ACLiC on Windows (taken from master); Fix the following error with ACLiC:. input_line_12:8:38: error: use of undeclared identifier 'IC'. ""C:/Users/bellenot/build/debug/etc"" -IC:/Users/bellenot/build/debug/etc//cling -IC:/Users/bellenot/build/debug/include"""",. ^. Error in <ACLiC>: Dictionary generation failed!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5222
https://github.com/root-project/root/pull/5222:307,deployability,fail,failed,307,"Fix ACLiC on Windows (taken from master); Fix the following error with ACLiC:. input_line_12:8:38: error: use of undeclared identifier 'IC'. ""C:/Users/bellenot/build/debug/etc"" -IC:/Users/bellenot/build/debug/etc//cling -IC:/Users/bellenot/build/debug/include"""",. ^. Error in <ACLiC>: Dictionary generation failed!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5222
https://github.com/root-project/root/pull/5222:60,performance,error,error,60,"Fix ACLiC on Windows (taken from master); Fix the following error with ACLiC:. input_line_12:8:38: error: use of undeclared identifier 'IC'. ""C:/Users/bellenot/build/debug/etc"" -IC:/Users/bellenot/build/debug/etc//cling -IC:/Users/bellenot/build/debug/include"""",. ^. Error in <ACLiC>: Dictionary generation failed!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5222
https://github.com/root-project/root/pull/5222:99,performance,error,error,99,"Fix ACLiC on Windows (taken from master); Fix the following error with ACLiC:. input_line_12:8:38: error: use of undeclared identifier 'IC'. ""C:/Users/bellenot/build/debug/etc"" -IC:/Users/bellenot/build/debug/etc//cling -IC:/Users/bellenot/build/debug/include"""",. ^. Error in <ACLiC>: Dictionary generation failed!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5222
https://github.com/root-project/root/pull/5222:267,performance,Error,Error,267,"Fix ACLiC on Windows (taken from master); Fix the following error with ACLiC:. input_line_12:8:38: error: use of undeclared identifier 'IC'. ""C:/Users/bellenot/build/debug/etc"" -IC:/Users/bellenot/build/debug/etc//cling -IC:/Users/bellenot/build/debug/include"""",. ^. Error in <ACLiC>: Dictionary generation failed!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5222
https://github.com/root-project/root/pull/5222:307,reliability,fail,failed,307,"Fix ACLiC on Windows (taken from master); Fix the following error with ACLiC:. input_line_12:8:38: error: use of undeclared identifier 'IC'. ""C:/Users/bellenot/build/debug/etc"" -IC:/Users/bellenot/build/debug/etc//cling -IC:/Users/bellenot/build/debug/include"""",. ^. Error in <ACLiC>: Dictionary generation failed!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5222
https://github.com/root-project/root/pull/5222:60,safety,error,error,60,"Fix ACLiC on Windows (taken from master); Fix the following error with ACLiC:. input_line_12:8:38: error: use of undeclared identifier 'IC'. ""C:/Users/bellenot/build/debug/etc"" -IC:/Users/bellenot/build/debug/etc//cling -IC:/Users/bellenot/build/debug/include"""",. ^. Error in <ACLiC>: Dictionary generation failed!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5222
https://github.com/root-project/root/pull/5222:99,safety,error,error,99,"Fix ACLiC on Windows (taken from master); Fix the following error with ACLiC:. input_line_12:8:38: error: use of undeclared identifier 'IC'. ""C:/Users/bellenot/build/debug/etc"" -IC:/Users/bellenot/build/debug/etc//cling -IC:/Users/bellenot/build/debug/include"""",. ^. Error in <ACLiC>: Dictionary generation failed!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5222
https://github.com/root-project/root/pull/5222:267,safety,Error,Error,267,"Fix ACLiC on Windows (taken from master); Fix the following error with ACLiC:. input_line_12:8:38: error: use of undeclared identifier 'IC'. ""C:/Users/bellenot/build/debug/etc"" -IC:/Users/bellenot/build/debug/etc//cling -IC:/Users/bellenot/build/debug/include"""",. ^. Error in <ACLiC>: Dictionary generation failed!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5222
https://github.com/root-project/root/pull/5222:124,security,ident,identifier,124,"Fix ACLiC on Windows (taken from master); Fix the following error with ACLiC:. input_line_12:8:38: error: use of undeclared identifier 'IC'. ""C:/Users/bellenot/build/debug/etc"" -IC:/Users/bellenot/build/debug/etc//cling -IC:/Users/bellenot/build/debug/include"""",. ^. Error in <ACLiC>: Dictionary generation failed!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5222
https://github.com/root-project/root/pull/5222:60,usability,error,error,60,"Fix ACLiC on Windows (taken from master); Fix the following error with ACLiC:. input_line_12:8:38: error: use of undeclared identifier 'IC'. ""C:/Users/bellenot/build/debug/etc"" -IC:/Users/bellenot/build/debug/etc//cling -IC:/Users/bellenot/build/debug/include"""",. ^. Error in <ACLiC>: Dictionary generation failed!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5222
https://github.com/root-project/root/pull/5222:99,usability,error,error,99,"Fix ACLiC on Windows (taken from master); Fix the following error with ACLiC:. input_line_12:8:38: error: use of undeclared identifier 'IC'. ""C:/Users/bellenot/build/debug/etc"" -IC:/Users/bellenot/build/debug/etc//cling -IC:/Users/bellenot/build/debug/include"""",. ^. Error in <ACLiC>: Dictionary generation failed!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5222
https://github.com/root-project/root/pull/5222:145,usability,User,Users,145,"Fix ACLiC on Windows (taken from master); Fix the following error with ACLiC:. input_line_12:8:38: error: use of undeclared identifier 'IC'. ""C:/Users/bellenot/build/debug/etc"" -IC:/Users/bellenot/build/debug/etc//cling -IC:/Users/bellenot/build/debug/include"""",. ^. Error in <ACLiC>: Dictionary generation failed!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5222
https://github.com/root-project/root/pull/5222:182,usability,User,Users,182,"Fix ACLiC on Windows (taken from master); Fix the following error with ACLiC:. input_line_12:8:38: error: use of undeclared identifier 'IC'. ""C:/Users/bellenot/build/debug/etc"" -IC:/Users/bellenot/build/debug/etc//cling -IC:/Users/bellenot/build/debug/include"""",. ^. Error in <ACLiC>: Dictionary generation failed!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5222
https://github.com/root-project/root/pull/5222:225,usability,User,Users,225,"Fix ACLiC on Windows (taken from master); Fix the following error with ACLiC:. input_line_12:8:38: error: use of undeclared identifier 'IC'. ""C:/Users/bellenot/build/debug/etc"" -IC:/Users/bellenot/build/debug/etc//cling -IC:/Users/bellenot/build/debug/include"""",. ^. Error in <ACLiC>: Dictionary generation failed!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5222
https://github.com/root-project/root/pull/5222:267,usability,Error,Error,267,"Fix ACLiC on Windows (taken from master); Fix the following error with ACLiC:. input_line_12:8:38: error: use of undeclared identifier 'IC'. ""C:/Users/bellenot/build/debug/etc"" -IC:/Users/bellenot/build/debug/etc//cling -IC:/Users/bellenot/build/debug/include"""",. ^. Error in <ACLiC>: Dictionary generation failed!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5222
https://github.com/root-project/root/pull/5224:67,deployability,automat,automatically,67,[ROOT-10636]Enable exception support in TBB; In MVSC it is enabled automatically. More about: https://software.intel.com/en-us/blogs/2014/08/28/exact-exception-propagation-in-the-intel-threading-building-blocks-library-and-c11,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5224
https://github.com/root-project/root/pull/5224:195,deployability,build,building-blocks-library-and-,195,[ROOT-10636]Enable exception support in TBB; In MVSC it is enabled automatically. More about: https://software.intel.com/en-us/blogs/2014/08/28/exact-exception-propagation-in-the-intel-threading-building-blocks-library-and-c11,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5224
https://github.com/root-project/root/pull/5224:19,safety,except,exception,19,[ROOT-10636]Enable exception support in TBB; In MVSC it is enabled automatically. More about: https://software.intel.com/en-us/blogs/2014/08/28/exact-exception-propagation-in-the-intel-threading-building-blocks-library-and-c11,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5224
https://github.com/root-project/root/pull/5224:150,safety,except,exception-propagation-in-the-intel-threading-building-blocks-library-and-,150,[ROOT-10636]Enable exception support in TBB; In MVSC it is enabled automatically. More about: https://software.intel.com/en-us/blogs/2014/08/28/exact-exception-propagation-in-the-intel-threading-building-blocks-library-and-c11,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5224
https://github.com/root-project/root/pull/5224:67,testability,automat,automatically,67,[ROOT-10636]Enable exception support in TBB; In MVSC it is enabled automatically. More about: https://software.intel.com/en-us/blogs/2014/08/28/exact-exception-propagation-in-the-intel-threading-building-blocks-library-and-c11,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5224
https://github.com/root-project/root/pull/5224:29,usability,support,support,29,[ROOT-10636]Enable exception support in TBB; In MVSC it is enabled automatically. More about: https://software.intel.com/en-us/blogs/2014/08/28/exact-exception-propagation-in-the-intel-threading-building-blocks-library-and-c11,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5224
https://github.com/root-project/root/pull/5225:120,deployability,fail,fail,120,[Exp PyROOT] Remove extra DECREF; It was making the tutorial proposed in https://github.com/root-project/root/pull/5194 fail.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5225
https://github.com/root-project/root/pull/5225:120,reliability,fail,fail,120,[Exp PyROOT] Remove extra DECREF; It was making the tutorial proposed in https://github.com/root-project/root/pull/5194 fail.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5225
https://github.com/root-project/root/pull/5226:0,deployability,Patch,Patch,0,Patch Vc to avoid warnings about macro redefinitions; See https://github.com/VcDevel/Vc/issues/247 for more information.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5226
https://github.com/root-project/root/pull/5226:0,safety,Patch,Patch,0,Patch Vc to avoid warnings about macro redefinitions; See https://github.com/VcDevel/Vc/issues/247 for more information.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5226
https://github.com/root-project/root/pull/5226:12,safety,avoid,avoid,12,Patch Vc to avoid warnings about macro redefinitions; See https://github.com/VcDevel/Vc/issues/247 for more information.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5226
https://github.com/root-project/root/pull/5226:0,security,Patch,Patch,0,Patch Vc to avoid warnings about macro redefinitions; See https://github.com/VcDevel/Vc/issues/247 for more information.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5226
https://github.com/root-project/root/pull/5227:0,deployability,Patch,Patch,0,Patch Vc to avoid warnings about macro redefinitions; See https://github.com/VcDevel/Vc/issues/247 for more information.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5227
https://github.com/root-project/root/pull/5227:0,safety,Patch,Patch,0,Patch Vc to avoid warnings about macro redefinitions; See https://github.com/VcDevel/Vc/issues/247 for more information.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5227
https://github.com/root-project/root/pull/5227:12,safety,avoid,avoid,12,Patch Vc to avoid warnings about macro redefinitions; See https://github.com/VcDevel/Vc/issues/247 for more information.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5227
https://github.com/root-project/root/pull/5227:0,security,Patch,Patch,0,Patch Vc to avoid warnings about macro redefinitions; See https://github.com/VcDevel/Vc/issues/247 for more information.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5227
https://github.com/root-project/root/pull/5228:0,deployability,Updat,Update,0,Update gtest to latest version 1.10.0; More info: https://github.com/google/googletest/releases/tag/release-1.10.0,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5228
https://github.com/root-project/root/pull/5228:23,deployability,version,version,23,Update gtest to latest version 1.10.0; More info: https://github.com/google/googletest/releases/tag/release-1.10.0,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5228
https://github.com/root-project/root/pull/5228:87,deployability,releas,releases,87,Update gtest to latest version 1.10.0; More info: https://github.com/google/googletest/releases/tag/release-1.10.0,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5228
https://github.com/root-project/root/pull/5228:100,deployability,releas,release-,100,Update gtest to latest version 1.10.0; More info: https://github.com/google/googletest/releases/tag/release-1.10.0,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5228
https://github.com/root-project/root/pull/5228:23,integrability,version,version,23,Update gtest to latest version 1.10.0; More info: https://github.com/google/googletest/releases/tag/release-1.10.0,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5228
https://github.com/root-project/root/pull/5228:23,modifiability,version,version,23,Update gtest to latest version 1.10.0; More info: https://github.com/google/googletest/releases/tag/release-1.10.0,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5228
https://github.com/root-project/root/pull/5228:0,safety,Updat,Update,0,Update gtest to latest version 1.10.0; More info: https://github.com/google/googletest/releases/tag/release-1.10.0,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5228
https://github.com/root-project/root/pull/5228:0,security,Updat,Update,0,Update gtest to latest version 1.10.0; More info: https://github.com/google/googletest/releases/tag/release-1.10.0,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5228
https://github.com/root-project/root/pull/5230:134,integrability,filter,filter,134,"[DF] Make sure df103_NanoAODHiggsAnalysis.py do not erase canvas; When generating the reference guide tutorial pages the doxygen ROOT filter invokes the Python script makeimage.py to generate the pictures produce by the tutorials. This Python script relies on the fact the canvases produced by the tutorial (Python ones) are still in memory after execution. They are retrieved with ROOT.gROOT.GetListOfCanvases() . In the case of most df*.py examples it works fine: the later command gives the list of canvases. But with df103_NanoAODHiggsAnalysis.py it gives an empty list of canvases because the canvases are created in a sub-function called plot. Python does some memory clean up at the end of plot and delete the canvas in memory. Adding ROOT.SetOwnership(d, False) allows to keep the canvases alive in the list of canvases after the macro execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5230
https://github.com/root-project/root/pull/5230:624,integrability,sub,sub-function,624,"[DF] Make sure df103_NanoAODHiggsAnalysis.py do not erase canvas; When generating the reference guide tutorial pages the doxygen ROOT filter invokes the Python script makeimage.py to generate the pictures produce by the tutorials. This Python script relies on the fact the canvases produced by the tutorial (Python ones) are still in memory after execution. They are retrieved with ROOT.gROOT.GetListOfCanvases() . In the case of most df*.py examples it works fine: the later command gives the list of canvases. But with df103_NanoAODHiggsAnalysis.py it gives an empty list of canvases because the canvases are created in a sub-function called plot. Python does some memory clean up at the end of plot and delete the canvas in memory. Adding ROOT.SetOwnership(d, False) allows to keep the canvases alive in the list of canvases after the macro execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5230
https://github.com/root-project/root/pull/5230:334,performance,memor,memory,334,"[DF] Make sure df103_NanoAODHiggsAnalysis.py do not erase canvas; When generating the reference guide tutorial pages the doxygen ROOT filter invokes the Python script makeimage.py to generate the pictures produce by the tutorials. This Python script relies on the fact the canvases produced by the tutorial (Python ones) are still in memory after execution. They are retrieved with ROOT.gROOT.GetListOfCanvases() . In the case of most df*.py examples it works fine: the later command gives the list of canvases. But with df103_NanoAODHiggsAnalysis.py it gives an empty list of canvases because the canvases are created in a sub-function called plot. Python does some memory clean up at the end of plot and delete the canvas in memory. Adding ROOT.SetOwnership(d, False) allows to keep the canvases alive in the list of canvases after the macro execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5230
https://github.com/root-project/root/pull/5230:667,performance,memor,memory,667,"[DF] Make sure df103_NanoAODHiggsAnalysis.py do not erase canvas; When generating the reference guide tutorial pages the doxygen ROOT filter invokes the Python script makeimage.py to generate the pictures produce by the tutorials. This Python script relies on the fact the canvases produced by the tutorial (Python ones) are still in memory after execution. They are retrieved with ROOT.gROOT.GetListOfCanvases() . In the case of most df*.py examples it works fine: the later command gives the list of canvases. But with df103_NanoAODHiggsAnalysis.py it gives an empty list of canvases because the canvases are created in a sub-function called plot. Python does some memory clean up at the end of plot and delete the canvas in memory. Adding ROOT.SetOwnership(d, False) allows to keep the canvases alive in the list of canvases after the macro execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5230
https://github.com/root-project/root/pull/5230:727,performance,memor,memory,727,"[DF] Make sure df103_NanoAODHiggsAnalysis.py do not erase canvas; When generating the reference guide tutorial pages the doxygen ROOT filter invokes the Python script makeimage.py to generate the pictures produce by the tutorials. This Python script relies on the fact the canvases produced by the tutorial (Python ones) are still in memory after execution. They are retrieved with ROOT.gROOT.GetListOfCanvases() . In the case of most df*.py examples it works fine: the later command gives the list of canvases. But with df103_NanoAODHiggsAnalysis.py it gives an empty list of canvases because the canvases are created in a sub-function called plot. Python does some memory clean up at the end of plot and delete the canvas in memory. Adding ROOT.SetOwnership(d, False) allows to keep the canvases alive in the list of canvases after the macro execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5230
https://github.com/root-project/root/pull/5230:657,reliability,doe,does,657,"[DF] Make sure df103_NanoAODHiggsAnalysis.py do not erase canvas; When generating the reference guide tutorial pages the doxygen ROOT filter invokes the Python script makeimage.py to generate the pictures produce by the tutorials. This Python script relies on the fact the canvases produced by the tutorial (Python ones) are still in memory after execution. They are retrieved with ROOT.gROOT.GetListOfCanvases() . In the case of most df*.py examples it works fine: the later command gives the list of canvases. But with df103_NanoAODHiggsAnalysis.py it gives an empty list of canvases because the canvases are created in a sub-function called plot. Python does some memory clean up at the end of plot and delete the canvas in memory. Adding ROOT.SetOwnership(d, False) allows to keep the canvases alive in the list of canvases after the macro execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5230
https://github.com/root-project/root/pull/5230:96,usability,guid,guide,96,"[DF] Make sure df103_NanoAODHiggsAnalysis.py do not erase canvas; When generating the reference guide tutorial pages the doxygen ROOT filter invokes the Python script makeimage.py to generate the pictures produce by the tutorials. This Python script relies on the fact the canvases produced by the tutorial (Python ones) are still in memory after execution. They are retrieved with ROOT.gROOT.GetListOfCanvases() . In the case of most df*.py examples it works fine: the later command gives the list of canvases. But with df103_NanoAODHiggsAnalysis.py it gives an empty list of canvases because the canvases are created in a sub-function called plot. Python does some memory clean up at the end of plot and delete the canvas in memory. Adding ROOT.SetOwnership(d, False) allows to keep the canvases alive in the list of canvases after the macro execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5230
https://github.com/root-project/root/pull/5230:334,usability,memor,memory,334,"[DF] Make sure df103_NanoAODHiggsAnalysis.py do not erase canvas; When generating the reference guide tutorial pages the doxygen ROOT filter invokes the Python script makeimage.py to generate the pictures produce by the tutorials. This Python script relies on the fact the canvases produced by the tutorial (Python ones) are still in memory after execution. They are retrieved with ROOT.gROOT.GetListOfCanvases() . In the case of most df*.py examples it works fine: the later command gives the list of canvases. But with df103_NanoAODHiggsAnalysis.py it gives an empty list of canvases because the canvases are created in a sub-function called plot. Python does some memory clean up at the end of plot and delete the canvas in memory. Adding ROOT.SetOwnership(d, False) allows to keep the canvases alive in the list of canvases after the macro execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5230
https://github.com/root-project/root/pull/5230:476,usability,command,command,476,"[DF] Make sure df103_NanoAODHiggsAnalysis.py do not erase canvas; When generating the reference guide tutorial pages the doxygen ROOT filter invokes the Python script makeimage.py to generate the pictures produce by the tutorials. This Python script relies on the fact the canvases produced by the tutorial (Python ones) are still in memory after execution. They are retrieved with ROOT.gROOT.GetListOfCanvases() . In the case of most df*.py examples it works fine: the later command gives the list of canvases. But with df103_NanoAODHiggsAnalysis.py it gives an empty list of canvases because the canvases are created in a sub-function called plot. Python does some memory clean up at the end of plot and delete the canvas in memory. Adding ROOT.SetOwnership(d, False) allows to keep the canvases alive in the list of canvases after the macro execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5230
https://github.com/root-project/root/pull/5230:667,usability,memor,memory,667,"[DF] Make sure df103_NanoAODHiggsAnalysis.py do not erase canvas; When generating the reference guide tutorial pages the doxygen ROOT filter invokes the Python script makeimage.py to generate the pictures produce by the tutorials. This Python script relies on the fact the canvases produced by the tutorial (Python ones) are still in memory after execution. They are retrieved with ROOT.gROOT.GetListOfCanvases() . In the case of most df*.py examples it works fine: the later command gives the list of canvases. But with df103_NanoAODHiggsAnalysis.py it gives an empty list of canvases because the canvases are created in a sub-function called plot. Python does some memory clean up at the end of plot and delete the canvas in memory. Adding ROOT.SetOwnership(d, False) allows to keep the canvases alive in the list of canvases after the macro execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5230
https://github.com/root-project/root/pull/5230:727,usability,memor,memory,727,"[DF] Make sure df103_NanoAODHiggsAnalysis.py do not erase canvas; When generating the reference guide tutorial pages the doxygen ROOT filter invokes the Python script makeimage.py to generate the pictures produce by the tutorials. This Python script relies on the fact the canvases produced by the tutorial (Python ones) are still in memory after execution. They are retrieved with ROOT.gROOT.GetListOfCanvases() . In the case of most df*.py examples it works fine: the later command gives the list of canvases. But with df103_NanoAODHiggsAnalysis.py it gives an empty list of canvases because the canvases are created in a sub-function called plot. Python does some memory clean up at the end of plot and delete the canvas in memory. Adding ROOT.SetOwnership(d, False) allows to keep the canvases alive in the list of canvases after the macro execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5230
https://github.com/root-project/root/pull/5231:19,deployability,depend,dependencies,19,Fix ROOT libraries dependencies ; Extraction from #5181 . First of all - add libraries in dependency list when class from such library used. Second - try to remove includes which are not used and coming from libraries which are not in dep list. In two places try to use virtual interfaces (TVirtualTreePlayer and TVirtualPacketizer) to avoid linking to implementation library.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5231
https://github.com/root-project/root/pull/5231:90,deployability,depend,dependency,90,Fix ROOT libraries dependencies ; Extraction from #5181 . First of all - add libraries in dependency list when class from such library used. Second - try to remove includes which are not used and coming from libraries which are not in dep list. In two places try to use virtual interfaces (TVirtualTreePlayer and TVirtualPacketizer) to avoid linking to implementation library.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5231
https://github.com/root-project/root/pull/5231:19,integrability,depend,dependencies,19,Fix ROOT libraries dependencies ; Extraction from #5181 . First of all - add libraries in dependency list when class from such library used. Second - try to remove includes which are not used and coming from libraries which are not in dep list. In two places try to use virtual interfaces (TVirtualTreePlayer and TVirtualPacketizer) to avoid linking to implementation library.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5231
https://github.com/root-project/root/pull/5231:90,integrability,depend,dependency,90,Fix ROOT libraries dependencies ; Extraction from #5181 . First of all - add libraries in dependency list when class from such library used. Second - try to remove includes which are not used and coming from libraries which are not in dep list. In two places try to use virtual interfaces (TVirtualTreePlayer and TVirtualPacketizer) to avoid linking to implementation library.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5231
https://github.com/root-project/root/pull/5231:278,integrability,interfac,interfaces,278,Fix ROOT libraries dependencies ; Extraction from #5181 . First of all - add libraries in dependency list when class from such library used. Second - try to remove includes which are not used and coming from libraries which are not in dep list. In two places try to use virtual interfaces (TVirtualTreePlayer and TVirtualPacketizer) to avoid linking to implementation library.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5231
https://github.com/root-project/root/pull/5231:278,interoperability,interfac,interfaces,278,Fix ROOT libraries dependencies ; Extraction from #5181 . First of all - add libraries in dependency list when class from such library used. Second - try to remove includes which are not used and coming from libraries which are not in dep list. In two places try to use virtual interfaces (TVirtualTreePlayer and TVirtualPacketizer) to avoid linking to implementation library.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5231
https://github.com/root-project/root/pull/5231:19,modifiability,depend,dependencies,19,Fix ROOT libraries dependencies ; Extraction from #5181 . First of all - add libraries in dependency list when class from such library used. Second - try to remove includes which are not used and coming from libraries which are not in dep list. In two places try to use virtual interfaces (TVirtualTreePlayer and TVirtualPacketizer) to avoid linking to implementation library.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5231
https://github.com/root-project/root/pull/5231:90,modifiability,depend,dependency,90,Fix ROOT libraries dependencies ; Extraction from #5181 . First of all - add libraries in dependency list when class from such library used. Second - try to remove includes which are not used and coming from libraries which are not in dep list. In two places try to use virtual interfaces (TVirtualTreePlayer and TVirtualPacketizer) to avoid linking to implementation library.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5231
https://github.com/root-project/root/pull/5231:278,modifiability,interfac,interfaces,278,Fix ROOT libraries dependencies ; Extraction from #5181 . First of all - add libraries in dependency list when class from such library used. Second - try to remove includes which are not used and coming from libraries which are not in dep list. In two places try to use virtual interfaces (TVirtualTreePlayer and TVirtualPacketizer) to avoid linking to implementation library.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5231
https://github.com/root-project/root/pull/5231:19,safety,depend,dependencies,19,Fix ROOT libraries dependencies ; Extraction from #5181 . First of all - add libraries in dependency list when class from such library used. Second - try to remove includes which are not used and coming from libraries which are not in dep list. In two places try to use virtual interfaces (TVirtualTreePlayer and TVirtualPacketizer) to avoid linking to implementation library.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5231
https://github.com/root-project/root/pull/5231:90,safety,depend,dependency,90,Fix ROOT libraries dependencies ; Extraction from #5181 . First of all - add libraries in dependency list when class from such library used. Second - try to remove includes which are not used and coming from libraries which are not in dep list. In two places try to use virtual interfaces (TVirtualTreePlayer and TVirtualPacketizer) to avoid linking to implementation library.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5231
https://github.com/root-project/root/pull/5231:336,safety,avoid,avoid,336,Fix ROOT libraries dependencies ; Extraction from #5181 . First of all - add libraries in dependency list when class from such library used. Second - try to remove includes which are not used and coming from libraries which are not in dep list. In two places try to use virtual interfaces (TVirtualTreePlayer and TVirtualPacketizer) to avoid linking to implementation library.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5231
https://github.com/root-project/root/pull/5231:19,testability,depend,dependencies,19,Fix ROOT libraries dependencies ; Extraction from #5181 . First of all - add libraries in dependency list when class from such library used. Second - try to remove includes which are not used and coming from libraries which are not in dep list. In two places try to use virtual interfaces (TVirtualTreePlayer and TVirtualPacketizer) to avoid linking to implementation library.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5231
https://github.com/root-project/root/pull/5231:90,testability,depend,dependency,90,Fix ROOT libraries dependencies ; Extraction from #5181 . First of all - add libraries in dependency list when class from such library used. Second - try to remove includes which are not used and coming from libraries which are not in dep list. In two places try to use virtual interfaces (TVirtualTreePlayer and TVirtualPacketizer) to avoid linking to implementation library.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5231
https://github.com/root-project/root/pull/5233:12,deployability,depend,dependencies,12,Add missing dependencies.; This is part of root-project/root#5181,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5233
https://github.com/root-project/root/pull/5233:12,integrability,depend,dependencies,12,Add missing dependencies.; This is part of root-project/root#5181,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5233
https://github.com/root-project/root/pull/5233:12,modifiability,depend,dependencies,12,Add missing dependencies.; This is part of root-project/root#5181,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5233
https://github.com/root-project/root/pull/5233:12,safety,depend,dependencies,12,Add missing dependencies.; This is part of root-project/root#5181,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5233
https://github.com/root-project/root/pull/5233:12,testability,depend,dependencies,12,Add missing dependencies.; This is part of root-project/root#5181,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5233
https://github.com/root-project/root/pull/5234:78,availability,failur,failures,78,Fix in TEntryList - check fCurrent memeber before access; Should fix sporadic failures on `projectroot.test.test_stressentrylist_interpreted`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5234
https://github.com/root-project/root/pull/5234:78,deployability,fail,failures,78,Fix in TEntryList - check fCurrent memeber before access; Should fix sporadic failures on `projectroot.test.test_stressentrylist_interpreted`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5234
https://github.com/root-project/root/pull/5234:78,performance,failur,failures,78,Fix in TEntryList - check fCurrent memeber before access; Should fix sporadic failures on `projectroot.test.test_stressentrylist_interpreted`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5234
https://github.com/root-project/root/pull/5234:78,reliability,fail,failures,78,Fix in TEntryList - check fCurrent memeber before access; Should fix sporadic failures on `projectroot.test.test_stressentrylist_interpreted`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5234
https://github.com/root-project/root/pull/5234:103,safety,test,test,103,Fix in TEntryList - check fCurrent memeber before access; Should fix sporadic failures on `projectroot.test.test_stressentrylist_interpreted`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5234
https://github.com/root-project/root/pull/5234:50,security,access,access,50,Fix in TEntryList - check fCurrent memeber before access; Should fix sporadic failures on `projectroot.test.test_stressentrylist_interpreted`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5234
https://github.com/root-project/root/pull/5234:103,testability,test,test,103,Fix in TEntryList - check fCurrent memeber before access; Should fix sporadic failures on `projectroot.test.test_stressentrylist_interpreted`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5234
https://github.com/root-project/root/pull/5235:20,deployability,depend,dependencies,20,ROOT-10637: Resolve dependencies and relink if explicit linking is on; In cases where ACLiC builds a library without a rootmap file or a modulemap file we have no reasonable way to detect what are the library dependencies. Occasionally when loading a shared object the dynamic linker will tell us if something is missing (via dlerror) but only on the intialization path. This patch fixes ROOT-10637.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5235
https://github.com/root-project/root/pull/5235:92,deployability,build,builds,92,ROOT-10637: Resolve dependencies and relink if explicit linking is on; In cases where ACLiC builds a library without a rootmap file or a modulemap file we have no reasonable way to detect what are the library dependencies. Occasionally when loading a shared object the dynamic linker will tell us if something is missing (via dlerror) but only on the intialization path. This patch fixes ROOT-10637.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5235
https://github.com/root-project/root/pull/5235:137,deployability,modul,modulemap,137,ROOT-10637: Resolve dependencies and relink if explicit linking is on; In cases where ACLiC builds a library without a rootmap file or a modulemap file we have no reasonable way to detect what are the library dependencies. Occasionally when loading a shared object the dynamic linker will tell us if something is missing (via dlerror) but only on the intialization path. This patch fixes ROOT-10637.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5235
https://github.com/root-project/root/pull/5235:209,deployability,depend,dependencies,209,ROOT-10637: Resolve dependencies and relink if explicit linking is on; In cases where ACLiC builds a library without a rootmap file or a modulemap file we have no reasonable way to detect what are the library dependencies. Occasionally when loading a shared object the dynamic linker will tell us if something is missing (via dlerror) but only on the intialization path. This patch fixes ROOT-10637.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5235
https://github.com/root-project/root/pull/5235:376,deployability,patch,patch,376,ROOT-10637: Resolve dependencies and relink if explicit linking is on; In cases where ACLiC builds a library without a rootmap file or a modulemap file we have no reasonable way to detect what are the library dependencies. Occasionally when loading a shared object the dynamic linker will tell us if something is missing (via dlerror) but only on the intialization path. This patch fixes ROOT-10637.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5235
https://github.com/root-project/root/pull/5235:241,energy efficiency,load,loading,241,ROOT-10637: Resolve dependencies and relink if explicit linking is on; In cases where ACLiC builds a library without a rootmap file or a modulemap file we have no reasonable way to detect what are the library dependencies. Occasionally when loading a shared object the dynamic linker will tell us if something is missing (via dlerror) but only on the intialization path. This patch fixes ROOT-10637.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5235
https://github.com/root-project/root/pull/5235:20,integrability,depend,dependencies,20,ROOT-10637: Resolve dependencies and relink if explicit linking is on; In cases where ACLiC builds a library without a rootmap file or a modulemap file we have no reasonable way to detect what are the library dependencies. Occasionally when loading a shared object the dynamic linker will tell us if something is missing (via dlerror) but only on the intialization path. This patch fixes ROOT-10637.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5235
https://github.com/root-project/root/pull/5235:209,integrability,depend,dependencies,209,ROOT-10637: Resolve dependencies and relink if explicit linking is on; In cases where ACLiC builds a library without a rootmap file or a modulemap file we have no reasonable way to detect what are the library dependencies. Occasionally when loading a shared object the dynamic linker will tell us if something is missing (via dlerror) but only on the intialization path. This patch fixes ROOT-10637.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5235
https://github.com/root-project/root/pull/5235:251,interoperability,share,shared,251,ROOT-10637: Resolve dependencies and relink if explicit linking is on; In cases where ACLiC builds a library without a rootmap file or a modulemap file we have no reasonable way to detect what are the library dependencies. Occasionally when loading a shared object the dynamic linker will tell us if something is missing (via dlerror) but only on the intialization path. This patch fixes ROOT-10637.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5235
https://github.com/root-project/root/pull/5235:20,modifiability,depend,dependencies,20,ROOT-10637: Resolve dependencies and relink if explicit linking is on; In cases where ACLiC builds a library without a rootmap file or a modulemap file we have no reasonable way to detect what are the library dependencies. Occasionally when loading a shared object the dynamic linker will tell us if something is missing (via dlerror) but only on the intialization path. This patch fixes ROOT-10637.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5235
https://github.com/root-project/root/pull/5235:137,modifiability,modul,modulemap,137,ROOT-10637: Resolve dependencies and relink if explicit linking is on; In cases where ACLiC builds a library without a rootmap file or a modulemap file we have no reasonable way to detect what are the library dependencies. Occasionally when loading a shared object the dynamic linker will tell us if something is missing (via dlerror) but only on the intialization path. This patch fixes ROOT-10637.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5235
https://github.com/root-project/root/pull/5235:209,modifiability,depend,dependencies,209,ROOT-10637: Resolve dependencies and relink if explicit linking is on; In cases where ACLiC builds a library without a rootmap file or a modulemap file we have no reasonable way to detect what are the library dependencies. Occasionally when loading a shared object the dynamic linker will tell us if something is missing (via dlerror) but only on the intialization path. This patch fixes ROOT-10637.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5235
https://github.com/root-project/root/pull/5235:241,performance,load,loading,241,ROOT-10637: Resolve dependencies and relink if explicit linking is on; In cases where ACLiC builds a library without a rootmap file or a modulemap file we have no reasonable way to detect what are the library dependencies. Occasionally when loading a shared object the dynamic linker will tell us if something is missing (via dlerror) but only on the intialization path. This patch fixes ROOT-10637.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5235
https://github.com/root-project/root/pull/5235:20,safety,depend,dependencies,20,ROOT-10637: Resolve dependencies and relink if explicit linking is on; In cases where ACLiC builds a library without a rootmap file or a modulemap file we have no reasonable way to detect what are the library dependencies. Occasionally when loading a shared object the dynamic linker will tell us if something is missing (via dlerror) but only on the intialization path. This patch fixes ROOT-10637.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5235
https://github.com/root-project/root/pull/5235:137,safety,modul,modulemap,137,ROOT-10637: Resolve dependencies and relink if explicit linking is on; In cases where ACLiC builds a library without a rootmap file or a modulemap file we have no reasonable way to detect what are the library dependencies. Occasionally when loading a shared object the dynamic linker will tell us if something is missing (via dlerror) but only on the intialization path. This patch fixes ROOT-10637.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5235
https://github.com/root-project/root/pull/5235:181,safety,detect,detect,181,ROOT-10637: Resolve dependencies and relink if explicit linking is on; In cases where ACLiC builds a library without a rootmap file or a modulemap file we have no reasonable way to detect what are the library dependencies. Occasionally when loading a shared object the dynamic linker will tell us if something is missing (via dlerror) but only on the intialization path. This patch fixes ROOT-10637.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5235
https://github.com/root-project/root/pull/5235:209,safety,depend,dependencies,209,ROOT-10637: Resolve dependencies and relink if explicit linking is on; In cases where ACLiC builds a library without a rootmap file or a modulemap file we have no reasonable way to detect what are the library dependencies. Occasionally when loading a shared object the dynamic linker will tell us if something is missing (via dlerror) but only on the intialization path. This patch fixes ROOT-10637.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5235
https://github.com/root-project/root/pull/5235:376,safety,patch,patch,376,ROOT-10637: Resolve dependencies and relink if explicit linking is on; In cases where ACLiC builds a library without a rootmap file or a modulemap file we have no reasonable way to detect what are the library dependencies. Occasionally when loading a shared object the dynamic linker will tell us if something is missing (via dlerror) but only on the intialization path. This patch fixes ROOT-10637.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5235
https://github.com/root-project/root/pull/5235:181,security,detect,detect,181,ROOT-10637: Resolve dependencies and relink if explicit linking is on; In cases where ACLiC builds a library without a rootmap file or a modulemap file we have no reasonable way to detect what are the library dependencies. Occasionally when loading a shared object the dynamic linker will tell us if something is missing (via dlerror) but only on the intialization path. This patch fixes ROOT-10637.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5235
https://github.com/root-project/root/pull/5235:376,security,patch,patch,376,ROOT-10637: Resolve dependencies and relink if explicit linking is on; In cases where ACLiC builds a library without a rootmap file or a modulemap file we have no reasonable way to detect what are the library dependencies. Occasionally when loading a shared object the dynamic linker will tell us if something is missing (via dlerror) but only on the intialization path. This patch fixes ROOT-10637.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5235
https://github.com/root-project/root/pull/5235:20,testability,depend,dependencies,20,ROOT-10637: Resolve dependencies and relink if explicit linking is on; In cases where ACLiC builds a library without a rootmap file or a modulemap file we have no reasonable way to detect what are the library dependencies. Occasionally when loading a shared object the dynamic linker will tell us if something is missing (via dlerror) but only on the intialization path. This patch fixes ROOT-10637.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5235
https://github.com/root-project/root/pull/5235:209,testability,depend,dependencies,209,ROOT-10637: Resolve dependencies and relink if explicit linking is on; In cases where ACLiC builds a library without a rootmap file or a modulemap file we have no reasonable way to detect what are the library dependencies. Occasionally when loading a shared object the dynamic linker will tell us if something is missing (via dlerror) but only on the intialization path. This patch fixes ROOT-10637.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5235
https://github.com/root-project/root/pull/5236:50,energy efficiency,draw,drawings,50,[notebook] add custom colors and gStyle in JSROOT drawings v6.20 [ROOT-10624][skip-ci]; Backport of #5209,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5236
https://github.com/root-project/root/pull/5236:15,usability,custom,custom,15,[notebook] add custom colors and gStyle in JSROOT drawings v6.20 [ROOT-10624][skip-ci]; Backport of #5209,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5236
https://github.com/root-project/root/pull/5237:624,availability,avail,available,624,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:12,deployability,build,build,12,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:54,deployability,build,builds,54,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:69,deployability,build,build,69,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:92,deployability,build,build,92,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:243,deployability,manag,management,243,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:592,deployability,version,version,592,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:243,energy efficiency,manag,management,243,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:370,integrability,configur,configuring,370,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:592,integrability,version,version,592,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:585,interoperability,share,shared,585,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:370,modifiability,configur,configuring,370,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:592,modifiability,version,version,592,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:236,performance,memor,memory,236,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:681,performance,time,time,681,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:624,reliability,availab,available,624,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:44,safety,sanit,sanitizer,44,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:111,safety,sanit,sanitizer,111,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:184,safety,sanit,sanitizer,184,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:243,safety,manag,management,243,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:310,safety,sanit,sanitizer,310,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:456,safety,sanit,sanitizer,456,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:624,safety,avail,available,624,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:667,safety,sanit,sanitizer,667,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:794,safety,test,tests,794,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:44,security,sanit,sanitizer,44,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:111,security,sanit,sanitizer,111,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:184,security,sanit,sanitizer,184,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:310,security,sanit,sanitizer,310,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:370,security,configur,configuring,370,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:456,security,sanit,sanitizer,456,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:624,security,availab,available,624,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:667,security,sanit,sanitizer,667,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:711,testability,instrument,instrumented,711,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:794,testability,test,tests,794,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:236,usability,memor,memory,236,"[CMake] Add build option ""asan"" for address sanitizer builds.; - Add build option `asan` to build with address sanitizer. Only works with clang so far. - Add suppression file for leak sanitizer, suppressing fallout from. llvm and clang memory management. - Set up compiler flags for statically linking address sanitizer. into all ROOT exectuables. - A micro library for configuring asan was added, and statically linked. into all ROOT executables. Address sanitizer (at least in clang) allows to define. __asan_default_config and __lsan_default_suppressions to set good. defaults. - A shared version of the setup library is available for all cases where. the address sanitizer run time is LD_PRELOADed into non-instrumented. executables. - LD_PRELOAD with asan runtimes has been set up for all tests that use. python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5238:208,availability,Error,Error,208,Add a message to enable builtin_glew on latest CMake for Mac; Bug reports: https://gitlab.kitware.com/cmake/cmake/-/issues/19662. and. https://github.com/microsoft/vcpkg/pull/7967. -- Looking for GLEW. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:520 (message):. Please enable builtin Glew due bug in latest CMake (use cmake option. -Dbuiltin_glew=ON). Call Stack (most recent call first):. CMakeLists.txt:168 (include).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5238
https://github.com/root-project/root/pull/5238:223,deployability,modul,modules,223,Add a message to enable builtin_glew on latest CMake for Mac; Bug reports: https://gitlab.kitware.com/cmake/cmake/-/issues/19662. and. https://github.com/microsoft/vcpkg/pull/7967. -- Looking for GLEW. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:520 (message):. Please enable builtin Glew due bug in latest CMake (use cmake option. -Dbuiltin_glew=ON). Call Stack (most recent call first):. CMakeLists.txt:168 (include).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5238
https://github.com/root-project/root/pull/5238:372,deployability,Stack,Stack,372,Add a message to enable builtin_glew on latest CMake for Mac; Bug reports: https://gitlab.kitware.com/cmake/cmake/-/issues/19662. and. https://github.com/microsoft/vcpkg/pull/7967. -- Looking for GLEW. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:520 (message):. Please enable builtin Glew due bug in latest CMake (use cmake option. -Dbuiltin_glew=ON). Call Stack (most recent call first):. CMakeLists.txt:168 (include).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5238
https://github.com/root-project/root/pull/5238:6,integrability,messag,message,6,Add a message to enable builtin_glew on latest CMake for Mac; Bug reports: https://gitlab.kitware.com/cmake/cmake/-/issues/19662. and. https://github.com/microsoft/vcpkg/pull/7967. -- Looking for GLEW. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:520 (message):. Please enable builtin Glew due bug in latest CMake (use cmake option. -Dbuiltin_glew=ON). Call Stack (most recent call first):. CMakeLists.txt:168 (include).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5238
https://github.com/root-project/root/pull/5238:266,integrability,messag,message,266,Add a message to enable builtin_glew on latest CMake for Mac; Bug reports: https://gitlab.kitware.com/cmake/cmake/-/issues/19662. and. https://github.com/microsoft/vcpkg/pull/7967. -- Looking for GLEW. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:520 (message):. Please enable builtin Glew due bug in latest CMake (use cmake option. -Dbuiltin_glew=ON). Call Stack (most recent call first):. CMakeLists.txt:168 (include).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5238
https://github.com/root-project/root/pull/5238:6,interoperability,messag,message,6,Add a message to enable builtin_glew on latest CMake for Mac; Bug reports: https://gitlab.kitware.com/cmake/cmake/-/issues/19662. and. https://github.com/microsoft/vcpkg/pull/7967. -- Looking for GLEW. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:520 (message):. Please enable builtin Glew due bug in latest CMake (use cmake option. -Dbuiltin_glew=ON). Call Stack (most recent call first):. CMakeLists.txt:168 (include).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5238
https://github.com/root-project/root/pull/5238:266,interoperability,messag,message,266,Add a message to enable builtin_glew on latest CMake for Mac; Bug reports: https://gitlab.kitware.com/cmake/cmake/-/issues/19662. and. https://github.com/microsoft/vcpkg/pull/7967. -- Looking for GLEW. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:520 (message):. Please enable builtin Glew due bug in latest CMake (use cmake option. -Dbuiltin_glew=ON). Call Stack (most recent call first):. CMakeLists.txt:168 (include).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5238
https://github.com/root-project/root/pull/5238:223,modifiability,modul,modules,223,Add a message to enable builtin_glew on latest CMake for Mac; Bug reports: https://gitlab.kitware.com/cmake/cmake/-/issues/19662. and. https://github.com/microsoft/vcpkg/pull/7967. -- Looking for GLEW. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:520 (message):. Please enable builtin Glew due bug in latest CMake (use cmake option. -Dbuiltin_glew=ON). Call Stack (most recent call first):. CMakeLists.txt:168 (include).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5238
https://github.com/root-project/root/pull/5238:208,performance,Error,Error,208,Add a message to enable builtin_glew on latest CMake for Mac; Bug reports: https://gitlab.kitware.com/cmake/cmake/-/issues/19662. and. https://github.com/microsoft/vcpkg/pull/7967. -- Looking for GLEW. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:520 (message):. Please enable builtin Glew due bug in latest CMake (use cmake option. -Dbuiltin_glew=ON). Call Stack (most recent call first):. CMakeLists.txt:168 (include).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5238
https://github.com/root-project/root/pull/5238:208,safety,Error,Error,208,Add a message to enable builtin_glew on latest CMake for Mac; Bug reports: https://gitlab.kitware.com/cmake/cmake/-/issues/19662. and. https://github.com/microsoft/vcpkg/pull/7967. -- Looking for GLEW. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:520 (message):. Please enable builtin Glew due bug in latest CMake (use cmake option. -Dbuiltin_glew=ON). Call Stack (most recent call first):. CMakeLists.txt:168 (include).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5238
https://github.com/root-project/root/pull/5238:223,safety,modul,modules,223,Add a message to enable builtin_glew on latest CMake for Mac; Bug reports: https://gitlab.kitware.com/cmake/cmake/-/issues/19662. and. https://github.com/microsoft/vcpkg/pull/7967. -- Looking for GLEW. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:520 (message):. Please enable builtin Glew due bug in latest CMake (use cmake option. -Dbuiltin_glew=ON). Call Stack (most recent call first):. CMakeLists.txt:168 (include).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5238
https://github.com/root-project/root/pull/5238:208,usability,Error,Error,208,Add a message to enable builtin_glew on latest CMake for Mac; Bug reports: https://gitlab.kitware.com/cmake/cmake/-/issues/19662. and. https://github.com/microsoft/vcpkg/pull/7967. -- Looking for GLEW. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:520 (message):. Please enable builtin Glew due bug in latest CMake (use cmake option. -Dbuiltin_glew=ON). Call Stack (most recent call first):. CMakeLists.txt:168 (include).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5238
https://github.com/root-project/root/pull/5239:143,performance,multi-thread,multi-thread,143,"Backport fix for ROOT-9556 ""Users might silently get wrong results when they process two trees as friends, one of which has been produced by a multi-thread Snapshot of the other"";",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5239
https://github.com/root-project/root/pull/5239:28,usability,User,Users,28,"Backport fix for ROOT-9556 ""Users might silently get wrong results when they process two trees as friends, one of which has been produced by a multi-thread Snapshot of the other"";",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5239
https://github.com/root-project/root/pull/5240:60,deployability,depend,dependency,60,Use TVirtualProofPlayer in proofx; Otherwise one has to set dependency from ProofPlayer lib,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5240
https://github.com/root-project/root/pull/5240:60,integrability,depend,dependency,60,Use TVirtualProofPlayer in proofx; Otherwise one has to set dependency from ProofPlayer lib,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5240
https://github.com/root-project/root/pull/5240:60,modifiability,depend,dependency,60,Use TVirtualProofPlayer in proofx; Otherwise one has to set dependency from ProofPlayer lib,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5240
https://github.com/root-project/root/pull/5240:60,safety,depend,dependency,60,Use TVirtualProofPlayer in proofx; Otherwise one has to set dependency from ProofPlayer lib,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5240
https://github.com/root-project/root/pull/5240:60,testability,depend,dependency,60,Use TVirtualProofPlayer in proofx; Otherwise one has to set dependency from ProofPlayer lib,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5240
https://github.com/root-project/root/pull/5242:227,usability,behavi,behavior,227,[eve-7] Make REveStraightLineSet and REveBoxSet secondary selectable; Add possibility for REveStraightLineSet and REveBoxSet for secondary selection: each element in the set can be selected or highlighted. The secondary select behavior is set with SetAlwaysSecSelect(true) call.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5242
https://github.com/root-project/root/pull/5243:12,modifiability,Refact,Refactor,12,[metacling] Refactor Property into base class. NFC.; @vgvassilev,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5243
https://github.com/root-project/root/pull/5243:12,performance,Refactor,Refactor,12,[metacling] Refactor Property into base class. NFC.; @vgvassilev,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5243
https://github.com/root-project/root/pull/5244:50,deployability,modul,modulemaps,50,"[cxxmodules] Do not add overlay files when system modulemaps exist.; This patch also instruct the build system to not copy {libc,std}.modulemap in OSX because the standard libraries are already modularized. Fixes a regression introduced by root-project/root@603a1c3e96",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5244
https://github.com/root-project/root/pull/5244:74,deployability,patch,patch,74,"[cxxmodules] Do not add overlay files when system modulemaps exist.; This patch also instruct the build system to not copy {libc,std}.modulemap in OSX because the standard libraries are already modularized. Fixes a regression introduced by root-project/root@603a1c3e96",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5244
https://github.com/root-project/root/pull/5244:98,deployability,build,build,98,"[cxxmodules] Do not add overlay files when system modulemaps exist.; This patch also instruct the build system to not copy {libc,std}.modulemap in OSX because the standard libraries are already modularized. Fixes a regression introduced by root-project/root@603a1c3e96",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5244
https://github.com/root-project/root/pull/5244:134,deployability,modul,modulemap,134,"[cxxmodules] Do not add overlay files when system modulemaps exist.; This patch also instruct the build system to not copy {libc,std}.modulemap in OSX because the standard libraries are already modularized. Fixes a regression introduced by root-project/root@603a1c3e96",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5244
https://github.com/root-project/root/pull/5244:194,deployability,modul,modularized,194,"[cxxmodules] Do not add overlay files when system modulemaps exist.; This patch also instruct the build system to not copy {libc,std}.modulemap in OSX because the standard libraries are already modularized. Fixes a regression introduced by root-project/root@603a1c3e96",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5244
https://github.com/root-project/root/pull/5244:194,integrability,modular,modularized,194,"[cxxmodules] Do not add overlay files when system modulemaps exist.; This patch also instruct the build system to not copy {libc,std}.modulemap in OSX because the standard libraries are already modularized. Fixes a regression introduced by root-project/root@603a1c3e96",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5244
https://github.com/root-project/root/pull/5244:163,interoperability,standard,standard,163,"[cxxmodules] Do not add overlay files when system modulemaps exist.; This patch also instruct the build system to not copy {libc,std}.modulemap in OSX because the standard libraries are already modularized. Fixes a regression introduced by root-project/root@603a1c3e96",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5244
https://github.com/root-project/root/pull/5244:50,modifiability,modul,modulemaps,50,"[cxxmodules] Do not add overlay files when system modulemaps exist.; This patch also instruct the build system to not copy {libc,std}.modulemap in OSX because the standard libraries are already modularized. Fixes a regression introduced by root-project/root@603a1c3e96",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5244
https://github.com/root-project/root/pull/5244:134,modifiability,modul,modulemap,134,"[cxxmodules] Do not add overlay files when system modulemaps exist.; This patch also instruct the build system to not copy {libc,std}.modulemap in OSX because the standard libraries are already modularized. Fixes a regression introduced by root-project/root@603a1c3e96",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5244
https://github.com/root-project/root/pull/5244:194,modifiability,modul,modularized,194,"[cxxmodules] Do not add overlay files when system modulemaps exist.; This patch also instruct the build system to not copy {libc,std}.modulemap in OSX because the standard libraries are already modularized. Fixes a regression introduced by root-project/root@603a1c3e96",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5244
https://github.com/root-project/root/pull/5244:50,safety,modul,modulemaps,50,"[cxxmodules] Do not add overlay files when system modulemaps exist.; This patch also instruct the build system to not copy {libc,std}.modulemap in OSX because the standard libraries are already modularized. Fixes a regression introduced by root-project/root@603a1c3e96",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5244
https://github.com/root-project/root/pull/5244:74,safety,patch,patch,74,"[cxxmodules] Do not add overlay files when system modulemaps exist.; This patch also instruct the build system to not copy {libc,std}.modulemap in OSX because the standard libraries are already modularized. Fixes a regression introduced by root-project/root@603a1c3e96",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5244
https://github.com/root-project/root/pull/5244:134,safety,modul,modulemap,134,"[cxxmodules] Do not add overlay files when system modulemaps exist.; This patch also instruct the build system to not copy {libc,std}.modulemap in OSX because the standard libraries are already modularized. Fixes a regression introduced by root-project/root@603a1c3e96",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5244
https://github.com/root-project/root/pull/5244:194,safety,modul,modularized,194,"[cxxmodules] Do not add overlay files when system modulemaps exist.; This patch also instruct the build system to not copy {libc,std}.modulemap in OSX because the standard libraries are already modularized. Fixes a regression introduced by root-project/root@603a1c3e96",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5244
https://github.com/root-project/root/pull/5244:74,security,patch,patch,74,"[cxxmodules] Do not add overlay files when system modulemaps exist.; This patch also instruct the build system to not copy {libc,std}.modulemap in OSX because the standard libraries are already modularized. Fixes a regression introduced by root-project/root@603a1c3e96",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5244
https://github.com/root-project/root/pull/5244:194,testability,modula,modularized,194,"[cxxmodules] Do not add overlay files when system modulemaps exist.; This patch also instruct the build system to not copy {libc,std}.modulemap in OSX because the standard libraries are already modularized. Fixes a regression introduced by root-project/root@603a1c3e96",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5244
https://github.com/root-project/root/pull/5244:215,testability,regress,regression,215,"[cxxmodules] Do not add overlay files when system modulemaps exist.; This patch also instruct the build system to not copy {libc,std}.modulemap in OSX because the standard libraries are already modularized. Fixes a regression introduced by root-project/root@603a1c3e96",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5244
https://github.com/root-project/root/pull/5245:161,deployability,Modul,Modules,161,"Fix discrepancy with find_package_handle_standard_args and name of t…; …he calling package (CMake 3.17). Example: . CMake Warning (dev) at /usr/share/cmake-3.17/Modules/FindPackageHandleStandardArgs.cmake:272 (message):. The package name passed to `find_package_handle_standard_args` (MYSQL) does. not match the name of the calling package (MySQL). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindMySQL.cmake:65 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:15 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:601 (find_package). CMakeLists.txt:168 (include). This warning is for project developers. Use -Wno-dev to suppress it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5245
https://github.com/root-project/root/pull/5245:489,deployability,Stack,Stack,489,"Fix discrepancy with find_package_handle_standard_args and name of t…; …he calling package (CMake 3.17). Example: . CMake Warning (dev) at /usr/share/cmake-3.17/Modules/FindPackageHandleStandardArgs.cmake:272 (message):. The package name passed to `find_package_handle_standard_args` (MYSQL) does. not match the name of the calling package (MySQL). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindMySQL.cmake:65 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:15 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:601 (find_package). CMakeLists.txt:168 (include). This warning is for project developers. Use -Wno-dev to suppress it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5245
https://github.com/root-project/root/pull/5245:528,deployability,modul,modules,528,"Fix discrepancy with find_package_handle_standard_args and name of t…; …he calling package (CMake 3.17). Example: . CMake Warning (dev) at /usr/share/cmake-3.17/Modules/FindPackageHandleStandardArgs.cmake:272 (message):. The package name passed to `find_package_handle_standard_args` (MYSQL) does. not match the name of the calling package (MySQL). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindMySQL.cmake:65 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:15 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:601 (find_package). CMakeLists.txt:168 (include). This warning is for project developers. Use -Wno-dev to suppress it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5245
https://github.com/root-project/root/pull/5245:598,deployability,modul,modules,598,"Fix discrepancy with find_package_handle_standard_args and name of t…; …he calling package (CMake 3.17). Example: . CMake Warning (dev) at /usr/share/cmake-3.17/Modules/FindPackageHandleStandardArgs.cmake:272 (message):. The package name passed to `find_package_handle_standard_args` (MYSQL) does. not match the name of the calling package (MySQL). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindMySQL.cmake:65 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:15 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:601 (find_package). CMakeLists.txt:168 (include). This warning is for project developers. Use -Wno-dev to suppress it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5245
https://github.com/root-project/root/pull/5245:662,deployability,modul,modules,662,"Fix discrepancy with find_package_handle_standard_args and name of t…; …he calling package (CMake 3.17). Example: . CMake Warning (dev) at /usr/share/cmake-3.17/Modules/FindPackageHandleStandardArgs.cmake:272 (message):. The package name passed to `find_package_handle_standard_args` (MYSQL) does. not match the name of the calling package (MySQL). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindMySQL.cmake:65 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:15 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:601 (find_package). CMakeLists.txt:168 (include). This warning is for project developers. Use -Wno-dev to suppress it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5245
https://github.com/root-project/root/pull/5245:210,integrability,messag,message,210,"Fix discrepancy with find_package_handle_standard_args and name of t…; …he calling package (CMake 3.17). Example: . CMake Warning (dev) at /usr/share/cmake-3.17/Modules/FindPackageHandleStandardArgs.cmake:272 (message):. The package name passed to `find_package_handle_standard_args` (MYSQL) does. not match the name of the calling package (MySQL). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindMySQL.cmake:65 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:15 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:601 (find_package). CMakeLists.txt:168 (include). This warning is for project developers. Use -Wno-dev to suppress it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5245
https://github.com/root-project/root/pull/5245:144,interoperability,share,share,144,"Fix discrepancy with find_package_handle_standard_args and name of t…; …he calling package (CMake 3.17). Example: . CMake Warning (dev) at /usr/share/cmake-3.17/Modules/FindPackageHandleStandardArgs.cmake:272 (message):. The package name passed to `find_package_handle_standard_args` (MYSQL) does. not match the name of the calling package (MySQL). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindMySQL.cmake:65 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:15 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:601 (find_package). CMakeLists.txt:168 (include). This warning is for project developers. Use -Wno-dev to suppress it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5245
https://github.com/root-project/root/pull/5245:210,interoperability,messag,message,210,"Fix discrepancy with find_package_handle_standard_args and name of t…; …he calling package (CMake 3.17). Example: . CMake Warning (dev) at /usr/share/cmake-3.17/Modules/FindPackageHandleStandardArgs.cmake:272 (message):. The package name passed to `find_package_handle_standard_args` (MYSQL) does. not match the name of the calling package (MySQL). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindMySQL.cmake:65 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:15 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:601 (find_package). CMakeLists.txt:168 (include). This warning is for project developers. Use -Wno-dev to suppress it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5245
https://github.com/root-project/root/pull/5245:83,modifiability,pac,package,83,"Fix discrepancy with find_package_handle_standard_args and name of t…; …he calling package (CMake 3.17). Example: . CMake Warning (dev) at /usr/share/cmake-3.17/Modules/FindPackageHandleStandardArgs.cmake:272 (message):. The package name passed to `find_package_handle_standard_args` (MYSQL) does. not match the name of the calling package (MySQL). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindMySQL.cmake:65 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:15 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:601 (find_package). CMakeLists.txt:168 (include). This warning is for project developers. Use -Wno-dev to suppress it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5245
https://github.com/root-project/root/pull/5245:161,modifiability,Modul,Modules,161,"Fix discrepancy with find_package_handle_standard_args and name of t…; …he calling package (CMake 3.17). Example: . CMake Warning (dev) at /usr/share/cmake-3.17/Modules/FindPackageHandleStandardArgs.cmake:272 (message):. The package name passed to `find_package_handle_standard_args` (MYSQL) does. not match the name of the calling package (MySQL). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindMySQL.cmake:65 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:15 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:601 (find_package). CMakeLists.txt:168 (include). This warning is for project developers. Use -Wno-dev to suppress it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5245
https://github.com/root-project/root/pull/5245:225,modifiability,pac,package,225,"Fix discrepancy with find_package_handle_standard_args and name of t…; …he calling package (CMake 3.17). Example: . CMake Warning (dev) at /usr/share/cmake-3.17/Modules/FindPackageHandleStandardArgs.cmake:272 (message):. The package name passed to `find_package_handle_standard_args` (MYSQL) does. not match the name of the calling package (MySQL). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindMySQL.cmake:65 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:15 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:601 (find_package). CMakeLists.txt:168 (include). This warning is for project developers. Use -Wno-dev to suppress it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5245
https://github.com/root-project/root/pull/5245:332,modifiability,pac,package,332,"Fix discrepancy with find_package_handle_standard_args and name of t…; …he calling package (CMake 3.17). Example: . CMake Warning (dev) at /usr/share/cmake-3.17/Modules/FindPackageHandleStandardArgs.cmake:272 (message):. The package name passed to `find_package_handle_standard_args` (MYSQL) does. not match the name of the calling package (MySQL). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindMySQL.cmake:65 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:15 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:601 (find_package). CMakeLists.txt:168 (include). This warning is for project developers. Use -Wno-dev to suppress it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5245
https://github.com/root-project/root/pull/5245:427,modifiability,variab,variables,427,"Fix discrepancy with find_package_handle_standard_args and name of t…; …he calling package (CMake 3.17). Example: . CMake Warning (dev) at /usr/share/cmake-3.17/Modules/FindPackageHandleStandardArgs.cmake:272 (message):. The package name passed to `find_package_handle_standard_args` (MYSQL) does. not match the name of the calling package (MySQL). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindMySQL.cmake:65 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:15 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:601 (find_package). CMakeLists.txt:168 (include). This warning is for project developers. Use -Wno-dev to suppress it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5245
https://github.com/root-project/root/pull/5245:528,modifiability,modul,modules,528,"Fix discrepancy with find_package_handle_standard_args and name of t…; …he calling package (CMake 3.17). Example: . CMake Warning (dev) at /usr/share/cmake-3.17/Modules/FindPackageHandleStandardArgs.cmake:272 (message):. The package name passed to `find_package_handle_standard_args` (MYSQL) does. not match the name of the calling package (MySQL). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindMySQL.cmake:65 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:15 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:601 (find_package). CMakeLists.txt:168 (include). This warning is for project developers. Use -Wno-dev to suppress it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5245
https://github.com/root-project/root/pull/5245:598,modifiability,modul,modules,598,"Fix discrepancy with find_package_handle_standard_args and name of t…; …he calling package (CMake 3.17). Example: . CMake Warning (dev) at /usr/share/cmake-3.17/Modules/FindPackageHandleStandardArgs.cmake:272 (message):. The package name passed to `find_package_handle_standard_args` (MYSQL) does. not match the name of the calling package (MySQL). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindMySQL.cmake:65 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:15 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:601 (find_package). CMakeLists.txt:168 (include). This warning is for project developers. Use -Wno-dev to suppress it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5245
https://github.com/root-project/root/pull/5245:662,modifiability,modul,modules,662,"Fix discrepancy with find_package_handle_standard_args and name of t…; …he calling package (CMake 3.17). Example: . CMake Warning (dev) at /usr/share/cmake-3.17/Modules/FindPackageHandleStandardArgs.cmake:272 (message):. The package name passed to `find_package_handle_standard_args` (MYSQL) does. not match the name of the calling package (MySQL). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindMySQL.cmake:65 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:15 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:601 (find_package). CMakeLists.txt:168 (include). This warning is for project developers. Use -Wno-dev to suppress it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5245
https://github.com/root-project/root/pull/5245:292,reliability,doe,does,292,"Fix discrepancy with find_package_handle_standard_args and name of t…; …he calling package (CMake 3.17). Example: . CMake Warning (dev) at /usr/share/cmake-3.17/Modules/FindPackageHandleStandardArgs.cmake:272 (message):. The package name passed to `find_package_handle_standard_args` (MYSQL) does. not match the name of the calling package (MySQL). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindMySQL.cmake:65 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:15 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:601 (find_package). CMakeLists.txt:168 (include). This warning is for project developers. Use -Wno-dev to suppress it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5245
https://github.com/root-project/root/pull/5245:161,safety,Modul,Modules,161,"Fix discrepancy with find_package_handle_standard_args and name of t…; …he calling package (CMake 3.17). Example: . CMake Warning (dev) at /usr/share/cmake-3.17/Modules/FindPackageHandleStandardArgs.cmake:272 (message):. The package name passed to `find_package_handle_standard_args` (MYSQL) does. not match the name of the calling package (MySQL). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindMySQL.cmake:65 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:15 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:601 (find_package). CMakeLists.txt:168 (include). This warning is for project developers. Use -Wno-dev to suppress it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5245
https://github.com/root-project/root/pull/5245:528,safety,modul,modules,528,"Fix discrepancy with find_package_handle_standard_args and name of t…; …he calling package (CMake 3.17). Example: . CMake Warning (dev) at /usr/share/cmake-3.17/Modules/FindPackageHandleStandardArgs.cmake:272 (message):. The package name passed to `find_package_handle_standard_args` (MYSQL) does. not match the name of the calling package (MySQL). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindMySQL.cmake:65 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:15 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:601 (find_package). CMakeLists.txt:168 (include). This warning is for project developers. Use -Wno-dev to suppress it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5245
https://github.com/root-project/root/pull/5245:598,safety,modul,modules,598,"Fix discrepancy with find_package_handle_standard_args and name of t…; …he calling package (CMake 3.17). Example: . CMake Warning (dev) at /usr/share/cmake-3.17/Modules/FindPackageHandleStandardArgs.cmake:272 (message):. The package name passed to `find_package_handle_standard_args` (MYSQL) does. not match the name of the calling package (MySQL). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindMySQL.cmake:65 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:15 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:601 (find_package). CMakeLists.txt:168 (include). This warning is for project developers. Use -Wno-dev to suppress it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5245
https://github.com/root-project/root/pull/5245:662,safety,modul,modules,662,"Fix discrepancy with find_package_handle_standard_args and name of t…; …he calling package (CMake 3.17). Example: . CMake Warning (dev) at /usr/share/cmake-3.17/Modules/FindPackageHandleStandardArgs.cmake:272 (message):. The package name passed to `find_package_handle_standard_args` (MYSQL) does. not match the name of the calling package (MySQL). This can lead to. problems in calling code that expects `find_package` result variables. (e.g., `_FOUND`) to follow a certain pattern. Call Stack (most recent call first):. cmake/modules/FindMySQL.cmake:65 (find_package_handle_standard_args). cmake/modules/SearchInstalledSoftware.cmake:15 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:601 (find_package). CMakeLists.txt:168 (include). This warning is for project developers. Use -Wno-dev to suppress it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5245
https://github.com/root-project/root/pull/5246:13,deployability,depend,dependency,13,"[tree] avoid dependency from TreePlayer; One need virtual method in `TVirtualIndex` to extract Ndim from the. `TTreeFormula`. Otherwise one has link `Tree` lib again `TreePlayer` and. `Hist`, making circular dependency",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5246
https://github.com/root-project/root/pull/5246:208,deployability,depend,dependency,208,"[tree] avoid dependency from TreePlayer; One need virtual method in `TVirtualIndex` to extract Ndim from the. `TTreeFormula`. Otherwise one has link `Tree` lib again `TreePlayer` and. `Hist`, making circular dependency",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5246
https://github.com/root-project/root/pull/5246:13,integrability,depend,dependency,13,"[tree] avoid dependency from TreePlayer; One need virtual method in `TVirtualIndex` to extract Ndim from the. `TTreeFormula`. Otherwise one has link `Tree` lib again `TreePlayer` and. `Hist`, making circular dependency",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5246
https://github.com/root-project/root/pull/5246:208,integrability,depend,dependency,208,"[tree] avoid dependency from TreePlayer; One need virtual method in `TVirtualIndex` to extract Ndim from the. `TTreeFormula`. Otherwise one has link `Tree` lib again `TreePlayer` and. `Hist`, making circular dependency",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5246
https://github.com/root-project/root/pull/5246:13,modifiability,depend,dependency,13,"[tree] avoid dependency from TreePlayer; One need virtual method in `TVirtualIndex` to extract Ndim from the. `TTreeFormula`. Otherwise one has link `Tree` lib again `TreePlayer` and. `Hist`, making circular dependency",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5246
https://github.com/root-project/root/pull/5246:208,modifiability,depend,dependency,208,"[tree] avoid dependency from TreePlayer; One need virtual method in `TVirtualIndex` to extract Ndim from the. `TTreeFormula`. Otherwise one has link `Tree` lib again `TreePlayer` and. `Hist`, making circular dependency",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5246
https://github.com/root-project/root/pull/5246:7,safety,avoid,avoid,7,"[tree] avoid dependency from TreePlayer; One need virtual method in `TVirtualIndex` to extract Ndim from the. `TTreeFormula`. Otherwise one has link `Tree` lib again `TreePlayer` and. `Hist`, making circular dependency",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5246
https://github.com/root-project/root/pull/5246:13,safety,depend,dependency,13,"[tree] avoid dependency from TreePlayer; One need virtual method in `TVirtualIndex` to extract Ndim from the. `TTreeFormula`. Otherwise one has link `Tree` lib again `TreePlayer` and. `Hist`, making circular dependency",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5246
https://github.com/root-project/root/pull/5246:208,safety,depend,dependency,208,"[tree] avoid dependency from TreePlayer; One need virtual method in `TVirtualIndex` to extract Ndim from the. `TTreeFormula`. Otherwise one has link `Tree` lib again `TreePlayer` and. `Hist`, making circular dependency",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5246
https://github.com/root-project/root/pull/5246:13,testability,depend,dependency,13,"[tree] avoid dependency from TreePlayer; One need virtual method in `TVirtualIndex` to extract Ndim from the. `TTreeFormula`. Otherwise one has link `Tree` lib again `TreePlayer` and. `Hist`, making circular dependency",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5246
https://github.com/root-project/root/pull/5246:208,testability,depend,dependency,208,"[tree] avoid dependency from TreePlayer; One need virtual method in `TVirtualIndex` to extract Ndim from the. `TTreeFormula`. Otherwise one has link `Tree` lib again `TreePlayer` and. `Hist`, making circular dependency",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5246
https://github.com/root-project/root/pull/5247:37,deployability,build,build,37,[WIP][cmake] Add require-python-deps build option; The feature allows to fail during configure time if required Python. packages are not found. The flag require-python-deps is by default OFF.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5247
https://github.com/root-project/root/pull/5247:73,deployability,fail,fail,73,[WIP][cmake] Add require-python-deps build option; The feature allows to fail during configure time if required Python. packages are not found. The flag require-python-deps is by default OFF.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5247
https://github.com/root-project/root/pull/5247:85,integrability,configur,configure,85,[WIP][cmake] Add require-python-deps build option; The feature allows to fail during configure time if required Python. packages are not found. The flag require-python-deps is by default OFF.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5247
https://github.com/root-project/root/pull/5247:85,modifiability,configur,configure,85,[WIP][cmake] Add require-python-deps build option; The feature allows to fail during configure time if required Python. packages are not found. The flag require-python-deps is by default OFF.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5247
https://github.com/root-project/root/pull/5247:120,modifiability,pac,packages,120,[WIP][cmake] Add require-python-deps build option; The feature allows to fail during configure time if required Python. packages are not found. The flag require-python-deps is by default OFF.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5247
https://github.com/root-project/root/pull/5247:95,performance,time,time,95,[WIP][cmake] Add require-python-deps build option; The feature allows to fail during configure time if required Python. packages are not found. The flag require-python-deps is by default OFF.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5247
https://github.com/root-project/root/pull/5247:73,reliability,fail,fail,73,[WIP][cmake] Add require-python-deps build option; The feature allows to fail during configure time if required Python. packages are not found. The flag require-python-deps is by default OFF.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5247
https://github.com/root-project/root/pull/5247:85,security,configur,configure,85,[WIP][cmake] Add require-python-deps build option; The feature allows to fail during configure time if required Python. packages are not found. The flag require-python-deps is by default OFF.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5247
https://github.com/root-project/root/pull/5249:20,deployability,Build,Build,20,[CMake][Exp PyROOT] Build pyunittests for all the python versions;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5249
https://github.com/root-project/root/pull/5249:57,deployability,version,versions,57,[CMake][Exp PyROOT] Build pyunittests for all the python versions;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5249
https://github.com/root-project/root/pull/5249:57,integrability,version,versions,57,[CMake][Exp PyROOT] Build pyunittests for all the python versions;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5249
https://github.com/root-project/root/pull/5249:57,modifiability,version,versions,57,[CMake][Exp PyROOT] Build pyunittests for all the python versions;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5249
https://github.com/root-project/root/pull/5252:153,energy efficiency,load,load,153,[WIP][PyROOT] Move interoperability functions to ROOT.Numpy namespace; The new namespace allows us to import libraries more lazily. Added a test that we load exactly the libraries that we expect.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5252
https://github.com/root-project/root/pull/5252:19,interoperability,interoperab,interoperability,19,[WIP][PyROOT] Move interoperability functions to ROOT.Numpy namespace; The new namespace allows us to import libraries more lazily. Added a test that we load exactly the libraries that we expect.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5252
https://github.com/root-project/root/pull/5252:19,modifiability,interop,interoperability,19,[WIP][PyROOT] Move interoperability functions to ROOT.Numpy namespace; The new namespace allows us to import libraries more lazily. Added a test that we load exactly the libraries that we expect.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5252
https://github.com/root-project/root/pull/5252:153,performance,load,load,153,[WIP][PyROOT] Move interoperability functions to ROOT.Numpy namespace; The new namespace allows us to import libraries more lazily. Added a test that we load exactly the libraries that we expect.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5252
https://github.com/root-project/root/pull/5252:140,safety,test,test,140,[WIP][PyROOT] Move interoperability functions to ROOT.Numpy namespace; The new namespace allows us to import libraries more lazily. Added a test that we load exactly the libraries that we expect.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5252
https://github.com/root-project/root/pull/5252:140,testability,test,test,140,[WIP][PyROOT] Move interoperability functions to ROOT.Numpy namespace; The new namespace allows us to import libraries more lazily. Added a test that we load exactly the libraries that we expect.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5252
https://github.com/root-project/root/pull/5253:13,deployability,depend,dependency,13,"[tree] avoid dependency from TreePlayer; This is a backport of #5246 , which fixes the same issue in master (#5239 introduced the problem in v6.20 too).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5253
https://github.com/root-project/root/pull/5253:13,integrability,depend,dependency,13,"[tree] avoid dependency from TreePlayer; This is a backport of #5246 , which fixes the same issue in master (#5239 introduced the problem in v6.20 too).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5253
https://github.com/root-project/root/pull/5253:13,modifiability,depend,dependency,13,"[tree] avoid dependency from TreePlayer; This is a backport of #5246 , which fixes the same issue in master (#5239 introduced the problem in v6.20 too).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5253
https://github.com/root-project/root/pull/5253:7,safety,avoid,avoid,7,"[tree] avoid dependency from TreePlayer; This is a backport of #5246 , which fixes the same issue in master (#5239 introduced the problem in v6.20 too).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5253
https://github.com/root-project/root/pull/5253:13,safety,depend,dependency,13,"[tree] avoid dependency from TreePlayer; This is a backport of #5246 , which fixes the same issue in master (#5239 introduced the problem in v6.20 too).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5253
https://github.com/root-project/root/pull/5253:13,testability,depend,dependency,13,"[tree] avoid dependency from TreePlayer; This is a backport of #5246 , which fixes the same issue in master (#5239 introduced the problem in v6.20 too).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5253
https://github.com/root-project/root/pull/5254:203,deployability,build,build,203,"[windows] Do not use gtk includes for dictionary; While gtk sources are in ROOT source directory, one needs. to specify includes from ${CMAKE_SOURCE_DIR}. This is not good, while dictionaty intend to be build only from. ${CMAKE_BUILD_DIR}/include.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5254
https://github.com/root-project/root/pull/5254:112,interoperability,specif,specify,112,"[windows] Do not use gtk includes for dictionary; While gtk sources are in ROOT source directory, one needs. to specify includes from ${CMAKE_SOURCE_DIR}. This is not good, while dictionaty intend to be build only from. ${CMAKE_BUILD_DIR}/include.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5254
https://github.com/root-project/root/pull/5255:51,performance,time,time,51,Remove ifdef CINT protection in SQL includes; Long time ago this protection was introduced to avoid parsing of complex SQL includes. With a cling this protection no longer work properly. Remove it completely,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5255
https://github.com/root-project/root/pull/5255:94,safety,avoid,avoid,94,Remove ifdef CINT protection in SQL includes; Long time ago this protection was introduced to avoid parsing of complex SQL includes. With a cling this protection no longer work properly. Remove it completely,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5255
https://github.com/root-project/root/pull/5255:111,safety,compl,complex,111,Remove ifdef CINT protection in SQL includes; Long time ago this protection was introduced to avoid parsing of complex SQL includes. With a cling this protection no longer work properly. Remove it completely,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5255
https://github.com/root-project/root/pull/5255:197,safety,compl,completely,197,Remove ifdef CINT protection in SQL includes; Long time ago this protection was introduced to avoid parsing of complex SQL includes. With a cling this protection no longer work properly. Remove it completely,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5255
https://github.com/root-project/root/pull/5255:111,security,compl,complex,111,Remove ifdef CINT protection in SQL includes; Long time ago this protection was introduced to avoid parsing of complex SQL includes. With a cling this protection no longer work properly. Remove it completely,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5255
https://github.com/root-project/root/pull/5255:197,security,compl,completely,197,Remove ifdef CINT protection in SQL includes; Long time ago this protection was introduced to avoid parsing of complex SQL includes. With a cling this protection no longer work properly. Remove it completely,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5255
https://github.com/root-project/root/pull/5256:32,energy efficiency,load,loaded,32,[WIP][PyROOT] Add test checking loaded libraries after import;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5256
https://github.com/root-project/root/pull/5256:32,performance,load,loaded,32,[WIP][PyROOT] Add test checking loaded libraries after import;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5256
https://github.com/root-project/root/pull/5256:18,safety,test,test,18,[WIP][PyROOT] Add test checking loaded libraries after import;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5256
https://github.com/root-project/root/pull/5256:18,testability,test,test,18,[WIP][PyROOT] Add test checking loaded libraries after import;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5256
https://github.com/root-project/root/pull/5257:17,deployability,fail,failing,17,Disable one more failing test on Windows;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5257
https://github.com/root-project/root/pull/5257:17,reliability,fail,failing,17,Disable one more failing test on Windows;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5257
https://github.com/root-project/root/pull/5257:25,safety,test,test,25,Disable one more failing test on Windows;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5257
https://github.com/root-project/root/pull/5257:25,testability,test,test,25,Disable one more failing test on Windows;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5257
https://github.com/root-project/root/pull/5261:20,deployability,Build,Build,20,[CMake][Exp PyROOT] Build pyunittests for all the python versions - solution 2;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5261
https://github.com/root-project/root/pull/5261:57,deployability,version,versions,57,[CMake][Exp PyROOT] Build pyunittests for all the python versions - solution 2;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5261
https://github.com/root-project/root/pull/5261:57,integrability,version,versions,57,[CMake][Exp PyROOT] Build pyunittests for all the python versions - solution 2;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5261
https://github.com/root-project/root/pull/5261:57,modifiability,version,versions,57,[CMake][Exp PyROOT] Build pyunittests for all the python versions - solution 2;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5261
https://github.com/root-project/root/pull/5262:92,deployability,patch,patches,92,Apply fixes in MethodPyKeras for Python3 (backport in 6.20); This fixed ROOT-10630 for 6.20 patches and is a backport of #4909.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5262
https://github.com/root-project/root/pull/5262:92,safety,patch,patches,92,Apply fixes in MethodPyKeras for Python3 (backport in 6.20); This fixed ROOT-10630 for 6.20 patches and is a backport of #4909.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5262
https://github.com/root-project/root/pull/5262:92,security,patch,patches,92,Apply fixes in MethodPyKeras for Python3 (backport in 6.20); This fixed ROOT-10630 for 6.20 patches and is a backport of #4909.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5262
https://github.com/root-project/root/pull/5263:47,availability,error,error,47,"[TTreeProcMT] Fix missing space, add commas in error message;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5263
https://github.com/root-project/root/pull/5263:53,integrability,messag,message,53,"[TTreeProcMT] Fix missing space, add commas in error message;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5263
https://github.com/root-project/root/pull/5263:53,interoperability,messag,message,53,"[TTreeProcMT] Fix missing space, add commas in error message;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5263
https://github.com/root-project/root/pull/5263:47,performance,error,error,47,"[TTreeProcMT] Fix missing space, add commas in error message;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5263
https://github.com/root-project/root/pull/5263:47,safety,error,error,47,"[TTreeProcMT] Fix missing space, add commas in error message;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5263
https://github.com/root-project/root/pull/5263:47,usability,error,error,47,"[TTreeProcMT] Fix missing space, add commas in error message;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5263
https://github.com/root-project/root/pull/5264:126,integrability,sub,sub-directory,126,TDirectory::mkdir should always return the created directory.; Previously it would retun the parent directory in case where a sub-directory creation was requested. See https://root-forum.cern.ch/t/subdirectories/15665/11.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5264
https://github.com/root-project/root/pull/5264:197,integrability,sub,subdirectories,197,TDirectory::mkdir should always return the created directory.; Previously it would retun the parent directory in case where a sub-directory creation was requested. See https://root-forum.cern.ch/t/subdirectories/15665/11.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5264
https://github.com/root-project/root/pull/5265:131,availability,avail,available,131,[core] move TVirtualArray.h and TVirtualObject.h to core libs; These includes may be used in dictionaries and therefore should. be available already in core libs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5265
https://github.com/root-project/root/pull/5265:1,energy efficiency,core,core,1,[core] move TVirtualArray.h and TVirtualObject.h to core libs; These includes may be used in dictionaries and therefore should. be available already in core libs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5265
https://github.com/root-project/root/pull/5265:52,energy efficiency,core,core,52,[core] move TVirtualArray.h and TVirtualObject.h to core libs; These includes may be used in dictionaries and therefore should. be available already in core libs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5265
https://github.com/root-project/root/pull/5265:152,energy efficiency,core,core,152,[core] move TVirtualArray.h and TVirtualObject.h to core libs; These includes may be used in dictionaries and therefore should. be available already in core libs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5265
https://github.com/root-project/root/pull/5265:131,reliability,availab,available,131,[core] move TVirtualArray.h and TVirtualObject.h to core libs; These includes may be used in dictionaries and therefore should. be available already in core libs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5265
https://github.com/root-project/root/pull/5265:131,safety,avail,available,131,[core] move TVirtualArray.h and TVirtualObject.h to core libs; These includes may be used in dictionaries and therefore should. be available already in core libs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5265
https://github.com/root-project/root/pull/5265:131,security,availab,available,131,[core] move TVirtualArray.h and TVirtualObject.h to core libs; These includes may be used in dictionaries and therefore should. be available already in core libs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5265
https://github.com/root-project/root/pull/5267:35,interoperability,specif,specifiers,35,"[TreeProcMT] Remove useless static specifiers; These functions are only defined/used in the .cxx, as far as I know that `static` specifier is not required (and it looks weird).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5267
https://github.com/root-project/root/pull/5267:129,interoperability,specif,specifier,129,"[TreeProcMT] Remove useless static specifiers; These functions are only defined/used in the .cxx, as far as I know that `static` specifier is not required (and it looks weird).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5267
https://github.com/root-project/root/pull/5268:32,deployability,modul,modules,32,Add back excluded tests for C++ modules; CC: @vgvassilev,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5268
https://github.com/root-project/root/pull/5268:32,modifiability,modul,modules,32,Add back excluded tests for C++ modules; CC: @vgvassilev,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5268
https://github.com/root-project/root/pull/5268:18,safety,test,tests,18,Add back excluded tests for C++ modules; CC: @vgvassilev,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5268
https://github.com/root-project/root/pull/5268:32,safety,modul,modules,32,Add back excluded tests for C++ modules; CC: @vgvassilev,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5268
https://github.com/root-project/root/pull/5268:18,testability,test,tests,18,Add back excluded tests for C++ modules; CC: @vgvassilev,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5268
https://github.com/root-project/root/pull/5269:395,deployability,fail,fails,395,"More use of target_include_directories in cmake; In many sub-projects `target_include_directories` can be used. This ""hides"" special includes when doing dictionary generation. Also in few places do `include_directories` when includes required by dictionary. Extraction of part of #5181 as requested by @vgvassilev . I intentionally made many small commits to be able revert only some of them if fails",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5269
https://github.com/root-project/root/pull/5269:57,integrability,sub,sub-projects,57,"More use of target_include_directories in cmake; In many sub-projects `target_include_directories` can be used. This ""hides"" special includes when doing dictionary generation. Also in few places do `include_directories` when includes required by dictionary. Extraction of part of #5181 as requested by @vgvassilev . I intentionally made many small commits to be able revert only some of them if fails",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5269
https://github.com/root-project/root/pull/5269:395,reliability,fail,fails,395,"More use of target_include_directories in cmake; In many sub-projects `target_include_directories` can be used. This ""hides"" special includes when doing dictionary generation. Also in few places do `include_directories` when includes required by dictionary. Extraction of part of #5181 as requested by @vgvassilev . I intentionally made many small commits to be able revert only some of them if fails",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5269
https://github.com/root-project/root/pull/5270:75,deployability,log,logic,75,"[TreeProcMT] Add support for chain of trees with different names; Internal logic has been adapted to support the case in which TTreeProcessorMT. is acting on a TChain and the trees in the TChain do not all have the same name. Importantly, the fTreeName data-member changed name to fTreeNames and is now a. vector of strings rather than a single string. This fixes ROOT-10178.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5270
https://github.com/root-project/root/pull/5270:90,energy efficiency,adapt,adapted,90,"[TreeProcMT] Add support for chain of trees with different names; Internal logic has been adapted to support the case in which TTreeProcessorMT. is acting on a TChain and the trees in the TChain do not all have the same name. Importantly, the fTreeName data-member changed name to fTreeNames and is now a. vector of strings rather than a single string. This fixes ROOT-10178.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5270
https://github.com/root-project/root/pull/5270:90,integrability,adapt,adapted,90,"[TreeProcMT] Add support for chain of trees with different names; Internal logic has been adapted to support the case in which TTreeProcessorMT. is acting on a TChain and the trees in the TChain do not all have the same name. Importantly, the fTreeName data-member changed name to fTreeNames and is now a. vector of strings rather than a single string. This fixes ROOT-10178.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5270
https://github.com/root-project/root/pull/5270:90,interoperability,adapt,adapted,90,"[TreeProcMT] Add support for chain of trees with different names; Internal logic has been adapted to support the case in which TTreeProcessorMT. is acting on a TChain and the trees in the TChain do not all have the same name. Importantly, the fTreeName data-member changed name to fTreeNames and is now a. vector of strings rather than a single string. This fixes ROOT-10178.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5270
https://github.com/root-project/root/pull/5270:90,modifiability,adapt,adapted,90,"[TreeProcMT] Add support for chain of trees with different names; Internal logic has been adapted to support the case in which TTreeProcessorMT. is acting on a TChain and the trees in the TChain do not all have the same name. Importantly, the fTreeName data-member changed name to fTreeNames and is now a. vector of strings rather than a single string. This fixes ROOT-10178.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5270
https://github.com/root-project/root/pull/5270:75,safety,log,logic,75,"[TreeProcMT] Add support for chain of trees with different names; Internal logic has been adapted to support the case in which TTreeProcessorMT. is acting on a TChain and the trees in the TChain do not all have the same name. Importantly, the fTreeName data-member changed name to fTreeNames and is now a. vector of strings rather than a single string. This fixes ROOT-10178.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5270
https://github.com/root-project/root/pull/5270:75,security,log,logic,75,"[TreeProcMT] Add support for chain of trees with different names; Internal logic has been adapted to support the case in which TTreeProcessorMT. is acting on a TChain and the trees in the TChain do not all have the same name. Importantly, the fTreeName data-member changed name to fTreeNames and is now a. vector of strings rather than a single string. This fixes ROOT-10178.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5270
https://github.com/root-project/root/pull/5270:75,testability,log,logic,75,"[TreeProcMT] Add support for chain of trees with different names; Internal logic has been adapted to support the case in which TTreeProcessorMT. is acting on a TChain and the trees in the TChain do not all have the same name. Importantly, the fTreeName data-member changed name to fTreeNames and is now a. vector of strings rather than a single string. This fixes ROOT-10178.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5270
https://github.com/root-project/root/pull/5270:17,usability,support,support,17,"[TreeProcMT] Add support for chain of trees with different names; Internal logic has been adapted to support the case in which TTreeProcessorMT. is acting on a TChain and the trees in the TChain do not all have the same name. Importantly, the fTreeName data-member changed name to fTreeNames and is now a. vector of strings rather than a single string. This fixes ROOT-10178.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5270
https://github.com/root-project/root/pull/5270:101,usability,support,support,101,"[TreeProcMT] Add support for chain of trees with different names; Internal logic has been adapted to support the case in which TTreeProcessorMT. is acting on a TChain and the trees in the TChain do not all have the same name. Importantly, the fTreeName data-member changed name to fTreeNames and is now a. vector of strings rather than a single string. This fixes ROOT-10178.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5270
https://github.com/root-project/root/pull/5271:28,availability,failur,failure,28,[CMake] Add quotes to avoid failure on Windows node (?);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5271
https://github.com/root-project/root/pull/5271:28,deployability,fail,failure,28,[CMake] Add quotes to avoid failure on Windows node (?);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5271
https://github.com/root-project/root/pull/5271:28,performance,failur,failure,28,[CMake] Add quotes to avoid failure on Windows node (?);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5271
https://github.com/root-project/root/pull/5271:28,reliability,fail,failure,28,[CMake] Add quotes to avoid failure on Windows node (?);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5271
https://github.com/root-project/root/pull/5271:22,safety,avoid,avoid,22,[CMake] Add quotes to avoid failure on Windows node (?);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5271
https://github.com/root-project/root/pull/5272:190,deployability,fail,failing,190,[CmdLineUtils] Fix handling TObjects with multiple cycles.; Fix for https://sft.its.cern.ch/jira/browse/ROOT-10654 and https://sft.its.cern.ch/jira/browse/ROOT-10599. I tested locally for a failing rootmv command i had and it works.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5272
https://github.com/root-project/root/pull/5272:190,reliability,fail,failing,190,[CmdLineUtils] Fix handling TObjects with multiple cycles.; Fix for https://sft.its.cern.ch/jira/browse/ROOT-10654 and https://sft.its.cern.ch/jira/browse/ROOT-10599. I tested locally for a failing rootmv command i had and it works.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5272
https://github.com/root-project/root/pull/5272:169,safety,test,tested,169,[CmdLineUtils] Fix handling TObjects with multiple cycles.; Fix for https://sft.its.cern.ch/jira/browse/ROOT-10654 and https://sft.its.cern.ch/jira/browse/ROOT-10599. I tested locally for a failing rootmv command i had and it works.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5272
https://github.com/root-project/root/pull/5272:169,testability,test,tested,169,[CmdLineUtils] Fix handling TObjects with multiple cycles.; Fix for https://sft.its.cern.ch/jira/browse/ROOT-10654 and https://sft.its.cern.ch/jira/browse/ROOT-10599. I tested locally for a failing rootmv command i had and it works.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5272
https://github.com/root-project/root/pull/5272:205,usability,command,command,205,[CmdLineUtils] Fix handling TObjects with multiple cycles.; Fix for https://sft.its.cern.ch/jira/browse/ROOT-10654 and https://sft.its.cern.ch/jira/browse/ROOT-10599. I tested locally for a failing rootmv command i had and it works.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5272
https://github.com/root-project/root/pull/5273:73,usability,clear,clear,73,[TreeProcMT] Move static functions to anonymous namespace; ...to make it clear that we only use these functions in this same source file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5273
https://github.com/root-project/root/pull/5274:120,safety,test,tests,120,"Backport fix for ROOT-10178: ""[TreeProcMT] Add support for chain of trees with different names"" to v6.20; Corresponding tests have not been backported, let me know if you want them too.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5274
https://github.com/root-project/root/pull/5274:120,testability,test,tests,120,"Backport fix for ROOT-10178: ""[TreeProcMT] Add support for chain of trees with different names"" to v6.20; Corresponding tests have not been backported, let me know if you want them too.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5274
https://github.com/root-project/root/pull/5274:47,usability,support,support,47,"Backport fix for ROOT-10178: ""[TreeProcMT] Add support for chain of trees with different names"" to v6.20; Corresponding tests have not been backported, let me know if you want them too.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5274
https://github.com/root-project/root/pull/5275:120,safety,test,tests,120,"Backport fix for ROOT-10178: ""[TreeProcMT] Add support for chain of trees with different names"" to v6.18; Corresponding tests have not been backported, let me know if you want them too.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5275
https://github.com/root-project/root/pull/5275:120,testability,test,tests,120,"Backport fix for ROOT-10178: ""[TreeProcMT] Add support for chain of trees with different names"" to v6.18; Corresponding tests have not been backported, let me know if you want them too.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5275
https://github.com/root-project/root/pull/5275:47,usability,support,support,47,"Backport fix for ROOT-10178: ""[TreeProcMT] Add support for chain of trees with different names"" to v6.18; Corresponding tests have not been backported, let me know if you want them too.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5275
https://github.com/root-project/root/pull/5276:65,availability,down,downside,65,"[cmake] Turn on builtin_xrootd if external xrootd not found; The downside is that builtin_xrootd requires an internet connection. So by making users that expect ROOT + remote files to ""just work"" happy, we might upset users that need want a way to build ROOT offline. There is a precedent: TBB is in the exact same situation and builtin_tbb is on by default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5276
https://github.com/root-project/root/pull/5276:248,deployability,build,build,248,"[cmake] Turn on builtin_xrootd if external xrootd not found; The downside is that builtin_xrootd requires an internet connection. So by making users that expect ROOT + remote files to ""just work"" happy, we might upset users that need want a way to build ROOT offline. There is a precedent: TBB is in the exact same situation and builtin_tbb is on by default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5276
https://github.com/root-project/root/pull/5276:143,usability,user,users,143,"[cmake] Turn on builtin_xrootd if external xrootd not found; The downside is that builtin_xrootd requires an internet connection. So by making users that expect ROOT + remote files to ""just work"" happy, we might upset users that need want a way to build ROOT offline. There is a precedent: TBB is in the exact same situation and builtin_tbb is on by default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5276
https://github.com/root-project/root/pull/5276:218,usability,user,users,218,"[cmake] Turn on builtin_xrootd if external xrootd not found; The downside is that builtin_xrootd requires an internet connection. So by making users that expect ROOT + remote files to ""just work"" happy, we might upset users that need want a way to build ROOT offline. There is a precedent: TBB is in the exact same situation and builtin_tbb is on by default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5276
https://github.com/root-project/root/pull/5278:120,availability,consist,consistent,120,"[TreeProcMT] Add nThreads argument to all constructors; ...and add a test. The new argument is to make TTreeProcessorMT consistent with other. multi-threading interfaces, namely TThreadExecutor. This is the last. ingredient required to fix ROOT-10561.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5278
https://github.com/root-project/root/pull/5278:159,integrability,interfac,interfaces,159,"[TreeProcMT] Add nThreads argument to all constructors; ...and add a test. The new argument is to make TTreeProcessorMT consistent with other. multi-threading interfaces, namely TThreadExecutor. This is the last. ingredient required to fix ROOT-10561.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5278
https://github.com/root-project/root/pull/5278:159,interoperability,interfac,interfaces,159,"[TreeProcMT] Add nThreads argument to all constructors; ...and add a test. The new argument is to make TTreeProcessorMT consistent with other. multi-threading interfaces, namely TThreadExecutor. This is the last. ingredient required to fix ROOT-10561.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5278
https://github.com/root-project/root/pull/5278:159,modifiability,interfac,interfaces,159,"[TreeProcMT] Add nThreads argument to all constructors; ...and add a test. The new argument is to make TTreeProcessorMT consistent with other. multi-threading interfaces, namely TThreadExecutor. This is the last. ingredient required to fix ROOT-10561.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5278
https://github.com/root-project/root/pull/5278:143,performance,multi-thread,multi-threading,143,"[TreeProcMT] Add nThreads argument to all constructors; ...and add a test. The new argument is to make TTreeProcessorMT consistent with other. multi-threading interfaces, namely TThreadExecutor. This is the last. ingredient required to fix ROOT-10561.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5278
https://github.com/root-project/root/pull/5278:69,safety,test,test,69,"[TreeProcMT] Add nThreads argument to all constructors; ...and add a test. The new argument is to make TTreeProcessorMT consistent with other. multi-threading interfaces, namely TThreadExecutor. This is the last. ingredient required to fix ROOT-10561.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5278
https://github.com/root-project/root/pull/5278:69,testability,test,test,69,"[TreeProcMT] Add nThreads argument to all constructors; ...and add a test. The new argument is to make TTreeProcessorMT consistent with other. multi-threading interfaces, namely TThreadExecutor. This is the last. ingredient required to fix ROOT-10561.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5278
https://github.com/root-project/root/pull/5278:120,usability,consist,consistent,120,"[TreeProcMT] Add nThreads argument to all constructors; ...and add a test. The new argument is to make TTreeProcessorMT consistent with other. multi-threading interfaces, namely TThreadExecutor. This is the last. ingredient required to fix ROOT-10561.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5278
https://github.com/root-project/root/pull/5280:10,modifiability,variab,variable,10,Implement variable rebinning 2-D histogram classes (ROOT-5224); Implement variable rebinning 2-D histogram classes ([ROOT-5224](https://sft.its.cern.ch/jira/browse/ROOT-5224)). Implemented for TProfile2D as well.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5280
https://github.com/root-project/root/pull/5280:74,modifiability,variab,variable,74,Implement variable rebinning 2-D histogram classes (ROOT-5224); Implement variable rebinning 2-D histogram classes ([ROOT-5224](https://sft.its.cern.ch/jira/browse/ROOT-5224)). Implemented for TProfile2D as well.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5280
https://github.com/root-project/root/pull/5281:49,deployability,modul,modules,49,"[DF] Disable splitcoll_arrayview test if runtime modules are on; This test fails with runtime C++ modules on in v6.18, runs fine in v6.20 and above. Won't fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5281
https://github.com/root-project/root/pull/5281:75,deployability,fail,fails,75,"[DF] Disable splitcoll_arrayview test if runtime modules are on; This test fails with runtime C++ modules on in v6.18, runs fine in v6.20 and above. Won't fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5281
https://github.com/root-project/root/pull/5281:98,deployability,modul,modules,98,"[DF] Disable splitcoll_arrayview test if runtime modules are on; This test fails with runtime C++ modules on in v6.18, runs fine in v6.20 and above. Won't fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5281
https://github.com/root-project/root/pull/5281:49,modifiability,modul,modules,49,"[DF] Disable splitcoll_arrayview test if runtime modules are on; This test fails with runtime C++ modules on in v6.18, runs fine in v6.20 and above. Won't fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5281
https://github.com/root-project/root/pull/5281:98,modifiability,modul,modules,98,"[DF] Disable splitcoll_arrayview test if runtime modules are on; This test fails with runtime C++ modules on in v6.18, runs fine in v6.20 and above. Won't fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5281
https://github.com/root-project/root/pull/5281:75,reliability,fail,fails,75,"[DF] Disable splitcoll_arrayview test if runtime modules are on; This test fails with runtime C++ modules on in v6.18, runs fine in v6.20 and above. Won't fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5281
https://github.com/root-project/root/pull/5281:33,safety,test,test,33,"[DF] Disable splitcoll_arrayview test if runtime modules are on; This test fails with runtime C++ modules on in v6.18, runs fine in v6.20 and above. Won't fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5281
https://github.com/root-project/root/pull/5281:49,safety,modul,modules,49,"[DF] Disable splitcoll_arrayview test if runtime modules are on; This test fails with runtime C++ modules on in v6.18, runs fine in v6.20 and above. Won't fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5281
https://github.com/root-project/root/pull/5281:70,safety,test,test,70,"[DF] Disable splitcoll_arrayview test if runtime modules are on; This test fails with runtime C++ modules on in v6.18, runs fine in v6.20 and above. Won't fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5281
https://github.com/root-project/root/pull/5281:98,safety,modul,modules,98,"[DF] Disable splitcoll_arrayview test if runtime modules are on; This test fails with runtime C++ modules on in v6.18, runs fine in v6.20 and above. Won't fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5281
https://github.com/root-project/root/pull/5281:33,testability,test,test,33,"[DF] Disable splitcoll_arrayview test if runtime modules are on; This test fails with runtime C++ modules on in v6.18, runs fine in v6.20 and above. Won't fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5281
https://github.com/root-project/root/pull/5281:70,testability,test,test,70,"[DF] Disable splitcoll_arrayview test if runtime modules are on; This test fails with runtime C++ modules on in v6.18, runs fine in v6.20 and above. Won't fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5281
https://github.com/root-project/root/pull/5282:232,availability,operat,operators,232,"[clad] Bump clad version to v0.6.; The new release includes some improvements in Reverse mode:. * Reduce the quadratic cloning complexity to linear. * Support variable reassignments pontentially depending on control flow. * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`. * Allow assignments to array subscripts. * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`. * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5282
https://github.com/root-project/root/pull/5282:17,deployability,version,version,17,"[clad] Bump clad version to v0.6.; The new release includes some improvements in Reverse mode:. * Reduce the quadratic cloning complexity to linear. * Support variable reassignments pontentially depending on control flow. * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`. * Allow assignments to array subscripts. * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`. * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5282
https://github.com/root-project/root/pull/5282:43,deployability,releas,release,43,"[clad] Bump clad version to v0.6.; The new release includes some improvements in Reverse mode:. * Reduce the quadratic cloning complexity to linear. * Support variable reassignments pontentially depending on control flow. * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`. * Allow assignments to array subscripts. * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`. * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5282
https://github.com/root-project/root/pull/5282:195,deployability,depend,depending,195,"[clad] Bump clad version to v0.6.; The new release includes some improvements in Reverse mode:. * Reduce the quadratic cloning complexity to linear. * Support variable reassignments pontentially depending on control flow. * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`. * Allow assignments to array subscripts. * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`. * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5282
https://github.com/root-project/root/pull/5282:504,deployability,Releas,ReleaseNotes,504,"[clad] Bump clad version to v0.6.; The new release includes some improvements in Reverse mode:. * Reduce the quadratic cloning complexity to linear. * Support variable reassignments pontentially depending on control flow. * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`. * Allow assignments to array subscripts. * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`. * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5282
https://github.com/root-project/root/pull/5282:526,deployability,patch,patch,526,"[clad] Bump clad version to v0.6.; The new release includes some improvements in Reverse mode:. * Reduce the quadratic cloning complexity to linear. * Support variable reassignments pontentially depending on control flow. * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`. * Allow assignments to array subscripts. * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`. * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5282
https://github.com/root-project/root/pull/5282:546,deployability,upgrad,upgrade,546,"[clad] Bump clad version to v0.6.; The new release includes some improvements in Reverse mode:. * Reduce the quadratic cloning complexity to linear. * Support variable reassignments pontentially depending on control flow. * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`. * Allow assignments to array subscripts. * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`. * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5282
https://github.com/root-project/root/pull/5282:98,energy efficiency,Reduc,Reduce,98,"[clad] Bump clad version to v0.6.; The new release includes some improvements in Reverse mode:. * Reduce the quadratic cloning complexity to linear. * Support variable reassignments pontentially depending on control flow. * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`. * Allow assignments to array subscripts. * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`. * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5282
https://github.com/root-project/root/pull/5282:17,integrability,version,version,17,"[clad] Bump clad version to v0.6.; The new release includes some improvements in Reverse mode:. * Reduce the quadratic cloning complexity to linear. * Support variable reassignments pontentially depending on control flow. * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`. * Allow assignments to array subscripts. * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`. * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5282
https://github.com/root-project/root/pull/5282:195,integrability,depend,depending,195,"[clad] Bump clad version to v0.6.; The new release includes some improvements in Reverse mode:. * Reduce the quadratic cloning complexity to linear. * Support variable reassignments pontentially depending on control flow. * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`. * Allow assignments to array subscripts. * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`. * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5282
https://github.com/root-project/root/pull/5282:312,integrability,sub,subscripts,312,"[clad] Bump clad version to v0.6.; The new release includes some improvements in Reverse mode:. * Reduce the quadratic cloning complexity to linear. * Support variable reassignments pontentially depending on control flow. * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`. * Allow assignments to array subscripts. * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`. * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5282
https://github.com/root-project/root/pull/5282:17,modifiability,version,version,17,"[clad] Bump clad version to v0.6.; The new release includes some improvements in Reverse mode:. * Reduce the quadratic cloning complexity to linear. * Support variable reassignments pontentially depending on control flow. * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`. * Allow assignments to array subscripts. * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`. * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5282
https://github.com/root-project/root/pull/5282:159,modifiability,variab,variable,159,"[clad] Bump clad version to v0.6.; The new release includes some improvements in Reverse mode:. * Reduce the quadratic cloning complexity to linear. * Support variable reassignments pontentially depending on control flow. * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`. * Allow assignments to array subscripts. * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`. * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5282
https://github.com/root-project/root/pull/5282:195,modifiability,depend,depending,195,"[clad] Bump clad version to v0.6.; The new release includes some improvements in Reverse mode:. * Reduce the quadratic cloning complexity to linear. * Support variable reassignments pontentially depending on control flow. * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`. * Allow assignments to array subscripts. * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`. * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5282
https://github.com/root-project/root/pull/5282:546,modifiability,upgrad,upgrade,546,"[clad] Bump clad version to v0.6.; The new release includes some improvements in Reverse mode:. * Reduce the quadratic cloning complexity to linear. * Support variable reassignments pontentially depending on control flow. * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`. * Allow assignments to array subscripts. * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`. * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5282
https://github.com/root-project/root/pull/5282:127,safety,compl,complexity,127,"[clad] Bump clad version to v0.6.; The new release includes some improvements in Reverse mode:. * Reduce the quadratic cloning complexity to linear. * Support variable reassignments pontentially depending on control flow. * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`. * Allow assignments to array subscripts. * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`. * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5282
https://github.com/root-project/root/pull/5282:195,safety,depend,depending,195,"[clad] Bump clad version to v0.6.; The new release includes some improvements in Reverse mode:. * Reduce the quadratic cloning complexity to linear. * Support variable reassignments pontentially depending on control flow. * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`. * Allow assignments to array subscripts. * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`. * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5282
https://github.com/root-project/root/pull/5282:526,safety,patch,patch,526,"[clad] Bump clad version to v0.6.; The new release includes some improvements in Reverse mode:. * Reduce the quadratic cloning complexity to linear. * Support variable reassignments pontentially depending on control flow. * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`. * Allow assignments to array subscripts. * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`. * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5282
https://github.com/root-project/root/pull/5282:127,security,compl,complexity,127,"[clad] Bump clad version to v0.6.; The new release includes some improvements in Reverse mode:. * Reduce the quadratic cloning complexity to linear. * Support variable reassignments pontentially depending on control flow. * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`. * Allow assignments to array subscripts. * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`. * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5282
https://github.com/root-project/root/pull/5282:208,security,control,control,208,"[clad] Bump clad version to v0.6.; The new release includes some improvements in Reverse mode:. * Reduce the quadratic cloning complexity to linear. * Support variable reassignments pontentially depending on control flow. * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`. * Allow assignments to array subscripts. * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`. * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5282
https://github.com/root-project/root/pull/5282:526,security,patch,patch,526,"[clad] Bump clad version to v0.6.; The new release includes some improvements in Reverse mode:. * Reduce the quadratic cloning complexity to linear. * Support variable reassignments pontentially depending on control flow. * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`. * Allow assignments to array subscripts. * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`. * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5282
https://github.com/root-project/root/pull/5282:195,testability,depend,depending,195,"[clad] Bump clad version to v0.6.; The new release includes some improvements in Reverse mode:. * Reduce the quadratic cloning complexity to linear. * Support variable reassignments pontentially depending on control flow. * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`. * Allow assignments to array subscripts. * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`. * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5282
https://github.com/root-project/root/pull/5282:208,testability,control,control,208,"[clad] Bump clad version to v0.6.; The new release includes some improvements in Reverse mode:. * Reduce the quadratic cloning complexity to linear. * Support variable reassignments pontentially depending on control flow. * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`. * Allow assignments to array subscripts. * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`. * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5282
https://github.com/root-project/root/pull/5282:151,usability,Support,Support,151,"[clad] Bump clad version to v0.6.; The new release includes some improvements in Reverse mode:. * Reduce the quadratic cloning complexity to linear. * Support variable reassignments pontentially depending on control flow. * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`. * Allow assignments to array subscripts. * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`. * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5282
https://github.com/root-project/root/pull/5282:224,usability,Support,Support,224,"[clad] Bump clad version to v0.6.; The new release includes some improvements in Reverse mode:. * Reduce the quadratic cloning complexity to linear. * Support variable reassignments pontentially depending on control flow. * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`. * Allow assignments to array subscripts. * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`. * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5282
https://github.com/root-project/root/pull/5282:326,usability,Support,Support,326,"[clad] Bump clad version to v0.6.; The new release includes some improvements in Reverse mode:. * Reduce the quadratic cloning complexity to linear. * Support variable reassignments pontentially depending on control flow. * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`. * Allow assignments to array subscripts. * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`. * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5282
https://github.com/root-project/root/pull/5282:569,usability,support,supports,569,"[clad] Bump clad version to v0.6.; The new release includes some improvements in Reverse mode:. * Reduce the quadratic cloning complexity to linear. * Support variable reassignments pontentially depending on control flow. * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`. * Allow assignments to array subscripts. * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`. * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5282
https://github.com/root-project/root/pull/5283:11,modifiability,Refact,Refactor,11,[metacling]Refactor Property into base class by passing reference; @vgvassilev,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5283
https://github.com/root-project/root/pull/5283:11,performance,Refactor,Refactor,11,[metacling]Refactor Property into base class by passing reference; @vgvassilev,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5283
https://github.com/root-project/root/pull/5284:44,deployability,modul,modulemaps,44,[Experimental][WIP]Remove some headers from modulemaps that are not present in Windows; This PR removes certain header files with are not present in Windows from the modulemaps files. It is an experimental change. Do not merge.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5284
https://github.com/root-project/root/pull/5284:166,deployability,modul,modulemaps,166,[Experimental][WIP]Remove some headers from modulemaps that are not present in Windows; This PR removes certain header files with are not present in Windows from the modulemaps files. It is an experimental change. Do not merge.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5284
https://github.com/root-project/root/pull/5284:44,modifiability,modul,modulemaps,44,[Experimental][WIP]Remove some headers from modulemaps that are not present in Windows; This PR removes certain header files with are not present in Windows from the modulemaps files. It is an experimental change. Do not merge.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5284
https://github.com/root-project/root/pull/5284:166,modifiability,modul,modulemaps,166,[Experimental][WIP]Remove some headers from modulemaps that are not present in Windows; This PR removes certain header files with are not present in Windows from the modulemaps files. It is an experimental change. Do not merge.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5284
https://github.com/root-project/root/pull/5284:44,safety,modul,modulemaps,44,[Experimental][WIP]Remove some headers from modulemaps that are not present in Windows; This PR removes certain header files with are not present in Windows from the modulemaps files. It is an experimental change. Do not merge.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5284
https://github.com/root-project/root/pull/5284:166,safety,modul,modulemaps,166,[Experimental][WIP]Remove some headers from modulemaps that are not present in Windows; This PR removes certain header files with are not present in Windows from the modulemaps files. It is an experimental change. Do not merge.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5284
https://github.com/root-project/root/pull/5286:10,deployability,Updat,Update,10,[skip-ci] Update v6.22 release notes;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5286
https://github.com/root-project/root/pull/5286:23,deployability,releas,release,23,[skip-ci] Update v6.22 release notes;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5286
https://github.com/root-project/root/pull/5286:10,safety,Updat,Update,10,[skip-ci] Update v6.22 release notes;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5286
https://github.com/root-project/root/pull/5286:10,security,Updat,Update,10,[skip-ci] Update v6.22 release notes;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5286
https://github.com/root-project/root/pull/5287:13,availability,error,errors,13,"[RS] Correct errors of asimov dataset.; When creating the Asimov dataset, the errors in each bin were N, that. is, 100%. Now, they are set to sqrt(N).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5287
https://github.com/root-project/root/pull/5287:78,availability,error,errors,78,"[RS] Correct errors of asimov dataset.; When creating the Asimov dataset, the errors in each bin were N, that. is, 100%. Now, they are set to sqrt(N).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5287
https://github.com/root-project/root/pull/5287:13,performance,error,errors,13,"[RS] Correct errors of asimov dataset.; When creating the Asimov dataset, the errors in each bin were N, that. is, 100%. Now, they are set to sqrt(N).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5287
https://github.com/root-project/root/pull/5287:78,performance,error,errors,78,"[RS] Correct errors of asimov dataset.; When creating the Asimov dataset, the errors in each bin were N, that. is, 100%. Now, they are set to sqrt(N).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5287
https://github.com/root-project/root/pull/5287:13,safety,error,errors,13,"[RS] Correct errors of asimov dataset.; When creating the Asimov dataset, the errors in each bin were N, that. is, 100%. Now, they are set to sqrt(N).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5287
https://github.com/root-project/root/pull/5287:78,safety,error,errors,78,"[RS] Correct errors of asimov dataset.; When creating the Asimov dataset, the errors in each bin were N, that. is, 100%. Now, they are set to sqrt(N).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5287
https://github.com/root-project/root/pull/5287:13,usability,error,errors,13,"[RS] Correct errors of asimov dataset.; When creating the Asimov dataset, the errors in each bin were N, that. is, 100%. Now, they are set to sqrt(N).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5287
https://github.com/root-project/root/pull/5287:78,usability,error,errors,78,"[RS] Correct errors of asimov dataset.; When creating the Asimov dataset, the errors in each bin were N, that. is, 100%. Now, they are set to sqrt(N).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5287
https://github.com/root-project/root/pull/5288:279,deployability,patch,patch,279,"[IO] Always protect MT usage of TFile; Currently, some sections of TFile::ReadProcessID are only protected. from concurrent access if Internal::IsParTreeProcessingEnabled(). is true. The only entity that enables ParTreeProcessing in ROOT. is TTreeProcessorMT::Process. With this patch, concurrent access to TFile::ReadProcessID is always protected. Rationale: if TTreeProcessorMT::Process needs that protection, everyone needs it. Note that `TParTreeProcessing` is unused after this change, so if you agree the change can go in, I'll add a commit that removes `TParTreeProcessing` from ROOT. If you _don't_ agree the change can go in: why does `TTreeProcessorMT::Process` need this protection but other usecases do not (note that `TParTreeProcessing` is in `ROOT::Internal`, so we do not expect users to activate these locks)?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5288
https://github.com/root-project/root/pull/5288:39,energy efficiency,Current,Currently,39,"[IO] Always protect MT usage of TFile; Currently, some sections of TFile::ReadProcessID are only protected. from concurrent access if Internal::IsParTreeProcessingEnabled(). is true. The only entity that enables ParTreeProcessing in ROOT. is TTreeProcessorMT::Process. With this patch, concurrent access to TFile::ReadProcessID is always protected. Rationale: if TTreeProcessorMT::Process needs that protection, everyone needs it. Note that `TParTreeProcessing` is unused after this change, so if you agree the change can go in, I'll add a commit that removes `TParTreeProcessing` from ROOT. If you _don't_ agree the change can go in: why does `TTreeProcessorMT::Process` need this protection but other usecases do not (note that `TParTreeProcessing` is in `ROOT::Internal`, so we do not expect users to activate these locks)?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5288
https://github.com/root-project/root/pull/5288:113,performance,concurren,concurrent,113,"[IO] Always protect MT usage of TFile; Currently, some sections of TFile::ReadProcessID are only protected. from concurrent access if Internal::IsParTreeProcessingEnabled(). is true. The only entity that enables ParTreeProcessing in ROOT. is TTreeProcessorMT::Process. With this patch, concurrent access to TFile::ReadProcessID is always protected. Rationale: if TTreeProcessorMT::Process needs that protection, everyone needs it. Note that `TParTreeProcessing` is unused after this change, so if you agree the change can go in, I'll add a commit that removes `TParTreeProcessing` from ROOT. If you _don't_ agree the change can go in: why does `TTreeProcessorMT::Process` need this protection but other usecases do not (note that `TParTreeProcessing` is in `ROOT::Internal`, so we do not expect users to activate these locks)?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5288
https://github.com/root-project/root/pull/5288:286,performance,concurren,concurrent,286,"[IO] Always protect MT usage of TFile; Currently, some sections of TFile::ReadProcessID are only protected. from concurrent access if Internal::IsParTreeProcessingEnabled(). is true. The only entity that enables ParTreeProcessing in ROOT. is TTreeProcessorMT::Process. With this patch, concurrent access to TFile::ReadProcessID is always protected. Rationale: if TTreeProcessorMT::Process needs that protection, everyone needs it. Note that `TParTreeProcessing` is unused after this change, so if you agree the change can go in, I'll add a commit that removes `TParTreeProcessing` from ROOT. If you _don't_ agree the change can go in: why does `TTreeProcessorMT::Process` need this protection but other usecases do not (note that `TParTreeProcessing` is in `ROOT::Internal`, so we do not expect users to activate these locks)?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5288
https://github.com/root-project/root/pull/5288:819,performance,lock,locks,819,"[IO] Always protect MT usage of TFile; Currently, some sections of TFile::ReadProcessID are only protected. from concurrent access if Internal::IsParTreeProcessingEnabled(). is true. The only entity that enables ParTreeProcessing in ROOT. is TTreeProcessorMT::Process. With this patch, concurrent access to TFile::ReadProcessID is always protected. Rationale: if TTreeProcessorMT::Process needs that protection, everyone needs it. Note that `TParTreeProcessing` is unused after this change, so if you agree the change can go in, I'll add a commit that removes `TParTreeProcessing` from ROOT. If you _don't_ agree the change can go in: why does `TTreeProcessorMT::Process` need this protection but other usecases do not (note that `TParTreeProcessing` is in `ROOT::Internal`, so we do not expect users to activate these locks)?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5288
https://github.com/root-project/root/pull/5288:639,reliability,doe,does,639,"[IO] Always protect MT usage of TFile; Currently, some sections of TFile::ReadProcessID are only protected. from concurrent access if Internal::IsParTreeProcessingEnabled(). is true. The only entity that enables ParTreeProcessing in ROOT. is TTreeProcessorMT::Process. With this patch, concurrent access to TFile::ReadProcessID is always protected. Rationale: if TTreeProcessorMT::Process needs that protection, everyone needs it. Note that `TParTreeProcessing` is unused after this change, so if you agree the change can go in, I'll add a commit that removes `TParTreeProcessing` from ROOT. If you _don't_ agree the change can go in: why does `TTreeProcessorMT::Process` need this protection but other usecases do not (note that `TParTreeProcessing` is in `ROOT::Internal`, so we do not expect users to activate these locks)?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5288
https://github.com/root-project/root/pull/5288:279,safety,patch,patch,279,"[IO] Always protect MT usage of TFile; Currently, some sections of TFile::ReadProcessID are only protected. from concurrent access if Internal::IsParTreeProcessingEnabled(). is true. The only entity that enables ParTreeProcessing in ROOT. is TTreeProcessorMT::Process. With this patch, concurrent access to TFile::ReadProcessID is always protected. Rationale: if TTreeProcessorMT::Process needs that protection, everyone needs it. Note that `TParTreeProcessing` is unused after this change, so if you agree the change can go in, I'll add a commit that removes `TParTreeProcessing` from ROOT. If you _don't_ agree the change can go in: why does `TTreeProcessorMT::Process` need this protection but other usecases do not (note that `TParTreeProcessing` is in `ROOT::Internal`, so we do not expect users to activate these locks)?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5288
https://github.com/root-project/root/pull/5288:124,security,access,access,124,"[IO] Always protect MT usage of TFile; Currently, some sections of TFile::ReadProcessID are only protected. from concurrent access if Internal::IsParTreeProcessingEnabled(). is true. The only entity that enables ParTreeProcessing in ROOT. is TTreeProcessorMT::Process. With this patch, concurrent access to TFile::ReadProcessID is always protected. Rationale: if TTreeProcessorMT::Process needs that protection, everyone needs it. Note that `TParTreeProcessing` is unused after this change, so if you agree the change can go in, I'll add a commit that removes `TParTreeProcessing` from ROOT. If you _don't_ agree the change can go in: why does `TTreeProcessorMT::Process` need this protection but other usecases do not (note that `TParTreeProcessing` is in `ROOT::Internal`, so we do not expect users to activate these locks)?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5288
https://github.com/root-project/root/pull/5288:279,security,patch,patch,279,"[IO] Always protect MT usage of TFile; Currently, some sections of TFile::ReadProcessID are only protected. from concurrent access if Internal::IsParTreeProcessingEnabled(). is true. The only entity that enables ParTreeProcessing in ROOT. is TTreeProcessorMT::Process. With this patch, concurrent access to TFile::ReadProcessID is always protected. Rationale: if TTreeProcessorMT::Process needs that protection, everyone needs it. Note that `TParTreeProcessing` is unused after this change, so if you agree the change can go in, I'll add a commit that removes `TParTreeProcessing` from ROOT. If you _don't_ agree the change can go in: why does `TTreeProcessorMT::Process` need this protection but other usecases do not (note that `TParTreeProcessing` is in `ROOT::Internal`, so we do not expect users to activate these locks)?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5288
https://github.com/root-project/root/pull/5288:297,security,access,access,297,"[IO] Always protect MT usage of TFile; Currently, some sections of TFile::ReadProcessID are only protected. from concurrent access if Internal::IsParTreeProcessingEnabled(). is true. The only entity that enables ParTreeProcessing in ROOT. is TTreeProcessorMT::Process. With this patch, concurrent access to TFile::ReadProcessID is always protected. Rationale: if TTreeProcessorMT::Process needs that protection, everyone needs it. Note that `TParTreeProcessing` is unused after this change, so if you agree the change can go in, I'll add a commit that removes `TParTreeProcessing` from ROOT. If you _don't_ agree the change can go in: why does `TTreeProcessorMT::Process` need this protection but other usecases do not (note that `TParTreeProcessing` is in `ROOT::Internal`, so we do not expect users to activate these locks)?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5288
https://github.com/root-project/root/pull/5288:819,security,lock,locks,819,"[IO] Always protect MT usage of TFile; Currently, some sections of TFile::ReadProcessID are only protected. from concurrent access if Internal::IsParTreeProcessingEnabled(). is true. The only entity that enables ParTreeProcessing in ROOT. is TTreeProcessorMT::Process. With this patch, concurrent access to TFile::ReadProcessID is always protected. Rationale: if TTreeProcessorMT::Process needs that protection, everyone needs it. Note that `TParTreeProcessing` is unused after this change, so if you agree the change can go in, I'll add a commit that removes `TParTreeProcessing` from ROOT. If you _don't_ agree the change can go in: why does `TTreeProcessorMT::Process` need this protection but other usecases do not (note that `TParTreeProcessing` is in `ROOT::Internal`, so we do not expect users to activate these locks)?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5288
https://github.com/root-project/root/pull/5288:795,usability,user,users,795,"[IO] Always protect MT usage of TFile; Currently, some sections of TFile::ReadProcessID are only protected. from concurrent access if Internal::IsParTreeProcessingEnabled(). is true. The only entity that enables ParTreeProcessing in ROOT. is TTreeProcessorMT::Process. With this patch, concurrent access to TFile::ReadProcessID is always protected. Rationale: if TTreeProcessorMT::Process needs that protection, everyone needs it. Note that `TParTreeProcessing` is unused after this change, so if you agree the change can go in, I'll add a commit that removes `TParTreeProcessing` from ROOT. If you _don't_ agree the change can go in: why does `TTreeProcessorMT::Process` need this protection but other usecases do not (note that `TParTreeProcessing` is in `ROOT::Internal`, so we do not expect users to activate these locks)?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5288
https://github.com/root-project/root/pull/5289:138,safety,prevent,prevents,138,"[MT] Call EnableThreadSafety from TThreadExecutor's ctor; It simplifies usage of TThreadExecutor and, consequently, TTreeProcessorMT, and prevents bugs due to users forgetting to make the call.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5289
https://github.com/root-project/root/pull/5289:138,security,preven,prevents,138,"[MT] Call EnableThreadSafety from TThreadExecutor's ctor; It simplifies usage of TThreadExecutor and, consequently, TTreeProcessorMT, and prevents bugs due to users forgetting to make the call.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5289
https://github.com/root-project/root/pull/5289:61,testability,simpl,simplifies,61,"[MT] Call EnableThreadSafety from TThreadExecutor's ctor; It simplifies usage of TThreadExecutor and, consequently, TTreeProcessorMT, and prevents bugs due to users forgetting to make the call.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5289
https://github.com/root-project/root/pull/5289:61,usability,simpl,simplifies,61,"[MT] Call EnableThreadSafety from TThreadExecutor's ctor; It simplifies usage of TThreadExecutor and, consequently, TTreeProcessorMT, and prevents bugs due to users forgetting to make the call.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5289
https://github.com/root-project/root/pull/5289:159,usability,user,users,159,"[MT] Call EnableThreadSafety from TThreadExecutor's ctor; It simplifies usage of TThreadExecutor and, consequently, TTreeProcessorMT, and prevents bugs due to users forgetting to make the call.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5289
https://github.com/root-project/root/pull/5290:112,performance,multi-thread,multi-threading,112,"[MT] Deprecate GetImplicitMTPoolSize in favor of GetThreadPoolSize ; TThreadExecutor does not activate implicit multi-threading. (ROOT::IsImplicitMTEnabled() is false after constructing a. TThreadExecutor) but it does change the size of the thread-pool, which. is not only used by implicit multi-threading features, but also by. TThreadExecutor and TTreeProcessorMT. So the thread pool is not the. ""ImplicitMTPool"" but it's really ROOT's one and only pool of threads,. so we prefer ROOT::GetThreadPoolSize to GetImplicitMTPoolSize.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5290
https://github.com/root-project/root/pull/5290:290,performance,multi-thread,multi-threading,290,"[MT] Deprecate GetImplicitMTPoolSize in favor of GetThreadPoolSize ; TThreadExecutor does not activate implicit multi-threading. (ROOT::IsImplicitMTEnabled() is false after constructing a. TThreadExecutor) but it does change the size of the thread-pool, which. is not only used by implicit multi-threading features, but also by. TThreadExecutor and TTreeProcessorMT. So the thread pool is not the. ""ImplicitMTPool"" but it's really ROOT's one and only pool of threads,. so we prefer ROOT::GetThreadPoolSize to GetImplicitMTPoolSize.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5290
https://github.com/root-project/root/pull/5290:85,reliability,doe,does,85,"[MT] Deprecate GetImplicitMTPoolSize in favor of GetThreadPoolSize ; TThreadExecutor does not activate implicit multi-threading. (ROOT::IsImplicitMTEnabled() is false after constructing a. TThreadExecutor) but it does change the size of the thread-pool, which. is not only used by implicit multi-threading features, but also by. TThreadExecutor and TTreeProcessorMT. So the thread pool is not the. ""ImplicitMTPool"" but it's really ROOT's one and only pool of threads,. so we prefer ROOT::GetThreadPoolSize to GetImplicitMTPoolSize.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5290
https://github.com/root-project/root/pull/5290:213,reliability,doe,does,213,"[MT] Deprecate GetImplicitMTPoolSize in favor of GetThreadPoolSize ; TThreadExecutor does not activate implicit multi-threading. (ROOT::IsImplicitMTEnabled() is false after constructing a. TThreadExecutor) but it does change the size of the thread-pool, which. is not only used by implicit multi-threading features, but also by. TThreadExecutor and TTreeProcessorMT. So the thread pool is not the. ""ImplicitMTPool"" but it's really ROOT's one and only pool of threads,. so we prefer ROOT::GetThreadPoolSize to GetImplicitMTPoolSize.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5290
https://github.com/root-project/root/pull/5290:475,usability,prefer,prefer,475,"[MT] Deprecate GetImplicitMTPoolSize in favor of GetThreadPoolSize ; TThreadExecutor does not activate implicit multi-threading. (ROOT::IsImplicitMTEnabled() is false after constructing a. TThreadExecutor) but it does change the size of the thread-pool, which. is not only used by implicit multi-threading features, but also by. TThreadExecutor and TTreeProcessorMT. So the thread pool is not the. ""ImplicitMTPool"" but it's really ROOT's one and only pool of threads,. so we prefer ROOT::GetThreadPoolSize to GetImplicitMTPoolSize.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5290
https://github.com/root-project/root/pull/5291:28,usability,cursor,cursor,28,"[Cocoa] Implement crosshair cursor on MacOS Catalina; The graphics cursor type ""crosshair"" did not work on MacOS Catalina. . This was reported on the forum here: https://root-forum.cern.ch/t/crosshair-not-working-on-mac-os-catalina/ . To see the crosshair cursor type select ""SetCrosshair"" in the canvas pop up menu. . This fix was provided by Timur Pocheptsoff (Qt Company).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5291
https://github.com/root-project/root/pull/5291:67,usability,cursor,cursor,67,"[Cocoa] Implement crosshair cursor on MacOS Catalina; The graphics cursor type ""crosshair"" did not work on MacOS Catalina. . This was reported on the forum here: https://root-forum.cern.ch/t/crosshair-not-working-on-mac-os-catalina/ . To see the crosshair cursor type select ""SetCrosshair"" in the canvas pop up menu. . This fix was provided by Timur Pocheptsoff (Qt Company).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5291
https://github.com/root-project/root/pull/5291:256,usability,cursor,cursor,256,"[Cocoa] Implement crosshair cursor on MacOS Catalina; The graphics cursor type ""crosshair"" did not work on MacOS Catalina. . This was reported on the forum here: https://root-forum.cern.ch/t/crosshair-not-working-on-mac-os-catalina/ . To see the crosshair cursor type select ""SetCrosshair"" in the canvas pop up menu. . This fix was provided by Timur Pocheptsoff (Qt Company).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5291
https://github.com/root-project/root/pull/5291:311,usability,menu,menu,311,"[Cocoa] Implement crosshair cursor on MacOS Catalina; The graphics cursor type ""crosshair"" did not work on MacOS Catalina. . This was reported on the forum here: https://root-forum.cern.ch/t/crosshair-not-working-on-mac-os-catalina/ . To see the crosshair cursor type select ""SetCrosshair"" in the canvas pop up menu. . This fix was provided by Timur Pocheptsoff (Qt Company).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5291
https://github.com/root-project/root/pull/5292:76,safety,test,test,76,[DF] Throw if thread pool size changed after RDF construction; ...and add a test. This fixes ROOT-10346.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5292
https://github.com/root-project/root/pull/5292:76,testability,test,test,76,[DF] Throw if thread pool size changed after RDF construction; ...and add a test. This fixes ROOT-10346.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5292
https://github.com/root-project/root/pull/5293:143,availability,slo,slots,143,"[DF] Ensure TTreeProcessorMT's pool is created with expected number of threads; At construction time, RDataFrame sets its number of processing slots. equal to ROOT::GetImplicitMTPoolSize(). We always want to. construct TTreeProcessorMT's thread pool with a size equal to. RDF::GetNSlots(). Besides being more robus (less reliance on shared global state),. this patch guarantees that if the number of threads in the thread pool. is different than what RDF requests, we get a warning from TThreadExecutor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5293
https://github.com/root-project/root/pull/5293:347,availability,state,state,347,"[DF] Ensure TTreeProcessorMT's pool is created with expected number of threads; At construction time, RDataFrame sets its number of processing slots. equal to ROOT::GetImplicitMTPoolSize(). We always want to. construct TTreeProcessorMT's thread pool with a size equal to. RDF::GetNSlots(). Besides being more robus (less reliance on shared global state),. this patch guarantees that if the number of threads in the thread pool. is different than what RDF requests, we get a warning from TThreadExecutor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5293
https://github.com/root-project/root/pull/5293:361,deployability,patch,patch,361,"[DF] Ensure TTreeProcessorMT's pool is created with expected number of threads; At construction time, RDataFrame sets its number of processing slots. equal to ROOT::GetImplicitMTPoolSize(). We always want to. construct TTreeProcessorMT's thread pool with a size equal to. RDF::GetNSlots(). Besides being more robus (less reliance on shared global state),. this patch guarantees that if the number of threads in the thread pool. is different than what RDF requests, we get a warning from TThreadExecutor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5293
https://github.com/root-project/root/pull/5293:347,integrability,state,state,347,"[DF] Ensure TTreeProcessorMT's pool is created with expected number of threads; At construction time, RDataFrame sets its number of processing slots. equal to ROOT::GetImplicitMTPoolSize(). We always want to. construct TTreeProcessorMT's thread pool with a size equal to. RDF::GetNSlots(). Besides being more robus (less reliance on shared global state),. this patch guarantees that if the number of threads in the thread pool. is different than what RDF requests, we get a warning from TThreadExecutor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5293
https://github.com/root-project/root/pull/5293:333,interoperability,share,shared,333,"[DF] Ensure TTreeProcessorMT's pool is created with expected number of threads; At construction time, RDataFrame sets its number of processing slots. equal to ROOT::GetImplicitMTPoolSize(). We always want to. construct TTreeProcessorMT's thread pool with a size equal to. RDF::GetNSlots(). Besides being more robus (less reliance on shared global state),. this patch guarantees that if the number of threads in the thread pool. is different than what RDF requests, we get a warning from TThreadExecutor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5293
https://github.com/root-project/root/pull/5293:96,performance,time,time,96,"[DF] Ensure TTreeProcessorMT's pool is created with expected number of threads; At construction time, RDataFrame sets its number of processing slots. equal to ROOT::GetImplicitMTPoolSize(). We always want to. construct TTreeProcessorMT's thread pool with a size equal to. RDF::GetNSlots(). Besides being more robus (less reliance on shared global state),. this patch guarantees that if the number of threads in the thread pool. is different than what RDF requests, we get a warning from TThreadExecutor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5293
https://github.com/root-project/root/pull/5293:143,reliability,slo,slots,143,"[DF] Ensure TTreeProcessorMT's pool is created with expected number of threads; At construction time, RDataFrame sets its number of processing slots. equal to ROOT::GetImplicitMTPoolSize(). We always want to. construct TTreeProcessorMT's thread pool with a size equal to. RDF::GetNSlots(). Besides being more robus (less reliance on shared global state),. this patch guarantees that if the number of threads in the thread pool. is different than what RDF requests, we get a warning from TThreadExecutor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5293
https://github.com/root-project/root/pull/5293:361,safety,patch,patch,361,"[DF] Ensure TTreeProcessorMT's pool is created with expected number of threads; At construction time, RDataFrame sets its number of processing slots. equal to ROOT::GetImplicitMTPoolSize(). We always want to. construct TTreeProcessorMT's thread pool with a size equal to. RDF::GetNSlots(). Besides being more robus (less reliance on shared global state),. this patch guarantees that if the number of threads in the thread pool. is different than what RDF requests, we get a warning from TThreadExecutor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5293
https://github.com/root-project/root/pull/5293:361,security,patch,patch,361,"[DF] Ensure TTreeProcessorMT's pool is created with expected number of threads; At construction time, RDataFrame sets its number of processing slots. equal to ROOT::GetImplicitMTPoolSize(). We always want to. construct TTreeProcessorMT's thread pool with a size equal to. RDF::GetNSlots(). Besides being more robus (less reliance on shared global state),. this patch guarantees that if the number of threads in the thread pool. is different than what RDF requests, we get a warning from TThreadExecutor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5293
https://github.com/root-project/root/pull/5294:53,deployability,modul,modulemaps,53,[wincxxmodules] Backport D51910 and add stub windows modulemaps; This PR should unblock the progress made in #5284,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5294
https://github.com/root-project/root/pull/5294:40,interoperability,stub,stub,40,[wincxxmodules] Backport D51910 and add stub windows modulemaps; This PR should unblock the progress made in #5284,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5294
https://github.com/root-project/root/pull/5294:53,modifiability,modul,modulemaps,53,[wincxxmodules] Backport D51910 and add stub windows modulemaps; This PR should unblock the progress made in #5284,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5294
https://github.com/root-project/root/pull/5294:53,safety,modul,modulemaps,53,[wincxxmodules] Backport D51910 and add stub windows modulemaps; This PR should unblock the progress made in #5284,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5294
https://github.com/root-project/root/pull/5294:40,testability,stub,stub,40,[wincxxmodules] Backport D51910 and add stub windows modulemaps; This PR should unblock the progress made in #5284,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5294
https://github.com/root-project/root/pull/5294:92,usability,progress,progress,92,[wincxxmodules] Backport D51910 and add stub windows modulemaps; This PR should unblock the progress made in #5284,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5294
https://github.com/root-project/root/pull/5295:178,security,sign,significantly,178,Do not special case solaris.; Ancient rootcint had to make a special case for it because it was done too early (see root-project/root@6e3d084). The code in rootcling has changed significantly and we do it after inclusion of header files which also may have had such a construct.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5295
https://github.com/root-project/root/pull/5296:78,safety,avoid,avoid,78,"Move {std namespace} declaration after all includes [ROOT-10661]; In order to avoid {namespace std} interfering with following include files,. when generating a dictionary file declare the {namespace std} only after. GenerateNecessaryIncludes method is called",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5296
https://github.com/root-project/root/pull/5297:0,modifiability,Refact,Refactor,0,Refactor common testing code out to a new header file; @vgvassilev,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5297
https://github.com/root-project/root/pull/5297:0,performance,Refactor,Refactor,0,Refactor common testing code out to a new header file; @vgvassilev,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5297
https://github.com/root-project/root/pull/5297:16,safety,test,testing,16,Refactor common testing code out to a new header file; @vgvassilev,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5297
https://github.com/root-project/root/pull/5297:16,testability,test,testing,16,Refactor common testing code out to a new header file; @vgvassilev,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5297
https://github.com/root-project/root/pull/5298:7,security,SECUR,SECURITY,7,Create SECURITY.md;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5298
https://github.com/root-project/root/pull/5300:14,availability,redund,redundant,14,[core] Remove redundant forward decl of std.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5300
https://github.com/root-project/root/pull/5300:14,deployability,redundan,redundant,14,[core] Remove redundant forward decl of std.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5300
https://github.com/root-project/root/pull/5300:1,energy efficiency,core,core,1,[core] Remove redundant forward decl of std.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5300
https://github.com/root-project/root/pull/5300:14,reliability,redundan,redundant,14,[core] Remove redundant forward decl of std.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5300
https://github.com/root-project/root/pull/5300:14,safety,redund,redundant,14,[core] Remove redundant forward decl of std.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5300
https://github.com/root-project/root/pull/5301:35,performance,lock,locks,35,"[IO] Remove TParTreeProcessingRAII locks from TFile::ReadProcessID; These locks were only activated when inside TTreeProcessorMT::Process,. and they seem to protect the usecase in which the method is called. concurrently on the same object, which is not a valid usecase (anymore?). **Note:** just checking that this change does not cause crashes for now",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5301
https://github.com/root-project/root/pull/5301:74,performance,lock,locks,74,"[IO] Remove TParTreeProcessingRAII locks from TFile::ReadProcessID; These locks were only activated when inside TTreeProcessorMT::Process,. and they seem to protect the usecase in which the method is called. concurrently on the same object, which is not a valid usecase (anymore?). **Note:** just checking that this change does not cause crashes for now",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5301
https://github.com/root-project/root/pull/5301:208,performance,concurren,concurrently,208,"[IO] Remove TParTreeProcessingRAII locks from TFile::ReadProcessID; These locks were only activated when inside TTreeProcessorMT::Process,. and they seem to protect the usecase in which the method is called. concurrently on the same object, which is not a valid usecase (anymore?). **Note:** just checking that this change does not cause crashes for now",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5301
https://github.com/root-project/root/pull/5301:323,reliability,doe,does,323,"[IO] Remove TParTreeProcessingRAII locks from TFile::ReadProcessID; These locks were only activated when inside TTreeProcessorMT::Process,. and they seem to protect the usecase in which the method is called. concurrently on the same object, which is not a valid usecase (anymore?). **Note:** just checking that this change does not cause crashes for now",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5301
https://github.com/root-project/root/pull/5301:256,safety,valid,valid,256,"[IO] Remove TParTreeProcessingRAII locks from TFile::ReadProcessID; These locks were only activated when inside TTreeProcessorMT::Process,. and they seem to protect the usecase in which the method is called. concurrently on the same object, which is not a valid usecase (anymore?). **Note:** just checking that this change does not cause crashes for now",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5301
https://github.com/root-project/root/pull/5301:35,security,lock,locks,35,"[IO] Remove TParTreeProcessingRAII locks from TFile::ReadProcessID; These locks were only activated when inside TTreeProcessorMT::Process,. and they seem to protect the usecase in which the method is called. concurrently on the same object, which is not a valid usecase (anymore?). **Note:** just checking that this change does not cause crashes for now",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5301
https://github.com/root-project/root/pull/5301:74,security,lock,locks,74,"[IO] Remove TParTreeProcessingRAII locks from TFile::ReadProcessID; These locks were only activated when inside TTreeProcessorMT::Process,. and they seem to protect the usecase in which the method is called. concurrently on the same object, which is not a valid usecase (anymore?). **Note:** just checking that this change does not cause crashes for now",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5301
https://github.com/root-project/root/pull/5302:36,deployability,modul,modulemaps,36,[cxxmodules] Re-attach the standard modulemaps on osx.; This should fix the regressed runtime_cxxmodules on osx. Patch by Alexander Penev(@alexander-penev)!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5302
https://github.com/root-project/root/pull/5302:113,deployability,Patch,Patch,113,[cxxmodules] Re-attach the standard modulemaps on osx.; This should fix the regressed runtime_cxxmodules on osx. Patch by Alexander Penev(@alexander-penev)!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5302
https://github.com/root-project/root/pull/5302:27,interoperability,standard,standard,27,[cxxmodules] Re-attach the standard modulemaps on osx.; This should fix the regressed runtime_cxxmodules on osx. Patch by Alexander Penev(@alexander-penev)!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5302
https://github.com/root-project/root/pull/5302:36,modifiability,modul,modulemaps,36,[cxxmodules] Re-attach the standard modulemaps on osx.; This should fix the regressed runtime_cxxmodules on osx. Patch by Alexander Penev(@alexander-penev)!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5302
https://github.com/root-project/root/pull/5302:36,safety,modul,modulemaps,36,[cxxmodules] Re-attach the standard modulemaps on osx.; This should fix the regressed runtime_cxxmodules on osx. Patch by Alexander Penev(@alexander-penev)!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5302
https://github.com/root-project/root/pull/5302:113,safety,Patch,Patch,113,[cxxmodules] Re-attach the standard modulemaps on osx.; This should fix the regressed runtime_cxxmodules on osx. Patch by Alexander Penev(@alexander-penev)!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5302
https://github.com/root-project/root/pull/5302:113,security,Patch,Patch,113,[cxxmodules] Re-attach the standard modulemaps on osx.; This should fix the regressed runtime_cxxmodules on osx. Patch by Alexander Penev(@alexander-penev)!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5302
https://github.com/root-project/root/pull/5302:76,testability,regress,regressed,76,[cxxmodules] Re-attach the standard modulemaps on osx.; This should fix the regressed runtime_cxxmodules on osx. Patch by Alexander Penev(@alexander-penev)!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5302
https://github.com/root-project/root/pull/5303:0,deployability,Releas,Release,0,Release Notes: python-dev required and 'python' variable deprecated; …ecated,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5303
https://github.com/root-project/root/pull/5303:48,modifiability,variab,variable,48,Release Notes: python-dev required and 'python' variable deprecated; …ecated,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5303
https://github.com/root-project/root/pull/5304:516,availability,consist,consistent,516,"[TreeProcMT] Do not EnableImplicitMT when running event loop ; Before this patch, TTreeProcessorMT::Process activated implicit. multi-threading features (and never disabled them). One undesired. side-effect was that ROOT's thread-pool was not destructed after. TTreeProcessorMT was destructed. After this patch, TTreeProcessorMT. multi-thread TTree processing and activation of implicit. multi-threading features are disentangled, and users are. required to call EnableImplicitMT explicitly to activate IMT. This is consistent with TThreadExecutor's behavior. This fixes ROOT-10656.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5304
https://github.com/root-project/root/pull/5304:75,deployability,patch,patch,75,"[TreeProcMT] Do not EnableImplicitMT when running event loop ; Before this patch, TTreeProcessorMT::Process activated implicit. multi-threading features (and never disabled them). One undesired. side-effect was that ROOT's thread-pool was not destructed after. TTreeProcessorMT was destructed. After this patch, TTreeProcessorMT. multi-thread TTree processing and activation of implicit. multi-threading features are disentangled, and users are. required to call EnableImplicitMT explicitly to activate IMT. This is consistent with TThreadExecutor's behavior. This fixes ROOT-10656.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5304
https://github.com/root-project/root/pull/5304:305,deployability,patch,patch,305,"[TreeProcMT] Do not EnableImplicitMT when running event loop ; Before this patch, TTreeProcessorMT::Process activated implicit. multi-threading features (and never disabled them). One undesired. side-effect was that ROOT's thread-pool was not destructed after. TTreeProcessorMT was destructed. After this patch, TTreeProcessorMT. multi-thread TTree processing and activation of implicit. multi-threading features are disentangled, and users are. required to call EnableImplicitMT explicitly to activate IMT. This is consistent with TThreadExecutor's behavior. This fixes ROOT-10656.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5304
https://github.com/root-project/root/pull/5304:50,integrability,event,event,50,"[TreeProcMT] Do not EnableImplicitMT when running event loop ; Before this patch, TTreeProcessorMT::Process activated implicit. multi-threading features (and never disabled them). One undesired. side-effect was that ROOT's thread-pool was not destructed after. TTreeProcessorMT was destructed. After this patch, TTreeProcessorMT. multi-thread TTree processing and activation of implicit. multi-threading features are disentangled, and users are. required to call EnableImplicitMT explicitly to activate IMT. This is consistent with TThreadExecutor's behavior. This fixes ROOT-10656.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5304
https://github.com/root-project/root/pull/5304:128,performance,multi-thread,multi-threading,128,"[TreeProcMT] Do not EnableImplicitMT when running event loop ; Before this patch, TTreeProcessorMT::Process activated implicit. multi-threading features (and never disabled them). One undesired. side-effect was that ROOT's thread-pool was not destructed after. TTreeProcessorMT was destructed. After this patch, TTreeProcessorMT. multi-thread TTree processing and activation of implicit. multi-threading features are disentangled, and users are. required to call EnableImplicitMT explicitly to activate IMT. This is consistent with TThreadExecutor's behavior. This fixes ROOT-10656.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5304
https://github.com/root-project/root/pull/5304:330,performance,multi-thread,multi-thread,330,"[TreeProcMT] Do not EnableImplicitMT when running event loop ; Before this patch, TTreeProcessorMT::Process activated implicit. multi-threading features (and never disabled them). One undesired. side-effect was that ROOT's thread-pool was not destructed after. TTreeProcessorMT was destructed. After this patch, TTreeProcessorMT. multi-thread TTree processing and activation of implicit. multi-threading features are disentangled, and users are. required to call EnableImplicitMT explicitly to activate IMT. This is consistent with TThreadExecutor's behavior. This fixes ROOT-10656.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5304
https://github.com/root-project/root/pull/5304:388,performance,multi-thread,multi-threading,388,"[TreeProcMT] Do not EnableImplicitMT when running event loop ; Before this patch, TTreeProcessorMT::Process activated implicit. multi-threading features (and never disabled them). One undesired. side-effect was that ROOT's thread-pool was not destructed after. TTreeProcessorMT was destructed. After this patch, TTreeProcessorMT. multi-thread TTree processing and activation of implicit. multi-threading features are disentangled, and users are. required to call EnableImplicitMT explicitly to activate IMT. This is consistent with TThreadExecutor's behavior. This fixes ROOT-10656.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5304
https://github.com/root-project/root/pull/5304:75,safety,patch,patch,75,"[TreeProcMT] Do not EnableImplicitMT when running event loop ; Before this patch, TTreeProcessorMT::Process activated implicit. multi-threading features (and never disabled them). One undesired. side-effect was that ROOT's thread-pool was not destructed after. TTreeProcessorMT was destructed. After this patch, TTreeProcessorMT. multi-thread TTree processing and activation of implicit. multi-threading features are disentangled, and users are. required to call EnableImplicitMT explicitly to activate IMT. This is consistent with TThreadExecutor's behavior. This fixes ROOT-10656.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5304
https://github.com/root-project/root/pull/5304:305,safety,patch,patch,305,"[TreeProcMT] Do not EnableImplicitMT when running event loop ; Before this patch, TTreeProcessorMT::Process activated implicit. multi-threading features (and never disabled them). One undesired. side-effect was that ROOT's thread-pool was not destructed after. TTreeProcessorMT was destructed. After this patch, TTreeProcessorMT. multi-thread TTree processing and activation of implicit. multi-threading features are disentangled, and users are. required to call EnableImplicitMT explicitly to activate IMT. This is consistent with TThreadExecutor's behavior. This fixes ROOT-10656.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5304
https://github.com/root-project/root/pull/5304:75,security,patch,patch,75,"[TreeProcMT] Do not EnableImplicitMT when running event loop ; Before this patch, TTreeProcessorMT::Process activated implicit. multi-threading features (and never disabled them). One undesired. side-effect was that ROOT's thread-pool was not destructed after. TTreeProcessorMT was destructed. After this patch, TTreeProcessorMT. multi-thread TTree processing and activation of implicit. multi-threading features are disentangled, and users are. required to call EnableImplicitMT explicitly to activate IMT. This is consistent with TThreadExecutor's behavior. This fixes ROOT-10656.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5304
https://github.com/root-project/root/pull/5304:305,security,patch,patch,305,"[TreeProcMT] Do not EnableImplicitMT when running event loop ; Before this patch, TTreeProcessorMT::Process activated implicit. multi-threading features (and never disabled them). One undesired. side-effect was that ROOT's thread-pool was not destructed after. TTreeProcessorMT was destructed. After this patch, TTreeProcessorMT. multi-thread TTree processing and activation of implicit. multi-threading features are disentangled, and users are. required to call EnableImplicitMT explicitly to activate IMT. This is consistent with TThreadExecutor's behavior. This fixes ROOT-10656.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5304
https://github.com/root-project/root/pull/5304:435,usability,user,users,435,"[TreeProcMT] Do not EnableImplicitMT when running event loop ; Before this patch, TTreeProcessorMT::Process activated implicit. multi-threading features (and never disabled them). One undesired. side-effect was that ROOT's thread-pool was not destructed after. TTreeProcessorMT was destructed. After this patch, TTreeProcessorMT. multi-thread TTree processing and activation of implicit. multi-threading features are disentangled, and users are. required to call EnableImplicitMT explicitly to activate IMT. This is consistent with TThreadExecutor's behavior. This fixes ROOT-10656.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5304
https://github.com/root-project/root/pull/5304:516,usability,consist,consistent,516,"[TreeProcMT] Do not EnableImplicitMT when running event loop ; Before this patch, TTreeProcessorMT::Process activated implicit. multi-threading features (and never disabled them). One undesired. side-effect was that ROOT's thread-pool was not destructed after. TTreeProcessorMT was destructed. After this patch, TTreeProcessorMT. multi-thread TTree processing and activation of implicit. multi-threading features are disentangled, and users are. required to call EnableImplicitMT explicitly to activate IMT. This is consistent with TThreadExecutor's behavior. This fixes ROOT-10656.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5304
https://github.com/root-project/root/pull/5304:550,usability,behavi,behavior,550,"[TreeProcMT] Do not EnableImplicitMT when running event loop ; Before this patch, TTreeProcessorMT::Process activated implicit. multi-threading features (and never disabled them). One undesired. side-effect was that ROOT's thread-pool was not destructed after. TTreeProcessorMT was destructed. After this patch, TTreeProcessorMT. multi-thread TTree processing and activation of implicit. multi-threading features are disentangled, and users are. required to call EnableImplicitMT explicitly to activate IMT. This is consistent with TThreadExecutor's behavior. This fixes ROOT-10656.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5304
https://github.com/root-project/root/pull/5305:13,availability,redund,redundant,13,"[IMT] Remove redundant call to EnableImplicitMT; EnableParBranchProcessing is only called by TParBranchProcessingRAII's. constructor, which is only called by TTree::GetEntry if. ROOT::IsImplicitMTEnabled returns true. Plus, it's surprising that. a RAII object that is meant to activate locks also changes the state. of ROOT's thread-pool (permanently). As these facilities are in. ROOT::Internal, this change in behavior in TParBranchProcessingRAII. will not be user-visible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5305
https://github.com/root-project/root/pull/5305:309,availability,state,state,309,"[IMT] Remove redundant call to EnableImplicitMT; EnableParBranchProcessing is only called by TParBranchProcessingRAII's. constructor, which is only called by TTree::GetEntry if. ROOT::IsImplicitMTEnabled returns true. Plus, it's surprising that. a RAII object that is meant to activate locks also changes the state. of ROOT's thread-pool (permanently). As these facilities are in. ROOT::Internal, this change in behavior in TParBranchProcessingRAII. will not be user-visible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5305
https://github.com/root-project/root/pull/5305:13,deployability,redundan,redundant,13,"[IMT] Remove redundant call to EnableImplicitMT; EnableParBranchProcessing is only called by TParBranchProcessingRAII's. constructor, which is only called by TTree::GetEntry if. ROOT::IsImplicitMTEnabled returns true. Plus, it's surprising that. a RAII object that is meant to activate locks also changes the state. of ROOT's thread-pool (permanently). As these facilities are in. ROOT::Internal, this change in behavior in TParBranchProcessingRAII. will not be user-visible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5305
https://github.com/root-project/root/pull/5305:309,integrability,state,state,309,"[IMT] Remove redundant call to EnableImplicitMT; EnableParBranchProcessing is only called by TParBranchProcessingRAII's. constructor, which is only called by TTree::GetEntry if. ROOT::IsImplicitMTEnabled returns true. Plus, it's surprising that. a RAII object that is meant to activate locks also changes the state. of ROOT's thread-pool (permanently). As these facilities are in. ROOT::Internal, this change in behavior in TParBranchProcessingRAII. will not be user-visible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5305
https://github.com/root-project/root/pull/5305:286,performance,lock,locks,286,"[IMT] Remove redundant call to EnableImplicitMT; EnableParBranchProcessing is only called by TParBranchProcessingRAII's. constructor, which is only called by TTree::GetEntry if. ROOT::IsImplicitMTEnabled returns true. Plus, it's surprising that. a RAII object that is meant to activate locks also changes the state. of ROOT's thread-pool (permanently). As these facilities are in. ROOT::Internal, this change in behavior in TParBranchProcessingRAII. will not be user-visible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5305
https://github.com/root-project/root/pull/5305:13,reliability,redundan,redundant,13,"[IMT] Remove redundant call to EnableImplicitMT; EnableParBranchProcessing is only called by TParBranchProcessingRAII's. constructor, which is only called by TTree::GetEntry if. ROOT::IsImplicitMTEnabled returns true. Plus, it's surprising that. a RAII object that is meant to activate locks also changes the state. of ROOT's thread-pool (permanently). As these facilities are in. ROOT::Internal, this change in behavior in TParBranchProcessingRAII. will not be user-visible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5305
https://github.com/root-project/root/pull/5305:13,safety,redund,redundant,13,"[IMT] Remove redundant call to EnableImplicitMT; EnableParBranchProcessing is only called by TParBranchProcessingRAII's. constructor, which is only called by TTree::GetEntry if. ROOT::IsImplicitMTEnabled returns true. Plus, it's surprising that. a RAII object that is meant to activate locks also changes the state. of ROOT's thread-pool (permanently). As these facilities are in. ROOT::Internal, this change in behavior in TParBranchProcessingRAII. will not be user-visible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5305
https://github.com/root-project/root/pull/5305:286,security,lock,locks,286,"[IMT] Remove redundant call to EnableImplicitMT; EnableParBranchProcessing is only called by TParBranchProcessingRAII's. constructor, which is only called by TTree::GetEntry if. ROOT::IsImplicitMTEnabled returns true. Plus, it's surprising that. a RAII object that is meant to activate locks also changes the state. of ROOT's thread-pool (permanently). As these facilities are in. ROOT::Internal, this change in behavior in TParBranchProcessingRAII. will not be user-visible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5305
https://github.com/root-project/root/pull/5305:412,usability,behavi,behavior,412,"[IMT] Remove redundant call to EnableImplicitMT; EnableParBranchProcessing is only called by TParBranchProcessingRAII's. constructor, which is only called by TTree::GetEntry if. ROOT::IsImplicitMTEnabled returns true. Plus, it's surprising that. a RAII object that is meant to activate locks also changes the state. of ROOT's thread-pool (permanently). As these facilities are in. ROOT::Internal, this change in behavior in TParBranchProcessingRAII. will not be user-visible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5305
https://github.com/root-project/root/pull/5305:462,usability,user,user-visible,462,"[IMT] Remove redundant call to EnableImplicitMT; EnableParBranchProcessing is only called by TParBranchProcessingRAII's. constructor, which is only called by TTree::GetEntry if. ROOT::IsImplicitMTEnabled returns true. Plus, it's surprising that. a RAII object that is meant to activate locks also changes the state. of ROOT's thread-pool (permanently). As these facilities are in. ROOT::Internal, this change in behavior in TParBranchProcessingRAII. will not be user-visible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5305
https://github.com/root-project/root/pull/5306:276,availability,consist,consistent,276,"[DF] Move test_splitcoll_arrayview to gtests from roottest (backport for v6.16); This test fails with runtime C++ modules on in v6.18, runs fine in v6.20 and above. Won't fix it in older versions, so it's also disabled if runtime C++ modules are on. in v6.16, just to be sure/consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5306
https://github.com/root-project/root/pull/5306:91,deployability,fail,fails,91,"[DF] Move test_splitcoll_arrayview to gtests from roottest (backport for v6.16); This test fails with runtime C++ modules on in v6.18, runs fine in v6.20 and above. Won't fix it in older versions, so it's also disabled if runtime C++ modules are on. in v6.16, just to be sure/consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5306
https://github.com/root-project/root/pull/5306:114,deployability,modul,modules,114,"[DF] Move test_splitcoll_arrayview to gtests from roottest (backport for v6.16); This test fails with runtime C++ modules on in v6.18, runs fine in v6.20 and above. Won't fix it in older versions, so it's also disabled if runtime C++ modules are on. in v6.16, just to be sure/consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5306
https://github.com/root-project/root/pull/5306:187,deployability,version,versions,187,"[DF] Move test_splitcoll_arrayview to gtests from roottest (backport for v6.16); This test fails with runtime C++ modules on in v6.18, runs fine in v6.20 and above. Won't fix it in older versions, so it's also disabled if runtime C++ modules are on. in v6.16, just to be sure/consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5306
https://github.com/root-project/root/pull/5306:234,deployability,modul,modules,234,"[DF] Move test_splitcoll_arrayview to gtests from roottest (backport for v6.16); This test fails with runtime C++ modules on in v6.18, runs fine in v6.20 and above. Won't fix it in older versions, so it's also disabled if runtime C++ modules are on. in v6.16, just to be sure/consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5306
https://github.com/root-project/root/pull/5306:187,integrability,version,versions,187,"[DF] Move test_splitcoll_arrayview to gtests from roottest (backport for v6.16); This test fails with runtime C++ modules on in v6.18, runs fine in v6.20 and above. Won't fix it in older versions, so it's also disabled if runtime C++ modules are on. in v6.16, just to be sure/consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5306
https://github.com/root-project/root/pull/5306:114,modifiability,modul,modules,114,"[DF] Move test_splitcoll_arrayview to gtests from roottest (backport for v6.16); This test fails with runtime C++ modules on in v6.18, runs fine in v6.20 and above. Won't fix it in older versions, so it's also disabled if runtime C++ modules are on. in v6.16, just to be sure/consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5306
https://github.com/root-project/root/pull/5306:187,modifiability,version,versions,187,"[DF] Move test_splitcoll_arrayview to gtests from roottest (backport for v6.16); This test fails with runtime C++ modules on in v6.18, runs fine in v6.20 and above. Won't fix it in older versions, so it's also disabled if runtime C++ modules are on. in v6.16, just to be sure/consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5306
https://github.com/root-project/root/pull/5306:234,modifiability,modul,modules,234,"[DF] Move test_splitcoll_arrayview to gtests from roottest (backport for v6.16); This test fails with runtime C++ modules on in v6.18, runs fine in v6.20 and above. Won't fix it in older versions, so it's also disabled if runtime C++ modules are on. in v6.16, just to be sure/consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5306
https://github.com/root-project/root/pull/5306:91,reliability,fail,fails,91,"[DF] Move test_splitcoll_arrayview to gtests from roottest (backport for v6.16); This test fails with runtime C++ modules on in v6.18, runs fine in v6.20 and above. Won't fix it in older versions, so it's also disabled if runtime C++ modules are on. in v6.16, just to be sure/consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5306
https://github.com/root-project/root/pull/5306:86,safety,test,test,86,"[DF] Move test_splitcoll_arrayview to gtests from roottest (backport for v6.16); This test fails with runtime C++ modules on in v6.18, runs fine in v6.20 and above. Won't fix it in older versions, so it's also disabled if runtime C++ modules are on. in v6.16, just to be sure/consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5306
https://github.com/root-project/root/pull/5306:114,safety,modul,modules,114,"[DF] Move test_splitcoll_arrayview to gtests from roottest (backport for v6.16); This test fails with runtime C++ modules on in v6.18, runs fine in v6.20 and above. Won't fix it in older versions, so it's also disabled if runtime C++ modules are on. in v6.16, just to be sure/consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5306
https://github.com/root-project/root/pull/5306:234,safety,modul,modules,234,"[DF] Move test_splitcoll_arrayview to gtests from roottest (backport for v6.16); This test fails with runtime C++ modules on in v6.18, runs fine in v6.20 and above. Won't fix it in older versions, so it's also disabled if runtime C++ modules are on. in v6.16, just to be sure/consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5306
https://github.com/root-project/root/pull/5306:86,testability,test,test,86,"[DF] Move test_splitcoll_arrayview to gtests from roottest (backport for v6.16); This test fails with runtime C++ modules on in v6.18, runs fine in v6.20 and above. Won't fix it in older versions, so it's also disabled if runtime C++ modules are on. in v6.16, just to be sure/consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5306
https://github.com/root-project/root/pull/5306:276,usability,consist,consistent,276,"[DF] Move test_splitcoll_arrayview to gtests from roottest (backport for v6.16); This test fails with runtime C++ modules on in v6.18, runs fine in v6.20 and above. Won't fix it in older versions, so it's also disabled if runtime C++ modules are on. in v6.16, just to be sure/consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5306
https://github.com/root-project/root/pull/5307:114,usability,help,helpers,114,[Exp PyROOT] Fix import from JupyROOT and change '_threaded' to '__re…; …lease_gil__'. JupyROOT.utils -> JupyROOT.helpers.utils. libcppyy.CPPOverload._threaded -> libcppyy.CPPOverload.__release_gil__. Fixes https://sft.its.cern.ch/jira/browse/ROOT-10175?jql=text%20~%20%22jsmva%22,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5307
https://github.com/root-project/root/pull/5308:225,deployability,updat,updated,225,"[Exp PyROOT] Pythonised RooWorkspace.Import(); [Exp PyROOT] Add pythonisation for RooWorkspace. RooWorkspace.import() cannot be called from Python. This adds a. pythonisation called RooWorkspace.Import() instead. @etejedor I updated the tutorials accordingly (they also serve as a test). A potential problem is that I didn't write a pythonisation for old PyROOT, so the tutorials won't work if somebody switches back. Do we want to support also old PyROOT, or do we move on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5308
https://github.com/root-project/root/pull/5308:225,safety,updat,updated,225,"[Exp PyROOT] Pythonised RooWorkspace.Import(); [Exp PyROOT] Add pythonisation for RooWorkspace. RooWorkspace.import() cannot be called from Python. This adds a. pythonisation called RooWorkspace.Import() instead. @etejedor I updated the tutorials accordingly (they also serve as a test). A potential problem is that I didn't write a pythonisation for old PyROOT, so the tutorials won't work if somebody switches back. Do we want to support also old PyROOT, or do we move on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5308
https://github.com/root-project/root/pull/5308:281,safety,test,test,281,"[Exp PyROOT] Pythonised RooWorkspace.Import(); [Exp PyROOT] Add pythonisation for RooWorkspace. RooWorkspace.import() cannot be called from Python. This adds a. pythonisation called RooWorkspace.Import() instead. @etejedor I updated the tutorials accordingly (they also serve as a test). A potential problem is that I didn't write a pythonisation for old PyROOT, so the tutorials won't work if somebody switches back. Do we want to support also old PyROOT, or do we move on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5308
https://github.com/root-project/root/pull/5308:225,security,updat,updated,225,"[Exp PyROOT] Pythonised RooWorkspace.Import(); [Exp PyROOT] Add pythonisation for RooWorkspace. RooWorkspace.import() cannot be called from Python. This adds a. pythonisation called RooWorkspace.Import() instead. @etejedor I updated the tutorials accordingly (they also serve as a test). A potential problem is that I didn't write a pythonisation for old PyROOT, so the tutorials won't work if somebody switches back. Do we want to support also old PyROOT, or do we move on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5308
https://github.com/root-project/root/pull/5308:281,testability,test,test,281,"[Exp PyROOT] Pythonised RooWorkspace.Import(); [Exp PyROOT] Add pythonisation for RooWorkspace. RooWorkspace.import() cannot be called from Python. This adds a. pythonisation called RooWorkspace.Import() instead. @etejedor I updated the tutorials accordingly (they also serve as a test). A potential problem is that I didn't write a pythonisation for old PyROOT, so the tutorials won't work if somebody switches back. Do we want to support also old PyROOT, or do we move on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5308
https://github.com/root-project/root/pull/5308:432,usability,support,support,432,"[Exp PyROOT] Pythonised RooWorkspace.Import(); [Exp PyROOT] Add pythonisation for RooWorkspace. RooWorkspace.import() cannot be called from Python. This adds a. pythonisation called RooWorkspace.Import() instead. @etejedor I updated the tutorials accordingly (they also serve as a test). A potential problem is that I didn't write a pythonisation for old PyROOT, so the tutorials won't work if somebody switches back. Do we want to support also old PyROOT, or do we move on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5308
https://github.com/root-project/root/pull/5310:269,deployability,build,build,269,[PyROOT] Move DeclareCppCallable to Numba.Declare; * Rename DeclareCppCallable to Numba.Declare. * Remove generic backend. * Rename and adapt test accordingly. * Add support for RVecs in callables jitted with numba. * Add tutorial. ~We desperately need numba on the PR build nodes!~ Taken care of!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5310:136,energy efficiency,adapt,adapt,136,[PyROOT] Move DeclareCppCallable to Numba.Declare; * Rename DeclareCppCallable to Numba.Declare. * Remove generic backend. * Rename and adapt test accordingly. * Add support for RVecs in callables jitted with numba. * Add tutorial. ~We desperately need numba on the PR build nodes!~ Taken care of!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5310:136,integrability,adapt,adapt,136,[PyROOT] Move DeclareCppCallable to Numba.Declare; * Rename DeclareCppCallable to Numba.Declare. * Remove generic backend. * Rename and adapt test accordingly. * Add support for RVecs in callables jitted with numba. * Add tutorial. ~We desperately need numba on the PR build nodes!~ Taken care of!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5310:136,interoperability,adapt,adapt,136,[PyROOT] Move DeclareCppCallable to Numba.Declare; * Rename DeclareCppCallable to Numba.Declare. * Remove generic backend. * Rename and adapt test accordingly. * Add support for RVecs in callables jitted with numba. * Add tutorial. ~We desperately need numba on the PR build nodes!~ Taken care of!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5310:136,modifiability,adapt,adapt,136,[PyROOT] Move DeclareCppCallable to Numba.Declare; * Rename DeclareCppCallable to Numba.Declare. * Remove generic backend. * Rename and adapt test accordingly. * Add support for RVecs in callables jitted with numba. * Add tutorial. ~We desperately need numba on the PR build nodes!~ Taken care of!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5310:142,safety,test,test,142,[PyROOT] Move DeclareCppCallable to Numba.Declare; * Rename DeclareCppCallable to Numba.Declare. * Remove generic backend. * Rename and adapt test accordingly. * Add support for RVecs in callables jitted with numba. * Add tutorial. ~We desperately need numba on the PR build nodes!~ Taken care of!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5310:142,testability,test,test,142,[PyROOT] Move DeclareCppCallable to Numba.Declare; * Rename DeclareCppCallable to Numba.Declare. * Remove generic backend. * Rename and adapt test accordingly. * Add support for RVecs in callables jitted with numba. * Add tutorial. ~We desperately need numba on the PR build nodes!~ Taken care of!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5310:166,usability,support,support,166,[PyROOT] Move DeclareCppCallable to Numba.Declare; * Rename DeclareCppCallable to Numba.Declare. * Remove generic backend. * Rename and adapt test accordingly. * Add support for RVecs in callables jitted with numba. * Add tutorial. ~We desperately need numba on the PR build nodes!~ Taken care of!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5311:71,deployability,build,build,71,"[CMake] python-dev required only for PyROOT; python-dev is required to build PyROOT with multiple Python versions. The reason is that the python related variables are set only if. python-dev was found. On the other hand, python-dev is not a requirement. for ROOT per se, since it just requires interpreter. With this change we relax the condition on python-dev found and force. pyroot and pyroot_exp to off it python-dev was not found.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5311
https://github.com/root-project/root/pull/5311:105,deployability,version,versions,105,"[CMake] python-dev required only for PyROOT; python-dev is required to build PyROOT with multiple Python versions. The reason is that the python related variables are set only if. python-dev was found. On the other hand, python-dev is not a requirement. for ROOT per se, since it just requires interpreter. With this change we relax the condition on python-dev found and force. pyroot and pyroot_exp to off it python-dev was not found.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5311
https://github.com/root-project/root/pull/5311:105,integrability,version,versions,105,"[CMake] python-dev required only for PyROOT; python-dev is required to build PyROOT with multiple Python versions. The reason is that the python related variables are set only if. python-dev was found. On the other hand, python-dev is not a requirement. for ROOT per se, since it just requires interpreter. With this change we relax the condition on python-dev found and force. pyroot and pyroot_exp to off it python-dev was not found.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5311
https://github.com/root-project/root/pull/5311:105,modifiability,version,versions,105,"[CMake] python-dev required only for PyROOT; python-dev is required to build PyROOT with multiple Python versions. The reason is that the python related variables are set only if. python-dev was found. On the other hand, python-dev is not a requirement. for ROOT per se, since it just requires interpreter. With this change we relax the condition on python-dev found and force. pyroot and pyroot_exp to off it python-dev was not found.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5311
https://github.com/root-project/root/pull/5311:153,modifiability,variab,variables,153,"[CMake] python-dev required only for PyROOT; python-dev is required to build PyROOT with multiple Python versions. The reason is that the python related variables are set only if. python-dev was found. On the other hand, python-dev is not a requirement. for ROOT per se, since it just requires interpreter. With this change we relax the condition on python-dev found and force. pyroot and pyroot_exp to off it python-dev was not found.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5311
https://github.com/root-project/root/pull/5312:11,safety,avoid,avoid,11,[Graphics] avoid double delete in TRatioPlot dtor; In some case the TRatioPlot destructor makes double delete. This was seems in https://sft.its.cern.ch/jira/browse/ROOT-10666. This PR fixes this issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5312
https://github.com/root-project/root/pull/5313:22,deployability,modul,modules,22,[cxxmodules] Make C++ modules default on OSX for c++11.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5313
https://github.com/root-project/root/pull/5313:22,modifiability,modul,modules,22,[cxxmodules] Make C++ modules default on OSX for c++11.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5313
https://github.com/root-project/root/pull/5313:22,safety,modul,modules,22,[cxxmodules] Make C++ modules default on OSX for c++11.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5313
https://github.com/root-project/root/pull/5315:55,availability,error,error,55,"[RF] Documentation updates, improvement of warning and error messages; Documentation updates and sometimes also code changes that e.g. format warning messages or replace ineffective `assert`s by `throw`s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5315
https://github.com/root-project/root/pull/5315:19,deployability,updat,updates,19,"[RF] Documentation updates, improvement of warning and error messages; Documentation updates and sometimes also code changes that e.g. format warning messages or replace ineffective `assert`s by `throw`s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5315
https://github.com/root-project/root/pull/5315:85,deployability,updat,updates,85,"[RF] Documentation updates, improvement of warning and error messages; Documentation updates and sometimes also code changes that e.g. format warning messages or replace ineffective `assert`s by `throw`s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5315
https://github.com/root-project/root/pull/5315:61,integrability,messag,messages,61,"[RF] Documentation updates, improvement of warning and error messages; Documentation updates and sometimes also code changes that e.g. format warning messages or replace ineffective `assert`s by `throw`s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5315
https://github.com/root-project/root/pull/5315:150,integrability,messag,messages,150,"[RF] Documentation updates, improvement of warning and error messages; Documentation updates and sometimes also code changes that e.g. format warning messages or replace ineffective `assert`s by `throw`s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5315
https://github.com/root-project/root/pull/5315:61,interoperability,messag,messages,61,"[RF] Documentation updates, improvement of warning and error messages; Documentation updates and sometimes also code changes that e.g. format warning messages or replace ineffective `assert`s by `throw`s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5315
https://github.com/root-project/root/pull/5315:135,interoperability,format,format,135,"[RF] Documentation updates, improvement of warning and error messages; Documentation updates and sometimes also code changes that e.g. format warning messages or replace ineffective `assert`s by `throw`s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5315
https://github.com/root-project/root/pull/5315:150,interoperability,messag,messages,150,"[RF] Documentation updates, improvement of warning and error messages; Documentation updates and sometimes also code changes that e.g. format warning messages or replace ineffective `assert`s by `throw`s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5315
https://github.com/root-project/root/pull/5315:55,performance,error,error,55,"[RF] Documentation updates, improvement of warning and error messages; Documentation updates and sometimes also code changes that e.g. format warning messages or replace ineffective `assert`s by `throw`s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5315
https://github.com/root-project/root/pull/5315:19,safety,updat,updates,19,"[RF] Documentation updates, improvement of warning and error messages; Documentation updates and sometimes also code changes that e.g. format warning messages or replace ineffective `assert`s by `throw`s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5315
https://github.com/root-project/root/pull/5315:55,safety,error,error,55,"[RF] Documentation updates, improvement of warning and error messages; Documentation updates and sometimes also code changes that e.g. format warning messages or replace ineffective `assert`s by `throw`s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5315
https://github.com/root-project/root/pull/5315:85,safety,updat,updates,85,"[RF] Documentation updates, improvement of warning and error messages; Documentation updates and sometimes also code changes that e.g. format warning messages or replace ineffective `assert`s by `throw`s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5315
https://github.com/root-project/root/pull/5315:19,security,updat,updates,19,"[RF] Documentation updates, improvement of warning and error messages; Documentation updates and sometimes also code changes that e.g. format warning messages or replace ineffective `assert`s by `throw`s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5315
https://github.com/root-project/root/pull/5315:85,security,updat,updates,85,"[RF] Documentation updates, improvement of warning and error messages; Documentation updates and sometimes also code changes that e.g. format warning messages or replace ineffective `assert`s by `throw`s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5315
https://github.com/root-project/root/pull/5315:183,testability,assert,assert,183,"[RF] Documentation updates, improvement of warning and error messages; Documentation updates and sometimes also code changes that e.g. format warning messages or replace ineffective `assert`s by `throw`s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5315
https://github.com/root-project/root/pull/5315:5,usability,Document,Documentation,5,"[RF] Documentation updates, improvement of warning and error messages; Documentation updates and sometimes also code changes that e.g. format warning messages or replace ineffective `assert`s by `throw`s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5315
https://github.com/root-project/root/pull/5315:55,usability,error,error,55,"[RF] Documentation updates, improvement of warning and error messages; Documentation updates and sometimes also code changes that e.g. format warning messages or replace ineffective `assert`s by `throw`s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5315
https://github.com/root-project/root/pull/5315:71,usability,Document,Documentation,71,"[RF] Documentation updates, improvement of warning and error messages; Documentation updates and sometimes also code changes that e.g. format warning messages or replace ineffective `assert`s by `throw`s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5315
https://github.com/root-project/root/pull/5316:50,availability,error,errors,50,"[RF] Fix ROOT-10668.; When asymptotically correct errors are used, the current implementation. breaks if variables don't have identical name and title. This is solved. by always using the name.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5316
https://github.com/root-project/root/pull/5316:71,energy efficiency,current,current,71,"[RF] Fix ROOT-10668.; When asymptotically correct errors are used, the current implementation. breaks if variables don't have identical name and title. This is solved. by always using the name.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5316
https://github.com/root-project/root/pull/5316:105,modifiability,variab,variables,105,"[RF] Fix ROOT-10668.; When asymptotically correct errors are used, the current implementation. breaks if variables don't have identical name and title. This is solved. by always using the name.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5316
https://github.com/root-project/root/pull/5316:50,performance,error,errors,50,"[RF] Fix ROOT-10668.; When asymptotically correct errors are used, the current implementation. breaks if variables don't have identical name and title. This is solved. by always using the name.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5316
https://github.com/root-project/root/pull/5316:50,safety,error,errors,50,"[RF] Fix ROOT-10668.; When asymptotically correct errors are used, the current implementation. breaks if variables don't have identical name and title. This is solved. by always using the name.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5316
https://github.com/root-project/root/pull/5316:126,security,ident,identical,126,"[RF] Fix ROOT-10668.; When asymptotically correct errors are used, the current implementation. breaks if variables don't have identical name and title. This is solved. by always using the name.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5316
https://github.com/root-project/root/pull/5316:50,usability,error,errors,50,"[RF] Fix ROOT-10668.; When asymptotically correct errors are used, the current implementation. breaks if variables don't have identical name and title. This is solved. by always using the name.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5316
https://github.com/root-project/root/pull/5317:154,performance,cach,cachefile,154,Renable TFile::ShrinkCacheFileDir.; Use the non static TString::Form to actually modify the cmd string. Use || to actually delete the file when the .ROOT.cachefile does not exist. See https://root-forum.cern.ch/t/cacheread-with-given-local-file-name-to-overwrite-local-file-on-many-file-reads/38660,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5317
https://github.com/root-project/root/pull/5317:213,performance,cach,cacheread-with-given-local-file-name-to-overwrite-local-file-on-many-file-reads,213,Renable TFile::ShrinkCacheFileDir.; Use the non static TString::Form to actually modify the cmd string. Use || to actually delete the file when the .ROOT.cachefile does not exist. See https://root-forum.cern.ch/t/cacheread-with-given-local-file-name-to-overwrite-local-file-on-many-file-reads/38660,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5317
https://github.com/root-project/root/pull/5317:164,reliability,doe,does,164,Renable TFile::ShrinkCacheFileDir.; Use the non static TString::Form to actually modify the cmd string. Use || to actually delete the file when the .ROOT.cachefile does not exist. See https://root-forum.cern.ch/t/cacheread-with-given-local-file-name-to-overwrite-local-file-on-many-file-reads/38660,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5317
https://github.com/root-project/root/pull/5317:81,security,modif,modify,81,Renable TFile::ShrinkCacheFileDir.; Use the non static TString::Form to actually modify the cmd string. Use || to actually delete the file when the .ROOT.cachefile does not exist. See https://root-forum.cern.ch/t/cacheread-with-given-local-file-name-to-overwrite-local-file-on-many-file-reads/38660,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5317
https://github.com/root-project/root/pull/5319:87,availability,state,state,87,"Avoid having to modify TStreamerSTL when streaming it.; This fix a ""corruption"" of the state of TStreamerSTL when using multi-thread. Fix ROOT-10648. See related 777f6b750e657e5c70bdf07095214d59c320e985. and 274c7302ebf95d81255db6d8a02afccb387d3c9e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5319
https://github.com/root-project/root/pull/5319:87,integrability,state,state,87,"Avoid having to modify TStreamerSTL when streaming it.; This fix a ""corruption"" of the state of TStreamerSTL when using multi-thread. Fix ROOT-10648. See related 777f6b750e657e5c70bdf07095214d59c320e985. and 274c7302ebf95d81255db6d8a02afccb387d3c9e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5319
https://github.com/root-project/root/pull/5319:120,performance,multi-thread,multi-thread,120,"Avoid having to modify TStreamerSTL when streaming it.; This fix a ""corruption"" of the state of TStreamerSTL when using multi-thread. Fix ROOT-10648. See related 777f6b750e657e5c70bdf07095214d59c320e985. and 274c7302ebf95d81255db6d8a02afccb387d3c9e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5319
https://github.com/root-project/root/pull/5319:0,safety,Avoid,Avoid,0,"Avoid having to modify TStreamerSTL when streaming it.; This fix a ""corruption"" of the state of TStreamerSTL when using multi-thread. Fix ROOT-10648. See related 777f6b750e657e5c70bdf07095214d59c320e985. and 274c7302ebf95d81255db6d8a02afccb387d3c9e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5319
https://github.com/root-project/root/pull/5319:16,security,modif,modify,16,"Avoid having to modify TStreamerSTL when streaming it.; This fix a ""corruption"" of the state of TStreamerSTL when using multi-thread. Fix ROOT-10648. See related 777f6b750e657e5c70bdf07095214d59c320e985. and 274c7302ebf95d81255db6d8a02afccb387d3c9e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5319
https://github.com/root-project/root/pull/5320:167,availability,state,statement,167,[math] Do not warn if len is unused.; This fixes a nightly build issue on OSX with -Druntime_cxxmodules=On by default. There rootcling still needs to parse the assert statement even if NDEBUG is defined.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5320
https://github.com/root-project/root/pull/5320:59,deployability,build,build,59,[math] Do not warn if len is unused.; This fixes a nightly build issue on OSX with -Druntime_cxxmodules=On by default. There rootcling still needs to parse the assert statement even if NDEBUG is defined.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5320
https://github.com/root-project/root/pull/5320:167,integrability,state,statement,167,[math] Do not warn if len is unused.; This fixes a nightly build issue on OSX with -Druntime_cxxmodules=On by default. There rootcling still needs to parse the assert statement even if NDEBUG is defined.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5320
https://github.com/root-project/root/pull/5320:160,testability,assert,assert,160,[math] Do not warn if len is unused.; This fixes a nightly build issue on OSX with -Druntime_cxxmodules=On by default. There rootcling still needs to parse the assert statement even if NDEBUG is defined.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5320
https://github.com/root-project/root/pull/5321:176,energy efficiency,load,load-libs,176,[PyROOT] Add libxxhash to known libraries after import ROOT; This fixes the nightlies from today: http://cdash.cern.ch/testSummary.php?project=1&name=pyunittests-pyroot-import-load-libs&date=2020-04-08,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5321
https://github.com/root-project/root/pull/5321:176,performance,load,load-libs,176,[PyROOT] Add libxxhash to known libraries after import ROOT; This fixes the nightlies from today: http://cdash.cern.ch/testSummary.php?project=1&name=pyunittests-pyroot-import-load-libs&date=2020-04-08,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5321
https://github.com/root-project/root/pull/5321:119,safety,test,testSummary,119,[PyROOT] Add libxxhash to known libraries after import ROOT; This fixes the nightlies from today: http://cdash.cern.ch/testSummary.php?project=1&name=pyunittests-pyroot-import-load-libs&date=2020-04-08,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5321
https://github.com/root-project/root/pull/5321:119,testability,test,testSummary,119,[PyROOT] Add libxxhash to known libraries after import ROOT; This fixes the nightlies from today: http://cdash.cern.ch/testSummary.php?project=1&name=pyunittests-pyroot-import-load-libs&date=2020-04-08,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5321
https://github.com/root-project/root/pull/5323:172,availability,state,statement,172,[genvector] Do not warn if end is unused.; This fixes a nightly build issue on OSX with -Druntime_cxxmodules=On by default. There rootcling still needs to parse the assert statement even if NDEBUG is defined.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5323
https://github.com/root-project/root/pull/5323:64,deployability,build,build,64,[genvector] Do not warn if end is unused.; This fixes a nightly build issue on OSX with -Druntime_cxxmodules=On by default. There rootcling still needs to parse the assert statement even if NDEBUG is defined.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5323
https://github.com/root-project/root/pull/5323:172,integrability,state,statement,172,[genvector] Do not warn if end is unused.; This fixes a nightly build issue on OSX with -Druntime_cxxmodules=On by default. There rootcling still needs to parse the assert statement even if NDEBUG is defined.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5323
https://github.com/root-project/root/pull/5323:165,testability,assert,assert,165,[genvector] Do not warn if end is unused.; This fixes a nightly build issue on OSX with -Druntime_cxxmodules=On by default. There rootcling still needs to parse the assert statement even if NDEBUG is defined.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5323
https://github.com/root-project/root/pull/5324:127,safety,review,review,127,WIP: HS3 RooFit JSON/YML import/export; This is a rewrite of [this MR](https://github.com/root-project/root/pull/5151). Please review the revised implementation structure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5324
https://github.com/root-project/root/pull/5324:127,testability,review,review,127,WIP: HS3 RooFit JSON/YML import/export; This is a rewrite of [this MR](https://github.com/root-project/root/pull/5151). Please review the revised implementation structure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5324
https://github.com/root-project/root/pull/5325:126,reliability,doe,does,126,"[Exp PyROOT] Tranfer rootlogon option from old PyROOT; When the first lookup is triggered, check if .rootlogon.py (or, if it. does not exist, .rootlogon.C) exist in the home directory and runs it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5325
https://github.com/root-project/root/pull/5326:19,availability,consist,consistent,19,[Roofit Tutorials] consistent headers formating; Make sure the headers of the root tutorials are consistent by:. 1. using the \date tag. 2. using \authors (plural) when needed. 3. adding missing \file tags. 4. fixing spelling mistakes. 5. adding proper line spacing. 6. and a few more things ...,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5326
https://github.com/root-project/root/pull/5326:97,availability,consist,consistent,97,[Roofit Tutorials] consistent headers formating; Make sure the headers of the root tutorials are consistent by:. 1. using the \date tag. 2. using \authors (plural) when needed. 3. adding missing \file tags. 4. fixing spelling mistakes. 5. adding proper line spacing. 6. and a few more things ...,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5326
https://github.com/root-project/root/pull/5326:38,interoperability,format,formating,38,[Roofit Tutorials] consistent headers formating; Make sure the headers of the root tutorials are consistent by:. 1. using the \date tag. 2. using \authors (plural) when needed. 3. adding missing \file tags. 4. fixing spelling mistakes. 5. adding proper line spacing. 6. and a few more things ...,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5326
https://github.com/root-project/root/pull/5326:147,security,auth,authors,147,[Roofit Tutorials] consistent headers formating; Make sure the headers of the root tutorials are consistent by:. 1. using the \date tag. 2. using \authors (plural) when needed. 3. adding missing \file tags. 4. fixing spelling mistakes. 5. adding proper line spacing. 6. and a few more things ...,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5326
https://github.com/root-project/root/pull/5326:19,usability,consist,consistent,19,[Roofit Tutorials] consistent headers formating; Make sure the headers of the root tutorials are consistent by:. 1. using the \date tag. 2. using \authors (plural) when needed. 3. adding missing \file tags. 4. fixing spelling mistakes. 5. adding proper line spacing. 6. and a few more things ...,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5326
https://github.com/root-project/root/pull/5326:97,usability,consist,consistent,97,[Roofit Tutorials] consistent headers formating; Make sure the headers of the root tutorials are consistent by:. 1. using the \date tag. 2. using \authors (plural) when needed. 3. adding missing \file tags. 4. fixing spelling mistakes. 5. adding proper line spacing. 6. and a few more things ...,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5326
https://github.com/root-project/root/pull/5327:9,availability,failur,failures,9,Fix test failures observed in TMVA for DNN/GRU; Improve and fix rnn forward tests for simple RNN cells and GRU. This commit fixes a failure observed in incremental builds with debug mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5327
https://github.com/root-project/root/pull/5327:132,availability,failur,failure,132,Fix test failures observed in TMVA for DNN/GRU; Improve and fix rnn forward tests for simple RNN cells and GRU. This commit fixes a failure observed in incremental builds with debug mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5327
https://github.com/root-project/root/pull/5327:9,deployability,fail,failures,9,Fix test failures observed in TMVA for DNN/GRU; Improve and fix rnn forward tests for simple RNN cells and GRU. This commit fixes a failure observed in incremental builds with debug mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5327
https://github.com/root-project/root/pull/5327:18,deployability,observ,observed,18,Fix test failures observed in TMVA for DNN/GRU; Improve and fix rnn forward tests for simple RNN cells and GRU. This commit fixes a failure observed in incremental builds with debug mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5327
https://github.com/root-project/root/pull/5327:132,deployability,fail,failure,132,Fix test failures observed in TMVA for DNN/GRU; Improve and fix rnn forward tests for simple RNN cells and GRU. This commit fixes a failure observed in incremental builds with debug mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5327
https://github.com/root-project/root/pull/5327:140,deployability,observ,observed,140,Fix test failures observed in TMVA for DNN/GRU; Improve and fix rnn forward tests for simple RNN cells and GRU. This commit fixes a failure observed in incremental builds with debug mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5327
https://github.com/root-project/root/pull/5327:164,deployability,build,builds,164,Fix test failures observed in TMVA for DNN/GRU; Improve and fix rnn forward tests for simple RNN cells and GRU. This commit fixes a failure observed in incremental builds with debug mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5327
https://github.com/root-project/root/pull/5327:9,performance,failur,failures,9,Fix test failures observed in TMVA for DNN/GRU; Improve and fix rnn forward tests for simple RNN cells and GRU. This commit fixes a failure observed in incremental builds with debug mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5327
https://github.com/root-project/root/pull/5327:132,performance,failur,failure,132,Fix test failures observed in TMVA for DNN/GRU; Improve and fix rnn forward tests for simple RNN cells and GRU. This commit fixes a failure observed in incremental builds with debug mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5327
https://github.com/root-project/root/pull/5327:9,reliability,fail,failures,9,Fix test failures observed in TMVA for DNN/GRU; Improve and fix rnn forward tests for simple RNN cells and GRU. This commit fixes a failure observed in incremental builds with debug mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5327
https://github.com/root-project/root/pull/5327:132,reliability,fail,failure,132,Fix test failures observed in TMVA for DNN/GRU; Improve and fix rnn forward tests for simple RNN cells and GRU. This commit fixes a failure observed in incremental builds with debug mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5327
https://github.com/root-project/root/pull/5327:4,safety,test,test,4,Fix test failures observed in TMVA for DNN/GRU; Improve and fix rnn forward tests for simple RNN cells and GRU. This commit fixes a failure observed in incremental builds with debug mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5327
https://github.com/root-project/root/pull/5327:76,safety,test,tests,76,Fix test failures observed in TMVA for DNN/GRU; Improve and fix rnn forward tests for simple RNN cells and GRU. This commit fixes a failure observed in incremental builds with debug mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5327
https://github.com/root-project/root/pull/5327:4,testability,test,test,4,Fix test failures observed in TMVA for DNN/GRU; Improve and fix rnn forward tests for simple RNN cells and GRU. This commit fixes a failure observed in incremental builds with debug mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5327
https://github.com/root-project/root/pull/5327:18,testability,observ,observed,18,Fix test failures observed in TMVA for DNN/GRU; Improve and fix rnn forward tests for simple RNN cells and GRU. This commit fixes a failure observed in incremental builds with debug mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5327
https://github.com/root-project/root/pull/5327:76,testability,test,tests,76,Fix test failures observed in TMVA for DNN/GRU; Improve and fix rnn forward tests for simple RNN cells and GRU. This commit fixes a failure observed in incremental builds with debug mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5327
https://github.com/root-project/root/pull/5327:86,testability,simpl,simple,86,Fix test failures observed in TMVA for DNN/GRU; Improve and fix rnn forward tests for simple RNN cells and GRU. This commit fixes a failure observed in incremental builds with debug mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5327
https://github.com/root-project/root/pull/5327:140,testability,observ,observed,140,Fix test failures observed in TMVA for DNN/GRU; Improve and fix rnn forward tests for simple RNN cells and GRU. This commit fixes a failure observed in incremental builds with debug mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5327
https://github.com/root-project/root/pull/5327:86,usability,simpl,simple,86,Fix test failures observed in TMVA for DNN/GRU; Improve and fix rnn forward tests for simple RNN cells and GRU. This commit fixes a failure observed in incremental builds with debug mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5327
https://github.com/root-project/root/pull/5328:19,availability,consist,consistent,19,[Roofit Tutorials] consistent headers formatting; Make sure the headers of the root tutorials are consistent by:. 1. using the \date tag. 2. using \authors (plural) when needed. 3. adding missing \file tags. 4. fixing spelling mistakes. 5. adding proper line spacing. 6. and a few more things ...,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5328
https://github.com/root-project/root/pull/5328:98,availability,consist,consistent,98,[Roofit Tutorials] consistent headers formatting; Make sure the headers of the root tutorials are consistent by:. 1. using the \date tag. 2. using \authors (plural) when needed. 3. adding missing \file tags. 4. fixing spelling mistakes. 5. adding proper line spacing. 6. and a few more things ...,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5328
https://github.com/root-project/root/pull/5328:38,interoperability,format,formatting,38,[Roofit Tutorials] consistent headers formatting; Make sure the headers of the root tutorials are consistent by:. 1. using the \date tag. 2. using \authors (plural) when needed. 3. adding missing \file tags. 4. fixing spelling mistakes. 5. adding proper line spacing. 6. and a few more things ...,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5328
https://github.com/root-project/root/pull/5328:148,security,auth,authors,148,[Roofit Tutorials] consistent headers formatting; Make sure the headers of the root tutorials are consistent by:. 1. using the \date tag. 2. using \authors (plural) when needed. 3. adding missing \file tags. 4. fixing spelling mistakes. 5. adding proper line spacing. 6. and a few more things ...,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5328
https://github.com/root-project/root/pull/5328:19,usability,consist,consistent,19,[Roofit Tutorials] consistent headers formatting; Make sure the headers of the root tutorials are consistent by:. 1. using the \date tag. 2. using \authors (plural) when needed. 3. adding missing \file tags. 4. fixing spelling mistakes. 5. adding proper line spacing. 6. and a few more things ...,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5328
https://github.com/root-project/root/pull/5328:98,usability,consist,consistent,98,[Roofit Tutorials] consistent headers formatting; Make sure the headers of the root tutorials are consistent by:. 1. using the \date tag. 2. using \authors (plural) when needed. 3. adding missing \file tags. 4. fixing spelling mistakes. 5. adding proper line spacing. 6. and a few more things ...,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5328
https://github.com/root-project/root/pull/5329:309,availability,avail,available,309,"[DF] Re-use jitted lambdas for new RDF expressions with same logic; This reduces the time required by jitting dramatically in many common scenarios, as we do not need a different template specialization of types that are expensive to instantiate for each Define or Filter expression. Performance measurements available [here](https://indico.cern.ch/event/909884/)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:61,deployability,log,logic,61,"[DF] Re-use jitted lambdas for new RDF expressions with same logic; This reduces the time required by jitting dramatically in many common scenarios, as we do not need a different template specialization of types that are expensive to instantiate for each Define or Filter expression. Performance measurements available [here](https://indico.cern.ch/event/909884/)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:73,energy efficiency,reduc,reduces,73,"[DF] Re-use jitted lambdas for new RDF expressions with same logic; This reduces the time required by jitting dramatically in many common scenarios, as we do not need a different template specialization of types that are expensive to instantiate for each Define or Filter expression. Performance measurements available [here](https://indico.cern.ch/event/909884/)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:296,energy efficiency,measur,measurements,296,"[DF] Re-use jitted lambdas for new RDF expressions with same logic; This reduces the time required by jitting dramatically in many common scenarios, as we do not need a different template specialization of types that are expensive to instantiate for each Define or Filter expression. Performance measurements available [here](https://indico.cern.ch/event/909884/)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:265,integrability,Filter,Filter,265,"[DF] Re-use jitted lambdas for new RDF expressions with same logic; This reduces the time required by jitting dramatically in many common scenarios, as we do not need a different template specialization of types that are expensive to instantiate for each Define or Filter expression. Performance measurements available [here](https://indico.cern.ch/event/909884/)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:349,integrability,event,event,349,"[DF] Re-use jitted lambdas for new RDF expressions with same logic; This reduces the time required by jitting dramatically in many common scenarios, as we do not need a different template specialization of types that are expensive to instantiate for each Define or Filter expression. Performance measurements available [here](https://indico.cern.ch/event/909884/)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:138,modifiability,scenario,scenarios,138,"[DF] Re-use jitted lambdas for new RDF expressions with same logic; This reduces the time required by jitting dramatically in many common scenarios, as we do not need a different template specialization of types that are expensive to instantiate for each Define or Filter expression. Performance measurements available [here](https://indico.cern.ch/event/909884/)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:85,performance,time,time,85,"[DF] Re-use jitted lambdas for new RDF expressions with same logic; This reduces the time required by jitting dramatically in many common scenarios, as we do not need a different template specialization of types that are expensive to instantiate for each Define or Filter expression. Performance measurements available [here](https://indico.cern.ch/event/909884/)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:284,performance,Perform,Performance,284,"[DF] Re-use jitted lambdas for new RDF expressions with same logic; This reduces the time required by jitting dramatically in many common scenarios, as we do not need a different template specialization of types that are expensive to instantiate for each Define or Filter expression. Performance measurements available [here](https://indico.cern.ch/event/909884/)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:309,reliability,availab,available,309,"[DF] Re-use jitted lambdas for new RDF expressions with same logic; This reduces the time required by jitting dramatically in many common scenarios, as we do not need a different template specialization of types that are expensive to instantiate for each Define or Filter expression. Performance measurements available [here](https://indico.cern.ch/event/909884/)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:61,safety,log,logic,61,"[DF] Re-use jitted lambdas for new RDF expressions with same logic; This reduces the time required by jitting dramatically in many common scenarios, as we do not need a different template specialization of types that are expensive to instantiate for each Define or Filter expression. Performance measurements available [here](https://indico.cern.ch/event/909884/)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:309,safety,avail,available,309,"[DF] Re-use jitted lambdas for new RDF expressions with same logic; This reduces the time required by jitting dramatically in many common scenarios, as we do not need a different template specialization of types that are expensive to instantiate for each Define or Filter expression. Performance measurements available [here](https://indico.cern.ch/event/909884/)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:61,security,log,logic,61,"[DF] Re-use jitted lambdas for new RDF expressions with same logic; This reduces the time required by jitting dramatically in many common scenarios, as we do not need a different template specialization of types that are expensive to instantiate for each Define or Filter expression. Performance measurements available [here](https://indico.cern.ch/event/909884/)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:309,security,availab,available,309,"[DF] Re-use jitted lambdas for new RDF expressions with same logic; This reduces the time required by jitting dramatically in many common scenarios, as we do not need a different template specialization of types that are expensive to instantiate for each Define or Filter expression. Performance measurements available [here](https://indico.cern.ch/event/909884/)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:61,testability,log,logic,61,"[DF] Re-use jitted lambdas for new RDF expressions with same logic; This reduces the time required by jitting dramatically in many common scenarios, as we do not need a different template specialization of types that are expensive to instantiate for each Define or Filter expression. Performance measurements available [here](https://indico.cern.ch/event/909884/)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:284,usability,Perform,Performance,284,"[DF] Re-use jitted lambdas for new RDF expressions with same logic; This reduces the time required by jitting dramatically in many common scenarios, as we do not need a different template specialization of types that are expensive to instantiate for each Define or Filter expression. Performance measurements available [here](https://indico.cern.ch/event/909884/)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5330:23,availability,error,error,23,[json] properly handle error when reading object; If provided pointer type does not match with type read. from JSON check inheritance. It can be that pointer type. is parent class. In case of error return - do not try to read data for wrong object,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5330
https://github.com/root-project/root/pull/5330:192,availability,error,error,192,[json] properly handle error when reading object; If provided pointer type does not match with type read. from JSON check inheritance. It can be that pointer type. is parent class. In case of error return - do not try to read data for wrong object,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5330
https://github.com/root-project/root/pull/5330:122,modifiability,inherit,inheritance,122,[json] properly handle error when reading object; If provided pointer type does not match with type read. from JSON check inheritance. It can be that pointer type. is parent class. In case of error return - do not try to read data for wrong object,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5330
https://github.com/root-project/root/pull/5330:23,performance,error,error,23,[json] properly handle error when reading object; If provided pointer type does not match with type read. from JSON check inheritance. It can be that pointer type. is parent class. In case of error return - do not try to read data for wrong object,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5330
https://github.com/root-project/root/pull/5330:192,performance,error,error,192,[json] properly handle error when reading object; If provided pointer type does not match with type read. from JSON check inheritance. It can be that pointer type. is parent class. In case of error return - do not try to read data for wrong object,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5330
https://github.com/root-project/root/pull/5330:75,reliability,doe,does,75,[json] properly handle error when reading object; If provided pointer type does not match with type read. from JSON check inheritance. It can be that pointer type. is parent class. In case of error return - do not try to read data for wrong object,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5330
https://github.com/root-project/root/pull/5330:23,safety,error,error,23,[json] properly handle error when reading object; If provided pointer type does not match with type read. from JSON check inheritance. It can be that pointer type. is parent class. In case of error return - do not try to read data for wrong object,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5330
https://github.com/root-project/root/pull/5330:192,safety,error,error,192,[json] properly handle error when reading object; If provided pointer type does not match with type read. from JSON check inheritance. It can be that pointer type. is parent class. In case of error return - do not try to read data for wrong object,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5330
https://github.com/root-project/root/pull/5330:23,usability,error,error,23,[json] properly handle error when reading object; If provided pointer type does not match with type read. from JSON check inheritance. It can be that pointer type. is parent class. In case of error return - do not try to read data for wrong object,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5330
https://github.com/root-project/root/pull/5330:192,usability,error,error,192,[json] properly handle error when reading object; If provided pointer type does not match with type read. from JSON check inheritance. It can be that pointer type. is parent class. In case of error return - do not try to read data for wrong object,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5330
https://github.com/root-project/root/pull/5333:66,availability,error,errors,66,"[RF] Backport of fix for ROOT-10668.; When asymptotically correct errors are used, the current implementation. breaks if variables don't have identical name and title. This is solved. by always using the name.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5333
https://github.com/root-project/root/pull/5333:87,energy efficiency,current,current,87,"[RF] Backport of fix for ROOT-10668.; When asymptotically correct errors are used, the current implementation. breaks if variables don't have identical name and title. This is solved. by always using the name.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5333
https://github.com/root-project/root/pull/5333:121,modifiability,variab,variables,121,"[RF] Backport of fix for ROOT-10668.; When asymptotically correct errors are used, the current implementation. breaks if variables don't have identical name and title. This is solved. by always using the name.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5333
https://github.com/root-project/root/pull/5333:66,performance,error,errors,66,"[RF] Backport of fix for ROOT-10668.; When asymptotically correct errors are used, the current implementation. breaks if variables don't have identical name and title. This is solved. by always using the name.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5333
https://github.com/root-project/root/pull/5333:66,safety,error,errors,66,"[RF] Backport of fix for ROOT-10668.; When asymptotically correct errors are used, the current implementation. breaks if variables don't have identical name and title. This is solved. by always using the name.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5333
https://github.com/root-project/root/pull/5333:142,security,ident,identical,142,"[RF] Backport of fix for ROOT-10668.; When asymptotically correct errors are used, the current implementation. breaks if variables don't have identical name and title. This is solved. by always using the name.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5333
https://github.com/root-project/root/pull/5333:66,usability,error,errors,66,"[RF] Backport of fix for ROOT-10668.; When asymptotically correct errors are used, the current implementation. breaks if variables don't have identical name and title. This is solved. by always using the name.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5333
https://github.com/root-project/root/pull/5334:270,availability,error,error,270,"[Exp PyROOT][ROOT-8011] Turn libJupyROOT into a C extension module; As discussed in ROOT-8011, TPython can't work with the ROOT C++. kernel for Jupyter because the current implementation relies. on a plain shared library to run the cell code and capture. its output and error. In particular, a crash happens when. the library, libJupyROOT, tries to get the __main__ module. in TPython's initialization. Turning libJupyROOT into a C extension module makes TPython's. initialization succeed, since Python is fully operational. This PR also fixes an issue when setting the CPPYY_BACKEND_LIBRARY variable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5334
https://github.com/root-project/root/pull/5334:512,availability,operat,operational,512,"[Exp PyROOT][ROOT-8011] Turn libJupyROOT into a C extension module; As discussed in ROOT-8011, TPython can't work with the ROOT C++. kernel for Jupyter because the current implementation relies. on a plain shared library to run the cell code and capture. its output and error. In particular, a crash happens when. the library, libJupyROOT, tries to get the __main__ module. in TPython's initialization. Turning libJupyROOT into a C extension module makes TPython's. initialization succeed, since Python is fully operational. This PR also fixes an issue when setting the CPPYY_BACKEND_LIBRARY variable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5334
https://github.com/root-project/root/pull/5334:60,deployability,modul,module,60,"[Exp PyROOT][ROOT-8011] Turn libJupyROOT into a C extension module; As discussed in ROOT-8011, TPython can't work with the ROOT C++. kernel for Jupyter because the current implementation relies. on a plain shared library to run the cell code and capture. its output and error. In particular, a crash happens when. the library, libJupyROOT, tries to get the __main__ module. in TPython's initialization. Turning libJupyROOT into a C extension module makes TPython's. initialization succeed, since Python is fully operational. This PR also fixes an issue when setting the CPPYY_BACKEND_LIBRARY variable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5334
https://github.com/root-project/root/pull/5334:366,deployability,modul,module,366,"[Exp PyROOT][ROOT-8011] Turn libJupyROOT into a C extension module; As discussed in ROOT-8011, TPython can't work with the ROOT C++. kernel for Jupyter because the current implementation relies. on a plain shared library to run the cell code and capture. its output and error. In particular, a crash happens when. the library, libJupyROOT, tries to get the __main__ module. in TPython's initialization. Turning libJupyROOT into a C extension module makes TPython's. initialization succeed, since Python is fully operational. This PR also fixes an issue when setting the CPPYY_BACKEND_LIBRARY variable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5334
https://github.com/root-project/root/pull/5334:442,deployability,modul,module,442,"[Exp PyROOT][ROOT-8011] Turn libJupyROOT into a C extension module; As discussed in ROOT-8011, TPython can't work with the ROOT C++. kernel for Jupyter because the current implementation relies. on a plain shared library to run the cell code and capture. its output and error. In particular, a crash happens when. the library, libJupyROOT, tries to get the __main__ module. in TPython's initialization. Turning libJupyROOT into a C extension module makes TPython's. initialization succeed, since Python is fully operational. This PR also fixes an issue when setting the CPPYY_BACKEND_LIBRARY variable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5334
https://github.com/root-project/root/pull/5334:164,energy efficiency,current,current,164,"[Exp PyROOT][ROOT-8011] Turn libJupyROOT into a C extension module; As discussed in ROOT-8011, TPython can't work with the ROOT C++. kernel for Jupyter because the current implementation relies. on a plain shared library to run the cell code and capture. its output and error. In particular, a crash happens when. the library, libJupyROOT, tries to get the __main__ module. in TPython's initialization. Turning libJupyROOT into a C extension module makes TPython's. initialization succeed, since Python is fully operational. This PR also fixes an issue when setting the CPPYY_BACKEND_LIBRARY variable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5334
https://github.com/root-project/root/pull/5334:206,interoperability,share,shared,206,"[Exp PyROOT][ROOT-8011] Turn libJupyROOT into a C extension module; As discussed in ROOT-8011, TPython can't work with the ROOT C++. kernel for Jupyter because the current implementation relies. on a plain shared library to run the cell code and capture. its output and error. In particular, a crash happens when. the library, libJupyROOT, tries to get the __main__ module. in TPython's initialization. Turning libJupyROOT into a C extension module makes TPython's. initialization succeed, since Python is fully operational. This PR also fixes an issue when setting the CPPYY_BACKEND_LIBRARY variable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5334
https://github.com/root-project/root/pull/5334:50,modifiability,extens,extension,50,"[Exp PyROOT][ROOT-8011] Turn libJupyROOT into a C extension module; As discussed in ROOT-8011, TPython can't work with the ROOT C++. kernel for Jupyter because the current implementation relies. on a plain shared library to run the cell code and capture. its output and error. In particular, a crash happens when. the library, libJupyROOT, tries to get the __main__ module. in TPython's initialization. Turning libJupyROOT into a C extension module makes TPython's. initialization succeed, since Python is fully operational. This PR also fixes an issue when setting the CPPYY_BACKEND_LIBRARY variable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5334
https://github.com/root-project/root/pull/5334:60,modifiability,modul,module,60,"[Exp PyROOT][ROOT-8011] Turn libJupyROOT into a C extension module; As discussed in ROOT-8011, TPython can't work with the ROOT C++. kernel for Jupyter because the current implementation relies. on a plain shared library to run the cell code and capture. its output and error. In particular, a crash happens when. the library, libJupyROOT, tries to get the __main__ module. in TPython's initialization. Turning libJupyROOT into a C extension module makes TPython's. initialization succeed, since Python is fully operational. This PR also fixes an issue when setting the CPPYY_BACKEND_LIBRARY variable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5334
https://github.com/root-project/root/pull/5334:366,modifiability,modul,module,366,"[Exp PyROOT][ROOT-8011] Turn libJupyROOT into a C extension module; As discussed in ROOT-8011, TPython can't work with the ROOT C++. kernel for Jupyter because the current implementation relies. on a plain shared library to run the cell code and capture. its output and error. In particular, a crash happens when. the library, libJupyROOT, tries to get the __main__ module. in TPython's initialization. Turning libJupyROOT into a C extension module makes TPython's. initialization succeed, since Python is fully operational. This PR also fixes an issue when setting the CPPYY_BACKEND_LIBRARY variable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5334
https://github.com/root-project/root/pull/5334:432,modifiability,extens,extension,432,"[Exp PyROOT][ROOT-8011] Turn libJupyROOT into a C extension module; As discussed in ROOT-8011, TPython can't work with the ROOT C++. kernel for Jupyter because the current implementation relies. on a plain shared library to run the cell code and capture. its output and error. In particular, a crash happens when. the library, libJupyROOT, tries to get the __main__ module. in TPython's initialization. Turning libJupyROOT into a C extension module makes TPython's. initialization succeed, since Python is fully operational. This PR also fixes an issue when setting the CPPYY_BACKEND_LIBRARY variable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5334
https://github.com/root-project/root/pull/5334:442,modifiability,modul,module,442,"[Exp PyROOT][ROOT-8011] Turn libJupyROOT into a C extension module; As discussed in ROOT-8011, TPython can't work with the ROOT C++. kernel for Jupyter because the current implementation relies. on a plain shared library to run the cell code and capture. its output and error. In particular, a crash happens when. the library, libJupyROOT, tries to get the __main__ module. in TPython's initialization. Turning libJupyROOT into a C extension module makes TPython's. initialization succeed, since Python is fully operational. This PR also fixes an issue when setting the CPPYY_BACKEND_LIBRARY variable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5334
https://github.com/root-project/root/pull/5334:592,modifiability,variab,variable,592,"[Exp PyROOT][ROOT-8011] Turn libJupyROOT into a C extension module; As discussed in ROOT-8011, TPython can't work with the ROOT C++. kernel for Jupyter because the current implementation relies. on a plain shared library to run the cell code and capture. its output and error. In particular, a crash happens when. the library, libJupyROOT, tries to get the __main__ module. in TPython's initialization. Turning libJupyROOT into a C extension module makes TPython's. initialization succeed, since Python is fully operational. This PR also fixes an issue when setting the CPPYY_BACKEND_LIBRARY variable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5334
https://github.com/root-project/root/pull/5334:270,performance,error,error,270,"[Exp PyROOT][ROOT-8011] Turn libJupyROOT into a C extension module; As discussed in ROOT-8011, TPython can't work with the ROOT C++. kernel for Jupyter because the current implementation relies. on a plain shared library to run the cell code and capture. its output and error. In particular, a crash happens when. the library, libJupyROOT, tries to get the __main__ module. in TPython's initialization. Turning libJupyROOT into a C extension module makes TPython's. initialization succeed, since Python is fully operational. This PR also fixes an issue when setting the CPPYY_BACKEND_LIBRARY variable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5334
https://github.com/root-project/root/pull/5334:60,safety,modul,module,60,"[Exp PyROOT][ROOT-8011] Turn libJupyROOT into a C extension module; As discussed in ROOT-8011, TPython can't work with the ROOT C++. kernel for Jupyter because the current implementation relies. on a plain shared library to run the cell code and capture. its output and error. In particular, a crash happens when. the library, libJupyROOT, tries to get the __main__ module. in TPython's initialization. Turning libJupyROOT into a C extension module makes TPython's. initialization succeed, since Python is fully operational. This PR also fixes an issue when setting the CPPYY_BACKEND_LIBRARY variable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5334
https://github.com/root-project/root/pull/5334:270,safety,error,error,270,"[Exp PyROOT][ROOT-8011] Turn libJupyROOT into a C extension module; As discussed in ROOT-8011, TPython can't work with the ROOT C++. kernel for Jupyter because the current implementation relies. on a plain shared library to run the cell code and capture. its output and error. In particular, a crash happens when. the library, libJupyROOT, tries to get the __main__ module. in TPython's initialization. Turning libJupyROOT into a C extension module makes TPython's. initialization succeed, since Python is fully operational. This PR also fixes an issue when setting the CPPYY_BACKEND_LIBRARY variable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5334
https://github.com/root-project/root/pull/5334:366,safety,modul,module,366,"[Exp PyROOT][ROOT-8011] Turn libJupyROOT into a C extension module; As discussed in ROOT-8011, TPython can't work with the ROOT C++. kernel for Jupyter because the current implementation relies. on a plain shared library to run the cell code and capture. its output and error. In particular, a crash happens when. the library, libJupyROOT, tries to get the __main__ module. in TPython's initialization. Turning libJupyROOT into a C extension module makes TPython's. initialization succeed, since Python is fully operational. This PR also fixes an issue when setting the CPPYY_BACKEND_LIBRARY variable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5334
https://github.com/root-project/root/pull/5334:442,safety,modul,module,442,"[Exp PyROOT][ROOT-8011] Turn libJupyROOT into a C extension module; As discussed in ROOT-8011, TPython can't work with the ROOT C++. kernel for Jupyter because the current implementation relies. on a plain shared library to run the cell code and capture. its output and error. In particular, a crash happens when. the library, libJupyROOT, tries to get the __main__ module. in TPython's initialization. Turning libJupyROOT into a C extension module makes TPython's. initialization succeed, since Python is fully operational. This PR also fixes an issue when setting the CPPYY_BACKEND_LIBRARY variable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5334
https://github.com/root-project/root/pull/5334:270,usability,error,error,270,"[Exp PyROOT][ROOT-8011] Turn libJupyROOT into a C extension module; As discussed in ROOT-8011, TPython can't work with the ROOT C++. kernel for Jupyter because the current implementation relies. on a plain shared library to run the cell code and capture. its output and error. In particular, a crash happens when. the library, libJupyROOT, tries to get the __main__ module. in TPython's initialization. Turning libJupyROOT into a C extension module makes TPython's. initialization succeed, since Python is fully operational. This PR also fixes an issue when setting the CPPYY_BACKEND_LIBRARY variable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5334
https://github.com/root-project/root/pull/5335:19,availability,consist,consistent,19,[Roofit Tutorials] consistent headers formatting; Make sure the headers of the root tutorials are consistent by:. - using the \date tag. - using \authors (plural) when needed. - adding missing \file tags. - fixing spelling mistakes. - adding proper line spacing. - and a few more things ...,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5335
https://github.com/root-project/root/pull/5335:98,availability,consist,consistent,98,[Roofit Tutorials] consistent headers formatting; Make sure the headers of the root tutorials are consistent by:. - using the \date tag. - using \authors (plural) when needed. - adding missing \file tags. - fixing spelling mistakes. - adding proper line spacing. - and a few more things ...,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5335
https://github.com/root-project/root/pull/5335:38,interoperability,format,formatting,38,[Roofit Tutorials] consistent headers formatting; Make sure the headers of the root tutorials are consistent by:. - using the \date tag. - using \authors (plural) when needed. - adding missing \file tags. - fixing spelling mistakes. - adding proper line spacing. - and a few more things ...,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5335
https://github.com/root-project/root/pull/5335:146,security,auth,authors,146,[Roofit Tutorials] consistent headers formatting; Make sure the headers of the root tutorials are consistent by:. - using the \date tag. - using \authors (plural) when needed. - adding missing \file tags. - fixing spelling mistakes. - adding proper line spacing. - and a few more things ...,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5335
https://github.com/root-project/root/pull/5335:19,usability,consist,consistent,19,[Roofit Tutorials] consistent headers formatting; Make sure the headers of the root tutorials are consistent by:. - using the \date tag. - using \authors (plural) when needed. - adding missing \file tags. - fixing spelling mistakes. - adding proper line spacing. - and a few more things ...,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5335
https://github.com/root-project/root/pull/5335:98,usability,consist,consistent,98,[Roofit Tutorials] consistent headers formatting; Make sure the headers of the root tutorials are consistent by:. - using the \date tag. - using \authors (plural) when needed. - adding missing \file tags. - fixing spelling mistakes. - adding proper line spacing. - and a few more things ...,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5335
https://github.com/root-project/root/pull/5336:60,availability,state,statement,60,[math] Always specify the parameter name used in the assert statement.; The intent of this code seemed to be avoiding a CINT issue. Now cling can handle such constructs. This fixes an issue with runtime_cxxmodules on OSX sdk where even when NDEBUG is defined the assert still checks the identifier.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5336
https://github.com/root-project/root/pull/5336:60,integrability,state,statement,60,[math] Always specify the parameter name used in the assert statement.; The intent of this code seemed to be avoiding a CINT issue. Now cling can handle such constructs. This fixes an issue with runtime_cxxmodules on OSX sdk where even when NDEBUG is defined the assert still checks the identifier.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5336
https://github.com/root-project/root/pull/5336:14,interoperability,specif,specify,14,[math] Always specify the parameter name used in the assert statement.; The intent of this code seemed to be avoiding a CINT issue. Now cling can handle such constructs. This fixes an issue with runtime_cxxmodules on OSX sdk where even when NDEBUG is defined the assert still checks the identifier.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5336
https://github.com/root-project/root/pull/5336:26,modifiability,paramet,parameter,26,[math] Always specify the parameter name used in the assert statement.; The intent of this code seemed to be avoiding a CINT issue. Now cling can handle such constructs. This fixes an issue with runtime_cxxmodules on OSX sdk where even when NDEBUG is defined the assert still checks the identifier.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5336
https://github.com/root-project/root/pull/5336:109,safety,avoid,avoiding,109,[math] Always specify the parameter name used in the assert statement.; The intent of this code seemed to be avoiding a CINT issue. Now cling can handle such constructs. This fixes an issue with runtime_cxxmodules on OSX sdk where even when NDEBUG is defined the assert still checks the identifier.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5336
https://github.com/root-project/root/pull/5336:287,security,ident,identifier,287,[math] Always specify the parameter name used in the assert statement.; The intent of this code seemed to be avoiding a CINT issue. Now cling can handle such constructs. This fixes an issue with runtime_cxxmodules on OSX sdk where even when NDEBUG is defined the assert still checks the identifier.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5336
https://github.com/root-project/root/pull/5336:53,testability,assert,assert,53,[math] Always specify the parameter name used in the assert statement.; The intent of this code seemed to be avoiding a CINT issue. Now cling can handle such constructs. This fixes an issue with runtime_cxxmodules on OSX sdk where even when NDEBUG is defined the assert still checks the identifier.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5336
https://github.com/root-project/root/pull/5336:263,testability,assert,assert,263,[math] Always specify the parameter name used in the assert statement.; The intent of this code seemed to be avoiding a CINT issue. Now cling can handle such constructs. This fixes an issue with runtime_cxxmodules on OSX sdk where even when NDEBUG is defined the assert still checks the identifier.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5336
https://github.com/root-project/root/pull/5337:401,availability,restor,restored,401,"[RF] Two bugfixes.; ROOT-7921. When using the RooCustomizer factory interface, deep trees couldn't be. reused in subsequent expressions. ROOT-10670. Due to changes somewhere in math, the RooMinimizer in ROOT 6.20 falls. back to Minuit after using minimize() with a different minimiser. minim.minimize(""Minuit2"");. minim.hesse(); // Users expected minuit2 here, but now minuit. The usual behaviour was restored by remembering the choice of minimiser. in `minimize`, which apparently happened behind the scenes in math in. the past.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5337
https://github.com/root-project/root/pull/5337:68,integrability,interfac,interface,68,"[RF] Two bugfixes.; ROOT-7921. When using the RooCustomizer factory interface, deep trees couldn't be. reused in subsequent expressions. ROOT-10670. Due to changes somewhere in math, the RooMinimizer in ROOT 6.20 falls. back to Minuit after using minimize() with a different minimiser. minim.minimize(""Minuit2"");. minim.hesse(); // Users expected minuit2 here, but now minuit. The usual behaviour was restored by remembering the choice of minimiser. in `minimize`, which apparently happened behind the scenes in math in. the past.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5337
https://github.com/root-project/root/pull/5337:113,integrability,sub,subsequent,113,"[RF] Two bugfixes.; ROOT-7921. When using the RooCustomizer factory interface, deep trees couldn't be. reused in subsequent expressions. ROOT-10670. Due to changes somewhere in math, the RooMinimizer in ROOT 6.20 falls. back to Minuit after using minimize() with a different minimiser. minim.minimize(""Minuit2"");. minim.hesse(); // Users expected minuit2 here, but now minuit. The usual behaviour was restored by remembering the choice of minimiser. in `minimize`, which apparently happened behind the scenes in math in. the past.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5337
https://github.com/root-project/root/pull/5337:68,interoperability,interfac,interface,68,"[RF] Two bugfixes.; ROOT-7921. When using the RooCustomizer factory interface, deep trees couldn't be. reused in subsequent expressions. ROOT-10670. Due to changes somewhere in math, the RooMinimizer in ROOT 6.20 falls. back to Minuit after using minimize() with a different minimiser. minim.minimize(""Minuit2"");. minim.hesse(); // Users expected minuit2 here, but now minuit. The usual behaviour was restored by remembering the choice of minimiser. in `minimize`, which apparently happened behind the scenes in math in. the past.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5337
https://github.com/root-project/root/pull/5337:68,modifiability,interfac,interface,68,"[RF] Two bugfixes.; ROOT-7921. When using the RooCustomizer factory interface, deep trees couldn't be. reused in subsequent expressions. ROOT-10670. Due to changes somewhere in math, the RooMinimizer in ROOT 6.20 falls. back to Minuit after using minimize() with a different minimiser. minim.minimize(""Minuit2"");. minim.hesse(); // Users expected minuit2 here, but now minuit. The usual behaviour was restored by remembering the choice of minimiser. in `minimize`, which apparently happened behind the scenes in math in. the past.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5337
https://github.com/root-project/root/pull/5337:103,modifiability,reu,reused,103,"[RF] Two bugfixes.; ROOT-7921. When using the RooCustomizer factory interface, deep trees couldn't be. reused in subsequent expressions. ROOT-10670. Due to changes somewhere in math, the RooMinimizer in ROOT 6.20 falls. back to Minuit after using minimize() with a different minimiser. minim.minimize(""Minuit2"");. minim.hesse(); // Users expected minuit2 here, but now minuit. The usual behaviour was restored by remembering the choice of minimiser. in `minimize`, which apparently happened behind the scenes in math in. the past.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5337
https://github.com/root-project/root/pull/5337:401,reliability,restor,restored,401,"[RF] Two bugfixes.; ROOT-7921. When using the RooCustomizer factory interface, deep trees couldn't be. reused in subsequent expressions. ROOT-10670. Due to changes somewhere in math, the RooMinimizer in ROOT 6.20 falls. back to Minuit after using minimize() with a different minimiser. minim.minimize(""Minuit2"");. minim.hesse(); // Users expected minuit2 here, but now minuit. The usual behaviour was restored by remembering the choice of minimiser. in `minimize`, which apparently happened behind the scenes in math in. the past.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5337
https://github.com/root-project/root/pull/5337:413,safety,reme,remembering,413,"[RF] Two bugfixes.; ROOT-7921. When using the RooCustomizer factory interface, deep trees couldn't be. reused in subsequent expressions. ROOT-10670. Due to changes somewhere in math, the RooMinimizer in ROOT 6.20 falls. back to Minuit after using minimize() with a different minimiser. minim.minimize(""Minuit2"");. minim.hesse(); // Users expected minuit2 here, but now minuit. The usual behaviour was restored by remembering the choice of minimiser. in `minimize`, which apparently happened behind the scenes in math in. the past.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5337
https://github.com/root-project/root/pull/5337:247,usability,minim,minimize,247,"[RF] Two bugfixes.; ROOT-7921. When using the RooCustomizer factory interface, deep trees couldn't be. reused in subsequent expressions. ROOT-10670. Due to changes somewhere in math, the RooMinimizer in ROOT 6.20 falls. back to Minuit after using minimize() with a different minimiser. minim.minimize(""Minuit2"");. minim.hesse(); // Users expected minuit2 here, but now minuit. The usual behaviour was restored by remembering the choice of minimiser. in `minimize`, which apparently happened behind the scenes in math in. the past.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5337
https://github.com/root-project/root/pull/5337:275,usability,minim,minimiser,275,"[RF] Two bugfixes.; ROOT-7921. When using the RooCustomizer factory interface, deep trees couldn't be. reused in subsequent expressions. ROOT-10670. Due to changes somewhere in math, the RooMinimizer in ROOT 6.20 falls. back to Minuit after using minimize() with a different minimiser. minim.minimize(""Minuit2"");. minim.hesse(); // Users expected minuit2 here, but now minuit. The usual behaviour was restored by remembering the choice of minimiser. in `minimize`, which apparently happened behind the scenes in math in. the past.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5337
https://github.com/root-project/root/pull/5337:286,usability,minim,minim,286,"[RF] Two bugfixes.; ROOT-7921. When using the RooCustomizer factory interface, deep trees couldn't be. reused in subsequent expressions. ROOT-10670. Due to changes somewhere in math, the RooMinimizer in ROOT 6.20 falls. back to Minuit after using minimize() with a different minimiser. minim.minimize(""Minuit2"");. minim.hesse(); // Users expected minuit2 here, but now minuit. The usual behaviour was restored by remembering the choice of minimiser. in `minimize`, which apparently happened behind the scenes in math in. the past.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5337
https://github.com/root-project/root/pull/5337:292,usability,minim,minimize,292,"[RF] Two bugfixes.; ROOT-7921. When using the RooCustomizer factory interface, deep trees couldn't be. reused in subsequent expressions. ROOT-10670. Due to changes somewhere in math, the RooMinimizer in ROOT 6.20 falls. back to Minuit after using minimize() with a different minimiser. minim.minimize(""Minuit2"");. minim.hesse(); // Users expected minuit2 here, but now minuit. The usual behaviour was restored by remembering the choice of minimiser. in `minimize`, which apparently happened behind the scenes in math in. the past.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5337
https://github.com/root-project/root/pull/5337:314,usability,minim,minim,314,"[RF] Two bugfixes.; ROOT-7921. When using the RooCustomizer factory interface, deep trees couldn't be. reused in subsequent expressions. ROOT-10670. Due to changes somewhere in math, the RooMinimizer in ROOT 6.20 falls. back to Minuit after using minimize() with a different minimiser. minim.minimize(""Minuit2"");. minim.hesse(); // Users expected minuit2 here, but now minuit. The usual behaviour was restored by remembering the choice of minimiser. in `minimize`, which apparently happened behind the scenes in math in. the past.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5337
https://github.com/root-project/root/pull/5337:332,usability,User,Users,332,"[RF] Two bugfixes.; ROOT-7921. When using the RooCustomizer factory interface, deep trees couldn't be. reused in subsequent expressions. ROOT-10670. Due to changes somewhere in math, the RooMinimizer in ROOT 6.20 falls. back to Minuit after using minimize() with a different minimiser. minim.minimize(""Minuit2"");. minim.hesse(); // Users expected minuit2 here, but now minuit. The usual behaviour was restored by remembering the choice of minimiser. in `minimize`, which apparently happened behind the scenes in math in. the past.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5337
https://github.com/root-project/root/pull/5337:387,usability,behavi,behaviour,387,"[RF] Two bugfixes.; ROOT-7921. When using the RooCustomizer factory interface, deep trees couldn't be. reused in subsequent expressions. ROOT-10670. Due to changes somewhere in math, the RooMinimizer in ROOT 6.20 falls. back to Minuit after using minimize() with a different minimiser. minim.minimize(""Minuit2"");. minim.hesse(); // Users expected minuit2 here, but now minuit. The usual behaviour was restored by remembering the choice of minimiser. in `minimize`, which apparently happened behind the scenes in math in. the past.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5337
https://github.com/root-project/root/pull/5337:439,usability,minim,minimiser,439,"[RF] Two bugfixes.; ROOT-7921. When using the RooCustomizer factory interface, deep trees couldn't be. reused in subsequent expressions. ROOT-10670. Due to changes somewhere in math, the RooMinimizer in ROOT 6.20 falls. back to Minuit after using minimize() with a different minimiser. minim.minimize(""Minuit2"");. minim.hesse(); // Users expected minuit2 here, but now minuit. The usual behaviour was restored by remembering the choice of minimiser. in `minimize`, which apparently happened behind the scenes in math in. the past.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5337
https://github.com/root-project/root/pull/5337:454,usability,minim,minimize,454,"[RF] Two bugfixes.; ROOT-7921. When using the RooCustomizer factory interface, deep trees couldn't be. reused in subsequent expressions. ROOT-10670. Due to changes somewhere in math, the RooMinimizer in ROOT 6.20 falls. back to Minuit after using minimize() with a different minimiser. minim.minimize(""Minuit2"");. minim.hesse(); // Users expected minuit2 here, but now minuit. The usual behaviour was restored by remembering the choice of minimiser. in `minimize`, which apparently happened behind the scenes in math in. the past.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5337
https://github.com/root-project/root/pull/5339:168,availability,avail,available,168,[Cocoa] Fix compilation problem on MacOsX 10.13; On MacOsX 10.13 the previous fix for crosshair. This new version is simpler and does not require. to use functions not available on 10.13.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5339
https://github.com/root-project/root/pull/5339:106,deployability,version,version,106,[Cocoa] Fix compilation problem on MacOsX 10.13; On MacOsX 10.13 the previous fix for crosshair. This new version is simpler and does not require. to use functions not available on 10.13.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5339
https://github.com/root-project/root/pull/5339:106,integrability,version,version,106,[Cocoa] Fix compilation problem on MacOsX 10.13; On MacOsX 10.13 the previous fix for crosshair. This new version is simpler and does not require. to use functions not available on 10.13.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5339
https://github.com/root-project/root/pull/5339:106,modifiability,version,version,106,[Cocoa] Fix compilation problem on MacOsX 10.13; On MacOsX 10.13 the previous fix for crosshair. This new version is simpler and does not require. to use functions not available on 10.13.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5339
https://github.com/root-project/root/pull/5339:129,reliability,doe,does,129,[Cocoa] Fix compilation problem on MacOsX 10.13; On MacOsX 10.13 the previous fix for crosshair. This new version is simpler and does not require. to use functions not available on 10.13.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5339
https://github.com/root-project/root/pull/5339:168,reliability,availab,available,168,[Cocoa] Fix compilation problem on MacOsX 10.13; On MacOsX 10.13 the previous fix for crosshair. This new version is simpler and does not require. to use functions not available on 10.13.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5339
https://github.com/root-project/root/pull/5339:168,safety,avail,available,168,[Cocoa] Fix compilation problem on MacOsX 10.13; On MacOsX 10.13 the previous fix for crosshair. This new version is simpler and does not require. to use functions not available on 10.13.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5339
https://github.com/root-project/root/pull/5339:168,security,availab,available,168,[Cocoa] Fix compilation problem on MacOsX 10.13; On MacOsX 10.13 the previous fix for crosshair. This new version is simpler and does not require. to use functions not available on 10.13.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5339
https://github.com/root-project/root/pull/5339:117,testability,simpl,simpler,117,[Cocoa] Fix compilation problem on MacOsX 10.13; On MacOsX 10.13 the previous fix for crosshair. This new version is simpler and does not require. to use functions not available on 10.13.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5339
https://github.com/root-project/root/pull/5339:117,usability,simpl,simpler,117,[Cocoa] Fix compilation problem on MacOsX 10.13; On MacOsX 10.13 the previous fix for crosshair. This new version is simpler and does not require. to use functions not available on 10.13.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5339
https://github.com/root-project/root/pull/5340:241,energy efficiency,load,loaded,241,"[Tree] Fix GetReadCache when called from a TChain; When GetReadCache is called from a TChain, the check against the `this`. pointer should actually become a check against `fTree`: the cache is. not for the TChain object but for the TTree it loaded. This should fix ROOT-10672.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5340
https://github.com/root-project/root/pull/5340:184,performance,cach,cache,184,"[Tree] Fix GetReadCache when called from a TChain; When GetReadCache is called from a TChain, the check against the `this`. pointer should actually become a check against `fTree`: the cache is. not for the TChain object but for the TTree it loaded. This should fix ROOT-10672.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5340
https://github.com/root-project/root/pull/5340:241,performance,load,loaded,241,"[Tree] Fix GetReadCache when called from a TChain; When GetReadCache is called from a TChain, the check against the `this`. pointer should actually become a check against `fTree`: the cache is. not for the TChain object but for the TTree it loaded. This should fix ROOT-10672.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5340
https://github.com/root-project/root/pull/5341:274,availability,restor,restored,274,"[RF] Fix ROOT-10670.; Due to changes somewhere in math, the RooMinimizer in ROOT 6.20 falls. back to Minuit after using minimize() with a different minimiser. minim.minimize(""Minuit2"");. minim.hesse(); // Users expected minuit2 here, but now minuit. The usual behaviour was restored by remembering the choice of minimiser. in `minimize`, which apparently happened behind the scenes in math in. the past. (cherry picked from commit 71efe47ff4322b1aeae68c7a8801fa8935eaecee)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5341
https://github.com/root-project/root/pull/5341:274,reliability,restor,restored,274,"[RF] Fix ROOT-10670.; Due to changes somewhere in math, the RooMinimizer in ROOT 6.20 falls. back to Minuit after using minimize() with a different minimiser. minim.minimize(""Minuit2"");. minim.hesse(); // Users expected minuit2 here, but now minuit. The usual behaviour was restored by remembering the choice of minimiser. in `minimize`, which apparently happened behind the scenes in math in. the past. (cherry picked from commit 71efe47ff4322b1aeae68c7a8801fa8935eaecee)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5341
https://github.com/root-project/root/pull/5341:286,safety,reme,remembering,286,"[RF] Fix ROOT-10670.; Due to changes somewhere in math, the RooMinimizer in ROOT 6.20 falls. back to Minuit after using minimize() with a different minimiser. minim.minimize(""Minuit2"");. minim.hesse(); // Users expected minuit2 here, but now minuit. The usual behaviour was restored by remembering the choice of minimiser. in `minimize`, which apparently happened behind the scenes in math in. the past. (cherry picked from commit 71efe47ff4322b1aeae68c7a8801fa8935eaecee)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5341
https://github.com/root-project/root/pull/5341:120,usability,minim,minimize,120,"[RF] Fix ROOT-10670.; Due to changes somewhere in math, the RooMinimizer in ROOT 6.20 falls. back to Minuit after using minimize() with a different minimiser. minim.minimize(""Minuit2"");. minim.hesse(); // Users expected minuit2 here, but now minuit. The usual behaviour was restored by remembering the choice of minimiser. in `minimize`, which apparently happened behind the scenes in math in. the past. (cherry picked from commit 71efe47ff4322b1aeae68c7a8801fa8935eaecee)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5341
https://github.com/root-project/root/pull/5341:148,usability,minim,minimiser,148,"[RF] Fix ROOT-10670.; Due to changes somewhere in math, the RooMinimizer in ROOT 6.20 falls. back to Minuit after using minimize() with a different minimiser. minim.minimize(""Minuit2"");. minim.hesse(); // Users expected minuit2 here, but now minuit. The usual behaviour was restored by remembering the choice of minimiser. in `minimize`, which apparently happened behind the scenes in math in. the past. (cherry picked from commit 71efe47ff4322b1aeae68c7a8801fa8935eaecee)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5341
https://github.com/root-project/root/pull/5341:159,usability,minim,minim,159,"[RF] Fix ROOT-10670.; Due to changes somewhere in math, the RooMinimizer in ROOT 6.20 falls. back to Minuit after using minimize() with a different minimiser. minim.minimize(""Minuit2"");. minim.hesse(); // Users expected minuit2 here, but now minuit. The usual behaviour was restored by remembering the choice of minimiser. in `minimize`, which apparently happened behind the scenes in math in. the past. (cherry picked from commit 71efe47ff4322b1aeae68c7a8801fa8935eaecee)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5341
https://github.com/root-project/root/pull/5341:165,usability,minim,minimize,165,"[RF] Fix ROOT-10670.; Due to changes somewhere in math, the RooMinimizer in ROOT 6.20 falls. back to Minuit after using minimize() with a different minimiser. minim.minimize(""Minuit2"");. minim.hesse(); // Users expected minuit2 here, but now minuit. The usual behaviour was restored by remembering the choice of minimiser. in `minimize`, which apparently happened behind the scenes in math in. the past. (cherry picked from commit 71efe47ff4322b1aeae68c7a8801fa8935eaecee)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5341
https://github.com/root-project/root/pull/5341:187,usability,minim,minim,187,"[RF] Fix ROOT-10670.; Due to changes somewhere in math, the RooMinimizer in ROOT 6.20 falls. back to Minuit after using minimize() with a different minimiser. minim.minimize(""Minuit2"");. minim.hesse(); // Users expected minuit2 here, but now minuit. The usual behaviour was restored by remembering the choice of minimiser. in `minimize`, which apparently happened behind the scenes in math in. the past. (cherry picked from commit 71efe47ff4322b1aeae68c7a8801fa8935eaecee)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5341
https://github.com/root-project/root/pull/5341:205,usability,User,Users,205,"[RF] Fix ROOT-10670.; Due to changes somewhere in math, the RooMinimizer in ROOT 6.20 falls. back to Minuit after using minimize() with a different minimiser. minim.minimize(""Minuit2"");. minim.hesse(); // Users expected minuit2 here, but now minuit. The usual behaviour was restored by remembering the choice of minimiser. in `minimize`, which apparently happened behind the scenes in math in. the past. (cherry picked from commit 71efe47ff4322b1aeae68c7a8801fa8935eaecee)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5341
https://github.com/root-project/root/pull/5341:260,usability,behavi,behaviour,260,"[RF] Fix ROOT-10670.; Due to changes somewhere in math, the RooMinimizer in ROOT 6.20 falls. back to Minuit after using minimize() with a different minimiser. minim.minimize(""Minuit2"");. minim.hesse(); // Users expected minuit2 here, but now minuit. The usual behaviour was restored by remembering the choice of minimiser. in `minimize`, which apparently happened behind the scenes in math in. the past. (cherry picked from commit 71efe47ff4322b1aeae68c7a8801fa8935eaecee)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5341
https://github.com/root-project/root/pull/5341:312,usability,minim,minimiser,312,"[RF] Fix ROOT-10670.; Due to changes somewhere in math, the RooMinimizer in ROOT 6.20 falls. back to Minuit after using minimize() with a different minimiser. minim.minimize(""Minuit2"");. minim.hesse(); // Users expected minuit2 here, but now minuit. The usual behaviour was restored by remembering the choice of minimiser. in `minimize`, which apparently happened behind the scenes in math in. the past. (cherry picked from commit 71efe47ff4322b1aeae68c7a8801fa8935eaecee)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5341
https://github.com/root-project/root/pull/5341:327,usability,minim,minimize,327,"[RF] Fix ROOT-10670.; Due to changes somewhere in math, the RooMinimizer in ROOT 6.20 falls. back to Minuit after using minimize() with a different minimiser. minim.minimize(""Minuit2"");. minim.hesse(); // Users expected minuit2 here, but now minuit. The usual behaviour was restored by remembering the choice of minimiser. in `minimize`, which apparently happened behind the scenes in math in. the past. (cherry picked from commit 71efe47ff4322b1aeae68c7a8801fa8935eaecee)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5341
https://github.com/root-project/root/pull/5342:99,availability,error,error,99,"TDirectory file space should never be released.; In https://root-forum.cern.ch/t/re-r-unzip-header-error/38463, the file contains a TDirectory and. a TTree with the same name. Consequently the TKey for the TDirectory was deleted by AutoSave. leading to the corresponding portion of the file to be reused (for the 2nd basket of the branch ped_id) but TDirectory assumes that they key is never ever deleted and thus is rewriting ontop of the basket.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5342:38,deployability,releas,released,38,"TDirectory file space should never be released.; In https://root-forum.cern.ch/t/re-r-unzip-header-error/38463, the file contains a TDirectory and. a TTree with the same name. Consequently the TKey for the TDirectory was deleted by AutoSave. leading to the corresponding portion of the file to be reused (for the 2nd basket of the branch ped_id) but TDirectory assumes that they key is never ever deleted and thus is rewriting ontop of the basket.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5342:121,deployability,contain,contains,121,"TDirectory file space should never be released.; In https://root-forum.cern.ch/t/re-r-unzip-header-error/38463, the file contains a TDirectory and. a TTree with the same name. Consequently the TKey for the TDirectory was deleted by AutoSave. leading to the corresponding portion of the file to be reused (for the 2nd basket of the branch ped_id) but TDirectory assumes that they key is never ever deleted and thus is rewriting ontop of the basket.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5342:297,modifiability,reu,reused,297,"TDirectory file space should never be released.; In https://root-forum.cern.ch/t/re-r-unzip-header-error/38463, the file contains a TDirectory and. a TTree with the same name. Consequently the TKey for the TDirectory was deleted by AutoSave. leading to the corresponding portion of the file to be reused (for the 2nd basket of the branch ped_id) but TDirectory assumes that they key is never ever deleted and thus is rewriting ontop of the basket.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5342:99,performance,error,error,99,"TDirectory file space should never be released.; In https://root-forum.cern.ch/t/re-r-unzip-header-error/38463, the file contains a TDirectory and. a TTree with the same name. Consequently the TKey for the TDirectory was deleted by AutoSave. leading to the corresponding portion of the file to be reused (for the 2nd basket of the branch ped_id) but TDirectory assumes that they key is never ever deleted and thus is rewriting ontop of the basket.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5342:99,safety,error,error,99,"TDirectory file space should never be released.; In https://root-forum.cern.ch/t/re-r-unzip-header-error/38463, the file contains a TDirectory and. a TTree with the same name. Consequently the TKey for the TDirectory was deleted by AutoSave. leading to the corresponding portion of the file to be reused (for the 2nd basket of the branch ped_id) but TDirectory assumes that they key is never ever deleted and thus is rewriting ontop of the basket.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5342:99,usability,error,error,99,"TDirectory file space should never be released.; In https://root-forum.cern.ch/t/re-r-unzip-header-error/38463, the file contains a TDirectory and. a TTree with the same name. Consequently the TKey for the TDirectory was deleted by AutoSave. leading to the corresponding portion of the file to be reused (for the 2nd basket of the branch ped_id) but TDirectory assumes that they key is never ever deleted and thus is rewriting ontop of the basket.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5343:245,availability,error,error,245,Change compiler flags for Visual Studio 2019 v16.4.0 & v16.5.0; - core/base: Since Visual Studio v16.5.0 the /O2 optimization flag makes most of the roofit/roostats tests failing. - hist/histv7/test: Using /O2 compiler flag prevent the followin error when building in debug mode:. axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5343
https://github.com/root-project/root/pull/5343:298,availability,error,error,298,Change compiler flags for Visual Studio 2019 v16.4.0 & v16.5.0; - core/base: Since Visual Studio v16.5.0 the /O2 optimization flag makes most of the roofit/roostats tests failing. - hist/histv7/test: Using /O2 compiler flag prevent the followin error when building in debug mode:. axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5343
https://github.com/root-project/root/pull/5343:171,deployability,fail,failing,171,Change compiler flags for Visual Studio 2019 v16.4.0 & v16.5.0; - core/base: Since Visual Studio v16.5.0 the /O2 optimization flag makes most of the roofit/roostats tests failing. - hist/histv7/test: Using /O2 compiler flag prevent the followin error when building in debug mode:. axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5343
https://github.com/root-project/root/pull/5343:256,deployability,build,building,256,Change compiler flags for Visual Studio 2019 v16.4.0 & v16.5.0; - core/base: Since Visual Studio v16.5.0 the /O2 optimization flag makes most of the roofit/roostats tests failing. - hist/histv7/test: Using /O2 compiler flag prevent the followin error when building in debug mode:. axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5343
https://github.com/root-project/root/pull/5343:66,energy efficiency,core,core,66,Change compiler flags for Visual Studio 2019 v16.4.0 & v16.5.0; - core/base: Since Visual Studio v16.5.0 the /O2 optimization flag makes most of the roofit/roostats tests failing. - hist/histv7/test: Using /O2 compiler flag prevent the followin error when building in debug mode:. axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5343
https://github.com/root-project/root/pull/5343:113,energy efficiency,optim,optimization,113,Change compiler flags for Visual Studio 2019 v16.4.0 & v16.5.0; - core/base: Since Visual Studio v16.5.0 the /O2 optimization flag makes most of the roofit/roostats tests failing. - hist/histv7/test: Using /O2 compiler flag prevent the followin error when building in debug mode:. axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5343
https://github.com/root-project/root/pull/5343:113,performance,optimiz,optimization,113,Change compiler flags for Visual Studio 2019 v16.4.0 & v16.5.0; - core/base: Since Visual Studio v16.5.0 the /O2 optimization flag makes most of the roofit/roostats tests failing. - hist/histv7/test: Using /O2 compiler flag prevent the followin error when building in debug mode:. axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5343
https://github.com/root-project/root/pull/5343:245,performance,error,error,245,Change compiler flags for Visual Studio 2019 v16.4.0 & v16.5.0; - core/base: Since Visual Studio v16.5.0 the /O2 optimization flag makes most of the roofit/roostats tests failing. - hist/histv7/test: Using /O2 compiler flag prevent the followin error when building in debug mode:. axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5343
https://github.com/root-project/root/pull/5343:298,performance,error,error,298,Change compiler flags for Visual Studio 2019 v16.4.0 & v16.5.0; - core/base: Since Visual Studio v16.5.0 the /O2 optimization flag makes most of the roofit/roostats tests failing. - hist/histv7/test: Using /O2 compiler flag prevent the followin error when building in debug mode:. axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5343
https://github.com/root-project/root/pull/5343:171,reliability,fail,failing,171,Change compiler flags for Visual Studio 2019 v16.4.0 & v16.5.0; - core/base: Since Visual Studio v16.5.0 the /O2 optimization flag makes most of the roofit/roostats tests failing. - hist/histv7/test: Using /O2 compiler flag prevent the followin error when building in debug mode:. axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5343
https://github.com/root-project/root/pull/5343:165,safety,test,tests,165,Change compiler flags for Visual Studio 2019 v16.4.0 & v16.5.0; - core/base: Since Visual Studio v16.5.0 the /O2 optimization flag makes most of the roofit/roostats tests failing. - hist/histv7/test: Using /O2 compiler flag prevent the followin error when building in debug mode:. axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5343
https://github.com/root-project/root/pull/5343:194,safety,test,test,194,Change compiler flags for Visual Studio 2019 v16.4.0 & v16.5.0; - core/base: Since Visual Studio v16.5.0 the /O2 optimization flag makes most of the roofit/roostats tests failing. - hist/histv7/test: Using /O2 compiler flag prevent the followin error when building in debug mode:. axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5343
https://github.com/root-project/root/pull/5343:224,safety,prevent,prevent,224,Change compiler flags for Visual Studio 2019 v16.4.0 & v16.5.0; - core/base: Since Visual Studio v16.5.0 the /O2 optimization flag makes most of the roofit/roostats tests failing. - hist/histv7/test: Using /O2 compiler flag prevent the followin error when building in debug mode:. axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5343
https://github.com/root-project/root/pull/5343:245,safety,error,error,245,Change compiler flags for Visual Studio 2019 v16.4.0 & v16.5.0; - core/base: Since Visual Studio v16.5.0 the /O2 optimization flag makes most of the roofit/roostats tests failing. - hist/histv7/test: Using /O2 compiler flag prevent the followin error when building in debug mode:. axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5343
https://github.com/root-project/root/pull/5343:298,safety,error,error,298,Change compiler flags for Visual Studio 2019 v16.4.0 & v16.5.0; - core/base: Since Visual Studio v16.5.0 the /O2 optimization flag makes most of the roofit/roostats tests failing. - hist/histv7/test: Using /O2 compiler flag prevent the followin error when building in debug mode:. axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5343
https://github.com/root-project/root/pull/5343:224,security,preven,prevent,224,Change compiler flags for Visual Studio 2019 v16.4.0 & v16.5.0; - core/base: Since Visual Studio v16.5.0 the /O2 optimization flag makes most of the roofit/roostats tests failing. - hist/histv7/test: Using /O2 compiler flag prevent the followin error when building in debug mode:. axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5343
https://github.com/root-project/root/pull/5343:165,testability,test,tests,165,Change compiler flags for Visual Studio 2019 v16.4.0 & v16.5.0; - core/base: Since Visual Studio v16.5.0 the /O2 optimization flag makes most of the roofit/roostats tests failing. - hist/histv7/test: Using /O2 compiler flag prevent the followin error when building in debug mode:. axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5343
https://github.com/root-project/root/pull/5343:194,testability,test,test,194,Change compiler flags for Visual Studio 2019 v16.4.0 & v16.5.0; - core/base: Since Visual Studio v16.5.0 the /O2 optimization flag makes most of the roofit/roostats tests failing. - hist/histv7/test: Using /O2 compiler flag prevent the followin error when building in debug mode:. axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5343
https://github.com/root-project/root/pull/5343:26,usability,Visual,Visual,26,Change compiler flags for Visual Studio 2019 v16.4.0 & v16.5.0; - core/base: Since Visual Studio v16.5.0 the /O2 optimization flag makes most of the roofit/roostats tests failing. - hist/histv7/test: Using /O2 compiler flag prevent the followin error when building in debug mode:. axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5343
https://github.com/root-project/root/pull/5343:83,usability,Visual,Visual,83,Change compiler flags for Visual Studio 2019 v16.4.0 & v16.5.0; - core/base: Since Visual Studio v16.5.0 the /O2 optimization flag makes most of the roofit/roostats tests failing. - hist/histv7/test: Using /O2 compiler flag prevent the followin error when building in debug mode:. axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5343
https://github.com/root-project/root/pull/5343:245,usability,error,error,245,Change compiler flags for Visual Studio 2019 v16.4.0 & v16.5.0; - core/base: Since Visual Studio v16.5.0 the /O2 optimization flag makes most of the roofit/roostats tests failing. - hist/histv7/test: Using /O2 compiler flag prevent the followin error when building in debug mode:. axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5343
https://github.com/root-project/root/pull/5343:298,usability,error,error,298,Change compiler flags for Visual Studio 2019 v16.4.0 & v16.5.0; - core/base: Since Visual Studio v16.5.0 the /O2 optimization flag makes most of the roofit/roostats tests failing. - hist/histv7/test: Using /O2 compiler flag prevent the followin error when building in debug mode:. axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5343
https://github.com/root-project/root/pull/5345:48,deployability,log,logic,48,[rootcling]Simplify dictionary stream splitting logic; Fixes failing clang-tidy travis instance. @vgvassilev,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5345
https://github.com/root-project/root/pull/5345:61,deployability,fail,failing,61,[rootcling]Simplify dictionary stream splitting logic; Fixes failing clang-tidy travis instance. @vgvassilev,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5345
https://github.com/root-project/root/pull/5345:61,reliability,fail,failing,61,[rootcling]Simplify dictionary stream splitting logic; Fixes failing clang-tidy travis instance. @vgvassilev,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5345
https://github.com/root-project/root/pull/5345:48,safety,log,logic,48,[rootcling]Simplify dictionary stream splitting logic; Fixes failing clang-tidy travis instance. @vgvassilev,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5345
https://github.com/root-project/root/pull/5345:48,security,log,logic,48,[rootcling]Simplify dictionary stream splitting logic; Fixes failing clang-tidy travis instance. @vgvassilev,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5345
https://github.com/root-project/root/pull/5345:11,testability,Simpl,Simplify,11,[rootcling]Simplify dictionary stream splitting logic; Fixes failing clang-tidy travis instance. @vgvassilev,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5345
https://github.com/root-project/root/pull/5345:48,testability,log,logic,48,[rootcling]Simplify dictionary stream splitting logic; Fixes failing clang-tidy travis instance. @vgvassilev,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5345
https://github.com/root-project/root/pull/5345:11,usability,Simpl,Simplify,11,[rootcling]Simplify dictionary stream splitting logic; Fixes failing clang-tidy travis instance. @vgvassilev,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5345
https://github.com/root-project/root/pull/5346:122,availability,state,state,122,"[DF] Do not move a RInterface data member in Count; The logic here was plain wrong, calling Count() should not modify the state of RInterface. One could probably craft an example in which this std::move leads to a crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5346
https://github.com/root-project/root/pull/5346:56,deployability,log,logic,56,"[DF] Do not move a RInterface data member in Count; The logic here was plain wrong, calling Count() should not modify the state of RInterface. One could probably craft an example in which this std::move leads to a crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5346
https://github.com/root-project/root/pull/5346:122,integrability,state,state,122,"[DF] Do not move a RInterface data member in Count; The logic here was plain wrong, calling Count() should not modify the state of RInterface. One could probably craft an example in which this std::move leads to a crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5346
https://github.com/root-project/root/pull/5346:56,safety,log,logic,56,"[DF] Do not move a RInterface data member in Count; The logic here was plain wrong, calling Count() should not modify the state of RInterface. One could probably craft an example in which this std::move leads to a crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5346
https://github.com/root-project/root/pull/5346:56,security,log,logic,56,"[DF] Do not move a RInterface data member in Count; The logic here was plain wrong, calling Count() should not modify the state of RInterface. One could probably craft an example in which this std::move leads to a crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5346
https://github.com/root-project/root/pull/5346:111,security,modif,modify,111,"[DF] Do not move a RInterface data member in Count; The logic here was plain wrong, calling Count() should not modify the state of RInterface. One could probably craft an example in which this std::move leads to a crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5346
https://github.com/root-project/root/pull/5346:56,testability,log,logic,56,"[DF] Do not move a RInterface data member in Count; The logic here was plain wrong, calling Count() should not modify the state of RInterface. One could probably craft an example in which this std::move leads to a crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5346
https://github.com/root-project/root/pull/5347:123,availability,state,state,123,"[DF] Do not move a RInterface data member in Count; The logic here was plain wrong, calling Count() should not modify. the state of RInterface. It only happened to work because RActionBase's. constructor forgot to actually move-construct its data member (also. fixed). This is a corrected version of #5346",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5347
https://github.com/root-project/root/pull/5347:56,deployability,log,logic,56,"[DF] Do not move a RInterface data member in Count; The logic here was plain wrong, calling Count() should not modify. the state of RInterface. It only happened to work because RActionBase's. constructor forgot to actually move-construct its data member (also. fixed). This is a corrected version of #5346",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5347
https://github.com/root-project/root/pull/5347:289,deployability,version,version,289,"[DF] Do not move a RInterface data member in Count; The logic here was plain wrong, calling Count() should not modify. the state of RInterface. It only happened to work because RActionBase's. constructor forgot to actually move-construct its data member (also. fixed). This is a corrected version of #5346",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5347
https://github.com/root-project/root/pull/5347:123,integrability,state,state,123,"[DF] Do not move a RInterface data member in Count; The logic here was plain wrong, calling Count() should not modify. the state of RInterface. It only happened to work because RActionBase's. constructor forgot to actually move-construct its data member (also. fixed). This is a corrected version of #5346",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5347
https://github.com/root-project/root/pull/5347:289,integrability,version,version,289,"[DF] Do not move a RInterface data member in Count; The logic here was plain wrong, calling Count() should not modify. the state of RInterface. It only happened to work because RActionBase's. constructor forgot to actually move-construct its data member (also. fixed). This is a corrected version of #5346",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5347
https://github.com/root-project/root/pull/5347:289,modifiability,version,version,289,"[DF] Do not move a RInterface data member in Count; The logic here was plain wrong, calling Count() should not modify. the state of RInterface. It only happened to work because RActionBase's. constructor forgot to actually move-construct its data member (also. fixed). This is a corrected version of #5346",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5347
https://github.com/root-project/root/pull/5347:56,safety,log,logic,56,"[DF] Do not move a RInterface data member in Count; The logic here was plain wrong, calling Count() should not modify. the state of RInterface. It only happened to work because RActionBase's. constructor forgot to actually move-construct its data member (also. fixed). This is a corrected version of #5346",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5347
https://github.com/root-project/root/pull/5347:56,security,log,logic,56,"[DF] Do not move a RInterface data member in Count; The logic here was plain wrong, calling Count() should not modify. the state of RInterface. It only happened to work because RActionBase's. constructor forgot to actually move-construct its data member (also. fixed). This is a corrected version of #5346",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5347
https://github.com/root-project/root/pull/5347:111,security,modif,modify,111,"[DF] Do not move a RInterface data member in Count; The logic here was plain wrong, calling Count() should not modify. the state of RInterface. It only happened to work because RActionBase's. constructor forgot to actually move-construct its data member (also. fixed). This is a corrected version of #5346",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5347
https://github.com/root-project/root/pull/5347:56,testability,log,logic,56,"[DF] Do not move a RInterface data member in Count; The logic here was plain wrong, calling Count() should not modify. the state of RInterface. It only happened to work because RActionBase's. constructor forgot to actually move-construct its data member (also. fixed). This is a corrected version of #5346",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5347
https://github.com/root-project/root/pull/5348:46,deployability,modul,modulemap,46,"ROOT-10677: [cxxmodules] Don't mount a custom modulemap file if a module.modulemap exists; OSX has modularized sdk (libc++ included) and there we prefer the modulemaps that libraries ship with. However, libc++ can be also used on other Unix platforms and we should not try to mount the std.modulemap file for it. This patch fixes ROOT-10677.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:66,deployability,modul,module,66,"ROOT-10677: [cxxmodules] Don't mount a custom modulemap file if a module.modulemap exists; OSX has modularized sdk (libc++ included) and there we prefer the modulemaps that libraries ship with. However, libc++ can be also used on other Unix platforms and we should not try to mount the std.modulemap file for it. This patch fixes ROOT-10677.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:73,deployability,modul,modulemap,73,"ROOT-10677: [cxxmodules] Don't mount a custom modulemap file if a module.modulemap exists; OSX has modularized sdk (libc++ included) and there we prefer the modulemaps that libraries ship with. However, libc++ can be also used on other Unix platforms and we should not try to mount the std.modulemap file for it. This patch fixes ROOT-10677.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:99,deployability,modul,modularized,99,"ROOT-10677: [cxxmodules] Don't mount a custom modulemap file if a module.modulemap exists; OSX has modularized sdk (libc++ included) and there we prefer the modulemaps that libraries ship with. However, libc++ can be also used on other Unix platforms and we should not try to mount the std.modulemap file for it. This patch fixes ROOT-10677.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:157,deployability,modul,modulemaps,157,"ROOT-10677: [cxxmodules] Don't mount a custom modulemap file if a module.modulemap exists; OSX has modularized sdk (libc++ included) and there we prefer the modulemaps that libraries ship with. However, libc++ can be also used on other Unix platforms and we should not try to mount the std.modulemap file for it. This patch fixes ROOT-10677.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:290,deployability,modul,modulemap,290,"ROOT-10677: [cxxmodules] Don't mount a custom modulemap file if a module.modulemap exists; OSX has modularized sdk (libc++ included) and there we prefer the modulemaps that libraries ship with. However, libc++ can be also used on other Unix platforms and we should not try to mount the std.modulemap file for it. This patch fixes ROOT-10677.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:318,deployability,patch,patch,318,"ROOT-10677: [cxxmodules] Don't mount a custom modulemap file if a module.modulemap exists; OSX has modularized sdk (libc++ included) and there we prefer the modulemaps that libraries ship with. However, libc++ can be also used on other Unix platforms and we should not try to mount the std.modulemap file for it. This patch fixes ROOT-10677.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:99,integrability,modular,modularized,99,"ROOT-10677: [cxxmodules] Don't mount a custom modulemap file if a module.modulemap exists; OSX has modularized sdk (libc++ included) and there we prefer the modulemaps that libraries ship with. However, libc++ can be also used on other Unix platforms and we should not try to mount the std.modulemap file for it. This patch fixes ROOT-10677.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:241,interoperability,platform,platforms,241,"ROOT-10677: [cxxmodules] Don't mount a custom modulemap file if a module.modulemap exists; OSX has modularized sdk (libc++ included) and there we prefer the modulemaps that libraries ship with. However, libc++ can be also used on other Unix platforms and we should not try to mount the std.modulemap file for it. This patch fixes ROOT-10677.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:46,modifiability,modul,modulemap,46,"ROOT-10677: [cxxmodules] Don't mount a custom modulemap file if a module.modulemap exists; OSX has modularized sdk (libc++ included) and there we prefer the modulemaps that libraries ship with. However, libc++ can be also used on other Unix platforms and we should not try to mount the std.modulemap file for it. This patch fixes ROOT-10677.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:66,modifiability,modul,module,66,"ROOT-10677: [cxxmodules] Don't mount a custom modulemap file if a module.modulemap exists; OSX has modularized sdk (libc++ included) and there we prefer the modulemaps that libraries ship with. However, libc++ can be also used on other Unix platforms and we should not try to mount the std.modulemap file for it. This patch fixes ROOT-10677.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:73,modifiability,modul,modulemap,73,"ROOT-10677: [cxxmodules] Don't mount a custom modulemap file if a module.modulemap exists; OSX has modularized sdk (libc++ included) and there we prefer the modulemaps that libraries ship with. However, libc++ can be also used on other Unix platforms and we should not try to mount the std.modulemap file for it. This patch fixes ROOT-10677.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:99,modifiability,modul,modularized,99,"ROOT-10677: [cxxmodules] Don't mount a custom modulemap file if a module.modulemap exists; OSX has modularized sdk (libc++ included) and there we prefer the modulemaps that libraries ship with. However, libc++ can be also used on other Unix platforms and we should not try to mount the std.modulemap file for it. This patch fixes ROOT-10677.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:157,modifiability,modul,modulemaps,157,"ROOT-10677: [cxxmodules] Don't mount a custom modulemap file if a module.modulemap exists; OSX has modularized sdk (libc++ included) and there we prefer the modulemaps that libraries ship with. However, libc++ can be also used on other Unix platforms and we should not try to mount the std.modulemap file for it. This patch fixes ROOT-10677.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:290,modifiability,modul,modulemap,290,"ROOT-10677: [cxxmodules] Don't mount a custom modulemap file if a module.modulemap exists; OSX has modularized sdk (libc++ included) and there we prefer the modulemaps that libraries ship with. However, libc++ can be also used on other Unix platforms and we should not try to mount the std.modulemap file for it. This patch fixes ROOT-10677.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:46,safety,modul,modulemap,46,"ROOT-10677: [cxxmodules] Don't mount a custom modulemap file if a module.modulemap exists; OSX has modularized sdk (libc++ included) and there we prefer the modulemaps that libraries ship with. However, libc++ can be also used on other Unix platforms and we should not try to mount the std.modulemap file for it. This patch fixes ROOT-10677.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:66,safety,modul,module,66,"ROOT-10677: [cxxmodules] Don't mount a custom modulemap file if a module.modulemap exists; OSX has modularized sdk (libc++ included) and there we prefer the modulemaps that libraries ship with. However, libc++ can be also used on other Unix platforms and we should not try to mount the std.modulemap file for it. This patch fixes ROOT-10677.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:73,safety,modul,modulemap,73,"ROOT-10677: [cxxmodules] Don't mount a custom modulemap file if a module.modulemap exists; OSX has modularized sdk (libc++ included) and there we prefer the modulemaps that libraries ship with. However, libc++ can be also used on other Unix platforms and we should not try to mount the std.modulemap file for it. This patch fixes ROOT-10677.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:99,safety,modul,modularized,99,"ROOT-10677: [cxxmodules] Don't mount a custom modulemap file if a module.modulemap exists; OSX has modularized sdk (libc++ included) and there we prefer the modulemaps that libraries ship with. However, libc++ can be also used on other Unix platforms and we should not try to mount the std.modulemap file for it. This patch fixes ROOT-10677.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:157,safety,modul,modulemaps,157,"ROOT-10677: [cxxmodules] Don't mount a custom modulemap file if a module.modulemap exists; OSX has modularized sdk (libc++ included) and there we prefer the modulemaps that libraries ship with. However, libc++ can be also used on other Unix platforms and we should not try to mount the std.modulemap file for it. This patch fixes ROOT-10677.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:290,safety,modul,modulemap,290,"ROOT-10677: [cxxmodules] Don't mount a custom modulemap file if a module.modulemap exists; OSX has modularized sdk (libc++ included) and there we prefer the modulemaps that libraries ship with. However, libc++ can be also used on other Unix platforms and we should not try to mount the std.modulemap file for it. This patch fixes ROOT-10677.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:318,safety,patch,patch,318,"ROOT-10677: [cxxmodules] Don't mount a custom modulemap file if a module.modulemap exists; OSX has modularized sdk (libc++ included) and there we prefer the modulemaps that libraries ship with. However, libc++ can be also used on other Unix platforms and we should not try to mount the std.modulemap file for it. This patch fixes ROOT-10677.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:318,security,patch,patch,318,"ROOT-10677: [cxxmodules] Don't mount a custom modulemap file if a module.modulemap exists; OSX has modularized sdk (libc++ included) and there we prefer the modulemaps that libraries ship with. However, libc++ can be also used on other Unix platforms and we should not try to mount the std.modulemap file for it. This patch fixes ROOT-10677.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:99,testability,modula,modularized,99,"ROOT-10677: [cxxmodules] Don't mount a custom modulemap file if a module.modulemap exists; OSX has modularized sdk (libc++ included) and there we prefer the modulemaps that libraries ship with. However, libc++ can be also used on other Unix platforms and we should not try to mount the std.modulemap file for it. This patch fixes ROOT-10677.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:39,usability,custom,custom,39,"ROOT-10677: [cxxmodules] Don't mount a custom modulemap file if a module.modulemap exists; OSX has modularized sdk (libc++ included) and there we prefer the modulemaps that libraries ship with. However, libc++ can be also used on other Unix platforms and we should not try to mount the std.modulemap file for it. This patch fixes ROOT-10677.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5348:146,usability,prefer,prefer,146,"ROOT-10677: [cxxmodules] Don't mount a custom modulemap file if a module.modulemap exists; OSX has modularized sdk (libc++ included) and there we prefer the modulemaps that libraries ship with. However, libc++ can be also used on other Unix platforms and we should not try to mount the std.modulemap file for it. This patch fixes ROOT-10677.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5349:16,availability,error,error,16,Fix compilation error due to a change merged before.; This is an urgent fix to adjust root-project/root@c7ca01f to root-project/root@6b70c86,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5349
https://github.com/root-project/root/pull/5349:16,performance,error,error,16,Fix compilation error due to a change merged before.; This is an urgent fix to adjust root-project/root@c7ca01f to root-project/root@6b70c86,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5349
https://github.com/root-project/root/pull/5349:16,safety,error,error,16,Fix compilation error due to a change merged before.; This is an urgent fix to adjust root-project/root@c7ca01f to root-project/root@6b70c86,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5349
https://github.com/root-project/root/pull/5349:16,usability,error,error,16,Fix compilation error due to a change merged before.; This is an urgent fix to adjust root-project/root@c7ca01f to root-project/root@6b70c86,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5349
https://github.com/root-project/root/pull/5354:258,availability,consist,consistent,258,"[DF] Always use namespace __rdf for jitting; Before this patch, aliases of defined columns were jitted in namespace. __rdfX with X monotonously increasing. That is strictly unnecessary,. as every alias already contains a unique ID. This patch makes RDF more consistent (everything is jitted in the same namespace), and as a consequence we can simplify the signature of several helper functions and can remove a data member and relative getter from RLoopManager. The change also helps with re-usage of jitted lambdas ([ROOT-10657](https://sft.its.cern.ch/jira/browse/ROOT-10657) as the type signatures of jitted lambdas of different RDF computation graphs will not contain different namespaces anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5354
https://github.com/root-project/root/pull/5354:57,deployability,patch,patch,57,"[DF] Always use namespace __rdf for jitting; Before this patch, aliases of defined columns were jitted in namespace. __rdfX with X monotonously increasing. That is strictly unnecessary,. as every alias already contains a unique ID. This patch makes RDF more consistent (everything is jitted in the same namespace), and as a consequence we can simplify the signature of several helper functions and can remove a data member and relative getter from RLoopManager. The change also helps with re-usage of jitted lambdas ([ROOT-10657](https://sft.its.cern.ch/jira/browse/ROOT-10657) as the type signatures of jitted lambdas of different RDF computation graphs will not contain different namespaces anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5354
https://github.com/root-project/root/pull/5354:210,deployability,contain,contains,210,"[DF] Always use namespace __rdf for jitting; Before this patch, aliases of defined columns were jitted in namespace. __rdfX with X monotonously increasing. That is strictly unnecessary,. as every alias already contains a unique ID. This patch makes RDF more consistent (everything is jitted in the same namespace), and as a consequence we can simplify the signature of several helper functions and can remove a data member and relative getter from RLoopManager. The change also helps with re-usage of jitted lambdas ([ROOT-10657](https://sft.its.cern.ch/jira/browse/ROOT-10657) as the type signatures of jitted lambdas of different RDF computation graphs will not contain different namespaces anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5354
https://github.com/root-project/root/pull/5354:237,deployability,patch,patch,237,"[DF] Always use namespace __rdf for jitting; Before this patch, aliases of defined columns were jitted in namespace. __rdfX with X monotonously increasing. That is strictly unnecessary,. as every alias already contains a unique ID. This patch makes RDF more consistent (everything is jitted in the same namespace), and as a consequence we can simplify the signature of several helper functions and can remove a data member and relative getter from RLoopManager. The change also helps with re-usage of jitted lambdas ([ROOT-10657](https://sft.its.cern.ch/jira/browse/ROOT-10657) as the type signatures of jitted lambdas of different RDF computation graphs will not contain different namespaces anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5354
https://github.com/root-project/root/pull/5354:664,deployability,contain,contain,664,"[DF] Always use namespace __rdf for jitting; Before this patch, aliases of defined columns were jitted in namespace. __rdfX with X monotonously increasing. That is strictly unnecessary,. as every alias already contains a unique ID. This patch makes RDF more consistent (everything is jitted in the same namespace), and as a consequence we can simplify the signature of several helper functions and can remove a data member and relative getter from RLoopManager. The change also helps with re-usage of jitted lambdas ([ROOT-10657](https://sft.its.cern.ch/jira/browse/ROOT-10657) as the type signatures of jitted lambdas of different RDF computation graphs will not contain different namespaces anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5354
https://github.com/root-project/root/pull/5354:57,safety,patch,patch,57,"[DF] Always use namespace __rdf for jitting; Before this patch, aliases of defined columns were jitted in namespace. __rdfX with X monotonously increasing. That is strictly unnecessary,. as every alias already contains a unique ID. This patch makes RDF more consistent (everything is jitted in the same namespace), and as a consequence we can simplify the signature of several helper functions and can remove a data member and relative getter from RLoopManager. The change also helps with re-usage of jitted lambdas ([ROOT-10657](https://sft.its.cern.ch/jira/browse/ROOT-10657) as the type signatures of jitted lambdas of different RDF computation graphs will not contain different namespaces anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5354
https://github.com/root-project/root/pull/5354:237,safety,patch,patch,237,"[DF] Always use namespace __rdf for jitting; Before this patch, aliases of defined columns were jitted in namespace. __rdfX with X monotonously increasing. That is strictly unnecessary,. as every alias already contains a unique ID. This patch makes RDF more consistent (everything is jitted in the same namespace), and as a consequence we can simplify the signature of several helper functions and can remove a data member and relative getter from RLoopManager. The change also helps with re-usage of jitted lambdas ([ROOT-10657](https://sft.its.cern.ch/jira/browse/ROOT-10657) as the type signatures of jitted lambdas of different RDF computation graphs will not contain different namespaces anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5354
https://github.com/root-project/root/pull/5354:57,security,patch,patch,57,"[DF] Always use namespace __rdf for jitting; Before this patch, aliases of defined columns were jitted in namespace. __rdfX with X monotonously increasing. That is strictly unnecessary,. as every alias already contains a unique ID. This patch makes RDF more consistent (everything is jitted in the same namespace), and as a consequence we can simplify the signature of several helper functions and can remove a data member and relative getter from RLoopManager. The change also helps with re-usage of jitted lambdas ([ROOT-10657](https://sft.its.cern.ch/jira/browse/ROOT-10657) as the type signatures of jitted lambdas of different RDF computation graphs will not contain different namespaces anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5354
https://github.com/root-project/root/pull/5354:237,security,patch,patch,237,"[DF] Always use namespace __rdf for jitting; Before this patch, aliases of defined columns were jitted in namespace. __rdfX with X monotonously increasing. That is strictly unnecessary,. as every alias already contains a unique ID. This patch makes RDF more consistent (everything is jitted in the same namespace), and as a consequence we can simplify the signature of several helper functions and can remove a data member and relative getter from RLoopManager. The change also helps with re-usage of jitted lambdas ([ROOT-10657](https://sft.its.cern.ch/jira/browse/ROOT-10657) as the type signatures of jitted lambdas of different RDF computation graphs will not contain different namespaces anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5354
https://github.com/root-project/root/pull/5354:356,security,sign,signature,356,"[DF] Always use namespace __rdf for jitting; Before this patch, aliases of defined columns were jitted in namespace. __rdfX with X monotonously increasing. That is strictly unnecessary,. as every alias already contains a unique ID. This patch makes RDF more consistent (everything is jitted in the same namespace), and as a consequence we can simplify the signature of several helper functions and can remove a data member and relative getter from RLoopManager. The change also helps with re-usage of jitted lambdas ([ROOT-10657](https://sft.its.cern.ch/jira/browse/ROOT-10657) as the type signatures of jitted lambdas of different RDF computation graphs will not contain different namespaces anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5354
https://github.com/root-project/root/pull/5354:590,security,sign,signatures,590,"[DF] Always use namespace __rdf for jitting; Before this patch, aliases of defined columns were jitted in namespace. __rdfX with X monotonously increasing. That is strictly unnecessary,. as every alias already contains a unique ID. This patch makes RDF more consistent (everything is jitted in the same namespace), and as a consequence we can simplify the signature of several helper functions and can remove a data member and relative getter from RLoopManager. The change also helps with re-usage of jitted lambdas ([ROOT-10657](https://sft.its.cern.ch/jira/browse/ROOT-10657) as the type signatures of jitted lambdas of different RDF computation graphs will not contain different namespaces anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5354
https://github.com/root-project/root/pull/5354:343,testability,simpl,simplify,343,"[DF] Always use namespace __rdf for jitting; Before this patch, aliases of defined columns were jitted in namespace. __rdfX with X monotonously increasing. That is strictly unnecessary,. as every alias already contains a unique ID. This patch makes RDF more consistent (everything is jitted in the same namespace), and as a consequence we can simplify the signature of several helper functions and can remove a data member and relative getter from RLoopManager. The change also helps with re-usage of jitted lambdas ([ROOT-10657](https://sft.its.cern.ch/jira/browse/ROOT-10657) as the type signatures of jitted lambdas of different RDF computation graphs will not contain different namespaces anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5354
https://github.com/root-project/root/pull/5354:258,usability,consist,consistent,258,"[DF] Always use namespace __rdf for jitting; Before this patch, aliases of defined columns were jitted in namespace. __rdfX with X monotonously increasing. That is strictly unnecessary,. as every alias already contains a unique ID. This patch makes RDF more consistent (everything is jitted in the same namespace), and as a consequence we can simplify the signature of several helper functions and can remove a data member and relative getter from RLoopManager. The change also helps with re-usage of jitted lambdas ([ROOT-10657](https://sft.its.cern.ch/jira/browse/ROOT-10657) as the type signatures of jitted lambdas of different RDF computation graphs will not contain different namespaces anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5354
https://github.com/root-project/root/pull/5354:343,usability,simpl,simplify,343,"[DF] Always use namespace __rdf for jitting; Before this patch, aliases of defined columns were jitted in namespace. __rdfX with X monotonously increasing. That is strictly unnecessary,. as every alias already contains a unique ID. This patch makes RDF more consistent (everything is jitted in the same namespace), and as a consequence we can simplify the signature of several helper functions and can remove a data member and relative getter from RLoopManager. The change also helps with re-usage of jitted lambdas ([ROOT-10657](https://sft.its.cern.ch/jira/browse/ROOT-10657) as the type signatures of jitted lambdas of different RDF computation graphs will not contain different namespaces anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5354
https://github.com/root-project/root/pull/5354:377,usability,help,helper,377,"[DF] Always use namespace __rdf for jitting; Before this patch, aliases of defined columns were jitted in namespace. __rdfX with X monotonously increasing. That is strictly unnecessary,. as every alias already contains a unique ID. This patch makes RDF more consistent (everything is jitted in the same namespace), and as a consequence we can simplify the signature of several helper functions and can remove a data member and relative getter from RLoopManager. The change also helps with re-usage of jitted lambdas ([ROOT-10657](https://sft.its.cern.ch/jira/browse/ROOT-10657) as the type signatures of jitted lambdas of different RDF computation graphs will not contain different namespaces anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5354
https://github.com/root-project/root/pull/5354:478,usability,help,helps,478,"[DF] Always use namespace __rdf for jitting; Before this patch, aliases of defined columns were jitted in namespace. __rdfX with X monotonously increasing. That is strictly unnecessary,. as every alias already contains a unique ID. This patch makes RDF more consistent (everything is jitted in the same namespace), and as a consequence we can simplify the signature of several helper functions and can remove a data member and relative getter from RLoopManager. The change also helps with re-usage of jitted lambdas ([ROOT-10657](https://sft.its.cern.ch/jira/browse/ROOT-10657) as the type signatures of jitted lambdas of different RDF computation graphs will not contain different namespaces anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5354
https://github.com/root-project/root/pull/5356:163,deployability,patch,patch,163,"[DF] Make RLoopManager's code to jit a static global; In the future, we want separate computation graphs to share and re-use already. jitted lambdas. Without this patch, however, we would have an ordering. problem or a redefinition problem, because RDF2 might want to re-use/redefine. a lambda that RDF1 is _going to_ declare, but (since we delay all. jitting to right before an RDF's event loop) that might happen too late. for RDF2. With this change, all RDFs can jit all code that has been booked by all. other RDFs, resolving that problem. In addition, making less, ""fatter"". call to the interpreter is a performance optimization in itself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5356
https://github.com/root-project/root/pull/5356:621,energy efficiency,optim,optimization,621,"[DF] Make RLoopManager's code to jit a static global; In the future, we want separate computation graphs to share and re-use already. jitted lambdas. Without this patch, however, we would have an ordering. problem or a redefinition problem, because RDF2 might want to re-use/redefine. a lambda that RDF1 is _going to_ declare, but (since we delay all. jitting to right before an RDF's event loop) that might happen too late. for RDF2. With this change, all RDFs can jit all code that has been booked by all. other RDFs, resolving that problem. In addition, making less, ""fatter"". call to the interpreter is a performance optimization in itself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5356
https://github.com/root-project/root/pull/5356:385,integrability,event,event,385,"[DF] Make RLoopManager's code to jit a static global; In the future, we want separate computation graphs to share and re-use already. jitted lambdas. Without this patch, however, we would have an ordering. problem or a redefinition problem, because RDF2 might want to re-use/redefine. a lambda that RDF1 is _going to_ declare, but (since we delay all. jitting to right before an RDF's event loop) that might happen too late. for RDF2. With this change, all RDFs can jit all code that has been booked by all. other RDFs, resolving that problem. In addition, making less, ""fatter"". call to the interpreter is a performance optimization in itself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5356
https://github.com/root-project/root/pull/5356:108,interoperability,share,share,108,"[DF] Make RLoopManager's code to jit a static global; In the future, we want separate computation graphs to share and re-use already. jitted lambdas. Without this patch, however, we would have an ordering. problem or a redefinition problem, because RDF2 might want to re-use/redefine. a lambda that RDF1 is _going to_ declare, but (since we delay all. jitting to right before an RDF's event loop) that might happen too late. for RDF2. With this change, all RDFs can jit all code that has been booked by all. other RDFs, resolving that problem. In addition, making less, ""fatter"". call to the interpreter is a performance optimization in itself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5356
https://github.com/root-project/root/pull/5356:609,performance,performance optim,performance optimization,609,"[DF] Make RLoopManager's code to jit a static global; In the future, we want separate computation graphs to share and re-use already. jitted lambdas. Without this patch, however, we would have an ordering. problem or a redefinition problem, because RDF2 might want to re-use/redefine. a lambda that RDF1 is _going to_ declare, but (since we delay all. jitting to right before an RDF's event loop) that might happen too late. for RDF2. With this change, all RDFs can jit all code that has been booked by all. other RDFs, resolving that problem. In addition, making less, ""fatter"". call to the interpreter is a performance optimization in itself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5356
https://github.com/root-project/root/pull/5356:163,safety,patch,patch,163,"[DF] Make RLoopManager's code to jit a static global; In the future, we want separate computation graphs to share and re-use already. jitted lambdas. Without this patch, however, we would have an ordering. problem or a redefinition problem, because RDF2 might want to re-use/redefine. a lambda that RDF1 is _going to_ declare, but (since we delay all. jitting to right before an RDF's event loop) that might happen too late. for RDF2. With this change, all RDFs can jit all code that has been booked by all. other RDFs, resolving that problem. In addition, making less, ""fatter"". call to the interpreter is a performance optimization in itself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5356
https://github.com/root-project/root/pull/5356:163,security,patch,patch,163,"[DF] Make RLoopManager's code to jit a static global; In the future, we want separate computation graphs to share and re-use already. jitted lambdas. Without this patch, however, we would have an ordering. problem or a redefinition problem, because RDF2 might want to re-use/redefine. a lambda that RDF1 is _going to_ declare, but (since we delay all. jitting to right before an RDF's event loop) that might happen too late. for RDF2. With this change, all RDFs can jit all code that has been booked by all. other RDFs, resolving that problem. In addition, making less, ""fatter"". call to the interpreter is a performance optimization in itself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5356
https://github.com/root-project/root/pull/5356:609,usability,perform,performance,609,"[DF] Make RLoopManager's code to jit a static global; In the future, we want separate computation graphs to share and re-use already. jitted lambdas. Without this patch, however, we would have an ordering. problem or a redefinition problem, because RDF2 might want to re-use/redefine. a lambda that RDF1 is _going to_ declare, but (since we delay all. jitting to right before an RDF's event loop) that might happen too late. for RDF2. With this change, all RDFs can jit all code that has been booked by all. other RDFs, resolving that problem. In addition, making less, ""fatter"". call to the interpreter is a performance optimization in itself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5356
https://github.com/root-project/root/pull/5357:37,deployability,build,builds,37,Unset GLEW_FOUND in case of Mac OS X builds with CMake 3.17 (to avoid…; … GLEW from brew),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5357
https://github.com/root-project/root/pull/5357:64,safety,avoid,avoid,64,Unset GLEW_FOUND in case of Mac OS X builds with CMake 3.17 (to avoid…; … GLEW from brew),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5357
https://github.com/root-project/root/pull/5358:50,availability,error,errors,50,Backport: correct for Logx when drawing histogram errors; This also fixes:. https://sft.its.cern.ch/jira/browse/ROOT-10682. https://sft.its.cern.ch/jira/browse/ROOT-10673,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5358
https://github.com/root-project/root/pull/5358:22,deployability,Log,Logx,22,Backport: correct for Logx when drawing histogram errors; This also fixes:. https://sft.its.cern.ch/jira/browse/ROOT-10682. https://sft.its.cern.ch/jira/browse/ROOT-10673,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5358
https://github.com/root-project/root/pull/5358:32,energy efficiency,draw,drawing,32,Backport: correct for Logx when drawing histogram errors; This also fixes:. https://sft.its.cern.ch/jira/browse/ROOT-10682. https://sft.its.cern.ch/jira/browse/ROOT-10673,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5358
https://github.com/root-project/root/pull/5358:50,performance,error,errors,50,Backport: correct for Logx when drawing histogram errors; This also fixes:. https://sft.its.cern.ch/jira/browse/ROOT-10682. https://sft.its.cern.ch/jira/browse/ROOT-10673,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5358
https://github.com/root-project/root/pull/5358:22,safety,Log,Logx,22,Backport: correct for Logx when drawing histogram errors; This also fixes:. https://sft.its.cern.ch/jira/browse/ROOT-10682. https://sft.its.cern.ch/jira/browse/ROOT-10673,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5358
https://github.com/root-project/root/pull/5358:50,safety,error,errors,50,Backport: correct for Logx when drawing histogram errors; This also fixes:. https://sft.its.cern.ch/jira/browse/ROOT-10682. https://sft.its.cern.ch/jira/browse/ROOT-10673,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5358
https://github.com/root-project/root/pull/5358:22,security,Log,Logx,22,Backport: correct for Logx when drawing histogram errors; This also fixes:. https://sft.its.cern.ch/jira/browse/ROOT-10682. https://sft.its.cern.ch/jira/browse/ROOT-10673,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5358
https://github.com/root-project/root/pull/5358:22,testability,Log,Logx,22,Backport: correct for Logx when drawing histogram errors; This also fixes:. https://sft.its.cern.ch/jira/browse/ROOT-10682. https://sft.its.cern.ch/jira/browse/ROOT-10673,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5358
https://github.com/root-project/root/pull/5358:50,usability,error,errors,50,Backport: correct for Logx when drawing histogram errors; This also fixes:. https://sft.its.cern.ch/jira/browse/ROOT-10682. https://sft.its.cern.ch/jira/browse/ROOT-10673,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5358
https://github.com/root-project/root/pull/5359:25,deployability,depend,dependent,25,"[cxxmodules] Preload the dependent modules if specified in rootcling.; This should allow us to build non-standard modules such as boost. This patch should enable building the cmssw third-party modules for external dependencies. Cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5359
https://github.com/root-project/root/pull/5359:35,deployability,modul,modules,35,"[cxxmodules] Preload the dependent modules if specified in rootcling.; This should allow us to build non-standard modules such as boost. This patch should enable building the cmssw third-party modules for external dependencies. Cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5359
https://github.com/root-project/root/pull/5359:95,deployability,build,build,95,"[cxxmodules] Preload the dependent modules if specified in rootcling.; This should allow us to build non-standard modules such as boost. This patch should enable building the cmssw third-party modules for external dependencies. Cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5359
https://github.com/root-project/root/pull/5359:114,deployability,modul,modules,114,"[cxxmodules] Preload the dependent modules if specified in rootcling.; This should allow us to build non-standard modules such as boost. This patch should enable building the cmssw third-party modules for external dependencies. Cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5359
https://github.com/root-project/root/pull/5359:142,deployability,patch,patch,142,"[cxxmodules] Preload the dependent modules if specified in rootcling.; This should allow us to build non-standard modules such as boost. This patch should enable building the cmssw third-party modules for external dependencies. Cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5359
https://github.com/root-project/root/pull/5359:162,deployability,build,building,162,"[cxxmodules] Preload the dependent modules if specified in rootcling.; This should allow us to build non-standard modules such as boost. This patch should enable building the cmssw third-party modules for external dependencies. Cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5359
https://github.com/root-project/root/pull/5359:193,deployability,modul,modules,193,"[cxxmodules] Preload the dependent modules if specified in rootcling.; This should allow us to build non-standard modules such as boost. This patch should enable building the cmssw third-party modules for external dependencies. Cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5359
https://github.com/root-project/root/pull/5359:214,deployability,depend,dependencies,214,"[cxxmodules] Preload the dependent modules if specified in rootcling.; This should allow us to build non-standard modules such as boost. This patch should enable building the cmssw third-party modules for external dependencies. Cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5359
https://github.com/root-project/root/pull/5359:25,integrability,depend,dependent,25,"[cxxmodules] Preload the dependent modules if specified in rootcling.; This should allow us to build non-standard modules such as boost. This patch should enable building the cmssw third-party modules for external dependencies. Cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5359
https://github.com/root-project/root/pull/5359:214,integrability,depend,dependencies,214,"[cxxmodules] Preload the dependent modules if specified in rootcling.; This should allow us to build non-standard modules such as boost. This patch should enable building the cmssw third-party modules for external dependencies. Cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5359
https://github.com/root-project/root/pull/5359:46,interoperability,specif,specified,46,"[cxxmodules] Preload the dependent modules if specified in rootcling.; This should allow us to build non-standard modules such as boost. This patch should enable building the cmssw third-party modules for external dependencies. Cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5359
https://github.com/root-project/root/pull/5359:105,interoperability,standard,standard,105,"[cxxmodules] Preload the dependent modules if specified in rootcling.; This should allow us to build non-standard modules such as boost. This patch should enable building the cmssw third-party modules for external dependencies. Cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5359
https://github.com/root-project/root/pull/5359:25,modifiability,depend,dependent,25,"[cxxmodules] Preload the dependent modules if specified in rootcling.; This should allow us to build non-standard modules such as boost. This patch should enable building the cmssw third-party modules for external dependencies. Cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5359
https://github.com/root-project/root/pull/5359:35,modifiability,modul,modules,35,"[cxxmodules] Preload the dependent modules if specified in rootcling.; This should allow us to build non-standard modules such as boost. This patch should enable building the cmssw third-party modules for external dependencies. Cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5359
https://github.com/root-project/root/pull/5359:114,modifiability,modul,modules,114,"[cxxmodules] Preload the dependent modules if specified in rootcling.; This should allow us to build non-standard modules such as boost. This patch should enable building the cmssw third-party modules for external dependencies. Cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5359
https://github.com/root-project/root/pull/5359:193,modifiability,modul,modules,193,"[cxxmodules] Preload the dependent modules if specified in rootcling.; This should allow us to build non-standard modules such as boost. This patch should enable building the cmssw third-party modules for external dependencies. Cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5359
https://github.com/root-project/root/pull/5359:214,modifiability,depend,dependencies,214,"[cxxmodules] Preload the dependent modules if specified in rootcling.; This should allow us to build non-standard modules such as boost. This patch should enable building the cmssw third-party modules for external dependencies. Cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5359
https://github.com/root-project/root/pull/5359:25,safety,depend,dependent,25,"[cxxmodules] Preload the dependent modules if specified in rootcling.; This should allow us to build non-standard modules such as boost. This patch should enable building the cmssw third-party modules for external dependencies. Cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5359
https://github.com/root-project/root/pull/5359:35,safety,modul,modules,35,"[cxxmodules] Preload the dependent modules if specified in rootcling.; This should allow us to build non-standard modules such as boost. This patch should enable building the cmssw third-party modules for external dependencies. Cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5359
https://github.com/root-project/root/pull/5359:114,safety,modul,modules,114,"[cxxmodules] Preload the dependent modules if specified in rootcling.; This should allow us to build non-standard modules such as boost. This patch should enable building the cmssw third-party modules for external dependencies. Cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5359
https://github.com/root-project/root/pull/5359:142,safety,patch,patch,142,"[cxxmodules] Preload the dependent modules if specified in rootcling.; This should allow us to build non-standard modules such as boost. This patch should enable building the cmssw third-party modules for external dependencies. Cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5359
https://github.com/root-project/root/pull/5359:193,safety,modul,modules,193,"[cxxmodules] Preload the dependent modules if specified in rootcling.; This should allow us to build non-standard modules such as boost. This patch should enable building the cmssw third-party modules for external dependencies. Cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5359
https://github.com/root-project/root/pull/5359:214,safety,depend,dependencies,214,"[cxxmodules] Preload the dependent modules if specified in rootcling.; This should allow us to build non-standard modules such as boost. This patch should enable building the cmssw third-party modules for external dependencies. Cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5359
https://github.com/root-project/root/pull/5359:142,security,patch,patch,142,"[cxxmodules] Preload the dependent modules if specified in rootcling.; This should allow us to build non-standard modules such as boost. This patch should enable building the cmssw third-party modules for external dependencies. Cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5359
https://github.com/root-project/root/pull/5359:25,testability,depend,dependent,25,"[cxxmodules] Preload the dependent modules if specified in rootcling.; This should allow us to build non-standard modules such as boost. This patch should enable building the cmssw third-party modules for external dependencies. Cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5359
https://github.com/root-project/root/pull/5359:214,testability,depend,dependencies,214,"[cxxmodules] Preload the dependent modules if specified in rootcling.; This should allow us to build non-standard modules such as boost. This patch should enable building the cmssw third-party modules for external dependencies. Cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5359
https://github.com/root-project/root/pull/5360:137,modifiability,variab,variables,137,"[RF] Fix ROOT-10676.; When importing a dataset from a TTree, selection strings can be passed. When selection strings are not using *all* variables that are copied. into the dataset, the selection formula was warning that not all. variables are used in the selection. Given that this is likely intended,. the warning was removed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5360
https://github.com/root-project/root/pull/5360:230,modifiability,variab,variables,230,"[RF] Fix ROOT-10676.; When importing a dataset from a TTree, selection strings can be passed. When selection strings are not using *all* variables that are copied. into the dataset, the selection formula was warning that not all. variables are used in the selection. Given that this is likely intended,. the warning was removed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5360
https://github.com/root-project/root/pull/5361:81,availability,failur,failures,81,"[PyROOT] Add test for implicit import from the ROOT namespace; I see some import failures from `ROOT.RVec` in #5310, added a test here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5361
https://github.com/root-project/root/pull/5361:81,deployability,fail,failures,81,"[PyROOT] Add test for implicit import from the ROOT namespace; I see some import failures from `ROOT.RVec` in #5310, added a test here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5361
https://github.com/root-project/root/pull/5361:81,performance,failur,failures,81,"[PyROOT] Add test for implicit import from the ROOT namespace; I see some import failures from `ROOT.RVec` in #5310, added a test here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5361
https://github.com/root-project/root/pull/5361:81,reliability,fail,failures,81,"[PyROOT] Add test for implicit import from the ROOT namespace; I see some import failures from `ROOT.RVec` in #5310, added a test here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5361
https://github.com/root-project/root/pull/5361:13,safety,test,test,13,"[PyROOT] Add test for implicit import from the ROOT namespace; I see some import failures from `ROOT.RVec` in #5310, added a test here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5361
https://github.com/root-project/root/pull/5361:125,safety,test,test,125,"[PyROOT] Add test for implicit import from the ROOT namespace; I see some import failures from `ROOT.RVec` in #5310, added a test here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5361
https://github.com/root-project/root/pull/5361:13,testability,test,test,13,"[PyROOT] Add test for implicit import from the ROOT namespace; I see some import failures from `ROOT.RVec` in #5310, added a test here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5361
https://github.com/root-project/root/pull/5361:125,testability,test,test,125,"[PyROOT] Add test for implicit import from the ROOT namespace; I see some import failures from `ROOT.RVec` in #5310, added a test here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5361
https://github.com/root-project/root/pull/5362:0,safety,Avoid,Avoid,0,Avoid non ASCII characters in CREDITS; Non ascii characters in CREDITS pollute the splash screen as said in this. ticket https://sft.its.cern.ch/jira/browse/ROOT-10684,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5362
https://github.com/root-project/root/pull/5363:23,deployability,instal,installation,23,"[Exp PyROOT] Fixes for installation of PyROOT packages; This fixes:. - The installation of `libJupyROOTX_Y`. - The compilation, at installation time, of the Python source files of the various PyROOT packages",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5363
https://github.com/root-project/root/pull/5363:75,deployability,instal,installation,75,"[Exp PyROOT] Fixes for installation of PyROOT packages; This fixes:. - The installation of `libJupyROOTX_Y`. - The compilation, at installation time, of the Python source files of the various PyROOT packages",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5363
https://github.com/root-project/root/pull/5363:131,deployability,instal,installation,131,"[Exp PyROOT] Fixes for installation of PyROOT packages; This fixes:. - The installation of `libJupyROOTX_Y`. - The compilation, at installation time, of the Python source files of the various PyROOT packages",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5363
https://github.com/root-project/root/pull/5363:46,modifiability,pac,packages,46,"[Exp PyROOT] Fixes for installation of PyROOT packages; This fixes:. - The installation of `libJupyROOTX_Y`. - The compilation, at installation time, of the Python source files of the various PyROOT packages",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5363
https://github.com/root-project/root/pull/5363:199,modifiability,pac,packages,199,"[Exp PyROOT] Fixes for installation of PyROOT packages; This fixes:. - The installation of `libJupyROOTX_Y`. - The compilation, at installation time, of the Python source files of the various PyROOT packages",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5363
https://github.com/root-project/root/pull/5363:144,performance,time,time,144,"[Exp PyROOT] Fixes for installation of PyROOT packages; This fixes:. - The installation of `libJupyROOTX_Y`. - The compilation, at installation time, of the Python source files of the various PyROOT packages",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5363
https://github.com/root-project/root/pull/5364:672,availability,slo,slots,672,"[skip-ci][WIP] [PoC] introduce a hpx MT backend for ROOT; Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores. - Breaks all RDataFrame tests that run with a specified number of cores/slots. - Requires `#include <hpx/hpx_main.hpp>` in the script with the main. - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``. - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5364:142,deployability,build,build,142,"[skip-ci][WIP] [PoC] introduce a hpx MT backend for ROOT; Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores. - Breaks all RDataFrame tests that run with a specified number of cores/slots. - Requires `#include <hpx/hpx_main.hpp>` in the script with the main. - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``. - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5364:438,deployability,integr,integration,438,"[skip-ci][WIP] [PoC] introduce a hpx MT backend for ROOT; Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores. - Breaks all RDataFrame tests that run with a specified number of cores/slots. - Requires `#include <hpx/hpx_main.hpp>` in the script with the main. - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``. - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5364:1039,deployability,instal,installed,1039,"[skip-ci][WIP] [PoC] introduce a hpx MT backend for ROOT; Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores. - Breaks all RDataFrame tests that run with a specified number of cores/slots. - Requires `#include <hpx/hpx_main.hpp>` in the script with the main. - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``. - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5364:1108,deployability,build,build,1108,"[skip-ci][WIP] [PoC] introduce a hpx MT backend for ROOT; Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores. - Breaks all RDataFrame tests that run with a specified number of cores/slots. - Requires `#include <hpx/hpx_main.hpp>` in the script with the main. - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``. - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5364:478,energy efficiency,Draw,Drawbacks,478,"[skip-ci][WIP] [PoC] introduce a hpx MT backend for ROOT; Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores. - Breaks all RDataFrame tests that run with a specified number of cores/slots. - Requires `#include <hpx/hpx_main.hpp>` in the script with the main. - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``. - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5364:593,energy efficiency,core,cores,593,"[skip-ci][WIP] [PoC] introduce a hpx MT backend for ROOT; Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores. - Breaks all RDataFrame tests that run with a specified number of cores/slots. - Requires `#include <hpx/hpx_main.hpp>` in the script with the main. - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``. - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5364:666,energy efficiency,core,cores,666,"[skip-ci][WIP] [PoC] introduce a hpx MT backend for ROOT; Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores. - Breaks all RDataFrame tests that run with a specified number of cores/slots. - Requires `#include <hpx/hpx_main.hpp>` in the script with the main. - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``. - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5364:268,integrability,interfac,interface,268,"[skip-ci][WIP] [PoC] introduce a hpx MT backend for ROOT; Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores. - Breaks all RDataFrame tests that run with a specified number of cores/slots. - Requires `#include <hpx/hpx_main.hpp>` in the script with the main. - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``. - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5364:438,integrability,integr,integration,438,"[skip-ci][WIP] [PoC] introduce a hpx MT backend for ROOT; Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores. - Breaks all RDataFrame tests that run with a specified number of cores/slots. - Requires `#include <hpx/hpx_main.hpp>` in the script with the main. - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``. - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5364:219,interoperability,specif,specifically,219,"[skip-ci][WIP] [PoC] introduce a hpx MT backend for ROOT; Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores. - Breaks all RDataFrame tests that run with a specified number of cores/slots. - Requires `#include <hpx/hpx_main.hpp>` in the script with the main. - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``. - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5364:268,interoperability,interfac,interface,268,"[skip-ci][WIP] [PoC] introduce a hpx MT backend for ROOT; Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores. - Breaks all RDataFrame tests that run with a specified number of cores/slots. - Requires `#include <hpx/hpx_main.hpp>` in the script with the main. - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``. - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5364:281,interoperability,specif,specify,281,"[skip-ci][WIP] [PoC] introduce a hpx MT backend for ROOT; Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores. - Breaks all RDataFrame tests that run with a specified number of cores/slots. - Requires `#include <hpx/hpx_main.hpp>` in the script with the main. - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``. - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5364:438,interoperability,integr,integration,438,"[skip-ci][WIP] [PoC] introduce a hpx MT backend for ROOT; Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores. - Breaks all RDataFrame tests that run with a specified number of cores/slots. - Requires `#include <hpx/hpx_main.hpp>` in the script with the main. - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``. - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5364:646,interoperability,specif,specified,646,"[skip-ci][WIP] [PoC] introduce a hpx MT backend for ROOT; Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores. - Breaks all RDataFrame tests that run with a specified number of cores/slots. - Requires `#include <hpx/hpx_main.hpp>` in the script with the main. - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``. - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5364:268,modifiability,interfac,interface,268,"[skip-ci][WIP] [PoC] introduce a hpx MT backend for ROOT; Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores. - Breaks all RDataFrame tests that run with a specified number of cores/slots. - Requires `#include <hpx/hpx_main.hpp>` in the script with the main. - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``. - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5364:438,modifiability,integr,integration,438,"[skip-ci][WIP] [PoC] introduce a hpx MT backend for ROOT; Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores. - Breaks all RDataFrame tests that run with a specified number of cores/slots. - Requires `#include <hpx/hpx_main.hpp>` in the script with the main. - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``. - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5364:970,performance,Perform,Performance,970,"[skip-ci][WIP] [PoC] introduce a hpx MT backend for ROOT; Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores. - Breaks all RDataFrame tests that run with a specified number of cores/slots. - Requires `#include <hpx/hpx_main.hpp>` in the script with the main. - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``. - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5364:438,reliability,integr,integration,438,"[skip-ci][WIP] [PoC] introduce a hpx MT backend for ROOT; Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores. - Breaks all RDataFrame tests that run with a specified number of cores/slots. - Requires `#include <hpx/hpx_main.hpp>` in the script with the main. - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``. - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5364:672,reliability,slo,slots,672,"[skip-ci][WIP] [PoC] introduce a hpx MT backend for ROOT; Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores. - Breaks all RDataFrame tests that run with a specified number of cores/slots. - Requires `#include <hpx/hpx_main.hpp>` in the script with the main. - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``. - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5364:624,safety,test,tests,624,"[skip-ci][WIP] [PoC] introduce a hpx MT backend for ROOT; Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores. - Breaks all RDataFrame tests that run with a specified number of cores/slots. - Requires `#include <hpx/hpx_main.hpp>` in the script with the main. - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``. - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5364:438,security,integr,integration,438,"[skip-ci][WIP] [PoC] introduce a hpx MT backend for ROOT; Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores. - Breaks all RDataFrame tests that run with a specified number of cores/slots. - Requires `#include <hpx/hpx_main.hpp>` in the script with the main. - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``. - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5364:438,testability,integr,integration,438,"[skip-ci][WIP] [PoC] introduce a hpx MT backend for ROOT; Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores. - Breaks all RDataFrame tests that run with a specified number of cores/slots. - Requires `#include <hpx/hpx_main.hpp>` in the script with the main. - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``. - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5364:624,testability,test,tests,624,"[skip-ci][WIP] [PoC] introduce a hpx MT backend for ROOT; Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores. - Breaks all RDataFrame tests that run with a specified number of cores/slots. - Requires `#include <hpx/hpx_main.hpp>` in the script with the main. - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``. - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5364:970,usability,Perform,Performance,970,"[skip-ci][WIP] [PoC] introduce a hpx MT backend for ROOT; Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores. - Breaks all RDataFrame tests that run with a specified number of cores/slots. - Requires `#include <hpx/hpx_main.hpp>` in the script with the main. - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``. - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5365:336,availability,cluster,cluster,336,"Move changes to TTreeCache data members in apparently better positions; These minor changes seem to affect the way in which TTreeCache interacts with different IO classes, e.g. TTree/TChain vs TTreeReader. In `TTreeCache::FillBuffer` the change in values of `fEntryCurrent` and `fEntryNext`, respectively the first entry of the current cluster and the first entry of the next cluster, has been moved before an `if` condition that was causing an early exit from the function. This, in conjunction with the change in `TTreeReader::SetEntriesRange` apparently fixes the issues with the cache when running a simple program that uses only TTreeReader. At the same time, the changes affect the interaction of the cache with a TTree-only program in a way that now is throwing a log error:. ```Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=821695 fEntryCurrent=821695 fNextClusterStart=1643390 but fEntryCurrent should not be in between the two```. I'm not sure why these changes affect positively the TTreeReader examples and negatively the TTree ones. Some links to these examples follow.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:376,availability,cluster,cluster,376,"Move changes to TTreeCache data members in apparently better positions; These minor changes seem to affect the way in which TTreeCache interacts with different IO classes, e.g. TTree/TChain vs TTreeReader. In `TTreeCache::FillBuffer` the change in values of `fEntryCurrent` and `fEntryNext`, respectively the first entry of the current cluster and the first entry of the next cluster, has been moved before an `if` condition that was causing an early exit from the function. This, in conjunction with the change in `TTreeReader::SetEntriesRange` apparently fixes the issues with the cache when running a simple program that uses only TTreeReader. At the same time, the changes affect the interaction of the cache with a TTree-only program in a way that now is throwing a log error:. ```Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=821695 fEntryCurrent=821695 fNextClusterStart=1643390 but fEntryCurrent should not be in between the two```. I'm not sure why these changes affect positively the TTreeReader examples and negatively the TTree ones. Some links to these examples follow.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:775,availability,error,error,775,"Move changes to TTreeCache data members in apparently better positions; These minor changes seem to affect the way in which TTreeCache interacts with different IO classes, e.g. TTree/TChain vs TTreeReader. In `TTreeCache::FillBuffer` the change in values of `fEntryCurrent` and `fEntryNext`, respectively the first entry of the current cluster and the first entry of the next cluster, has been moved before an `if` condition that was causing an early exit from the function. This, in conjunction with the change in `TTreeReader::SetEntriesRange` apparently fixes the issues with the cache when running a simple program that uses only TTreeReader. At the same time, the changes affect the interaction of the cache with a TTree-only program in a way that now is throwing a log error:. ```Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=821695 fEntryCurrent=821695 fNextClusterStart=1643390 but fEntryCurrent should not be in between the two```. I'm not sure why these changes affect positively the TTreeReader examples and negatively the TTree ones. Some links to these examples follow.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:786,availability,Error,Error,786,"Move changes to TTreeCache data members in apparently better positions; These minor changes seem to affect the way in which TTreeCache interacts with different IO classes, e.g. TTree/TChain vs TTreeReader. In `TTreeCache::FillBuffer` the change in values of `fEntryCurrent` and `fEntryNext`, respectively the first entry of the current cluster and the first entry of the next cluster, has been moved before an `if` condition that was causing an early exit from the function. This, in conjunction with the change in `TTreeReader::SetEntriesRange` apparently fixes the issues with the cache when running a simple program that uses only TTreeReader. At the same time, the changes affect the interaction of the cache with a TTree-only program in a way that now is throwing a log error:. ```Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=821695 fEntryCurrent=821695 fNextClusterStart=1643390 but fEntryCurrent should not be in between the two```. I'm not sure why these changes affect positively the TTreeReader examples and negatively the TTree ones. Some links to these examples follow.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:336,deployability,cluster,cluster,336,"Move changes to TTreeCache data members in apparently better positions; These minor changes seem to affect the way in which TTreeCache interacts with different IO classes, e.g. TTree/TChain vs TTreeReader. In `TTreeCache::FillBuffer` the change in values of `fEntryCurrent` and `fEntryNext`, respectively the first entry of the current cluster and the first entry of the next cluster, has been moved before an `if` condition that was causing an early exit from the function. This, in conjunction with the change in `TTreeReader::SetEntriesRange` apparently fixes the issues with the cache when running a simple program that uses only TTreeReader. At the same time, the changes affect the interaction of the cache with a TTree-only program in a way that now is throwing a log error:. ```Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=821695 fEntryCurrent=821695 fNextClusterStart=1643390 but fEntryCurrent should not be in between the two```. I'm not sure why these changes affect positively the TTreeReader examples and negatively the TTree ones. Some links to these examples follow.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:376,deployability,cluster,cluster,376,"Move changes to TTreeCache data members in apparently better positions; These minor changes seem to affect the way in which TTreeCache interacts with different IO classes, e.g. TTree/TChain vs TTreeReader. In `TTreeCache::FillBuffer` the change in values of `fEntryCurrent` and `fEntryNext`, respectively the first entry of the current cluster and the first entry of the next cluster, has been moved before an `if` condition that was causing an early exit from the function. This, in conjunction with the change in `TTreeReader::SetEntriesRange` apparently fixes the issues with the cache when running a simple program that uses only TTreeReader. At the same time, the changes affect the interaction of the cache with a TTree-only program in a way that now is throwing a log error:. ```Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=821695 fEntryCurrent=821695 fNextClusterStart=1643390 but fEntryCurrent should not be in between the two```. I'm not sure why these changes affect positively the TTreeReader examples and negatively the TTree ones. Some links to these examples follow.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:771,deployability,log,log,771,"Move changes to TTreeCache data members in apparently better positions; These minor changes seem to affect the way in which TTreeCache interacts with different IO classes, e.g. TTree/TChain vs TTreeReader. In `TTreeCache::FillBuffer` the change in values of `fEntryCurrent` and `fEntryNext`, respectively the first entry of the current cluster and the first entry of the next cluster, has been moved before an `if` condition that was causing an early exit from the function. This, in conjunction with the change in `TTreeReader::SetEntriesRange` apparently fixes the issues with the cache when running a simple program that uses only TTreeReader. At the same time, the changes affect the interaction of the cache with a TTree-only program in a way that now is throwing a log error:. ```Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=821695 fEntryCurrent=821695 fNextClusterStart=1643390 but fEntryCurrent should not be in between the two```. I'm not sure why these changes affect positively the TTreeReader examples and negatively the TTree ones. Some links to these examples follow.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:328,energy efficiency,current,current,328,"Move changes to TTreeCache data members in apparently better positions; These minor changes seem to affect the way in which TTreeCache interacts with different IO classes, e.g. TTree/TChain vs TTreeReader. In `TTreeCache::FillBuffer` the change in values of `fEntryCurrent` and `fEntryNext`, respectively the first entry of the current cluster and the first entry of the next cluster, has been moved before an `if` condition that was causing an early exit from the function. This, in conjunction with the change in `TTreeReader::SetEntriesRange` apparently fixes the issues with the cache when running a simple program that uses only TTreeReader. At the same time, the changes affect the interaction of the cache with a TTree-only program in a way that now is throwing a log error:. ```Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=821695 fEntryCurrent=821695 fNextClusterStart=1643390 but fEntryCurrent should not be in between the two```. I'm not sure why these changes affect positively the TTreeReader examples and negatively the TTree ones. Some links to these examples follow.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:583,performance,cach,cache,583,"Move changes to TTreeCache data members in apparently better positions; These minor changes seem to affect the way in which TTreeCache interacts with different IO classes, e.g. TTree/TChain vs TTreeReader. In `TTreeCache::FillBuffer` the change in values of `fEntryCurrent` and `fEntryNext`, respectively the first entry of the current cluster and the first entry of the next cluster, has been moved before an `if` condition that was causing an early exit from the function. This, in conjunction with the change in `TTreeReader::SetEntriesRange` apparently fixes the issues with the cache when running a simple program that uses only TTreeReader. At the same time, the changes affect the interaction of the cache with a TTree-only program in a way that now is throwing a log error:. ```Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=821695 fEntryCurrent=821695 fNextClusterStart=1643390 but fEntryCurrent should not be in between the two```. I'm not sure why these changes affect positively the TTreeReader examples and negatively the TTree ones. Some links to these examples follow.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:659,performance,time,time,659,"Move changes to TTreeCache data members in apparently better positions; These minor changes seem to affect the way in which TTreeCache interacts with different IO classes, e.g. TTree/TChain vs TTreeReader. In `TTreeCache::FillBuffer` the change in values of `fEntryCurrent` and `fEntryNext`, respectively the first entry of the current cluster and the first entry of the next cluster, has been moved before an `if` condition that was causing an early exit from the function. This, in conjunction with the change in `TTreeReader::SetEntriesRange` apparently fixes the issues with the cache when running a simple program that uses only TTreeReader. At the same time, the changes affect the interaction of the cache with a TTree-only program in a way that now is throwing a log error:. ```Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=821695 fEntryCurrent=821695 fNextClusterStart=1643390 but fEntryCurrent should not be in between the two```. I'm not sure why these changes affect positively the TTreeReader examples and negatively the TTree ones. Some links to these examples follow.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:707,performance,cach,cache,707,"Move changes to TTreeCache data members in apparently better positions; These minor changes seem to affect the way in which TTreeCache interacts with different IO classes, e.g. TTree/TChain vs TTreeReader. In `TTreeCache::FillBuffer` the change in values of `fEntryCurrent` and `fEntryNext`, respectively the first entry of the current cluster and the first entry of the next cluster, has been moved before an `if` condition that was causing an early exit from the function. This, in conjunction with the change in `TTreeReader::SetEntriesRange` apparently fixes the issues with the cache when running a simple program that uses only TTreeReader. At the same time, the changes affect the interaction of the cache with a TTree-only program in a way that now is throwing a log error:. ```Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=821695 fEntryCurrent=821695 fNextClusterStart=1643390 but fEntryCurrent should not be in between the two```. I'm not sure why these changes affect positively the TTreeReader examples and negatively the TTree ones. Some links to these examples follow.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:775,performance,error,error,775,"Move changes to TTreeCache data members in apparently better positions; These minor changes seem to affect the way in which TTreeCache interacts with different IO classes, e.g. TTree/TChain vs TTreeReader. In `TTreeCache::FillBuffer` the change in values of `fEntryCurrent` and `fEntryNext`, respectively the first entry of the current cluster and the first entry of the next cluster, has been moved before an `if` condition that was causing an early exit from the function. This, in conjunction with the change in `TTreeReader::SetEntriesRange` apparently fixes the issues with the cache when running a simple program that uses only TTreeReader. At the same time, the changes affect the interaction of the cache with a TTree-only program in a way that now is throwing a log error:. ```Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=821695 fEntryCurrent=821695 fNextClusterStart=1643390 but fEntryCurrent should not be in between the two```. I'm not sure why these changes affect positively the TTreeReader examples and negatively the TTree ones. Some links to these examples follow.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:786,performance,Error,Error,786,"Move changes to TTreeCache data members in apparently better positions; These minor changes seem to affect the way in which TTreeCache interacts with different IO classes, e.g. TTree/TChain vs TTreeReader. In `TTreeCache::FillBuffer` the change in values of `fEntryCurrent` and `fEntryNext`, respectively the first entry of the current cluster and the first entry of the next cluster, has been moved before an `if` condition that was causing an early exit from the function. This, in conjunction with the change in `TTreeReader::SetEntriesRange` apparently fixes the issues with the cache when running a simple program that uses only TTreeReader. At the same time, the changes affect the interaction of the cache with a TTree-only program in a way that now is throwing a log error:. ```Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=821695 fEntryCurrent=821695 fNextClusterStart=1643390 but fEntryCurrent should not be in between the two```. I'm not sure why these changes affect positively the TTreeReader examples and negatively the TTree ones. Some links to these examples follow.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:771,safety,log,log,771,"Move changes to TTreeCache data members in apparently better positions; These minor changes seem to affect the way in which TTreeCache interacts with different IO classes, e.g. TTree/TChain vs TTreeReader. In `TTreeCache::FillBuffer` the change in values of `fEntryCurrent` and `fEntryNext`, respectively the first entry of the current cluster and the first entry of the next cluster, has been moved before an `if` condition that was causing an early exit from the function. This, in conjunction with the change in `TTreeReader::SetEntriesRange` apparently fixes the issues with the cache when running a simple program that uses only TTreeReader. At the same time, the changes affect the interaction of the cache with a TTree-only program in a way that now is throwing a log error:. ```Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=821695 fEntryCurrent=821695 fNextClusterStart=1643390 but fEntryCurrent should not be in between the two```. I'm not sure why these changes affect positively the TTreeReader examples and negatively the TTree ones. Some links to these examples follow.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:775,safety,error,error,775,"Move changes to TTreeCache data members in apparently better positions; These minor changes seem to affect the way in which TTreeCache interacts with different IO classes, e.g. TTree/TChain vs TTreeReader. In `TTreeCache::FillBuffer` the change in values of `fEntryCurrent` and `fEntryNext`, respectively the first entry of the current cluster and the first entry of the next cluster, has been moved before an `if` condition that was causing an early exit from the function. This, in conjunction with the change in `TTreeReader::SetEntriesRange` apparently fixes the issues with the cache when running a simple program that uses only TTreeReader. At the same time, the changes affect the interaction of the cache with a TTree-only program in a way that now is throwing a log error:. ```Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=821695 fEntryCurrent=821695 fNextClusterStart=1643390 but fEntryCurrent should not be in between the two```. I'm not sure why these changes affect positively the TTreeReader examples and negatively the TTree ones. Some links to these examples follow.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:786,safety,Error,Error,786,"Move changes to TTreeCache data members in apparently better positions; These minor changes seem to affect the way in which TTreeCache interacts with different IO classes, e.g. TTree/TChain vs TTreeReader. In `TTreeCache::FillBuffer` the change in values of `fEntryCurrent` and `fEntryNext`, respectively the first entry of the current cluster and the first entry of the next cluster, has been moved before an `if` condition that was causing an early exit from the function. This, in conjunction with the change in `TTreeReader::SetEntriesRange` apparently fixes the issues with the cache when running a simple program that uses only TTreeReader. At the same time, the changes affect the interaction of the cache with a TTree-only program in a way that now is throwing a log error:. ```Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=821695 fEntryCurrent=821695 fNextClusterStart=1643390 but fEntryCurrent should not be in between the two```. I'm not sure why these changes affect positively the TTreeReader examples and negatively the TTree ones. Some links to these examples follow.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:771,security,log,log,771,"Move changes to TTreeCache data members in apparently better positions; These minor changes seem to affect the way in which TTreeCache interacts with different IO classes, e.g. TTree/TChain vs TTreeReader. In `TTreeCache::FillBuffer` the change in values of `fEntryCurrent` and `fEntryNext`, respectively the first entry of the current cluster and the first entry of the next cluster, has been moved before an `if` condition that was causing an early exit from the function. This, in conjunction with the change in `TTreeReader::SetEntriesRange` apparently fixes the issues with the cache when running a simple program that uses only TTreeReader. At the same time, the changes affect the interaction of the cache with a TTree-only program in a way that now is throwing a log error:. ```Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=821695 fEntryCurrent=821695 fNextClusterStart=1643390 but fEntryCurrent should not be in between the two```. I'm not sure why these changes affect positively the TTreeReader examples and negatively the TTree ones. Some links to these examples follow.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:604,testability,simpl,simple,604,"Move changes to TTreeCache data members in apparently better positions; These minor changes seem to affect the way in which TTreeCache interacts with different IO classes, e.g. TTree/TChain vs TTreeReader. In `TTreeCache::FillBuffer` the change in values of `fEntryCurrent` and `fEntryNext`, respectively the first entry of the current cluster and the first entry of the next cluster, has been moved before an `if` condition that was causing an early exit from the function. This, in conjunction with the change in `TTreeReader::SetEntriesRange` apparently fixes the issues with the cache when running a simple program that uses only TTreeReader. At the same time, the changes affect the interaction of the cache with a TTree-only program in a way that now is throwing a log error:. ```Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=821695 fEntryCurrent=821695 fNextClusterStart=1643390 but fEntryCurrent should not be in between the two```. I'm not sure why these changes affect positively the TTreeReader examples and negatively the TTree ones. Some links to these examples follow.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:771,testability,log,log,771,"Move changes to TTreeCache data members in apparently better positions; These minor changes seem to affect the way in which TTreeCache interacts with different IO classes, e.g. TTree/TChain vs TTreeReader. In `TTreeCache::FillBuffer` the change in values of `fEntryCurrent` and `fEntryNext`, respectively the first entry of the current cluster and the first entry of the next cluster, has been moved before an `if` condition that was causing an early exit from the function. This, in conjunction with the change in `TTreeReader::SetEntriesRange` apparently fixes the issues with the cache when running a simple program that uses only TTreeReader. At the same time, the changes affect the interaction of the cache with a TTree-only program in a way that now is throwing a log error:. ```Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=821695 fEntryCurrent=821695 fNextClusterStart=1643390 but fEntryCurrent should not be in between the two```. I'm not sure why these changes affect positively the TTreeReader examples and negatively the TTree ones. Some links to these examples follow.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:135,usability,interact,interacts,135,"Move changes to TTreeCache data members in apparently better positions; These minor changes seem to affect the way in which TTreeCache interacts with different IO classes, e.g. TTree/TChain vs TTreeReader. In `TTreeCache::FillBuffer` the change in values of `fEntryCurrent` and `fEntryNext`, respectively the first entry of the current cluster and the first entry of the next cluster, has been moved before an `if` condition that was causing an early exit from the function. This, in conjunction with the change in `TTreeReader::SetEntriesRange` apparently fixes the issues with the cache when running a simple program that uses only TTreeReader. At the same time, the changes affect the interaction of the cache with a TTree-only program in a way that now is throwing a log error:. ```Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=821695 fEntryCurrent=821695 fNextClusterStart=1643390 but fEntryCurrent should not be in between the two```. I'm not sure why these changes affect positively the TTreeReader examples and negatively the TTree ones. Some links to these examples follow.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:604,usability,simpl,simple,604,"Move changes to TTreeCache data members in apparently better positions; These minor changes seem to affect the way in which TTreeCache interacts with different IO classes, e.g. TTree/TChain vs TTreeReader. In `TTreeCache::FillBuffer` the change in values of `fEntryCurrent` and `fEntryNext`, respectively the first entry of the current cluster and the first entry of the next cluster, has been moved before an `if` condition that was causing an early exit from the function. This, in conjunction with the change in `TTreeReader::SetEntriesRange` apparently fixes the issues with the cache when running a simple program that uses only TTreeReader. At the same time, the changes affect the interaction of the cache with a TTree-only program in a way that now is throwing a log error:. ```Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=821695 fEntryCurrent=821695 fNextClusterStart=1643390 but fEntryCurrent should not be in between the two```. I'm not sure why these changes affect positively the TTreeReader examples and negatively the TTree ones. Some links to these examples follow.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:688,usability,interact,interaction,688,"Move changes to TTreeCache data members in apparently better positions; These minor changes seem to affect the way in which TTreeCache interacts with different IO classes, e.g. TTree/TChain vs TTreeReader. In `TTreeCache::FillBuffer` the change in values of `fEntryCurrent` and `fEntryNext`, respectively the first entry of the current cluster and the first entry of the next cluster, has been moved before an `if` condition that was causing an early exit from the function. This, in conjunction with the change in `TTreeReader::SetEntriesRange` apparently fixes the issues with the cache when running a simple program that uses only TTreeReader. At the same time, the changes affect the interaction of the cache with a TTree-only program in a way that now is throwing a log error:. ```Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=821695 fEntryCurrent=821695 fNextClusterStart=1643390 but fEntryCurrent should not be in between the two```. I'm not sure why these changes affect positively the TTreeReader examples and negatively the TTree ones. Some links to these examples follow.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:775,usability,error,error,775,"Move changes to TTreeCache data members in apparently better positions; These minor changes seem to affect the way in which TTreeCache interacts with different IO classes, e.g. TTree/TChain vs TTreeReader. In `TTreeCache::FillBuffer` the change in values of `fEntryCurrent` and `fEntryNext`, respectively the first entry of the current cluster and the first entry of the next cluster, has been moved before an `if` condition that was causing an early exit from the function. This, in conjunction with the change in `TTreeReader::SetEntriesRange` apparently fixes the issues with the cache when running a simple program that uses only TTreeReader. At the same time, the changes affect the interaction of the cache with a TTree-only program in a way that now is throwing a log error:. ```Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=821695 fEntryCurrent=821695 fNextClusterStart=1643390 but fEntryCurrent should not be in between the two```. I'm not sure why these changes affect positively the TTreeReader examples and negatively the TTree ones. Some links to these examples follow.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:786,usability,Error,Error,786,"Move changes to TTreeCache data members in apparently better positions; These minor changes seem to affect the way in which TTreeCache interacts with different IO classes, e.g. TTree/TChain vs TTreeReader. In `TTreeCache::FillBuffer` the change in values of `fEntryCurrent` and `fEntryNext`, respectively the first entry of the current cluster and the first entry of the next cluster, has been moved before an `if` condition that was causing an early exit from the function. This, in conjunction with the change in `TTreeReader::SetEntriesRange` apparently fixes the issues with the cache when running a simple program that uses only TTreeReader. At the same time, the changes affect the interaction of the cache with a TTree-only program in a way that now is throwing a log error:. ```Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=821695 fEntryCurrent=821695 fNextClusterStart=1643390 but fEntryCurrent should not be in between the two```. I'm not sure why these changes affect positively the TTreeReader examples and negatively the TTree ones. Some links to these examples follow.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5366:12,integrability,interfac,interface,12,"[CMake] Add interface includes for gtest and gmock targets.; When linking against gtest/gmock, the include directories are not added. to the newly created targets. This adds INTERFACE includes to these. targets, so includes for all subsequent targets will fall into place. @reikdas This hopefully fixes the problem that you were seeing in `roottest`. Can you try to rebase on this branch, and test?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5366
https://github.com/root-project/root/pull/5366:174,integrability,INTERFAC,INTERFACE,174,"[CMake] Add interface includes for gtest and gmock targets.; When linking against gtest/gmock, the include directories are not added. to the newly created targets. This adds INTERFACE includes to these. targets, so includes for all subsequent targets will fall into place. @reikdas This hopefully fixes the problem that you were seeing in `roottest`. Can you try to rebase on this branch, and test?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5366
https://github.com/root-project/root/pull/5366:232,integrability,sub,subsequent,232,"[CMake] Add interface includes for gtest and gmock targets.; When linking against gtest/gmock, the include directories are not added. to the newly created targets. This adds INTERFACE includes to these. targets, so includes for all subsequent targets will fall into place. @reikdas This hopefully fixes the problem that you were seeing in `roottest`. Can you try to rebase on this branch, and test?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5366
https://github.com/root-project/root/pull/5366:12,interoperability,interfac,interface,12,"[CMake] Add interface includes for gtest and gmock targets.; When linking against gtest/gmock, the include directories are not added. to the newly created targets. This adds INTERFACE includes to these. targets, so includes for all subsequent targets will fall into place. @reikdas This hopefully fixes the problem that you were seeing in `roottest`. Can you try to rebase on this branch, and test?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5366
https://github.com/root-project/root/pull/5366:174,interoperability,INTERFAC,INTERFACE,174,"[CMake] Add interface includes for gtest and gmock targets.; When linking against gtest/gmock, the include directories are not added. to the newly created targets. This adds INTERFACE includes to these. targets, so includes for all subsequent targets will fall into place. @reikdas This hopefully fixes the problem that you were seeing in `roottest`. Can you try to rebase on this branch, and test?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5366
https://github.com/root-project/root/pull/5366:12,modifiability,interfac,interface,12,"[CMake] Add interface includes for gtest and gmock targets.; When linking against gtest/gmock, the include directories are not added. to the newly created targets. This adds INTERFACE includes to these. targets, so includes for all subsequent targets will fall into place. @reikdas This hopefully fixes the problem that you were seeing in `roottest`. Can you try to rebase on this branch, and test?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5366
https://github.com/root-project/root/pull/5366:174,modifiability,INTERFAC,INTERFACE,174,"[CMake] Add interface includes for gtest and gmock targets.; When linking against gtest/gmock, the include directories are not added. to the newly created targets. This adds INTERFACE includes to these. targets, so includes for all subsequent targets will fall into place. @reikdas This hopefully fixes the problem that you were seeing in `roottest`. Can you try to rebase on this branch, and test?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5366
https://github.com/root-project/root/pull/5366:393,safety,test,test,393,"[CMake] Add interface includes for gtest and gmock targets.; When linking against gtest/gmock, the include directories are not added. to the newly created targets. This adds INTERFACE includes to these. targets, so includes for all subsequent targets will fall into place. @reikdas This hopefully fixes the problem that you were seeing in `roottest`. Can you try to rebase on this branch, and test?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5366
https://github.com/root-project/root/pull/5366:393,testability,test,test,393,"[CMake] Add interface includes for gtest and gmock targets.; When linking against gtest/gmock, the include directories are not added. to the newly created targets. This adds INTERFACE includes to these. targets, so includes for all subsequent targets will fall into place. @reikdas This hopefully fixes the problem that you were seeing in `roottest`. Can you try to rebase on this branch, and test?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5366
https://github.com/root-project/root/pull/5367:462,availability,state,state,462,"Fixes and improvements for the recurrent layers (RNN, LSTM and GRU) and their tests; This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). . This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5367:592,availability,consist,consistent,592,"Fixes and improvements for the recurrent layers (RNN, LSTM and GRU) and their tests; This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). . This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5367:189,energy efficiency,CPU,CPU,189,"Fixes and improvements for the recurrent layers (RNN, LSTM and GRU) and their tests; This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). . This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5367:201,energy efficiency,GPU,GPU,201,"Fixes and improvements for the recurrent layers (RNN, LSTM and GRU) and their tests; This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). . This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5367:286,energy efficiency,CPU,CPU,286,"Fixes and improvements for the recurrent layers (RNN, LSTM and GRU) and their tests; This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). . This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5367:294,energy efficiency,GPU,GPU,294,"Fixes and improvements for the recurrent layers (RNN, LSTM and GRU) and their tests; This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). . This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5367:340,energy efficiency,GPU,GPU,340,"Fixes and improvements for the recurrent layers (RNN, LSTM and GRU) and their tests; This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). . This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5367:542,energy efficiency,CPU,CPU,542,"Fixes and improvements for the recurrent layers (RNN, LSTM and GRU) and their tests; This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). . This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5367:628,energy efficiency,GPU,GPU,628,"Fixes and improvements for the recurrent layers (RNN, LSTM and GRU) and their tests; This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). . This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5367:650,energy efficiency,CPU,CPU,650,"Fixes and improvements for the recurrent layers (RNN, LSTM and GRU) and their tests; This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). . This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5367:704,energy efficiency,optim,optimizer,704,"Fixes and improvements for the recurrent layers (RNN, LSTM and GRU) and their tests; This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). . This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5367:462,integrability,state,state,462,"Fixes and improvements for the recurrent layers (RNN, LSTM and GRU) and their tests; This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). . This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5367:41,modifiability,layer,layers,41,"Fixes and improvements for the recurrent layers (RNN, LSTM and GRU) and their tests; This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). . This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5367:172,modifiability,layer,layers,172,"Fixes and improvements for the recurrent layers (RNN, LSTM and GRU) and their tests; This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). . This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5367:727,modifiability,layer,layers,727,"Fixes and improvements for the recurrent layers (RNN, LSTM and GRU) and their tests; This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). . This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5367:189,performance,CPU,CPU,189,"Fixes and improvements for the recurrent layers (RNN, LSTM and GRU) and their tests; This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). . This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5367:201,performance,GPU,GPU,201,"Fixes and improvements for the recurrent layers (RNN, LSTM and GRU) and their tests; This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). . This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5367:286,performance,CPU,CPU,286,"Fixes and improvements for the recurrent layers (RNN, LSTM and GRU) and their tests; This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). . This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5367:294,performance,GPU,GPU,294,"Fixes and improvements for the recurrent layers (RNN, LSTM and GRU) and their tests; This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). . This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5367:340,performance,GPU,GPU,340,"Fixes and improvements for the recurrent layers (RNN, LSTM and GRU) and their tests; This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). . This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5367:542,performance,CPU,CPU,542,"Fixes and improvements for the recurrent layers (RNN, LSTM and GRU) and their tests; This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). . This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5367:628,performance,GPU,GPU,628,"Fixes and improvements for the recurrent layers (RNN, LSTM and GRU) and their tests; This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). . This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5367:650,performance,CPU,CPU,650,"Fixes and improvements for the recurrent layers (RNN, LSTM and GRU) and their tests; This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). . This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5367:704,performance,optimiz,optimizer,704,"Fixes and improvements for the recurrent layers (RNN, LSTM and GRU) and their tests; This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). . This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5367:78,safety,test,tests,78,"Fixes and improvements for the recurrent layers (RNN, LSTM and GRU) and their tests; This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). . This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5367:106,safety,test,test,106,"Fixes and improvements for the recurrent layers (RNN, LSTM and GRU) and their tests; This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). . This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5367:143,safety,test,tests,143,"Fixes and improvements for the recurrent layers (RNN, LSTM and GRU) and their tests; This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). . This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5367:78,testability,test,tests,78,"Fixes and improvements for the recurrent layers (RNN, LSTM and GRU) and their tests; This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). . This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5367:106,testability,test,test,106,"Fixes and improvements for the recurrent layers (RNN, LSTM and GRU) and their tests; This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). . This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5367:143,testability,test,tests,143,"Fixes and improvements for the recurrent layers (RNN, LSTM and GRU) and their tests; This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). . This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5367:592,usability,consist,consistent,592,"Fixes and improvements for the recurrent layers (RNN, LSTM and GRU) and their tests; This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). . This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5368:239,energy efficiency,current,current,239,"Correcting incorrectly rounded coefficient in dilogarithm; Dear ROOT developers,. I think I've found a little typo in the second coefficient of the Chebyshev expansion of the dilogarithm, implemented in `TMath::DiLog(Double_t x)`:. In the current implementation in ROOT (which dates back to an implementation of K. S. Kölbig from 19 Oct. 1966) the second coefficient reads. 0.40975987533077105. In [Yudell L. Luke: Mathematical functions and their approximations, Academic Press Inc., New York 1975, p.67, Table 3.12] this coefficient has been calculated with more digits to be:. 0.40975987533077105847. Rounding this number to the 17'th digit after the decimal point yields. 0.40975987533077106. which is different (in the last digit) from the coefficient found in `TMath::DiLog(Double_t x)`. I.e. the coefficient has been incorrectly rounded. The incorrectly rounded coefficient is also present in CERNLIB's `RDILOG(X)` function [time stamp: dilog64.F,v 1.1.1.1 1996/04/01 15:02:05 mclareni Exp]. Note: I can reproduce the coefficients from [Yudell L. Luke] with the following Mathematica script:. ~~~. (* interval mappings [a,b] <-> [-1,1] *). a = -1;. b = 0;. y[x_] := (a + b - 2*x)/(a - b). x[y_] := y * (b - a)/2 + (b + a)/2. (* function to approximate *). f = -PolyLog[2, x[-#]]&. (* number of terms from Chebyshev series *). n = 20. (* zeros of Chebyshev polynomials *). xk = Pi (Range[n] - 1/2)/n. (* Chebyshev coefficients *). c[j_] := 2/n Total[Cos[j xk] (f /@ Cos[xk])];. coeffs = Table[c[k], {k, 0, n-1}];. coeffs[[1]] *= 1/2;. (* precision *). prec = 17. Print @ DecimalForm[#,{prec, prec}]& @ Re @ N[#, prec]& @ coeffs. ~~~. Best regards. Alexander Voigt. P.S.: The implementation from K. S. Kölbig is an amazing piece of software! It is extremely fast due to the smart implementation, while providing full double precision.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5368
https://github.com/root-project/root/pull/5368:932,performance,time,time,932,"Correcting incorrectly rounded coefficient in dilogarithm; Dear ROOT developers,. I think I've found a little typo in the second coefficient of the Chebyshev expansion of the dilogarithm, implemented in `TMath::DiLog(Double_t x)`:. In the current implementation in ROOT (which dates back to an implementation of K. S. Kölbig from 19 Oct. 1966) the second coefficient reads. 0.40975987533077105. In [Yudell L. Luke: Mathematical functions and their approximations, Academic Press Inc., New York 1975, p.67, Table 3.12] this coefficient has been calculated with more digits to be:. 0.40975987533077105847. Rounding this number to the 17'th digit after the decimal point yields. 0.40975987533077106. which is different (in the last digit) from the coefficient found in `TMath::DiLog(Double_t x)`. I.e. the coefficient has been incorrectly rounded. The incorrectly rounded coefficient is also present in CERNLIB's `RDILOG(X)` function [time stamp: dilog64.F,v 1.1.1.1 1996/04/01 15:02:05 mclareni Exp]. Note: I can reproduce the coefficients from [Yudell L. Luke] with the following Mathematica script:. ~~~. (* interval mappings [a,b] <-> [-1,1] *). a = -1;. b = 0;. y[x_] := (a + b - 2*x)/(a - b). x[y_] := y * (b - a)/2 + (b + a)/2. (* function to approximate *). f = -PolyLog[2, x[-#]]&. (* number of terms from Chebyshev series *). n = 20. (* zeros of Chebyshev polynomials *). xk = Pi (Range[n] - 1/2)/n. (* Chebyshev coefficients *). c[j_] := 2/n Total[Cos[j xk] (f /@ Cos[xk])];. coeffs = Table[c[k], {k, 0, n-1}];. coeffs[[1]] *= 1/2;. (* precision *). prec = 17. Print @ DecimalForm[#,{prec, prec}]& @ Re @ N[#, prec]& @ coeffs. ~~~. Best regards. Alexander Voigt. P.S.: The implementation from K. S. Kölbig is an amazing piece of software! It is extremely fast due to the smart implementation, while providing full double precision.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5368
https://github.com/root-project/root/pull/5369:29,modifiability,variab,variable,29,[RDF] Silence -Wunused-const-variable in sqlite test; Small hack to silence the (potentially) unused variable `url1` without touching cmake.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5369
https://github.com/root-project/root/pull/5369:101,modifiability,variab,variable,101,[RDF] Silence -Wunused-const-variable in sqlite test; Small hack to silence the (potentially) unused variable `url1` without touching cmake.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5369
https://github.com/root-project/root/pull/5369:48,safety,test,test,48,[RDF] Silence -Wunused-const-variable in sqlite test; Small hack to silence the (potentially) unused variable `url1` without touching cmake.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5369
https://github.com/root-project/root/pull/5369:60,security,hack,hack,60,[RDF] Silence -Wunused-const-variable in sqlite test; Small hack to silence the (potentially) unused variable `url1` without touching cmake.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5369
https://github.com/root-project/root/pull/5369:48,testability,test,test,48,[RDF] Silence -Wunused-const-variable in sqlite test; Small hack to silence the (potentially) unused variable `url1` without touching cmake.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5369
https://github.com/root-project/root/pull/5370:224,deployability,build,builder,224,"[cling] Preserve AnonStructIds of mangling ctx:; Across transactions, lambda types ($_0 etc) must keep their. mangling, instead of resetting the counter and recreating the. AnonStructIds. Enable that by swapping old and new builder. cxxabi mangle context. Fixes ROOT-10689.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5370
https://github.com/root-project/root/pull/5370:247,testability,context,context,247,"[cling] Preserve AnonStructIds of mangling ctx:; Across transactions, lambda types ($_0 etc) must keep their. mangling, instead of resetting the counter and recreating the. AnonStructIds. Enable that by swapping old and new builder. cxxabi mangle context. Fixes ROOT-10689.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5370
https://github.com/root-project/root/pull/5371:178,deployability,build,build,178,"[cling] Shadow only prompt definitions:; This prevents an assert (isClingShadowNamespace(D->getDeclContext()) && ""D not in a __cling_N5xxx namespace?""), function hideDecl, file /build/jenkins/night/LABEL/mac1014/SPEC/soversion/V/master/root/interpreter/cling/lib/Interpreter/DefinitionShadower.cpp, line 61",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5371
https://github.com/root-project/root/pull/5371:46,safety,prevent,prevents,46,"[cling] Shadow only prompt definitions:; This prevents an assert (isClingShadowNamespace(D->getDeclContext()) && ""D not in a __cling_N5xxx namespace?""), function hideDecl, file /build/jenkins/night/LABEL/mac1014/SPEC/soversion/V/master/root/interpreter/cling/lib/Interpreter/DefinitionShadower.cpp, line 61",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5371
https://github.com/root-project/root/pull/5371:46,security,preven,prevents,46,"[cling] Shadow only prompt definitions:; This prevents an assert (isClingShadowNamespace(D->getDeclContext()) && ""D not in a __cling_N5xxx namespace?""), function hideDecl, file /build/jenkins/night/LABEL/mac1014/SPEC/soversion/V/master/root/interpreter/cling/lib/Interpreter/DefinitionShadower.cpp, line 61",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5371
https://github.com/root-project/root/pull/5371:58,testability,assert,assert,58,"[cling] Shadow only prompt definitions:; This prevents an assert (isClingShadowNamespace(D->getDeclContext()) && ""D not in a __cling_N5xxx namespace?""), function hideDecl, file /build/jenkins/night/LABEL/mac1014/SPEC/soversion/V/master/root/interpreter/cling/lib/Interpreter/DefinitionShadower.cpp, line 61",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5371
https://github.com/root-project/root/pull/5372:63,availability,avail,available,63,Improve TMathText Doc; Add the fact TMathText rendering is not available for PDF,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5372
https://github.com/root-project/root/pull/5372:63,reliability,availab,available,63,Improve TMathText Doc; Add the fact TMathText rendering is not available for PDF,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5372
https://github.com/root-project/root/pull/5372:63,safety,avail,available,63,Improve TMathText Doc; Add the fact TMathText rendering is not available for PDF,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5372
https://github.com/root-project/root/pull/5372:63,security,availab,available,63,Improve TMathText Doc; Add the fact TMathText rendering is not available for PDF,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5372
https://github.com/root-project/root/pull/5373:54,availability,consist,consistent,54,"[Exp PyROOT][ROOT-10681] Make AddressOf and addressof consistent with old PyROOT; Both `AddressOf` and `addressof` exist in old PyROOT, and they can be used to obtain the address of the address of a C++ object from its Python proxy. In the case of `addressof`, the address is returned as a value, while for `AddressOf` it is returned as an indexable buffer. This PR proposes to implement `AddressOf` in terms of `addressof` (which is the only one provided by cppyy), just by creating an array of one position and storing the address in that position.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5373
https://github.com/root-project/root/pull/5373:350,integrability,buffer,buffer,350,"[Exp PyROOT][ROOT-10681] Make AddressOf and addressof consistent with old PyROOT; Both `AddressOf` and `addressof` exist in old PyROOT, and they can be used to obtain the address of the address of a C++ object from its Python proxy. In the case of `addressof`, the address is returned as a value, while for `AddressOf` it is returned as an indexable buffer. This PR proposes to implement `AddressOf` in terms of `addressof` (which is the only one provided by cppyy), just by creating an array of one position and storing the address in that position.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5373
https://github.com/root-project/root/pull/5373:226,interoperability,prox,proxy,226,"[Exp PyROOT][ROOT-10681] Make AddressOf and addressof consistent with old PyROOT; Both `AddressOf` and `addressof` exist in old PyROOT, and they can be used to obtain the address of the address of a C++ object from its Python proxy. In the case of `addressof`, the address is returned as a value, while for `AddressOf` it is returned as an indexable buffer. This PR proposes to implement `AddressOf` in terms of `addressof` (which is the only one provided by cppyy), just by creating an array of one position and storing the address in that position.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5373
https://github.com/root-project/root/pull/5373:54,usability,consist,consistent,54,"[Exp PyROOT][ROOT-10681] Make AddressOf and addressof consistent with old PyROOT; Both `AddressOf` and `addressof` exist in old PyROOT, and they can be used to obtain the address of the address of a C++ object from its Python proxy. In the case of `addressof`, the address is returned as a value, while for `AddressOf` it is returned as an indexable buffer. This PR proposes to implement `AddressOf` in terms of `addressof` (which is the only one provided by cppyy), just by creating an array of one position and storing the address in that position.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5373
https://github.com/root-project/root/pull/5375:88,deployability,fail,fails,88,"TLegend renders TMathText in canvases saved as .C; Right now, `TLegendEntry::SaveEntry` fails to escape backslashes properly, causing `TMathText` to fail to be rendered by the output code from `TPad::SaveAs('.C')`. This PR corrects this, adding the escaping behavior implemented in `TH1::SavePrimitive` to `TLegendEntry::SaveEntry`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5375
https://github.com/root-project/root/pull/5375:149,deployability,fail,fail,149,"TLegend renders TMathText in canvases saved as .C; Right now, `TLegendEntry::SaveEntry` fails to escape backslashes properly, causing `TMathText` to fail to be rendered by the output code from `TPad::SaveAs('.C')`. This PR corrects this, adding the escaping behavior implemented in `TH1::SavePrimitive` to `TLegendEntry::SaveEntry`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5375
https://github.com/root-project/root/pull/5375:88,reliability,fail,fails,88,"TLegend renders TMathText in canvases saved as .C; Right now, `TLegendEntry::SaveEntry` fails to escape backslashes properly, causing `TMathText` to fail to be rendered by the output code from `TPad::SaveAs('.C')`. This PR corrects this, adding the escaping behavior implemented in `TH1::SavePrimitive` to `TLegendEntry::SaveEntry`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5375
https://github.com/root-project/root/pull/5375:149,reliability,fail,fail,149,"TLegend renders TMathText in canvases saved as .C; Right now, `TLegendEntry::SaveEntry` fails to escape backslashes properly, causing `TMathText` to fail to be rendered by the output code from `TPad::SaveAs('.C')`. This PR corrects this, adding the escaping behavior implemented in `TH1::SavePrimitive` to `TLegendEntry::SaveEntry`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5375
https://github.com/root-project/root/pull/5375:258,usability,behavi,behavior,258,"TLegend renders TMathText in canvases saved as .C; Right now, `TLegendEntry::SaveEntry` fails to escape backslashes properly, causing `TMathText` to fail to be rendered by the output code from `TPad::SaveAs('.C')`. This PR corrects this, adding the escaping behavior implemented in `TH1::SavePrimitive` to `TLegendEntry::SaveEntry`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5375
https://github.com/root-project/root/pull/5376:30,deployability,instal,installation,30,"[wincxxmodules] Enable proper installation of modulemaps; build the libc module.; @gargvaibhav64, this PR should get you going. What we should do next is we should put a separate module for vcruntime* header files which seem to connect to both libc and std. That would mean we will have to have a separate modulemap vcruntime.h, corecrt.h (?) and vcruntime_string.h. On the ROOT side, before loading libc [here](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L1145-L1149) we should load the new `vcruntime`module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5376
https://github.com/root-project/root/pull/5376:46,deployability,modul,modulemaps,46,"[wincxxmodules] Enable proper installation of modulemaps; build the libc module.; @gargvaibhav64, this PR should get you going. What we should do next is we should put a separate module for vcruntime* header files which seem to connect to both libc and std. That would mean we will have to have a separate modulemap vcruntime.h, corecrt.h (?) and vcruntime_string.h. On the ROOT side, before loading libc [here](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L1145-L1149) we should load the new `vcruntime`module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5376
https://github.com/root-project/root/pull/5376:58,deployability,build,build,58,"[wincxxmodules] Enable proper installation of modulemaps; build the libc module.; @gargvaibhav64, this PR should get you going. What we should do next is we should put a separate module for vcruntime* header files which seem to connect to both libc and std. That would mean we will have to have a separate modulemap vcruntime.h, corecrt.h (?) and vcruntime_string.h. On the ROOT side, before loading libc [here](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L1145-L1149) we should load the new `vcruntime`module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5376
https://github.com/root-project/root/pull/5376:73,deployability,modul,module,73,"[wincxxmodules] Enable proper installation of modulemaps; build the libc module.; @gargvaibhav64, this PR should get you going. What we should do next is we should put a separate module for vcruntime* header files which seem to connect to both libc and std. That would mean we will have to have a separate modulemap vcruntime.h, corecrt.h (?) and vcruntime_string.h. On the ROOT side, before loading libc [here](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L1145-L1149) we should load the new `vcruntime`module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5376
https://github.com/root-project/root/pull/5376:179,deployability,modul,module,179,"[wincxxmodules] Enable proper installation of modulemaps; build the libc module.; @gargvaibhav64, this PR should get you going. What we should do next is we should put a separate module for vcruntime* header files which seem to connect to both libc and std. That would mean we will have to have a separate modulemap vcruntime.h, corecrt.h (?) and vcruntime_string.h. On the ROOT side, before loading libc [here](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L1145-L1149) we should load the new `vcruntime`module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5376
https://github.com/root-project/root/pull/5376:306,deployability,modul,modulemap,306,"[wincxxmodules] Enable proper installation of modulemaps; build the libc module.; @gargvaibhav64, this PR should get you going. What we should do next is we should put a separate module for vcruntime* header files which seem to connect to both libc and std. That would mean we will have to have a separate modulemap vcruntime.h, corecrt.h (?) and vcruntime_string.h. On the ROOT side, before loading libc [here](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L1145-L1149) we should load the new `vcruntime`module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5376
https://github.com/root-project/root/pull/5376:538,deployability,modul,module,538,"[wincxxmodules] Enable proper installation of modulemaps; build the libc module.; @gargvaibhav64, this PR should get you going. What we should do next is we should put a separate module for vcruntime* header files which seem to connect to both libc and std. That would mean we will have to have a separate modulemap vcruntime.h, corecrt.h (?) and vcruntime_string.h. On the ROOT side, before loading libc [here](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L1145-L1149) we should load the new `vcruntime`module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5376
https://github.com/root-project/root/pull/5376:329,energy efficiency,core,corecrt,329,"[wincxxmodules] Enable proper installation of modulemaps; build the libc module.; @gargvaibhav64, this PR should get you going. What we should do next is we should put a separate module for vcruntime* header files which seem to connect to both libc and std. That would mean we will have to have a separate modulemap vcruntime.h, corecrt.h (?) and vcruntime_string.h. On the ROOT side, before loading libc [here](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L1145-L1149) we should load the new `vcruntime`module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5376
https://github.com/root-project/root/pull/5376:392,energy efficiency,load,loading,392,"[wincxxmodules] Enable proper installation of modulemaps; build the libc module.; @gargvaibhav64, this PR should get you going. What we should do next is we should put a separate module for vcruntime* header files which seem to connect to both libc and std. That would mean we will have to have a separate modulemap vcruntime.h, corecrt.h (?) and vcruntime_string.h. On the ROOT side, before loading libc [here](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L1145-L1149) we should load the new `vcruntime`module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5376
https://github.com/root-project/root/pull/5376:461,energy efficiency,core,core,461,"[wincxxmodules] Enable proper installation of modulemaps; build the libc module.; @gargvaibhav64, this PR should get you going. What we should do next is we should put a separate module for vcruntime* header files which seem to connect to both libc and std. That would mean we will have to have a separate modulemap vcruntime.h, corecrt.h (?) and vcruntime_string.h. On the ROOT side, before loading libc [here](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L1145-L1149) we should load the new `vcruntime`module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5376
https://github.com/root-project/root/pull/5376:514,energy efficiency,load,load,514,"[wincxxmodules] Enable proper installation of modulemaps; build the libc module.; @gargvaibhav64, this PR should get you going. What we should do next is we should put a separate module for vcruntime* header files which seem to connect to both libc and std. That would mean we will have to have a separate modulemap vcruntime.h, corecrt.h (?) and vcruntime_string.h. On the ROOT side, before loading libc [here](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L1145-L1149) we should load the new `vcruntime`module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5376
https://github.com/root-project/root/pull/5376:46,modifiability,modul,modulemaps,46,"[wincxxmodules] Enable proper installation of modulemaps; build the libc module.; @gargvaibhav64, this PR should get you going. What we should do next is we should put a separate module for vcruntime* header files which seem to connect to both libc and std. That would mean we will have to have a separate modulemap vcruntime.h, corecrt.h (?) and vcruntime_string.h. On the ROOT side, before loading libc [here](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L1145-L1149) we should load the new `vcruntime`module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5376
https://github.com/root-project/root/pull/5376:73,modifiability,modul,module,73,"[wincxxmodules] Enable proper installation of modulemaps; build the libc module.; @gargvaibhav64, this PR should get you going. What we should do next is we should put a separate module for vcruntime* header files which seem to connect to both libc and std. That would mean we will have to have a separate modulemap vcruntime.h, corecrt.h (?) and vcruntime_string.h. On the ROOT side, before loading libc [here](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L1145-L1149) we should load the new `vcruntime`module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5376
https://github.com/root-project/root/pull/5376:179,modifiability,modul,module,179,"[wincxxmodules] Enable proper installation of modulemaps; build the libc module.; @gargvaibhav64, this PR should get you going. What we should do next is we should put a separate module for vcruntime* header files which seem to connect to both libc and std. That would mean we will have to have a separate modulemap vcruntime.h, corecrt.h (?) and vcruntime_string.h. On the ROOT side, before loading libc [here](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L1145-L1149) we should load the new `vcruntime`module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5376
https://github.com/root-project/root/pull/5376:306,modifiability,modul,modulemap,306,"[wincxxmodules] Enable proper installation of modulemaps; build the libc module.; @gargvaibhav64, this PR should get you going. What we should do next is we should put a separate module for vcruntime* header files which seem to connect to both libc and std. That would mean we will have to have a separate modulemap vcruntime.h, corecrt.h (?) and vcruntime_string.h. On the ROOT side, before loading libc [here](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L1145-L1149) we should load the new `vcruntime`module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5376
https://github.com/root-project/root/pull/5376:538,modifiability,modul,module,538,"[wincxxmodules] Enable proper installation of modulemaps; build the libc module.; @gargvaibhav64, this PR should get you going. What we should do next is we should put a separate module for vcruntime* header files which seem to connect to both libc and std. That would mean we will have to have a separate modulemap vcruntime.h, corecrt.h (?) and vcruntime_string.h. On the ROOT side, before loading libc [here](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L1145-L1149) we should load the new `vcruntime`module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5376
https://github.com/root-project/root/pull/5376:392,performance,load,loading,392,"[wincxxmodules] Enable proper installation of modulemaps; build the libc module.; @gargvaibhav64, this PR should get you going. What we should do next is we should put a separate module for vcruntime* header files which seem to connect to both libc and std. That would mean we will have to have a separate modulemap vcruntime.h, corecrt.h (?) and vcruntime_string.h. On the ROOT side, before loading libc [here](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L1145-L1149) we should load the new `vcruntime`module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5376
https://github.com/root-project/root/pull/5376:514,performance,load,load,514,"[wincxxmodules] Enable proper installation of modulemaps; build the libc module.; @gargvaibhav64, this PR should get you going. What we should do next is we should put a separate module for vcruntime* header files which seem to connect to both libc and std. That would mean we will have to have a separate modulemap vcruntime.h, corecrt.h (?) and vcruntime_string.h. On the ROOT side, before loading libc [here](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L1145-L1149) we should load the new `vcruntime`module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5376
https://github.com/root-project/root/pull/5376:46,safety,modul,modulemaps,46,"[wincxxmodules] Enable proper installation of modulemaps; build the libc module.; @gargvaibhav64, this PR should get you going. What we should do next is we should put a separate module for vcruntime* header files which seem to connect to both libc and std. That would mean we will have to have a separate modulemap vcruntime.h, corecrt.h (?) and vcruntime_string.h. On the ROOT side, before loading libc [here](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L1145-L1149) we should load the new `vcruntime`module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5376
https://github.com/root-project/root/pull/5376:73,safety,modul,module,73,"[wincxxmodules] Enable proper installation of modulemaps; build the libc module.; @gargvaibhav64, this PR should get you going. What we should do next is we should put a separate module for vcruntime* header files which seem to connect to both libc and std. That would mean we will have to have a separate modulemap vcruntime.h, corecrt.h (?) and vcruntime_string.h. On the ROOT side, before loading libc [here](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L1145-L1149) we should load the new `vcruntime`module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5376
https://github.com/root-project/root/pull/5376:179,safety,modul,module,179,"[wincxxmodules] Enable proper installation of modulemaps; build the libc module.; @gargvaibhav64, this PR should get you going. What we should do next is we should put a separate module for vcruntime* header files which seem to connect to both libc and std. That would mean we will have to have a separate modulemap vcruntime.h, corecrt.h (?) and vcruntime_string.h. On the ROOT side, before loading libc [here](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L1145-L1149) we should load the new `vcruntime`module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5376
https://github.com/root-project/root/pull/5376:306,safety,modul,modulemap,306,"[wincxxmodules] Enable proper installation of modulemaps; build the libc module.; @gargvaibhav64, this PR should get you going. What we should do next is we should put a separate module for vcruntime* header files which seem to connect to both libc and std. That would mean we will have to have a separate modulemap vcruntime.h, corecrt.h (?) and vcruntime_string.h. On the ROOT side, before loading libc [here](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L1145-L1149) we should load the new `vcruntime`module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5376
https://github.com/root-project/root/pull/5376:538,safety,modul,module,538,"[wincxxmodules] Enable proper installation of modulemaps; build the libc module.; @gargvaibhav64, this PR should get you going. What we should do next is we should put a separate module for vcruntime* header files which seem to connect to both libc and std. That would mean we will have to have a separate modulemap vcruntime.h, corecrt.h (?) and vcruntime_string.h. On the ROOT side, before loading libc [here](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L1145-L1149) we should load the new `vcruntime`module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5376
https://github.com/root-project/root/pull/5377:218,availability,cluster,cluster,218,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:283,availability,cluster,cluster,283,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:345,availability,cluster,cluster,345,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:581,availability,cluster,cluster,581,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:1016,availability,cluster,cluster,1016,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:218,deployability,cluster,cluster,218,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:283,deployability,cluster,cluster,283,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:323,deployability,log,logic,323,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:345,deployability,cluster,cluster,345,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:581,deployability,cluster,cluster,581,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:718,deployability,manag,management,718,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:1016,deployability,cluster,cluster,1016,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:26,energy efficiency,schedul,scheduler,26,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:66,energy efficiency,schedul,scheduler,66,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:150,energy efficiency,current,current,150,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:567,energy efficiency,Current,Currently,567,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:718,energy efficiency,manag,management,718,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:801,energy efficiency,Load,LoadCluster,801,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:1038,energy efficiency,load,loaded,1038,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:250,integrability,asynchron,asynchronously,250,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:598,modifiability,pac,packed,598,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:22,performance,I/O,I/O,22,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:26,performance,schedul,scheduler,26,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:62,performance,I/O,I/O,62,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:66,performance,schedul,scheduler,66,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:185,performance,synch,synchronously,185,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:250,performance,asynch,asynchronously,250,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:300,performance,I/O,I/O,300,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:589,performance,cach,cache,589,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:711,performance,memor,memory,711,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:778,performance,concurren,concurrent,778,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:801,performance,Load,LoadCluster,801,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:827,performance,I/O,I/O,827,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:1038,performance,load,loaded,1038,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:323,safety,log,logic,323,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:718,safety,manag,management,718,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:323,security,log,logic,323,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:323,testability,log,logic,323,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:711,usability,memor,memory,711,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:887,usability,Support,Support,887,"[ntuple] Introduce an I/O scheduler; Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial. - [x] Support changing active columns during the lifetime of an ntuple reader. - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5379:54,energy efficiency,draw,drawable,54,"Introducing RHistStatBox for RCanvas; This is special drawable, which I used as playground for new functionality. `RHistStatBox` class is drawable, which hold reference to histogram and can calculate statistic in range, selected in the `RFrame` on the client side. If there are several clients (several web browsers with shown canvas) each client will be able to select zoomed range individually and get right statistic. If necessary, several `RHistStatBox` for different histograms can be shown on the RCanvas - even if only one histogram is displayed. `RHistStatBox` object instance is not send to client as simple `RText` or `RLine`. Instead - only css attributes (fill, line, text colors etc) are send. This is necessary, while otherwise histogram will be send - and it can be huge. . Special `RDrawableRequest` / `RDrawableReply` classes are introduced. They allow to submit any kind of request to selected drawable from the client. Now it is universal method to access C++ functionality from JavaScript. It is replacement to `gROOT->ProcessLine()` which was used up to now. . Dedicated `RStatBoxRequest` class used to get statbox lines every time when zooming is changed. Via `friend class` relation it can access private methods in `RHistStatBox`. This is solution for methods which should remain protected from user. For the future. `RHistStatBox` can be generalized - one can extract `RStatBox` base class and use it to implement statbox for `RGraph`, `RProfile` or any other classes where it make sense. Here is actual screenshot:. ![Canvas](https://user-images.githubusercontent.com/4936580/79573534-181ec500-80bf-11ea-9326-659b06fcbdf2.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5379
https://github.com/root-project/root/pull/5379:138,energy efficiency,draw,drawable,138,"Introducing RHistStatBox for RCanvas; This is special drawable, which I used as playground for new functionality. `RHistStatBox` class is drawable, which hold reference to histogram and can calculate statistic in range, selected in the `RFrame` on the client side. If there are several clients (several web browsers with shown canvas) each client will be able to select zoomed range individually and get right statistic. If necessary, several `RHistStatBox` for different histograms can be shown on the RCanvas - even if only one histogram is displayed. `RHistStatBox` object instance is not send to client as simple `RText` or `RLine`. Instead - only css attributes (fill, line, text colors etc) are send. This is necessary, while otherwise histogram will be send - and it can be huge. . Special `RDrawableRequest` / `RDrawableReply` classes are introduced. They allow to submit any kind of request to selected drawable from the client. Now it is universal method to access C++ functionality from JavaScript. It is replacement to `gROOT->ProcessLine()` which was used up to now. . Dedicated `RStatBoxRequest` class used to get statbox lines every time when zooming is changed. Via `friend class` relation it can access private methods in `RHistStatBox`. This is solution for methods which should remain protected from user. For the future. `RHistStatBox` can be generalized - one can extract `RStatBox` base class and use it to implement statbox for `RGraph`, `RProfile` or any other classes where it make sense. Here is actual screenshot:. ![Canvas](https://user-images.githubusercontent.com/4936580/79573534-181ec500-80bf-11ea-9326-659b06fcbdf2.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5379
https://github.com/root-project/root/pull/5379:912,energy efficiency,draw,drawable,912,"Introducing RHistStatBox for RCanvas; This is special drawable, which I used as playground for new functionality. `RHistStatBox` class is drawable, which hold reference to histogram and can calculate statistic in range, selected in the `RFrame` on the client side. If there are several clients (several web browsers with shown canvas) each client will be able to select zoomed range individually and get right statistic. If necessary, several `RHistStatBox` for different histograms can be shown on the RCanvas - even if only one histogram is displayed. `RHistStatBox` object instance is not send to client as simple `RText` or `RLine`. Instead - only css attributes (fill, line, text colors etc) are send. This is necessary, while otherwise histogram will be send - and it can be huge. . Special `RDrawableRequest` / `RDrawableReply` classes are introduced. They allow to submit any kind of request to selected drawable from the client. Now it is universal method to access C++ functionality from JavaScript. It is replacement to `gROOT->ProcessLine()` which was used up to now. . Dedicated `RStatBoxRequest` class used to get statbox lines every time when zooming is changed. Via `friend class` relation it can access private methods in `RHistStatBox`. This is solution for methods which should remain protected from user. For the future. `RHistStatBox` can be generalized - one can extract `RStatBox` base class and use it to implement statbox for `RGraph`, `RProfile` or any other classes where it make sense. Here is actual screenshot:. ![Canvas](https://user-images.githubusercontent.com/4936580/79573534-181ec500-80bf-11ea-9326-659b06fcbdf2.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5379
https://github.com/root-project/root/pull/5379:873,integrability,sub,submit,873,"Introducing RHistStatBox for RCanvas; This is special drawable, which I used as playground for new functionality. `RHistStatBox` class is drawable, which hold reference to histogram and can calculate statistic in range, selected in the `RFrame` on the client side. If there are several clients (several web browsers with shown canvas) each client will be able to select zoomed range individually and get right statistic. If necessary, several `RHistStatBox` for different histograms can be shown on the RCanvas - even if only one histogram is displayed. `RHistStatBox` object instance is not send to client as simple `RText` or `RLine`. Instead - only css attributes (fill, line, text colors etc) are send. This is necessary, while otherwise histogram will be send - and it can be huge. . Special `RDrawableRequest` / `RDrawableReply` classes are introduced. They allow to submit any kind of request to selected drawable from the client. Now it is universal method to access C++ functionality from JavaScript. It is replacement to `gROOT->ProcessLine()` which was used up to now. . Dedicated `RStatBoxRequest` class used to get statbox lines every time when zooming is changed. Via `friend class` relation it can access private methods in `RHistStatBox`. This is solution for methods which should remain protected from user. For the future. `RHistStatBox` can be generalized - one can extract `RStatBox` base class and use it to implement statbox for `RGraph`, `RProfile` or any other classes where it make sense. Here is actual screenshot:. ![Canvas](https://user-images.githubusercontent.com/4936580/79573534-181ec500-80bf-11ea-9326-659b06fcbdf2.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5379
https://github.com/root-project/root/pull/5379:1148,performance,time,time,1148,"Introducing RHistStatBox for RCanvas; This is special drawable, which I used as playground for new functionality. `RHistStatBox` class is drawable, which hold reference to histogram and can calculate statistic in range, selected in the `RFrame` on the client side. If there are several clients (several web browsers with shown canvas) each client will be able to select zoomed range individually and get right statistic. If necessary, several `RHistStatBox` for different histograms can be shown on the RCanvas - even if only one histogram is displayed. `RHistStatBox` object instance is not send to client as simple `RText` or `RLine`. Instead - only css attributes (fill, line, text colors etc) are send. This is necessary, while otherwise histogram will be send - and it can be huge. . Special `RDrawableRequest` / `RDrawableReply` classes are introduced. They allow to submit any kind of request to selected drawable from the client. Now it is universal method to access C++ functionality from JavaScript. It is replacement to `gROOT->ProcessLine()` which was used up to now. . Dedicated `RStatBoxRequest` class used to get statbox lines every time when zooming is changed. Via `friend class` relation it can access private methods in `RHistStatBox`. This is solution for methods which should remain protected from user. For the future. `RHistStatBox` can be generalized - one can extract `RStatBox` base class and use it to implement statbox for `RGraph`, `RProfile` or any other classes where it make sense. Here is actual screenshot:. ![Canvas](https://user-images.githubusercontent.com/4936580/79573534-181ec500-80bf-11ea-9326-659b06fcbdf2.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5379
https://github.com/root-project/root/pull/5379:29,reliability,RCa,RCanvas,29,"Introducing RHistStatBox for RCanvas; This is special drawable, which I used as playground for new functionality. `RHistStatBox` class is drawable, which hold reference to histogram and can calculate statistic in range, selected in the `RFrame` on the client side. If there are several clients (several web browsers with shown canvas) each client will be able to select zoomed range individually and get right statistic. If necessary, several `RHistStatBox` for different histograms can be shown on the RCanvas - even if only one histogram is displayed. `RHistStatBox` object instance is not send to client as simple `RText` or `RLine`. Instead - only css attributes (fill, line, text colors etc) are send. This is necessary, while otherwise histogram will be send - and it can be huge. . Special `RDrawableRequest` / `RDrawableReply` classes are introduced. They allow to submit any kind of request to selected drawable from the client. Now it is universal method to access C++ functionality from JavaScript. It is replacement to `gROOT->ProcessLine()` which was used up to now. . Dedicated `RStatBoxRequest` class used to get statbox lines every time when zooming is changed. Via `friend class` relation it can access private methods in `RHistStatBox`. This is solution for methods which should remain protected from user. For the future. `RHistStatBox` can be generalized - one can extract `RStatBox` base class and use it to implement statbox for `RGraph`, `RProfile` or any other classes where it make sense. Here is actual screenshot:. ![Canvas](https://user-images.githubusercontent.com/4936580/79573534-181ec500-80bf-11ea-9326-659b06fcbdf2.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5379
https://github.com/root-project/root/pull/5379:503,reliability,RCa,RCanvas,503,"Introducing RHistStatBox for RCanvas; This is special drawable, which I used as playground for new functionality. `RHistStatBox` class is drawable, which hold reference to histogram and can calculate statistic in range, selected in the `RFrame` on the client side. If there are several clients (several web browsers with shown canvas) each client will be able to select zoomed range individually and get right statistic. If necessary, several `RHistStatBox` for different histograms can be shown on the RCanvas - even if only one histogram is displayed. `RHistStatBox` object instance is not send to client as simple `RText` or `RLine`. Instead - only css attributes (fill, line, text colors etc) are send. This is necessary, while otherwise histogram will be send - and it can be huge. . Special `RDrawableRequest` / `RDrawableReply` classes are introduced. They allow to submit any kind of request to selected drawable from the client. Now it is universal method to access C++ functionality from JavaScript. It is replacement to `gROOT->ProcessLine()` which was used up to now. . Dedicated `RStatBoxRequest` class used to get statbox lines every time when zooming is changed. Via `friend class` relation it can access private methods in `RHistStatBox`. This is solution for methods which should remain protected from user. For the future. `RHistStatBox` can be generalized - one can extract `RStatBox` base class and use it to implement statbox for `RGraph`, `RProfile` or any other classes where it make sense. Here is actual screenshot:. ![Canvas](https://user-images.githubusercontent.com/4936580/79573534-181ec500-80bf-11ea-9326-659b06fcbdf2.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5379
https://github.com/root-project/root/pull/5379:968,security,access,access,968,"Introducing RHistStatBox for RCanvas; This is special drawable, which I used as playground for new functionality. `RHistStatBox` class is drawable, which hold reference to histogram and can calculate statistic in range, selected in the `RFrame` on the client side. If there are several clients (several web browsers with shown canvas) each client will be able to select zoomed range individually and get right statistic. If necessary, several `RHistStatBox` for different histograms can be shown on the RCanvas - even if only one histogram is displayed. `RHistStatBox` object instance is not send to client as simple `RText` or `RLine`. Instead - only css attributes (fill, line, text colors etc) are send. This is necessary, while otherwise histogram will be send - and it can be huge. . Special `RDrawableRequest` / `RDrawableReply` classes are introduced. They allow to submit any kind of request to selected drawable from the client. Now it is universal method to access C++ functionality from JavaScript. It is replacement to `gROOT->ProcessLine()` which was used up to now. . Dedicated `RStatBoxRequest` class used to get statbox lines every time when zooming is changed. Via `friend class` relation it can access private methods in `RHistStatBox`. This is solution for methods which should remain protected from user. For the future. `RHistStatBox` can be generalized - one can extract `RStatBox` base class and use it to implement statbox for `RGraph`, `RProfile` or any other classes where it make sense. Here is actual screenshot:. ![Canvas](https://user-images.githubusercontent.com/4936580/79573534-181ec500-80bf-11ea-9326-659b06fcbdf2.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5379
https://github.com/root-project/root/pull/5379:1213,security,access,access,1213,"Introducing RHistStatBox for RCanvas; This is special drawable, which I used as playground for new functionality. `RHistStatBox` class is drawable, which hold reference to histogram and can calculate statistic in range, selected in the `RFrame` on the client side. If there are several clients (several web browsers with shown canvas) each client will be able to select zoomed range individually and get right statistic. If necessary, several `RHistStatBox` for different histograms can be shown on the RCanvas - even if only one histogram is displayed. `RHistStatBox` object instance is not send to client as simple `RText` or `RLine`. Instead - only css attributes (fill, line, text colors etc) are send. This is necessary, while otherwise histogram will be send - and it can be huge. . Special `RDrawableRequest` / `RDrawableReply` classes are introduced. They allow to submit any kind of request to selected drawable from the client. Now it is universal method to access C++ functionality from JavaScript. It is replacement to `gROOT->ProcessLine()` which was used up to now. . Dedicated `RStatBoxRequest` class used to get statbox lines every time when zooming is changed. Via `friend class` relation it can access private methods in `RHistStatBox`. This is solution for methods which should remain protected from user. For the future. `RHistStatBox` can be generalized - one can extract `RStatBox` base class and use it to implement statbox for `RGraph`, `RProfile` or any other classes where it make sense. Here is actual screenshot:. ![Canvas](https://user-images.githubusercontent.com/4936580/79573534-181ec500-80bf-11ea-9326-659b06fcbdf2.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5379
https://github.com/root-project/root/pull/5379:610,testability,simpl,simple,610,"Introducing RHistStatBox for RCanvas; This is special drawable, which I used as playground for new functionality. `RHistStatBox` class is drawable, which hold reference to histogram and can calculate statistic in range, selected in the `RFrame` on the client side. If there are several clients (several web browsers with shown canvas) each client will be able to select zoomed range individually and get right statistic. If necessary, several `RHistStatBox` for different histograms can be shown on the RCanvas - even if only one histogram is displayed. `RHistStatBox` object instance is not send to client as simple `RText` or `RLine`. Instead - only css attributes (fill, line, text colors etc) are send. This is necessary, while otherwise histogram will be send - and it can be huge. . Special `RDrawableRequest` / `RDrawableReply` classes are introduced. They allow to submit any kind of request to selected drawable from the client. Now it is universal method to access C++ functionality from JavaScript. It is replacement to `gROOT->ProcessLine()` which was used up to now. . Dedicated `RStatBoxRequest` class used to get statbox lines every time when zooming is changed. Via `friend class` relation it can access private methods in `RHistStatBox`. This is solution for methods which should remain protected from user. For the future. `RHistStatBox` can be generalized - one can extract `RStatBox` base class and use it to implement statbox for `RGraph`, `RProfile` or any other classes where it make sense. Here is actual screenshot:. ![Canvas](https://user-images.githubusercontent.com/4936580/79573534-181ec500-80bf-11ea-9326-659b06fcbdf2.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5379
https://github.com/root-project/root/pull/5379:610,usability,simpl,simple,610,"Introducing RHistStatBox for RCanvas; This is special drawable, which I used as playground for new functionality. `RHistStatBox` class is drawable, which hold reference to histogram and can calculate statistic in range, selected in the `RFrame` on the client side. If there are several clients (several web browsers with shown canvas) each client will be able to select zoomed range individually and get right statistic. If necessary, several `RHistStatBox` for different histograms can be shown on the RCanvas - even if only one histogram is displayed. `RHistStatBox` object instance is not send to client as simple `RText` or `RLine`. Instead - only css attributes (fill, line, text colors etc) are send. This is necessary, while otherwise histogram will be send - and it can be huge. . Special `RDrawableRequest` / `RDrawableReply` classes are introduced. They allow to submit any kind of request to selected drawable from the client. Now it is universal method to access C++ functionality from JavaScript. It is replacement to `gROOT->ProcessLine()` which was used up to now. . Dedicated `RStatBoxRequest` class used to get statbox lines every time when zooming is changed. Via `friend class` relation it can access private methods in `RHistStatBox`. This is solution for methods which should remain protected from user. For the future. `RHistStatBox` can be generalized - one can extract `RStatBox` base class and use it to implement statbox for `RGraph`, `RProfile` or any other classes where it make sense. Here is actual screenshot:. ![Canvas](https://user-images.githubusercontent.com/4936580/79573534-181ec500-80bf-11ea-9326-659b06fcbdf2.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5379
https://github.com/root-project/root/pull/5379:1319,usability,user,user,1319,"Introducing RHistStatBox for RCanvas; This is special drawable, which I used as playground for new functionality. `RHistStatBox` class is drawable, which hold reference to histogram and can calculate statistic in range, selected in the `RFrame` on the client side. If there are several clients (several web browsers with shown canvas) each client will be able to select zoomed range individually and get right statistic. If necessary, several `RHistStatBox` for different histograms can be shown on the RCanvas - even if only one histogram is displayed. `RHistStatBox` object instance is not send to client as simple `RText` or `RLine`. Instead - only css attributes (fill, line, text colors etc) are send. This is necessary, while otherwise histogram will be send - and it can be huge. . Special `RDrawableRequest` / `RDrawableReply` classes are introduced. They allow to submit any kind of request to selected drawable from the client. Now it is universal method to access C++ functionality from JavaScript. It is replacement to `gROOT->ProcessLine()` which was used up to now. . Dedicated `RStatBoxRequest` class used to get statbox lines every time when zooming is changed. Via `friend class` relation it can access private methods in `RHistStatBox`. This is solution for methods which should remain protected from user. For the future. `RHistStatBox` can be generalized - one can extract `RStatBox` base class and use it to implement statbox for `RGraph`, `RProfile` or any other classes where it make sense. Here is actual screenshot:. ![Canvas](https://user-images.githubusercontent.com/4936580/79573534-181ec500-80bf-11ea-9326-659b06fcbdf2.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5379
https://github.com/root-project/root/pull/5379:1560,usability,user,user-images,1560,"Introducing RHistStatBox for RCanvas; This is special drawable, which I used as playground for new functionality. `RHistStatBox` class is drawable, which hold reference to histogram and can calculate statistic in range, selected in the `RFrame` on the client side. If there are several clients (several web browsers with shown canvas) each client will be able to select zoomed range individually and get right statistic. If necessary, several `RHistStatBox` for different histograms can be shown on the RCanvas - even if only one histogram is displayed. `RHistStatBox` object instance is not send to client as simple `RText` or `RLine`. Instead - only css attributes (fill, line, text colors etc) are send. This is necessary, while otherwise histogram will be send - and it can be huge. . Special `RDrawableRequest` / `RDrawableReply` classes are introduced. They allow to submit any kind of request to selected drawable from the client. Now it is universal method to access C++ functionality from JavaScript. It is replacement to `gROOT->ProcessLine()` which was used up to now. . Dedicated `RStatBoxRequest` class used to get statbox lines every time when zooming is changed. Via `friend class` relation it can access private methods in `RHistStatBox`. This is solution for methods which should remain protected from user. For the future. `RHistStatBox` can be generalized - one can extract `RStatBox` base class and use it to implement statbox for `RGraph`, `RProfile` or any other classes where it make sense. Here is actual screenshot:. ![Canvas](https://user-images.githubusercontent.com/4936580/79573534-181ec500-80bf-11ea-9326-659b06fcbdf2.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5379
https://github.com/root-project/root/pull/5380:64,availability,toler,tolerance,64,Fix the full training recurrent tests in TMVA/DNN/RNN; Fix test tolerance to avoid some failures observed in the last nightly builds . Do not build cudnn full test for simple RNN when cudnn is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5380
https://github.com/root-project/root/pull/5380:88,availability,failur,failures,88,Fix the full training recurrent tests in TMVA/DNN/RNN; Fix test tolerance to avoid some failures observed in the last nightly builds . Do not build cudnn full test for simple RNN when cudnn is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5380
https://github.com/root-project/root/pull/5380:197,availability,avail,available,197,Fix the full training recurrent tests in TMVA/DNN/RNN; Fix test tolerance to avoid some failures observed in the last nightly builds . Do not build cudnn full test for simple RNN when cudnn is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5380
https://github.com/root-project/root/pull/5380:88,deployability,fail,failures,88,Fix the full training recurrent tests in TMVA/DNN/RNN; Fix test tolerance to avoid some failures observed in the last nightly builds . Do not build cudnn full test for simple RNN when cudnn is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5380
https://github.com/root-project/root/pull/5380:97,deployability,observ,observed,97,Fix the full training recurrent tests in TMVA/DNN/RNN; Fix test tolerance to avoid some failures observed in the last nightly builds . Do not build cudnn full test for simple RNN when cudnn is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5380
https://github.com/root-project/root/pull/5380:126,deployability,build,builds,126,Fix the full training recurrent tests in TMVA/DNN/RNN; Fix test tolerance to avoid some failures observed in the last nightly builds . Do not build cudnn full test for simple RNN when cudnn is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5380
https://github.com/root-project/root/pull/5380:142,deployability,build,build,142,Fix the full training recurrent tests in TMVA/DNN/RNN; Fix test tolerance to avoid some failures observed in the last nightly builds . Do not build cudnn full test for simple RNN when cudnn is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5380
https://github.com/root-project/root/pull/5380:88,performance,failur,failures,88,Fix the full training recurrent tests in TMVA/DNN/RNN; Fix test tolerance to avoid some failures observed in the last nightly builds . Do not build cudnn full test for simple RNN when cudnn is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5380
https://github.com/root-project/root/pull/5380:64,reliability,toleran,tolerance,64,Fix the full training recurrent tests in TMVA/DNN/RNN; Fix test tolerance to avoid some failures observed in the last nightly builds . Do not build cudnn full test for simple RNN when cudnn is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5380
https://github.com/root-project/root/pull/5380:88,reliability,fail,failures,88,Fix the full training recurrent tests in TMVA/DNN/RNN; Fix test tolerance to avoid some failures observed in the last nightly builds . Do not build cudnn full test for simple RNN when cudnn is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5380
https://github.com/root-project/root/pull/5380:197,reliability,availab,available,197,Fix the full training recurrent tests in TMVA/DNN/RNN; Fix test tolerance to avoid some failures observed in the last nightly builds . Do not build cudnn full test for simple RNN when cudnn is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5380
https://github.com/root-project/root/pull/5380:32,safety,test,tests,32,Fix the full training recurrent tests in TMVA/DNN/RNN; Fix test tolerance to avoid some failures observed in the last nightly builds . Do not build cudnn full test for simple RNN when cudnn is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5380
https://github.com/root-project/root/pull/5380:59,safety,test,test,59,Fix the full training recurrent tests in TMVA/DNN/RNN; Fix test tolerance to avoid some failures observed in the last nightly builds . Do not build cudnn full test for simple RNN when cudnn is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5380
https://github.com/root-project/root/pull/5380:77,safety,avoid,avoid,77,Fix the full training recurrent tests in TMVA/DNN/RNN; Fix test tolerance to avoid some failures observed in the last nightly builds . Do not build cudnn full test for simple RNN when cudnn is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5380
https://github.com/root-project/root/pull/5380:159,safety,test,test,159,Fix the full training recurrent tests in TMVA/DNN/RNN; Fix test tolerance to avoid some failures observed in the last nightly builds . Do not build cudnn full test for simple RNN when cudnn is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5380
https://github.com/root-project/root/pull/5380:197,safety,avail,available,197,Fix the full training recurrent tests in TMVA/DNN/RNN; Fix test tolerance to avoid some failures observed in the last nightly builds . Do not build cudnn full test for simple RNN when cudnn is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5380
https://github.com/root-project/root/pull/5380:197,security,availab,available,197,Fix the full training recurrent tests in TMVA/DNN/RNN; Fix test tolerance to avoid some failures observed in the last nightly builds . Do not build cudnn full test for simple RNN when cudnn is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5380
https://github.com/root-project/root/pull/5380:32,testability,test,tests,32,Fix the full training recurrent tests in TMVA/DNN/RNN; Fix test tolerance to avoid some failures observed in the last nightly builds . Do not build cudnn full test for simple RNN when cudnn is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5380
https://github.com/root-project/root/pull/5380:59,testability,test,test,59,Fix the full training recurrent tests in TMVA/DNN/RNN; Fix test tolerance to avoid some failures observed in the last nightly builds . Do not build cudnn full test for simple RNN when cudnn is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5380
https://github.com/root-project/root/pull/5380:97,testability,observ,observed,97,Fix the full training recurrent tests in TMVA/DNN/RNN; Fix test tolerance to avoid some failures observed in the last nightly builds . Do not build cudnn full test for simple RNN when cudnn is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5380
https://github.com/root-project/root/pull/5380:159,testability,test,test,159,Fix the full training recurrent tests in TMVA/DNN/RNN; Fix test tolerance to avoid some failures observed in the last nightly builds . Do not build cudnn full test for simple RNN when cudnn is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5380
https://github.com/root-project/root/pull/5380:168,testability,simpl,simple,168,Fix the full training recurrent tests in TMVA/DNN/RNN; Fix test tolerance to avoid some failures observed in the last nightly builds . Do not build cudnn full test for simple RNN when cudnn is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5380
https://github.com/root-project/root/pull/5380:168,usability,simpl,simple,168,Fix the full training recurrent tests in TMVA/DNN/RNN; Fix test tolerance to avoid some failures observed in the last nightly builds . Do not build cudnn full test for simple RNN when cudnn is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5380
https://github.com/root-project/root/pull/5381:133,integrability,filter,filters,133,"[DF] Keep objects used by jitted code alive until jitting time ; RJittedFilter and RJittedCustomColumn objects pertaining to jitted. filters or defines that were registered and then never used could. potentially go out of scope before jitting happened. This is now. prevented by storing a shared_ptr to these objects on the heap, that. jitted code deletes when run. This fixes ROOT-10619.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5381
https://github.com/root-project/root/pull/5381:58,performance,time,time,58,"[DF] Keep objects used by jitted code alive until jitting time ; RJittedFilter and RJittedCustomColumn objects pertaining to jitted. filters or defines that were registered and then never used could. potentially go out of scope before jitting happened. This is now. prevented by storing a shared_ptr to these objects on the heap, that. jitted code deletes when run. This fixes ROOT-10619.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5381
https://github.com/root-project/root/pull/5381:266,safety,prevent,prevented,266,"[DF] Keep objects used by jitted code alive until jitting time ; RJittedFilter and RJittedCustomColumn objects pertaining to jitted. filters or defines that were registered and then never used could. potentially go out of scope before jitting happened. This is now. prevented by storing a shared_ptr to these objects on the heap, that. jitted code deletes when run. This fixes ROOT-10619.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5381
https://github.com/root-project/root/pull/5381:266,security,preven,prevented,266,"[DF] Keep objects used by jitted code alive until jitting time ; RJittedFilter and RJittedCustomColumn objects pertaining to jitted. filters or defines that were registered and then never used could. potentially go out of scope before jitting happened. This is now. prevented by storing a shared_ptr to these objects on the heap, that. jitted code deletes when run. This fixes ROOT-10619.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5381
https://github.com/root-project/root/pull/5383:303,energy efficiency,Draw,Draw,303,"Fix a TMathText issue in batch mode; Fix Jira report [7435]. In batch mode bit map output like png produced wrong TMathText rendering . in some specific case like the following:. ```. {. gROOT->SetBatch(1);. TCanvas *c = new TCanvas(""cname"", ""ctitle"");. TMathText *mt = new TMathText(.4,.5,""TM1"");. mt->Draw(); mt->SetTextColor(kRed);. c->Print(""tinytex.png"");. }. ```. In the file `tinytex.png` the characters T,M and 1 were all at the same place.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5383
https://github.com/root-project/root/pull/5383:25,integrability,batch,batch,25,"Fix a TMathText issue in batch mode; Fix Jira report [7435]. In batch mode bit map output like png produced wrong TMathText rendering . in some specific case like the following:. ```. {. gROOT->SetBatch(1);. TCanvas *c = new TCanvas(""cname"", ""ctitle"");. TMathText *mt = new TMathText(.4,.5,""TM1"");. mt->Draw(); mt->SetTextColor(kRed);. c->Print(""tinytex.png"");. }. ```. In the file `tinytex.png` the characters T,M and 1 were all at the same place.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5383
https://github.com/root-project/root/pull/5383:64,integrability,batch,batch,64,"Fix a TMathText issue in batch mode; Fix Jira report [7435]. In batch mode bit map output like png produced wrong TMathText rendering . in some specific case like the following:. ```. {. gROOT->SetBatch(1);. TCanvas *c = new TCanvas(""cname"", ""ctitle"");. TMathText *mt = new TMathText(.4,.5,""TM1"");. mt->Draw(); mt->SetTextColor(kRed);. c->Print(""tinytex.png"");. }. ```. In the file `tinytex.png` the characters T,M and 1 were all at the same place.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5383
https://github.com/root-project/root/pull/5383:144,interoperability,specif,specific,144,"Fix a TMathText issue in batch mode; Fix Jira report [7435]. In batch mode bit map output like png produced wrong TMathText rendering . in some specific case like the following:. ```. {. gROOT->SetBatch(1);. TCanvas *c = new TCanvas(""cname"", ""ctitle"");. TMathText *mt = new TMathText(.4,.5,""TM1"");. mt->Draw(); mt->SetTextColor(kRed);. c->Print(""tinytex.png"");. }. ```. In the file `tinytex.png` the characters T,M and 1 were all at the same place.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5383
https://github.com/root-project/root/pull/5383:25,performance,batch,batch,25,"Fix a TMathText issue in batch mode; Fix Jira report [7435]. In batch mode bit map output like png produced wrong TMathText rendering . in some specific case like the following:. ```. {. gROOT->SetBatch(1);. TCanvas *c = new TCanvas(""cname"", ""ctitle"");. TMathText *mt = new TMathText(.4,.5,""TM1"");. mt->Draw(); mt->SetTextColor(kRed);. c->Print(""tinytex.png"");. }. ```. In the file `tinytex.png` the characters T,M and 1 were all at the same place.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5383
https://github.com/root-project/root/pull/5383:64,performance,batch,batch,64,"Fix a TMathText issue in batch mode; Fix Jira report [7435]. In batch mode bit map output like png produced wrong TMathText rendering . in some specific case like the following:. ```. {. gROOT->SetBatch(1);. TCanvas *c = new TCanvas(""cname"", ""ctitle"");. TMathText *mt = new TMathText(.4,.5,""TM1"");. mt->Draw(); mt->SetTextColor(kRed);. c->Print(""tinytex.png"");. }. ```. In the file `tinytex.png` the characters T,M and 1 were all at the same place.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5383
https://github.com/root-project/root/pull/5385:35,deployability,modul,module,35,"[cxxmodules] Convert filename to a module name.; This fixes the Module X not found rootcling diagnostic when rootcling -m X.pcm is specified. This PR fixes an issue introduced in 39fe86316f49250664eaaaaece8a3f382912e768. cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5385
https://github.com/root-project/root/pull/5385:64,deployability,Modul,Module,64,"[cxxmodules] Convert filename to a module name.; This fixes the Module X not found rootcling diagnostic when rootcling -m X.pcm is specified. This PR fixes an issue introduced in 39fe86316f49250664eaaaaece8a3f382912e768. cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5385
https://github.com/root-project/root/pull/5385:131,interoperability,specif,specified,131,"[cxxmodules] Convert filename to a module name.; This fixes the Module X not found rootcling diagnostic when rootcling -m X.pcm is specified. This PR fixes an issue introduced in 39fe86316f49250664eaaaaece8a3f382912e768. cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5385
https://github.com/root-project/root/pull/5385:35,modifiability,modul,module,35,"[cxxmodules] Convert filename to a module name.; This fixes the Module X not found rootcling diagnostic when rootcling -m X.pcm is specified. This PR fixes an issue introduced in 39fe86316f49250664eaaaaece8a3f382912e768. cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5385
https://github.com/root-project/root/pull/5385:64,modifiability,Modul,Module,64,"[cxxmodules] Convert filename to a module name.; This fixes the Module X not found rootcling diagnostic when rootcling -m X.pcm is specified. This PR fixes an issue introduced in 39fe86316f49250664eaaaaece8a3f382912e768. cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5385
https://github.com/root-project/root/pull/5385:93,reliability,diagno,diagnostic,93,"[cxxmodules] Convert filename to a module name.; This fixes the Module X not found rootcling diagnostic when rootcling -m X.pcm is specified. This PR fixes an issue introduced in 39fe86316f49250664eaaaaece8a3f382912e768. cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5385
https://github.com/root-project/root/pull/5385:35,safety,modul,module,35,"[cxxmodules] Convert filename to a module name.; This fixes the Module X not found rootcling diagnostic when rootcling -m X.pcm is specified. This PR fixes an issue introduced in 39fe86316f49250664eaaaaece8a3f382912e768. cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5385
https://github.com/root-project/root/pull/5385:64,safety,Modul,Module,64,"[cxxmodules] Convert filename to a module name.; This fixes the Module X not found rootcling diagnostic when rootcling -m X.pcm is specified. This PR fixes an issue introduced in 39fe86316f49250664eaaaaece8a3f382912e768. cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5385
https://github.com/root-project/root/pull/5385:93,testability,diagno,diagnostic,93,"[cxxmodules] Convert filename to a module name.; This fixes the Module X not found rootcling diagnostic when rootcling -m X.pcm is specified. This PR fixes an issue introduced in 39fe86316f49250664eaaaaece8a3f382912e768. cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5385
https://github.com/root-project/root/pull/5386:30,energy efficiency,Core,Core,30,"Remove duplicated includes in Core, IO and Tree classes; Just remove line where same include appears second time. Plus strange tree/tree/inc/TEntryListArray.h file with duplicated content.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5386
https://github.com/root-project/root/pull/5386:108,performance,time,time,108,"Remove duplicated includes in Core, IO and Tree classes; Just remove line where same include appears second time. Plus strange tree/tree/inc/TEntryListArray.h file with duplicated content.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5386
https://github.com/root-project/root/pull/5386:180,performance,content,content,180,"Remove duplicated includes in Core, IO and Tree classes; Just remove line where same include appears second time. Plus strange tree/tree/inc/TEntryListArray.h file with duplicated content.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5386
https://github.com/root-project/root/pull/5387:97,performance,time,time,97,Remove duplicated includes in roofit classes; Just remove line where same include appears second time,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5387
https://github.com/root-project/root/pull/5388:105,performance,time,time,105,Remove duplicated includes in hist/math/tmva classes; Just remove line where same include appears second time,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5388
https://github.com/root-project/root/pull/5389:119,performance,time,time,119,Remove duplicated includes in gui/graf2d/graf3d/geom/proof classes; Just remove line where same include appears second time,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5389
https://github.com/root-project/root/pull/5390:38,availability,error,error,38,"Fix leak shown in ROOT-10696.; In the error code pass of TKey::Read*, the buffer cleanup was not done (it. was suppposed to be done via a goto!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5390
https://github.com/root-project/root/pull/5390:74,integrability,buffer,buffer,74,"Fix leak shown in ROOT-10696.; In the error code pass of TKey::Read*, the buffer cleanup was not done (it. was suppposed to be done via a goto!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5390
https://github.com/root-project/root/pull/5390:38,performance,error,error,38,"Fix leak shown in ROOT-10696.; In the error code pass of TKey::Read*, the buffer cleanup was not done (it. was suppposed to be done via a goto!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5390
https://github.com/root-project/root/pull/5390:38,safety,error,error,38,"Fix leak shown in ROOT-10696.; In the error code pass of TKey::Read*, the buffer cleanup was not done (it. was suppposed to be done via a goto!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5390
https://github.com/root-project/root/pull/5390:38,usability,error,error,38,"Fix leak shown in ROOT-10696.; In the error code pass of TKey::Read*, the buffer cleanup was not done (it. was suppposed to be done via a goto!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5390
https://github.com/root-project/root/pull/5391:40,availability,error,error,40,"ROOT-10696 v2 (memory leak fix); In the error code path of TKey::Read*, the buffer cleanup was not done (it. was supposed to be done via a goto!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5391
https://github.com/root-project/root/pull/5391:76,integrability,buffer,buffer,76,"ROOT-10696 v2 (memory leak fix); In the error code path of TKey::Read*, the buffer cleanup was not done (it. was supposed to be done via a goto!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5391
https://github.com/root-project/root/pull/5391:15,performance,memor,memory,15,"ROOT-10696 v2 (memory leak fix); In the error code path of TKey::Read*, the buffer cleanup was not done (it. was supposed to be done via a goto!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5391
https://github.com/root-project/root/pull/5391:40,performance,error,error,40,"ROOT-10696 v2 (memory leak fix); In the error code path of TKey::Read*, the buffer cleanup was not done (it. was supposed to be done via a goto!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5391
https://github.com/root-project/root/pull/5391:40,safety,error,error,40,"ROOT-10696 v2 (memory leak fix); In the error code path of TKey::Read*, the buffer cleanup was not done (it. was supposed to be done via a goto!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5391
https://github.com/root-project/root/pull/5391:15,usability,memor,memory,15,"ROOT-10696 v2 (memory leak fix); In the error code path of TKey::Read*, the buffer cleanup was not done (it. was supposed to be done via a goto!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5391
https://github.com/root-project/root/pull/5391:40,usability,error,error,40,"ROOT-10696 v2 (memory leak fix); In the error code path of TKey::Read*, the buffer cleanup was not done (it. was supposed to be done via a goto!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5391
https://github.com/root-project/root/pull/5392:53,availability,error,error,53,"[rootcling] Convert diagnostic to a proper rootcling error.; cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5392
https://github.com/root-project/root/pull/5392:53,performance,error,error,53,"[rootcling] Convert diagnostic to a proper rootcling error.; cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5392
https://github.com/root-project/root/pull/5392:20,reliability,diagno,diagnostic,20,"[rootcling] Convert diagnostic to a proper rootcling error.; cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5392
https://github.com/root-project/root/pull/5392:53,safety,error,error,53,"[rootcling] Convert diagnostic to a proper rootcling error.; cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5392
https://github.com/root-project/root/pull/5392:20,testability,diagno,diagnostic,20,"[rootcling] Convert diagnostic to a proper rootcling error.; cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5392
https://github.com/root-project/root/pull/5392:53,usability,error,error,53,"[rootcling] Convert diagnostic to a proper rootcling error.; cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5392
https://github.com/root-project/root/pull/5393:4,usability,support,support,4,Add support for arrow 0.15.0+;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5393
https://github.com/root-project/root/pull/5394:93,deployability,build,build,93,Workaround non official tags; This is actually from @pzhristov and it's needed to be able to build with ALICE patched versions of ROOT which we tag with `<official-root-tag>-alice<X>` where `<X>` is a number. Any better idea?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5394
https://github.com/root-project/root/pull/5394:110,deployability,patch,patched,110,Workaround non official tags; This is actually from @pzhristov and it's needed to be able to build with ALICE patched versions of ROOT which we tag with `<official-root-tag>-alice<X>` where `<X>` is a number. Any better idea?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5394
https://github.com/root-project/root/pull/5394:118,deployability,version,versions,118,Workaround non official tags; This is actually from @pzhristov and it's needed to be able to build with ALICE patched versions of ROOT which we tag with `<official-root-tag>-alice<X>` where `<X>` is a number. Any better idea?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5394
https://github.com/root-project/root/pull/5394:118,integrability,version,versions,118,Workaround non official tags; This is actually from @pzhristov and it's needed to be able to build with ALICE patched versions of ROOT which we tag with `<official-root-tag>-alice<X>` where `<X>` is a number. Any better idea?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5394
https://github.com/root-project/root/pull/5394:118,modifiability,version,versions,118,Workaround non official tags; This is actually from @pzhristov and it's needed to be able to build with ALICE patched versions of ROOT which we tag with `<official-root-tag>-alice<X>` where `<X>` is a number. Any better idea?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5394
https://github.com/root-project/root/pull/5394:110,safety,patch,patched,110,Workaround non official tags; This is actually from @pzhristov and it's needed to be able to build with ALICE patched versions of ROOT which we tag with `<official-root-tag>-alice<X>` where `<X>` is a number. Any better idea?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5394
https://github.com/root-project/root/pull/5394:110,security,patch,patched,110,Workaround non official tags; This is actually from @pzhristov and it's needed to be able to build with ALICE patched versions of ROOT which we tag with `<official-root-tag>-alice<X>` where `<X>` is a number. Any better idea?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5394
https://github.com/root-project/root/pull/5396:50,deployability,version,versions,50,"[CMake] Fix SearchInstalledSoftware for old CMake versions.; In cmake < 3.11, one cannot use `target_include_directories` for. imported targets. Therefore, a workaround explicitly setting the. properties was necessary. The PR CI apparently didn't catch this, since for now it's only failing on ubuntu 18.04.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5396
https://github.com/root-project/root/pull/5396:283,deployability,fail,failing,283,"[CMake] Fix SearchInstalledSoftware for old CMake versions.; In cmake < 3.11, one cannot use `target_include_directories` for. imported targets. Therefore, a workaround explicitly setting the. properties was necessary. The PR CI apparently didn't catch this, since for now it's only failing on ubuntu 18.04.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5396
https://github.com/root-project/root/pull/5396:50,integrability,version,versions,50,"[CMake] Fix SearchInstalledSoftware for old CMake versions.; In cmake < 3.11, one cannot use `target_include_directories` for. imported targets. Therefore, a workaround explicitly setting the. properties was necessary. The PR CI apparently didn't catch this, since for now it's only failing on ubuntu 18.04.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5396
https://github.com/root-project/root/pull/5396:50,modifiability,version,versions,50,"[CMake] Fix SearchInstalledSoftware for old CMake versions.; In cmake < 3.11, one cannot use `target_include_directories` for. imported targets. Therefore, a workaround explicitly setting the. properties was necessary. The PR CI apparently didn't catch this, since for now it's only failing on ubuntu 18.04.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5396
https://github.com/root-project/root/pull/5396:283,reliability,fail,failing,283,"[CMake] Fix SearchInstalledSoftware for old CMake versions.; In cmake < 3.11, one cannot use `target_include_directories` for. imported targets. Therefore, a workaround explicitly setting the. properties was necessary. The PR CI apparently didn't catch this, since for now it's only failing on ubuntu 18.04.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5396
https://github.com/root-project/root/pull/5397:138,integrability,messag,message,138,[RDF][Doc] Return non-zero exit code for df026 ; * Increases the test coverage of interacting with third-party python packages. * Improve message to user if the pandas package is not found,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:138,interoperability,messag,message,138,[RDF][Doc] Return non-zero exit code for df026 ; * Increases the test coverage of interacting with third-party python packages. * Improve message to user if the pandas package is not found,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:118,modifiability,pac,packages,118,[RDF][Doc] Return non-zero exit code for df026 ; * Increases the test coverage of interacting with third-party python packages. * Improve message to user if the pandas package is not found,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:168,modifiability,pac,package,168,[RDF][Doc] Return non-zero exit code for df026 ; * Increases the test coverage of interacting with third-party python packages. * Improve message to user if the pandas package is not found,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:65,safety,test,test,65,[RDF][Doc] Return non-zero exit code for df026 ; * Increases the test coverage of interacting with third-party python packages. * Improve message to user if the pandas package is not found,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:65,testability,test,test,65,[RDF][Doc] Return non-zero exit code for df026 ; * Increases the test coverage of interacting with third-party python packages. * Improve message to user if the pandas package is not found,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:70,testability,coverag,coverage,70,[RDF][Doc] Return non-zero exit code for df026 ; * Increases the test coverage of interacting with third-party python packages. * Improve message to user if the pandas package is not found,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:82,usability,interact,interacting,82,[RDF][Doc] Return non-zero exit code for df026 ; * Increases the test coverage of interacting with third-party python packages. * Improve message to user if the pandas package is not found,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:149,usability,user,user,149,[RDF][Doc] Return non-zero exit code for df026 ; * Increases the test coverage of interacting with third-party python packages. * Improve message to user if the pandas package is not found,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5398:34,deployability,contain,contain,34,[dyld] Ignore ELF libraries which contain no symbols.; In setups where we have debug symbols in a separate library the .gnu.hash section appears invalid. Clients can strip the debug symbols into a separate library by:. objcopy --only-keep-debug libA.so libA.so.dbg. objcopy --strip-debug libA.so. objcopy --add-gnu-debuglink=libA.so.dbg libA.so. This should fix an issue reported by ATLAS when migrating to ROOT v6.20. cc: @krasznaa (I do not seem to find Scott's and Reiner's github handles).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5398
https://github.com/root-project/root/pull/5398:124,security,hash,hash,124,[dyld] Ignore ELF libraries which contain no symbols.; In setups where we have debug symbols in a separate library the .gnu.hash section appears invalid. Clients can strip the debug symbols into a separate library by:. objcopy --only-keep-debug libA.so libA.so.dbg. objcopy --strip-debug libA.so. objcopy --add-gnu-debuglink=libA.so.dbg libA.so. This should fix an issue reported by ATLAS when migrating to ROOT v6.20. cc: @krasznaa (I do not seem to find Scott's and Reiner's github handles).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5398
https://github.com/root-project/root/pull/5399:56,interoperability,bind,bindings,56,"[Old PyROOT] Fix -Wmissing-field-initializers in python bindings for Py3.8/3.9; This PR is based on:. https://github.com/root-project/root/pull/5158. by @ellert but it keeps only the changes for the old PyROOT. As discussed in the PR above, the new warnings in Py3.8/3.9 are already taken care of in experimental PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5399
https://github.com/root-project/root/pull/5399:56,modifiability,bind,bindings,56,"[Old PyROOT] Fix -Wmissing-field-initializers in python bindings for Py3.8/3.9; This PR is based on:. https://github.com/root-project/root/pull/5158. by @ellert but it keeps only the changes for the old PyROOT. As discussed in the PR above, the new warnings in Py3.8/3.9 are already taken care of in experimental PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5399
https://github.com/root-project/root/pull/5402:23,safety,TEST,TEST,23,[WIP] DO NOT MERGE! CI TEST.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5402
https://github.com/root-project/root/pull/5402:23,testability,TEST,TEST,23,[WIP] DO NOT MERGE! CI TEST.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5402
https://github.com/root-project/root/pull/5403:345,availability,servic,services,345,"[webgui] provide fallback solution when chrome not run with files from tmp; On some systems (CentOS 8) latest chrome not allows to run HTML files,. which are situated in /tmp directory. Only if such situation detected,. try to place HTML files into home directory and run headless chrome from such file. Fixes problem like this:. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004,SPEC=cxx17,V=master/2435/testReport/projectroot/runtutorials/tutorial_v7_line_cxx/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5403
https://github.com/root-project/root/pull/5403:345,deployability,servic,services,345,"[webgui] provide fallback solution when chrome not run with files from tmp; On some systems (CentOS 8) latest chrome not allows to run HTML files,. which are situated in /tmp directory. Only if such situation detected,. try to place HTML files into home directory and run headless chrome from such file. Fixes problem like this:. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004,SPEC=cxx17,V=master/2435/testReport/projectroot/runtutorials/tutorial_v7_line_cxx/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5403
https://github.com/root-project/root/pull/5403:345,integrability,servic,services,345,"[webgui] provide fallback solution when chrome not run with files from tmp; On some systems (CentOS 8) latest chrome not allows to run HTML files,. which are situated in /tmp directory. Only if such situation detected,. try to place HTML files into home directory and run headless chrome from such file. Fixes problem like this:. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004,SPEC=cxx17,V=master/2435/testReport/projectroot/runtutorials/tutorial_v7_line_cxx/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5403
https://github.com/root-project/root/pull/5403:345,modifiability,servic,services,345,"[webgui] provide fallback solution when chrome not run with files from tmp; On some systems (CentOS 8) latest chrome not allows to run HTML files,. which are situated in /tmp directory. Only if such situation detected,. try to place HTML files into home directory and run headless chrome from such file. Fixes problem like this:. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004,SPEC=cxx17,V=master/2435/testReport/projectroot/runtutorials/tutorial_v7_line_cxx/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5403
https://github.com/root-project/root/pull/5403:209,safety,detect,detected,209,"[webgui] provide fallback solution when chrome not run with files from tmp; On some systems (CentOS 8) latest chrome not allows to run HTML files,. which are situated in /tmp directory. Only if such situation detected,. try to place HTML files into home directory and run headless chrome from such file. Fixes problem like this:. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004,SPEC=cxx17,V=master/2435/testReport/projectroot/runtutorials/tutorial_v7_line_cxx/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5403
https://github.com/root-project/root/pull/5403:446,safety,test,testReport,446,"[webgui] provide fallback solution when chrome not run with files from tmp; On some systems (CentOS 8) latest chrome not allows to run HTML files,. which are situated in /tmp directory. Only if such situation detected,. try to place HTML files into home directory and run headless chrome from such file. Fixes problem like this:. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004,SPEC=cxx17,V=master/2435/testReport/projectroot/runtutorials/tutorial_v7_line_cxx/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5403
https://github.com/root-project/root/pull/5403:209,security,detect,detected,209,"[webgui] provide fallback solution when chrome not run with files from tmp; On some systems (CentOS 8) latest chrome not allows to run HTML files,. which are situated in /tmp directory. Only if such situation detected,. try to place HTML files into home directory and run headless chrome from such file. Fixes problem like this:. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004,SPEC=cxx17,V=master/2435/testReport/projectroot/runtutorials/tutorial_v7_line_cxx/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5403
https://github.com/root-project/root/pull/5403:446,testability,test,testReport,446,"[webgui] provide fallback solution when chrome not run with files from tmp; On some systems (CentOS 8) latest chrome not allows to run HTML files,. which are situated in /tmp directory. Only if such situation detected,. try to place HTML files into home directory and run headless chrome from such file. Fixes problem like this:. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004,SPEC=cxx17,V=master/2435/testReport/projectroot/runtutorials/tutorial_v7_line_cxx/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5403
https://github.com/root-project/root/pull/5404:24,availability,error,error,24,[rootcling] Fix typo in error message.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5404
https://github.com/root-project/root/pull/5404:30,integrability,messag,message,30,[rootcling] Fix typo in error message.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5404
https://github.com/root-project/root/pull/5404:30,interoperability,messag,message,30,[rootcling] Fix typo in error message.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5404
https://github.com/root-project/root/pull/5404:24,performance,error,error,24,[rootcling] Fix typo in error message.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5404
https://github.com/root-project/root/pull/5404:24,safety,error,error,24,[rootcling] Fix typo in error message.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5404
https://github.com/root-project/root/pull/5404:24,usability,error,error,24,[rootcling] Fix typo in error message.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5404
https://github.com/root-project/root/pull/5405:0,deployability,Updat,Update,0,Update FindArrow.cmake ;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5405
https://github.com/root-project/root/pull/5405:0,safety,Updat,Update,0,Update FindArrow.cmake ;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5405
https://github.com/root-project/root/pull/5405:0,security,Updat,Update,0,Update FindArrow.cmake ;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5405
https://github.com/root-project/root/pull/5406:4,safety,test,tests,4,Fix tests RArrowDS tests;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5406
https://github.com/root-project/root/pull/5406:19,safety,test,tests,19,Fix tests RArrowDS tests;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5406
https://github.com/root-project/root/pull/5406:4,testability,test,tests,4,Fix tests RArrowDS tests;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5406
https://github.com/root-project/root/pull/5406:19,testability,test,tests,19,Fix tests RArrowDS tests;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5406
https://github.com/root-project/root/pull/5407:6,deployability,patch,patches,6,Extra patches used by ALICE - v620 backport.; This is the complete set of patches used by ALICE on top of v6-20-02. AFAICT they are all in master already. Any chance we can get them included in the next v6-20-XX tag?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5407
https://github.com/root-project/root/pull/5407:74,deployability,patch,patches,74,Extra patches used by ALICE - v620 backport.; This is the complete set of patches used by ALICE on top of v6-20-02. AFAICT they are all in master already. Any chance we can get them included in the next v6-20-XX tag?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5407
https://github.com/root-project/root/pull/5407:6,safety,patch,patches,6,Extra patches used by ALICE - v620 backport.; This is the complete set of patches used by ALICE on top of v6-20-02. AFAICT they are all in master already. Any chance we can get them included in the next v6-20-XX tag?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5407
https://github.com/root-project/root/pull/5407:58,safety,compl,complete,58,Extra patches used by ALICE - v620 backport.; This is the complete set of patches used by ALICE on top of v6-20-02. AFAICT they are all in master already. Any chance we can get them included in the next v6-20-XX tag?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5407
https://github.com/root-project/root/pull/5407:74,safety,patch,patches,74,Extra patches used by ALICE - v620 backport.; This is the complete set of patches used by ALICE on top of v6-20-02. AFAICT they are all in master already. Any chance we can get them included in the next v6-20-XX tag?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5407
https://github.com/root-project/root/pull/5407:6,security,patch,patches,6,Extra patches used by ALICE - v620 backport.; This is the complete set of patches used by ALICE on top of v6-20-02. AFAICT they are all in master already. Any chance we can get them included in the next v6-20-XX tag?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5407
https://github.com/root-project/root/pull/5407:58,security,compl,complete,58,Extra patches used by ALICE - v620 backport.; This is the complete set of patches used by ALICE on top of v6-20-02. AFAICT they are all in master already. Any chance we can get them included in the next v6-20-XX tag?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5407
https://github.com/root-project/root/pull/5407:74,security,patch,patches,74,Extra patches used by ALICE - v620 backport.; This is the complete set of patches used by ALICE on top of v6-20-02. AFAICT they are all in master already. Any chance we can get them included in the next v6-20-XX tag?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5407
https://github.com/root-project/root/pull/5408:185,availability,error,error,185,"[Python] Add requirements.txt and test; Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```. 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')). ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:471,availability,Ping,Ping,471,"[Python] Add requirements.txt and test; Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```. 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')). ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:120,deployability,depend,dependencies,120,"[Python] Add requirements.txt and test; Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```. 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')). ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:145,deployability,version,version,145,"[Python] Add requirements.txt and test; Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```. 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')). ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:200,deployability,depend,dependency,200,"[Python] Add requirements.txt and test; Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```. 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')). ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:303,deployability,Version,VersionConflict,303,"[Python] Add requirements.txt and test; Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```. 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')). ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:120,integrability,depend,dependencies,120,"[Python] Add requirements.txt and test; Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```. 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')). ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:145,integrability,version,version,145,"[Python] Add requirements.txt and test; Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```. 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')). ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:200,integrability,depend,dependency,200,"[Python] Add requirements.txt and test; Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```. 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')). ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:234,integrability,Sub,SubTest,234,"[Python] Add requirements.txt and test; Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```. 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')). ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:303,integrability,Version,VersionConflict,303,"[Python] Add requirements.txt and test; Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```. 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')). ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:120,modifiability,depend,dependencies,120,"[Python] Add requirements.txt and test; Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```. 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')). ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:145,modifiability,version,version,145,"[Python] Add requirements.txt and test; Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```. 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')). ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:200,modifiability,depend,dependency,200,"[Python] Add requirements.txt and test; Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```. 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')). ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:303,modifiability,Version,VersionConflict,303,"[Python] Add requirements.txt and test; Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```. 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')). ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:374,modifiability,pac,packages,374,"[Python] Add requirements.txt and test; Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```. 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')). ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:185,performance,error,error,185,"[Python] Add requirements.txt and test; Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```. 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')). ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:34,safety,test,test,34,"[Python] Add requirements.txt and test; Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```. 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')). ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:102,safety,test,test,102,"[Python] Add requirements.txt and test; Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```. 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')). ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:120,safety,depend,dependencies,120,"[Python] Add requirements.txt and test; Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```. 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')). ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:170,safety,test,test,170,"[Python] Add requirements.txt and test; Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```. 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')). ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:185,safety,error,error,185,"[Python] Add requirements.txt and test; Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```. 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')). ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:200,safety,depend,dependency,200,"[Python] Add requirements.txt and test; Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```. 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')). ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:253,safety,except,exception,253,"[Python] Add requirements.txt and test; Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```. 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')). ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:34,testability,test,test,34,"[Python] Add requirements.txt and test; Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```. 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')). ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:102,testability,test,test,102,"[Python] Add requirements.txt and test; Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```. 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')). ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:120,testability,depend,dependencies,120,"[Python] Add requirements.txt and test; Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```. 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')). ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:170,testability,test,test,170,"[Python] Add requirements.txt and test; Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```. 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')). ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:200,testability,depend,dependency,200,"[Python] Add requirements.txt and test; Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```. 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')). ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:185,usability,error,error,185,"[Python] Add requirements.txt and test; Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```. 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')). ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5409:222,deployability,version,versions,222,"Resolve ROOT-10108 and ROOT-10156 ; Cleanup TEveMagField and REveMagField in response to ROOT-10108. - TEveMagField - clarify code, in-code comments and class documentation. for TEveMagField. - REveMagField - remove float versions of GetField() and clarify code. Remove notice about non-standard magnetic field direction. - REveTrackPropagator - invert sense of magnetic field so it is in line. with standard definition. - Make corresponding changes in eve and eve-7 tutorials. Commits on Apr 21, 2020. ￼Make changes proposed in ROOT-10156. - TEveTrackPropagator::IntersectPlane() remove assumption that B-field is parallel to z. - TEveTrackPropagator::HelixIntersectPlane() make calculation of intersect point. more precise by using interpolation between the last two points in the approach sequence.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5409
https://github.com/root-project/root/pull/5409:222,integrability,version,versions,222,"Resolve ROOT-10108 and ROOT-10156 ; Cleanup TEveMagField and REveMagField in response to ROOT-10108. - TEveMagField - clarify code, in-code comments and class documentation. for TEveMagField. - REveMagField - remove float versions of GetField() and clarify code. Remove notice about non-standard magnetic field direction. - REveTrackPropagator - invert sense of magnetic field so it is in line. with standard definition. - Make corresponding changes in eve and eve-7 tutorials. Commits on Apr 21, 2020. ￼Make changes proposed in ROOT-10156. - TEveTrackPropagator::IntersectPlane() remove assumption that B-field is parallel to z. - TEveTrackPropagator::HelixIntersectPlane() make calculation of intersect point. more precise by using interpolation between the last two points in the approach sequence.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5409
https://github.com/root-project/root/pull/5409:287,interoperability,standard,standard,287,"Resolve ROOT-10108 and ROOT-10156 ; Cleanup TEveMagField and REveMagField in response to ROOT-10108. - TEveMagField - clarify code, in-code comments and class documentation. for TEveMagField. - REveMagField - remove float versions of GetField() and clarify code. Remove notice about non-standard magnetic field direction. - REveTrackPropagator - invert sense of magnetic field so it is in line. with standard definition. - Make corresponding changes in eve and eve-7 tutorials. Commits on Apr 21, 2020. ￼Make changes proposed in ROOT-10156. - TEveTrackPropagator::IntersectPlane() remove assumption that B-field is parallel to z. - TEveTrackPropagator::HelixIntersectPlane() make calculation of intersect point. more precise by using interpolation between the last two points in the approach sequence.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5409
https://github.com/root-project/root/pull/5409:400,interoperability,standard,standard,400,"Resolve ROOT-10108 and ROOT-10156 ; Cleanup TEveMagField and REveMagField in response to ROOT-10108. - TEveMagField - clarify code, in-code comments and class documentation. for TEveMagField. - REveMagField - remove float versions of GetField() and clarify code. Remove notice about non-standard magnetic field direction. - REveTrackPropagator - invert sense of magnetic field so it is in line. with standard definition. - Make corresponding changes in eve and eve-7 tutorials. Commits on Apr 21, 2020. ￼Make changes proposed in ROOT-10156. - TEveTrackPropagator::IntersectPlane() remove assumption that B-field is parallel to z. - TEveTrackPropagator::HelixIntersectPlane() make calculation of intersect point. more precise by using interpolation between the last two points in the approach sequence.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5409
https://github.com/root-project/root/pull/5409:222,modifiability,version,versions,222,"Resolve ROOT-10108 and ROOT-10156 ; Cleanup TEveMagField and REveMagField in response to ROOT-10108. - TEveMagField - clarify code, in-code comments and class documentation. for TEveMagField. - REveMagField - remove float versions of GetField() and clarify code. Remove notice about non-standard magnetic field direction. - REveTrackPropagator - invert sense of magnetic field so it is in line. with standard definition. - Make corresponding changes in eve and eve-7 tutorials. Commits on Apr 21, 2020. ￼Make changes proposed in ROOT-10156. - TEveTrackPropagator::IntersectPlane() remove assumption that B-field is parallel to z. - TEveTrackPropagator::HelixIntersectPlane() make calculation of intersect point. more precise by using interpolation between the last two points in the approach sequence.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5409
https://github.com/root-project/root/pull/5409:615,performance,parallel,parallel,615,"Resolve ROOT-10108 and ROOT-10156 ; Cleanup TEveMagField and REveMagField in response to ROOT-10108. - TEveMagField - clarify code, in-code comments and class documentation. for TEveMagField. - REveMagField - remove float versions of GetField() and clarify code. Remove notice about non-standard magnetic field direction. - REveTrackPropagator - invert sense of magnetic field so it is in line. with standard definition. - Make corresponding changes in eve and eve-7 tutorials. Commits on Apr 21, 2020. ￼Make changes proposed in ROOT-10156. - TEveTrackPropagator::IntersectPlane() remove assumption that B-field is parallel to z. - TEveTrackPropagator::HelixIntersectPlane() make calculation of intersect point. more precise by using interpolation between the last two points in the approach sequence.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5409
https://github.com/root-project/root/pull/5409:159,usability,document,documentation,159,"Resolve ROOT-10108 and ROOT-10156 ; Cleanup TEveMagField and REveMagField in response to ROOT-10108. - TEveMagField - clarify code, in-code comments and class documentation. for TEveMagField. - REveMagField - remove float versions of GetField() and clarify code. Remove notice about non-standard magnetic field direction. - REveTrackPropagator - invert sense of magnetic field so it is in line. with standard definition. - Make corresponding changes in eve and eve-7 tutorials. Commits on Apr 21, 2020. ￼Make changes proposed in ROOT-10156. - TEveTrackPropagator::IntersectPlane() remove assumption that B-field is parallel to z. - TEveTrackPropagator::HelixIntersectPlane() make calculation of intersect point. more precise by using interpolation between the last two points in the approach sequence.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5409
https://github.com/root-project/root/pull/5412:88,integrability,event,eventually,88,"[Math] Fix bug in TFoam.; [ROOT-10277] When creating a lot of datasets in RooFit, TFoam eventually. crashed, since it was using a TRefArray, which does some global UID. magic that overflows. Replacing the TRefArray by a simple vector of. indices fixes that. This is possible, since the TRefArray only points to active elements in. another collection, so simply storing the index in that collection is. sufficient. A ROOT-6.20 TFoam was created on lxplus, and written to a file. Reading. this file, and generating the 10 next random numbers is tested now. @pcanal . Please check the schema evolution for me. Is it correct to ""read"" an array of pointers like this? ```. TFoamCell **fCells;. fCells = onfile.fCells;. ```. It seems to work, but I'm unsure if that's just by luck (e.g. since the file is still open).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5412
https://github.com/root-project/root/pull/5412:582,integrability,schema,schema,582,"[Math] Fix bug in TFoam.; [ROOT-10277] When creating a lot of datasets in RooFit, TFoam eventually. crashed, since it was using a TRefArray, which does some global UID. magic that overflows. Replacing the TRefArray by a simple vector of. indices fixes that. This is possible, since the TRefArray only points to active elements in. another collection, so simply storing the index in that collection is. sufficient. A ROOT-6.20 TFoam was created on lxplus, and written to a file. Reading. this file, and generating the 10 next random numbers is tested now. @pcanal . Please check the schema evolution for me. Is it correct to ""read"" an array of pointers like this? ```. TFoamCell **fCells;. fCells = onfile.fCells;. ```. It seems to work, but I'm unsure if that's just by luck (e.g. since the file is still open).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5412
https://github.com/root-project/root/pull/5412:147,reliability,doe,does,147,"[Math] Fix bug in TFoam.; [ROOT-10277] When creating a lot of datasets in RooFit, TFoam eventually. crashed, since it was using a TRefArray, which does some global UID. magic that overflows. Replacing the TRefArray by a simple vector of. indices fixes that. This is possible, since the TRefArray only points to active elements in. another collection, so simply storing the index in that collection is. sufficient. A ROOT-6.20 TFoam was created on lxplus, and written to a file. Reading. this file, and generating the 10 next random numbers is tested now. @pcanal . Please check the schema evolution for me. Is it correct to ""read"" an array of pointers like this? ```. TFoamCell **fCells;. fCells = onfile.fCells;. ```. It seems to work, but I'm unsure if that's just by luck (e.g. since the file is still open).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5412
https://github.com/root-project/root/pull/5412:543,safety,test,tested,543,"[Math] Fix bug in TFoam.; [ROOT-10277] When creating a lot of datasets in RooFit, TFoam eventually. crashed, since it was using a TRefArray, which does some global UID. magic that overflows. Replacing the TRefArray by a simple vector of. indices fixes that. This is possible, since the TRefArray only points to active elements in. another collection, so simply storing the index in that collection is. sufficient. A ROOT-6.20 TFoam was created on lxplus, and written to a file. Reading. this file, and generating the 10 next random numbers is tested now. @pcanal . Please check the schema evolution for me. Is it correct to ""read"" an array of pointers like this? ```. TFoamCell **fCells;. fCells = onfile.fCells;. ```. It seems to work, but I'm unsure if that's just by luck (e.g. since the file is still open).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5412
https://github.com/root-project/root/pull/5412:220,testability,simpl,simple,220,"[Math] Fix bug in TFoam.; [ROOT-10277] When creating a lot of datasets in RooFit, TFoam eventually. crashed, since it was using a TRefArray, which does some global UID. magic that overflows. Replacing the TRefArray by a simple vector of. indices fixes that. This is possible, since the TRefArray only points to active elements in. another collection, so simply storing the index in that collection is. sufficient. A ROOT-6.20 TFoam was created on lxplus, and written to a file. Reading. this file, and generating the 10 next random numbers is tested now. @pcanal . Please check the schema evolution for me. Is it correct to ""read"" an array of pointers like this? ```. TFoamCell **fCells;. fCells = onfile.fCells;. ```. It seems to work, but I'm unsure if that's just by luck (e.g. since the file is still open).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5412
https://github.com/root-project/root/pull/5412:354,testability,simpl,simply,354,"[Math] Fix bug in TFoam.; [ROOT-10277] When creating a lot of datasets in RooFit, TFoam eventually. crashed, since it was using a TRefArray, which does some global UID. magic that overflows. Replacing the TRefArray by a simple vector of. indices fixes that. This is possible, since the TRefArray only points to active elements in. another collection, so simply storing the index in that collection is. sufficient. A ROOT-6.20 TFoam was created on lxplus, and written to a file. Reading. this file, and generating the 10 next random numbers is tested now. @pcanal . Please check the schema evolution for me. Is it correct to ""read"" an array of pointers like this? ```. TFoamCell **fCells;. fCells = onfile.fCells;. ```. It seems to work, but I'm unsure if that's just by luck (e.g. since the file is still open).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5412
https://github.com/root-project/root/pull/5412:543,testability,test,tested,543,"[Math] Fix bug in TFoam.; [ROOT-10277] When creating a lot of datasets in RooFit, TFoam eventually. crashed, since it was using a TRefArray, which does some global UID. magic that overflows. Replacing the TRefArray by a simple vector of. indices fixes that. This is possible, since the TRefArray only points to active elements in. another collection, so simply storing the index in that collection is. sufficient. A ROOT-6.20 TFoam was created on lxplus, and written to a file. Reading. this file, and generating the 10 next random numbers is tested now. @pcanal . Please check the schema evolution for me. Is it correct to ""read"" an array of pointers like this? ```. TFoamCell **fCells;. fCells = onfile.fCells;. ```. It seems to work, but I'm unsure if that's just by luck (e.g. since the file is still open).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5412
https://github.com/root-project/root/pull/5412:164,usability,UI,UID,164,"[Math] Fix bug in TFoam.; [ROOT-10277] When creating a lot of datasets in RooFit, TFoam eventually. crashed, since it was using a TRefArray, which does some global UID. magic that overflows. Replacing the TRefArray by a simple vector of. indices fixes that. This is possible, since the TRefArray only points to active elements in. another collection, so simply storing the index in that collection is. sufficient. A ROOT-6.20 TFoam was created on lxplus, and written to a file. Reading. this file, and generating the 10 next random numbers is tested now. @pcanal . Please check the schema evolution for me. Is it correct to ""read"" an array of pointers like this? ```. TFoamCell **fCells;. fCells = onfile.fCells;. ```. It seems to work, but I'm unsure if that's just by luck (e.g. since the file is still open).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5412
https://github.com/root-project/root/pull/5412:220,usability,simpl,simple,220,"[Math] Fix bug in TFoam.; [ROOT-10277] When creating a lot of datasets in RooFit, TFoam eventually. crashed, since it was using a TRefArray, which does some global UID. magic that overflows. Replacing the TRefArray by a simple vector of. indices fixes that. This is possible, since the TRefArray only points to active elements in. another collection, so simply storing the index in that collection is. sufficient. A ROOT-6.20 TFoam was created on lxplus, and written to a file. Reading. this file, and generating the 10 next random numbers is tested now. @pcanal . Please check the schema evolution for me. Is it correct to ""read"" an array of pointers like this? ```. TFoamCell **fCells;. fCells = onfile.fCells;. ```. It seems to work, but I'm unsure if that's just by luck (e.g. since the file is still open).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5412
https://github.com/root-project/root/pull/5412:354,usability,simpl,simply,354,"[Math] Fix bug in TFoam.; [ROOT-10277] When creating a lot of datasets in RooFit, TFoam eventually. crashed, since it was using a TRefArray, which does some global UID. magic that overflows. Replacing the TRefArray by a simple vector of. indices fixes that. This is possible, since the TRefArray only points to active elements in. another collection, so simply storing the index in that collection is. sufficient. A ROOT-6.20 TFoam was created on lxplus, and written to a file. Reading. this file, and generating the 10 next random numbers is tested now. @pcanal . Please check the schema evolution for me. Is it correct to ""read"" an array of pointers like this? ```. TFoamCell **fCells;. fCells = onfile.fCells;. ```. It seems to work, but I'm unsure if that's just by luck (e.g. since the file is still open).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5412
https://github.com/root-project/root/pull/5413:9,safety,valid,validity,9,"[RF] Add validity checks for RooFormula.; Since TFormula accepts seriously broken formulae, ""x+t"" is, for example,. interpreted as a four-dimensional formula that can be evaluated. using Eval(x=2), using undefined values for {y,z,t}, RooFit needs to do. some safety checks. This formula would otherwise be valid in RooFit:. RooFormula form(""form"", ""x<y"", x);. That's an aftermath to #5360, where Enrico correctly raised that point that only writing a warning in the documentation will not help most users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5413
https://github.com/root-project/root/pull/5413:259,safety,safe,safety,259,"[RF] Add validity checks for RooFormula.; Since TFormula accepts seriously broken formulae, ""x+t"" is, for example,. interpreted as a four-dimensional formula that can be evaluated. using Eval(x=2), using undefined values for {y,z,t}, RooFit needs to do. some safety checks. This formula would otherwise be valid in RooFit:. RooFormula form(""form"", ""x<y"", x);. That's an aftermath to #5360, where Enrico correctly raised that point that only writing a warning in the documentation will not help most users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5413
https://github.com/root-project/root/pull/5413:306,safety,valid,valid,306,"[RF] Add validity checks for RooFormula.; Since TFormula accepts seriously broken formulae, ""x+t"" is, for example,. interpreted as a four-dimensional formula that can be evaluated. using Eval(x=2), using undefined values for {y,z,t}, RooFit needs to do. some safety checks. This formula would otherwise be valid in RooFit:. RooFormula form(""form"", ""x<y"", x);. That's an aftermath to #5360, where Enrico correctly raised that point that only writing a warning in the documentation will not help most users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5413
https://github.com/root-project/root/pull/5413:466,usability,document,documentation,466,"[RF] Add validity checks for RooFormula.; Since TFormula accepts seriously broken formulae, ""x+t"" is, for example,. interpreted as a four-dimensional formula that can be evaluated. using Eval(x=2), using undefined values for {y,z,t}, RooFit needs to do. some safety checks. This formula would otherwise be valid in RooFit:. RooFormula form(""form"", ""x<y"", x);. That's an aftermath to #5360, where Enrico correctly raised that point that only writing a warning in the documentation will not help most users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5413
https://github.com/root-project/root/pull/5413:489,usability,help,help,489,"[RF] Add validity checks for RooFormula.; Since TFormula accepts seriously broken formulae, ""x+t"" is, for example,. interpreted as a four-dimensional formula that can be evaluated. using Eval(x=2), using undefined values for {y,z,t}, RooFit needs to do. some safety checks. This formula would otherwise be valid in RooFit:. RooFormula form(""form"", ""x<y"", x);. That's an aftermath to #5360, where Enrico correctly raised that point that only writing a warning in the documentation will not help most users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5413
https://github.com/root-project/root/pull/5413:499,usability,user,users,499,"[RF] Add validity checks for RooFormula.; Since TFormula accepts seriously broken formulae, ""x+t"" is, for example,. interpreted as a four-dimensional formula that can be evaluated. using Eval(x=2), using undefined values for {y,z,t}, RooFit needs to do. some safety checks. This formula would otherwise be valid in RooFit:. RooFormula form(""form"", ""x<y"", x);. That's an aftermath to #5360, where Enrico correctly raised that point that only writing a warning in the documentation will not help most users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5413
https://github.com/root-project/root/pull/5414:67,availability,error,error,67,Fix detection of Python3 on Windows; This should fix the following error on Windows:. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1518 (message):. PyROOT: Python development package not found and pyroot component required. (python executable: C:/Python38-32/python.exe),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5414
https://github.com/root-project/root/pull/5414:92,availability,Error,Error,92,Fix detection of Python3 on Windows; This should fix the following error on Windows:. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1518 (message):. PyROOT: Python development package not found and pyroot component required. (python executable: C:/Python38-32/python.exe),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5414
https://github.com/root-project/root/pull/5414:107,deployability,modul,modules,107,Fix detection of Python3 on Windows; This should fix the following error on Windows:. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1518 (message):. PyROOT: Python development package not found and pyroot component required. (python executable: C:/Python38-32/python.exe),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5414
https://github.com/root-project/root/pull/5414:151,integrability,messag,message,151,Fix detection of Python3 on Windows; This should fix the following error on Windows:. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1518 (message):. PyROOT: Python development package not found and pyroot component required. (python executable: C:/Python38-32/python.exe),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5414
https://github.com/root-project/root/pull/5414:218,integrability,compon,component,218,Fix detection of Python3 on Windows; This should fix the following error on Windows:. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1518 (message):. PyROOT: Python development package not found and pyroot component required. (python executable: C:/Python38-32/python.exe),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5414
https://github.com/root-project/root/pull/5414:151,interoperability,messag,message,151,Fix detection of Python3 on Windows; This should fix the following error on Windows:. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1518 (message):. PyROOT: Python development package not found and pyroot component required. (python executable: C:/Python38-32/python.exe),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5414
https://github.com/root-project/root/pull/5414:218,interoperability,compon,component,218,Fix detection of Python3 on Windows; This should fix the following error on Windows:. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1518 (message):. PyROOT: Python development package not found and pyroot component required. (python executable: C:/Python38-32/python.exe),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5414
https://github.com/root-project/root/pull/5414:107,modifiability,modul,modules,107,Fix detection of Python3 on Windows; This should fix the following error on Windows:. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1518 (message):. PyROOT: Python development package not found and pyroot component required. (python executable: C:/Python38-32/python.exe),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5414
https://github.com/root-project/root/pull/5414:189,modifiability,pac,package,189,Fix detection of Python3 on Windows; This should fix the following error on Windows:. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1518 (message):. PyROOT: Python development package not found and pyroot component required. (python executable: C:/Python38-32/python.exe),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5414
https://github.com/root-project/root/pull/5414:218,modifiability,compon,component,218,Fix detection of Python3 on Windows; This should fix the following error on Windows:. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1518 (message):. PyROOT: Python development package not found and pyroot component required. (python executable: C:/Python38-32/python.exe),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5414
https://github.com/root-project/root/pull/5414:67,performance,error,error,67,Fix detection of Python3 on Windows; This should fix the following error on Windows:. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1518 (message):. PyROOT: Python development package not found and pyroot component required. (python executable: C:/Python38-32/python.exe),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5414
https://github.com/root-project/root/pull/5414:92,performance,Error,Error,92,Fix detection of Python3 on Windows; This should fix the following error on Windows:. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1518 (message):. PyROOT: Python development package not found and pyroot component required. (python executable: C:/Python38-32/python.exe),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5414
https://github.com/root-project/root/pull/5414:4,safety,detect,detection,4,Fix detection of Python3 on Windows; This should fix the following error on Windows:. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1518 (message):. PyROOT: Python development package not found and pyroot component required. (python executable: C:/Python38-32/python.exe),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5414
https://github.com/root-project/root/pull/5414:67,safety,error,error,67,Fix detection of Python3 on Windows; This should fix the following error on Windows:. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1518 (message):. PyROOT: Python development package not found and pyroot component required. (python executable: C:/Python38-32/python.exe),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5414
https://github.com/root-project/root/pull/5414:92,safety,Error,Error,92,Fix detection of Python3 on Windows; This should fix the following error on Windows:. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1518 (message):. PyROOT: Python development package not found and pyroot component required. (python executable: C:/Python38-32/python.exe),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5414
https://github.com/root-project/root/pull/5414:107,safety,modul,modules,107,Fix detection of Python3 on Windows; This should fix the following error on Windows:. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1518 (message):. PyROOT: Python development package not found and pyroot component required. (python executable: C:/Python38-32/python.exe),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5414
https://github.com/root-project/root/pull/5414:4,security,detect,detection,4,Fix detection of Python3 on Windows; This should fix the following error on Windows:. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1518 (message):. PyROOT: Python development package not found and pyroot component required. (python executable: C:/Python38-32/python.exe),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5414
https://github.com/root-project/root/pull/5414:67,usability,error,error,67,Fix detection of Python3 on Windows; This should fix the following error on Windows:. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1518 (message):. PyROOT: Python development package not found and pyroot component required. (python executable: C:/Python38-32/python.exe),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5414
https://github.com/root-project/root/pull/5414:92,usability,Error,Error,92,Fix detection of Python3 on Windows; This should fix the following error on Windows:. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1518 (message):. PyROOT: Python development package not found and pyroot component required. (python executable: C:/Python38-32/python.exe),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5414
https://github.com/root-project/root/pull/5416:102,availability,error,error-when-compiling-macro-,102,[cmake ] Fix Pythia8 discovery process; Following problems with Pythia8: https://root-forum.cern.ch/t/error-when-compiling-macro-pythia8-analysis-h-file-not-found/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5416
https://github.com/root-project/root/pull/5416:21,integrability,discover,discovery,21,[cmake ] Fix Pythia8 discovery process; Following problems with Pythia8: https://root-forum.cern.ch/t/error-when-compiling-macro-pythia8-analysis-h-file-not-found/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5416
https://github.com/root-project/root/pull/5416:21,interoperability,discover,discovery,21,[cmake ] Fix Pythia8 discovery process; Following problems with Pythia8: https://root-forum.cern.ch/t/error-when-compiling-macro-pythia8-analysis-h-file-not-found/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5416
https://github.com/root-project/root/pull/5416:102,performance,error,error-when-compiling-macro-,102,[cmake ] Fix Pythia8 discovery process; Following problems with Pythia8: https://root-forum.cern.ch/t/error-when-compiling-macro-pythia8-analysis-h-file-not-found/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5416
https://github.com/root-project/root/pull/5416:102,safety,error,error-when-compiling-macro-,102,[cmake ] Fix Pythia8 discovery process; Following problems with Pythia8: https://root-forum.cern.ch/t/error-when-compiling-macro-pythia8-analysis-h-file-not-found/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5416
https://github.com/root-project/root/pull/5416:21,usability,discov,discovery,21,[cmake ] Fix Pythia8 discovery process; Following problems with Pythia8: https://root-forum.cern.ch/t/error-when-compiling-macro-pythia8-analysis-h-file-not-found/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5416
https://github.com/root-project/root/pull/5416:102,usability,error,error-when-compiling-macro-,102,[cmake ] Fix Pythia8 discovery process; Following problems with Pythia8: https://root-forum.cern.ch/t/error-when-compiling-macro-pythia8-analysis-h-file-not-found/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5416
https://github.com/root-project/root/pull/5417:211,availability,mask,mask,211,Remove math/minuit2/.gitignore [skip-ci]; Remove a .gitignore file in minuit2 which can cause the remaining of duplicate files in local repo after having build a standalone minuit2 tarball. The file was used to mask files which are copied inside the minuit2 source directory when building the standalone distribution. . These files should be deleted after building the standalone distribution by a `make purge` command. . Update the documentation of building minui2 tarballs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5417
https://github.com/root-project/root/pull/5417:154,deployability,build,build,154,Remove math/minuit2/.gitignore [skip-ci]; Remove a .gitignore file in minuit2 which can cause the remaining of duplicate files in local repo after having build a standalone minuit2 tarball. The file was used to mask files which are copied inside the minuit2 source directory when building the standalone distribution. . These files should be deleted after building the standalone distribution by a `make purge` command. . Update the documentation of building minui2 tarballs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5417
https://github.com/root-project/root/pull/5417:280,deployability,build,building,280,Remove math/minuit2/.gitignore [skip-ci]; Remove a .gitignore file in minuit2 which can cause the remaining of duplicate files in local repo after having build a standalone minuit2 tarball. The file was used to mask files which are copied inside the minuit2 source directory when building the standalone distribution. . These files should be deleted after building the standalone distribution by a `make purge` command. . Update the documentation of building minui2 tarballs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5417
https://github.com/root-project/root/pull/5417:356,deployability,build,building,356,Remove math/minuit2/.gitignore [skip-ci]; Remove a .gitignore file in minuit2 which can cause the remaining of duplicate files in local repo after having build a standalone minuit2 tarball. The file was used to mask files which are copied inside the minuit2 source directory when building the standalone distribution. . These files should be deleted after building the standalone distribution by a `make purge` command. . Update the documentation of building minui2 tarballs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5417
https://github.com/root-project/root/pull/5417:422,deployability,Updat,Update,422,Remove math/minuit2/.gitignore [skip-ci]; Remove a .gitignore file in minuit2 which can cause the remaining of duplicate files in local repo after having build a standalone minuit2 tarball. The file was used to mask files which are copied inside the minuit2 source directory when building the standalone distribution. . These files should be deleted after building the standalone distribution by a `make purge` command. . Update the documentation of building minui2 tarballs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5417
https://github.com/root-project/root/pull/5417:450,deployability,build,building,450,Remove math/minuit2/.gitignore [skip-ci]; Remove a .gitignore file in minuit2 which can cause the remaining of duplicate files in local repo after having build a standalone minuit2 tarball. The file was used to mask files which are copied inside the minuit2 source directory when building the standalone distribution. . These files should be deleted after building the standalone distribution by a `make purge` command. . Update the documentation of building minui2 tarballs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5417
https://github.com/root-project/root/pull/5417:304,interoperability,distribut,distribution,304,Remove math/minuit2/.gitignore [skip-ci]; Remove a .gitignore file in minuit2 which can cause the remaining of duplicate files in local repo after having build a standalone minuit2 tarball. The file was used to mask files which are copied inside the minuit2 source directory when building the standalone distribution. . These files should be deleted after building the standalone distribution by a `make purge` command. . Update the documentation of building minui2 tarballs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5417
https://github.com/root-project/root/pull/5417:380,interoperability,distribut,distribution,380,Remove math/minuit2/.gitignore [skip-ci]; Remove a .gitignore file in minuit2 which can cause the remaining of duplicate files in local repo after having build a standalone minuit2 tarball. The file was used to mask files which are copied inside the minuit2 source directory when building the standalone distribution. . These files should be deleted after building the standalone distribution by a `make purge` command. . Update the documentation of building minui2 tarballs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5417
https://github.com/root-project/root/pull/5417:422,safety,Updat,Update,422,Remove math/minuit2/.gitignore [skip-ci]; Remove a .gitignore file in minuit2 which can cause the remaining of duplicate files in local repo after having build a standalone minuit2 tarball. The file was used to mask files which are copied inside the minuit2 source directory when building the standalone distribution. . These files should be deleted after building the standalone distribution by a `make purge` command. . Update the documentation of building minui2 tarballs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5417
https://github.com/root-project/root/pull/5417:422,security,Updat,Update,422,Remove math/minuit2/.gitignore [skip-ci]; Remove a .gitignore file in minuit2 which can cause the remaining of duplicate files in local repo after having build a standalone minuit2 tarball. The file was used to mask files which are copied inside the minuit2 source directory when building the standalone distribution. . These files should be deleted after building the standalone distribution by a `make purge` command. . Update the documentation of building minui2 tarballs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5417
https://github.com/root-project/root/pull/5417:411,usability,command,command,411,Remove math/minuit2/.gitignore [skip-ci]; Remove a .gitignore file in minuit2 which can cause the remaining of duplicate files in local repo after having build a standalone minuit2 tarball. The file was used to mask files which are copied inside the minuit2 source directory when building the standalone distribution. . These files should be deleted after building the standalone distribution by a `make purge` command. . Update the documentation of building minui2 tarballs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5417
https://github.com/root-project/root/pull/5417:433,usability,document,documentation,433,Remove math/minuit2/.gitignore [skip-ci]; Remove a .gitignore file in minuit2 which can cause the remaining of duplicate files in local repo after having build a standalone minuit2 tarball. The file was used to mask files which are copied inside the minuit2 source directory when building the standalone distribution. . These files should be deleted after building the standalone distribution by a `make purge` command. . Update the documentation of building minui2 tarballs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5417
https://github.com/root-project/root/pull/5418:4,deployability,depend,dependency,4,"Fix dependency of Mathcore from Mathmore; This PR removes a dependency which was wrongly added in Mathcore from Mathmore. . Mathcore should use their own headers (e.g. PdfFuncMathCore instead of PdfFunc.h). In addition, the files PdfFunc.h, ProbFunc.h and QuantFunc.h should not also be used when building the mathcore dictionary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5418
https://github.com/root-project/root/pull/5418:60,deployability,depend,dependency,60,"Fix dependency of Mathcore from Mathmore; This PR removes a dependency which was wrongly added in Mathcore from Mathmore. . Mathcore should use their own headers (e.g. PdfFuncMathCore instead of PdfFunc.h). In addition, the files PdfFunc.h, ProbFunc.h and QuantFunc.h should not also be used when building the mathcore dictionary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5418
https://github.com/root-project/root/pull/5418:297,deployability,build,building,297,"Fix dependency of Mathcore from Mathmore; This PR removes a dependency which was wrongly added in Mathcore from Mathmore. . Mathcore should use their own headers (e.g. PdfFuncMathCore instead of PdfFunc.h). In addition, the files PdfFunc.h, ProbFunc.h and QuantFunc.h should not also be used when building the mathcore dictionary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5418
https://github.com/root-project/root/pull/5418:4,integrability,depend,dependency,4,"Fix dependency of Mathcore from Mathmore; This PR removes a dependency which was wrongly added in Mathcore from Mathmore. . Mathcore should use their own headers (e.g. PdfFuncMathCore instead of PdfFunc.h). In addition, the files PdfFunc.h, ProbFunc.h and QuantFunc.h should not also be used when building the mathcore dictionary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5418
https://github.com/root-project/root/pull/5418:60,integrability,depend,dependency,60,"Fix dependency of Mathcore from Mathmore; This PR removes a dependency which was wrongly added in Mathcore from Mathmore. . Mathcore should use their own headers (e.g. PdfFuncMathCore instead of PdfFunc.h). In addition, the files PdfFunc.h, ProbFunc.h and QuantFunc.h should not also be used when building the mathcore dictionary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5418
https://github.com/root-project/root/pull/5418:4,modifiability,depend,dependency,4,"Fix dependency of Mathcore from Mathmore; This PR removes a dependency which was wrongly added in Mathcore from Mathmore. . Mathcore should use their own headers (e.g. PdfFuncMathCore instead of PdfFunc.h). In addition, the files PdfFunc.h, ProbFunc.h and QuantFunc.h should not also be used when building the mathcore dictionary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5418
https://github.com/root-project/root/pull/5418:60,modifiability,depend,dependency,60,"Fix dependency of Mathcore from Mathmore; This PR removes a dependency which was wrongly added in Mathcore from Mathmore. . Mathcore should use their own headers (e.g. PdfFuncMathCore instead of PdfFunc.h). In addition, the files PdfFunc.h, ProbFunc.h and QuantFunc.h should not also be used when building the mathcore dictionary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5418
https://github.com/root-project/root/pull/5418:4,safety,depend,dependency,4,"Fix dependency of Mathcore from Mathmore; This PR removes a dependency which was wrongly added in Mathcore from Mathmore. . Mathcore should use their own headers (e.g. PdfFuncMathCore instead of PdfFunc.h). In addition, the files PdfFunc.h, ProbFunc.h and QuantFunc.h should not also be used when building the mathcore dictionary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5418
https://github.com/root-project/root/pull/5418:60,safety,depend,dependency,60,"Fix dependency of Mathcore from Mathmore; This PR removes a dependency which was wrongly added in Mathcore from Mathmore. . Mathcore should use their own headers (e.g. PdfFuncMathCore instead of PdfFunc.h). In addition, the files PdfFunc.h, ProbFunc.h and QuantFunc.h should not also be used when building the mathcore dictionary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5418
https://github.com/root-project/root/pull/5418:4,testability,depend,dependency,4,"Fix dependency of Mathcore from Mathmore; This PR removes a dependency which was wrongly added in Mathcore from Mathmore. . Mathcore should use their own headers (e.g. PdfFuncMathCore instead of PdfFunc.h). In addition, the files PdfFunc.h, ProbFunc.h and QuantFunc.h should not also be used when building the mathcore dictionary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5418
https://github.com/root-project/root/pull/5418:60,testability,depend,dependency,60,"Fix dependency of Mathcore from Mathmore; This PR removes a dependency which was wrongly added in Mathcore from Mathmore. . Mathcore should use their own headers (e.g. PdfFuncMathCore instead of PdfFunc.h). In addition, the files PdfFunc.h, ProbFunc.h and QuantFunc.h should not also be used when building the mathcore dictionary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5418
https://github.com/root-project/root/pull/5419:111,availability,error,errors,111,"fix warning in RMiniFile.cxx; ROOT build fails with `-Ddev=ON` cmake flag, where all warnings are converted to errors. ```. /home/linev/git/root6/tree/ntuple/v7/src/RMiniFile.cxx:199:20: error: comparison of integer expressions of different signedness: ‘uint64_t’ {aka ‘long unsigned int’} and ‘int’ [-Werror=sign-compare]. ```. These warnings are since a long time in ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5419
https://github.com/root-project/root/pull/5419:187,availability,error,error,187,"fix warning in RMiniFile.cxx; ROOT build fails with `-Ddev=ON` cmake flag, where all warnings are converted to errors. ```. /home/linev/git/root6/tree/ntuple/v7/src/RMiniFile.cxx:199:20: error: comparison of integer expressions of different signedness: ‘uint64_t’ {aka ‘long unsigned int’} and ‘int’ [-Werror=sign-compare]. ```. These warnings are since a long time in ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5419
https://github.com/root-project/root/pull/5419:35,deployability,build,build,35,"fix warning in RMiniFile.cxx; ROOT build fails with `-Ddev=ON` cmake flag, where all warnings are converted to errors. ```. /home/linev/git/root6/tree/ntuple/v7/src/RMiniFile.cxx:199:20: error: comparison of integer expressions of different signedness: ‘uint64_t’ {aka ‘long unsigned int’} and ‘int’ [-Werror=sign-compare]. ```. These warnings are since a long time in ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5419
https://github.com/root-project/root/pull/5419:41,deployability,fail,fails,41,"fix warning in RMiniFile.cxx; ROOT build fails with `-Ddev=ON` cmake flag, where all warnings are converted to errors. ```. /home/linev/git/root6/tree/ntuple/v7/src/RMiniFile.cxx:199:20: error: comparison of integer expressions of different signedness: ‘uint64_t’ {aka ‘long unsigned int’} and ‘int’ [-Werror=sign-compare]. ```. These warnings are since a long time in ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5419
https://github.com/root-project/root/pull/5419:111,performance,error,errors,111,"fix warning in RMiniFile.cxx; ROOT build fails with `-Ddev=ON` cmake flag, where all warnings are converted to errors. ```. /home/linev/git/root6/tree/ntuple/v7/src/RMiniFile.cxx:199:20: error: comparison of integer expressions of different signedness: ‘uint64_t’ {aka ‘long unsigned int’} and ‘int’ [-Werror=sign-compare]. ```. These warnings are since a long time in ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5419
https://github.com/root-project/root/pull/5419:187,performance,error,error,187,"fix warning in RMiniFile.cxx; ROOT build fails with `-Ddev=ON` cmake flag, where all warnings are converted to errors. ```. /home/linev/git/root6/tree/ntuple/v7/src/RMiniFile.cxx:199:20: error: comparison of integer expressions of different signedness: ‘uint64_t’ {aka ‘long unsigned int’} and ‘int’ [-Werror=sign-compare]. ```. These warnings are since a long time in ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5419
https://github.com/root-project/root/pull/5419:361,performance,time,time,361,"fix warning in RMiniFile.cxx; ROOT build fails with `-Ddev=ON` cmake flag, where all warnings are converted to errors. ```. /home/linev/git/root6/tree/ntuple/v7/src/RMiniFile.cxx:199:20: error: comparison of integer expressions of different signedness: ‘uint64_t’ {aka ‘long unsigned int’} and ‘int’ [-Werror=sign-compare]. ```. These warnings are since a long time in ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5419
https://github.com/root-project/root/pull/5419:41,reliability,fail,fails,41,"fix warning in RMiniFile.cxx; ROOT build fails with `-Ddev=ON` cmake flag, where all warnings are converted to errors. ```. /home/linev/git/root6/tree/ntuple/v7/src/RMiniFile.cxx:199:20: error: comparison of integer expressions of different signedness: ‘uint64_t’ {aka ‘long unsigned int’} and ‘int’ [-Werror=sign-compare]. ```. These warnings are since a long time in ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5419
https://github.com/root-project/root/pull/5419:111,safety,error,errors,111,"fix warning in RMiniFile.cxx; ROOT build fails with `-Ddev=ON` cmake flag, where all warnings are converted to errors. ```. /home/linev/git/root6/tree/ntuple/v7/src/RMiniFile.cxx:199:20: error: comparison of integer expressions of different signedness: ‘uint64_t’ {aka ‘long unsigned int’} and ‘int’ [-Werror=sign-compare]. ```. These warnings are since a long time in ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5419
https://github.com/root-project/root/pull/5419:187,safety,error,error,187,"fix warning in RMiniFile.cxx; ROOT build fails with `-Ddev=ON` cmake flag, where all warnings are converted to errors. ```. /home/linev/git/root6/tree/ntuple/v7/src/RMiniFile.cxx:199:20: error: comparison of integer expressions of different signedness: ‘uint64_t’ {aka ‘long unsigned int’} and ‘int’ [-Werror=sign-compare]. ```. These warnings are since a long time in ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5419
https://github.com/root-project/root/pull/5419:241,security,sign,signedness,241,"fix warning in RMiniFile.cxx; ROOT build fails with `-Ddev=ON` cmake flag, where all warnings are converted to errors. ```. /home/linev/git/root6/tree/ntuple/v7/src/RMiniFile.cxx:199:20: error: comparison of integer expressions of different signedness: ‘uint64_t’ {aka ‘long unsigned int’} and ‘int’ [-Werror=sign-compare]. ```. These warnings are since a long time in ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5419
https://github.com/root-project/root/pull/5419:309,security,sign,sign-compare,309,"fix warning in RMiniFile.cxx; ROOT build fails with `-Ddev=ON` cmake flag, where all warnings are converted to errors. ```. /home/linev/git/root6/tree/ntuple/v7/src/RMiniFile.cxx:199:20: error: comparison of integer expressions of different signedness: ‘uint64_t’ {aka ‘long unsigned int’} and ‘int’ [-Werror=sign-compare]. ```. These warnings are since a long time in ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5419
https://github.com/root-project/root/pull/5419:111,usability,error,errors,111,"fix warning in RMiniFile.cxx; ROOT build fails with `-Ddev=ON` cmake flag, where all warnings are converted to errors. ```. /home/linev/git/root6/tree/ntuple/v7/src/RMiniFile.cxx:199:20: error: comparison of integer expressions of different signedness: ‘uint64_t’ {aka ‘long unsigned int’} and ‘int’ [-Werror=sign-compare]. ```. These warnings are since a long time in ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5419
https://github.com/root-project/root/pull/5419:187,usability,error,error,187,"fix warning in RMiniFile.cxx; ROOT build fails with `-Ddev=ON` cmake flag, where all warnings are converted to errors. ```. /home/linev/git/root6/tree/ntuple/v7/src/RMiniFile.cxx:199:20: error: comparison of integer expressions of different signedness: ‘uint64_t’ {aka ‘long unsigned int’} and ‘int’ [-Werror=sign-compare]. ```. These warnings are since a long time in ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5419
https://github.com/root-project/root/pull/5420:406,availability,down,down,406,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:752,availability,Error,Error,752,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:265,deployability,patch,patch,265,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:651,deployability,depend,dependent,651,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:708,deployability,patch,patch,708,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:728,deployability,fail,failing,728,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:1,energy efficiency,core,core,1,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:98,energy efficiency,Load,Load,98,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:117,energy efficiency,load,loaded,117,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:176,energy efficiency,current,currently,176,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:251,energy efficiency,Load,LoadPCM,251,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:496,energy efficiency,current,current,496,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:770,energy efficiency,Load,LoadPCM,770,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:850,energy efficiency,Load,LoadPCM,850,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:936,energy efficiency,Load,LoadPCM,936,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:651,integrability,depend,dependent,651,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:13,interoperability,stub,stub,13,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:311,interoperability,registr,registration,311,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:504,interoperability,stub,stub,504,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:651,modifiability,depend,dependent,651,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:98,performance,Load,Load,98,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:117,performance,load,loaded,117,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:251,performance,Load,LoadPCM,251,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:752,performance,Error,Error,752,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:770,performance,Load,LoadPCM,770,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:850,performance,Load,LoadPCM,850,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:863,performance,memor,memory,863,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:936,performance,Load,LoadPCM,936,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:949,performance,memor,memory,949,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:447,reliability,doe,does,447,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:728,reliability,fail,failing,728,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:817,reliability,doe,does,817,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:265,safety,patch,patch,265,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:651,safety,depend,dependent,651,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:708,safety,patch,patch,708,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:740,safety,test,tests,740,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:752,safety,Error,Error,752,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:265,security,patch,patch,265,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:708,security,patch,patch,708,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:13,testability,stub,stub,13,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:504,testability,stub,stub,504,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:651,testability,depend,dependent,651,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:740,testability,test,tests,740,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:224,usability,undo,undo,224,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:539,usability,undo,undo,539,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:752,usability,Error,Error,752,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:863,usability,memor,memory,863,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:949,usability,memor,memory,949,"[core] Add a stub for proper re-reading of rdicts if the library is reloaded.; If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5422:318,availability,failur,failures,318,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:337,availability,Error,Error,337,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:182,deployability,modul,modules,182,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:226,deployability,patch,patch,226,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:257,deployability,modul,modules,257,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:318,deployability,fail,failures,318,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:827,deployability,continu,continuation,827,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:89,energy efficiency,load,loaded,89,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:160,energy efficiency,current,current,160,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:354,energy efficiency,Load,LoadPCM,354,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:432,energy efficiency,Load,LoadPCM,432,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:516,energy efficiency,Load,LoadPCM,516,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:596,energy efficiency,Load,LoadPCM,596,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:674,energy efficiency,Load,LoadPCM,674,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:758,energy efficiency,Load,LoadPCM,758,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:182,modifiability,modul,modules,182,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:257,modifiability,modul,modules,257,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:89,performance,load,loaded,89,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:318,performance,failur,failures,318,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:337,performance,Error,Error,337,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:354,performance,Load,LoadPCM,354,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:432,performance,Load,LoadPCM,432,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:444,performance,memor,memory,444,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:516,performance,Load,LoadPCM,516,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:528,performance,memor,memory,528,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:596,performance,Load,LoadPCM,596,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:674,performance,Load,LoadPCM,674,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:686,performance,memor,memory,686,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:758,performance,Load,LoadPCM,758,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:770,performance,memor,memory,770,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:318,reliability,fail,failures,318,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:400,reliability,doe,does,400,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:642,reliability,doe,does,642,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:182,safety,modul,modules,182,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:226,safety,patch,patch,226,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:257,safety,modul,modules,257,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:337,safety,Error,Error,337,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:226,security,patch,patch,226,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:244,usability,behavi,behavior,244,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:337,usability,Error,Error,337,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:444,usability,memor,memory,444,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:528,usability,memor,memory,528,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:686,usability,memor,memory,686,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:770,usability,memor,memory,770,[cxxmodules] Keep the pending rdict files to be re-read on reload.; When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm. Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5423:66,deployability,patch,patch,66,ROOT-10677: [cxxmodules] Support libcxx with glibc on unix.; This patch works around compatibility issues between libcxx and glibc. It should fix the set up of the FNAL ART framework. Thanks to Chris Green (@chissg) this patch should resolve ROOT-10677.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5423
https://github.com/root-project/root/pull/5423:221,deployability,patch,patch,221,ROOT-10677: [cxxmodules] Support libcxx with glibc on unix.; This patch works around compatibility issues between libcxx and glibc. It should fix the set up of the FNAL ART framework. Thanks to Chris Green (@chissg) this patch should resolve ROOT-10677.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5423
https://github.com/root-project/root/pull/5423:200,energy efficiency,Green,Green,200,ROOT-10677: [cxxmodules] Support libcxx with glibc on unix.; This patch works around compatibility issues between libcxx and glibc. It should fix the set up of the FNAL ART framework. Thanks to Chris Green (@chissg) this patch should resolve ROOT-10677.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5423
https://github.com/root-project/root/pull/5423:85,interoperability,compatib,compatibility,85,ROOT-10677: [cxxmodules] Support libcxx with glibc on unix.; This patch works around compatibility issues between libcxx and glibc. It should fix the set up of the FNAL ART framework. Thanks to Chris Green (@chissg) this patch should resolve ROOT-10677.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5423
https://github.com/root-project/root/pull/5423:66,safety,patch,patch,66,ROOT-10677: [cxxmodules] Support libcxx with glibc on unix.; This patch works around compatibility issues between libcxx and glibc. It should fix the set up of the FNAL ART framework. Thanks to Chris Green (@chissg) this patch should resolve ROOT-10677.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5423
https://github.com/root-project/root/pull/5423:221,safety,patch,patch,221,ROOT-10677: [cxxmodules] Support libcxx with glibc on unix.; This patch works around compatibility issues between libcxx and glibc. It should fix the set up of the FNAL ART framework. Thanks to Chris Green (@chissg) this patch should resolve ROOT-10677.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5423
https://github.com/root-project/root/pull/5423:66,security,patch,patch,66,ROOT-10677: [cxxmodules] Support libcxx with glibc on unix.; This patch works around compatibility issues between libcxx and glibc. It should fix the set up of the FNAL ART framework. Thanks to Chris Green (@chissg) this patch should resolve ROOT-10677.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5423
https://github.com/root-project/root/pull/5423:221,security,patch,patch,221,ROOT-10677: [cxxmodules] Support libcxx with glibc on unix.; This patch works around compatibility issues between libcxx and glibc. It should fix the set up of the FNAL ART framework. Thanks to Chris Green (@chissg) this patch should resolve ROOT-10677.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5423
https://github.com/root-project/root/pull/5423:25,usability,Support,Support,25,ROOT-10677: [cxxmodules] Support libcxx with glibc on unix.; This patch works around compatibility issues between libcxx and glibc. It should fix the set up of the FNAL ART framework. Thanks to Chris Green (@chissg) this patch should resolve ROOT-10677.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5423
https://github.com/root-project/root/pull/5424:66,deployability,patch,patch,66,[ROOT-10677][cxxmodules] Support libcxx with glibc on unix.; This patch works around compatibility issues between libcxx and glibc. It should fix the set up of the FNAL ART framework. Thanks to Chris Green this patch should resolve ROOT-10677. Depends on #5423,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5424
https://github.com/root-project/root/pull/5424:211,deployability,patch,patch,211,[ROOT-10677][cxxmodules] Support libcxx with glibc on unix.; This patch works around compatibility issues between libcxx and glibc. It should fix the set up of the FNAL ART framework. Thanks to Chris Green this patch should resolve ROOT-10677. Depends on #5423,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5424
https://github.com/root-project/root/pull/5424:244,deployability,Depend,Depends,244,[ROOT-10677][cxxmodules] Support libcxx with glibc on unix.; This patch works around compatibility issues between libcxx and glibc. It should fix the set up of the FNAL ART framework. Thanks to Chris Green this patch should resolve ROOT-10677. Depends on #5423,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5424
https://github.com/root-project/root/pull/5424:200,energy efficiency,Green,Green,200,[ROOT-10677][cxxmodules] Support libcxx with glibc on unix.; This patch works around compatibility issues between libcxx and glibc. It should fix the set up of the FNAL ART framework. Thanks to Chris Green this patch should resolve ROOT-10677. Depends on #5423,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5424
https://github.com/root-project/root/pull/5424:244,integrability,Depend,Depends,244,[ROOT-10677][cxxmodules] Support libcxx with glibc on unix.; This patch works around compatibility issues between libcxx and glibc. It should fix the set up of the FNAL ART framework. Thanks to Chris Green this patch should resolve ROOT-10677. Depends on #5423,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5424
https://github.com/root-project/root/pull/5424:85,interoperability,compatib,compatibility,85,[ROOT-10677][cxxmodules] Support libcxx with glibc on unix.; This patch works around compatibility issues between libcxx and glibc. It should fix the set up of the FNAL ART framework. Thanks to Chris Green this patch should resolve ROOT-10677. Depends on #5423,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5424
https://github.com/root-project/root/pull/5424:244,modifiability,Depend,Depends,244,[ROOT-10677][cxxmodules] Support libcxx with glibc on unix.; This patch works around compatibility issues between libcxx and glibc. It should fix the set up of the FNAL ART framework. Thanks to Chris Green this patch should resolve ROOT-10677. Depends on #5423,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5424
https://github.com/root-project/root/pull/5424:66,safety,patch,patch,66,[ROOT-10677][cxxmodules] Support libcxx with glibc on unix.; This patch works around compatibility issues between libcxx and glibc. It should fix the set up of the FNAL ART framework. Thanks to Chris Green this patch should resolve ROOT-10677. Depends on #5423,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5424
https://github.com/root-project/root/pull/5424:211,safety,patch,patch,211,[ROOT-10677][cxxmodules] Support libcxx with glibc on unix.; This patch works around compatibility issues between libcxx and glibc. It should fix the set up of the FNAL ART framework. Thanks to Chris Green this patch should resolve ROOT-10677. Depends on #5423,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5424
https://github.com/root-project/root/pull/5424:244,safety,Depend,Depends,244,[ROOT-10677][cxxmodules] Support libcxx with glibc on unix.; This patch works around compatibility issues between libcxx and glibc. It should fix the set up of the FNAL ART framework. Thanks to Chris Green this patch should resolve ROOT-10677. Depends on #5423,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5424
https://github.com/root-project/root/pull/5424:66,security,patch,patch,66,[ROOT-10677][cxxmodules] Support libcxx with glibc on unix.; This patch works around compatibility issues between libcxx and glibc. It should fix the set up of the FNAL ART framework. Thanks to Chris Green this patch should resolve ROOT-10677. Depends on #5423,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5424
https://github.com/root-project/root/pull/5424:211,security,patch,patch,211,[ROOT-10677][cxxmodules] Support libcxx with glibc on unix.; This patch works around compatibility issues between libcxx and glibc. It should fix the set up of the FNAL ART framework. Thanks to Chris Green this patch should resolve ROOT-10677. Depends on #5423,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5424
https://github.com/root-project/root/pull/5424:244,testability,Depend,Depends,244,[ROOT-10677][cxxmodules] Support libcxx with glibc on unix.; This patch works around compatibility issues between libcxx and glibc. It should fix the set up of the FNAL ART framework. Thanks to Chris Green this patch should resolve ROOT-10677. Depends on #5423,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5424
https://github.com/root-project/root/pull/5424:25,usability,Support,Support,25,[ROOT-10677][cxxmodules] Support libcxx with glibc on unix.; This patch works around compatibility issues between libcxx and glibc. It should fix the set up of the FNAL ART framework. Thanks to Chris Green this patch should resolve ROOT-10677. Depends on #5423,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5424
https://github.com/root-project/root/pull/5425:137,modifiability,variab,variables,137,"[RF] Fix ROOT-10676.; When importing a dataset from a TTree, selection strings can be passed. When selection strings are not using *all* variables that are copied. into the dataset, the selection formula was warning that not all. variables are used in the selection. Given that this is likely intended,. the warning was removed. (cherry picked from commit bdac678f06231981d4fde2362bed3c485a714936)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5425
https://github.com/root-project/root/pull/5425:230,modifiability,variab,variables,230,"[RF] Fix ROOT-10676.; When importing a dataset from a TTree, selection strings can be passed. When selection strings are not using *all* variables that are copied. into the dataset, the selection formula was warning that not all. variables are used in the selection. Given that this is likely intended,. the warning was removed. (cherry picked from commit bdac678f06231981d4fde2362bed3c485a714936)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5425
https://github.com/root-project/root/pull/5426:53,deployability,version,versions,53,"[DF] Fix arrow datasource and tests for recent arrow versions (v6.18); This will break builds with `-Dtesting=ON` for older arrow versions (v0.14 and below), but fixes our nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5426
https://github.com/root-project/root/pull/5426:87,deployability,build,builds,87,"[DF] Fix arrow datasource and tests for recent arrow versions (v6.18); This will break builds with `-Dtesting=ON` for older arrow versions (v0.14 and below), but fixes our nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5426
https://github.com/root-project/root/pull/5426:130,deployability,version,versions,130,"[DF] Fix arrow datasource and tests for recent arrow versions (v6.18); This will break builds with `-Dtesting=ON` for older arrow versions (v0.14 and below), but fixes our nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5426
https://github.com/root-project/root/pull/5426:53,integrability,version,versions,53,"[DF] Fix arrow datasource and tests for recent arrow versions (v6.18); This will break builds with `-Dtesting=ON` for older arrow versions (v0.14 and below), but fixes our nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5426
https://github.com/root-project/root/pull/5426:130,integrability,version,versions,130,"[DF] Fix arrow datasource and tests for recent arrow versions (v6.18); This will break builds with `-Dtesting=ON` for older arrow versions (v0.14 and below), but fixes our nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5426
https://github.com/root-project/root/pull/5426:53,modifiability,version,versions,53,"[DF] Fix arrow datasource and tests for recent arrow versions (v6.18); This will break builds with `-Dtesting=ON` for older arrow versions (v0.14 and below), but fixes our nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5426
https://github.com/root-project/root/pull/5426:130,modifiability,version,versions,130,"[DF] Fix arrow datasource and tests for recent arrow versions (v6.18); This will break builds with `-Dtesting=ON` for older arrow versions (v0.14 and below), but fixes our nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5426
https://github.com/root-project/root/pull/5426:30,safety,test,tests,30,"[DF] Fix arrow datasource and tests for recent arrow versions (v6.18); This will break builds with `-Dtesting=ON` for older arrow versions (v0.14 and below), but fixes our nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5426
https://github.com/root-project/root/pull/5426:30,testability,test,tests,30,"[DF] Fix arrow datasource and tests for recent arrow versions (v6.18); This will break builds with `-Dtesting=ON` for older arrow versions (v0.14 and below), but fixes our nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5426
https://github.com/root-project/root/pull/5427:53,deployability,version,versions,53,"[DF] Fix arrow datasource and tests for recent arrow versions (v6.16); This will break builds with -Dtesting=ON for older arrow versions (v0.14 and below), but fixes our nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5427
https://github.com/root-project/root/pull/5427:87,deployability,build,builds,87,"[DF] Fix arrow datasource and tests for recent arrow versions (v6.16); This will break builds with -Dtesting=ON for older arrow versions (v0.14 and below), but fixes our nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5427
https://github.com/root-project/root/pull/5427:128,deployability,version,versions,128,"[DF] Fix arrow datasource and tests for recent arrow versions (v6.16); This will break builds with -Dtesting=ON for older arrow versions (v0.14 and below), but fixes our nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5427
https://github.com/root-project/root/pull/5427:53,integrability,version,versions,53,"[DF] Fix arrow datasource and tests for recent arrow versions (v6.16); This will break builds with -Dtesting=ON for older arrow versions (v0.14 and below), but fixes our nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5427
https://github.com/root-project/root/pull/5427:128,integrability,version,versions,128,"[DF] Fix arrow datasource and tests for recent arrow versions (v6.16); This will break builds with -Dtesting=ON for older arrow versions (v0.14 and below), but fixes our nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5427
https://github.com/root-project/root/pull/5427:53,modifiability,version,versions,53,"[DF] Fix arrow datasource and tests for recent arrow versions (v6.16); This will break builds with -Dtesting=ON for older arrow versions (v0.14 and below), but fixes our nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5427
https://github.com/root-project/root/pull/5427:128,modifiability,version,versions,128,"[DF] Fix arrow datasource and tests for recent arrow versions (v6.16); This will break builds with -Dtesting=ON for older arrow versions (v0.14 and below), but fixes our nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5427
https://github.com/root-project/root/pull/5427:30,safety,test,tests,30,"[DF] Fix arrow datasource and tests for recent arrow versions (v6.16); This will break builds with -Dtesting=ON for older arrow versions (v0.14 and below), but fixes our nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5427
https://github.com/root-project/root/pull/5427:30,testability,test,tests,30,"[DF] Fix arrow datasource and tests for recent arrow versions (v6.16); This will break builds with -Dtesting=ON for older arrow versions (v0.14 and below), but fixes our nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5427
https://github.com/root-project/root/pull/5429:574,deployability,contain,contains,574,"[Exp PyROOT] Implement Address via LowLevelView; The previous implementation, based on a bytearray, did not consider. that, in the old PyROOT, the address of the buffer returned by. AddressOf is the same as the address of the address of the object. being inspected. This is required by DataFormats.FWLite in CMSSW. In the new implementation, we obtain the address of the address of. the object via addressof (and its parameter byref = True), and. then we just create a cppyy LowLevelView from it, which is the. buffer we return. The first (and only) element of that buffer. contains the address of the object.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5429
https://github.com/root-project/root/pull/5429:162,integrability,buffer,buffer,162,"[Exp PyROOT] Implement Address via LowLevelView; The previous implementation, based on a bytearray, did not consider. that, in the old PyROOT, the address of the buffer returned by. AddressOf is the same as the address of the address of the object. being inspected. This is required by DataFormats.FWLite in CMSSW. In the new implementation, we obtain the address of the address of. the object via addressof (and its parameter byref = True), and. then we just create a cppyy LowLevelView from it, which is the. buffer we return. The first (and only) element of that buffer. contains the address of the object.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5429
https://github.com/root-project/root/pull/5429:511,integrability,buffer,buffer,511,"[Exp PyROOT] Implement Address via LowLevelView; The previous implementation, based on a bytearray, did not consider. that, in the old PyROOT, the address of the buffer returned by. AddressOf is the same as the address of the address of the object. being inspected. This is required by DataFormats.FWLite in CMSSW. In the new implementation, we obtain the address of the address of. the object via addressof (and its parameter byref = True), and. then we just create a cppyy LowLevelView from it, which is the. buffer we return. The first (and only) element of that buffer. contains the address of the object.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5429
https://github.com/root-project/root/pull/5429:566,integrability,buffer,buffer,566,"[Exp PyROOT] Implement Address via LowLevelView; The previous implementation, based on a bytearray, did not consider. that, in the old PyROOT, the address of the buffer returned by. AddressOf is the same as the address of the address of the object. being inspected. This is required by DataFormats.FWLite in CMSSW. In the new implementation, we obtain the address of the address of. the object via addressof (and its parameter byref = True), and. then we just create a cppyy LowLevelView from it, which is the. buffer we return. The first (and only) element of that buffer. contains the address of the object.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5429
https://github.com/root-project/root/pull/5429:417,modifiability,paramet,parameter,417,"[Exp PyROOT] Implement Address via LowLevelView; The previous implementation, based on a bytearray, did not consider. that, in the old PyROOT, the address of the buffer returned by. AddressOf is the same as the address of the address of the object. being inspected. This is required by DataFormats.FWLite in CMSSW. In the new implementation, we obtain the address of the address of. the object via addressof (and its parameter byref = True), and. then we just create a cppyy LowLevelView from it, which is the. buffer we return. The first (and only) element of that buffer. contains the address of the object.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5429
https://github.com/root-project/root/pull/5430:79,deployability,patch,patch,79,"[TCling] Add iterator of using declarations to TClingMethodInfo; Ported from a patch by Wim Lavrijsen:. https://bitbucket.org/wlav/cppyy-backend/src/00d65c73d303fde7069aacc32cf95bb0144bbe43/cling/patches/using_decls.diff. This PR supersedes #3640 and ports the changes to master. The changes are a fix for the Jira ticket: https://sft.its.cern.ch/jira/browse/ROOT-10582. The reproducer (fails without the fix, prints `2` with the fix):. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". class A {. public:. int val;. A(int a): val(a) {}. virtual ~A() {}. };. """""". ). class B(ROOT.A):. pass. b = B(2). print(b.val). ```. The PR also allows to remove workarounds to make RooFit work, see the pythonizations here:. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_rooabspdf.py#L24-L25. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodataset.py#L24. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodatahist.py#L24",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5430
https://github.com/root-project/root/pull/5430:196,deployability,patch,patches,196,"[TCling] Add iterator of using declarations to TClingMethodInfo; Ported from a patch by Wim Lavrijsen:. https://bitbucket.org/wlav/cppyy-backend/src/00d65c73d303fde7069aacc32cf95bb0144bbe43/cling/patches/using_decls.diff. This PR supersedes #3640 and ports the changes to master. The changes are a fix for the Jira ticket: https://sft.its.cern.ch/jira/browse/ROOT-10582. The reproducer (fails without the fix, prints `2` with the fix):. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". class A {. public:. int val;. A(int a): val(a) {}. virtual ~A() {}. };. """""". ). class B(ROOT.A):. pass. b = B(2). print(b.val). ```. The PR also allows to remove workarounds to make RooFit work, see the pythonizations here:. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_rooabspdf.py#L24-L25. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodataset.py#L24. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodatahist.py#L24",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5430
https://github.com/root-project/root/pull/5430:387,deployability,fail,fails,387,"[TCling] Add iterator of using declarations to TClingMethodInfo; Ported from a patch by Wim Lavrijsen:. https://bitbucket.org/wlav/cppyy-backend/src/00d65c73d303fde7069aacc32cf95bb0144bbe43/cling/patches/using_decls.diff. This PR supersedes #3640 and ports the changes to master. The changes are a fix for the Jira ticket: https://sft.its.cern.ch/jira/browse/ROOT-10582. The reproducer (fails without the fix, prints `2` with the fix):. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". class A {. public:. int val;. A(int a): val(a) {}. virtual ~A() {}. };. """""". ). class B(ROOT.A):. pass. b = B(2). print(b.val). ```. The PR also allows to remove workarounds to make RooFit work, see the pythonizations here:. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_rooabspdf.py#L24-L25. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodataset.py#L24. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodatahist.py#L24",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5430
https://github.com/root-project/root/pull/5430:503,integrability,pub,public,503,"[TCling] Add iterator of using declarations to TClingMethodInfo; Ported from a patch by Wim Lavrijsen:. https://bitbucket.org/wlav/cppyy-backend/src/00d65c73d303fde7069aacc32cf95bb0144bbe43/cling/patches/using_decls.diff. This PR supersedes #3640 and ports the changes to master. The changes are a fix for the Jira ticket: https://sft.its.cern.ch/jira/browse/ROOT-10582. The reproducer (fails without the fix, prints `2` with the fix):. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". class A {. public:. int val;. A(int a): val(a) {}. virtual ~A() {}. };. """""". ). class B(ROOT.A):. pass. b = B(2). print(b.val). ```. The PR also allows to remove workarounds to make RooFit work, see the pythonizations here:. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_rooabspdf.py#L24-L25. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodataset.py#L24. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodatahist.py#L24",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5430
https://github.com/root-project/root/pull/5430:766,interoperability,bind,bindings,766,"[TCling] Add iterator of using declarations to TClingMethodInfo; Ported from a patch by Wim Lavrijsen:. https://bitbucket.org/wlav/cppyy-backend/src/00d65c73d303fde7069aacc32cf95bb0144bbe43/cling/patches/using_decls.diff. This PR supersedes #3640 and ports the changes to master. The changes are a fix for the Jira ticket: https://sft.its.cern.ch/jira/browse/ROOT-10582. The reproducer (fails without the fix, prints `2` with the fix):. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". class A {. public:. int val;. A(int a): val(a) {}. virtual ~A() {}. };. """""". ). class B(ROOT.A):. pass. b = B(2). print(b.val). ```. The PR also allows to remove workarounds to make RooFit work, see the pythonizations here:. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_rooabspdf.py#L24-L25. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodataset.py#L24. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodatahist.py#L24",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5430
https://github.com/root-project/root/pull/5430:908,interoperability,bind,bindings,908,"[TCling] Add iterator of using declarations to TClingMethodInfo; Ported from a patch by Wim Lavrijsen:. https://bitbucket.org/wlav/cppyy-backend/src/00d65c73d303fde7069aacc32cf95bb0144bbe43/cling/patches/using_decls.diff. This PR supersedes #3640 and ports the changes to master. The changes are a fix for the Jira ticket: https://sft.its.cern.ch/jira/browse/ROOT-10582. The reproducer (fails without the fix, prints `2` with the fix):. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". class A {. public:. int val;. A(int a): val(a) {}. virtual ~A() {}. };. """""". ). class B(ROOT.A):. pass. b = B(2). print(b.val). ```. The PR also allows to remove workarounds to make RooFit work, see the pythonizations here:. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_rooabspdf.py#L24-L25. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodataset.py#L24. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodatahist.py#L24",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5430
https://github.com/root-project/root/pull/5430:1047,interoperability,bind,bindings,1047,"[TCling] Add iterator of using declarations to TClingMethodInfo; Ported from a patch by Wim Lavrijsen:. https://bitbucket.org/wlav/cppyy-backend/src/00d65c73d303fde7069aacc32cf95bb0144bbe43/cling/patches/using_decls.diff. This PR supersedes #3640 and ports the changes to master. The changes are a fix for the Jira ticket: https://sft.its.cern.ch/jira/browse/ROOT-10582. The reproducer (fails without the fix, prints `2` with the fix):. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". class A {. public:. int val;. A(int a): val(a) {}. virtual ~A() {}. };. """""". ). class B(ROOT.A):. pass. b = B(2). print(b.val). ```. The PR also allows to remove workarounds to make RooFit work, see the pythonizations here:. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_rooabspdf.py#L24-L25. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodataset.py#L24. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodatahist.py#L24",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5430
https://github.com/root-project/root/pull/5430:766,modifiability,bind,bindings,766,"[TCling] Add iterator of using declarations to TClingMethodInfo; Ported from a patch by Wim Lavrijsen:. https://bitbucket.org/wlav/cppyy-backend/src/00d65c73d303fde7069aacc32cf95bb0144bbe43/cling/patches/using_decls.diff. This PR supersedes #3640 and ports the changes to master. The changes are a fix for the Jira ticket: https://sft.its.cern.ch/jira/browse/ROOT-10582. The reproducer (fails without the fix, prints `2` with the fix):. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". class A {. public:. int val;. A(int a): val(a) {}. virtual ~A() {}. };. """""". ). class B(ROOT.A):. pass. b = B(2). print(b.val). ```. The PR also allows to remove workarounds to make RooFit work, see the pythonizations here:. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_rooabspdf.py#L24-L25. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodataset.py#L24. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodatahist.py#L24",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5430
https://github.com/root-project/root/pull/5430:908,modifiability,bind,bindings,908,"[TCling] Add iterator of using declarations to TClingMethodInfo; Ported from a patch by Wim Lavrijsen:. https://bitbucket.org/wlav/cppyy-backend/src/00d65c73d303fde7069aacc32cf95bb0144bbe43/cling/patches/using_decls.diff. This PR supersedes #3640 and ports the changes to master. The changes are a fix for the Jira ticket: https://sft.its.cern.ch/jira/browse/ROOT-10582. The reproducer (fails without the fix, prints `2` with the fix):. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". class A {. public:. int val;. A(int a): val(a) {}. virtual ~A() {}. };. """""". ). class B(ROOT.A):. pass. b = B(2). print(b.val). ```. The PR also allows to remove workarounds to make RooFit work, see the pythonizations here:. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_rooabspdf.py#L24-L25. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodataset.py#L24. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodatahist.py#L24",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5430
https://github.com/root-project/root/pull/5430:1047,modifiability,bind,bindings,1047,"[TCling] Add iterator of using declarations to TClingMethodInfo; Ported from a patch by Wim Lavrijsen:. https://bitbucket.org/wlav/cppyy-backend/src/00d65c73d303fde7069aacc32cf95bb0144bbe43/cling/patches/using_decls.diff. This PR supersedes #3640 and ports the changes to master. The changes are a fix for the Jira ticket: https://sft.its.cern.ch/jira/browse/ROOT-10582. The reproducer (fails without the fix, prints `2` with the fix):. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". class A {. public:. int val;. A(int a): val(a) {}. virtual ~A() {}. };. """""". ). class B(ROOT.A):. pass. b = B(2). print(b.val). ```. The PR also allows to remove workarounds to make RooFit work, see the pythonizations here:. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_rooabspdf.py#L24-L25. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodataset.py#L24. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodatahist.py#L24",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5430
https://github.com/root-project/root/pull/5430:387,reliability,fail,fails,387,"[TCling] Add iterator of using declarations to TClingMethodInfo; Ported from a patch by Wim Lavrijsen:. https://bitbucket.org/wlav/cppyy-backend/src/00d65c73d303fde7069aacc32cf95bb0144bbe43/cling/patches/using_decls.diff. This PR supersedes #3640 and ports the changes to master. The changes are a fix for the Jira ticket: https://sft.its.cern.ch/jira/browse/ROOT-10582. The reproducer (fails without the fix, prints `2` with the fix):. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". class A {. public:. int val;. A(int a): val(a) {}. virtual ~A() {}. };. """""". ). class B(ROOT.A):. pass. b = B(2). print(b.val). ```. The PR also allows to remove workarounds to make RooFit work, see the pythonizations here:. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_rooabspdf.py#L24-L25. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodataset.py#L24. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodatahist.py#L24",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5430
https://github.com/root-project/root/pull/5430:79,safety,patch,patch,79,"[TCling] Add iterator of using declarations to TClingMethodInfo; Ported from a patch by Wim Lavrijsen:. https://bitbucket.org/wlav/cppyy-backend/src/00d65c73d303fde7069aacc32cf95bb0144bbe43/cling/patches/using_decls.diff. This PR supersedes #3640 and ports the changes to master. The changes are a fix for the Jira ticket: https://sft.its.cern.ch/jira/browse/ROOT-10582. The reproducer (fails without the fix, prints `2` with the fix):. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". class A {. public:. int val;. A(int a): val(a) {}. virtual ~A() {}. };. """""". ). class B(ROOT.A):. pass. b = B(2). print(b.val). ```. The PR also allows to remove workarounds to make RooFit work, see the pythonizations here:. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_rooabspdf.py#L24-L25. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodataset.py#L24. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodatahist.py#L24",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5430
https://github.com/root-project/root/pull/5430:196,safety,patch,patches,196,"[TCling] Add iterator of using declarations to TClingMethodInfo; Ported from a patch by Wim Lavrijsen:. https://bitbucket.org/wlav/cppyy-backend/src/00d65c73d303fde7069aacc32cf95bb0144bbe43/cling/patches/using_decls.diff. This PR supersedes #3640 and ports the changes to master. The changes are a fix for the Jira ticket: https://sft.its.cern.ch/jira/browse/ROOT-10582. The reproducer (fails without the fix, prints `2` with the fix):. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". class A {. public:. int val;. A(int a): val(a) {}. virtual ~A() {}. };. """""". ). class B(ROOT.A):. pass. b = B(2). print(b.val). ```. The PR also allows to remove workarounds to make RooFit work, see the pythonizations here:. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_rooabspdf.py#L24-L25. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodataset.py#L24. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodatahist.py#L24",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5430
https://github.com/root-project/root/pull/5430:79,security,patch,patch,79,"[TCling] Add iterator of using declarations to TClingMethodInfo; Ported from a patch by Wim Lavrijsen:. https://bitbucket.org/wlav/cppyy-backend/src/00d65c73d303fde7069aacc32cf95bb0144bbe43/cling/patches/using_decls.diff. This PR supersedes #3640 and ports the changes to master. The changes are a fix for the Jira ticket: https://sft.its.cern.ch/jira/browse/ROOT-10582. The reproducer (fails without the fix, prints `2` with the fix):. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". class A {. public:. int val;. A(int a): val(a) {}. virtual ~A() {}. };. """""". ). class B(ROOT.A):. pass. b = B(2). print(b.val). ```. The PR also allows to remove workarounds to make RooFit work, see the pythonizations here:. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_rooabspdf.py#L24-L25. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodataset.py#L24. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodatahist.py#L24",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5430
https://github.com/root-project/root/pull/5430:196,security,patch,patches,196,"[TCling] Add iterator of using declarations to TClingMethodInfo; Ported from a patch by Wim Lavrijsen:. https://bitbucket.org/wlav/cppyy-backend/src/00d65c73d303fde7069aacc32cf95bb0144bbe43/cling/patches/using_decls.diff. This PR supersedes #3640 and ports the changes to master. The changes are a fix for the Jira ticket: https://sft.its.cern.ch/jira/browse/ROOT-10582. The reproducer (fails without the fix, prints `2` with the fix):. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". class A {. public:. int val;. A(int a): val(a) {}. virtual ~A() {}. };. """""". ). class B(ROOT.A):. pass. b = B(2). print(b.val). ```. The PR also allows to remove workarounds to make RooFit work, see the pythonizations here:. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_rooabspdf.py#L24-L25. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodataset.py#L24. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodatahist.py#L24",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5430
https://github.com/root-project/root/pull/5432:59,deployability,patch,patch,59,"Add config switch to disable (x)proofd. Default OFF.; This patch disables default building proofd and proofx modules, the PROOF ones requiring XRootD. The possibility to build these modules is provided as legacy and controlled by the switch 'xproofd' (-Dxproofd=ON). Note that these modules require XRootD v4 and the xrootd-private-devel RPM installed (or equivalent on Debian systems). Or -Dbuiltin_xrootd=ON . The patch also fixes a possible segv introduced last February.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5432
https://github.com/root-project/root/pull/5432:82,deployability,build,building,82,"Add config switch to disable (x)proofd. Default OFF.; This patch disables default building proofd and proofx modules, the PROOF ones requiring XRootD. The possibility to build these modules is provided as legacy and controlled by the switch 'xproofd' (-Dxproofd=ON). Note that these modules require XRootD v4 and the xrootd-private-devel RPM installed (or equivalent on Debian systems). Or -Dbuiltin_xrootd=ON . The patch also fixes a possible segv introduced last February.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5432
https://github.com/root-project/root/pull/5432:109,deployability,modul,modules,109,"Add config switch to disable (x)proofd. Default OFF.; This patch disables default building proofd and proofx modules, the PROOF ones requiring XRootD. The possibility to build these modules is provided as legacy and controlled by the switch 'xproofd' (-Dxproofd=ON). Note that these modules require XRootD v4 and the xrootd-private-devel RPM installed (or equivalent on Debian systems). Or -Dbuiltin_xrootd=ON . The patch also fixes a possible segv introduced last February.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5432
https://github.com/root-project/root/pull/5432:170,deployability,build,build,170,"Add config switch to disable (x)proofd. Default OFF.; This patch disables default building proofd and proofx modules, the PROOF ones requiring XRootD. The possibility to build these modules is provided as legacy and controlled by the switch 'xproofd' (-Dxproofd=ON). Note that these modules require XRootD v4 and the xrootd-private-devel RPM installed (or equivalent on Debian systems). Or -Dbuiltin_xrootd=ON . The patch also fixes a possible segv introduced last February.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5432
https://github.com/root-project/root/pull/5432:182,deployability,modul,modules,182,"Add config switch to disable (x)proofd. Default OFF.; This patch disables default building proofd and proofx modules, the PROOF ones requiring XRootD. The possibility to build these modules is provided as legacy and controlled by the switch 'xproofd' (-Dxproofd=ON). Note that these modules require XRootD v4 and the xrootd-private-devel RPM installed (or equivalent on Debian systems). Or -Dbuiltin_xrootd=ON . The patch also fixes a possible segv introduced last February.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5432
https://github.com/root-project/root/pull/5432:283,deployability,modul,modules,283,"Add config switch to disable (x)proofd. Default OFF.; This patch disables default building proofd and proofx modules, the PROOF ones requiring XRootD. The possibility to build these modules is provided as legacy and controlled by the switch 'xproofd' (-Dxproofd=ON). Note that these modules require XRootD v4 and the xrootd-private-devel RPM installed (or equivalent on Debian systems). Or -Dbuiltin_xrootd=ON . The patch also fixes a possible segv introduced last February.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5432
https://github.com/root-project/root/pull/5432:342,deployability,instal,installed,342,"Add config switch to disable (x)proofd. Default OFF.; This patch disables default building proofd and proofx modules, the PROOF ones requiring XRootD. The possibility to build these modules is provided as legacy and controlled by the switch 'xproofd' (-Dxproofd=ON). Note that these modules require XRootD v4 and the xrootd-private-devel RPM installed (or equivalent on Debian systems). Or -Dbuiltin_xrootd=ON . The patch also fixes a possible segv introduced last February.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5432
https://github.com/root-project/root/pull/5432:416,deployability,patch,patch,416,"Add config switch to disable (x)proofd. Default OFF.; This patch disables default building proofd and proofx modules, the PROOF ones requiring XRootD. The possibility to build these modules is provided as legacy and controlled by the switch 'xproofd' (-Dxproofd=ON). Note that these modules require XRootD v4 and the xrootd-private-devel RPM installed (or equivalent on Debian systems). Or -Dbuiltin_xrootd=ON . The patch also fixes a possible segv introduced last February.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5432
https://github.com/root-project/root/pull/5432:109,modifiability,modul,modules,109,"Add config switch to disable (x)proofd. Default OFF.; This patch disables default building proofd and proofx modules, the PROOF ones requiring XRootD. The possibility to build these modules is provided as legacy and controlled by the switch 'xproofd' (-Dxproofd=ON). Note that these modules require XRootD v4 and the xrootd-private-devel RPM installed (or equivalent on Debian systems). Or -Dbuiltin_xrootd=ON . The patch also fixes a possible segv introduced last February.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5432
https://github.com/root-project/root/pull/5432:182,modifiability,modul,modules,182,"Add config switch to disable (x)proofd. Default OFF.; This patch disables default building proofd and proofx modules, the PROOF ones requiring XRootD. The possibility to build these modules is provided as legacy and controlled by the switch 'xproofd' (-Dxproofd=ON). Note that these modules require XRootD v4 and the xrootd-private-devel RPM installed (or equivalent on Debian systems). Or -Dbuiltin_xrootd=ON . The patch also fixes a possible segv introduced last February.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5432
https://github.com/root-project/root/pull/5432:283,modifiability,modul,modules,283,"Add config switch to disable (x)proofd. Default OFF.; This patch disables default building proofd and proofx modules, the PROOF ones requiring XRootD. The possibility to build these modules is provided as legacy and controlled by the switch 'xproofd' (-Dxproofd=ON). Note that these modules require XRootD v4 and the xrootd-private-devel RPM installed (or equivalent on Debian systems). Or -Dbuiltin_xrootd=ON . The patch also fixes a possible segv introduced last February.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5432
https://github.com/root-project/root/pull/5432:59,safety,patch,patch,59,"Add config switch to disable (x)proofd. Default OFF.; This patch disables default building proofd and proofx modules, the PROOF ones requiring XRootD. The possibility to build these modules is provided as legacy and controlled by the switch 'xproofd' (-Dxproofd=ON). Note that these modules require XRootD v4 and the xrootd-private-devel RPM installed (or equivalent on Debian systems). Or -Dbuiltin_xrootd=ON . The patch also fixes a possible segv introduced last February.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5432
https://github.com/root-project/root/pull/5432:109,safety,modul,modules,109,"Add config switch to disable (x)proofd. Default OFF.; This patch disables default building proofd and proofx modules, the PROOF ones requiring XRootD. The possibility to build these modules is provided as legacy and controlled by the switch 'xproofd' (-Dxproofd=ON). Note that these modules require XRootD v4 and the xrootd-private-devel RPM installed (or equivalent on Debian systems). Or -Dbuiltin_xrootd=ON . The patch also fixes a possible segv introduced last February.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5432
https://github.com/root-project/root/pull/5432:182,safety,modul,modules,182,"Add config switch to disable (x)proofd. Default OFF.; This patch disables default building proofd and proofx modules, the PROOF ones requiring XRootD. The possibility to build these modules is provided as legacy and controlled by the switch 'xproofd' (-Dxproofd=ON). Note that these modules require XRootD v4 and the xrootd-private-devel RPM installed (or equivalent on Debian systems). Or -Dbuiltin_xrootd=ON . The patch also fixes a possible segv introduced last February.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5432
https://github.com/root-project/root/pull/5432:283,safety,modul,modules,283,"Add config switch to disable (x)proofd. Default OFF.; This patch disables default building proofd and proofx modules, the PROOF ones requiring XRootD. The possibility to build these modules is provided as legacy and controlled by the switch 'xproofd' (-Dxproofd=ON). Note that these modules require XRootD v4 and the xrootd-private-devel RPM installed (or equivalent on Debian systems). Or -Dbuiltin_xrootd=ON . The patch also fixes a possible segv introduced last February.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5432
https://github.com/root-project/root/pull/5432:416,safety,patch,patch,416,"Add config switch to disable (x)proofd. Default OFF.; This patch disables default building proofd and proofx modules, the PROOF ones requiring XRootD. The possibility to build these modules is provided as legacy and controlled by the switch 'xproofd' (-Dxproofd=ON). Note that these modules require XRootD v4 and the xrootd-private-devel RPM installed (or equivalent on Debian systems). Or -Dbuiltin_xrootd=ON . The patch also fixes a possible segv introduced last February.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5432
https://github.com/root-project/root/pull/5432:59,security,patch,patch,59,"Add config switch to disable (x)proofd. Default OFF.; This patch disables default building proofd and proofx modules, the PROOF ones requiring XRootD. The possibility to build these modules is provided as legacy and controlled by the switch 'xproofd' (-Dxproofd=ON). Note that these modules require XRootD v4 and the xrootd-private-devel RPM installed (or equivalent on Debian systems). Or -Dbuiltin_xrootd=ON . The patch also fixes a possible segv introduced last February.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5432
https://github.com/root-project/root/pull/5432:216,security,control,controlled,216,"Add config switch to disable (x)proofd. Default OFF.; This patch disables default building proofd and proofx modules, the PROOF ones requiring XRootD. The possibility to build these modules is provided as legacy and controlled by the switch 'xproofd' (-Dxproofd=ON). Note that these modules require XRootD v4 and the xrootd-private-devel RPM installed (or equivalent on Debian systems). Or -Dbuiltin_xrootd=ON . The patch also fixes a possible segv introduced last February.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5432
https://github.com/root-project/root/pull/5432:416,security,patch,patch,416,"Add config switch to disable (x)proofd. Default OFF.; This patch disables default building proofd and proofx modules, the PROOF ones requiring XRootD. The possibility to build these modules is provided as legacy and controlled by the switch 'xproofd' (-Dxproofd=ON). Note that these modules require XRootD v4 and the xrootd-private-devel RPM installed (or equivalent on Debian systems). Or -Dbuiltin_xrootd=ON . The patch also fixes a possible segv introduced last February.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5432
https://github.com/root-project/root/pull/5432:216,testability,control,controlled,216,"Add config switch to disable (x)proofd. Default OFF.; This patch disables default building proofd and proofx modules, the PROOF ones requiring XRootD. The possibility to build these modules is provided as legacy and controlled by the switch 'xproofd' (-Dxproofd=ON). Note that these modules require XRootD v4 and the xrootd-private-devel RPM installed (or equivalent on Debian systems). Or -Dbuiltin_xrootd=ON . The patch also fixes a possible segv introduced last February.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5432
https://github.com/root-project/root/pull/5433:0,usability,undo,undo,0,undo fix to remove extra ///; Undo commit bed0e943466f5cc5c86bfaf434858ba1ab8202ca. It has some side effects for images inline via Macro_Begin/Macro End,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5433
https://github.com/root-project/root/pull/5433:30,usability,Undo,Undo,30,undo fix to remove extra ///; Undo commit bed0e943466f5cc5c86bfaf434858ba1ab8202ca. It has some side effects for images inline via Macro_Begin/Macro End,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5433
https://github.com/root-project/root/pull/5434:68,safety,test,tests,68,"[Math] Replace add_subdirectory by ROOT_ADD_TEST_SUBDIRECTORY.; The tests for TFoam ended up in the wrong location, since. add_subdirectory is not setting the required property.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5434
https://github.com/root-project/root/pull/5434:68,testability,test,tests,68,"[Math] Replace add_subdirectory by ROOT_ADD_TEST_SUBDIRECTORY.; The tests for TFoam ended up in the wrong location, since. add_subdirectory is not setting the required property.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5434
https://github.com/root-project/root/pull/5435:96,deployability,contain,contain,96,Eve-7 show entire scene on camera reset; Change in resetThreejsRenderer() : set frustum size to contain entire scene.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5435
https://github.com/root-project/root/pull/5436:186,deployability,fail,fails,186,"[treeplayer] Try harder to find leaf count (ROOT-10397):; Before, the leaf count was assumed to exist at the same level as the leaf to be read,. e.g. a.b.x[n] would look for a.b.n. That fails if n is coming from a ""higher level"". Now, TUIntOrIntReader also looks for a.n and n, if a.b.n is not found. And add the repro test for this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5436
https://github.com/root-project/root/pull/5436:186,reliability,fail,fails,186,"[treeplayer] Try harder to find leaf count (ROOT-10397):; Before, the leaf count was assumed to exist at the same level as the leaf to be read,. e.g. a.b.x[n] would look for a.b.n. That fails if n is coming from a ""higher level"". Now, TUIntOrIntReader also looks for a.n and n, if a.b.n is not found. And add the repro test for this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5436
https://github.com/root-project/root/pull/5436:319,safety,test,test,319,"[treeplayer] Try harder to find leaf count (ROOT-10397):; Before, the leaf count was assumed to exist at the same level as the leaf to be read,. e.g. a.b.x[n] would look for a.b.n. That fails if n is coming from a ""higher level"". Now, TUIntOrIntReader also looks for a.n and n, if a.b.n is not found. And add the repro test for this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5436
https://github.com/root-project/root/pull/5436:319,testability,test,test,319,"[treeplayer] Try harder to find leaf count (ROOT-10397):; Before, the leaf count was assumed to exist at the same level as the leaf to be read,. e.g. a.b.x[n] would look for a.b.n. That fails if n is coming from a ""higher level"". Now, TUIntOrIntReader also looks for a.n and n, if a.b.n is not found. And add the repro test for this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5436
https://github.com/root-project/root/pull/5437:25,deployability,depend,dependency,25,[RF] Add missing Smatrix dependency for RooFitCore.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5437
https://github.com/root-project/root/pull/5437:25,integrability,depend,dependency,25,[RF] Add missing Smatrix dependency for RooFitCore.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5437
https://github.com/root-project/root/pull/5437:25,modifiability,depend,dependency,25,[RF] Add missing Smatrix dependency for RooFitCore.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5437
https://github.com/root-project/root/pull/5437:25,safety,depend,dependency,25,[RF] Add missing Smatrix dependency for RooFitCore.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5437
https://github.com/root-project/root/pull/5437:25,testability,depend,dependency,25,[RF] Add missing Smatrix dependency for RooFitCore.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5437
https://github.com/root-project/root/pull/5439:13,deployability,depend,dependency,13,"add MathMore dependency to roofit; When MathMore compiled, rootfit uses includes from MathMore. To do this, roofit has to depend on `MathMore`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:122,deployability,depend,depend,122,"add MathMore dependency to roofit; When MathMore compiled, rootfit uses includes from MathMore. To do this, roofit has to depend on `MathMore`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:13,integrability,depend,dependency,13,"add MathMore dependency to roofit; When MathMore compiled, rootfit uses includes from MathMore. To do this, roofit has to depend on `MathMore`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:122,integrability,depend,depend,122,"add MathMore dependency to roofit; When MathMore compiled, rootfit uses includes from MathMore. To do this, roofit has to depend on `MathMore`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:13,modifiability,depend,dependency,13,"add MathMore dependency to roofit; When MathMore compiled, rootfit uses includes from MathMore. To do this, roofit has to depend on `MathMore`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:122,modifiability,depend,depend,122,"add MathMore dependency to roofit; When MathMore compiled, rootfit uses includes from MathMore. To do this, roofit has to depend on `MathMore`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:13,safety,depend,dependency,13,"add MathMore dependency to roofit; When MathMore compiled, rootfit uses includes from MathMore. To do this, roofit has to depend on `MathMore`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:122,safety,depend,depend,122,"add MathMore dependency to roofit; When MathMore compiled, rootfit uses includes from MathMore. To do this, roofit has to depend on `MathMore`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:13,testability,depend,dependency,13,"add MathMore dependency to roofit; When MathMore compiled, rootfit uses includes from MathMore. To do this, roofit has to depend on `MathMore`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5439:122,testability,depend,depend,122,"add MathMore dependency to roofit; When MathMore compiled, rootfit uses includes from MathMore. To do this, roofit has to depend on `MathMore`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5441:503,deployability,build,builds,503,"Add 3 new tutorials for TMVA deep learning:; - TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA. The macro generates on the fly some toys images (size 16x16) of two different classes and then a. convolutional neural network is used for their classification. This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package. This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA. Toys time dependednt data of two different classes are generated on the fly and then. a recurrent neural network is used for classification. Both TMVA and PyKeras networks are built and used. The network uses by default one LSTM layer, but optionally it can be built with. a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type. can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:768,deployability,depend,dependednt,768,"Add 3 new tutorials for TMVA deep learning:; - TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA. The macro generates on the fly some toys images (size 16x16) of two different classes and then a. convolutional neural network is used for their classification. This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package. This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA. Toys time dependednt data of two different classes are generated on the fly and then. a recurrent neural network is used for classification. Both TMVA and PyKeras networks are built and used. The network uses by default one LSTM layer, but optionally it can be built with. a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type. can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:97,integrability,pub,public,97,"Add 3 new tutorials for TMVA deep learning:; - TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA. The macro generates on the fly some toys images (size 16x16) of two different classes and then a. convolutional neural network is used for their classification. This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package. This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA. Toys time dependednt data of two different classes are generated on the fly and then. a recurrent neural network is used for classification. Both TMVA and PyKeras networks are built and used. The network uses by default one LSTM layer, but optionally it can be built with. a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type. can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:630,integrability,batch,batch,630,"Add 3 new tutorials for TMVA deep learning:; - TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA. The macro generates on the fly some toys images (size 16x16) of two different classes and then a. convolutional neural network is used for their classification. This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package. This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA. Toys time dependednt data of two different classes are generated on the fly and then. a recurrent neural network is used for classification. Both TMVA and PyKeras networks are built and used. The network uses by default one LSTM layer, but optionally it can be built with. a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type. can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:768,integrability,depend,dependednt,768,"Add 3 new tutorials for TMVA deep learning:; - TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA. The macro generates on the fly some toys images (size 16x16) of two different classes and then a. convolutional neural network is used for their classification. This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package. This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA. Toys time dependednt data of two different classes are generated on the fly and then. a recurrent neural network is used for classification. Both TMVA and PyKeras networks are built and used. The network uses by default one LSTM layer, but optionally it can be built with. a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type. can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:224,modifiability,layer,layers,224,"Add 3 new tutorials for TMVA deep learning:; - TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA. The macro generates on the fly some toys images (size 16x16) of two different classes and then a. convolutional neural network is used for their classification. This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package. This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA. Toys time dependednt data of two different classes are generated on the fly and then. a recurrent neural network is used for classification. Both TMVA and PyKeras networks are built and used. The network uses by default one LSTM layer, but optionally it can be built with. a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type. can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:584,modifiability,pac,package,584,"Add 3 new tutorials for TMVA deep learning:; - TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA. The macro generates on the fly some toys images (size 16x16) of two different classes and then a. convolutional neural network is used for their classification. This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package. This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA. Toys time dependednt data of two different classes are generated on the fly and then. a recurrent neural network is used for classification. Both TMVA and PyKeras networks are built and used. The network uses by default one LSTM layer, but optionally it can be built with. a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type. can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:650,modifiability,layer,layer,650,"Add 3 new tutorials for TMVA deep learning:; - TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA. The macro generates on the fly some toys images (size 16x16) of two different classes and then a. convolutional neural network is used for their classification. This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package. This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA. Toys time dependednt data of two different classes are generated on the fly and then. a recurrent neural network is used for classification. Both TMVA and PyKeras networks are built and used. The network uses by default one LSTM layer, but optionally it can be built with. a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type. can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:768,modifiability,depend,dependednt,768,"Add 3 new tutorials for TMVA deep learning:; - TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA. The macro generates on the fly some toys images (size 16x16) of two different classes and then a. convolutional neural network is used for their classification. This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package. This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA. Toys time dependednt data of two different classes are generated on the fly and then. a recurrent neural network is used for classification. Both TMVA and PyKeras networks are built and used. The network uses by default one LSTM layer, but optionally it can be built with. a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type. can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:987,modifiability,layer,layer,987,"Add 3 new tutorials for TMVA deep learning:; - TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA. The macro generates on the fly some toys images (size 16x16) of two different classes and then a. convolutional neural network is used for their classification. This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package. This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA. Toys time dependednt data of two different classes are generated on the fly and then. a recurrent neural network is used for classification. Both TMVA and PyKeras networks are built and used. The network uses by default one LSTM layer, but optionally it can be built with. a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type. can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:1053,modifiability,layer,layer,1053,"Add 3 new tutorials for TMVA deep learning:; - TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA. The macro generates on the fly some toys images (size 16x16) of two different classes and then a. convolutional neural network is used for their classification. This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package. This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA. Toys time dependednt data of two different classes are generated on the fly and then. a recurrent neural network is used for classification. Both TMVA and PyKeras networks are built and used. The network uses by default one LSTM layer, but optionally it can be built with. a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type. can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:1117,modifiability,layer,layer,1117,"Add 3 new tutorials for TMVA deep learning:; - TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA. The macro generates on the fly some toys images (size 16x16) of two different classes and then a. convolutional neural network is used for their classification. This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package. This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA. Toys time dependednt data of two different classes are generated on the fly and then. a recurrent neural network is used for classification. Both TMVA and PyKeras networks are built and used. The network uses by default one LSTM layer, but optionally it can be built with. a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type. can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:171,performance,network,network,171,"Add 3 new tutorials for TMVA deep learning:; - TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA. The macro generates on the fly some toys images (size 16x16) of two different classes and then a. convolutional neural network is used for their classification. This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package. This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA. Toys time dependednt data of two different classes are generated on the fly and then. a recurrent neural network is used for classification. Both TMVA and PyKeras networks are built and used. The network uses by default one LSTM layer, but optionally it can be built with. a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type. can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:312,performance,network,network,312,"Add 3 new tutorials for TMVA deep learning:; - TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA. The macro generates on the fly some toys images (size 16x16) of two different classes and then a. convolutional neural network is used for their classification. This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package. This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA. Toys time dependednt data of two different classes are generated on the fly and then. a recurrent neural network is used for classification. Both TMVA and PyKeras networks are built and used. The network uses by default one LSTM layer, but optionally it can be built with. a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type. can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:448,performance,network,network,448,"Add 3 new tutorials for TMVA deep learning:; - TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA. The macro generates on the fly some toys images (size 16x16) of two different classes and then a. convolutional neural network is used for their classification. This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package. This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA. Toys time dependednt data of two different classes are generated on the fly and then. a recurrent neural network is used for classification. Both TMVA and PyKeras networks are built and used. The network uses by default one LSTM layer, but optionally it can be built with. a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type. can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:630,performance,batch,batch,630,"Add 3 new tutorials for TMVA deep learning:; - TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA. The macro generates on the fly some toys images (size 16x16) of two different classes and then a. convolutional neural network is used for their classification. This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package. This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA. Toys time dependednt data of two different classes are generated on the fly and then. a recurrent neural network is used for classification. Both TMVA and PyKeras networks are built and used. The network uses by default one LSTM layer, but optionally it can be built with. a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type. can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:741,performance,network,network,741,"Add 3 new tutorials for TMVA deep learning:; - TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA. The macro generates on the fly some toys images (size 16x16) of two different classes and then a. convolutional neural network is used for their classification. This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package. This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA. Toys time dependednt data of two different classes are generated on the fly and then. a recurrent neural network is used for classification. Both TMVA and PyKeras networks are built and used. The network uses by default one LSTM layer, but optionally it can be built with. a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type. can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:763,performance,time,time,763,"Add 3 new tutorials for TMVA deep learning:; - TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA. The macro generates on the fly some toys images (size 16x16) of two different classes and then a. convolutional neural network is used for their classification. This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package. This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA. Toys time dependednt data of two different classes are generated on the fly and then. a recurrent neural network is used for classification. Both TMVA and PyKeras networks are built and used. The network uses by default one LSTM layer, but optionally it can be built with. a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type. can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:863,performance,network,network,863,"Add 3 new tutorials for TMVA deep learning:; - TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA. The macro generates on the fly some toys images (size 16x16) of two different classes and then a. convolutional neural network is used for their classification. This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package. This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA. Toys time dependednt data of two different classes are generated on the fly and then. a recurrent neural network is used for classification. Both TMVA and PyKeras networks are built and used. The network uses by default one LSTM layer, but optionally it can be built with. a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type. can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:921,performance,network,networks,921,"Add 3 new tutorials for TMVA deep learning:; - TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA. The macro generates on the fly some toys images (size 16x16) of two different classes and then a. convolutional neural network is used for their classification. This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package. This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA. Toys time dependednt data of two different classes are generated on the fly and then. a recurrent neural network is used for classification. Both TMVA and PyKeras networks are built and used. The network uses by default one LSTM layer, but optionally it can be built with. a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type. can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:954,performance,network,network,954,"Add 3 new tutorials for TMVA deep learning:; - TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA. The macro generates on the fly some toys images (size 16x16) of two different classes and then a. convolutional neural network is used for their classification. This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package. This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA. Toys time dependednt data of two different classes are generated on the fly and then. a recurrent neural network is used for classification. Both TMVA and PyKeras networks are built and used. The network uses by default one LSTM layer, but optionally it can be built with. a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type. can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:1089,performance,network,networks,1089,"Add 3 new tutorials for TMVA deep learning:; - TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA. The macro generates on the fly some toys images (size 16x16) of two different classes and then a. convolutional neural network is used for their classification. This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package. This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA. Toys time dependednt data of two different classes are generated on the fly and then. a recurrent neural network is used for classification. Both TMVA and PyKeras networks are built and used. The network uses by default one LSTM layer, but optionally it can be built with. a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type. can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:768,safety,depend,dependednt,768,"Add 3 new tutorials for TMVA deep learning:; - TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA. The macro generates on the fly some toys images (size 16x16) of two different classes and then a. convolutional neural network is used for their classification. This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package. This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA. Toys time dependednt data of two different classes are generated on the fly and then. a recurrent neural network is used for classification. Both TMVA and PyKeras networks are built and used. The network uses by default one LSTM layer, but optionally it can be built with. a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type. can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:171,security,network,network,171,"Add 3 new tutorials for TMVA deep learning:; - TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA. The macro generates on the fly some toys images (size 16x16) of two different classes and then a. convolutional neural network is used for their classification. This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package. This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA. Toys time dependednt data of two different classes are generated on the fly and then. a recurrent neural network is used for classification. Both TMVA and PyKeras networks are built and used. The network uses by default one LSTM layer, but optionally it can be built with. a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type. can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:312,security,network,network,312,"Add 3 new tutorials for TMVA deep learning:; - TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA. The macro generates on the fly some toys images (size 16x16) of two different classes and then a. convolutional neural network is used for their classification. This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package. This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA. Toys time dependednt data of two different classes are generated on the fly and then. a recurrent neural network is used for classification. Both TMVA and PyKeras networks are built and used. The network uses by default one LSTM layer, but optionally it can be built with. a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type. can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:448,security,network,network,448,"Add 3 new tutorials for TMVA deep learning:; - TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA. The macro generates on the fly some toys images (size 16x16) of two different classes and then a. convolutional neural network is used for their classification. This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package. This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA. Toys time dependednt data of two different classes are generated on the fly and then. a recurrent neural network is used for classification. Both TMVA and PyKeras networks are built and used. The network uses by default one LSTM layer, but optionally it can be built with. a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type. can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:741,security,network,network,741,"Add 3 new tutorials for TMVA deep learning:; - TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA. The macro generates on the fly some toys images (size 16x16) of two different classes and then a. convolutional neural network is used for their classification. This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package. This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA. Toys time dependednt data of two different classes are generated on the fly and then. a recurrent neural network is used for classification. Both TMVA and PyKeras networks are built and used. The network uses by default one LSTM layer, but optionally it can be built with. a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type. can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:863,security,network,network,863,"Add 3 new tutorials for TMVA deep learning:; - TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA. The macro generates on the fly some toys images (size 16x16) of two different classes and then a. convolutional neural network is used for their classification. This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package. This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA. Toys time dependednt data of two different classes are generated on the fly and then. a recurrent neural network is used for classification. Both TMVA and PyKeras networks are built and used. The network uses by default one LSTM layer, but optionally it can be built with. a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type. can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:921,security,network,networks,921,"Add 3 new tutorials for TMVA deep learning:; - TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA. The macro generates on the fly some toys images (size 16x16) of two different classes and then a. convolutional neural network is used for their classification. This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package. This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA. Toys time dependednt data of two different classes are generated on the fly and then. a recurrent neural network is used for classification. Both TMVA and PyKeras networks are built and used. The network uses by default one LSTM layer, but optionally it can be built with. a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type. can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:954,security,network,network,954,"Add 3 new tutorials for TMVA deep learning:; - TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA. The macro generates on the fly some toys images (size 16x16) of two different classes and then a. convolutional neural network is used for their classification. This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package. This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA. Toys time dependednt data of two different classes are generated on the fly and then. a recurrent neural network is used for classification. Both TMVA and PyKeras networks are built and used. The network uses by default one LSTM layer, but optionally it can be built with. a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type. can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:1089,security,network,networks,1089,"Add 3 new tutorials for TMVA deep learning:; - TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA. The macro generates on the fly some toys images (size 16x16) of two different classes and then a. convolutional neural network is used for their classification. This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package. This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA. Toys time dependednt data of two different classes are generated on the fly and then. a recurrent neural network is used for classification. Both TMVA and PyKeras networks are built and used. The network uses by default one LSTM layer, but optionally it can be built with. a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type. can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:768,testability,depend,dependednt,768,"Add 3 new tutorials for TMVA deep learning:; - TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA. The macro generates on the fly some toys images (size 16x16) of two different classes and then a. convolutional neural network is used for their classification. This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package. This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA. Toys time dependednt data of two different classes are generated on the fly and then. a recurrent neural network is used for classification. Both TMVA and PyKeras networks are built and used. The network uses by default one LSTM layer, but optionally it can be built with. a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type. can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:1033,testability,simpl,simple,1033,"Add 3 new tutorials for TMVA deep learning:; - TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA. The macro generates on the fly some toys images (size 16x16) of two different classes and then a. convolutional neural network is used for their classification. This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package. This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA. Toys time dependednt data of two different classes are generated on the fly and then. a recurrent neural network is used for classification. Both TMVA and PyKeras networks are built and used. The network uses by default one LSTM layer, but optionally it can be built with. a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type. can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:34,usability,learn,learning,34,"Add 3 new tutorials for TMVA deep learning:; - TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA. The macro generates on the fly some toys images (size 16x16) of two different classes and then a. convolutional neural network is used for their classification. This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package. This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA. Toys time dependednt data of two different classes are generated on the fly and then. a recurrent neural network is used for classification. Both TMVA and PyKeras networks are built and used. The network uses by default one LSTM layer, but optionally it can be built with. a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type. can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:1033,usability,simpl,simple,1033,"Add 3 new tutorials for TMVA deep learning:; - TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA. The macro generates on the fly some toys images (size 16x16) of two different classes and then a. convolutional neural network is used for their classification. This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package. This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA. Toys time dependednt data of two different classes are generated on the fly and then. a recurrent neural network is used for classification. Both TMVA and PyKeras networks are built and used. The network uses by default one LSTM layer, but optionally it can be built with. a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type. can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5442:46,integrability,buffer,buffer,46,LabelsOption did not work for histograms with buffer; This PR fixes https://sft.its.cern.ch/jira/browse/ROOT-10700,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5442
https://github.com/root-project/root/pull/5443:22,deployability,depend,dependent,22,"[cxxmodules] Load the dependent modules for both rootcling and rootcling_stage1; cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:32,deployability,modul,modules,32,"[cxxmodules] Load the dependent modules for both rootcling and rootcling_stage1; cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:13,energy efficiency,Load,Load,13,"[cxxmodules] Load the dependent modules for both rootcling and rootcling_stage1; cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:22,integrability,depend,dependent,22,"[cxxmodules] Load the dependent modules for both rootcling and rootcling_stage1; cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:22,modifiability,depend,dependent,22,"[cxxmodules] Load the dependent modules for both rootcling and rootcling_stage1; cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:32,modifiability,modul,modules,32,"[cxxmodules] Load the dependent modules for both rootcling and rootcling_stage1; cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:13,performance,Load,Load,13,"[cxxmodules] Load the dependent modules for both rootcling and rootcling_stage1; cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:22,safety,depend,dependent,22,"[cxxmodules] Load the dependent modules for both rootcling and rootcling_stage1; cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:32,safety,modul,modules,32,"[cxxmodules] Load the dependent modules for both rootcling and rootcling_stage1; cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5443:22,testability,depend,dependent,22,"[cxxmodules] Load the dependent modules for both rootcling and rootcling_stage1; cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5443
https://github.com/root-project/root/pull/5444:39,deployability,contain,contain,39,[dyld-v620] Ignore ELF libraries which contain no symbols.; In setups where we have debug symbols in a separate library the .gnu.hash. section appears invalid. Clients can strip the debug symbols into a separate. library by:. objcopy --only-keep-debug libA.so libA.so.dbg. objcopy --strip-debug libA.so. objcopy --add-gnu-debuglink=libA.so.dbg libA.so. This should fix an issue reported by ATLAS when migrating to ROOT v6.20.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5444
https://github.com/root-project/root/pull/5444:129,security,hash,hash,129,[dyld-v620] Ignore ELF libraries which contain no symbols.; In setups where we have debug symbols in a separate library the .gnu.hash. section appears invalid. Clients can strip the debug symbols into a separate. library by:. objcopy --only-keep-debug libA.so libA.so.dbg. objcopy --strip-debug libA.so. objcopy --add-gnu-debuglink=libA.so.dbg libA.so. This should fix an issue reported by ATLAS when migrating to ROOT v6.20.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5444
https://github.com/root-project/root/pull/5445:15,deployability,build,build,15,"Fix cxxmodules build on Linux; To be able compile with `-Dcxxmodules=ON`, one has to avoid `${CMAKE_BINARY_DIR}/include` in all include paths. Otherwise compiler can find same include (like `TString.h`) in ROOT source directories and in `${CMAKE_BINARY_DIR}/include`. But many builtins using `${CMAKE_BINARY_DIR}/include` to install their headers and therefore library appends that path to public include paths. . This PR tries to copy `VDT` and `TBB` includes into `ginclude` directory and use this directory for the compilation. . Solves compilation problem on Linux platform with `cxxmodules` enabled. Probably same adjustment could be done for other builtins",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:325,deployability,instal,install,325,"Fix cxxmodules build on Linux; To be able compile with `-Dcxxmodules=ON`, one has to avoid `${CMAKE_BINARY_DIR}/include` in all include paths. Otherwise compiler can find same include (like `TString.h`) in ROOT source directories and in `${CMAKE_BINARY_DIR}/include`. But many builtins using `${CMAKE_BINARY_DIR}/include` to install their headers and therefore library appends that path to public include paths. . This PR tries to copy `VDT` and `TBB` includes into `ginclude` directory and use this directory for the compilation. . Solves compilation problem on Linux platform with `cxxmodules` enabled. Probably same adjustment could be done for other builtins",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:390,integrability,pub,public,390,"Fix cxxmodules build on Linux; To be able compile with `-Dcxxmodules=ON`, one has to avoid `${CMAKE_BINARY_DIR}/include` in all include paths. Otherwise compiler can find same include (like `TString.h`) in ROOT source directories and in `${CMAKE_BINARY_DIR}/include`. But many builtins using `${CMAKE_BINARY_DIR}/include` to install their headers and therefore library appends that path to public include paths. . This PR tries to copy `VDT` and `TBB` includes into `ginclude` directory and use this directory for the compilation. . Solves compilation problem on Linux platform with `cxxmodules` enabled. Probably same adjustment could be done for other builtins",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:569,interoperability,platform,platform,569,"Fix cxxmodules build on Linux; To be able compile with `-Dcxxmodules=ON`, one has to avoid `${CMAKE_BINARY_DIR}/include` in all include paths. Otherwise compiler can find same include (like `TString.h`) in ROOT source directories and in `${CMAKE_BINARY_DIR}/include`. But many builtins using `${CMAKE_BINARY_DIR}/include` to install their headers and therefore library appends that path to public include paths. . This PR tries to copy `VDT` and `TBB` includes into `ginclude` directory and use this directory for the compilation. . Solves compilation problem on Linux platform with `cxxmodules` enabled. Probably same adjustment could be done for other builtins",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:85,safety,avoid,avoid,85,"Fix cxxmodules build on Linux; To be able compile with `-Dcxxmodules=ON`, one has to avoid `${CMAKE_BINARY_DIR}/include` in all include paths. Otherwise compiler can find same include (like `TString.h`) in ROOT source directories and in `${CMAKE_BINARY_DIR}/include`. But many builtins using `${CMAKE_BINARY_DIR}/include` to install their headers and therefore library appends that path to public include paths. . This PR tries to copy `VDT` and `TBB` includes into `ginclude` directory and use this directory for the compilation. . Solves compilation problem on Linux platform with `cxxmodules` enabled. Probably same adjustment could be done for other builtins",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5446:47,availability,error,error,47,"TProcessID::RecursiveRemove: prevent spurrious error msg.; Prior to this change, TProcessID::RecursiveRemove would call TExMap::Remove without checking whether the object was in that map or not. In addition TExMap::Remove complains if it can not be found. This resulted in spurious error message when the number of TProcessID increased passed 255 but some of the object with lower index TProcessID were deleted. See https://root-forum.cern.ch/t/resetting-tprocessid-objectcount-in-multihtreading-environment/38899. for a concrete example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5446
https://github.com/root-project/root/pull/5446:282,availability,error,error,282,"TProcessID::RecursiveRemove: prevent spurrious error msg.; Prior to this change, TProcessID::RecursiveRemove would call TExMap::Remove without checking whether the object was in that map or not. In addition TExMap::Remove complains if it can not be found. This resulted in spurious error message when the number of TProcessID increased passed 255 but some of the object with lower index TProcessID were deleted. See https://root-forum.cern.ch/t/resetting-tprocessid-objectcount-in-multihtreading-environment/38899. for a concrete example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5446
https://github.com/root-project/root/pull/5446:288,integrability,messag,message,288,"TProcessID::RecursiveRemove: prevent spurrious error msg.; Prior to this change, TProcessID::RecursiveRemove would call TExMap::Remove without checking whether the object was in that map or not. In addition TExMap::Remove complains if it can not be found. This resulted in spurious error message when the number of TProcessID increased passed 255 but some of the object with lower index TProcessID were deleted. See https://root-forum.cern.ch/t/resetting-tprocessid-objectcount-in-multihtreading-environment/38899. for a concrete example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5446
https://github.com/root-project/root/pull/5446:288,interoperability,messag,message,288,"TProcessID::RecursiveRemove: prevent spurrious error msg.; Prior to this change, TProcessID::RecursiveRemove would call TExMap::Remove without checking whether the object was in that map or not. In addition TExMap::Remove complains if it can not be found. This resulted in spurious error message when the number of TProcessID increased passed 255 but some of the object with lower index TProcessID were deleted. See https://root-forum.cern.ch/t/resetting-tprocessid-objectcount-in-multihtreading-environment/38899. for a concrete example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5446
https://github.com/root-project/root/pull/5446:47,performance,error,error,47,"TProcessID::RecursiveRemove: prevent spurrious error msg.; Prior to this change, TProcessID::RecursiveRemove would call TExMap::Remove without checking whether the object was in that map or not. In addition TExMap::Remove complains if it can not be found. This resulted in spurious error message when the number of TProcessID increased passed 255 but some of the object with lower index TProcessID were deleted. See https://root-forum.cern.ch/t/resetting-tprocessid-objectcount-in-multihtreading-environment/38899. for a concrete example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5446
https://github.com/root-project/root/pull/5446:282,performance,error,error,282,"TProcessID::RecursiveRemove: prevent spurrious error msg.; Prior to this change, TProcessID::RecursiveRemove would call TExMap::Remove without checking whether the object was in that map or not. In addition TExMap::Remove complains if it can not be found. This resulted in spurious error message when the number of TProcessID increased passed 255 but some of the object with lower index TProcessID were deleted. See https://root-forum.cern.ch/t/resetting-tprocessid-objectcount-in-multihtreading-environment/38899. for a concrete example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5446
https://github.com/root-project/root/pull/5446:29,safety,prevent,prevent,29,"TProcessID::RecursiveRemove: prevent spurrious error msg.; Prior to this change, TProcessID::RecursiveRemove would call TExMap::Remove without checking whether the object was in that map or not. In addition TExMap::Remove complains if it can not be found. This resulted in spurious error message when the number of TProcessID increased passed 255 but some of the object with lower index TProcessID were deleted. See https://root-forum.cern.ch/t/resetting-tprocessid-objectcount-in-multihtreading-environment/38899. for a concrete example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5446
https://github.com/root-project/root/pull/5446:47,safety,error,error,47,"TProcessID::RecursiveRemove: prevent spurrious error msg.; Prior to this change, TProcessID::RecursiveRemove would call TExMap::Remove without checking whether the object was in that map or not. In addition TExMap::Remove complains if it can not be found. This resulted in spurious error message when the number of TProcessID increased passed 255 but some of the object with lower index TProcessID were deleted. See https://root-forum.cern.ch/t/resetting-tprocessid-objectcount-in-multihtreading-environment/38899. for a concrete example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5446
https://github.com/root-project/root/pull/5446:222,safety,compl,complains,222,"TProcessID::RecursiveRemove: prevent spurrious error msg.; Prior to this change, TProcessID::RecursiveRemove would call TExMap::Remove without checking whether the object was in that map or not. In addition TExMap::Remove complains if it can not be found. This resulted in spurious error message when the number of TProcessID increased passed 255 but some of the object with lower index TProcessID were deleted. See https://root-forum.cern.ch/t/resetting-tprocessid-objectcount-in-multihtreading-environment/38899. for a concrete example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5446
https://github.com/root-project/root/pull/5446:282,safety,error,error,282,"TProcessID::RecursiveRemove: prevent spurrious error msg.; Prior to this change, TProcessID::RecursiveRemove would call TExMap::Remove without checking whether the object was in that map or not. In addition TExMap::Remove complains if it can not be found. This resulted in spurious error message when the number of TProcessID increased passed 255 but some of the object with lower index TProcessID were deleted. See https://root-forum.cern.ch/t/resetting-tprocessid-objectcount-in-multihtreading-environment/38899. for a concrete example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5446
https://github.com/root-project/root/pull/5446:29,security,preven,prevent,29,"TProcessID::RecursiveRemove: prevent spurrious error msg.; Prior to this change, TProcessID::RecursiveRemove would call TExMap::Remove without checking whether the object was in that map or not. In addition TExMap::Remove complains if it can not be found. This resulted in spurious error message when the number of TProcessID increased passed 255 but some of the object with lower index TProcessID were deleted. See https://root-forum.cern.ch/t/resetting-tprocessid-objectcount-in-multihtreading-environment/38899. for a concrete example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5446
https://github.com/root-project/root/pull/5446:222,security,compl,complains,222,"TProcessID::RecursiveRemove: prevent spurrious error msg.; Prior to this change, TProcessID::RecursiveRemove would call TExMap::Remove without checking whether the object was in that map or not. In addition TExMap::Remove complains if it can not be found. This resulted in spurious error message when the number of TProcessID increased passed 255 but some of the object with lower index TProcessID were deleted. See https://root-forum.cern.ch/t/resetting-tprocessid-objectcount-in-multihtreading-environment/38899. for a concrete example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5446
https://github.com/root-project/root/pull/5446:47,usability,error,error,47,"TProcessID::RecursiveRemove: prevent spurrious error msg.; Prior to this change, TProcessID::RecursiveRemove would call TExMap::Remove without checking whether the object was in that map or not. In addition TExMap::Remove complains if it can not be found. This resulted in spurious error message when the number of TProcessID increased passed 255 but some of the object with lower index TProcessID were deleted. See https://root-forum.cern.ch/t/resetting-tprocessid-objectcount-in-multihtreading-environment/38899. for a concrete example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5446
https://github.com/root-project/root/pull/5446:282,usability,error,error,282,"TProcessID::RecursiveRemove: prevent spurrious error msg.; Prior to this change, TProcessID::RecursiveRemove would call TExMap::Remove without checking whether the object was in that map or not. In addition TExMap::Remove complains if it can not be found. This resulted in spurious error message when the number of TProcessID increased passed 255 but some of the object with lower index TProcessID were deleted. See https://root-forum.cern.ch/t/resetting-tprocessid-objectcount-in-multihtreading-environment/38899. for a concrete example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5446
https://github.com/root-project/root/pull/5447:38,deployability,patch,patch,38,cppyy is a third-party library.; This patch tells cmake not to call rootcling ... -m cppyy3_7.pcm as if cppyy has a dictionary.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5447
https://github.com/root-project/root/pull/5447:38,safety,patch,patch,38,cppyy is a third-party library.; This patch tells cmake not to call rootcling ... -m cppyy3_7.pcm as if cppyy has a dictionary.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5447
https://github.com/root-project/root/pull/5447:38,security,patch,patch,38,cppyy is a third-party library.; This patch tells cmake not to call rootcling ... -m cppyy3_7.pcm as if cppyy has a dictionary.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5447
https://github.com/root-project/root/pull/5448:21,deployability,depend,dependency,21,Make IMT an optional dependency.; This is part of PR #5443,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5448
https://github.com/root-project/root/pull/5448:21,integrability,depend,dependency,21,Make IMT an optional dependency.; This is part of PR #5443,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5448
https://github.com/root-project/root/pull/5448:21,modifiability,depend,dependency,21,Make IMT an optional dependency.; This is part of PR #5443,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5448
https://github.com/root-project/root/pull/5448:21,safety,depend,dependency,21,Make IMT an optional dependency.; This is part of PR #5443,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5448
https://github.com/root-project/root/pull/5448:21,testability,depend,dependency,21,Make IMT an optional dependency.; This is part of PR #5443,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5448
https://github.com/root-project/root/pull/5449:10,deployability,build,build,10,We do not build a dictionary for GQuartz.; ROOT_STANDARD_LIBRARY_PACKAGE passes all DEPENDENCIES to roocling via ROOT_GENERATE_DICTIONARY. This is part of PR #5443,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5449
https://github.com/root-project/root/pull/5449:84,deployability,DEPEND,DEPENDENCIES,84,We do not build a dictionary for GQuartz.; ROOT_STANDARD_LIBRARY_PACKAGE passes all DEPENDENCIES to roocling via ROOT_GENERATE_DICTIONARY. This is part of PR #5443,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5449
https://github.com/root-project/root/pull/5449:84,integrability,DEPEND,DEPENDENCIES,84,We do not build a dictionary for GQuartz.; ROOT_STANDARD_LIBRARY_PACKAGE passes all DEPENDENCIES to roocling via ROOT_GENERATE_DICTIONARY. This is part of PR #5443,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5449
https://github.com/root-project/root/pull/5449:84,modifiability,DEPEND,DEPENDENCIES,84,We do not build a dictionary for GQuartz.; ROOT_STANDARD_LIBRARY_PACKAGE passes all DEPENDENCIES to roocling via ROOT_GENERATE_DICTIONARY. This is part of PR #5443,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5449
https://github.com/root-project/root/pull/5449:84,safety,DEPEND,DEPENDENCIES,84,We do not build a dictionary for GQuartz.; ROOT_STANDARD_LIBRARY_PACKAGE passes all DEPENDENCIES to roocling via ROOT_GENERATE_DICTIONARY. This is part of PR #5443,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5449
https://github.com/root-project/root/pull/5449:84,testability,DEPEND,DEPENDENCIES,84,We do not build a dictionary for GQuartz.; ROOT_STANDARD_LIBRARY_PACKAGE passes all DEPENDENCIES to roocling via ROOT_GENERATE_DICTIONARY. This is part of PR #5443,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5449
https://github.com/root-project/root/pull/5450:305,availability,Error,Error,305,"Fix directory name for correct installation of ROOT; ```-- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/roots. -- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/proofserv. -- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/xproofd. CMake Error at cmake_install.cmake:111 (file):. file INSTALL cannot find. ""/workspace/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/include/RConfigOptions.h"":. No such file or directory. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:31,deployability,instal,installation,31,"Fix directory name for correct installation of ROOT; ```-- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/roots. -- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/proofserv. -- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/xproofd. CMake Error at cmake_install.cmake:111 (file):. file INSTALL cannot find. ""/workspace/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/include/RConfigOptions.h"":. No such file or directory. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:59,deployability,Instal,Installing,59,"Fix directory name for correct installation of ROOT; ```-- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/roots. -- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/proofserv. -- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/xproofd. CMake Error at cmake_install.cmake:111 (file):. file INSTALL cannot find. ""/workspace/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/include/RConfigOptions.h"":. No such file or directory. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:82,deployability,instal,install,82,"Fix directory name for correct installation of ROOT; ```-- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/roots. -- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/proofserv. -- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/xproofd. CMake Error at cmake_install.cmake:111 (file):. file INSTALL cannot find. ""/workspace/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/include/RConfigOptions.h"":. No such file or directory. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:138,deployability,Instal,Installing,138,"Fix directory name for correct installation of ROOT; ```-- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/roots. -- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/proofserv. -- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/xproofd. CMake Error at cmake_install.cmake:111 (file):. file INSTALL cannot find. ""/workspace/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/include/RConfigOptions.h"":. No such file or directory. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:161,deployability,instal,install,161,"Fix directory name for correct installation of ROOT; ```-- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/roots. -- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/proofserv. -- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/xproofd. CMake Error at cmake_install.cmake:111 (file):. file INSTALL cannot find. ""/workspace/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/include/RConfigOptions.h"":. No such file or directory. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:221,deployability,Instal,Installing,221,"Fix directory name for correct installation of ROOT; ```-- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/roots. -- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/proofserv. -- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/xproofd. CMake Error at cmake_install.cmake:111 (file):. file INSTALL cannot find. ""/workspace/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/include/RConfigOptions.h"":. No such file or directory. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
