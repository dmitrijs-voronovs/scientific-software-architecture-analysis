id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/10370:1461,safety,Error,Error,1461,"Can't compile old versions in macOS arm64 ; Hi,. I need to install ROOT 6.16 in my laptop (macOS Monterey M1 chip), but it's becoming so difficult due to the installation of TBB, and it also cannot detect the arm architecture (so when I configure the cmake building, I get ```Targeting X86```). . Regarding the TBB issue, this is the output. ```cmake. -- TBB download command succeeded. See also /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-download-*.log. [ 0%] No update step for 'TBB'. [ 0%] No patch step for 'TBB'. [ 0%] No configure step for 'TBB'. [ 0%] Performing build step for 'TBB'. CMake Error at /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-RelWithDebInfo.cmake:49 (message):. Command failed: 2. 'make' 'compiler=clang' 'CXXFLAGS= -mno-rtm -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk' 'CPLUS=/Library/Developer/CommandLineTools/usr/bin/c++' 'CONLY=/Library/Developer/CommandLineTools/usr/bin/cc'. See also. /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. I have been following [this](https://github.com/root-project/root/pull/6120/commits) pull request made by Axel and I made the same changes from the commits, but it's not sufficient to fix the whole problem. . Also I tried to configure with ```-Dbuiltin_tbb=OFF``` since I have the latest tbb from homebrew, but I get. ```cmake. -- Found TBB: /opt/homebrew. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1159 (if):. if given arguments:. ""VERSION_LESS"" ""2018"". ```. Can you point me to a solution, or propagate the patches you have been developing to older versions like this one? Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10370
https://github.com/root-project/root/issues/10370:1476,safety,modul,modules,1476,"Can't compile old versions in macOS arm64 ; Hi,. I need to install ROOT 6.16 in my laptop (macOS Monterey M1 chip), but it's becoming so difficult due to the installation of TBB, and it also cannot detect the arm architecture (so when I configure the cmake building, I get ```Targeting X86```). . Regarding the TBB issue, this is the output. ```cmake. -- TBB download command succeeded. See also /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-download-*.log. [ 0%] No update step for 'TBB'. [ 0%] No patch step for 'TBB'. [ 0%] No configure step for 'TBB'. [ 0%] Performing build step for 'TBB'. CMake Error at /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-RelWithDebInfo.cmake:49 (message):. Command failed: 2. 'make' 'compiler=clang' 'CXXFLAGS= -mno-rtm -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk' 'CPLUS=/Library/Developer/CommandLineTools/usr/bin/c++' 'CONLY=/Library/Developer/CommandLineTools/usr/bin/cc'. See also. /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. I have been following [this](https://github.com/root-project/root/pull/6120/commits) pull request made by Axel and I made the same changes from the commits, but it's not sufficient to fix the whole problem. . Also I tried to configure with ```-Dbuiltin_tbb=OFF``` since I have the latest tbb from homebrew, but I get. ```cmake. -- Found TBB: /opt/homebrew. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1159 (if):. if given arguments:. ""VERSION_LESS"" ""2018"". ```. Can you point me to a solution, or propagate the patches you have been developing to older versions like this one? Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10370
https://github.com/root-project/root/issues/10370:1624,safety,patch,patches,1624,"Can't compile old versions in macOS arm64 ; Hi,. I need to install ROOT 6.16 in my laptop (macOS Monterey M1 chip), but it's becoming so difficult due to the installation of TBB, and it also cannot detect the arm architecture (so when I configure the cmake building, I get ```Targeting X86```). . Regarding the TBB issue, this is the output. ```cmake. -- TBB download command succeeded. See also /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-download-*.log. [ 0%] No update step for 'TBB'. [ 0%] No patch step for 'TBB'. [ 0%] No configure step for 'TBB'. [ 0%] Performing build step for 'TBB'. CMake Error at /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-RelWithDebInfo.cmake:49 (message):. Command failed: 2. 'make' 'compiler=clang' 'CXXFLAGS= -mno-rtm -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk' 'CPLUS=/Library/Developer/CommandLineTools/usr/bin/c++' 'CONLY=/Library/Developer/CommandLineTools/usr/bin/cc'. See also. /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. I have been following [this](https://github.com/root-project/root/pull/6120/commits) pull request made by Axel and I made the same changes from the commits, but it's not sufficient to fix the whole problem. . Also I tried to configure with ```-Dbuiltin_tbb=OFF``` since I have the latest tbb from homebrew, but I get. ```cmake. -- Found TBB: /opt/homebrew. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1159 (if):. if given arguments:. ""VERSION_LESS"" ""2018"". ```. Can you point me to a solution, or propagate the patches you have been developing to older versions like this one? Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10370
https://github.com/root-project/root/issues/10370:198,security,detect,detect,198,"Can't compile old versions in macOS arm64 ; Hi,. I need to install ROOT 6.16 in my laptop (macOS Monterey M1 chip), but it's becoming so difficult due to the installation of TBB, and it also cannot detect the arm architecture (so when I configure the cmake building, I get ```Targeting X86```). . Regarding the TBB issue, this is the output. ```cmake. -- TBB download command succeeded. See also /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-download-*.log. [ 0%] No update step for 'TBB'. [ 0%] No patch step for 'TBB'. [ 0%] No configure step for 'TBB'. [ 0%] Performing build step for 'TBB'. CMake Error at /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-RelWithDebInfo.cmake:49 (message):. Command failed: 2. 'make' 'compiler=clang' 'CXXFLAGS= -mno-rtm -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk' 'CPLUS=/Library/Developer/CommandLineTools/usr/bin/c++' 'CONLY=/Library/Developer/CommandLineTools/usr/bin/cc'. See also. /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. I have been following [this](https://github.com/root-project/root/pull/6120/commits) pull request made by Axel and I made the same changes from the commits, but it's not sufficient to fix the whole problem. . Also I tried to configure with ```-Dbuiltin_tbb=OFF``` since I have the latest tbb from homebrew, but I get. ```cmake. -- Found TBB: /opt/homebrew. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1159 (if):. if given arguments:. ""VERSION_LESS"" ""2018"". ```. Can you point me to a solution, or propagate the patches you have been developing to older versions like this one? Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10370
https://github.com/root-project/root/issues/10370:237,security,configur,configure,237,"Can't compile old versions in macOS arm64 ; Hi,. I need to install ROOT 6.16 in my laptop (macOS Monterey M1 chip), but it's becoming so difficult due to the installation of TBB, and it also cannot detect the arm architecture (so when I configure the cmake building, I get ```Targeting X86```). . Regarding the TBB issue, this is the output. ```cmake. -- TBB download command succeeded. See also /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-download-*.log. [ 0%] No update step for 'TBB'. [ 0%] No patch step for 'TBB'. [ 0%] No configure step for 'TBB'. [ 0%] Performing build step for 'TBB'. CMake Error at /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-RelWithDebInfo.cmake:49 (message):. Command failed: 2. 'make' 'compiler=clang' 'CXXFLAGS= -mno-rtm -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk' 'CPLUS=/Library/Developer/CommandLineTools/usr/bin/c++' 'CONLY=/Library/Developer/CommandLineTools/usr/bin/cc'. See also. /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. I have been following [this](https://github.com/root-project/root/pull/6120/commits) pull request made by Axel and I made the same changes from the commits, but it's not sufficient to fix the whole problem. . Also I tried to configure with ```-Dbuiltin_tbb=OFF``` since I have the latest tbb from homebrew, but I get. ```cmake. -- Found TBB: /opt/homebrew. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1159 (if):. if given arguments:. ""VERSION_LESS"" ""2018"". ```. Can you point me to a solution, or propagate the patches you have been developing to older versions like this one? Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10370
https://github.com/root-project/root/issues/10370:481,security,log,log,481,"Can't compile old versions in macOS arm64 ; Hi,. I need to install ROOT 6.16 in my laptop (macOS Monterey M1 chip), but it's becoming so difficult due to the installation of TBB, and it also cannot detect the arm architecture (so when I configure the cmake building, I get ```Targeting X86```). . Regarding the TBB issue, this is the output. ```cmake. -- TBB download command succeeded. See also /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-download-*.log. [ 0%] No update step for 'TBB'. [ 0%] No patch step for 'TBB'. [ 0%] No configure step for 'TBB'. [ 0%] Performing build step for 'TBB'. CMake Error at /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-RelWithDebInfo.cmake:49 (message):. Command failed: 2. 'make' 'compiler=clang' 'CXXFLAGS= -mno-rtm -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk' 'CPLUS=/Library/Developer/CommandLineTools/usr/bin/c++' 'CONLY=/Library/Developer/CommandLineTools/usr/bin/cc'. See also. /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. I have been following [this](https://github.com/root-project/root/pull/6120/commits) pull request made by Axel and I made the same changes from the commits, but it's not sufficient to fix the whole problem. . Also I tried to configure with ```-Dbuiltin_tbb=OFF``` since I have the latest tbb from homebrew, but I get. ```cmake. -- Found TBB: /opt/homebrew. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1159 (if):. if given arguments:. ""VERSION_LESS"" ""2018"". ```. Can you point me to a solution, or propagate the patches you have been developing to older versions like this one? Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10370
https://github.com/root-project/root/issues/10370:495,security,updat,update,495,"Can't compile old versions in macOS arm64 ; Hi,. I need to install ROOT 6.16 in my laptop (macOS Monterey M1 chip), but it's becoming so difficult due to the installation of TBB, and it also cannot detect the arm architecture (so when I configure the cmake building, I get ```Targeting X86```). . Regarding the TBB issue, this is the output. ```cmake. -- TBB download command succeeded. See also /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-download-*.log. [ 0%] No update step for 'TBB'. [ 0%] No patch step for 'TBB'. [ 0%] No configure step for 'TBB'. [ 0%] Performing build step for 'TBB'. CMake Error at /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-RelWithDebInfo.cmake:49 (message):. Command failed: 2. 'make' 'compiler=clang' 'CXXFLAGS= -mno-rtm -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk' 'CPLUS=/Library/Developer/CommandLineTools/usr/bin/c++' 'CONLY=/Library/Developer/CommandLineTools/usr/bin/cc'. See also. /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. I have been following [this](https://github.com/root-project/root/pull/6120/commits) pull request made by Axel and I made the same changes from the commits, but it's not sufficient to fix the whole problem. . Also I tried to configure with ```-Dbuiltin_tbb=OFF``` since I have the latest tbb from homebrew, but I get. ```cmake. -- Found TBB: /opt/homebrew. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1159 (if):. if given arguments:. ""VERSION_LESS"" ""2018"". ```. Can you point me to a solution, or propagate the patches you have been developing to older versions like this one? Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10370
https://github.com/root-project/root/issues/10370:527,security,patch,patch,527,"Can't compile old versions in macOS arm64 ; Hi,. I need to install ROOT 6.16 in my laptop (macOS Monterey M1 chip), but it's becoming so difficult due to the installation of TBB, and it also cannot detect the arm architecture (so when I configure the cmake building, I get ```Targeting X86```). . Regarding the TBB issue, this is the output. ```cmake. -- TBB download command succeeded. See also /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-download-*.log. [ 0%] No update step for 'TBB'. [ 0%] No patch step for 'TBB'. [ 0%] No configure step for 'TBB'. [ 0%] Performing build step for 'TBB'. CMake Error at /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-RelWithDebInfo.cmake:49 (message):. Command failed: 2. 'make' 'compiler=clang' 'CXXFLAGS= -mno-rtm -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk' 'CPLUS=/Library/Developer/CommandLineTools/usr/bin/c++' 'CONLY=/Library/Developer/CommandLineTools/usr/bin/cc'. See also. /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. I have been following [this](https://github.com/root-project/root/pull/6120/commits) pull request made by Axel and I made the same changes from the commits, but it's not sufficient to fix the whole problem. . Also I tried to configure with ```-Dbuiltin_tbb=OFF``` since I have the latest tbb from homebrew, but I get. ```cmake. -- Found TBB: /opt/homebrew. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1159 (if):. if given arguments:. ""VERSION_LESS"" ""2018"". ```. Can you point me to a solution, or propagate the patches you have been developing to older versions like this one? Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10370
https://github.com/root-project/root/issues/10370:558,security,configur,configure,558,"Can't compile old versions in macOS arm64 ; Hi,. I need to install ROOT 6.16 in my laptop (macOS Monterey M1 chip), but it's becoming so difficult due to the installation of TBB, and it also cannot detect the arm architecture (so when I configure the cmake building, I get ```Targeting X86```). . Regarding the TBB issue, this is the output. ```cmake. -- TBB download command succeeded. See also /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-download-*.log. [ 0%] No update step for 'TBB'. [ 0%] No patch step for 'TBB'. [ 0%] No configure step for 'TBB'. [ 0%] Performing build step for 'TBB'. CMake Error at /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-RelWithDebInfo.cmake:49 (message):. Command failed: 2. 'make' 'compiler=clang' 'CXXFLAGS= -mno-rtm -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk' 'CPLUS=/Library/Developer/CommandLineTools/usr/bin/c++' 'CONLY=/Library/Developer/CommandLineTools/usr/bin/cc'. See also. /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. I have been following [this](https://github.com/root-project/root/pull/6120/commits) pull request made by Axel and I made the same changes from the commits, but it's not sufficient to fix the whole problem. . Also I tried to configure with ```-Dbuiltin_tbb=OFF``` since I have the latest tbb from homebrew, but I get. ```cmake. -- Found TBB: /opt/homebrew. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1159 (if):. if given arguments:. ""VERSION_LESS"" ""2018"". ```. Can you point me to a solution, or propagate the patches you have been developing to older versions like this one? Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10370
https://github.com/root-project/root/issues/10370:1088,security,log,log,1088,"Can't compile old versions in macOS arm64 ; Hi,. I need to install ROOT 6.16 in my laptop (macOS Monterey M1 chip), but it's becoming so difficult due to the installation of TBB, and it also cannot detect the arm architecture (so when I configure the cmake building, I get ```Targeting X86```). . Regarding the TBB issue, this is the output. ```cmake. -- TBB download command succeeded. See also /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-download-*.log. [ 0%] No update step for 'TBB'. [ 0%] No patch step for 'TBB'. [ 0%] No configure step for 'TBB'. [ 0%] Performing build step for 'TBB'. CMake Error at /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-RelWithDebInfo.cmake:49 (message):. Command failed: 2. 'make' 'compiler=clang' 'CXXFLAGS= -mno-rtm -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk' 'CPLUS=/Library/Developer/CommandLineTools/usr/bin/c++' 'CONLY=/Library/Developer/CommandLineTools/usr/bin/cc'. See also. /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. I have been following [this](https://github.com/root-project/root/pull/6120/commits) pull request made by Axel and I made the same changes from the commits, but it's not sufficient to fix the whole problem. . Also I tried to configure with ```-Dbuiltin_tbb=OFF``` since I have the latest tbb from homebrew, but I get. ```cmake. -- Found TBB: /opt/homebrew. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1159 (if):. if given arguments:. ""VERSION_LESS"" ""2018"". ```. Can you point me to a solution, or propagate the patches you have been developing to older versions like this one? Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10370
https://github.com/root-project/root/issues/10370:1323,security,configur,configure,1323,"Can't compile old versions in macOS arm64 ; Hi,. I need to install ROOT 6.16 in my laptop (macOS Monterey M1 chip), but it's becoming so difficult due to the installation of TBB, and it also cannot detect the arm architecture (so when I configure the cmake building, I get ```Targeting X86```). . Regarding the TBB issue, this is the output. ```cmake. -- TBB download command succeeded. See also /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-download-*.log. [ 0%] No update step for 'TBB'. [ 0%] No patch step for 'TBB'. [ 0%] No configure step for 'TBB'. [ 0%] Performing build step for 'TBB'. CMake Error at /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-RelWithDebInfo.cmake:49 (message):. Command failed: 2. 'make' 'compiler=clang' 'CXXFLAGS= -mno-rtm -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk' 'CPLUS=/Library/Developer/CommandLineTools/usr/bin/c++' 'CONLY=/Library/Developer/CommandLineTools/usr/bin/cc'. See also. /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. I have been following [this](https://github.com/root-project/root/pull/6120/commits) pull request made by Axel and I made the same changes from the commits, but it's not sufficient to fix the whole problem. . Also I tried to configure with ```-Dbuiltin_tbb=OFF``` since I have the latest tbb from homebrew, but I get. ```cmake. -- Found TBB: /opt/homebrew. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1159 (if):. if given arguments:. ""VERSION_LESS"" ""2018"". ```. Can you point me to a solution, or propagate the patches you have been developing to older versions like this one? Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10370
https://github.com/root-project/root/issues/10370:1624,security,patch,patches,1624,"Can't compile old versions in macOS arm64 ; Hi,. I need to install ROOT 6.16 in my laptop (macOS Monterey M1 chip), but it's becoming so difficult due to the installation of TBB, and it also cannot detect the arm architecture (so when I configure the cmake building, I get ```Targeting X86```). . Regarding the TBB issue, this is the output. ```cmake. -- TBB download command succeeded. See also /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-download-*.log. [ 0%] No update step for 'TBB'. [ 0%] No patch step for 'TBB'. [ 0%] No configure step for 'TBB'. [ 0%] Performing build step for 'TBB'. CMake Error at /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-RelWithDebInfo.cmake:49 (message):. Command failed: 2. 'make' 'compiler=clang' 'CXXFLAGS= -mno-rtm -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk' 'CPLUS=/Library/Developer/CommandLineTools/usr/bin/c++' 'CONLY=/Library/Developer/CommandLineTools/usr/bin/cc'. See also. /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. I have been following [this](https://github.com/root-project/root/pull/6120/commits) pull request made by Axel and I made the same changes from the commits, but it's not sufficient to fix the whole problem. . Also I tried to configure with ```-Dbuiltin_tbb=OFF``` since I have the latest tbb from homebrew, but I get. ```cmake. -- Found TBB: /opt/homebrew. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1159 (if):. if given arguments:. ""VERSION_LESS"" ""2018"". ```. Can you point me to a solution, or propagate the patches you have been developing to older versions like this one? Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10370
https://github.com/root-project/root/issues/10370:426,testability,test,test,426,"Can't compile old versions in macOS arm64 ; Hi,. I need to install ROOT 6.16 in my laptop (macOS Monterey M1 chip), but it's becoming so difficult due to the installation of TBB, and it also cannot detect the arm architecture (so when I configure the cmake building, I get ```Targeting X86```). . Regarding the TBB issue, this is the output. ```cmake. -- TBB download command succeeded. See also /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-download-*.log. [ 0%] No update step for 'TBB'. [ 0%] No patch step for 'TBB'. [ 0%] No configure step for 'TBB'. [ 0%] Performing build step for 'TBB'. CMake Error at /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-RelWithDebInfo.cmake:49 (message):. Command failed: 2. 'make' 'compiler=clang' 'CXXFLAGS= -mno-rtm -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk' 'CPLUS=/Library/Developer/CommandLineTools/usr/bin/c++' 'CONLY=/Library/Developer/CommandLineTools/usr/bin/cc'. See also. /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. I have been following [this](https://github.com/root-project/root/pull/6120/commits) pull request made by Axel and I made the same changes from the commits, but it's not sufficient to fix the whole problem. . Also I tried to configure with ```-Dbuiltin_tbb=OFF``` since I have the latest tbb from homebrew, but I get. ```cmake. -- Found TBB: /opt/homebrew. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1159 (if):. if given arguments:. ""VERSION_LESS"" ""2018"". ```. Can you point me to a solution, or propagate the patches you have been developing to older versions like this one? Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10370
https://github.com/root-project/root/issues/10370:481,testability,log,log,481,"Can't compile old versions in macOS arm64 ; Hi,. I need to install ROOT 6.16 in my laptop (macOS Monterey M1 chip), but it's becoming so difficult due to the installation of TBB, and it also cannot detect the arm architecture (so when I configure the cmake building, I get ```Targeting X86```). . Regarding the TBB issue, this is the output. ```cmake. -- TBB download command succeeded. See also /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-download-*.log. [ 0%] No update step for 'TBB'. [ 0%] No patch step for 'TBB'. [ 0%] No configure step for 'TBB'. [ 0%] Performing build step for 'TBB'. CMake Error at /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-RelWithDebInfo.cmake:49 (message):. Command failed: 2. 'make' 'compiler=clang' 'CXXFLAGS= -mno-rtm -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk' 'CPLUS=/Library/Developer/CommandLineTools/usr/bin/c++' 'CONLY=/Library/Developer/CommandLineTools/usr/bin/cc'. See also. /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. I have been following [this](https://github.com/root-project/root/pull/6120/commits) pull request made by Axel and I made the same changes from the commits, but it's not sufficient to fix the whole problem. . Also I tried to configure with ```-Dbuiltin_tbb=OFF``` since I have the latest tbb from homebrew, but I get. ```cmake. -- Found TBB: /opt/homebrew. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1159 (if):. if given arguments:. ""VERSION_LESS"" ""2018"". ```. Can you point me to a solution, or propagate the patches you have been developing to older versions like this one? Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10370
https://github.com/root-project/root/issues/10370:668,testability,test,test,668,"Can't compile old versions in macOS arm64 ; Hi,. I need to install ROOT 6.16 in my laptop (macOS Monterey M1 chip), but it's becoming so difficult due to the installation of TBB, and it also cannot detect the arm architecture (so when I configure the cmake building, I get ```Targeting X86```). . Regarding the TBB issue, this is the output. ```cmake. -- TBB download command succeeded. See also /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-download-*.log. [ 0%] No update step for 'TBB'. [ 0%] No patch step for 'TBB'. [ 0%] No configure step for 'TBB'. [ 0%] Performing build step for 'TBB'. CMake Error at /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-RelWithDebInfo.cmake:49 (message):. Command failed: 2. 'make' 'compiler=clang' 'CXXFLAGS= -mno-rtm -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk' 'CPLUS=/Library/Developer/CommandLineTools/usr/bin/c++' 'CONLY=/Library/Developer/CommandLineTools/usr/bin/cc'. See also. /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. I have been following [this](https://github.com/root-project/root/pull/6120/commits) pull request made by Axel and I made the same changes from the commits, but it's not sufficient to fix the whole problem. . Also I tried to configure with ```-Dbuiltin_tbb=OFF``` since I have the latest tbb from homebrew, but I get. ```cmake. -- Found TBB: /opt/homebrew. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1159 (if):. if given arguments:. ""VERSION_LESS"" ""2018"". ```. Can you point me to a solution, or propagate the patches you have been developing to older versions like this one? Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10370
https://github.com/root-project/root/issues/10370:1036,testability,test,test,1036,"Can't compile old versions in macOS arm64 ; Hi,. I need to install ROOT 6.16 in my laptop (macOS Monterey M1 chip), but it's becoming so difficult due to the installation of TBB, and it also cannot detect the arm architecture (so when I configure the cmake building, I get ```Targeting X86```). . Regarding the TBB issue, this is the output. ```cmake. -- TBB download command succeeded. See also /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-download-*.log. [ 0%] No update step for 'TBB'. [ 0%] No patch step for 'TBB'. [ 0%] No configure step for 'TBB'. [ 0%] Performing build step for 'TBB'. CMake Error at /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-RelWithDebInfo.cmake:49 (message):. Command failed: 2. 'make' 'compiler=clang' 'CXXFLAGS= -mno-rtm -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk' 'CPLUS=/Library/Developer/CommandLineTools/usr/bin/c++' 'CONLY=/Library/Developer/CommandLineTools/usr/bin/cc'. See also. /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. I have been following [this](https://github.com/root-project/root/pull/6120/commits) pull request made by Axel and I made the same changes from the commits, but it's not sufficient to fix the whole problem. . Also I tried to configure with ```-Dbuiltin_tbb=OFF``` since I have the latest tbb from homebrew, but I get. ```cmake. -- Found TBB: /opt/homebrew. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1159 (if):. if given arguments:. ""VERSION_LESS"" ""2018"". ```. Can you point me to a solution, or propagate the patches you have been developing to older versions like this one? Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10370
https://github.com/root-project/root/issues/10370:1088,testability,log,log,1088,"Can't compile old versions in macOS arm64 ; Hi,. I need to install ROOT 6.16 in my laptop (macOS Monterey M1 chip), but it's becoming so difficult due to the installation of TBB, and it also cannot detect the arm architecture (so when I configure the cmake building, I get ```Targeting X86```). . Regarding the TBB issue, this is the output. ```cmake. -- TBB download command succeeded. See also /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-download-*.log. [ 0%] No update step for 'TBB'. [ 0%] No patch step for 'TBB'. [ 0%] No configure step for 'TBB'. [ 0%] Performing build step for 'TBB'. CMake Error at /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-RelWithDebInfo.cmake:49 (message):. Command failed: 2. 'make' 'compiler=clang' 'CXXFLAGS= -mno-rtm -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk' 'CPLUS=/Library/Developer/CommandLineTools/usr/bin/c++' 'CONLY=/Library/Developer/CommandLineTools/usr/bin/cc'. See also. /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. I have been following [this](https://github.com/root-project/root/pull/6120/commits) pull request made by Axel and I made the same changes from the commits, but it's not sufficient to fix the whole problem. . Also I tried to configure with ```-Dbuiltin_tbb=OFF``` since I have the latest tbb from homebrew, but I get. ```cmake. -- Found TBB: /opt/homebrew. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1159 (if):. if given arguments:. ""VERSION_LESS"" ""2018"". ```. Can you point me to a solution, or propagate the patches you have been developing to older versions like this one? Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10370
https://github.com/root-project/root/issues/10370:368,usability,command,command,368,"Can't compile old versions in macOS arm64 ; Hi,. I need to install ROOT 6.16 in my laptop (macOS Monterey M1 chip), but it's becoming so difficult due to the installation of TBB, and it also cannot detect the arm architecture (so when I configure the cmake building, I get ```Targeting X86```). . Regarding the TBB issue, this is the output. ```cmake. -- TBB download command succeeded. See also /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-download-*.log. [ 0%] No update step for 'TBB'. [ 0%] No patch step for 'TBB'. [ 0%] No configure step for 'TBB'. [ 0%] Performing build step for 'TBB'. CMake Error at /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-RelWithDebInfo.cmake:49 (message):. Command failed: 2. 'make' 'compiler=clang' 'CXXFLAGS= -mno-rtm -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk' 'CPLUS=/Library/Developer/CommandLineTools/usr/bin/c++' 'CONLY=/Library/Developer/CommandLineTools/usr/bin/cc'. See also. /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. I have been following [this](https://github.com/root-project/root/pull/6120/commits) pull request made by Axel and I made the same changes from the commits, but it's not sufficient to fix the whole problem. . Also I tried to configure with ```-Dbuiltin_tbb=OFF``` since I have the latest tbb from homebrew, but I get. ```cmake. -- Found TBB: /opt/homebrew. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1159 (if):. if given arguments:. ""VERSION_LESS"" ""2018"". ```. Can you point me to a solution, or propagate the patches you have been developing to older versions like this one? Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10370
https://github.com/root-project/root/issues/10370:397,usability,User,Users,397,"Can't compile old versions in macOS arm64 ; Hi,. I need to install ROOT 6.16 in my laptop (macOS Monterey M1 chip), but it's becoming so difficult due to the installation of TBB, and it also cannot detect the arm architecture (so when I configure the cmake building, I get ```Targeting X86```). . Regarding the TBB issue, this is the output. ```cmake. -- TBB download command succeeded. See also /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-download-*.log. [ 0%] No update step for 'TBB'. [ 0%] No patch step for 'TBB'. [ 0%] No configure step for 'TBB'. [ 0%] Performing build step for 'TBB'. CMake Error at /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-RelWithDebInfo.cmake:49 (message):. Command failed: 2. 'make' 'compiler=clang' 'CXXFLAGS= -mno-rtm -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk' 'CPLUS=/Library/Developer/CommandLineTools/usr/bin/c++' 'CONLY=/Library/Developer/CommandLineTools/usr/bin/cc'. See also. /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. I have been following [this](https://github.com/root-project/root/pull/6120/commits) pull request made by Axel and I made the same changes from the commits, but it's not sufficient to fix the whole problem. . Also I tried to configure with ```-Dbuiltin_tbb=OFF``` since I have the latest tbb from homebrew, but I get. ```cmake. -- Found TBB: /opt/homebrew. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1159 (if):. if given arguments:. ""VERSION_LESS"" ""2018"". ```. Can you point me to a solution, or propagate the patches you have been developing to older versions like this one? Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10370
https://github.com/root-project/root/issues/10370:590,usability,Perform,Performing,590,"Can't compile old versions in macOS arm64 ; Hi,. I need to install ROOT 6.16 in my laptop (macOS Monterey M1 chip), but it's becoming so difficult due to the installation of TBB, and it also cannot detect the arm architecture (so when I configure the cmake building, I get ```Targeting X86```). . Regarding the TBB issue, this is the output. ```cmake. -- TBB download command succeeded. See also /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-download-*.log. [ 0%] No update step for 'TBB'. [ 0%] No patch step for 'TBB'. [ 0%] No configure step for 'TBB'. [ 0%] Performing build step for 'TBB'. CMake Error at /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-RelWithDebInfo.cmake:49 (message):. Command failed: 2. 'make' 'compiler=clang' 'CXXFLAGS= -mno-rtm -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk' 'CPLUS=/Library/Developer/CommandLineTools/usr/bin/c++' 'CONLY=/Library/Developer/CommandLineTools/usr/bin/cc'. See also. /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. I have been following [this](https://github.com/root-project/root/pull/6120/commits) pull request made by Axel and I made the same changes from the commits, but it's not sufficient to fix the whole problem. . Also I tried to configure with ```-Dbuiltin_tbb=OFF``` since I have the latest tbb from homebrew, but I get. ```cmake. -- Found TBB: /opt/homebrew. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1159 (if):. if given arguments:. ""VERSION_LESS"" ""2018"". ```. Can you point me to a solution, or propagate the patches you have been developing to older versions like this one? Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10370
https://github.com/root-project/root/issues/10370:629,usability,Error,Error,629,"Can't compile old versions in macOS arm64 ; Hi,. I need to install ROOT 6.16 in my laptop (macOS Monterey M1 chip), but it's becoming so difficult due to the installation of TBB, and it also cannot detect the arm architecture (so when I configure the cmake building, I get ```Targeting X86```). . Regarding the TBB issue, this is the output. ```cmake. -- TBB download command succeeded. See also /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-download-*.log. [ 0%] No update step for 'TBB'. [ 0%] No patch step for 'TBB'. [ 0%] No configure step for 'TBB'. [ 0%] Performing build step for 'TBB'. CMake Error at /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-RelWithDebInfo.cmake:49 (message):. Command failed: 2. 'make' 'compiler=clang' 'CXXFLAGS= -mno-rtm -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk' 'CPLUS=/Library/Developer/CommandLineTools/usr/bin/c++' 'CONLY=/Library/Developer/CommandLineTools/usr/bin/cc'. See also. /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. I have been following [this](https://github.com/root-project/root/pull/6120/commits) pull request made by Axel and I made the same changes from the commits, but it's not sufficient to fix the whole problem. . Also I tried to configure with ```-Dbuiltin_tbb=OFF``` since I have the latest tbb from homebrew, but I get. ```cmake. -- Found TBB: /opt/homebrew. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1159 (if):. if given arguments:. ""VERSION_LESS"" ""2018"". ```. Can you point me to a solution, or propagate the patches you have been developing to older versions like this one? Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10370
https://github.com/root-project/root/issues/10370:639,usability,User,Users,639,"Can't compile old versions in macOS arm64 ; Hi,. I need to install ROOT 6.16 in my laptop (macOS Monterey M1 chip), but it's becoming so difficult due to the installation of TBB, and it also cannot detect the arm architecture (so when I configure the cmake building, I get ```Targeting X86```). . Regarding the TBB issue, this is the output. ```cmake. -- TBB download command succeeded. See also /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-download-*.log. [ 0%] No update step for 'TBB'. [ 0%] No patch step for 'TBB'. [ 0%] No configure step for 'TBB'. [ 0%] Performing build step for 'TBB'. CMake Error at /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-RelWithDebInfo.cmake:49 (message):. Command failed: 2. 'make' 'compiler=clang' 'CXXFLAGS= -mno-rtm -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk' 'CPLUS=/Library/Developer/CommandLineTools/usr/bin/c++' 'CONLY=/Library/Developer/CommandLineTools/usr/bin/cc'. See also. /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. I have been following [this](https://github.com/root-project/root/pull/6120/commits) pull request made by Axel and I made the same changes from the commits, but it's not sufficient to fix the whole problem. . Also I tried to configure with ```-Dbuiltin_tbb=OFF``` since I have the latest tbb from homebrew, but I get. ```cmake. -- Found TBB: /opt/homebrew. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1159 (if):. if given arguments:. ""VERSION_LESS"" ""2018"". ```. Can you point me to a solution, or propagate the patches you have been developing to older versions like this one? Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10370
https://github.com/root-project/root/issues/10370:754,usability,Command,Command,754,"Can't compile old versions in macOS arm64 ; Hi,. I need to install ROOT 6.16 in my laptop (macOS Monterey M1 chip), but it's becoming so difficult due to the installation of TBB, and it also cannot detect the arm architecture (so when I configure the cmake building, I get ```Targeting X86```). . Regarding the TBB issue, this is the output. ```cmake. -- TBB download command succeeded. See also /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-download-*.log. [ 0%] No update step for 'TBB'. [ 0%] No patch step for 'TBB'. [ 0%] No configure step for 'TBB'. [ 0%] Performing build step for 'TBB'. CMake Error at /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-RelWithDebInfo.cmake:49 (message):. Command failed: 2. 'make' 'compiler=clang' 'CXXFLAGS= -mno-rtm -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk' 'CPLUS=/Library/Developer/CommandLineTools/usr/bin/c++' 'CONLY=/Library/Developer/CommandLineTools/usr/bin/cc'. See also. /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. I have been following [this](https://github.com/root-project/root/pull/6120/commits) pull request made by Axel and I made the same changes from the commits, but it's not sufficient to fix the whole problem. . Also I tried to configure with ```-Dbuiltin_tbb=OFF``` since I have the latest tbb from homebrew, but I get. ```cmake. -- Found TBB: /opt/homebrew. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1159 (if):. if given arguments:. ""VERSION_LESS"" ""2018"". ```. Can you point me to a solution, or propagate the patches you have been developing to older versions like this one? Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10370
https://github.com/root-project/root/issues/10370:846,usability,Command,CommandLineTools,846,"Can't compile old versions in macOS arm64 ; Hi,. I need to install ROOT 6.16 in my laptop (macOS Monterey M1 chip), but it's becoming so difficult due to the installation of TBB, and it also cannot detect the arm architecture (so when I configure the cmake building, I get ```Targeting X86```). . Regarding the TBB issue, this is the output. ```cmake. -- TBB download command succeeded. See also /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-download-*.log. [ 0%] No update step for 'TBB'. [ 0%] No patch step for 'TBB'. [ 0%] No configure step for 'TBB'. [ 0%] Performing build step for 'TBB'. CMake Error at /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-RelWithDebInfo.cmake:49 (message):. Command failed: 2. 'make' 'compiler=clang' 'CXXFLAGS= -mno-rtm -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk' 'CPLUS=/Library/Developer/CommandLineTools/usr/bin/c++' 'CONLY=/Library/Developer/CommandLineTools/usr/bin/cc'. See also. /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. I have been following [this](https://github.com/root-project/root/pull/6120/commits) pull request made by Axel and I made the same changes from the commits, but it's not sufficient to fix the whole problem. . Also I tried to configure with ```-Dbuiltin_tbb=OFF``` since I have the latest tbb from homebrew, but I get. ```cmake. -- Found TBB: /opt/homebrew. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1159 (if):. if given arguments:. ""VERSION_LESS"" ""2018"". ```. Can you point me to a solution, or propagate the patches you have been developing to older versions like this one? Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10370
https://github.com/root-project/root/issues/10370:910,usability,Command,CommandLineTools,910,"Can't compile old versions in macOS arm64 ; Hi,. I need to install ROOT 6.16 in my laptop (macOS Monterey M1 chip), but it's becoming so difficult due to the installation of TBB, and it also cannot detect the arm architecture (so when I configure the cmake building, I get ```Targeting X86```). . Regarding the TBB issue, this is the output. ```cmake. -- TBB download command succeeded. See also /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-download-*.log. [ 0%] No update step for 'TBB'. [ 0%] No patch step for 'TBB'. [ 0%] No configure step for 'TBB'. [ 0%] Performing build step for 'TBB'. CMake Error at /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-RelWithDebInfo.cmake:49 (message):. Command failed: 2. 'make' 'compiler=clang' 'CXXFLAGS= -mno-rtm -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk' 'CPLUS=/Library/Developer/CommandLineTools/usr/bin/c++' 'CONLY=/Library/Developer/CommandLineTools/usr/bin/cc'. See also. /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. I have been following [this](https://github.com/root-project/root/pull/6120/commits) pull request made by Axel and I made the same changes from the commits, but it's not sufficient to fix the whole problem. . Also I tried to configure with ```-Dbuiltin_tbb=OFF``` since I have the latest tbb from homebrew, but I get. ```cmake. -- Found TBB: /opt/homebrew. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1159 (if):. if given arguments:. ""VERSION_LESS"" ""2018"". ```. Can you point me to a solution, or propagate the patches you have been developing to older versions like this one? Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10370
https://github.com/root-project/root/issues/10370:966,usability,Command,CommandLineTools,966,"Can't compile old versions in macOS arm64 ; Hi,. I need to install ROOT 6.16 in my laptop (macOS Monterey M1 chip), but it's becoming so difficult due to the installation of TBB, and it also cannot detect the arm architecture (so when I configure the cmake building, I get ```Targeting X86```). . Regarding the TBB issue, this is the output. ```cmake. -- TBB download command succeeded. See also /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-download-*.log. [ 0%] No update step for 'TBB'. [ 0%] No patch step for 'TBB'. [ 0%] No configure step for 'TBB'. [ 0%] Performing build step for 'TBB'. CMake Error at /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-RelWithDebInfo.cmake:49 (message):. Command failed: 2. 'make' 'compiler=clang' 'CXXFLAGS= -mno-rtm -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk' 'CPLUS=/Library/Developer/CommandLineTools/usr/bin/c++' 'CONLY=/Library/Developer/CommandLineTools/usr/bin/cc'. See also. /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. I have been following [this](https://github.com/root-project/root/pull/6120/commits) pull request made by Axel and I made the same changes from the commits, but it's not sufficient to fix the whole problem. . Also I tried to configure with ```-Dbuiltin_tbb=OFF``` since I have the latest tbb from homebrew, but I get. ```cmake. -- Found TBB: /opt/homebrew. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1159 (if):. if given arguments:. ""VERSION_LESS"" ""2018"". ```. Can you point me to a solution, or propagate the patches you have been developing to older versions like this one? Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10370
https://github.com/root-project/root/issues/10370:1007,usability,User,Users,1007,"Can't compile old versions in macOS arm64 ; Hi,. I need to install ROOT 6.16 in my laptop (macOS Monterey M1 chip), but it's becoming so difficult due to the installation of TBB, and it also cannot detect the arm architecture (so when I configure the cmake building, I get ```Targeting X86```). . Regarding the TBB issue, this is the output. ```cmake. -- TBB download command succeeded. See also /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-download-*.log. [ 0%] No update step for 'TBB'. [ 0%] No patch step for 'TBB'. [ 0%] No configure step for 'TBB'. [ 0%] Performing build step for 'TBB'. CMake Error at /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-RelWithDebInfo.cmake:49 (message):. Command failed: 2. 'make' 'compiler=clang' 'CXXFLAGS= -mno-rtm -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk' 'CPLUS=/Library/Developer/CommandLineTools/usr/bin/c++' 'CONLY=/Library/Developer/CommandLineTools/usr/bin/cc'. See also. /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. I have been following [this](https://github.com/root-project/root/pull/6120/commits) pull request made by Axel and I made the same changes from the commits, but it's not sufficient to fix the whole problem. . Also I tried to configure with ```-Dbuiltin_tbb=OFF``` since I have the latest tbb from homebrew, but I get. ```cmake. -- Found TBB: /opt/homebrew. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1159 (if):. if given arguments:. ""VERSION_LESS"" ""2018"". ```. Can you point me to a solution, or propagate the patches you have been developing to older versions like this one? Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10370
https://github.com/root-project/root/issues/10370:1461,usability,Error,Error,1461,"Can't compile old versions in macOS arm64 ; Hi,. I need to install ROOT 6.16 in my laptop (macOS Monterey M1 chip), but it's becoming so difficult due to the installation of TBB, and it also cannot detect the arm architecture (so when I configure the cmake building, I get ```Targeting X86```). . Regarding the TBB issue, this is the output. ```cmake. -- TBB download command succeeded. See also /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-download-*.log. [ 0%] No update step for 'TBB'. [ 0%] No patch step for 'TBB'. [ 0%] No configure step for 'TBB'. [ 0%] Performing build step for 'TBB'. CMake Error at /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-RelWithDebInfo.cmake:49 (message):. Command failed: 2. 'make' 'compiler=clang' 'CXXFLAGS= -mno-rtm -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk' 'CPLUS=/Library/Developer/CommandLineTools/usr/bin/c++' 'CONLY=/Library/Developer/CommandLineTools/usr/bin/cc'. See also. /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. I have been following [this](https://github.com/root-project/root/pull/6120/commits) pull request made by Axel and I made the same changes from the commits, but it's not sufficient to fix the whole problem. . Also I tried to configure with ```-Dbuiltin_tbb=OFF``` since I have the latest tbb from homebrew, but I get. ```cmake. -- Found TBB: /opt/homebrew. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1159 (if):. if given arguments:. ""VERSION_LESS"" ""2018"". ```. Can you point me to a solution, or propagate the patches you have been developing to older versions like this one? Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10370
https://github.com/root-project/root/pull/10371:15,availability,error,error,15,Small spelling error during explaining lhcbOpenData.C; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10371
https://github.com/root-project/root/pull/10371:150,deployability,updat,updated,150,Small spelling error during explaining lhcbOpenData.C; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10371
https://github.com/root-project/root/pull/10371:15,performance,error,error,15,Small spelling error during explaining lhcbOpenData.C; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10371
https://github.com/root-project/root/pull/10371:15,safety,error,error,15,Small spelling error during explaining lhcbOpenData.C; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10371
https://github.com/root-project/root/pull/10371:120,safety,test,tested,120,Small spelling error during explaining lhcbOpenData.C; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10371
https://github.com/root-project/root/pull/10371:150,safety,updat,updated,150,Small spelling error during explaining lhcbOpenData.C; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10371
https://github.com/root-project/root/pull/10371:150,security,updat,updated,150,Small spelling error during explaining lhcbOpenData.C; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10371
https://github.com/root-project/root/pull/10371:120,testability,test,tested,120,Small spelling error during explaining lhcbOpenData.C; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10371
https://github.com/root-project/root/pull/10371:15,usability,error,error,15,Small spelling error during explaining lhcbOpenData.C; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10371
https://github.com/root-project/root/pull/10372:195,deployability,contain,contains,195,[IO][NFC] Remove duplicated lines from docs; These lines are already present at io/io/doc/index.md. This problem would also be fixed by https://github.com/root-project/root/pull/9616 but that PR contains a larger set of changes and it is not moving fast enough.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10372
https://github.com/root-project/root/pull/10373:141,energy efficiency,alloc,allocators,141,[I/O] Use thread-local collection proxy in TClass::Destructor (v6.26); This fixes #10357 (a race condition when reading vectors with custom. allocators with TTreeProcessorMT that also affected RDataFrame). Co-authored-by: Philippe Canal <pcanal@fnal.gov>.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10373
https://github.com/root-project/root/pull/10373:34,interoperability,prox,proxy,34,[I/O] Use thread-local collection proxy in TClass::Destructor (v6.26); This fixes #10357 (a race condition when reading vectors with custom. allocators with TTreeProcessorMT that also affected RDataFrame). Co-authored-by: Philippe Canal <pcanal@fnal.gov>.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10373
https://github.com/root-project/root/pull/10373:1,performance,I/O,I/O,1,[I/O] Use thread-local collection proxy in TClass::Destructor (v6.26); This fixes #10357 (a race condition when reading vectors with custom. allocators with TTreeProcessorMT that also affected RDataFrame). Co-authored-by: Philippe Canal <pcanal@fnal.gov>.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10373
https://github.com/root-project/root/pull/10373:209,security,auth,authored-by,209,[I/O] Use thread-local collection proxy in TClass::Destructor (v6.26); This fixes #10357 (a race condition when reading vectors with custom. allocators with TTreeProcessorMT that also affected RDataFrame). Co-authored-by: Philippe Canal <pcanal@fnal.gov>.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10373
https://github.com/root-project/root/pull/10373:133,usability,custom,custom,133,[I/O] Use thread-local collection proxy in TClass::Destructor (v6.26); This fixes #10357 (a race condition when reading vectors with custom. allocators with TTreeProcessorMT that also affected RDataFrame). Co-authored-by: Philippe Canal <pcanal@fnal.gov>.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10373
https://github.com/root-project/root/pull/10374:90,availability,error,error,90,[cmake] Enable openssl3 for xrootd (v626); For Ubuntu 22.04 we will otherwise get a build error. See https://github.com/xrootd/xrootd/issues/1666. (cherry picked from commit f4bd8e740a99828d1232494b9d92a25fe2c39f65). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10374
https://github.com/root-project/root/pull/10374:84,deployability,build,build,84,[cmake] Enable openssl3 for xrootd (v626); For Ubuntu 22.04 we will otherwise get a build error. See https://github.com/xrootd/xrootd/issues/1666. (cherry picked from commit f4bd8e740a99828d1232494b9d92a25fe2c39f65). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10374
https://github.com/root-project/root/pull/10374:312,deployability,updat,updated,312,[cmake] Enable openssl3 for xrootd (v626); For Ubuntu 22.04 we will otherwise get a build error. See https://github.com/xrootd/xrootd/issues/1666. (cherry picked from commit f4bd8e740a99828d1232494b9d92a25fe2c39f65). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10374
https://github.com/root-project/root/pull/10374:90,performance,error,error,90,[cmake] Enable openssl3 for xrootd (v626); For Ubuntu 22.04 we will otherwise get a build error. See https://github.com/xrootd/xrootd/issues/1666. (cherry picked from commit f4bd8e740a99828d1232494b9d92a25fe2c39f65). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10374
https://github.com/root-project/root/pull/10374:90,safety,error,error,90,[cmake] Enable openssl3 for xrootd (v626); For Ubuntu 22.04 we will otherwise get a build error. See https://github.com/xrootd/xrootd/issues/1666. (cherry picked from commit f4bd8e740a99828d1232494b9d92a25fe2c39f65). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10374
https://github.com/root-project/root/pull/10374:282,safety,test,tested,282,[cmake] Enable openssl3 for xrootd (v626); For Ubuntu 22.04 we will otherwise get a build error. See https://github.com/xrootd/xrootd/issues/1666. (cherry picked from commit f4bd8e740a99828d1232494b9d92a25fe2c39f65). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10374
https://github.com/root-project/root/pull/10374:312,safety,updat,updated,312,[cmake] Enable openssl3 for xrootd (v626); For Ubuntu 22.04 we will otherwise get a build error. See https://github.com/xrootd/xrootd/issues/1666. (cherry picked from commit f4bd8e740a99828d1232494b9d92a25fe2c39f65). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10374
https://github.com/root-project/root/pull/10374:312,security,updat,updated,312,[cmake] Enable openssl3 for xrootd (v626); For Ubuntu 22.04 we will otherwise get a build error. See https://github.com/xrootd/xrootd/issues/1666. (cherry picked from commit f4bd8e740a99828d1232494b9d92a25fe2c39f65). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10374
https://github.com/root-project/root/pull/10374:282,testability,test,tested,282,[cmake] Enable openssl3 for xrootd (v626); For Ubuntu 22.04 we will otherwise get a build error. See https://github.com/xrootd/xrootd/issues/1666. (cherry picked from commit f4bd8e740a99828d1232494b9d92a25fe2c39f65). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10374
https://github.com/root-project/root/pull/10374:90,usability,error,error,90,[cmake] Enable openssl3 for xrootd (v626); For Ubuntu 22.04 we will otherwise get a build error. See https://github.com/xrootd/xrootd/issues/1666. (cherry picked from commit f4bd8e740a99828d1232494b9d92a25fe2c39f65). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10374
https://github.com/root-project/root/pull/10375:52,deployability,build,builds,52,"[cmake] Bump davix to 0.8.1 (v6.26); Fixes macOS 12 builds (no ""python"", only ""python3""). Davix now uses curl instead of neon. (cherry picked from commit 4fb53c7adfb4df5fb2652b234c609af951a98edc). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10375
https://github.com/root-project/root/pull/10375:292,deployability,updat,updated,292,"[cmake] Bump davix to 0.8.1 (v6.26); Fixes macOS 12 builds (no ""python"", only ""python3""). Davix now uses curl instead of neon. (cherry picked from commit 4fb53c7adfb4df5fb2652b234c609af951a98edc). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10375
https://github.com/root-project/root/pull/10375:262,safety,test,tested,262,"[cmake] Bump davix to 0.8.1 (v6.26); Fixes macOS 12 builds (no ""python"", only ""python3""). Davix now uses curl instead of neon. (cherry picked from commit 4fb53c7adfb4df5fb2652b234c609af951a98edc). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10375
https://github.com/root-project/root/pull/10375:292,safety,updat,updated,292,"[cmake] Bump davix to 0.8.1 (v6.26); Fixes macOS 12 builds (no ""python"", only ""python3""). Davix now uses curl instead of neon. (cherry picked from commit 4fb53c7adfb4df5fb2652b234c609af951a98edc). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10375
https://github.com/root-project/root/pull/10375:292,security,updat,updated,292,"[cmake] Bump davix to 0.8.1 (v6.26); Fixes macOS 12 builds (no ""python"", only ""python3""). Davix now uses curl instead of neon. (cherry picked from commit 4fb53c7adfb4df5fb2652b234c609af951a98edc). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10375
https://github.com/root-project/root/pull/10375:262,testability,test,tested,262,"[cmake] Bump davix to 0.8.1 (v6.26); Fixes macOS 12 builds (no ""python"", only ""python3""). Davix now uses curl instead of neon. (cherry picked from commit 4fb53c7adfb4df5fb2652b234c609af951a98edc). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10375
https://github.com/root-project/root/pull/10376:48,deployability,patch,patches,48,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 11; This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10293.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10376
https://github.com/root-project/root/pull/10376:150,deployability,patch,patches,150,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 11; This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10293.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10376
https://github.com/root-project/root/pull/10376:48,safety,patch,patches,48,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 11; This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10293.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10376
https://github.com/root-project/root/pull/10376:150,safety,patch,patches,150,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 11; This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10293.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10376
https://github.com/root-project/root/pull/10376:48,security,patch,patches,48,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 11; This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10293.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10376
https://github.com/root-project/root/pull/10376:150,security,patch,patches,150,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 11; This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10293.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10376
https://github.com/root-project/root/pull/10377:43,modifiability,variab,variable,43,Backporting some commits that avoid unused variable warnings on mac; Backpots of:. * https://github.com/root-project/root/pull/9877. * https://github.com/root-project/root/pull/9876,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10377
https://github.com/root-project/root/pull/10377:30,safety,avoid,avoid,30,Backporting some commits that avoid unused variable warnings on mac; Backpots of:. * https://github.com/root-project/root/pull/9877. * https://github.com/root-project/root/pull/9876,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10377
https://github.com/root-project/root/pull/10378:148,availability,error,errors,148,"Close files before deleting them in TContext tutorial; The TFile objects need to be closed before the ROOT files can be. deleted. Otherwise, we get errors such as these on Windows 10:. ```. Traceback (most recent call last):. File ""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py"", line 56, in <module>. os.remove(""pyroot006_file_{}.root"".format(i)). PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10378
https://github.com/root-project/root/pull/10378:558,availability,Error,Error,558,"Close files before deleting them in TContext tutorial; The TFile objects need to be closed before the ROOT files can be. deleted. Otherwise, we get errors such as these on Windows 10:. ```. Traceback (most recent call last):. File ""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py"", line 56, in <module>. os.remove(""pyroot006_file_{}.root"".format(i)). PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10378
https://github.com/root-project/root/pull/10378:663,availability,error,error,663,"Close files before deleting them in TContext tutorial; The TFile objects need to be closed before the ROOT files can be. deleted. Otherwise, we get errors such as these on Windows 10:. ```. Traceback (most recent call last):. File ""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py"", line 56, in <module>. os.remove(""pyroot006_file_{}.root"".format(i)). PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10378
https://github.com/root-project/root/pull/10378:698,availability,servic,services,698,"Close files before deleting them in TContext tutorial; The TFile objects need to be closed before the ROOT files can be. deleted. Otherwise, we get errors such as these on Windows 10:. ```. Traceback (most recent call last):. File ""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py"", line 56, in <module>. os.remove(""pyroot006_file_{}.root"".format(i)). PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10378
https://github.com/root-project/root/pull/10378:235,deployability,build,build,235,"Close files before deleting them in TContext tutorial; The TFile objects need to be closed before the ROOT files can be. deleted. Otherwise, we get errors such as these on Windows 10:. ```. Traceback (most recent call last):. File ""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py"", line 56, in <module>. os.remove(""pyroot006_file_{}.root"".format(i)). PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10378
https://github.com/root-project/root/pull/10378:360,deployability,modul,module,360,"Close files before deleting them in TContext tutorial; The TFile objects need to be closed before the ROOT files can be. deleted. Otherwise, we get errors such as these on Windows 10:. ```. Traceback (most recent call last):. File ""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py"", line 56, in <module>. os.remove(""pyroot006_file_{}.root"".format(i)). PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10378
https://github.com/root-project/root/pull/10378:570,deployability,build,build,570,"Close files before deleting them in TContext tutorial; The TFile objects need to be closed before the ROOT files can be. deleted. Otherwise, we get errors such as these on Windows 10:. ```. Traceback (most recent call last):. File ""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py"", line 56, in <module>. os.remove(""pyroot006_file_{}.root"".format(i)). PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10378
https://github.com/root-project/root/pull/10378:620,deployability,build,build,620,"Close files before deleting them in TContext tutorial; The TFile objects need to be closed before the ROOT files can be. deleted. Otherwise, we get errors such as these on Windows 10:. ```. Traceback (most recent call last):. File ""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py"", line 56, in <module>. os.remove(""pyroot006_file_{}.root"".format(i)). PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10378
https://github.com/root-project/root/pull/10378:698,deployability,servic,services,698,"Close files before deleting them in TContext tutorial; The TFile objects need to be closed before the ROOT files can be. deleted. Otherwise, we get errors such as these on Windows 10:. ```. Traceback (most recent call last):. File ""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py"", line 56, in <module>. os.remove(""pyroot006_file_{}.root"".format(i)). PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10378
https://github.com/root-project/root/pull/10378:652,integrability,messag,message,652,"Close files before deleting them in TContext tutorial; The TFile objects need to be closed before the ROOT files can be. deleted. Otherwise, we get errors such as these on Windows 10:. ```. Traceback (most recent call last):. File ""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py"", line 56, in <module>. os.remove(""pyroot006_file_{}.root"".format(i)). PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10378
https://github.com/root-project/root/pull/10378:698,integrability,servic,services,698,"Close files before deleting them in TContext tutorial; The TFile objects need to be closed before the ROOT files can be. deleted. Otherwise, we get errors such as these on Windows 10:. ```. Traceback (most recent call last):. File ""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py"", line 56, in <module>. os.remove(""pyroot006_file_{}.root"".format(i)). PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10378
https://github.com/root-project/root/pull/10378:404,interoperability,format,format,404,"Close files before deleting them in TContext tutorial; The TFile objects need to be closed before the ROOT files can be. deleted. Otherwise, we get errors such as these on Windows 10:. ```. Traceback (most recent call last):. File ""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py"", line 56, in <module>. os.remove(""pyroot006_file_{}.root"".format(i)). PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10378
https://github.com/root-project/root/pull/10378:652,interoperability,messag,message,652,"Close files before deleting them in TContext tutorial; The TFile objects need to be closed before the ROOT files can be. deleted. Otherwise, we get errors such as these on Windows 10:. ```. Traceback (most recent call last):. File ""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py"", line 56, in <module>. os.remove(""pyroot006_file_{}.root"".format(i)). PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10378
https://github.com/root-project/root/pull/10378:360,modifiability,modul,module,360,"Close files before deleting them in TContext tutorial; The TFile objects need to be closed before the ROOT files can be. deleted. Otherwise, we get errors such as these on Windows 10:. ```. Traceback (most recent call last):. File ""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py"", line 56, in <module>. os.remove(""pyroot006_file_{}.root"".format(i)). PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10378
https://github.com/root-project/root/pull/10378:698,modifiability,servic,services,698,"Close files before deleting them in TContext tutorial; The TFile objects need to be closed before the ROOT files can be. deleted. Otherwise, we get errors such as these on Windows 10:. ```. Traceback (most recent call last):. File ""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py"", line 56, in <module>. os.remove(""pyroot006_file_{}.root"".format(i)). PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10378
https://github.com/root-project/root/pull/10378:148,performance,error,errors,148,"Close files before deleting them in TContext tutorial; The TFile objects need to be closed before the ROOT files can be. deleted. Otherwise, we get errors such as these on Windows 10:. ```. Traceback (most recent call last):. File ""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py"", line 56, in <module>. os.remove(""pyroot006_file_{}.root"".format(i)). PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10378
https://github.com/root-project/root/pull/10378:558,performance,Error,Error,558,"Close files before deleting them in TContext tutorial; The TFile objects need to be closed before the ROOT files can be. deleted. Otherwise, we get errors such as these on Windows 10:. ```. Traceback (most recent call last):. File ""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py"", line 56, in <module>. os.remove(""pyroot006_file_{}.root"".format(i)). PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10378
https://github.com/root-project/root/pull/10378:663,performance,error,error,663,"Close files before deleting them in TContext tutorial; The TFile objects need to be closed before the ROOT files can be. deleted. Otherwise, we get errors such as these on Windows 10:. ```. Traceback (most recent call last):. File ""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py"", line 56, in <module>. os.remove(""pyroot006_file_{}.root"".format(i)). PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10378
https://github.com/root-project/root/pull/10378:148,safety,error,errors,148,"Close files before deleting them in TContext tutorial; The TFile objects need to be closed before the ROOT files can be. deleted. Otherwise, we get errors such as these on Windows 10:. ```. Traceback (most recent call last):. File ""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py"", line 56, in <module>. os.remove(""pyroot006_file_{}.root"".format(i)). PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10378
https://github.com/root-project/root/pull/10378:360,safety,modul,module,360,"Close files before deleting them in TContext tutorial; The TFile objects need to be closed before the ROOT files can be. deleted. Otherwise, we get errors such as these on Windows 10:. ```. Traceback (most recent call last):. File ""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py"", line 56, in <module>. os.remove(""pyroot006_file_{}.root"".format(i)). PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10378
https://github.com/root-project/root/pull/10378:416,safety,Permiss,PermissionError,416,"Close files before deleting them in TContext tutorial; The TFile objects need to be closed before the ROOT files can be. deleted. Otherwise, we get errors such as these on Windows 10:. ```. Traceback (most recent call last):. File ""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py"", line 56, in <module>. os.remove(""pyroot006_file_{}.root"".format(i)). PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10378
https://github.com/root-project/root/pull/10378:558,safety,Error,Error,558,"Close files before deleting them in TContext tutorial; The TFile objects need to be closed before the ROOT files can be. deleted. Otherwise, we get errors such as these on Windows 10:. ```. Traceback (most recent call last):. File ""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py"", line 56, in <module>. os.remove(""pyroot006_file_{}.root"".format(i)). PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10378
https://github.com/root-project/root/pull/10378:663,safety,error,error,663,"Close files before deleting them in TContext tutorial; The TFile objects need to be closed before the ROOT files can be. deleted. Otherwise, we get errors such as these on Windows 10:. ```. Traceback (most recent call last):. File ""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py"", line 56, in <module>. os.remove(""pyroot006_file_{}.root"".format(i)). PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10378
https://github.com/root-project/root/pull/10378:820,safety,test,testReport,820,"Close files before deleting them in TContext tutorial; The TFile objects need to be closed before the ROOT files can be. deleted. Otherwise, we get errors such as these on Windows 10:. ```. Traceback (most recent call last):. File ""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py"", line 56, in <module>. os.remove(""pyroot006_file_{}.root"".format(i)). PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10378
https://github.com/root-project/root/pull/10378:466,security,access,access,466,"Close files before deleting them in TContext tutorial; The TFile objects need to be closed before the ROOT files can be. deleted. Otherwise, we get errors such as these on Windows 10:. ```. Traceback (most recent call last):. File ""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py"", line 56, in <module>. os.remove(""pyroot006_file_{}.root"".format(i)). PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10378
https://github.com/root-project/root/pull/10378:190,testability,Trace,Traceback,190,"Close files before deleting them in TContext tutorial; The TFile objects need to be closed before the ROOT files can be. deleted. Otherwise, we get errors such as these on Windows 10:. ```. Traceback (most recent call last):. File ""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py"", line 56, in <module>. os.remove(""pyroot006_file_{}.root"".format(i)). PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10378
https://github.com/root-project/root/pull/10378:820,testability,test,testReport,820,"Close files before deleting them in TContext tutorial; The TFile objects need to be closed before the ROOT files can be. deleted. Otherwise, we get errors such as these on Windows 10:. ```. Traceback (most recent call last):. File ""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py"", line 56, in <module>. os.remove(""pyroot006_file_{}.root"".format(i)). PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10378
https://github.com/root-project/root/pull/10378:0,usability,Close,Close,0,"Close files before deleting them in TContext tutorial; The TFile objects need to be closed before the ROOT files can be. deleted. Otherwise, we get errors such as these on Windows 10:. ```. Traceback (most recent call last):. File ""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py"", line 56, in <module>. os.remove(""pyroot006_file_{}.root"".format(i)). PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10378
https://github.com/root-project/root/pull/10378:84,usability,close,closed,84,"Close files before deleting them in TContext tutorial; The TFile objects need to be closed before the ROOT files can be. deleted. Otherwise, we get errors such as these on Windows 10:. ```. Traceback (most recent call last):. File ""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py"", line 56, in <module>. os.remove(""pyroot006_file_{}.root"".format(i)). PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10378
https://github.com/root-project/root/pull/10378:148,usability,error,errors,148,"Close files before deleting them in TContext tutorial; The TFile objects need to be closed before the ROOT files can be. deleted. Otherwise, we get errors such as these on Windows 10:. ```. Traceback (most recent call last):. File ""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py"", line 56, in <module>. os.remove(""pyroot006_file_{}.root"".format(i)). PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10378
https://github.com/root-project/root/pull/10378:558,usability,Error,Error,558,"Close files before deleting them in TContext tutorial; The TFile objects need to be closed before the ROOT files can be. deleted. Otherwise, we get errors such as these on Windows 10:. ```. Traceback (most recent call last):. File ""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py"", line 56, in <module>. os.remove(""pyroot006_file_{}.root"".format(i)). PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10378
https://github.com/root-project/root/pull/10378:663,usability,error,error,663,"Close files before deleting them in TContext tutorial; The TFile objects need to be closed before the ROOT files can be. deleted. Otherwise, we get errors such as these on Windows 10:. ```. Traceback (most recent call last):. File ""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py"", line 56, in <module>. os.remove(""pyroot006_file_{}.root"".format(i)). PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10378
https://github.com/root-project/root/pull/10379:131,availability,error,error,131,"Fix `TMVA_Higgs_Classification.C` tutorial on Windows; On Windows, the `TMVA_Higgs_Classification.C` tutorial gives the. following error:. ```. Processing C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/tmva/TMVA_Higgs_Classification.C... In file included from input_line_10:1:. C:\build\night\LABEL\windows10\SPEC\default\V\master\root\tutorials\tmva\TMVA_Higgs_Classification.C:322:27: error: no member named 'Python_Executable' in namespace 'TMVA'. gSystem->Exec(TMVA::Python_Executable() + "" make_higgs_model.py"");. ~~~~~~^. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. Using the same trick to get the Python executable name via. `gROOT->ProcessLine` that is also used in the other TMVA tutorials like. `TMVA_CNN_Classification.C` should fix the problem. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_Higgs_Classification/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10379
https://github.com/root-project/root/pull/10379:408,availability,error,error,408,"Fix `TMVA_Higgs_Classification.C` tutorial on Windows; On Windows, the `TMVA_Higgs_Classification.C` tutorial gives the. following error:. ```. Processing C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/tmva/TMVA_Higgs_Classification.C... In file included from input_line_10:1:. C:\build\night\LABEL\windows10\SPEC\default\V\master\root\tutorials\tmva\TMVA_Higgs_Classification.C:322:27: error: no member named 'Python_Executable' in namespace 'TMVA'. gSystem->Exec(TMVA::Python_Executable() + "" make_higgs_model.py"");. ~~~~~~^. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. Using the same trick to get the Python executable name via. `gROOT->ProcessLine` that is also used in the other TMVA tutorials like. `TMVA_CNN_Classification.C` should fix the problem. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_Higgs_Classification/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10379
https://github.com/root-project/root/pull/10379:555,availability,Error,Error,555,"Fix `TMVA_Higgs_Classification.C` tutorial on Windows; On Windows, the `TMVA_Higgs_Classification.C` tutorial gives the. following error:. ```. Processing C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/tmva/TMVA_Higgs_Classification.C... In file included from input_line_10:1:. C:\build\night\LABEL\windows10\SPEC\default\V\master\root\tutorials\tmva\TMVA_Higgs_Classification.C:322:27: error: no member named 'Python_Executable' in namespace 'TMVA'. gSystem->Exec(TMVA::Python_Executable() + "" make_higgs_model.py"");. ~~~~~~^. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. Using the same trick to get the Python executable name via. `gROOT->ProcessLine` that is also used in the other TMVA tutorials like. `TMVA_CNN_Classification.C` should fix the problem. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_Higgs_Classification/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10379
https://github.com/root-project/root/pull/10379:660,availability,error,error,660,"Fix `TMVA_Higgs_Classification.C` tutorial on Windows; On Windows, the `TMVA_Higgs_Classification.C` tutorial gives the. following error:. ```. Processing C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/tmva/TMVA_Higgs_Classification.C... In file included from input_line_10:1:. C:\build\night\LABEL\windows10\SPEC\default\V\master\root\tutorials\tmva\TMVA_Higgs_Classification.C:322:27: error: no member named 'Python_Executable' in namespace 'TMVA'. gSystem->Exec(TMVA::Python_Executable() + "" make_higgs_model.py"");. ~~~~~~^. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. Using the same trick to get the Python executable name via. `gROOT->ProcessLine` that is also used in the other TMVA tutorials like. `TMVA_CNN_Classification.C` should fix the problem. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_Higgs_Classification/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10379
https://github.com/root-project/root/pull/10379:880,availability,servic,services,880,"Fix `TMVA_Higgs_Classification.C` tutorial on Windows; On Windows, the `TMVA_Higgs_Classification.C` tutorial gives the. following error:. ```. Processing C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/tmva/TMVA_Higgs_Classification.C... In file included from input_line_10:1:. C:\build\night\LABEL\windows10\SPEC\default\V\master\root\tutorials\tmva\TMVA_Higgs_Classification.C:322:27: error: no member named 'Python_Executable' in namespace 'TMVA'. gSystem->Exec(TMVA::Python_Executable() + "" make_higgs_model.py"");. ~~~~~~^. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. Using the same trick to get the Python executable name via. `gROOT->ProcessLine` that is also used in the other TMVA tutorials like. `TMVA_CNN_Classification.C` should fix the problem. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_Higgs_Classification/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10379
https://github.com/root-project/root/pull/10379:158,deployability,build,build,158,"Fix `TMVA_Higgs_Classification.C` tutorial on Windows; On Windows, the `TMVA_Higgs_Classification.C` tutorial gives the. following error:. ```. Processing C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/tmva/TMVA_Higgs_Classification.C... In file included from input_line_10:1:. C:\build\night\LABEL\windows10\SPEC\default\V\master\root\tutorials\tmva\TMVA_Higgs_Classification.C:322:27: error: no member named 'Python_Executable' in namespace 'TMVA'. gSystem->Exec(TMVA::Python_Executable() + "" make_higgs_model.py"");. ~~~~~~^. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. Using the same trick to get the Python executable name via. `gROOT->ProcessLine` that is also used in the other TMVA tutorials like. `TMVA_CNN_Classification.C` should fix the problem. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_Higgs_Classification/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10379
https://github.com/root-project/root/pull/10379:302,deployability,build,build,302,"Fix `TMVA_Higgs_Classification.C` tutorial on Windows; On Windows, the `TMVA_Higgs_Classification.C` tutorial gives the. following error:. ```. Processing C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/tmva/TMVA_Higgs_Classification.C... In file included from input_line_10:1:. C:\build\night\LABEL\windows10\SPEC\default\V\master\root\tutorials\tmva\TMVA_Higgs_Classification.C:322:27: error: no member named 'Python_Executable' in namespace 'TMVA'. gSystem->Exec(TMVA::Python_Executable() + "" make_higgs_model.py"");. ~~~~~~^. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. Using the same trick to get the Python executable name via. `gROOT->ProcessLine` that is also used in the other TMVA tutorials like. `TMVA_CNN_Classification.C` should fix the problem. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_Higgs_Classification/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10379
https://github.com/root-project/root/pull/10379:567,deployability,build,build,567,"Fix `TMVA_Higgs_Classification.C` tutorial on Windows; On Windows, the `TMVA_Higgs_Classification.C` tutorial gives the. following error:. ```. Processing C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/tmva/TMVA_Higgs_Classification.C... In file included from input_line_10:1:. C:\build\night\LABEL\windows10\SPEC\default\V\master\root\tutorials\tmva\TMVA_Higgs_Classification.C:322:27: error: no member named 'Python_Executable' in namespace 'TMVA'. gSystem->Exec(TMVA::Python_Executable() + "" make_higgs_model.py"");. ~~~~~~^. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. Using the same trick to get the Python executable name via. `gROOT->ProcessLine` that is also used in the other TMVA tutorials like. `TMVA_CNN_Classification.C` should fix the problem. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_Higgs_Classification/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10379
https://github.com/root-project/root/pull/10379:617,deployability,build,build,617,"Fix `TMVA_Higgs_Classification.C` tutorial on Windows; On Windows, the `TMVA_Higgs_Classification.C` tutorial gives the. following error:. ```. Processing C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/tmva/TMVA_Higgs_Classification.C... In file included from input_line_10:1:. C:\build\night\LABEL\windows10\SPEC\default\V\master\root\tutorials\tmva\TMVA_Higgs_Classification.C:322:27: error: no member named 'Python_Executable' in namespace 'TMVA'. gSystem->Exec(TMVA::Python_Executable() + "" make_higgs_model.py"");. ~~~~~~^. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. Using the same trick to get the Python executable name via. `gROOT->ProcessLine` that is also used in the other TMVA tutorials like. `TMVA_CNN_Classification.C` should fix the problem. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_Higgs_Classification/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10379
https://github.com/root-project/root/pull/10379:880,deployability,servic,services,880,"Fix `TMVA_Higgs_Classification.C` tutorial on Windows; On Windows, the `TMVA_Higgs_Classification.C` tutorial gives the. following error:. ```. Processing C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/tmva/TMVA_Higgs_Classification.C... In file included from input_line_10:1:. C:\build\night\LABEL\windows10\SPEC\default\V\master\root\tutorials\tmva\TMVA_Higgs_Classification.C:322:27: error: no member named 'Python_Executable' in namespace 'TMVA'. gSystem->Exec(TMVA::Python_Executable() + "" make_higgs_model.py"");. ~~~~~~^. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. Using the same trick to get the Python executable name via. `gROOT->ProcessLine` that is also used in the other TMVA tutorials like. `TMVA_CNN_Classification.C` should fix the problem. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_Higgs_Classification/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10379
https://github.com/root-project/root/pull/10379:649,integrability,messag,message,649,"Fix `TMVA_Higgs_Classification.C` tutorial on Windows; On Windows, the `TMVA_Higgs_Classification.C` tutorial gives the. following error:. ```. Processing C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/tmva/TMVA_Higgs_Classification.C... In file included from input_line_10:1:. C:\build\night\LABEL\windows10\SPEC\default\V\master\root\tutorials\tmva\TMVA_Higgs_Classification.C:322:27: error: no member named 'Python_Executable' in namespace 'TMVA'. gSystem->Exec(TMVA::Python_Executable() + "" make_higgs_model.py"");. ~~~~~~^. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. Using the same trick to get the Python executable name via. `gROOT->ProcessLine` that is also used in the other TMVA tutorials like. `TMVA_CNN_Classification.C` should fix the problem. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_Higgs_Classification/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10379
https://github.com/root-project/root/pull/10379:880,integrability,servic,services,880,"Fix `TMVA_Higgs_Classification.C` tutorial on Windows; On Windows, the `TMVA_Higgs_Classification.C` tutorial gives the. following error:. ```. Processing C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/tmva/TMVA_Higgs_Classification.C... In file included from input_line_10:1:. C:\build\night\LABEL\windows10\SPEC\default\V\master\root\tutorials\tmva\TMVA_Higgs_Classification.C:322:27: error: no member named 'Python_Executable' in namespace 'TMVA'. gSystem->Exec(TMVA::Python_Executable() + "" make_higgs_model.py"");. ~~~~~~^. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. Using the same trick to get the Python executable name via. `gROOT->ProcessLine` that is also used in the other TMVA tutorials like. `TMVA_CNN_Classification.C` should fix the problem. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_Higgs_Classification/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10379
https://github.com/root-project/root/pull/10379:649,interoperability,messag,message,649,"Fix `TMVA_Higgs_Classification.C` tutorial on Windows; On Windows, the `TMVA_Higgs_Classification.C` tutorial gives the. following error:. ```. Processing C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/tmva/TMVA_Higgs_Classification.C... In file included from input_line_10:1:. C:\build\night\LABEL\windows10\SPEC\default\V\master\root\tutorials\tmva\TMVA_Higgs_Classification.C:322:27: error: no member named 'Python_Executable' in namespace 'TMVA'. gSystem->Exec(TMVA::Python_Executable() + "" make_higgs_model.py"");. ~~~~~~^. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. Using the same trick to get the Python executable name via. `gROOT->ProcessLine` that is also used in the other TMVA tutorials like. `TMVA_CNN_Classification.C` should fix the problem. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_Higgs_Classification/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10379
https://github.com/root-project/root/pull/10379:880,modifiability,servic,services,880,"Fix `TMVA_Higgs_Classification.C` tutorial on Windows; On Windows, the `TMVA_Higgs_Classification.C` tutorial gives the. following error:. ```. Processing C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/tmva/TMVA_Higgs_Classification.C... In file included from input_line_10:1:. C:\build\night\LABEL\windows10\SPEC\default\V\master\root\tutorials\tmva\TMVA_Higgs_Classification.C:322:27: error: no member named 'Python_Executable' in namespace 'TMVA'. gSystem->Exec(TMVA::Python_Executable() + "" make_higgs_model.py"");. ~~~~~~^. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. Using the same trick to get the Python executable name via. `gROOT->ProcessLine` that is also used in the other TMVA tutorials like. `TMVA_CNN_Classification.C` should fix the problem. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_Higgs_Classification/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10379
https://github.com/root-project/root/pull/10379:131,performance,error,error,131,"Fix `TMVA_Higgs_Classification.C` tutorial on Windows; On Windows, the `TMVA_Higgs_Classification.C` tutorial gives the. following error:. ```. Processing C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/tmva/TMVA_Higgs_Classification.C... In file included from input_line_10:1:. C:\build\night\LABEL\windows10\SPEC\default\V\master\root\tutorials\tmva\TMVA_Higgs_Classification.C:322:27: error: no member named 'Python_Executable' in namespace 'TMVA'. gSystem->Exec(TMVA::Python_Executable() + "" make_higgs_model.py"");. ~~~~~~^. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. Using the same trick to get the Python executable name via. `gROOT->ProcessLine` that is also used in the other TMVA tutorials like. `TMVA_CNN_Classification.C` should fix the problem. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_Higgs_Classification/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10379
https://github.com/root-project/root/pull/10379:408,performance,error,error,408,"Fix `TMVA_Higgs_Classification.C` tutorial on Windows; On Windows, the `TMVA_Higgs_Classification.C` tutorial gives the. following error:. ```. Processing C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/tmva/TMVA_Higgs_Classification.C... In file included from input_line_10:1:. C:\build\night\LABEL\windows10\SPEC\default\V\master\root\tutorials\tmva\TMVA_Higgs_Classification.C:322:27: error: no member named 'Python_Executable' in namespace 'TMVA'. gSystem->Exec(TMVA::Python_Executable() + "" make_higgs_model.py"");. ~~~~~~^. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. Using the same trick to get the Python executable name via. `gROOT->ProcessLine` that is also used in the other TMVA tutorials like. `TMVA_CNN_Classification.C` should fix the problem. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_Higgs_Classification/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10379
https://github.com/root-project/root/pull/10379:555,performance,Error,Error,555,"Fix `TMVA_Higgs_Classification.C` tutorial on Windows; On Windows, the `TMVA_Higgs_Classification.C` tutorial gives the. following error:. ```. Processing C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/tmva/TMVA_Higgs_Classification.C... In file included from input_line_10:1:. C:\build\night\LABEL\windows10\SPEC\default\V\master\root\tutorials\tmva\TMVA_Higgs_Classification.C:322:27: error: no member named 'Python_Executable' in namespace 'TMVA'. gSystem->Exec(TMVA::Python_Executable() + "" make_higgs_model.py"");. ~~~~~~^. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. Using the same trick to get the Python executable name via. `gROOT->ProcessLine` that is also used in the other TMVA tutorials like. `TMVA_CNN_Classification.C` should fix the problem. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_Higgs_Classification/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10379
https://github.com/root-project/root/pull/10379:660,performance,error,error,660,"Fix `TMVA_Higgs_Classification.C` tutorial on Windows; On Windows, the `TMVA_Higgs_Classification.C` tutorial gives the. following error:. ```. Processing C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/tmva/TMVA_Higgs_Classification.C... In file included from input_line_10:1:. C:\build\night\LABEL\windows10\SPEC\default\V\master\root\tutorials\tmva\TMVA_Higgs_Classification.C:322:27: error: no member named 'Python_Executable' in namespace 'TMVA'. gSystem->Exec(TMVA::Python_Executable() + "" make_higgs_model.py"");. ~~~~~~^. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. Using the same trick to get the Python executable name via. `gROOT->ProcessLine` that is also used in the other TMVA tutorials like. `TMVA_CNN_Classification.C` should fix the problem. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_Higgs_Classification/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10379
https://github.com/root-project/root/pull/10379:131,safety,error,error,131,"Fix `TMVA_Higgs_Classification.C` tutorial on Windows; On Windows, the `TMVA_Higgs_Classification.C` tutorial gives the. following error:. ```. Processing C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/tmva/TMVA_Higgs_Classification.C... In file included from input_line_10:1:. C:\build\night\LABEL\windows10\SPEC\default\V\master\root\tutorials\tmva\TMVA_Higgs_Classification.C:322:27: error: no member named 'Python_Executable' in namespace 'TMVA'. gSystem->Exec(TMVA::Python_Executable() + "" make_higgs_model.py"");. ~~~~~~^. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. Using the same trick to get the Python executable name via. `gROOT->ProcessLine` that is also used in the other TMVA tutorials like. `TMVA_CNN_Classification.C` should fix the problem. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_Higgs_Classification/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10379
https://github.com/root-project/root/pull/10379:408,safety,error,error,408,"Fix `TMVA_Higgs_Classification.C` tutorial on Windows; On Windows, the `TMVA_Higgs_Classification.C` tutorial gives the. following error:. ```. Processing C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/tmva/TMVA_Higgs_Classification.C... In file included from input_line_10:1:. C:\build\night\LABEL\windows10\SPEC\default\V\master\root\tutorials\tmva\TMVA_Higgs_Classification.C:322:27: error: no member named 'Python_Executable' in namespace 'TMVA'. gSystem->Exec(TMVA::Python_Executable() + "" make_higgs_model.py"");. ~~~~~~^. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. Using the same trick to get the Python executable name via. `gROOT->ProcessLine` that is also used in the other TMVA tutorials like. `TMVA_CNN_Classification.C` should fix the problem. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_Higgs_Classification/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10379
https://github.com/root-project/root/pull/10379:555,safety,Error,Error,555,"Fix `TMVA_Higgs_Classification.C` tutorial on Windows; On Windows, the `TMVA_Higgs_Classification.C` tutorial gives the. following error:. ```. Processing C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/tmva/TMVA_Higgs_Classification.C... In file included from input_line_10:1:. C:\build\night\LABEL\windows10\SPEC\default\V\master\root\tutorials\tmva\TMVA_Higgs_Classification.C:322:27: error: no member named 'Python_Executable' in namespace 'TMVA'. gSystem->Exec(TMVA::Python_Executable() + "" make_higgs_model.py"");. ~~~~~~^. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. Using the same trick to get the Python executable name via. `gROOT->ProcessLine` that is also used in the other TMVA tutorials like. `TMVA_CNN_Classification.C` should fix the problem. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_Higgs_Classification/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10379
https://github.com/root-project/root/pull/10379:660,safety,error,error,660,"Fix `TMVA_Higgs_Classification.C` tutorial on Windows; On Windows, the `TMVA_Higgs_Classification.C` tutorial gives the. following error:. ```. Processing C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/tmva/TMVA_Higgs_Classification.C... In file included from input_line_10:1:. C:\build\night\LABEL\windows10\SPEC\default\V\master\root\tutorials\tmva\TMVA_Higgs_Classification.C:322:27: error: no member named 'Python_Executable' in namespace 'TMVA'. gSystem->Exec(TMVA::Python_Executable() + "" make_higgs_model.py"");. ~~~~~~^. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. Using the same trick to get the Python executable name via. `gROOT->ProcessLine` that is also used in the other TMVA tutorials like. `TMVA_CNN_Classification.C` should fix the problem. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_Higgs_Classification/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10379
https://github.com/root-project/root/pull/10379:1002,safety,test,testReport,1002,"Fix `TMVA_Higgs_Classification.C` tutorial on Windows; On Windows, the `TMVA_Higgs_Classification.C` tutorial gives the. following error:. ```. Processing C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/tmva/TMVA_Higgs_Classification.C... In file included from input_line_10:1:. C:\build\night\LABEL\windows10\SPEC\default\V\master\root\tutorials\tmva\TMVA_Higgs_Classification.C:322:27: error: no member named 'Python_Executable' in namespace 'TMVA'. gSystem->Exec(TMVA::Python_Executable() + "" make_higgs_model.py"");. ~~~~~~^. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. Using the same trick to get the Python executable name via. `gROOT->ProcessLine` that is also used in the other TMVA tutorials like. `TMVA_CNN_Classification.C` should fix the problem. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_Higgs_Classification/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10379
https://github.com/root-project/root/pull/10379:1002,testability,test,testReport,1002,"Fix `TMVA_Higgs_Classification.C` tutorial on Windows; On Windows, the `TMVA_Higgs_Classification.C` tutorial gives the. following error:. ```. Processing C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/tmva/TMVA_Higgs_Classification.C... In file included from input_line_10:1:. C:\build\night\LABEL\windows10\SPEC\default\V\master\root\tutorials\tmva\TMVA_Higgs_Classification.C:322:27: error: no member named 'Python_Executable' in namespace 'TMVA'. gSystem->Exec(TMVA::Python_Executable() + "" make_higgs_model.py"");. ~~~~~~^. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. Using the same trick to get the Python executable name via. `gROOT->ProcessLine` that is also used in the other TMVA tutorials like. `TMVA_CNN_Classification.C` should fix the problem. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_Higgs_Classification/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10379
https://github.com/root-project/root/pull/10379:131,usability,error,error,131,"Fix `TMVA_Higgs_Classification.C` tutorial on Windows; On Windows, the `TMVA_Higgs_Classification.C` tutorial gives the. following error:. ```. Processing C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/tmva/TMVA_Higgs_Classification.C... In file included from input_line_10:1:. C:\build\night\LABEL\windows10\SPEC\default\V\master\root\tutorials\tmva\TMVA_Higgs_Classification.C:322:27: error: no member named 'Python_Executable' in namespace 'TMVA'. gSystem->Exec(TMVA::Python_Executable() + "" make_higgs_model.py"");. ~~~~~~^. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. Using the same trick to get the Python executable name via. `gROOT->ProcessLine` that is also used in the other TMVA tutorials like. `TMVA_CNN_Classification.C` should fix the problem. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_Higgs_Classification/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10379
https://github.com/root-project/root/pull/10379:408,usability,error,error,408,"Fix `TMVA_Higgs_Classification.C` tutorial on Windows; On Windows, the `TMVA_Higgs_Classification.C` tutorial gives the. following error:. ```. Processing C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/tmva/TMVA_Higgs_Classification.C... In file included from input_line_10:1:. C:\build\night\LABEL\windows10\SPEC\default\V\master\root\tutorials\tmva\TMVA_Higgs_Classification.C:322:27: error: no member named 'Python_Executable' in namespace 'TMVA'. gSystem->Exec(TMVA::Python_Executable() + "" make_higgs_model.py"");. ~~~~~~^. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. Using the same trick to get the Python executable name via. `gROOT->ProcessLine` that is also used in the other TMVA tutorials like. `TMVA_CNN_Classification.C` should fix the problem. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_Higgs_Classification/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10379
https://github.com/root-project/root/pull/10379:555,usability,Error,Error,555,"Fix `TMVA_Higgs_Classification.C` tutorial on Windows; On Windows, the `TMVA_Higgs_Classification.C` tutorial gives the. following error:. ```. Processing C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/tmva/TMVA_Higgs_Classification.C... In file included from input_line_10:1:. C:\build\night\LABEL\windows10\SPEC\default\V\master\root\tutorials\tmva\TMVA_Higgs_Classification.C:322:27: error: no member named 'Python_Executable' in namespace 'TMVA'. gSystem->Exec(TMVA::Python_Executable() + "" make_higgs_model.py"");. ~~~~~~^. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. Using the same trick to get the Python executable name via. `gROOT->ProcessLine` that is also used in the other TMVA tutorials like. `TMVA_CNN_Classification.C` should fix the problem. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_Higgs_Classification/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10379
https://github.com/root-project/root/pull/10379:660,usability,error,error,660,"Fix `TMVA_Higgs_Classification.C` tutorial on Windows; On Windows, the `TMVA_Higgs_Classification.C` tutorial gives the. following error:. ```. Processing C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/tmva/TMVA_Higgs_Classification.C... In file included from input_line_10:1:. C:\build\night\LABEL\windows10\SPEC\default\V\master\root\tutorials\tmva\TMVA_Higgs_Classification.C:322:27: error: no member named 'Python_Executable' in namespace 'TMVA'. gSystem->Exec(TMVA::Python_Executable() + "" make_higgs_model.py"");. ~~~~~~^. CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):. error code: 1. ```. Using the same trick to get the Python executable name via. `gROOT->ProcessLine` that is also used in the other TMVA tutorials like. `TMVA_CNN_Classification.C` should fix the problem. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_Higgs_Classification/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10379
https://github.com/root-project/root/pull/10380:119,deployability,build,building,119,"Using higher-level wrapper of OpenSSL SHA1 hash function in civetweb; This is to get rid of deprecation warninigs when building on Ubuntu. 22.04. Should cause no backwards compatibility poblems, as the functions that. are used now are around at least since OpenSSL 1.0.2:. https://www.openssl.org/docs/man1.0.2/man3/EVP_DigestInit_ex.html. This patch was already applied to upstream civet:. https://github.com/civetweb/civetweb/pull/1072",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10380
https://github.com/root-project/root/pull/10380:345,deployability,patch,patch,345,"Using higher-level wrapper of OpenSSL SHA1 hash function in civetweb; This is to get rid of deprecation warninigs when building on Ubuntu. 22.04. Should cause no backwards compatibility poblems, as the functions that. are used now are around at least since OpenSSL 1.0.2:. https://www.openssl.org/docs/man1.0.2/man3/EVP_DigestInit_ex.html. This patch was already applied to upstream civet:. https://github.com/civetweb/civetweb/pull/1072",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10380
https://github.com/root-project/root/pull/10380:19,integrability,wrap,wrapper,19,"Using higher-level wrapper of OpenSSL SHA1 hash function in civetweb; This is to get rid of deprecation warninigs when building on Ubuntu. 22.04. Should cause no backwards compatibility poblems, as the functions that. are used now are around at least since OpenSSL 1.0.2:. https://www.openssl.org/docs/man1.0.2/man3/EVP_DigestInit_ex.html. This patch was already applied to upstream civet:. https://github.com/civetweb/civetweb/pull/1072",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10380
https://github.com/root-project/root/pull/10380:19,interoperability,wrapper,wrapper,19,"Using higher-level wrapper of OpenSSL SHA1 hash function in civetweb; This is to get rid of deprecation warninigs when building on Ubuntu. 22.04. Should cause no backwards compatibility poblems, as the functions that. are used now are around at least since OpenSSL 1.0.2:. https://www.openssl.org/docs/man1.0.2/man3/EVP_DigestInit_ex.html. This patch was already applied to upstream civet:. https://github.com/civetweb/civetweb/pull/1072",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10380
https://github.com/root-project/root/pull/10380:172,interoperability,compatib,compatibility,172,"Using higher-level wrapper of OpenSSL SHA1 hash function in civetweb; This is to get rid of deprecation warninigs when building on Ubuntu. 22.04. Should cause no backwards compatibility poblems, as the functions that. are used now are around at least since OpenSSL 1.0.2:. https://www.openssl.org/docs/man1.0.2/man3/EVP_DigestInit_ex.html. This patch was already applied to upstream civet:. https://github.com/civetweb/civetweb/pull/1072",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10380
https://github.com/root-project/root/pull/10380:345,safety,patch,patch,345,"Using higher-level wrapper of OpenSSL SHA1 hash function in civetweb; This is to get rid of deprecation warninigs when building on Ubuntu. 22.04. Should cause no backwards compatibility poblems, as the functions that. are used now are around at least since OpenSSL 1.0.2:. https://www.openssl.org/docs/man1.0.2/man3/EVP_DigestInit_ex.html. This patch was already applied to upstream civet:. https://github.com/civetweb/civetweb/pull/1072",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10380
https://github.com/root-project/root/pull/10380:43,security,hash,hash,43,"Using higher-level wrapper of OpenSSL SHA1 hash function in civetweb; This is to get rid of deprecation warninigs when building on Ubuntu. 22.04. Should cause no backwards compatibility poblems, as the functions that. are used now are around at least since OpenSSL 1.0.2:. https://www.openssl.org/docs/man1.0.2/man3/EVP_DigestInit_ex.html. This patch was already applied to upstream civet:. https://github.com/civetweb/civetweb/pull/1072",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10380
https://github.com/root-project/root/pull/10380:345,security,patch,patch,345,"Using higher-level wrapper of OpenSSL SHA1 hash function in civetweb; This is to get rid of deprecation warninigs when building on Ubuntu. 22.04. Should cause no backwards compatibility poblems, as the functions that. are used now are around at least since OpenSSL 1.0.2:. https://www.openssl.org/docs/man1.0.2/man3/EVP_DigestInit_ex.html. This patch was already applied to upstream civet:. https://github.com/civetweb/civetweb/pull/1072",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10380
https://github.com/root-project/root/issues/10382:38,availability,Error,Error,38,"[TNDArrayT] Backward incompatibility: Error reading from ROOT Files created with earlier versions - Streamer bug; ### Describe the bug. It is currently impossible to read TNDArrayT objects from ROOT Files created with earlier ROOT Versions than v6.26. This affects primarily THn Objects which have this class as a data member. The problem is caused by this commit: https://github.com/root-project/root/commit/afb95216eeec9dea2d4aab35231b64e067c8af57 where a datamemember of TNDArrayT was changed, but the Streamer generation information were not updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:583,availability,error,error,583,"[TNDArrayT] Backward incompatibility: Error reading from ROOT Files created with earlier versions - Streamer bug; ### Describe the bug. It is currently impossible to read TNDArrayT objects from ROOT Files created with earlier ROOT Versions than v6.26. This affects primarily THn Objects which have this class as a data member. The problem is caused by this commit: https://github.com/root-project/root/commit/afb95216eeec9dea2d4aab35231b64e067c8af57 where a datamemember of TNDArrayT was changed, but the Streamer generation information were not updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:1154,availability,Error,Error,1154,"sible to read TNDArrayT objects from ROOT Files created with earlier ROOT Versions than v6.26. This affects primarily THn Objects which have this class as a data member. The problem is caused by this commit: https://github.com/root-project/root/commit/afb95216eeec9dea2d4aab35231b64e067c8af57 where a datamemember of TNDArrayT was changed, but the Streamer generation information were not updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 ins",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:1257,availability,Error,Error,1257,"ects primarily THn Objects which have this class as a data member. The problem is caused by this commit: https://github.com/root-project/root/commit/afb95216eeec9dea2d4aab35231b64e067c8af57 where a datamemember of TNDArrayT was changed, but the Streamer generation information were not updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:1614,availability,Error,Error,1614,"e attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior. Expected behavior is that the object is read properly and the Streamer tak",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:1834,availability,Error,Error,1834,":Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior. Expected behavior is that the object is read properly and the Streamer takes care of all required conversions from the old to the new data format. ### To Reproduce. - Create a ROOT-File containing a THn with an earlier ROOT version. e.g. v6.24.06. - Try to read the object from the created ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:1954,availability,Error,Error,1954,"hould not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior. Expected behavior is that the object is read properly and the Streamer takes care of all required conversions from the old to the new data format. ### To Reproduce. - Create a ROOT-File containing a THn with an earlier ROOT version. e.g. v6.24.06. - Try to read the object from the created ROOT-File with ROOT version v6.26.00.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:2057,availability,Error,Error,2057,"hould not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior. Expected behavior is that the object is read properly and the Streamer takes care of all required conversions from the old to the new data format. ### To Reproduce. - Create a ROOT-File containing a THn with an earlier ROOT version. e.g. v6.24.06. - Try to read the object from the created ROOT-File with ROOT version v6.26.00.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:2176,availability,Error,Error,2176,"hould not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior. Expected behavior is that the object is read properly and the Streamer takes care of all required conversions from the old to the new data format. ### To Reproduce. - Create a ROOT-File containing a THn with an earlier ROOT version. e.g. v6.24.06. - Try to read the object from the created ROOT-File with ROOT version v6.26.00.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:2398,availability,Error,Error,2398,"hould not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior. Expected behavior is that the object is read properly and the Streamer takes care of all required conversions from the old to the new data format. ### To Reproduce. - Create a ROOT-File containing a THn with an earlier ROOT version. e.g. v6.24.06. - Try to read the object from the created ROOT-File with ROOT version v6.26.00.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:89,deployability,version,versions,89,"[TNDArrayT] Backward incompatibility: Error reading from ROOT Files created with earlier versions - Streamer bug; ### Describe the bug. It is currently impossible to read TNDArrayT objects from ROOT Files created with earlier ROOT Versions than v6.26. This affects primarily THn Objects which have this class as a data member. The problem is caused by this commit: https://github.com/root-project/root/commit/afb95216eeec9dea2d4aab35231b64e067c8af57 where a datamemember of TNDArrayT was changed, but the Streamer generation information were not updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:231,deployability,Version,Versions,231,"[TNDArrayT] Backward incompatibility: Error reading from ROOT Files created with earlier versions - Streamer bug; ### Describe the bug. It is currently impossible to read TNDArrayT objects from ROOT Files created with earlier ROOT Versions than v6.26. This affects primarily THn Objects which have this class as a data member. The problem is caused by this commit: https://github.com/root-project/root/commit/afb95216eeec9dea2d4aab35231b64e067c8af57 where a datamemember of TNDArrayT was changed, but the Streamer generation information were not updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:546,deployability,updat,updated,546,"[TNDArrayT] Backward incompatibility: Error reading from ROOT Files created with earlier versions - Streamer bug; ### Describe the bug. It is currently impossible to read TNDArrayT objects from ROOT Files created with earlier ROOT Versions than v6.26. This affects primarily THn Objects which have this class as a data member. The problem is caused by this commit: https://github.com/root-project/root/commit/afb95216eeec9dea2d4aab35231b64e067c8af57 where a datamemember of TNDArrayT was changed, but the Streamer generation information were not updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:668,deployability,version,version,668,"[TNDArrayT] Backward incompatibility: Error reading from ROOT Files created with earlier versions - Streamer bug; ### Describe the bug. It is currently impossible to read TNDArrayT objects from ROOT Files created with earlier ROOT Versions than v6.26. This affects primarily THn Objects which have this class as a data member. The problem is caused by this commit: https://github.com/root-project/root/commit/afb95216eeec9dea2d4aab35231b64e067c8af57 where a datamemember of TNDArrayT was changed, but the Streamer generation information were not updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:706,deployability,Build,BuildOld,706,"[TNDArrayT] Backward incompatibility: Error reading from ROOT Files created with earlier versions - Streamer bug; ### Describe the bug. It is currently impossible to read TNDArrayT objects from ROOT Files created with earlier ROOT Versions than v6.26. This affects primarily THn Objects which have this class as a data member. The problem is caused by this commit: https://github.com/root-project/root/commit/afb95216eeec9dea2d4aab35231b64e067c8af57 where a datamemember of TNDArrayT was changed, but the Streamer generation information were not updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:939,deployability,Build,BuildOld,939,"[TNDArrayT] Backward incompatibility: Error reading from ROOT Files created with earlier versions - Streamer bug; ### Describe the bug. It is currently impossible to read TNDArrayT objects from ROOT Files created with earlier ROOT Versions than v6.26. This affects primarily THn Objects which have this class as a data member. The problem is caused by this commit: https://github.com/root-project/root/commit/afb95216eeec9dea2d4aab35231b64e067c8af57 where a datamemember of TNDArrayT was changed, but the Streamer generation information were not updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:1403,deployability,Build,BuildOld,1403,"t/afb95216eeec9dea2d4aab35231b64e067c8af57 where a datamemember of TNDArrayT was changed, but the Streamer generation information were not updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:2729,deployability,contain,containing,2729,"hould not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior. Expected behavior is that the object is read properly and the Streamer takes care of all required conversions from the old to the new data format. ### To Reproduce. - Create a ROOT-File containing a THn with an earlier ROOT version. e.g. v6.24.06. - Try to read the object from the created ROOT-File with ROOT version v6.26.00.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:2767,deployability,version,version,2767,"hould not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior. Expected behavior is that the object is read properly and the Streamer takes care of all required conversions from the old to the new data format. ### To Reproduce. - Create a ROOT-File containing a THn with an earlier ROOT version. e.g. v6.24.06. - Try to read the object from the created ROOT-File with ROOT version v6.26.00.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:2853,deployability,version,version,2853,"hould not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior. Expected behavior is that the object is read properly and the Streamer takes care of all required conversions from the old to the new data format. ### To Reproduce. - Create a ROOT-File containing a THn with an earlier ROOT version. e.g. v6.24.06. - Try to read the object from the created ROOT-File with ROOT version v6.26.00.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:142,energy efficiency,current,currently,142,"[TNDArrayT] Backward incompatibility: Error reading from ROOT Files created with earlier versions - Streamer bug; ### Describe the bug. It is currently impossible to read TNDArrayT objects from ROOT Files created with earlier ROOT Versions than v6.26. This affects primarily THn Objects which have this class as a data member. The problem is caused by this commit: https://github.com/root-project/root/commit/afb95216eeec9dea2d4aab35231b64e067c8af57 where a datamemember of TNDArrayT was changed, but the Streamer generation information were not updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:89,integrability,version,versions,89,"[TNDArrayT] Backward incompatibility: Error reading from ROOT Files created with earlier versions - Streamer bug; ### Describe the bug. It is currently impossible to read TNDArrayT objects from ROOT Files created with earlier ROOT Versions than v6.26. This affects primarily THn Objects which have this class as a data member. The problem is caused by this commit: https://github.com/root-project/root/commit/afb95216eeec9dea2d4aab35231b64e067c8af57 where a datamemember of TNDArrayT was changed, but the Streamer generation information were not updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:231,integrability,Version,Versions,231,"[TNDArrayT] Backward incompatibility: Error reading from ROOT Files created with earlier versions - Streamer bug; ### Describe the bug. It is currently impossible to read TNDArrayT objects from ROOT Files created with earlier ROOT Versions than v6.26. This affects primarily THn Objects which have this class as a data member. The problem is caused by this commit: https://github.com/root-project/root/commit/afb95216eeec9dea2d4aab35231b64e067c8af57 where a datamemember of TNDArrayT was changed, but the Streamer generation information were not updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:589,integrability,messag,messages,589,"[TNDArrayT] Backward incompatibility: Error reading from ROOT Files created with earlier versions - Streamer bug; ### Describe the bug. It is currently impossible to read TNDArrayT objects from ROOT Files created with earlier ROOT Versions than v6.26. This affects primarily THn Objects which have this class as a data member. The problem is caused by this commit: https://github.com/root-project/root/commit/afb95216eeec9dea2d4aab35231b64e067c8af57 where a datamemember of TNDArrayT was changed, but the Streamer generation information were not updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:668,integrability,version,version,668,"[TNDArrayT] Backward incompatibility: Error reading from ROOT Files created with earlier versions - Streamer bug; ### Describe the bug. It is currently impossible to read TNDArrayT objects from ROOT Files created with earlier ROOT Versions than v6.26. This affects primarily THn Objects which have this class as a data member. The problem is caused by this commit: https://github.com/root-project/root/commit/afb95216eeec9dea2d4aab35231b64e067c8af57 where a datamemember of TNDArrayT was changed, but the Streamer generation information were not updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:2767,integrability,version,version,2767,"hould not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior. Expected behavior is that the object is read properly and the Streamer takes care of all required conversions from the old to the new data format. ### To Reproduce. - Create a ROOT-File containing a THn with an earlier ROOT version. e.g. v6.24.06. - Try to read the object from the created ROOT-File with ROOT version v6.26.00.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:2853,integrability,version,version,2853,"hould not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior. Expected behavior is that the object is read properly and the Streamer takes care of all required conversions from the old to the new data format. ### To Reproduce. - Create a ROOT-File containing a THn with an earlier ROOT version. e.g. v6.24.06. - Try to read the object from the created ROOT-File with ROOT version v6.26.00.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:21,interoperability,incompatib,incompatibility,21,"[TNDArrayT] Backward incompatibility: Error reading from ROOT Files created with earlier versions - Streamer bug; ### Describe the bug. It is currently impossible to read TNDArrayT objects from ROOT Files created with earlier ROOT Versions than v6.26. This affects primarily THn Objects which have this class as a data member. The problem is caused by this commit: https://github.com/root-project/root/commit/afb95216eeec9dea2d4aab35231b64e067c8af57 where a datamemember of TNDArrayT was changed, but the Streamer generation information were not updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:589,interoperability,messag,messages,589,"[TNDArrayT] Backward incompatibility: Error reading from ROOT Files created with earlier versions - Streamer bug; ### Describe the bug. It is currently impossible to read TNDArrayT objects from ROOT Files created with earlier ROOT Versions than v6.26. This affects primarily THn Objects which have this class as a data member. The problem is caused by this commit: https://github.com/root-project/root/commit/afb95216eeec9dea2d4aab35231b64e067c8af57 where a datamemember of TNDArrayT was changed, but the Streamer generation information were not updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:2641,interoperability,convers,conversions,2641,"hould not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior. Expected behavior is that the object is read properly and the Streamer takes care of all required conversions from the old to the new data format. ### To Reproduce. - Create a ROOT-File containing a THn with an earlier ROOT version. e.g. v6.24.06. - Try to read the object from the created ROOT-File with ROOT version v6.26.00.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:2682,interoperability,format,format,2682,"hould not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior. Expected behavior is that the object is read properly and the Streamer takes care of all required conversions from the old to the new data format. ### To Reproduce. - Create a ROOT-File containing a THn with an earlier ROOT version. e.g. v6.24.06. - Try to read the object from the created ROOT-File with ROOT version v6.26.00.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:89,modifiability,version,versions,89,"[TNDArrayT] Backward incompatibility: Error reading from ROOT Files created with earlier versions - Streamer bug; ### Describe the bug. It is currently impossible to read TNDArrayT objects from ROOT Files created with earlier ROOT Versions than v6.26. This affects primarily THn Objects which have this class as a data member. The problem is caused by this commit: https://github.com/root-project/root/commit/afb95216eeec9dea2d4aab35231b64e067c8af57 where a datamemember of TNDArrayT was changed, but the Streamer generation information were not updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:231,modifiability,Version,Versions,231,"[TNDArrayT] Backward incompatibility: Error reading from ROOT Files created with earlier versions - Streamer bug; ### Describe the bug. It is currently impossible to read TNDArrayT objects from ROOT Files created with earlier ROOT Versions than v6.26. This affects primarily THn Objects which have this class as a data member. The problem is caused by this commit: https://github.com/root-project/root/commit/afb95216eeec9dea2d4aab35231b64e067c8af57 where a datamemember of TNDArrayT was changed, but the Streamer generation information were not updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:668,modifiability,version,version,668,"[TNDArrayT] Backward incompatibility: Error reading from ROOT Files created with earlier versions - Streamer bug; ### Describe the bug. It is currently impossible to read TNDArrayT objects from ROOT Files created with earlier ROOT Versions than v6.26. This affects primarily THn Objects which have this class as a data member. The problem is caused by this commit: https://github.com/root-project/root/commit/afb95216eeec9dea2d4aab35231b64e067c8af57 where a datamemember of TNDArrayT was changed, but the Streamer generation information were not updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:2767,modifiability,version,version,2767,"hould not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior. Expected behavior is that the object is read properly and the Streamer takes care of all required conversions from the old to the new data format. ### To Reproduce. - Create a ROOT-File containing a THn with an earlier ROOT version. e.g. v6.24.06. - Try to read the object from the created ROOT-File with ROOT version v6.26.00.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:2853,modifiability,version,version,2853,"hould not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior. Expected behavior is that the object is read properly and the Streamer takes care of all required conversions from the old to the new data format. ### To Reproduce. - Create a ROOT-File containing a THn with an earlier ROOT version. e.g. v6.24.06. - Try to read the object from the created ROOT-File with ROOT version v6.26.00.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:38,performance,Error,Error,38,"[TNDArrayT] Backward incompatibility: Error reading from ROOT Files created with earlier versions - Streamer bug; ### Describe the bug. It is currently impossible to read TNDArrayT objects from ROOT Files created with earlier ROOT Versions than v6.26. This affects primarily THn Objects which have this class as a data member. The problem is caused by this commit: https://github.com/root-project/root/commit/afb95216eeec9dea2d4aab35231b64e067c8af57 where a datamemember of TNDArrayT was changed, but the Streamer generation information were not updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:583,performance,error,error,583,"[TNDArrayT] Backward incompatibility: Error reading from ROOT Files created with earlier versions - Streamer bug; ### Describe the bug. It is currently impossible to read TNDArrayT objects from ROOT Files created with earlier ROOT Versions than v6.26. This affects primarily THn Objects which have this class as a data member. The problem is caused by this commit: https://github.com/root-project/root/commit/afb95216eeec9dea2d4aab35231b64e067c8af57 where a datamemember of TNDArrayT was changed, but the Streamer generation information were not updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:1154,performance,Error,Error,1154,"sible to read TNDArrayT objects from ROOT Files created with earlier ROOT Versions than v6.26. This affects primarily THn Objects which have this class as a data member. The problem is caused by this commit: https://github.com/root-project/root/commit/afb95216eeec9dea2d4aab35231b64e067c8af57 where a datamemember of TNDArrayT was changed, but the Streamer generation information were not updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 ins",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:1257,performance,Error,Error,1257,"ects primarily THn Objects which have this class as a data member. The problem is caused by this commit: https://github.com/root-project/root/commit/afb95216eeec9dea2d4aab35231b64e067c8af57 where a datamemember of TNDArrayT was changed, but the Streamer generation information were not updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:1614,performance,Error,Error,1614,"e attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior. Expected behavior is that the object is read properly and the Streamer tak",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:1834,performance,Error,Error,1834,":Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior. Expected behavior is that the object is read properly and the Streamer takes care of all required conversions from the old to the new data format. ### To Reproduce. - Create a ROOT-File containing a THn with an earlier ROOT version. e.g. v6.24.06. - Try to read the object from the created ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:1954,performance,Error,Error,1954,"hould not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior. Expected behavior is that the object is read properly and the Streamer takes care of all required conversions from the old to the new data format. ### To Reproduce. - Create a ROOT-File containing a THn with an earlier ROOT version. e.g. v6.24.06. - Try to read the object from the created ROOT-File with ROOT version v6.26.00.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:2057,performance,Error,Error,2057,"hould not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior. Expected behavior is that the object is read properly and the Streamer takes care of all required conversions from the old to the new data format. ### To Reproduce. - Create a ROOT-File containing a THn with an earlier ROOT version. e.g. v6.24.06. - Try to read the object from the created ROOT-File with ROOT version v6.26.00.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:2176,performance,Error,Error,2176,"hould not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior. Expected behavior is that the object is read properly and the Streamer takes care of all required conversions from the old to the new data format. ### To Reproduce. - Create a ROOT-File containing a THn with an earlier ROOT version. e.g. v6.24.06. - Try to read the object from the created ROOT-File with ROOT version v6.26.00.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:2398,performance,Error,Error,2398,"hould not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior. Expected behavior is that the object is read properly and the Streamer takes care of all required conversions from the old to the new data format. ### To Reproduce. - Create a ROOT-File containing a THn with an earlier ROOT version. e.g. v6.24.06. - Try to read the object from the created ROOT-File with ROOT version v6.26.00.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:38,safety,Error,Error,38,"[TNDArrayT] Backward incompatibility: Error reading from ROOT Files created with earlier versions - Streamer bug; ### Describe the bug. It is currently impossible to read TNDArrayT objects from ROOT Files created with earlier ROOT Versions than v6.26. This affects primarily THn Objects which have this class as a data member. The problem is caused by this commit: https://github.com/root-project/root/commit/afb95216eeec9dea2d4aab35231b64e067c8af57 where a datamemember of TNDArrayT was changed, but the Streamer generation information were not updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:546,safety,updat,updated,546,"[TNDArrayT] Backward incompatibility: Error reading from ROOT Files created with earlier versions - Streamer bug; ### Describe the bug. It is currently impossible to read TNDArrayT objects from ROOT Files created with earlier ROOT Versions than v6.26. This affects primarily THn Objects which have this class as a data member. The problem is caused by this commit: https://github.com/root-project/root/commit/afb95216eeec9dea2d4aab35231b64e067c8af57 where a datamemember of TNDArrayT was changed, but the Streamer generation information were not updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:583,safety,error,error,583,"[TNDArrayT] Backward incompatibility: Error reading from ROOT Files created with earlier versions - Streamer bug; ### Describe the bug. It is currently impossible to read TNDArrayT objects from ROOT Files created with earlier ROOT Versions than v6.26. This affects primarily THn Objects which have this class as a data member. The problem is caused by this commit: https://github.com/root-project/root/commit/afb95216eeec9dea2d4aab35231b64e067c8af57 where a datamemember of TNDArrayT was changed, but the Streamer generation information were not updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:1154,safety,Error,Error,1154,"sible to read TNDArrayT objects from ROOT Files created with earlier ROOT Versions than v6.26. This affects primarily THn Objects which have this class as a data member. The problem is caused by this commit: https://github.com/root-project/root/commit/afb95216eeec9dea2d4aab35231b64e067c8af57 where a datamemember of TNDArrayT was changed, but the Streamer generation information were not updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 ins",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:1257,safety,Error,Error,1257,"ects primarily THn Objects which have this class as a data member. The problem is caused by this commit: https://github.com/root-project/root/commit/afb95216eeec9dea2d4aab35231b64e067c8af57 where a datamemember of TNDArrayT was changed, but the Streamer generation information were not updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:1614,safety,Error,Error,1614,"e attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior. Expected behavior is that the object is read properly and the Streamer tak",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:1834,safety,Error,Error,1834,":Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior. Expected behavior is that the object is read properly and the Streamer takes care of all required conversions from the old to the new data format. ### To Reproduce. - Create a ROOT-File containing a THn with an earlier ROOT version. e.g. v6.24.06. - Try to read the object from the created ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:1954,safety,Error,Error,1954,"hould not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior. Expected behavior is that the object is read properly and the Streamer takes care of all required conversions from the old to the new data format. ### To Reproduce. - Create a ROOT-File containing a THn with an earlier ROOT version. e.g. v6.24.06. - Try to read the object from the created ROOT-File with ROOT version v6.26.00.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:2057,safety,Error,Error,2057,"hould not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior. Expected behavior is that the object is read properly and the Streamer takes care of all required conversions from the old to the new data format. ### To Reproduce. - Create a ROOT-File containing a THn with an earlier ROOT version. e.g. v6.24.06. - Try to read the object from the created ROOT-File with ROOT version v6.26.00.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:2176,safety,Error,Error,2176,"hould not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior. Expected behavior is that the object is read properly and the Streamer takes care of all required conversions from the old to the new data format. ### To Reproduce. - Create a ROOT-File containing a THn with an earlier ROOT version. e.g. v6.24.06. - Try to read the object from the created ROOT-File with ROOT version v6.26.00.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:2398,safety,Error,Error,2398,"hould not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior. Expected behavior is that the object is read properly and the Streamer takes care of all required conversions from the old to the new data format. ### To Reproduce. - Create a ROOT-File containing a THn with an earlier ROOT version. e.g. v6.24.06. - Try to read the object from the created ROOT-File with ROOT version v6.26.00.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:546,security,updat,updated,546,"[TNDArrayT] Backward incompatibility: Error reading from ROOT Files created with earlier versions - Streamer bug; ### Describe the bug. It is currently impossible to read TNDArrayT objects from ROOT Files created with earlier ROOT Versions than v6.26. This affects primarily THn Objects which have this class as a data member. The problem is caused by this commit: https://github.com/root-project/root/commit/afb95216eeec9dea2d4aab35231b64e067c8af57 where a datamemember of TNDArrayT was changed, but the Streamer generation information were not updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:38,usability,Error,Error,38,"[TNDArrayT] Backward incompatibility: Error reading from ROOT Files created with earlier versions - Streamer bug; ### Describe the bug. It is currently impossible to read TNDArrayT objects from ROOT Files created with earlier ROOT Versions than v6.26. This affects primarily THn Objects which have this class as a data member. The problem is caused by this commit: https://github.com/root-project/root/commit/afb95216eeec9dea2d4aab35231b64e067c8af57 where a datamemember of TNDArrayT was changed, but the Streamer generation information were not updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:583,usability,error,error,583,"[TNDArrayT] Backward incompatibility: Error reading from ROOT Files created with earlier versions - Streamer bug; ### Describe the bug. It is currently impossible to read TNDArrayT objects from ROOT Files created with earlier ROOT Versions than v6.26. This affects primarily THn Objects which have this class as a data member. The problem is caused by this commit: https://github.com/root-project/root/commit/afb95216eeec9dea2d4aab35231b64e067c8af57 where a datamemember of TNDArrayT was changed, but the Streamer generation information were not updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:1154,usability,Error,Error,1154,"sible to read TNDArrayT objects from ROOT Files created with earlier ROOT Versions than v6.26. This affects primarily THn Objects which have this class as a data member. The problem is caused by this commit: https://github.com/root-project/root/commit/afb95216eeec9dea2d4aab35231b64e067c8af57 where a datamemember of TNDArrayT was changed, but the Streamer generation information were not updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 ins",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:1257,usability,Error,Error,1257,"ects primarily THn Objects which have this class as a data member. The problem is caused by this commit: https://github.com/root-project/root/commit/afb95216eeec9dea2d4aab35231b64e067c8af57 where a datamemember of TNDArrayT was changed, but the Streamer generation information were not updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:1614,usability,Error,Error,1614,"e attepts to read a TNDArrayT from an earlier ROOT version:. `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior. Expected behavior is that the object is read properly and the Streamer tak",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:1834,usability,Error,Error,1834,":Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior. Expected behavior is that the object is read properly and the Streamer takes care of all required conversions from the old to the new data format. ### To Reproduce. - Create a ROOT-File containing a THn with an earlier ROOT version. e.g. v6.24.06. - Try to read the object from the created ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:1954,usability,Error,Error,1954,"hould not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior. Expected behavior is that the object is read properly and the Streamer takes care of all required conversions from the old to the new data format. ### To Reproduce. - Create a ROOT-File containing a THn with an earlier ROOT version. e.g. v6.24.06. - Try to read the object from the created ROOT-File with ROOT version v6.26.00.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:2057,usability,Error,Error,2057,"hould not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior. Expected behavior is that the object is read properly and the Streamer takes care of all required conversions from the old to the new data format. ### To Reproduce. - Create a ROOT-File containing a THn with an earlier ROOT version. e.g. v6.24.06. - Try to read the object from the created ROOT-File with ROOT version v6.26.00.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:2176,usability,Error,Error,2176,"hould not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior. Expected behavior is that the object is read properly and the Streamer takes care of all required conversions from the old to the new data format. ### To Reproduce. - Create a ROOT-File containing a THn with an earlier ROOT version. e.g. v6.24.06. - Try to read the object from the created ROOT-File with ROOT version v6.26.00.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:2398,usability,Error,Error,2398,"hould not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior. Expected behavior is that the object is read properly and the Streamer takes care of all required conversions from the old to the new data format. ### To Reproduce. - Create a ROOT-File containing a THn with an earlier ROOT version. e.g. v6.24.06. - Try to read the object from the created ROOT-File with ROOT version v6.26.00.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:2533,usability,behavi,behavior,2533,"hould not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior. Expected behavior is that the object is read properly and the Streamer takes care of all required conversions from the old to the new data format. ### To Reproduce. - Create a ROOT-File containing a THn with an earlier ROOT version. e.g. v6.24.06. - Try to read the object from the created ROOT-File with ROOT version v6.26.00.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10382:2552,usability,behavi,behavior,2552,"hould not be skipped from class TNDArray. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element. Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57. Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628. Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57. Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(). Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior. Expected behavior is that the object is read properly and the Streamer takes care of all required conversions from the old to the new data format. ### To Reproduce. - Create a ROOT-File containing a THn with an earlier ROOT version. e.g. v6.24.06. - Try to read the object from the created ROOT-File with ROOT version v6.26.00.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382
https://github.com/root-project/root/issues/10383:562,deployability,depend,depending,562,"[ntuple] Properly support big-endian architectures; ### Explain what you would like to see improved. RNTuple metadata is serialized to a machine-independent representation. However, contents of a page are written using the native endianess of the architecture on which RNTuple runs. According to the RNTuple v1 specification, these should be laid out always in little-endian order. . ### Optional: share how it could be improved. If running on a big-endian machine, (un)packing of data pages for some data types should carry out a (16, 32, or 64-bit) byte swap, depending on the type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10383
https://github.com/root-project/root/issues/10383:562,integrability,depend,depending,562,"[ntuple] Properly support big-endian architectures; ### Explain what you would like to see improved. RNTuple metadata is serialized to a machine-independent representation. However, contents of a page are written using the native endianess of the architecture on which RNTuple runs. According to the RNTuple v1 specification, these should be laid out always in little-endian order. . ### Optional: share how it could be improved. If running on a big-endian machine, (un)packing of data pages for some data types should carry out a (16, 32, or 64-bit) byte swap, depending on the type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10383
https://github.com/root-project/root/issues/10383:37,interoperability,architectur,architectures,37,"[ntuple] Properly support big-endian architectures; ### Explain what you would like to see improved. RNTuple metadata is serialized to a machine-independent representation. However, contents of a page are written using the native endianess of the architecture on which RNTuple runs. According to the RNTuple v1 specification, these should be laid out always in little-endian order. . ### Optional: share how it could be improved. If running on a big-endian machine, (un)packing of data pages for some data types should carry out a (16, 32, or 64-bit) byte swap, depending on the type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10383
https://github.com/root-project/root/issues/10383:247,interoperability,architectur,architecture,247,"[ntuple] Properly support big-endian architectures; ### Explain what you would like to see improved. RNTuple metadata is serialized to a machine-independent representation. However, contents of a page are written using the native endianess of the architecture on which RNTuple runs. According to the RNTuple v1 specification, these should be laid out always in little-endian order. . ### Optional: share how it could be improved. If running on a big-endian machine, (un)packing of data pages for some data types should carry out a (16, 32, or 64-bit) byte swap, depending on the type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10383
https://github.com/root-project/root/issues/10383:311,interoperability,specif,specification,311,"[ntuple] Properly support big-endian architectures; ### Explain what you would like to see improved. RNTuple metadata is serialized to a machine-independent representation. However, contents of a page are written using the native endianess of the architecture on which RNTuple runs. According to the RNTuple v1 specification, these should be laid out always in little-endian order. . ### Optional: share how it could be improved. If running on a big-endian machine, (un)packing of data pages for some data types should carry out a (16, 32, or 64-bit) byte swap, depending on the type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10383
https://github.com/root-project/root/issues/10383:398,interoperability,share,share,398,"[ntuple] Properly support big-endian architectures; ### Explain what you would like to see improved. RNTuple metadata is serialized to a machine-independent representation. However, contents of a page are written using the native endianess of the architecture on which RNTuple runs. According to the RNTuple v1 specification, these should be laid out always in little-endian order. . ### Optional: share how it could be improved. If running on a big-endian machine, (un)packing of data pages for some data types should carry out a (16, 32, or 64-bit) byte swap, depending on the type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10383
https://github.com/root-project/root/issues/10383:470,modifiability,pac,packing,470,"[ntuple] Properly support big-endian architectures; ### Explain what you would like to see improved. RNTuple metadata is serialized to a machine-independent representation. However, contents of a page are written using the native endianess of the architecture on which RNTuple runs. According to the RNTuple v1 specification, these should be laid out always in little-endian order. . ### Optional: share how it could be improved. If running on a big-endian machine, (un)packing of data pages for some data types should carry out a (16, 32, or 64-bit) byte swap, depending on the type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10383
https://github.com/root-project/root/issues/10383:562,modifiability,depend,depending,562,"[ntuple] Properly support big-endian architectures; ### Explain what you would like to see improved. RNTuple metadata is serialized to a machine-independent representation. However, contents of a page are written using the native endianess of the architecture on which RNTuple runs. According to the RNTuple v1 specification, these should be laid out always in little-endian order. . ### Optional: share how it could be improved. If running on a big-endian machine, (un)packing of data pages for some data types should carry out a (16, 32, or 64-bit) byte swap, depending on the type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10383
https://github.com/root-project/root/issues/10383:182,performance,content,contents,182,"[ntuple] Properly support big-endian architectures; ### Explain what you would like to see improved. RNTuple metadata is serialized to a machine-independent representation. However, contents of a page are written using the native endianess of the architecture on which RNTuple runs. According to the RNTuple v1 specification, these should be laid out always in little-endian order. . ### Optional: share how it could be improved. If running on a big-endian machine, (un)packing of data pages for some data types should carry out a (16, 32, or 64-bit) byte swap, depending on the type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10383
https://github.com/root-project/root/issues/10383:562,safety,depend,depending,562,"[ntuple] Properly support big-endian architectures; ### Explain what you would like to see improved. RNTuple metadata is serialized to a machine-independent representation. However, contents of a page are written using the native endianess of the architecture on which RNTuple runs. According to the RNTuple v1 specification, these should be laid out always in little-endian order. . ### Optional: share how it could be improved. If running on a big-endian machine, (un)packing of data pages for some data types should carry out a (16, 32, or 64-bit) byte swap, depending on the type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10383
https://github.com/root-project/root/issues/10383:562,testability,depend,depending,562,"[ntuple] Properly support big-endian architectures; ### Explain what you would like to see improved. RNTuple metadata is serialized to a machine-independent representation. However, contents of a page are written using the native endianess of the architecture on which RNTuple runs. According to the RNTuple v1 specification, these should be laid out always in little-endian order. . ### Optional: share how it could be improved. If running on a big-endian machine, (un)packing of data pages for some data types should carry out a (16, 32, or 64-bit) byte swap, depending on the type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10383
https://github.com/root-project/root/issues/10383:18,usability,support,support,18,"[ntuple] Properly support big-endian architectures; ### Explain what you would like to see improved. RNTuple metadata is serialized to a machine-independent representation. However, contents of a page are written using the native endianess of the architecture on which RNTuple runs. According to the RNTuple v1 specification, these should be laid out always in little-endian order. . ### Optional: share how it could be improved. If running on a big-endian machine, (un)packing of data pages for some data types should carry out a (16, 32, or 64-bit) byte swap, depending on the type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10383
https://github.com/root-project/root/issues/10385:688,energy efficiency,current,current,688,"[RF] verbose printout of some RooFit classes broken; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Using the `Print(""v"")` option causes a segfault for a few RooFit classes. ### Expected behavior. The printout happens. ### To Reproduce. Take a HistFactory made workspace, select a `FlexibleInterpVar` or a `RooProduct` and call `Print(""v"")`. ### Setup. current master, compiled on archlinux. ### Additional context. The crash always happens in the `Proxies` section, possibly related to the `RooListProxy` rewrite by @hageboeck .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10385
https://github.com/root-project/root/issues/10385:784,interoperability,Prox,Proxies,784,"[RF] verbose printout of some RooFit classes broken; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Using the `Print(""v"")` option causes a segfault for a few RooFit classes. ### Expected behavior. The printout happens. ### To Reproduce. Take a HistFactory made workspace, select a `FlexibleInterpVar` or a `RooProduct` and call `Print(""v"")`. ### Setup. current master, compiled on archlinux. ### Additional context. The crash always happens in the `Proxies` section, possibly related to the `RooListProxy` rewrite by @hageboeck .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10385
https://github.com/root-project/root/issues/10385:742,testability,context,context,742,"[RF] verbose printout of some RooFit classes broken; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Using the `Print(""v"")` option causes a segfault for a few RooFit classes. ### Expected behavior. The printout happens. ### To Reproduce. Take a HistFactory made workspace, select a `FlexibleInterpVar` or a `RooProduct` and call `Print(""v"")`. ### Setup. current master, compiled on archlinux. ### Additional context. The crash always happens in the `Proxies` section, possibly related to the `RooListProxy` rewrite by @hageboeck .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10385
https://github.com/root-project/root/issues/10385:522,usability,behavi,behavior,522,"[RF] verbose printout of some RooFit classes broken; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Using the `Print(""v"")` option causes a segfault for a few RooFit classes. ### Expected behavior. The printout happens. ### To Reproduce. Take a HistFactory made workspace, select a `FlexibleInterpVar` or a `RooProduct` and call `Print(""v"")`. ### Setup. current master, compiled on archlinux. ### Additional context. The crash always happens in the `Proxies` section, possibly related to the `RooListProxy` rewrite by @hageboeck .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10385
https://github.com/root-project/root/issues/10386:31,deployability,stack,stack,31,"Cling crash on valid c++ code (stack variable pointer).; ### Describe the bug. The following code when run with the interpreter crashes (on the line with std::seed_seq). Names are with underscore to avoid clashes. ```. constexpr uint32_t seed_bits = 19937;. constexpr uint32_t seed_32_count = 19937 / 32 + bool(19937 % 32);. std::random_device _dev;. uint32_t _seed[seed_32_count];. for (uint32_t i = 0; i < seed_32_count; ++i) {. 	_seed[i] = _dev();. }. std::seed_seq _seq(_seed, _seed + seed_32_count);. ```. This may be related to handling of stack variables. (Calling alloca will also crash the interpreter, but that is a corner case, I suppose.). ### Expected behavior. Initialize a seed sequence for use with `std::mt19937` (`TRandom3` should suffice? But that doesn't give the whole seed vector). ### To Reproduce. Input the above line by line into interpreter. Also note that writing `_seed` to see a pointer or content on the last line will also crash the interpreter. . ### Setup. ROOT 32 bit 6.26. Windows (Not yet tested on linux). Binary install. ### Additional context. Should be sufficient here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10386
https://github.com/root-project/root/issues/10386:546,deployability,stack,stack,546,"Cling crash on valid c++ code (stack variable pointer).; ### Describe the bug. The following code when run with the interpreter crashes (on the line with std::seed_seq). Names are with underscore to avoid clashes. ```. constexpr uint32_t seed_bits = 19937;. constexpr uint32_t seed_32_count = 19937 / 32 + bool(19937 % 32);. std::random_device _dev;. uint32_t _seed[seed_32_count];. for (uint32_t i = 0; i < seed_32_count; ++i) {. 	_seed[i] = _dev();. }. std::seed_seq _seq(_seed, _seed + seed_32_count);. ```. This may be related to handling of stack variables. (Calling alloca will also crash the interpreter, but that is a corner case, I suppose.). ### Expected behavior. Initialize a seed sequence for use with `std::mt19937` (`TRandom3` should suffice? But that doesn't give the whole seed vector). ### To Reproduce. Input the above line by line into interpreter. Also note that writing `_seed` to see a pointer or content on the last line will also crash the interpreter. . ### Setup. ROOT 32 bit 6.26. Windows (Not yet tested on linux). Binary install. ### Additional context. Should be sufficient here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10386
https://github.com/root-project/root/issues/10386:1051,deployability,instal,install,1051,"Cling crash on valid c++ code (stack variable pointer).; ### Describe the bug. The following code when run with the interpreter crashes (on the line with std::seed_seq). Names are with underscore to avoid clashes. ```. constexpr uint32_t seed_bits = 19937;. constexpr uint32_t seed_32_count = 19937 / 32 + bool(19937 % 32);. std::random_device _dev;. uint32_t _seed[seed_32_count];. for (uint32_t i = 0; i < seed_32_count; ++i) {. 	_seed[i] = _dev();. }. std::seed_seq _seq(_seed, _seed + seed_32_count);. ```. This may be related to handling of stack variables. (Calling alloca will also crash the interpreter, but that is a corner case, I suppose.). ### Expected behavior. Initialize a seed sequence for use with `std::mt19937` (`TRandom3` should suffice? But that doesn't give the whole seed vector). ### To Reproduce. Input the above line by line into interpreter. Also note that writing `_seed` to see a pointer or content on the last line will also crash the interpreter. . ### Setup. ROOT 32 bit 6.26. Windows (Not yet tested on linux). Binary install. ### Additional context. Should be sufficient here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10386
https://github.com/root-project/root/issues/10386:572,energy efficiency,alloc,alloca,572,"Cling crash on valid c++ code (stack variable pointer).; ### Describe the bug. The following code when run with the interpreter crashes (on the line with std::seed_seq). Names are with underscore to avoid clashes. ```. constexpr uint32_t seed_bits = 19937;. constexpr uint32_t seed_32_count = 19937 / 32 + bool(19937 % 32);. std::random_device _dev;. uint32_t _seed[seed_32_count];. for (uint32_t i = 0; i < seed_32_count; ++i) {. 	_seed[i] = _dev();. }. std::seed_seq _seq(_seed, _seed + seed_32_count);. ```. This may be related to handling of stack variables. (Calling alloca will also crash the interpreter, but that is a corner case, I suppose.). ### Expected behavior. Initialize a seed sequence for use with `std::mt19937` (`TRandom3` should suffice? But that doesn't give the whole seed vector). ### To Reproduce. Input the above line by line into interpreter. Also note that writing `_seed` to see a pointer or content on the last line will also crash the interpreter. . ### Setup. ROOT 32 bit 6.26. Windows (Not yet tested on linux). Binary install. ### Additional context. Should be sufficient here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10386
https://github.com/root-project/root/issues/10386:37,modifiability,variab,variable,37,"Cling crash on valid c++ code (stack variable pointer).; ### Describe the bug. The following code when run with the interpreter crashes (on the line with std::seed_seq). Names are with underscore to avoid clashes. ```. constexpr uint32_t seed_bits = 19937;. constexpr uint32_t seed_32_count = 19937 / 32 + bool(19937 % 32);. std::random_device _dev;. uint32_t _seed[seed_32_count];. for (uint32_t i = 0; i < seed_32_count; ++i) {. 	_seed[i] = _dev();. }. std::seed_seq _seq(_seed, _seed + seed_32_count);. ```. This may be related to handling of stack variables. (Calling alloca will also crash the interpreter, but that is a corner case, I suppose.). ### Expected behavior. Initialize a seed sequence for use with `std::mt19937` (`TRandom3` should suffice? But that doesn't give the whole seed vector). ### To Reproduce. Input the above line by line into interpreter. Also note that writing `_seed` to see a pointer or content on the last line will also crash the interpreter. . ### Setup. ROOT 32 bit 6.26. Windows (Not yet tested on linux). Binary install. ### Additional context. Should be sufficient here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10386
https://github.com/root-project/root/issues/10386:552,modifiability,variab,variables,552,"Cling crash on valid c++ code (stack variable pointer).; ### Describe the bug. The following code when run with the interpreter crashes (on the line with std::seed_seq). Names are with underscore to avoid clashes. ```. constexpr uint32_t seed_bits = 19937;. constexpr uint32_t seed_32_count = 19937 / 32 + bool(19937 % 32);. std::random_device _dev;. uint32_t _seed[seed_32_count];. for (uint32_t i = 0; i < seed_32_count; ++i) {. 	_seed[i] = _dev();. }. std::seed_seq _seq(_seed, _seed + seed_32_count);. ```. This may be related to handling of stack variables. (Calling alloca will also crash the interpreter, but that is a corner case, I suppose.). ### Expected behavior. Initialize a seed sequence for use with `std::mt19937` (`TRandom3` should suffice? But that doesn't give the whole seed vector). ### To Reproduce. Input the above line by line into interpreter. Also note that writing `_seed` to see a pointer or content on the last line will also crash the interpreter. . ### Setup. ROOT 32 bit 6.26. Windows (Not yet tested on linux). Binary install. ### Additional context. Should be sufficient here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10386
https://github.com/root-project/root/issues/10386:920,performance,content,content,920,"Cling crash on valid c++ code (stack variable pointer).; ### Describe the bug. The following code when run with the interpreter crashes (on the line with std::seed_seq). Names are with underscore to avoid clashes. ```. constexpr uint32_t seed_bits = 19937;. constexpr uint32_t seed_32_count = 19937 / 32 + bool(19937 % 32);. std::random_device _dev;. uint32_t _seed[seed_32_count];. for (uint32_t i = 0; i < seed_32_count; ++i) {. 	_seed[i] = _dev();. }. std::seed_seq _seq(_seed, _seed + seed_32_count);. ```. This may be related to handling of stack variables. (Calling alloca will also crash the interpreter, but that is a corner case, I suppose.). ### Expected behavior. Initialize a seed sequence for use with `std::mt19937` (`TRandom3` should suffice? But that doesn't give the whole seed vector). ### To Reproduce. Input the above line by line into interpreter. Also note that writing `_seed` to see a pointer or content on the last line will also crash the interpreter. . ### Setup. ROOT 32 bit 6.26. Windows (Not yet tested on linux). Binary install. ### Additional context. Should be sufficient here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10386
https://github.com/root-project/root/issues/10386:767,reliability,doe,doesn,767,"Cling crash on valid c++ code (stack variable pointer).; ### Describe the bug. The following code when run with the interpreter crashes (on the line with std::seed_seq). Names are with underscore to avoid clashes. ```. constexpr uint32_t seed_bits = 19937;. constexpr uint32_t seed_32_count = 19937 / 32 + bool(19937 % 32);. std::random_device _dev;. uint32_t _seed[seed_32_count];. for (uint32_t i = 0; i < seed_32_count; ++i) {. 	_seed[i] = _dev();. }. std::seed_seq _seq(_seed, _seed + seed_32_count);. ```. This may be related to handling of stack variables. (Calling alloca will also crash the interpreter, but that is a corner case, I suppose.). ### Expected behavior. Initialize a seed sequence for use with `std::mt19937` (`TRandom3` should suffice? But that doesn't give the whole seed vector). ### To Reproduce. Input the above line by line into interpreter. Also note that writing `_seed` to see a pointer or content on the last line will also crash the interpreter. . ### Setup. ROOT 32 bit 6.26. Windows (Not yet tested on linux). Binary install. ### Additional context. Should be sufficient here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10386
https://github.com/root-project/root/issues/10386:15,safety,valid,valid,15,"Cling crash on valid c++ code (stack variable pointer).; ### Describe the bug. The following code when run with the interpreter crashes (on the line with std::seed_seq). Names are with underscore to avoid clashes. ```. constexpr uint32_t seed_bits = 19937;. constexpr uint32_t seed_32_count = 19937 / 32 + bool(19937 % 32);. std::random_device _dev;. uint32_t _seed[seed_32_count];. for (uint32_t i = 0; i < seed_32_count; ++i) {. 	_seed[i] = _dev();. }. std::seed_seq _seq(_seed, _seed + seed_32_count);. ```. This may be related to handling of stack variables. (Calling alloca will also crash the interpreter, but that is a corner case, I suppose.). ### Expected behavior. Initialize a seed sequence for use with `std::mt19937` (`TRandom3` should suffice? But that doesn't give the whole seed vector). ### To Reproduce. Input the above line by line into interpreter. Also note that writing `_seed` to see a pointer or content on the last line will also crash the interpreter. . ### Setup. ROOT 32 bit 6.26. Windows (Not yet tested on linux). Binary install. ### Additional context. Should be sufficient here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10386
https://github.com/root-project/root/issues/10386:199,safety,avoid,avoid,199,"Cling crash on valid c++ code (stack variable pointer).; ### Describe the bug. The following code when run with the interpreter crashes (on the line with std::seed_seq). Names are with underscore to avoid clashes. ```. constexpr uint32_t seed_bits = 19937;. constexpr uint32_t seed_32_count = 19937 / 32 + bool(19937 % 32);. std::random_device _dev;. uint32_t _seed[seed_32_count];. for (uint32_t i = 0; i < seed_32_count; ++i) {. 	_seed[i] = _dev();. }. std::seed_seq _seq(_seed, _seed + seed_32_count);. ```. This may be related to handling of stack variables. (Calling alloca will also crash the interpreter, but that is a corner case, I suppose.). ### Expected behavior. Initialize a seed sequence for use with `std::mt19937` (`TRandom3` should suffice? But that doesn't give the whole seed vector). ### To Reproduce. Input the above line by line into interpreter. Also note that writing `_seed` to see a pointer or content on the last line will also crash the interpreter. . ### Setup. ROOT 32 bit 6.26. Windows (Not yet tested on linux). Binary install. ### Additional context. Should be sufficient here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10386
https://github.com/root-project/root/issues/10386:822,safety,Input,Input,822,"Cling crash on valid c++ code (stack variable pointer).; ### Describe the bug. The following code when run with the interpreter crashes (on the line with std::seed_seq). Names are with underscore to avoid clashes. ```. constexpr uint32_t seed_bits = 19937;. constexpr uint32_t seed_32_count = 19937 / 32 + bool(19937 % 32);. std::random_device _dev;. uint32_t _seed[seed_32_count];. for (uint32_t i = 0; i < seed_32_count; ++i) {. 	_seed[i] = _dev();. }. std::seed_seq _seq(_seed, _seed + seed_32_count);. ```. This may be related to handling of stack variables. (Calling alloca will also crash the interpreter, but that is a corner case, I suppose.). ### Expected behavior. Initialize a seed sequence for use with `std::mt19937` (`TRandom3` should suffice? But that doesn't give the whole seed vector). ### To Reproduce. Input the above line by line into interpreter. Also note that writing `_seed` to see a pointer or content on the last line will also crash the interpreter. . ### Setup. ROOT 32 bit 6.26. Windows (Not yet tested on linux). Binary install. ### Additional context. Should be sufficient here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10386
https://github.com/root-project/root/issues/10386:1026,safety,test,tested,1026,"Cling crash on valid c++ code (stack variable pointer).; ### Describe the bug. The following code when run with the interpreter crashes (on the line with std::seed_seq). Names are with underscore to avoid clashes. ```. constexpr uint32_t seed_bits = 19937;. constexpr uint32_t seed_32_count = 19937 / 32 + bool(19937 % 32);. std::random_device _dev;. uint32_t _seed[seed_32_count];. for (uint32_t i = 0; i < seed_32_count; ++i) {. 	_seed[i] = _dev();. }. std::seed_seq _seq(_seed, _seed + seed_32_count);. ```. This may be related to handling of stack variables. (Calling alloca will also crash the interpreter, but that is a corner case, I suppose.). ### Expected behavior. Initialize a seed sequence for use with `std::mt19937` (`TRandom3` should suffice? But that doesn't give the whole seed vector). ### To Reproduce. Input the above line by line into interpreter. Also note that writing `_seed` to see a pointer or content on the last line will also crash the interpreter. . ### Setup. ROOT 32 bit 6.26. Windows (Not yet tested on linux). Binary install. ### Additional context. Should be sufficient here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10386
https://github.com/root-project/root/issues/10386:1026,testability,test,tested,1026,"Cling crash on valid c++ code (stack variable pointer).; ### Describe the bug. The following code when run with the interpreter crashes (on the line with std::seed_seq). Names are with underscore to avoid clashes. ```. constexpr uint32_t seed_bits = 19937;. constexpr uint32_t seed_32_count = 19937 / 32 + bool(19937 % 32);. std::random_device _dev;. uint32_t _seed[seed_32_count];. for (uint32_t i = 0; i < seed_32_count; ++i) {. 	_seed[i] = _dev();. }. std::seed_seq _seq(_seed, _seed + seed_32_count);. ```. This may be related to handling of stack variables. (Calling alloca will also crash the interpreter, but that is a corner case, I suppose.). ### Expected behavior. Initialize a seed sequence for use with `std::mt19937` (`TRandom3` should suffice? But that doesn't give the whole seed vector). ### To Reproduce. Input the above line by line into interpreter. Also note that writing `_seed` to see a pointer or content on the last line will also crash the interpreter. . ### Setup. ROOT 32 bit 6.26. Windows (Not yet tested on linux). Binary install. ### Additional context. Should be sufficient here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10386
https://github.com/root-project/root/issues/10386:1075,testability,context,context,1075,"Cling crash on valid c++ code (stack variable pointer).; ### Describe the bug. The following code when run with the interpreter crashes (on the line with std::seed_seq). Names are with underscore to avoid clashes. ```. constexpr uint32_t seed_bits = 19937;. constexpr uint32_t seed_32_count = 19937 / 32 + bool(19937 % 32);. std::random_device _dev;. uint32_t _seed[seed_32_count];. for (uint32_t i = 0; i < seed_32_count; ++i) {. 	_seed[i] = _dev();. }. std::seed_seq _seq(_seed, _seed + seed_32_count);. ```. This may be related to handling of stack variables. (Calling alloca will also crash the interpreter, but that is a corner case, I suppose.). ### Expected behavior. Initialize a seed sequence for use with `std::mt19937` (`TRandom3` should suffice? But that doesn't give the whole seed vector). ### To Reproduce. Input the above line by line into interpreter. Also note that writing `_seed` to see a pointer or content on the last line will also crash the interpreter. . ### Setup. ROOT 32 bit 6.26. Windows (Not yet tested on linux). Binary install. ### Additional context. Should be sufficient here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10386
https://github.com/root-project/root/issues/10386:665,usability,behavi,behavior,665,"Cling crash on valid c++ code (stack variable pointer).; ### Describe the bug. The following code when run with the interpreter crashes (on the line with std::seed_seq). Names are with underscore to avoid clashes. ```. constexpr uint32_t seed_bits = 19937;. constexpr uint32_t seed_32_count = 19937 / 32 + bool(19937 % 32);. std::random_device _dev;. uint32_t _seed[seed_32_count];. for (uint32_t i = 0; i < seed_32_count; ++i) {. 	_seed[i] = _dev();. }. std::seed_seq _seq(_seed, _seed + seed_32_count);. ```. This may be related to handling of stack variables. (Calling alloca will also crash the interpreter, but that is a corner case, I suppose.). ### Expected behavior. Initialize a seed sequence for use with `std::mt19937` (`TRandom3` should suffice? But that doesn't give the whole seed vector). ### To Reproduce. Input the above line by line into interpreter. Also note that writing `_seed` to see a pointer or content on the last line will also crash the interpreter. . ### Setup. ROOT 32 bit 6.26. Windows (Not yet tested on linux). Binary install. ### Additional context. Should be sufficient here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10386
https://github.com/root-project/root/issues/10386:822,usability,Input,Input,822,"Cling crash on valid c++ code (stack variable pointer).; ### Describe the bug. The following code when run with the interpreter crashes (on the line with std::seed_seq). Names are with underscore to avoid clashes. ```. constexpr uint32_t seed_bits = 19937;. constexpr uint32_t seed_32_count = 19937 / 32 + bool(19937 % 32);. std::random_device _dev;. uint32_t _seed[seed_32_count];. for (uint32_t i = 0; i < seed_32_count; ++i) {. 	_seed[i] = _dev();. }. std::seed_seq _seq(_seed, _seed + seed_32_count);. ```. This may be related to handling of stack variables. (Calling alloca will also crash the interpreter, but that is a corner case, I suppose.). ### Expected behavior. Initialize a seed sequence for use with `std::mt19937` (`TRandom3` should suffice? But that doesn't give the whole seed vector). ### To Reproduce. Input the above line by line into interpreter. Also note that writing `_seed` to see a pointer or content on the last line will also crash the interpreter. . ### Setup. ROOT 32 bit 6.26. Windows (Not yet tested on linux). Binary install. ### Additional context. Should be sufficient here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10386
https://github.com/root-project/root/pull/10387:180,availability,error,error,180,"TClingUtils: Avoid growing paths in GetFileName; Strip of ../ so that the search finds a valid longest match. With the upcoming upgrade of LLVM 13, this would otherwise lead to an error ""File name too long"" but it's already wrong now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10387
https://github.com/root-project/root/pull/10387:128,deployability,upgrad,upgrade,128,"TClingUtils: Avoid growing paths in GetFileName; Strip of ../ so that the search finds a valid longest match. With the upcoming upgrade of LLVM 13, this would otherwise lead to an error ""File name too long"" but it's already wrong now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10387
https://github.com/root-project/root/pull/10387:128,modifiability,upgrad,upgrade,128,"TClingUtils: Avoid growing paths in GetFileName; Strip of ../ so that the search finds a valid longest match. With the upcoming upgrade of LLVM 13, this would otherwise lead to an error ""File name too long"" but it's already wrong now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10387
https://github.com/root-project/root/pull/10387:180,performance,error,error,180,"TClingUtils: Avoid growing paths in GetFileName; Strip of ../ so that the search finds a valid longest match. With the upcoming upgrade of LLVM 13, this would otherwise lead to an error ""File name too long"" but it's already wrong now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10387
https://github.com/root-project/root/pull/10387:13,safety,Avoid,Avoid,13,"TClingUtils: Avoid growing paths in GetFileName; Strip of ../ so that the search finds a valid longest match. With the upcoming upgrade of LLVM 13, this would otherwise lead to an error ""File name too long"" but it's already wrong now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10387
https://github.com/root-project/root/pull/10387:89,safety,valid,valid,89,"TClingUtils: Avoid growing paths in GetFileName; Strip of ../ so that the search finds a valid longest match. With the upcoming upgrade of LLVM 13, this would otherwise lead to an error ""File name too long"" but it's already wrong now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10387
https://github.com/root-project/root/pull/10387:180,safety,error,error,180,"TClingUtils: Avoid growing paths in GetFileName; Strip of ../ so that the search finds a valid longest match. With the upcoming upgrade of LLVM 13, this would otherwise lead to an error ""File name too long"" but it's already wrong now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10387
https://github.com/root-project/root/pull/10387:180,usability,error,error,180,"TClingUtils: Avoid growing paths in GetFileName; Strip of ../ so that the search finds a valid longest match. With the upcoming upgrade of LLVM 13, this would otherwise lead to an error ""File name too long"" but it's already wrong now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10387
https://github.com/root-project/root/pull/10388:36,deployability,updat,update,36,[daos] Generalize daos_mock's fetch/update to accept multiple I/O descriptors; # This Pull request:. ## Changes or fixes:. - Generalizes the fetch/update calls in the mocked-up version of DAOS to support multiple I/O descriptors per request. . - This change will support planned improvements on the mapping between RNTuple and DAOS to leverage its backend parallelization. . - Passes previously-existing v7 unit tests (which send a single IOD per request). ## Checklist:. - [x] tested changes locally. This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10388
https://github.com/root-project/root/pull/10388:147,deployability,updat,update,147,[daos] Generalize daos_mock's fetch/update to accept multiple I/O descriptors; # This Pull request:. ## Changes or fixes:. - Generalizes the fetch/update calls in the mocked-up version of DAOS to support multiple I/O descriptors per request. . - This change will support planned improvements on the mapping between RNTuple and DAOS to leverage its backend parallelization. . - Passes previously-existing v7 unit tests (which send a single IOD per request). ## Checklist:. - [x] tested changes locally. This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10388
https://github.com/root-project/root/pull/10388:177,deployability,version,version,177,[daos] Generalize daos_mock's fetch/update to accept multiple I/O descriptors; # This Pull request:. ## Changes or fixes:. - Generalizes the fetch/update calls in the mocked-up version of DAOS to support multiple I/O descriptors per request. . - This change will support planned improvements on the mapping between RNTuple and DAOS to leverage its backend parallelization. . - Passes previously-existing v7 unit tests (which send a single IOD per request). ## Checklist:. - [x] tested changes locally. This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10388
https://github.com/root-project/root/pull/10388:177,integrability,version,version,177,[daos] Generalize daos_mock's fetch/update to accept multiple I/O descriptors; # This Pull request:. ## Changes or fixes:. - Generalizes the fetch/update calls in the mocked-up version of DAOS to support multiple I/O descriptors per request. . - This change will support planned improvements on the mapping between RNTuple and DAOS to leverage its backend parallelization. . - Passes previously-existing v7 unit tests (which send a single IOD per request). ## Checklist:. - [x] tested changes locally. This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10388
https://github.com/root-project/root/pull/10388:177,modifiability,version,version,177,[daos] Generalize daos_mock's fetch/update to accept multiple I/O descriptors; # This Pull request:. ## Changes or fixes:. - Generalizes the fetch/update calls in the mocked-up version of DAOS to support multiple I/O descriptors per request. . - This change will support planned improvements on the mapping between RNTuple and DAOS to leverage its backend parallelization. . - Passes previously-existing v7 unit tests (which send a single IOD per request). ## Checklist:. - [x] tested changes locally. This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10388
https://github.com/root-project/root/pull/10388:62,performance,I/O,I/O,62,[daos] Generalize daos_mock's fetch/update to accept multiple I/O descriptors; # This Pull request:. ## Changes or fixes:. - Generalizes the fetch/update calls in the mocked-up version of DAOS to support multiple I/O descriptors per request. . - This change will support planned improvements on the mapping between RNTuple and DAOS to leverage its backend parallelization. . - Passes previously-existing v7 unit tests (which send a single IOD per request). ## Checklist:. - [x] tested changes locally. This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10388
https://github.com/root-project/root/pull/10388:213,performance,I/O,I/O,213,[daos] Generalize daos_mock's fetch/update to accept multiple I/O descriptors; # This Pull request:. ## Changes or fixes:. - Generalizes the fetch/update calls in the mocked-up version of DAOS to support multiple I/O descriptors per request. . - This change will support planned improvements on the mapping between RNTuple and DAOS to leverage its backend parallelization. . - Passes previously-existing v7 unit tests (which send a single IOD per request). ## Checklist:. - [x] tested changes locally. This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10388
https://github.com/root-project/root/pull/10388:356,performance,parallel,parallelization,356,[daos] Generalize daos_mock's fetch/update to accept multiple I/O descriptors; # This Pull request:. ## Changes or fixes:. - Generalizes the fetch/update calls in the mocked-up version of DAOS to support multiple I/O descriptors per request. . - This change will support planned improvements on the mapping between RNTuple and DAOS to leverage its backend parallelization. . - Passes previously-existing v7 unit tests (which send a single IOD per request). ## Checklist:. - [x] tested changes locally. This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10388
https://github.com/root-project/root/pull/10388:36,safety,updat,update,36,[daos] Generalize daos_mock's fetch/update to accept multiple I/O descriptors; # This Pull request:. ## Changes or fixes:. - Generalizes the fetch/update calls in the mocked-up version of DAOS to support multiple I/O descriptors per request. . - This change will support planned improvements on the mapping between RNTuple and DAOS to leverage its backend parallelization. . - Passes previously-existing v7 unit tests (which send a single IOD per request). ## Checklist:. - [x] tested changes locally. This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10388
https://github.com/root-project/root/pull/10388:147,safety,updat,update,147,[daos] Generalize daos_mock's fetch/update to accept multiple I/O descriptors; # This Pull request:. ## Changes or fixes:. - Generalizes the fetch/update calls in the mocked-up version of DAOS to support multiple I/O descriptors per request. . - This change will support planned improvements on the mapping between RNTuple and DAOS to leverage its backend parallelization. . - Passes previously-existing v7 unit tests (which send a single IOD per request). ## Checklist:. - [x] tested changes locally. This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10388
https://github.com/root-project/root/pull/10388:412,safety,test,tests,412,[daos] Generalize daos_mock's fetch/update to accept multiple I/O descriptors; # This Pull request:. ## Changes or fixes:. - Generalizes the fetch/update calls in the mocked-up version of DAOS to support multiple I/O descriptors per request. . - This change will support planned improvements on the mapping between RNTuple and DAOS to leverage its backend parallelization. . - Passes previously-existing v7 unit tests (which send a single IOD per request). ## Checklist:. - [x] tested changes locally. This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10388
https://github.com/root-project/root/pull/10388:478,safety,test,tested,478,[daos] Generalize daos_mock's fetch/update to accept multiple I/O descriptors; # This Pull request:. ## Changes or fixes:. - Generalizes the fetch/update calls in the mocked-up version of DAOS to support multiple I/O descriptors per request. . - This change will support planned improvements on the mapping between RNTuple and DAOS to leverage its backend parallelization. . - Passes previously-existing v7 unit tests (which send a single IOD per request). ## Checklist:. - [x] tested changes locally. This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10388
https://github.com/root-project/root/pull/10388:36,security,updat,update,36,[daos] Generalize daos_mock's fetch/update to accept multiple I/O descriptors; # This Pull request:. ## Changes or fixes:. - Generalizes the fetch/update calls in the mocked-up version of DAOS to support multiple I/O descriptors per request. . - This change will support planned improvements on the mapping between RNTuple and DAOS to leverage its backend parallelization. . - Passes previously-existing v7 unit tests (which send a single IOD per request). ## Checklist:. - [x] tested changes locally. This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10388
https://github.com/root-project/root/pull/10388:147,security,updat,update,147,[daos] Generalize daos_mock's fetch/update to accept multiple I/O descriptors; # This Pull request:. ## Changes or fixes:. - Generalizes the fetch/update calls in the mocked-up version of DAOS to support multiple I/O descriptors per request. . - This change will support planned improvements on the mapping between RNTuple and DAOS to leverage its backend parallelization. . - Passes previously-existing v7 unit tests (which send a single IOD per request). ## Checklist:. - [x] tested changes locally. This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10388
https://github.com/root-project/root/pull/10388:167,testability,mock,mocked-up,167,[daos] Generalize daos_mock's fetch/update to accept multiple I/O descriptors; # This Pull request:. ## Changes or fixes:. - Generalizes the fetch/update calls in the mocked-up version of DAOS to support multiple I/O descriptors per request. . - This change will support planned improvements on the mapping between RNTuple and DAOS to leverage its backend parallelization. . - Passes previously-existing v7 unit tests (which send a single IOD per request). ## Checklist:. - [x] tested changes locally. This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10388
https://github.com/root-project/root/pull/10388:271,testability,plan,planned,271,[daos] Generalize daos_mock's fetch/update to accept multiple I/O descriptors; # This Pull request:. ## Changes or fixes:. - Generalizes the fetch/update calls in the mocked-up version of DAOS to support multiple I/O descriptors per request. . - This change will support planned improvements on the mapping between RNTuple and DAOS to leverage its backend parallelization. . - Passes previously-existing v7 unit tests (which send a single IOD per request). ## Checklist:. - [x] tested changes locally. This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10388
https://github.com/root-project/root/pull/10388:407,testability,unit,unit,407,[daos] Generalize daos_mock's fetch/update to accept multiple I/O descriptors; # This Pull request:. ## Changes or fixes:. - Generalizes the fetch/update calls in the mocked-up version of DAOS to support multiple I/O descriptors per request. . - This change will support planned improvements on the mapping between RNTuple and DAOS to leverage its backend parallelization. . - Passes previously-existing v7 unit tests (which send a single IOD per request). ## Checklist:. - [x] tested changes locally. This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10388
https://github.com/root-project/root/pull/10388:412,testability,test,tests,412,[daos] Generalize daos_mock's fetch/update to accept multiple I/O descriptors; # This Pull request:. ## Changes or fixes:. - Generalizes the fetch/update calls in the mocked-up version of DAOS to support multiple I/O descriptors per request. . - This change will support planned improvements on the mapping between RNTuple and DAOS to leverage its backend parallelization. . - Passes previously-existing v7 unit tests (which send a single IOD per request). ## Checklist:. - [x] tested changes locally. This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10388
https://github.com/root-project/root/pull/10388:478,testability,test,tested,478,[daos] Generalize daos_mock's fetch/update to accept multiple I/O descriptors; # This Pull request:. ## Changes or fixes:. - Generalizes the fetch/update calls in the mocked-up version of DAOS to support multiple I/O descriptors per request. . - This change will support planned improvements on the mapping between RNTuple and DAOS to leverage its backend parallelization. . - Passes previously-existing v7 unit tests (which send a single IOD per request). ## Checklist:. - [x] tested changes locally. This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10388
https://github.com/root-project/root/pull/10388:196,usability,support,support,196,[daos] Generalize daos_mock's fetch/update to accept multiple I/O descriptors; # This Pull request:. ## Changes or fixes:. - Generalizes the fetch/update calls in the mocked-up version of DAOS to support multiple I/O descriptors per request. . - This change will support planned improvements on the mapping between RNTuple and DAOS to leverage its backend parallelization. . - Passes previously-existing v7 unit tests (which send a single IOD per request). ## Checklist:. - [x] tested changes locally. This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10388
https://github.com/root-project/root/pull/10388:263,usability,support,support,263,[daos] Generalize daos_mock's fetch/update to accept multiple I/O descriptors; # This Pull request:. ## Changes or fixes:. - Generalizes the fetch/update calls in the mocked-up version of DAOS to support multiple I/O descriptors per request. . - This change will support planned improvements on the mapping between RNTuple and DAOS to leverage its backend parallelization. . - Passes previously-existing v7 unit tests (which send a single IOD per request). ## Checklist:. - [x] tested changes locally. This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10388
https://github.com/root-project/root/issues/10389:1530,availability,Operat,Operating,1530,"`RBrowser` does not list in-memory objects when written objects are present in `TDirectory` context; ### Describe the bug. Opening a file containing data (e.g. a `TTree`) and creating histograms in memory afterwards, finally opening a new-style `TBrowser`, the in-memory histograms are not accessible from the browser. . ### Expected behavior. Histograms can either be accessed in `root => ROOT Memory` or (as in the old-style `TBrowser`) in the list below the file (even if not yet written out), since they were created in the context of the file's `TDirectory`. . ### To Reproduce. Using ROOT 6.26.00 (or switching to the web-GUI via other ways) and executing the following macro:. ```. {. TFile *f = new TFile(""bar.root"", ""RECREATE"");. TTree *foobar = new TTree(""t"", ""t"");. foobar->Write();. TH1D *foo = new TH1D(""foo"", ""foo"", 10, 0, 10);. new TBrowser();. }. ```. reproduces the behaviour: The tree `t` is visible in the browser, but the histogram `foo` is not. . `.ls` shows (as expected):. ```. root [1] .ls. TFile** bar.root. TFile* bar.root. OBJ: TTree t t : 0 at: 0x5617aee19b60. OBJ: TH1D foo foo : 0 at: 0x5617afef9650. KEY: TTree t;1 t. ```. The old `TBrowser` shows both objects. . Either not writing out the `TTree` or writing out the histogram makes it visible. . However, this breaks the use case of reading in a file with a `TTree` and creating histograms in-memory, then inspecting them via a `TBrowser`. . (arguably, users should care about the `TDirectory` context...). ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Gentoo Linux. 3. ROOT built via package manager :wink: .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10389
https://github.com/root-project/root/issues/10389:138,deployability,contain,containing,138,"`RBrowser` does not list in-memory objects when written objects are present in `TDirectory` context; ### Describe the bug. Opening a file containing data (e.g. a `TTree`) and creating histograms in memory afterwards, finally opening a new-style `TBrowser`, the in-memory histograms are not accessible from the browser. . ### Expected behavior. Histograms can either be accessed in `root => ROOT Memory` or (as in the old-style `TBrowser`) in the list below the file (even if not yet written out), since they were created in the context of the file's `TDirectory`. . ### To Reproduce. Using ROOT 6.26.00 (or switching to the web-GUI via other ways) and executing the following macro:. ```. {. TFile *f = new TFile(""bar.root"", ""RECREATE"");. TTree *foobar = new TTree(""t"", ""t"");. foobar->Write();. TH1D *foo = new TH1D(""foo"", ""foo"", 10, 0, 10);. new TBrowser();. }. ```. reproduces the behaviour: The tree `t` is visible in the browser, but the histogram `foo` is not. . `.ls` shows (as expected):. ```. root [1] .ls. TFile** bar.root. TFile* bar.root. OBJ: TTree t t : 0 at: 0x5617aee19b60. OBJ: TH1D foo foo : 0 at: 0x5617afef9650. KEY: TTree t;1 t. ```. The old `TBrowser` shows both objects. . Either not writing out the `TTree` or writing out the histogram makes it visible. . However, this breaks the use case of reading in a file with a `TTree` and creating histograms in-memory, then inspecting them via a `TBrowser`. . (arguably, users should care about the `TDirectory` context...). ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Gentoo Linux. 3. ROOT built via package manager :wink: .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10389
https://github.com/root-project/root/issues/10389:1509,deployability,version,version,1509,"`RBrowser` does not list in-memory objects when written objects are present in `TDirectory` context; ### Describe the bug. Opening a file containing data (e.g. a `TTree`) and creating histograms in memory afterwards, finally opening a new-style `TBrowser`, the in-memory histograms are not accessible from the browser. . ### Expected behavior. Histograms can either be accessed in `root => ROOT Memory` or (as in the old-style `TBrowser`) in the list below the file (even if not yet written out), since they were created in the context of the file's `TDirectory`. . ### To Reproduce. Using ROOT 6.26.00 (or switching to the web-GUI via other ways) and executing the following macro:. ```. {. TFile *f = new TFile(""bar.root"", ""RECREATE"");. TTree *foobar = new TTree(""t"", ""t"");. foobar->Write();. TH1D *foo = new TH1D(""foo"", ""foo"", 10, 0, 10);. new TBrowser();. }. ```. reproduces the behaviour: The tree `t` is visible in the browser, but the histogram `foo` is not. . `.ls` shows (as expected):. ```. root [1] .ls. TFile** bar.root. TFile* bar.root. OBJ: TTree t t : 0 at: 0x5617aee19b60. OBJ: TH1D foo foo : 0 at: 0x5617afef9650. KEY: TTree t;1 t. ```. The old `TBrowser` shows both objects. . Either not writing out the `TTree` or writing out the histogram makes it visible. . However, this breaks the use case of reading in a file with a `TTree` and creating histograms in-memory, then inspecting them via a `TBrowser`. . (arguably, users should care about the `TDirectory` context...). ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Gentoo Linux. 3. ROOT built via package manager :wink: .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10389
https://github.com/root-project/root/issues/10389:1588,deployability,manag,manager,1588,"`RBrowser` does not list in-memory objects when written objects are present in `TDirectory` context; ### Describe the bug. Opening a file containing data (e.g. a `TTree`) and creating histograms in memory afterwards, finally opening a new-style `TBrowser`, the in-memory histograms are not accessible from the browser. . ### Expected behavior. Histograms can either be accessed in `root => ROOT Memory` or (as in the old-style `TBrowser`) in the list below the file (even if not yet written out), since they were created in the context of the file's `TDirectory`. . ### To Reproduce. Using ROOT 6.26.00 (or switching to the web-GUI via other ways) and executing the following macro:. ```. {. TFile *f = new TFile(""bar.root"", ""RECREATE"");. TTree *foobar = new TTree(""t"", ""t"");. foobar->Write();. TH1D *foo = new TH1D(""foo"", ""foo"", 10, 0, 10);. new TBrowser();. }. ```. reproduces the behaviour: The tree `t` is visible in the browser, but the histogram `foo` is not. . `.ls` shows (as expected):. ```. root [1] .ls. TFile** bar.root. TFile* bar.root. OBJ: TTree t t : 0 at: 0x5617aee19b60. OBJ: TH1D foo foo : 0 at: 0x5617afef9650. KEY: TTree t;1 t. ```. The old `TBrowser` shows both objects. . Either not writing out the `TTree` or writing out the histogram makes it visible. . However, this breaks the use case of reading in a file with a `TTree` and creating histograms in-memory, then inspecting them via a `TBrowser`. . (arguably, users should care about the `TDirectory` context...). ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Gentoo Linux. 3. ROOT built via package manager :wink: .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10389
https://github.com/root-project/root/issues/10389:1588,energy efficiency,manag,manager,1588,"`RBrowser` does not list in-memory objects when written objects are present in `TDirectory` context; ### Describe the bug. Opening a file containing data (e.g. a `TTree`) and creating histograms in memory afterwards, finally opening a new-style `TBrowser`, the in-memory histograms are not accessible from the browser. . ### Expected behavior. Histograms can either be accessed in `root => ROOT Memory` or (as in the old-style `TBrowser`) in the list below the file (even if not yet written out), since they were created in the context of the file's `TDirectory`. . ### To Reproduce. Using ROOT 6.26.00 (or switching to the web-GUI via other ways) and executing the following macro:. ```. {. TFile *f = new TFile(""bar.root"", ""RECREATE"");. TTree *foobar = new TTree(""t"", ""t"");. foobar->Write();. TH1D *foo = new TH1D(""foo"", ""foo"", 10, 0, 10);. new TBrowser();. }. ```. reproduces the behaviour: The tree `t` is visible in the browser, but the histogram `foo` is not. . `.ls` shows (as expected):. ```. root [1] .ls. TFile** bar.root. TFile* bar.root. OBJ: TTree t t : 0 at: 0x5617aee19b60. OBJ: TH1D foo foo : 0 at: 0x5617afef9650. KEY: TTree t;1 t. ```. The old `TBrowser` shows both objects. . Either not writing out the `TTree` or writing out the histogram makes it visible. . However, this breaks the use case of reading in a file with a `TTree` and creating histograms in-memory, then inspecting them via a `TBrowser`. . (arguably, users should care about the `TDirectory` context...). ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Gentoo Linux. 3. ROOT built via package manager :wink: .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10389
https://github.com/root-project/root/issues/10389:1509,integrability,version,version,1509,"`RBrowser` does not list in-memory objects when written objects are present in `TDirectory` context; ### Describe the bug. Opening a file containing data (e.g. a `TTree`) and creating histograms in memory afterwards, finally opening a new-style `TBrowser`, the in-memory histograms are not accessible from the browser. . ### Expected behavior. Histograms can either be accessed in `root => ROOT Memory` or (as in the old-style `TBrowser`) in the list below the file (even if not yet written out), since they were created in the context of the file's `TDirectory`. . ### To Reproduce. Using ROOT 6.26.00 (or switching to the web-GUI via other ways) and executing the following macro:. ```. {. TFile *f = new TFile(""bar.root"", ""RECREATE"");. TTree *foobar = new TTree(""t"", ""t"");. foobar->Write();. TH1D *foo = new TH1D(""foo"", ""foo"", 10, 0, 10);. new TBrowser();. }. ```. reproduces the behaviour: The tree `t` is visible in the browser, but the histogram `foo` is not. . `.ls` shows (as expected):. ```. root [1] .ls. TFile** bar.root. TFile* bar.root. OBJ: TTree t t : 0 at: 0x5617aee19b60. OBJ: TH1D foo foo : 0 at: 0x5617afef9650. KEY: TTree t;1 t. ```. The old `TBrowser` shows both objects. . Either not writing out the `TTree` or writing out the histogram makes it visible. . However, this breaks the use case of reading in a file with a `TTree` and creating histograms in-memory, then inspecting them via a `TBrowser`. . (arguably, users should care about the `TDirectory` context...). ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Gentoo Linux. 3. ROOT built via package manager :wink: .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10389
https://github.com/root-project/root/issues/10389:1509,modifiability,version,version,1509,"`RBrowser` does not list in-memory objects when written objects are present in `TDirectory` context; ### Describe the bug. Opening a file containing data (e.g. a `TTree`) and creating histograms in memory afterwards, finally opening a new-style `TBrowser`, the in-memory histograms are not accessible from the browser. . ### Expected behavior. Histograms can either be accessed in `root => ROOT Memory` or (as in the old-style `TBrowser`) in the list below the file (even if not yet written out), since they were created in the context of the file's `TDirectory`. . ### To Reproduce. Using ROOT 6.26.00 (or switching to the web-GUI via other ways) and executing the following macro:. ```. {. TFile *f = new TFile(""bar.root"", ""RECREATE"");. TTree *foobar = new TTree(""t"", ""t"");. foobar->Write();. TH1D *foo = new TH1D(""foo"", ""foo"", 10, 0, 10);. new TBrowser();. }. ```. reproduces the behaviour: The tree `t` is visible in the browser, but the histogram `foo` is not. . `.ls` shows (as expected):. ```. root [1] .ls. TFile** bar.root. TFile* bar.root. OBJ: TTree t t : 0 at: 0x5617aee19b60. OBJ: TH1D foo foo : 0 at: 0x5617afef9650. KEY: TTree t;1 t. ```. The old `TBrowser` shows both objects. . Either not writing out the `TTree` or writing out the histogram makes it visible. . However, this breaks the use case of reading in a file with a `TTree` and creating histograms in-memory, then inspecting them via a `TBrowser`. . (arguably, users should care about the `TDirectory` context...). ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Gentoo Linux. 3. ROOT built via package manager :wink: .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10389
https://github.com/root-project/root/issues/10389:1580,modifiability,pac,package,1580,"`RBrowser` does not list in-memory objects when written objects are present in `TDirectory` context; ### Describe the bug. Opening a file containing data (e.g. a `TTree`) and creating histograms in memory afterwards, finally opening a new-style `TBrowser`, the in-memory histograms are not accessible from the browser. . ### Expected behavior. Histograms can either be accessed in `root => ROOT Memory` or (as in the old-style `TBrowser`) in the list below the file (even if not yet written out), since they were created in the context of the file's `TDirectory`. . ### To Reproduce. Using ROOT 6.26.00 (or switching to the web-GUI via other ways) and executing the following macro:. ```. {. TFile *f = new TFile(""bar.root"", ""RECREATE"");. TTree *foobar = new TTree(""t"", ""t"");. foobar->Write();. TH1D *foo = new TH1D(""foo"", ""foo"", 10, 0, 10);. new TBrowser();. }. ```. reproduces the behaviour: The tree `t` is visible in the browser, but the histogram `foo` is not. . `.ls` shows (as expected):. ```. root [1] .ls. TFile** bar.root. TFile* bar.root. OBJ: TTree t t : 0 at: 0x5617aee19b60. OBJ: TH1D foo foo : 0 at: 0x5617afef9650. KEY: TTree t;1 t. ```. The old `TBrowser` shows both objects. . Either not writing out the `TTree` or writing out the histogram makes it visible. . However, this breaks the use case of reading in a file with a `TTree` and creating histograms in-memory, then inspecting them via a `TBrowser`. . (arguably, users should care about the `TDirectory` context...). ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Gentoo Linux. 3. ROOT built via package manager :wink: .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10389
https://github.com/root-project/root/issues/10389:28,performance,memor,memory,28,"`RBrowser` does not list in-memory objects when written objects are present in `TDirectory` context; ### Describe the bug. Opening a file containing data (e.g. a `TTree`) and creating histograms in memory afterwards, finally opening a new-style `TBrowser`, the in-memory histograms are not accessible from the browser. . ### Expected behavior. Histograms can either be accessed in `root => ROOT Memory` or (as in the old-style `TBrowser`) in the list below the file (even if not yet written out), since they were created in the context of the file's `TDirectory`. . ### To Reproduce. Using ROOT 6.26.00 (or switching to the web-GUI via other ways) and executing the following macro:. ```. {. TFile *f = new TFile(""bar.root"", ""RECREATE"");. TTree *foobar = new TTree(""t"", ""t"");. foobar->Write();. TH1D *foo = new TH1D(""foo"", ""foo"", 10, 0, 10);. new TBrowser();. }. ```. reproduces the behaviour: The tree `t` is visible in the browser, but the histogram `foo` is not. . `.ls` shows (as expected):. ```. root [1] .ls. TFile** bar.root. TFile* bar.root. OBJ: TTree t t : 0 at: 0x5617aee19b60. OBJ: TH1D foo foo : 0 at: 0x5617afef9650. KEY: TTree t;1 t. ```. The old `TBrowser` shows both objects. . Either not writing out the `TTree` or writing out the histogram makes it visible. . However, this breaks the use case of reading in a file with a `TTree` and creating histograms in-memory, then inspecting them via a `TBrowser`. . (arguably, users should care about the `TDirectory` context...). ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Gentoo Linux. 3. ROOT built via package manager :wink: .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10389
https://github.com/root-project/root/issues/10389:198,performance,memor,memory,198,"`RBrowser` does not list in-memory objects when written objects are present in `TDirectory` context; ### Describe the bug. Opening a file containing data (e.g. a `TTree`) and creating histograms in memory afterwards, finally opening a new-style `TBrowser`, the in-memory histograms are not accessible from the browser. . ### Expected behavior. Histograms can either be accessed in `root => ROOT Memory` or (as in the old-style `TBrowser`) in the list below the file (even if not yet written out), since they were created in the context of the file's `TDirectory`. . ### To Reproduce. Using ROOT 6.26.00 (or switching to the web-GUI via other ways) and executing the following macro:. ```. {. TFile *f = new TFile(""bar.root"", ""RECREATE"");. TTree *foobar = new TTree(""t"", ""t"");. foobar->Write();. TH1D *foo = new TH1D(""foo"", ""foo"", 10, 0, 10);. new TBrowser();. }. ```. reproduces the behaviour: The tree `t` is visible in the browser, but the histogram `foo` is not. . `.ls` shows (as expected):. ```. root [1] .ls. TFile** bar.root. TFile* bar.root. OBJ: TTree t t : 0 at: 0x5617aee19b60. OBJ: TH1D foo foo : 0 at: 0x5617afef9650. KEY: TTree t;1 t. ```. The old `TBrowser` shows both objects. . Either not writing out the `TTree` or writing out the histogram makes it visible. . However, this breaks the use case of reading in a file with a `TTree` and creating histograms in-memory, then inspecting them via a `TBrowser`. . (arguably, users should care about the `TDirectory` context...). ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Gentoo Linux. 3. ROOT built via package manager :wink: .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10389
https://github.com/root-project/root/issues/10389:264,performance,memor,memory,264,"`RBrowser` does not list in-memory objects when written objects are present in `TDirectory` context; ### Describe the bug. Opening a file containing data (e.g. a `TTree`) and creating histograms in memory afterwards, finally opening a new-style `TBrowser`, the in-memory histograms are not accessible from the browser. . ### Expected behavior. Histograms can either be accessed in `root => ROOT Memory` or (as in the old-style `TBrowser`) in the list below the file (even if not yet written out), since they were created in the context of the file's `TDirectory`. . ### To Reproduce. Using ROOT 6.26.00 (or switching to the web-GUI via other ways) and executing the following macro:. ```. {. TFile *f = new TFile(""bar.root"", ""RECREATE"");. TTree *foobar = new TTree(""t"", ""t"");. foobar->Write();. TH1D *foo = new TH1D(""foo"", ""foo"", 10, 0, 10);. new TBrowser();. }. ```. reproduces the behaviour: The tree `t` is visible in the browser, but the histogram `foo` is not. . `.ls` shows (as expected):. ```. root [1] .ls. TFile** bar.root. TFile* bar.root. OBJ: TTree t t : 0 at: 0x5617aee19b60. OBJ: TH1D foo foo : 0 at: 0x5617afef9650. KEY: TTree t;1 t. ```. The old `TBrowser` shows both objects. . Either not writing out the `TTree` or writing out the histogram makes it visible. . However, this breaks the use case of reading in a file with a `TTree` and creating histograms in-memory, then inspecting them via a `TBrowser`. . (arguably, users should care about the `TDirectory` context...). ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Gentoo Linux. 3. ROOT built via package manager :wink: .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10389
https://github.com/root-project/root/issues/10389:395,performance,Memor,Memory,395,"`RBrowser` does not list in-memory objects when written objects are present in `TDirectory` context; ### Describe the bug. Opening a file containing data (e.g. a `TTree`) and creating histograms in memory afterwards, finally opening a new-style `TBrowser`, the in-memory histograms are not accessible from the browser. . ### Expected behavior. Histograms can either be accessed in `root => ROOT Memory` or (as in the old-style `TBrowser`) in the list below the file (even if not yet written out), since they were created in the context of the file's `TDirectory`. . ### To Reproduce. Using ROOT 6.26.00 (or switching to the web-GUI via other ways) and executing the following macro:. ```. {. TFile *f = new TFile(""bar.root"", ""RECREATE"");. TTree *foobar = new TTree(""t"", ""t"");. foobar->Write();. TH1D *foo = new TH1D(""foo"", ""foo"", 10, 0, 10);. new TBrowser();. }. ```. reproduces the behaviour: The tree `t` is visible in the browser, but the histogram `foo` is not. . `.ls` shows (as expected):. ```. root [1] .ls. TFile** bar.root. TFile* bar.root. OBJ: TTree t t : 0 at: 0x5617aee19b60. OBJ: TH1D foo foo : 0 at: 0x5617afef9650. KEY: TTree t;1 t. ```. The old `TBrowser` shows both objects. . Either not writing out the `TTree` or writing out the histogram makes it visible. . However, this breaks the use case of reading in a file with a `TTree` and creating histograms in-memory, then inspecting them via a `TBrowser`. . (arguably, users should care about the `TDirectory` context...). ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Gentoo Linux. 3. ROOT built via package manager :wink: .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10389
https://github.com/root-project/root/issues/10389:1376,performance,memor,memory,1376,"`RBrowser` does not list in-memory objects when written objects are present in `TDirectory` context; ### Describe the bug. Opening a file containing data (e.g. a `TTree`) and creating histograms in memory afterwards, finally opening a new-style `TBrowser`, the in-memory histograms are not accessible from the browser. . ### Expected behavior. Histograms can either be accessed in `root => ROOT Memory` or (as in the old-style `TBrowser`) in the list below the file (even if not yet written out), since they were created in the context of the file's `TDirectory`. . ### To Reproduce. Using ROOT 6.26.00 (or switching to the web-GUI via other ways) and executing the following macro:. ```. {. TFile *f = new TFile(""bar.root"", ""RECREATE"");. TTree *foobar = new TTree(""t"", ""t"");. foobar->Write();. TH1D *foo = new TH1D(""foo"", ""foo"", 10, 0, 10);. new TBrowser();. }. ```. reproduces the behaviour: The tree `t` is visible in the browser, but the histogram `foo` is not. . `.ls` shows (as expected):. ```. root [1] .ls. TFile** bar.root. TFile* bar.root. OBJ: TTree t t : 0 at: 0x5617aee19b60. OBJ: TH1D foo foo : 0 at: 0x5617afef9650. KEY: TTree t;1 t. ```. The old `TBrowser` shows both objects. . Either not writing out the `TTree` or writing out the histogram makes it visible. . However, this breaks the use case of reading in a file with a `TTree` and creating histograms in-memory, then inspecting them via a `TBrowser`. . (arguably, users should care about the `TDirectory` context...). ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Gentoo Linux. 3. ROOT built via package manager :wink: .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10389
https://github.com/root-project/root/issues/10389:11,reliability,doe,does,11,"`RBrowser` does not list in-memory objects when written objects are present in `TDirectory` context; ### Describe the bug. Opening a file containing data (e.g. a `TTree`) and creating histograms in memory afterwards, finally opening a new-style `TBrowser`, the in-memory histograms are not accessible from the browser. . ### Expected behavior. Histograms can either be accessed in `root => ROOT Memory` or (as in the old-style `TBrowser`) in the list below the file (even if not yet written out), since they were created in the context of the file's `TDirectory`. . ### To Reproduce. Using ROOT 6.26.00 (or switching to the web-GUI via other ways) and executing the following macro:. ```. {. TFile *f = new TFile(""bar.root"", ""RECREATE"");. TTree *foobar = new TTree(""t"", ""t"");. foobar->Write();. TH1D *foo = new TH1D(""foo"", ""foo"", 10, 0, 10);. new TBrowser();. }. ```. reproduces the behaviour: The tree `t` is visible in the browser, but the histogram `foo` is not. . `.ls` shows (as expected):. ```. root [1] .ls. TFile** bar.root. TFile* bar.root. OBJ: TTree t t : 0 at: 0x5617aee19b60. OBJ: TH1D foo foo : 0 at: 0x5617afef9650. KEY: TTree t;1 t. ```. The old `TBrowser` shows both objects. . Either not writing out the `TTree` or writing out the histogram makes it visible. . However, this breaks the use case of reading in a file with a `TTree` and creating histograms in-memory, then inspecting them via a `TBrowser`. . (arguably, users should care about the `TDirectory` context...). ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Gentoo Linux. 3. ROOT built via package manager :wink: .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10389
https://github.com/root-project/root/issues/10389:1588,safety,manag,manager,1588,"`RBrowser` does not list in-memory objects when written objects are present in `TDirectory` context; ### Describe the bug. Opening a file containing data (e.g. a `TTree`) and creating histograms in memory afterwards, finally opening a new-style `TBrowser`, the in-memory histograms are not accessible from the browser. . ### Expected behavior. Histograms can either be accessed in `root => ROOT Memory` or (as in the old-style `TBrowser`) in the list below the file (even if not yet written out), since they were created in the context of the file's `TDirectory`. . ### To Reproduce. Using ROOT 6.26.00 (or switching to the web-GUI via other ways) and executing the following macro:. ```. {. TFile *f = new TFile(""bar.root"", ""RECREATE"");. TTree *foobar = new TTree(""t"", ""t"");. foobar->Write();. TH1D *foo = new TH1D(""foo"", ""foo"", 10, 0, 10);. new TBrowser();. }. ```. reproduces the behaviour: The tree `t` is visible in the browser, but the histogram `foo` is not. . `.ls` shows (as expected):. ```. root [1] .ls. TFile** bar.root. TFile* bar.root. OBJ: TTree t t : 0 at: 0x5617aee19b60. OBJ: TH1D foo foo : 0 at: 0x5617afef9650. KEY: TTree t;1 t. ```. The old `TBrowser` shows both objects. . Either not writing out the `TTree` or writing out the histogram makes it visible. . However, this breaks the use case of reading in a file with a `TTree` and creating histograms in-memory, then inspecting them via a `TBrowser`. . (arguably, users should care about the `TDirectory` context...). ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Gentoo Linux. 3. ROOT built via package manager :wink: .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10389
https://github.com/root-project/root/issues/10389:290,security,access,accessible,290,"`RBrowser` does not list in-memory objects when written objects are present in `TDirectory` context; ### Describe the bug. Opening a file containing data (e.g. a `TTree`) and creating histograms in memory afterwards, finally opening a new-style `TBrowser`, the in-memory histograms are not accessible from the browser. . ### Expected behavior. Histograms can either be accessed in `root => ROOT Memory` or (as in the old-style `TBrowser`) in the list below the file (even if not yet written out), since they were created in the context of the file's `TDirectory`. . ### To Reproduce. Using ROOT 6.26.00 (or switching to the web-GUI via other ways) and executing the following macro:. ```. {. TFile *f = new TFile(""bar.root"", ""RECREATE"");. TTree *foobar = new TTree(""t"", ""t"");. foobar->Write();. TH1D *foo = new TH1D(""foo"", ""foo"", 10, 0, 10);. new TBrowser();. }. ```. reproduces the behaviour: The tree `t` is visible in the browser, but the histogram `foo` is not. . `.ls` shows (as expected):. ```. root [1] .ls. TFile** bar.root. TFile* bar.root. OBJ: TTree t t : 0 at: 0x5617aee19b60. OBJ: TH1D foo foo : 0 at: 0x5617afef9650. KEY: TTree t;1 t. ```. The old `TBrowser` shows both objects. . Either not writing out the `TTree` or writing out the histogram makes it visible. . However, this breaks the use case of reading in a file with a `TTree` and creating histograms in-memory, then inspecting them via a `TBrowser`. . (arguably, users should care about the `TDirectory` context...). ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Gentoo Linux. 3. ROOT built via package manager :wink: .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10389
https://github.com/root-project/root/issues/10389:369,security,access,accessed,369,"`RBrowser` does not list in-memory objects when written objects are present in `TDirectory` context; ### Describe the bug. Opening a file containing data (e.g. a `TTree`) and creating histograms in memory afterwards, finally opening a new-style `TBrowser`, the in-memory histograms are not accessible from the browser. . ### Expected behavior. Histograms can either be accessed in `root => ROOT Memory` or (as in the old-style `TBrowser`) in the list below the file (even if not yet written out), since they were created in the context of the file's `TDirectory`. . ### To Reproduce. Using ROOT 6.26.00 (or switching to the web-GUI via other ways) and executing the following macro:. ```. {. TFile *f = new TFile(""bar.root"", ""RECREATE"");. TTree *foobar = new TTree(""t"", ""t"");. foobar->Write();. TH1D *foo = new TH1D(""foo"", ""foo"", 10, 0, 10);. new TBrowser();. }. ```. reproduces the behaviour: The tree `t` is visible in the browser, but the histogram `foo` is not. . `.ls` shows (as expected):. ```. root [1] .ls. TFile** bar.root. TFile* bar.root. OBJ: TTree t t : 0 at: 0x5617aee19b60. OBJ: TH1D foo foo : 0 at: 0x5617afef9650. KEY: TTree t;1 t. ```. The old `TBrowser` shows both objects. . Either not writing out the `TTree` or writing out the histogram makes it visible. . However, this breaks the use case of reading in a file with a `TTree` and creating histograms in-memory, then inspecting them via a `TBrowser`. . (arguably, users should care about the `TDirectory` context...). ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Gentoo Linux. 3. ROOT built via package manager :wink: .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10389
https://github.com/root-project/root/issues/10389:92,testability,context,context,92,"`RBrowser` does not list in-memory objects when written objects are present in `TDirectory` context; ### Describe the bug. Opening a file containing data (e.g. a `TTree`) and creating histograms in memory afterwards, finally opening a new-style `TBrowser`, the in-memory histograms are not accessible from the browser. . ### Expected behavior. Histograms can either be accessed in `root => ROOT Memory` or (as in the old-style `TBrowser`) in the list below the file (even if not yet written out), since they were created in the context of the file's `TDirectory`. . ### To Reproduce. Using ROOT 6.26.00 (or switching to the web-GUI via other ways) and executing the following macro:. ```. {. TFile *f = new TFile(""bar.root"", ""RECREATE"");. TTree *foobar = new TTree(""t"", ""t"");. foobar->Write();. TH1D *foo = new TH1D(""foo"", ""foo"", 10, 0, 10);. new TBrowser();. }. ```. reproduces the behaviour: The tree `t` is visible in the browser, but the histogram `foo` is not. . `.ls` shows (as expected):. ```. root [1] .ls. TFile** bar.root. TFile* bar.root. OBJ: TTree t t : 0 at: 0x5617aee19b60. OBJ: TH1D foo foo : 0 at: 0x5617afef9650. KEY: TTree t;1 t. ```. The old `TBrowser` shows both objects. . Either not writing out the `TTree` or writing out the histogram makes it visible. . However, this breaks the use case of reading in a file with a `TTree` and creating histograms in-memory, then inspecting them via a `TBrowser`. . (arguably, users should care about the `TDirectory` context...). ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Gentoo Linux. 3. ROOT built via package manager :wink: .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10389
https://github.com/root-project/root/issues/10389:528,testability,context,context,528,"`RBrowser` does not list in-memory objects when written objects are present in `TDirectory` context; ### Describe the bug. Opening a file containing data (e.g. a `TTree`) and creating histograms in memory afterwards, finally opening a new-style `TBrowser`, the in-memory histograms are not accessible from the browser. . ### Expected behavior. Histograms can either be accessed in `root => ROOT Memory` or (as in the old-style `TBrowser`) in the list below the file (even if not yet written out), since they were created in the context of the file's `TDirectory`. . ### To Reproduce. Using ROOT 6.26.00 (or switching to the web-GUI via other ways) and executing the following macro:. ```. {. TFile *f = new TFile(""bar.root"", ""RECREATE"");. TTree *foobar = new TTree(""t"", ""t"");. foobar->Write();. TH1D *foo = new TH1D(""foo"", ""foo"", 10, 0, 10);. new TBrowser();. }. ```. reproduces the behaviour: The tree `t` is visible in the browser, but the histogram `foo` is not. . `.ls` shows (as expected):. ```. root [1] .ls. TFile** bar.root. TFile* bar.root. OBJ: TTree t t : 0 at: 0x5617aee19b60. OBJ: TH1D foo foo : 0 at: 0x5617afef9650. KEY: TTree t;1 t. ```. The old `TBrowser` shows both objects. . Either not writing out the `TTree` or writing out the histogram makes it visible. . However, this breaks the use case of reading in a file with a `TTree` and creating histograms in-memory, then inspecting them via a `TBrowser`. . (arguably, users should care about the `TDirectory` context...). ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Gentoo Linux. 3. ROOT built via package manager :wink: .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10389
https://github.com/root-project/root/issues/10389:1477,testability,context,context,1477,"`RBrowser` does not list in-memory objects when written objects are present in `TDirectory` context; ### Describe the bug. Opening a file containing data (e.g. a `TTree`) and creating histograms in memory afterwards, finally opening a new-style `TBrowser`, the in-memory histograms are not accessible from the browser. . ### Expected behavior. Histograms can either be accessed in `root => ROOT Memory` or (as in the old-style `TBrowser`) in the list below the file (even if not yet written out), since they were created in the context of the file's `TDirectory`. . ### To Reproduce. Using ROOT 6.26.00 (or switching to the web-GUI via other ways) and executing the following macro:. ```. {. TFile *f = new TFile(""bar.root"", ""RECREATE"");. TTree *foobar = new TTree(""t"", ""t"");. foobar->Write();. TH1D *foo = new TH1D(""foo"", ""foo"", 10, 0, 10);. new TBrowser();. }. ```. reproduces the behaviour: The tree `t` is visible in the browser, but the histogram `foo` is not. . `.ls` shows (as expected):. ```. root [1] .ls. TFile** bar.root. TFile* bar.root. OBJ: TTree t t : 0 at: 0x5617aee19b60. OBJ: TH1D foo foo : 0 at: 0x5617afef9650. KEY: TTree t;1 t. ```. The old `TBrowser` shows both objects. . Either not writing out the `TTree` or writing out the histogram makes it visible. . However, this breaks the use case of reading in a file with a `TTree` and creating histograms in-memory, then inspecting them via a `TBrowser`. . (arguably, users should care about the `TDirectory` context...). ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Gentoo Linux. 3. ROOT built via package manager :wink: .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10389
https://github.com/root-project/root/issues/10389:28,usability,memor,memory,28,"`RBrowser` does not list in-memory objects when written objects are present in `TDirectory` context; ### Describe the bug. Opening a file containing data (e.g. a `TTree`) and creating histograms in memory afterwards, finally opening a new-style `TBrowser`, the in-memory histograms are not accessible from the browser. . ### Expected behavior. Histograms can either be accessed in `root => ROOT Memory` or (as in the old-style `TBrowser`) in the list below the file (even if not yet written out), since they were created in the context of the file's `TDirectory`. . ### To Reproduce. Using ROOT 6.26.00 (or switching to the web-GUI via other ways) and executing the following macro:. ```. {. TFile *f = new TFile(""bar.root"", ""RECREATE"");. TTree *foobar = new TTree(""t"", ""t"");. foobar->Write();. TH1D *foo = new TH1D(""foo"", ""foo"", 10, 0, 10);. new TBrowser();. }. ```. reproduces the behaviour: The tree `t` is visible in the browser, but the histogram `foo` is not. . `.ls` shows (as expected):. ```. root [1] .ls. TFile** bar.root. TFile* bar.root. OBJ: TTree t t : 0 at: 0x5617aee19b60. OBJ: TH1D foo foo : 0 at: 0x5617afef9650. KEY: TTree t;1 t. ```. The old `TBrowser` shows both objects. . Either not writing out the `TTree` or writing out the histogram makes it visible. . However, this breaks the use case of reading in a file with a `TTree` and creating histograms in-memory, then inspecting them via a `TBrowser`. . (arguably, users should care about the `TDirectory` context...). ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Gentoo Linux. 3. ROOT built via package manager :wink: .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10389
https://github.com/root-project/root/issues/10389:198,usability,memor,memory,198,"`RBrowser` does not list in-memory objects when written objects are present in `TDirectory` context; ### Describe the bug. Opening a file containing data (e.g. a `TTree`) and creating histograms in memory afterwards, finally opening a new-style `TBrowser`, the in-memory histograms are not accessible from the browser. . ### Expected behavior. Histograms can either be accessed in `root => ROOT Memory` or (as in the old-style `TBrowser`) in the list below the file (even if not yet written out), since they were created in the context of the file's `TDirectory`. . ### To Reproduce. Using ROOT 6.26.00 (or switching to the web-GUI via other ways) and executing the following macro:. ```. {. TFile *f = new TFile(""bar.root"", ""RECREATE"");. TTree *foobar = new TTree(""t"", ""t"");. foobar->Write();. TH1D *foo = new TH1D(""foo"", ""foo"", 10, 0, 10);. new TBrowser();. }. ```. reproduces the behaviour: The tree `t` is visible in the browser, but the histogram `foo` is not. . `.ls` shows (as expected):. ```. root [1] .ls. TFile** bar.root. TFile* bar.root. OBJ: TTree t t : 0 at: 0x5617aee19b60. OBJ: TH1D foo foo : 0 at: 0x5617afef9650. KEY: TTree t;1 t. ```. The old `TBrowser` shows both objects. . Either not writing out the `TTree` or writing out the histogram makes it visible. . However, this breaks the use case of reading in a file with a `TTree` and creating histograms in-memory, then inspecting them via a `TBrowser`. . (arguably, users should care about the `TDirectory` context...). ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Gentoo Linux. 3. ROOT built via package manager :wink: .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10389
https://github.com/root-project/root/issues/10389:264,usability,memor,memory,264,"`RBrowser` does not list in-memory objects when written objects are present in `TDirectory` context; ### Describe the bug. Opening a file containing data (e.g. a `TTree`) and creating histograms in memory afterwards, finally opening a new-style `TBrowser`, the in-memory histograms are not accessible from the browser. . ### Expected behavior. Histograms can either be accessed in `root => ROOT Memory` or (as in the old-style `TBrowser`) in the list below the file (even if not yet written out), since they were created in the context of the file's `TDirectory`. . ### To Reproduce. Using ROOT 6.26.00 (or switching to the web-GUI via other ways) and executing the following macro:. ```. {. TFile *f = new TFile(""bar.root"", ""RECREATE"");. TTree *foobar = new TTree(""t"", ""t"");. foobar->Write();. TH1D *foo = new TH1D(""foo"", ""foo"", 10, 0, 10);. new TBrowser();. }. ```. reproduces the behaviour: The tree `t` is visible in the browser, but the histogram `foo` is not. . `.ls` shows (as expected):. ```. root [1] .ls. TFile** bar.root. TFile* bar.root. OBJ: TTree t t : 0 at: 0x5617aee19b60. OBJ: TH1D foo foo : 0 at: 0x5617afef9650. KEY: TTree t;1 t. ```. The old `TBrowser` shows both objects. . Either not writing out the `TTree` or writing out the histogram makes it visible. . However, this breaks the use case of reading in a file with a `TTree` and creating histograms in-memory, then inspecting them via a `TBrowser`. . (arguably, users should care about the `TDirectory` context...). ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Gentoo Linux. 3. ROOT built via package manager :wink: .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10389
https://github.com/root-project/root/issues/10389:334,usability,behavi,behavior,334,"`RBrowser` does not list in-memory objects when written objects are present in `TDirectory` context; ### Describe the bug. Opening a file containing data (e.g. a `TTree`) and creating histograms in memory afterwards, finally opening a new-style `TBrowser`, the in-memory histograms are not accessible from the browser. . ### Expected behavior. Histograms can either be accessed in `root => ROOT Memory` or (as in the old-style `TBrowser`) in the list below the file (even if not yet written out), since they were created in the context of the file's `TDirectory`. . ### To Reproduce. Using ROOT 6.26.00 (or switching to the web-GUI via other ways) and executing the following macro:. ```. {. TFile *f = new TFile(""bar.root"", ""RECREATE"");. TTree *foobar = new TTree(""t"", ""t"");. foobar->Write();. TH1D *foo = new TH1D(""foo"", ""foo"", 10, 0, 10);. new TBrowser();. }. ```. reproduces the behaviour: The tree `t` is visible in the browser, but the histogram `foo` is not. . `.ls` shows (as expected):. ```. root [1] .ls. TFile** bar.root. TFile* bar.root. OBJ: TTree t t : 0 at: 0x5617aee19b60. OBJ: TH1D foo foo : 0 at: 0x5617afef9650. KEY: TTree t;1 t. ```. The old `TBrowser` shows both objects. . Either not writing out the `TTree` or writing out the histogram makes it visible. . However, this breaks the use case of reading in a file with a `TTree` and creating histograms in-memory, then inspecting them via a `TBrowser`. . (arguably, users should care about the `TDirectory` context...). ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Gentoo Linux. 3. ROOT built via package manager :wink: .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10389
https://github.com/root-project/root/issues/10389:395,usability,Memor,Memory,395,"`RBrowser` does not list in-memory objects when written objects are present in `TDirectory` context; ### Describe the bug. Opening a file containing data (e.g. a `TTree`) and creating histograms in memory afterwards, finally opening a new-style `TBrowser`, the in-memory histograms are not accessible from the browser. . ### Expected behavior. Histograms can either be accessed in `root => ROOT Memory` or (as in the old-style `TBrowser`) in the list below the file (even if not yet written out), since they were created in the context of the file's `TDirectory`. . ### To Reproduce. Using ROOT 6.26.00 (or switching to the web-GUI via other ways) and executing the following macro:. ```. {. TFile *f = new TFile(""bar.root"", ""RECREATE"");. TTree *foobar = new TTree(""t"", ""t"");. foobar->Write();. TH1D *foo = new TH1D(""foo"", ""foo"", 10, 0, 10);. new TBrowser();. }. ```. reproduces the behaviour: The tree `t` is visible in the browser, but the histogram `foo` is not. . `.ls` shows (as expected):. ```. root [1] .ls. TFile** bar.root. TFile* bar.root. OBJ: TTree t t : 0 at: 0x5617aee19b60. OBJ: TH1D foo foo : 0 at: 0x5617afef9650. KEY: TTree t;1 t. ```. The old `TBrowser` shows both objects. . Either not writing out the `TTree` or writing out the histogram makes it visible. . However, this breaks the use case of reading in a file with a `TTree` and creating histograms in-memory, then inspecting them via a `TBrowser`. . (arguably, users should care about the `TDirectory` context...). ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Gentoo Linux. 3. ROOT built via package manager :wink: .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10389
https://github.com/root-project/root/issues/10389:883,usability,behavi,behaviour,883,"`RBrowser` does not list in-memory objects when written objects are present in `TDirectory` context; ### Describe the bug. Opening a file containing data (e.g. a `TTree`) and creating histograms in memory afterwards, finally opening a new-style `TBrowser`, the in-memory histograms are not accessible from the browser. . ### Expected behavior. Histograms can either be accessed in `root => ROOT Memory` or (as in the old-style `TBrowser`) in the list below the file (even if not yet written out), since they were created in the context of the file's `TDirectory`. . ### To Reproduce. Using ROOT 6.26.00 (or switching to the web-GUI via other ways) and executing the following macro:. ```. {. TFile *f = new TFile(""bar.root"", ""RECREATE"");. TTree *foobar = new TTree(""t"", ""t"");. foobar->Write();. TH1D *foo = new TH1D(""foo"", ""foo"", 10, 0, 10);. new TBrowser();. }. ```. reproduces the behaviour: The tree `t` is visible in the browser, but the histogram `foo` is not. . `.ls` shows (as expected):. ```. root [1] .ls. TFile** bar.root. TFile* bar.root. OBJ: TTree t t : 0 at: 0x5617aee19b60. OBJ: TH1D foo foo : 0 at: 0x5617afef9650. KEY: TTree t;1 t. ```. The old `TBrowser` shows both objects. . Either not writing out the `TTree` or writing out the histogram makes it visible. . However, this breaks the use case of reading in a file with a `TTree` and creating histograms in-memory, then inspecting them via a `TBrowser`. . (arguably, users should care about the `TDirectory` context...). ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Gentoo Linux. 3. ROOT built via package manager :wink: .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10389
https://github.com/root-project/root/issues/10389:1376,usability,memor,memory,1376,"`RBrowser` does not list in-memory objects when written objects are present in `TDirectory` context; ### Describe the bug. Opening a file containing data (e.g. a `TTree`) and creating histograms in memory afterwards, finally opening a new-style `TBrowser`, the in-memory histograms are not accessible from the browser. . ### Expected behavior. Histograms can either be accessed in `root => ROOT Memory` or (as in the old-style `TBrowser`) in the list below the file (even if not yet written out), since they were created in the context of the file's `TDirectory`. . ### To Reproduce. Using ROOT 6.26.00 (or switching to the web-GUI via other ways) and executing the following macro:. ```. {. TFile *f = new TFile(""bar.root"", ""RECREATE"");. TTree *foobar = new TTree(""t"", ""t"");. foobar->Write();. TH1D *foo = new TH1D(""foo"", ""foo"", 10, 0, 10);. new TBrowser();. }. ```. reproduces the behaviour: The tree `t` is visible in the browser, but the histogram `foo` is not. . `.ls` shows (as expected):. ```. root [1] .ls. TFile** bar.root. TFile* bar.root. OBJ: TTree t t : 0 at: 0x5617aee19b60. OBJ: TH1D foo foo : 0 at: 0x5617afef9650. KEY: TTree t;1 t. ```. The old `TBrowser` shows both objects. . Either not writing out the `TTree` or writing out the histogram makes it visible. . However, this breaks the use case of reading in a file with a `TTree` and creating histograms in-memory, then inspecting them via a `TBrowser`. . (arguably, users should care about the `TDirectory` context...). ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Gentoo Linux. 3. ROOT built via package manager :wink: .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10389
https://github.com/root-project/root/issues/10389:1436,usability,user,users,1436,"`RBrowser` does not list in-memory objects when written objects are present in `TDirectory` context; ### Describe the bug. Opening a file containing data (e.g. a `TTree`) and creating histograms in memory afterwards, finally opening a new-style `TBrowser`, the in-memory histograms are not accessible from the browser. . ### Expected behavior. Histograms can either be accessed in `root => ROOT Memory` or (as in the old-style `TBrowser`) in the list below the file (even if not yet written out), since they were created in the context of the file's `TDirectory`. . ### To Reproduce. Using ROOT 6.26.00 (or switching to the web-GUI via other ways) and executing the following macro:. ```. {. TFile *f = new TFile(""bar.root"", ""RECREATE"");. TTree *foobar = new TTree(""t"", ""t"");. foobar->Write();. TH1D *foo = new TH1D(""foo"", ""foo"", 10, 0, 10);. new TBrowser();. }. ```. reproduces the behaviour: The tree `t` is visible in the browser, but the histogram `foo` is not. . `.ls` shows (as expected):. ```. root [1] .ls. TFile** bar.root. TFile* bar.root. OBJ: TTree t t : 0 at: 0x5617aee19b60. OBJ: TH1D foo foo : 0 at: 0x5617afef9650. KEY: TTree t;1 t. ```. The old `TBrowser` shows both objects. . Either not writing out the `TTree` or writing out the histogram makes it visible. . However, this breaks the use case of reading in a file with a `TTree` and creating histograms in-memory, then inspecting them via a `TBrowser`. . (arguably, users should care about the `TDirectory` context...). ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Gentoo Linux. 3. ROOT built via package manager :wink: .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10389
https://github.com/root-project/root/issues/10390:28,interoperability,distribut,distributed,28,"Wrong file names created in distributed Snapshot; ### Describe the bug. Running a `Snapshot` in distributed mode creates as many partial snapshots as distributed tasks. Each task will append its task id to the original file name, so that different tasks do not overwrite each other's data. The input file name is modified in-place in each task, but this leads to a situation where a task can receive a modified file name and modify it further, thus leading to wrong file names after the Snapshot. The following reproducer. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. import os. def test(client):. df = RDataFrame(10, daskclient=client).Define(""a"",""1.""). snap_df = df.Snapshot(""dummy_distributed"", ""dummy_distributed.root""). print(snap_df._headnode.inputfiles). tmp_files = [f""dummy_distributed_{i}.root"" for i in range(2)]. if __name__ == ""__main__"":. client = Client(LocalCluster(n_workers=2, threads_per_worker=1, processes=True)). for i in range(2):. test(client). ```. leads to. ```. $: python repro.py. ['dummy_distributed_0.root', 'dummy_distributed_1.root']. ['dummy_distributed_1_0.root', 'dummy_distributed_0_1.root']. ```. Interestingly, this happens only with Dask. ### Expected behavior. Each task can properly process the Snapshot in isolation. ### Setup. ROOT >= 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10390
https://github.com/root-project/root/issues/10390:96,interoperability,distribut,distributed,96,"Wrong file names created in distributed Snapshot; ### Describe the bug. Running a `Snapshot` in distributed mode creates as many partial snapshots as distributed tasks. Each task will append its task id to the original file name, so that different tasks do not overwrite each other's data. The input file name is modified in-place in each task, but this leads to a situation where a task can receive a modified file name and modify it further, thus leading to wrong file names after the Snapshot. The following reproducer. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. import os. def test(client):. df = RDataFrame(10, daskclient=client).Define(""a"",""1.""). snap_df = df.Snapshot(""dummy_distributed"", ""dummy_distributed.root""). print(snap_df._headnode.inputfiles). tmp_files = [f""dummy_distributed_{i}.root"" for i in range(2)]. if __name__ == ""__main__"":. client = Client(LocalCluster(n_workers=2, threads_per_worker=1, processes=True)). for i in range(2):. test(client). ```. leads to. ```. $: python repro.py. ['dummy_distributed_0.root', 'dummy_distributed_1.root']. ['dummy_distributed_1_0.root', 'dummy_distributed_0_1.root']. ```. Interestingly, this happens only with Dask. ### Expected behavior. Each task can properly process the Snapshot in isolation. ### Setup. ROOT >= 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10390
https://github.com/root-project/root/issues/10390:150,interoperability,distribut,distributed,150,"Wrong file names created in distributed Snapshot; ### Describe the bug. Running a `Snapshot` in distributed mode creates as many partial snapshots as distributed tasks. Each task will append its task id to the original file name, so that different tasks do not overwrite each other's data. The input file name is modified in-place in each task, but this leads to a situation where a task can receive a modified file name and modify it further, thus leading to wrong file names after the Snapshot. The following reproducer. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. import os. def test(client):. df = RDataFrame(10, daskclient=client).Define(""a"",""1.""). snap_df = df.Snapshot(""dummy_distributed"", ""dummy_distributed.root""). print(snap_df._headnode.inputfiles). tmp_files = [f""dummy_distributed_{i}.root"" for i in range(2)]. if __name__ == ""__main__"":. client = Client(LocalCluster(n_workers=2, threads_per_worker=1, processes=True)). for i in range(2):. test(client). ```. leads to. ```. $: python repro.py. ['dummy_distributed_0.root', 'dummy_distributed_1.root']. ['dummy_distributed_1_0.root', 'dummy_distributed_0_1.root']. ```. Interestingly, this happens only with Dask. ### Expected behavior. Each task can properly process the Snapshot in isolation. ### Setup. ROOT >= 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10390
https://github.com/root-project/root/issues/10390:582,interoperability,Distribut,Distributed,582,"Wrong file names created in distributed Snapshot; ### Describe the bug. Running a `Snapshot` in distributed mode creates as many partial snapshots as distributed tasks. Each task will append its task id to the original file name, so that different tasks do not overwrite each other's data. The input file name is modified in-place in each task, but this leads to a situation where a task can receive a modified file name and modify it further, thus leading to wrong file names after the Snapshot. The following reproducer. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. import os. def test(client):. df = RDataFrame(10, daskclient=client).Define(""a"",""1.""). snap_df = df.Snapshot(""dummy_distributed"", ""dummy_distributed.root""). print(snap_df._headnode.inputfiles). tmp_files = [f""dummy_distributed_{i}.root"" for i in range(2)]. if __name__ == ""__main__"":. client = Client(LocalCluster(n_workers=2, threads_per_worker=1, processes=True)). for i in range(2):. test(client). ```. leads to. ```. $: python repro.py. ['dummy_distributed_0.root', 'dummy_distributed_1.root']. ['dummy_distributed_1_0.root', 'dummy_distributed_0_1.root']. ```. Interestingly, this happens only with Dask. ### Expected behavior. Each task can properly process the Snapshot in isolation. ### Setup. ROOT >= 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10390
https://github.com/root-project/root/issues/10390:621,interoperability,distribut,distributed,621,"Wrong file names created in distributed Snapshot; ### Describe the bug. Running a `Snapshot` in distributed mode creates as many partial snapshots as distributed tasks. Each task will append its task id to the original file name, so that different tasks do not overwrite each other's data. The input file name is modified in-place in each task, but this leads to a situation where a task can receive a modified file name and modify it further, thus leading to wrong file names after the Snapshot. The following reproducer. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. import os. def test(client):. df = RDataFrame(10, daskclient=client).Define(""a"",""1.""). snap_df = df.Snapshot(""dummy_distributed"", ""dummy_distributed.root""). print(snap_df._headnode.inputfiles). tmp_files = [f""dummy_distributed_{i}.root"" for i in range(2)]. if __name__ == ""__main__"":. client = Client(LocalCluster(n_workers=2, threads_per_worker=1, processes=True)). for i in range(2):. test(client). ```. leads to. ```. $: python repro.py. ['dummy_distributed_0.root', 'dummy_distributed_1.root']. ['dummy_distributed_1_0.root', 'dummy_distributed_0_1.root']. ```. Interestingly, this happens only with Dask. ### Expected behavior. Each task can properly process the Snapshot in isolation. ### Setup. ROOT >= 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10390
https://github.com/root-project/root/issues/10390:294,safety,input,input,294,"Wrong file names created in distributed Snapshot; ### Describe the bug. Running a `Snapshot` in distributed mode creates as many partial snapshots as distributed tasks. Each task will append its task id to the original file name, so that different tasks do not overwrite each other's data. The input file name is modified in-place in each task, but this leads to a situation where a task can receive a modified file name and modify it further, thus leading to wrong file names after the Snapshot. The following reproducer. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. import os. def test(client):. df = RDataFrame(10, daskclient=client).Define(""a"",""1.""). snap_df = df.Snapshot(""dummy_distributed"", ""dummy_distributed.root""). print(snap_df._headnode.inputfiles). tmp_files = [f""dummy_distributed_{i}.root"" for i in range(2)]. if __name__ == ""__main__"":. client = Client(LocalCluster(n_workers=2, threads_per_worker=1, processes=True)). for i in range(2):. test(client). ```. leads to. ```. $: python repro.py. ['dummy_distributed_0.root', 'dummy_distributed_1.root']. ['dummy_distributed_1_0.root', 'dummy_distributed_0_1.root']. ```. Interestingly, this happens only with Dask. ### Expected behavior. Each task can properly process the Snapshot in isolation. ### Setup. ROOT >= 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10390
https://github.com/root-project/root/issues/10390:677,safety,test,test,677,"Wrong file names created in distributed Snapshot; ### Describe the bug. Running a `Snapshot` in distributed mode creates as many partial snapshots as distributed tasks. Each task will append its task id to the original file name, so that different tasks do not overwrite each other's data. The input file name is modified in-place in each task, but this leads to a situation where a task can receive a modified file name and modify it further, thus leading to wrong file names after the Snapshot. The following reproducer. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. import os. def test(client):. df = RDataFrame(10, daskclient=client).Define(""a"",""1.""). snap_df = df.Snapshot(""dummy_distributed"", ""dummy_distributed.root""). print(snap_df._headnode.inputfiles). tmp_files = [f""dummy_distributed_{i}.root"" for i in range(2)]. if __name__ == ""__main__"":. client = Client(LocalCluster(n_workers=2, threads_per_worker=1, processes=True)). for i in range(2):. test(client). ```. leads to. ```. $: python repro.py. ['dummy_distributed_0.root', 'dummy_distributed_1.root']. ['dummy_distributed_1_0.root', 'dummy_distributed_0_1.root']. ```. Interestingly, this happens only with Dask. ### Expected behavior. Each task can properly process the Snapshot in isolation. ### Setup. ROOT >= 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10390
https://github.com/root-project/root/issues/10390:843,safety,input,inputfiles,843,"Wrong file names created in distributed Snapshot; ### Describe the bug. Running a `Snapshot` in distributed mode creates as many partial snapshots as distributed tasks. Each task will append its task id to the original file name, so that different tasks do not overwrite each other's data. The input file name is modified in-place in each task, but this leads to a situation where a task can receive a modified file name and modify it further, thus leading to wrong file names after the Snapshot. The following reproducer. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. import os. def test(client):. df = RDataFrame(10, daskclient=client).Define(""a"",""1.""). snap_df = df.Snapshot(""dummy_distributed"", ""dummy_distributed.root""). print(snap_df._headnode.inputfiles). tmp_files = [f""dummy_distributed_{i}.root"" for i in range(2)]. if __name__ == ""__main__"":. client = Client(LocalCluster(n_workers=2, threads_per_worker=1, processes=True)). for i in range(2):. test(client). ```. leads to. ```. $: python repro.py. ['dummy_distributed_0.root', 'dummy_distributed_1.root']. ['dummy_distributed_1_0.root', 'dummy_distributed_0_1.root']. ```. Interestingly, this happens only with Dask. ### Expected behavior. Each task can properly process the Snapshot in isolation. ### Setup. ROOT >= 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10390
https://github.com/root-project/root/issues/10390:1049,safety,test,test,1049,"Wrong file names created in distributed Snapshot; ### Describe the bug. Running a `Snapshot` in distributed mode creates as many partial snapshots as distributed tasks. Each task will append its task id to the original file name, so that different tasks do not overwrite each other's data. The input file name is modified in-place in each task, but this leads to a situation where a task can receive a modified file name and modify it further, thus leading to wrong file names after the Snapshot. The following reproducer. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. import os. def test(client):. df = RDataFrame(10, daskclient=client).Define(""a"",""1.""). snap_df = df.Snapshot(""dummy_distributed"", ""dummy_distributed.root""). print(snap_df._headnode.inputfiles). tmp_files = [f""dummy_distributed_{i}.root"" for i in range(2)]. if __name__ == ""__main__"":. client = Client(LocalCluster(n_workers=2, threads_per_worker=1, processes=True)). for i in range(2):. test(client). ```. leads to. ```. $: python repro.py. ['dummy_distributed_0.root', 'dummy_distributed_1.root']. ['dummy_distributed_1_0.root', 'dummy_distributed_0_1.root']. ```. Interestingly, this happens only with Dask. ### Expected behavior. Each task can properly process the Snapshot in isolation. ### Setup. ROOT >= 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10390
https://github.com/root-project/root/issues/10390:1342,safety,isol,isolation,1342,"Wrong file names created in distributed Snapshot; ### Describe the bug. Running a `Snapshot` in distributed mode creates as many partial snapshots as distributed tasks. Each task will append its task id to the original file name, so that different tasks do not overwrite each other's data. The input file name is modified in-place in each task, but this leads to a situation where a task can receive a modified file name and modify it further, thus leading to wrong file names after the Snapshot. The following reproducer. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. import os. def test(client):. df = RDataFrame(10, daskclient=client).Define(""a"",""1.""). snap_df = df.Snapshot(""dummy_distributed"", ""dummy_distributed.root""). print(snap_df._headnode.inputfiles). tmp_files = [f""dummy_distributed_{i}.root"" for i in range(2)]. if __name__ == ""__main__"":. client = Client(LocalCluster(n_workers=2, threads_per_worker=1, processes=True)). for i in range(2):. test(client). ```. leads to. ```. $: python repro.py. ['dummy_distributed_0.root', 'dummy_distributed_1.root']. ['dummy_distributed_1_0.root', 'dummy_distributed_0_1.root']. ```. Interestingly, this happens only with Dask. ### Expected behavior. Each task can properly process the Snapshot in isolation. ### Setup. ROOT >= 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10390
https://github.com/root-project/root/issues/10390:313,security,modif,modified,313,"Wrong file names created in distributed Snapshot; ### Describe the bug. Running a `Snapshot` in distributed mode creates as many partial snapshots as distributed tasks. Each task will append its task id to the original file name, so that different tasks do not overwrite each other's data. The input file name is modified in-place in each task, but this leads to a situation where a task can receive a modified file name and modify it further, thus leading to wrong file names after the Snapshot. The following reproducer. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. import os. def test(client):. df = RDataFrame(10, daskclient=client).Define(""a"",""1.""). snap_df = df.Snapshot(""dummy_distributed"", ""dummy_distributed.root""). print(snap_df._headnode.inputfiles). tmp_files = [f""dummy_distributed_{i}.root"" for i in range(2)]. if __name__ == ""__main__"":. client = Client(LocalCluster(n_workers=2, threads_per_worker=1, processes=True)). for i in range(2):. test(client). ```. leads to. ```. $: python repro.py. ['dummy_distributed_0.root', 'dummy_distributed_1.root']. ['dummy_distributed_1_0.root', 'dummy_distributed_0_1.root']. ```. Interestingly, this happens only with Dask. ### Expected behavior. Each task can properly process the Snapshot in isolation. ### Setup. ROOT >= 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10390
https://github.com/root-project/root/issues/10390:402,security,modif,modified,402,"Wrong file names created in distributed Snapshot; ### Describe the bug. Running a `Snapshot` in distributed mode creates as many partial snapshots as distributed tasks. Each task will append its task id to the original file name, so that different tasks do not overwrite each other's data. The input file name is modified in-place in each task, but this leads to a situation where a task can receive a modified file name and modify it further, thus leading to wrong file names after the Snapshot. The following reproducer. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. import os. def test(client):. df = RDataFrame(10, daskclient=client).Define(""a"",""1.""). snap_df = df.Snapshot(""dummy_distributed"", ""dummy_distributed.root""). print(snap_df._headnode.inputfiles). tmp_files = [f""dummy_distributed_{i}.root"" for i in range(2)]. if __name__ == ""__main__"":. client = Client(LocalCluster(n_workers=2, threads_per_worker=1, processes=True)). for i in range(2):. test(client). ```. leads to. ```. $: python repro.py. ['dummy_distributed_0.root', 'dummy_distributed_1.root']. ['dummy_distributed_1_0.root', 'dummy_distributed_0_1.root']. ```. Interestingly, this happens only with Dask. ### Expected behavior. Each task can properly process the Snapshot in isolation. ### Setup. ROOT >= 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10390
https://github.com/root-project/root/issues/10390:425,security,modif,modify,425,"Wrong file names created in distributed Snapshot; ### Describe the bug. Running a `Snapshot` in distributed mode creates as many partial snapshots as distributed tasks. Each task will append its task id to the original file name, so that different tasks do not overwrite each other's data. The input file name is modified in-place in each task, but this leads to a situation where a task can receive a modified file name and modify it further, thus leading to wrong file names after the Snapshot. The following reproducer. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. import os. def test(client):. df = RDataFrame(10, daskclient=client).Define(""a"",""1.""). snap_df = df.Snapshot(""dummy_distributed"", ""dummy_distributed.root""). print(snap_df._headnode.inputfiles). tmp_files = [f""dummy_distributed_{i}.root"" for i in range(2)]. if __name__ == ""__main__"":. client = Client(LocalCluster(n_workers=2, threads_per_worker=1, processes=True)). for i in range(2):. test(client). ```. leads to. ```. $: python repro.py. ['dummy_distributed_0.root', 'dummy_distributed_1.root']. ['dummy_distributed_1_0.root', 'dummy_distributed_0_1.root']. ```. Interestingly, this happens only with Dask. ### Expected behavior. Each task can properly process the Snapshot in isolation. ### Setup. ROOT >= 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10390
https://github.com/root-project/root/issues/10390:1342,security,iso,isolation,1342,"Wrong file names created in distributed Snapshot; ### Describe the bug. Running a `Snapshot` in distributed mode creates as many partial snapshots as distributed tasks. Each task will append its task id to the original file name, so that different tasks do not overwrite each other's data. The input file name is modified in-place in each task, but this leads to a situation where a task can receive a modified file name and modify it further, thus leading to wrong file names after the Snapshot. The following reproducer. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. import os. def test(client):. df = RDataFrame(10, daskclient=client).Define(""a"",""1.""). snap_df = df.Snapshot(""dummy_distributed"", ""dummy_distributed.root""). print(snap_df._headnode.inputfiles). tmp_files = [f""dummy_distributed_{i}.root"" for i in range(2)]. if __name__ == ""__main__"":. client = Client(LocalCluster(n_workers=2, threads_per_worker=1, processes=True)). for i in range(2):. test(client). ```. leads to. ```. $: python repro.py. ['dummy_distributed_0.root', 'dummy_distributed_1.root']. ['dummy_distributed_1_0.root', 'dummy_distributed_0_1.root']. ```. Interestingly, this happens only with Dask. ### Expected behavior. Each task can properly process the Snapshot in isolation. ### Setup. ROOT >= 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10390
https://github.com/root-project/root/issues/10390:677,testability,test,test,677,"Wrong file names created in distributed Snapshot; ### Describe the bug. Running a `Snapshot` in distributed mode creates as many partial snapshots as distributed tasks. Each task will append its task id to the original file name, so that different tasks do not overwrite each other's data. The input file name is modified in-place in each task, but this leads to a situation where a task can receive a modified file name and modify it further, thus leading to wrong file names after the Snapshot. The following reproducer. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. import os. def test(client):. df = RDataFrame(10, daskclient=client).Define(""a"",""1.""). snap_df = df.Snapshot(""dummy_distributed"", ""dummy_distributed.root""). print(snap_df._headnode.inputfiles). tmp_files = [f""dummy_distributed_{i}.root"" for i in range(2)]. if __name__ == ""__main__"":. client = Client(LocalCluster(n_workers=2, threads_per_worker=1, processes=True)). for i in range(2):. test(client). ```. leads to. ```. $: python repro.py. ['dummy_distributed_0.root', 'dummy_distributed_1.root']. ['dummy_distributed_1_0.root', 'dummy_distributed_0_1.root']. ```. Interestingly, this happens only with Dask. ### Expected behavior. Each task can properly process the Snapshot in isolation. ### Setup. ROOT >= 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10390
https://github.com/root-project/root/issues/10390:1049,testability,test,test,1049,"Wrong file names created in distributed Snapshot; ### Describe the bug. Running a `Snapshot` in distributed mode creates as many partial snapshots as distributed tasks. Each task will append its task id to the original file name, so that different tasks do not overwrite each other's data. The input file name is modified in-place in each task, but this leads to a situation where a task can receive a modified file name and modify it further, thus leading to wrong file names after the Snapshot. The following reproducer. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. import os. def test(client):. df = RDataFrame(10, daskclient=client).Define(""a"",""1.""). snap_df = df.Snapshot(""dummy_distributed"", ""dummy_distributed.root""). print(snap_df._headnode.inputfiles). tmp_files = [f""dummy_distributed_{i}.root"" for i in range(2)]. if __name__ == ""__main__"":. client = Client(LocalCluster(n_workers=2, threads_per_worker=1, processes=True)). for i in range(2):. test(client). ```. leads to. ```. $: python repro.py. ['dummy_distributed_0.root', 'dummy_distributed_1.root']. ['dummy_distributed_1_0.root', 'dummy_distributed_0_1.root']. ```. Interestingly, this happens only with Dask. ### Expected behavior. Each task can properly process the Snapshot in isolation. ### Setup. ROOT >= 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10390
https://github.com/root-project/root/issues/10390:1342,testability,isol,isolation,1342,"Wrong file names created in distributed Snapshot; ### Describe the bug. Running a `Snapshot` in distributed mode creates as many partial snapshots as distributed tasks. Each task will append its task id to the original file name, so that different tasks do not overwrite each other's data. The input file name is modified in-place in each task, but this leads to a situation where a task can receive a modified file name and modify it further, thus leading to wrong file names after the Snapshot. The following reproducer. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. import os. def test(client):. df = RDataFrame(10, daskclient=client).Define(""a"",""1.""). snap_df = df.Snapshot(""dummy_distributed"", ""dummy_distributed.root""). print(snap_df._headnode.inputfiles). tmp_files = [f""dummy_distributed_{i}.root"" for i in range(2)]. if __name__ == ""__main__"":. client = Client(LocalCluster(n_workers=2, threads_per_worker=1, processes=True)). for i in range(2):. test(client). ```. leads to. ```. $: python repro.py. ['dummy_distributed_0.root', 'dummy_distributed_1.root']. ['dummy_distributed_1_0.root', 'dummy_distributed_0_1.root']. ```. Interestingly, this happens only with Dask. ### Expected behavior. Each task can properly process the Snapshot in isolation. ### Setup. ROOT >= 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10390
https://github.com/root-project/root/issues/10390:294,usability,input,input,294,"Wrong file names created in distributed Snapshot; ### Describe the bug. Running a `Snapshot` in distributed mode creates as many partial snapshots as distributed tasks. Each task will append its task id to the original file name, so that different tasks do not overwrite each other's data. The input file name is modified in-place in each task, but this leads to a situation where a task can receive a modified file name and modify it further, thus leading to wrong file names after the Snapshot. The following reproducer. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. import os. def test(client):. df = RDataFrame(10, daskclient=client).Define(""a"",""1.""). snap_df = df.Snapshot(""dummy_distributed"", ""dummy_distributed.root""). print(snap_df._headnode.inputfiles). tmp_files = [f""dummy_distributed_{i}.root"" for i in range(2)]. if __name__ == ""__main__"":. client = Client(LocalCluster(n_workers=2, threads_per_worker=1, processes=True)). for i in range(2):. test(client). ```. leads to. ```. $: python repro.py. ['dummy_distributed_0.root', 'dummy_distributed_1.root']. ['dummy_distributed_1_0.root', 'dummy_distributed_0_1.root']. ```. Interestingly, this happens only with Dask. ### Expected behavior. Each task can properly process the Snapshot in isolation. ### Setup. ROOT >= 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10390
https://github.com/root-project/root/issues/10390:843,usability,input,inputfiles,843,"Wrong file names created in distributed Snapshot; ### Describe the bug. Running a `Snapshot` in distributed mode creates as many partial snapshots as distributed tasks. Each task will append its task id to the original file name, so that different tasks do not overwrite each other's data. The input file name is modified in-place in each task, but this leads to a situation where a task can receive a modified file name and modify it further, thus leading to wrong file names after the Snapshot. The following reproducer. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. import os. def test(client):. df = RDataFrame(10, daskclient=client).Define(""a"",""1.""). snap_df = df.Snapshot(""dummy_distributed"", ""dummy_distributed.root""). print(snap_df._headnode.inputfiles). tmp_files = [f""dummy_distributed_{i}.root"" for i in range(2)]. if __name__ == ""__main__"":. client = Client(LocalCluster(n_workers=2, threads_per_worker=1, processes=True)). for i in range(2):. test(client). ```. leads to. ```. $: python repro.py. ['dummy_distributed_0.root', 'dummy_distributed_1.root']. ['dummy_distributed_1_0.root', 'dummy_distributed_0_1.root']. ```. Interestingly, this happens only with Dask. ### Expected behavior. Each task can properly process the Snapshot in isolation. ### Setup. ROOT >= 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10390
https://github.com/root-project/root/issues/10390:1285,usability,behavi,behavior,1285,"Wrong file names created in distributed Snapshot; ### Describe the bug. Running a `Snapshot` in distributed mode creates as many partial snapshots as distributed tasks. Each task will append its task id to the original file name, so that different tasks do not overwrite each other's data. The input file name is modified in-place in each task, but this leads to a situation where a task can receive a modified file name and modify it further, thus leading to wrong file names after the Snapshot. The following reproducer. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. import os. def test(client):. df = RDataFrame(10, daskclient=client).Define(""a"",""1.""). snap_df = df.Snapshot(""dummy_distributed"", ""dummy_distributed.root""). print(snap_df._headnode.inputfiles). tmp_files = [f""dummy_distributed_{i}.root"" for i in range(2)]. if __name__ == ""__main__"":. client = Client(LocalCluster(n_workers=2, threads_per_worker=1, processes=True)). for i in range(2):. test(client). ```. leads to. ```. $: python repro.py. ['dummy_distributed_0.root', 'dummy_distributed_1.root']. ['dummy_distributed_1_0.root', 'dummy_distributed_0_1.root']. ```. Interestingly, this happens only with Dask. ### Expected behavior. Each task can properly process the Snapshot in isolation. ### Setup. ROOT >= 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10390
https://github.com/root-project/root/pull/10391:14,availability,operat,operation,14,"Copy Snapshot operation arguments in a distributed task; The Snapshot operation file name is modified in-place to append the. range id of a certain task. This can lead to a task receiving the. input operation from a previous task with an already modified file. name. Thus, the current task would create a wrong file name with more. than one range id. Solve this by creating a deep copy of the Snapshot. operation arguments in each task, so that the filename is correctly. changed in isolation. This PR fixes #10390 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10391
https://github.com/root-project/root/pull/10391:70,availability,operat,operation,70,"Copy Snapshot operation arguments in a distributed task; The Snapshot operation file name is modified in-place to append the. range id of a certain task. This can lead to a task receiving the. input operation from a previous task with an already modified file. name. Thus, the current task would create a wrong file name with more. than one range id. Solve this by creating a deep copy of the Snapshot. operation arguments in each task, so that the filename is correctly. changed in isolation. This PR fixes #10390 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10391
https://github.com/root-project/root/pull/10391:199,availability,operat,operation,199,"Copy Snapshot operation arguments in a distributed task; The Snapshot operation file name is modified in-place to append the. range id of a certain task. This can lead to a task receiving the. input operation from a previous task with an already modified file. name. Thus, the current task would create a wrong file name with more. than one range id. Solve this by creating a deep copy of the Snapshot. operation arguments in each task, so that the filename is correctly. changed in isolation. This PR fixes #10390 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10391
https://github.com/root-project/root/pull/10391:403,availability,operat,operation,403,"Copy Snapshot operation arguments in a distributed task; The Snapshot operation file name is modified in-place to append the. range id of a certain task. This can lead to a task receiving the. input operation from a previous task with an already modified file. name. Thus, the current task would create a wrong file name with more. than one range id. Solve this by creating a deep copy of the Snapshot. operation arguments in each task, so that the filename is correctly. changed in isolation. This PR fixes #10390 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10391
https://github.com/root-project/root/pull/10391:277,energy efficiency,current,current,277,"Copy Snapshot operation arguments in a distributed task; The Snapshot operation file name is modified in-place to append the. range id of a certain task. This can lead to a task receiving the. input operation from a previous task with an already modified file. name. Thus, the current task would create a wrong file name with more. than one range id. Solve this by creating a deep copy of the Snapshot. operation arguments in each task, so that the filename is correctly. changed in isolation. This PR fixes #10390 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10391
https://github.com/root-project/root/pull/10391:39,interoperability,distribut,distributed,39,"Copy Snapshot operation arguments in a distributed task; The Snapshot operation file name is modified in-place to append the. range id of a certain task. This can lead to a task receiving the. input operation from a previous task with an already modified file. name. Thus, the current task would create a wrong file name with more. than one range id. Solve this by creating a deep copy of the Snapshot. operation arguments in each task, so that the filename is correctly. changed in isolation. This PR fixes #10390 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10391
https://github.com/root-project/root/pull/10391:193,safety,input,input,193,"Copy Snapshot operation arguments in a distributed task; The Snapshot operation file name is modified in-place to append the. range id of a certain task. This can lead to a task receiving the. input operation from a previous task with an already modified file. name. Thus, the current task would create a wrong file name with more. than one range id. Solve this by creating a deep copy of the Snapshot. operation arguments in each task, so that the filename is correctly. changed in isolation. This PR fixes #10390 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10391
https://github.com/root-project/root/pull/10391:483,safety,isol,isolation,483,"Copy Snapshot operation arguments in a distributed task; The Snapshot operation file name is modified in-place to append the. range id of a certain task. This can lead to a task receiving the. input operation from a previous task with an already modified file. name. Thus, the current task would create a wrong file name with more. than one range id. Solve this by creating a deep copy of the Snapshot. operation arguments in each task, so that the filename is correctly. changed in isolation. This PR fixes #10390 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10391
https://github.com/root-project/root/pull/10391:93,security,modif,modified,93,"Copy Snapshot operation arguments in a distributed task; The Snapshot operation file name is modified in-place to append the. range id of a certain task. This can lead to a task receiving the. input operation from a previous task with an already modified file. name. Thus, the current task would create a wrong file name with more. than one range id. Solve this by creating a deep copy of the Snapshot. operation arguments in each task, so that the filename is correctly. changed in isolation. This PR fixes #10390 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10391
https://github.com/root-project/root/pull/10391:246,security,modif,modified,246,"Copy Snapshot operation arguments in a distributed task; The Snapshot operation file name is modified in-place to append the. range id of a certain task. This can lead to a task receiving the. input operation from a previous task with an already modified file. name. Thus, the current task would create a wrong file name with more. than one range id. Solve this by creating a deep copy of the Snapshot. operation arguments in each task, so that the filename is correctly. changed in isolation. This PR fixes #10390 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10391
https://github.com/root-project/root/pull/10391:483,security,iso,isolation,483,"Copy Snapshot operation arguments in a distributed task; The Snapshot operation file name is modified in-place to append the. range id of a certain task. This can lead to a task receiving the. input operation from a previous task with an already modified file. name. Thus, the current task would create a wrong file name with more. than one range id. Solve this by creating a deep copy of the Snapshot. operation arguments in each task, so that the filename is correctly. changed in isolation. This PR fixes #10390 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10391
https://github.com/root-project/root/pull/10391:483,testability,isol,isolation,483,"Copy Snapshot operation arguments in a distributed task; The Snapshot operation file name is modified in-place to append the. range id of a certain task. This can lead to a task receiving the. input operation from a previous task with an already modified file. name. Thus, the current task would create a wrong file name with more. than one range id. Solve this by creating a deep copy of the Snapshot. operation arguments in each task, so that the filename is correctly. changed in isolation. This PR fixes #10390 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10391
https://github.com/root-project/root/pull/10391:193,usability,input,input,193,"Copy Snapshot operation arguments in a distributed task; The Snapshot operation file name is modified in-place to append the. range id of a certain task. This can lead to a task receiving the. input operation from a previous task with an already modified file. name. Thus, the current task would create a wrong file name with more. than one range id. Solve this by creating a deep copy of the Snapshot. operation arguments in each task, so that the filename is correctly. changed in isolation. This PR fixes #10390 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10391
https://github.com/root-project/root/pull/10392:0,safety,Avoid,Avoid,0,"Avoid using deprecated `std::iterator` in TSeq and TTreeReader classes; `std::iterator` is deprecated with C++17, hence alternative is applied.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10392
https://github.com/root-project/root/pull/10393:144,interoperability,prox,proxy,144,"[RF] Replace bad C-style cast in verbose RooAbsArg printing; In the verbose printing of RooAbsArgs, the following line of code was. hit, where `proxy` is a RooAbsProxy:. ```C++. ((RooSetProxy*)proxy)->printStream(os,kName,kStandard,moreIndent.Data()) ;. ```. However, RooAbsProxy is the *second* base class of RooSetProxy, so the. C-style casts doesn't work here because the memory addresses are not the. same. For correct cross-casting, `dynamic_cast` needs to be used. Closes #10385.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10393
https://github.com/root-project/root/pull/10393:193,interoperability,prox,proxy,193,"[RF] Replace bad C-style cast in verbose RooAbsArg printing; In the verbose printing of RooAbsArgs, the following line of code was. hit, where `proxy` is a RooAbsProxy:. ```C++. ((RooSetProxy*)proxy)->printStream(os,kName,kStandard,moreIndent.Data()) ;. ```. However, RooAbsProxy is the *second* base class of RooSetProxy, so the. C-style casts doesn't work here because the memory addresses are not the. same. For correct cross-casting, `dynamic_cast` needs to be used. Closes #10385.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10393
https://github.com/root-project/root/pull/10393:375,performance,memor,memory,375,"[RF] Replace bad C-style cast in verbose RooAbsArg printing; In the verbose printing of RooAbsArgs, the following line of code was. hit, where `proxy` is a RooAbsProxy:. ```C++. ((RooSetProxy*)proxy)->printStream(os,kName,kStandard,moreIndent.Data()) ;. ```. However, RooAbsProxy is the *second* base class of RooSetProxy, so the. C-style casts doesn't work here because the memory addresses are not the. same. For correct cross-casting, `dynamic_cast` needs to be used. Closes #10385.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10393
https://github.com/root-project/root/pull/10393:345,reliability,doe,doesn,345,"[RF] Replace bad C-style cast in verbose RooAbsArg printing; In the verbose printing of RooAbsArgs, the following line of code was. hit, where `proxy` is a RooAbsProxy:. ```C++. ((RooSetProxy*)proxy)->printStream(os,kName,kStandard,moreIndent.Data()) ;. ```. However, RooAbsProxy is the *second* base class of RooSetProxy, so the. C-style casts doesn't work here because the memory addresses are not the. same. For correct cross-casting, `dynamic_cast` needs to be used. Closes #10385.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10393
https://github.com/root-project/root/pull/10393:375,usability,memor,memory,375,"[RF] Replace bad C-style cast in verbose RooAbsArg printing; In the verbose printing of RooAbsArgs, the following line of code was. hit, where `proxy` is a RooAbsProxy:. ```C++. ((RooSetProxy*)proxy)->printStream(os,kName,kStandard,moreIndent.Data()) ;. ```. However, RooAbsProxy is the *second* base class of RooSetProxy, so the. C-style casts doesn't work here because the memory addresses are not the. same. For correct cross-casting, `dynamic_cast` needs to be used. Closes #10385.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10393
https://github.com/root-project/root/pull/10393:471,usability,Close,Closes,471,"[RF] Replace bad C-style cast in verbose RooAbsArg printing; In the verbose printing of RooAbsArgs, the following line of code was. hit, where `proxy` is a RooAbsProxy:. ```C++. ((RooSetProxy*)proxy)->printStream(os,kName,kStandard,moreIndent.Data()) ;. ```. However, RooAbsProxy is the *second* base class of RooSetProxy, so the. C-style casts doesn't work here because the memory addresses are not the. same. For correct cross-casting, `dynamic_cast` needs to be used. Closes #10385.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10393
https://github.com/root-project/root/pull/10394:12,interoperability,registr,registration,12,bypass UUID registration when using READ_WITHOUT_GLOBALREGISTRATION (v6.26); A backport of #10318 . cc: @bendavid,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10394
https://github.com/root-project/root/issues/10395:377,availability,state,stated,377,"[core] CleanCompiledMacros behavior; ### Explain what you would like to see improved. Following https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. there were a number of things detected wrt the behaviour of `TSystem::CleanCompiledMacros`. ### Optional: share how it could be improved. - [ ] In the doxygen documentation of `TSystem::CompileMacro`, it should be stated that the default behavior is to remove libraries after closing ROOT. Right now you only learn about this behaviour if you look closely at the `k` flag. - [ ] Mention also in the doxygen documentation that, in contrast, even if functions do the same, the default behavior of `.L script.C+` is the opposite one, to leave things after closing, without removing. In other words, that `.L` always passes the `k` option behind the scenes. - [ ] `TSystem::CleanCompiledMacros` should also remove also the `.d` and `.pcm`, not just the `.so`. - [ ] On Windows, `CleanCompiledMacros` should work, too, right now it does not. (Can not delete a ""in-use file"" and technically the code of `CleanCompiledMacros` should be updated to first unload the library.). ### To Reproduce. See reproducer at https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10395
https://github.com/root-project/root/issues/10395:1092,deployability,updat,updated,1092,"[core] CleanCompiledMacros behavior; ### Explain what you would like to see improved. Following https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. there were a number of things detected wrt the behaviour of `TSystem::CleanCompiledMacros`. ### Optional: share how it could be improved. - [ ] In the doxygen documentation of `TSystem::CompileMacro`, it should be stated that the default behavior is to remove libraries after closing ROOT. Right now you only learn about this behaviour if you look closely at the `k` flag. - [ ] Mention also in the doxygen documentation that, in contrast, even if functions do the same, the default behavior of `.L script.C+` is the opposite one, to leave things after closing, without removing. In other words, that `.L` always passes the `k` option behind the scenes. - [ ] `TSystem::CleanCompiledMacros` should also remove also the `.d` and `.pcm`, not just the `.so`. - [ ] On Windows, `CleanCompiledMacros` should work, too, right now it does not. (Can not delete a ""in-use file"" and technically the code of `CleanCompiledMacros` should be updated to first unload the library.). ### To Reproduce. See reproducer at https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10395
https://github.com/root-project/root/issues/10395:1109,deployability,unload,unload,1109,"[core] CleanCompiledMacros behavior; ### Explain what you would like to see improved. Following https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. there were a number of things detected wrt the behaviour of `TSystem::CleanCompiledMacros`. ### Optional: share how it could be improved. - [ ] In the doxygen documentation of `TSystem::CompileMacro`, it should be stated that the default behavior is to remove libraries after closing ROOT. Right now you only learn about this behaviour if you look closely at the `k` flag. - [ ] Mention also in the doxygen documentation that, in contrast, even if functions do the same, the default behavior of `.L script.C+` is the opposite one, to leave things after closing, without removing. In other words, that `.L` always passes the `k` option behind the scenes. - [ ] `TSystem::CleanCompiledMacros` should also remove also the `.d` and `.pcm`, not just the `.so`. - [ ] On Windows, `CleanCompiledMacros` should work, too, right now it does not. (Can not delete a ""in-use file"" and technically the code of `CleanCompiledMacros` should be updated to first unload the library.). ### To Reproduce. See reproducer at https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10395
https://github.com/root-project/root/issues/10395:1,energy efficiency,core,core,1,"[core] CleanCompiledMacros behavior; ### Explain what you would like to see improved. Following https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. there were a number of things detected wrt the behaviour of `TSystem::CleanCompiledMacros`. ### Optional: share how it could be improved. - [ ] In the doxygen documentation of `TSystem::CompileMacro`, it should be stated that the default behavior is to remove libraries after closing ROOT. Right now you only learn about this behaviour if you look closely at the `k` flag. - [ ] Mention also in the doxygen documentation that, in contrast, even if functions do the same, the default behavior of `.L script.C+` is the opposite one, to leave things after closing, without removing. In other words, that `.L` always passes the `k` option behind the scenes. - [ ] `TSystem::CleanCompiledMacros` should also remove also the `.d` and `.pcm`, not just the `.so`. - [ ] On Windows, `CleanCompiledMacros` should work, too, right now it does not. (Can not delete a ""in-use file"" and technically the code of `CleanCompiledMacros` should be updated to first unload the library.). ### To Reproduce. See reproducer at https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10395
https://github.com/root-project/root/issues/10395:377,integrability,state,stated,377,"[core] CleanCompiledMacros behavior; ### Explain what you would like to see improved. Following https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. there were a number of things detected wrt the behaviour of `TSystem::CleanCompiledMacros`. ### Optional: share how it could be improved. - [ ] In the doxygen documentation of `TSystem::CompileMacro`, it should be stated that the default behavior is to remove libraries after closing ROOT. Right now you only learn about this behaviour if you look closely at the `k` flag. - [ ] Mention also in the doxygen documentation that, in contrast, even if functions do the same, the default behavior of `.L script.C+` is the opposite one, to leave things after closing, without removing. In other words, that `.L` always passes the `k` option behind the scenes. - [ ] `TSystem::CleanCompiledMacros` should also remove also the `.d` and `.pcm`, not just the `.so`. - [ ] On Windows, `CleanCompiledMacros` should work, too, right now it does not. (Can not delete a ""in-use file"" and technically the code of `CleanCompiledMacros` should be updated to first unload the library.). ### To Reproduce. See reproducer at https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10395
https://github.com/root-project/root/issues/10395:269,interoperability,share,share,269,"[core] CleanCompiledMacros behavior; ### Explain what you would like to see improved. Following https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. there were a number of things detected wrt the behaviour of `TSystem::CleanCompiledMacros`. ### Optional: share how it could be improved. - [ ] In the doxygen documentation of `TSystem::CompileMacro`, it should be stated that the default behavior is to remove libraries after closing ROOT. Right now you only learn about this behaviour if you look closely at the `k` flag. - [ ] Mention also in the doxygen documentation that, in contrast, even if functions do the same, the default behavior of `.L script.C+` is the opposite one, to leave things after closing, without removing. In other words, that `.L` always passes the `k` option behind the scenes. - [ ] `TSystem::CleanCompiledMacros` should also remove also the `.d` and `.pcm`, not just the `.so`. - [ ] On Windows, `CleanCompiledMacros` should work, too, right now it does not. (Can not delete a ""in-use file"" and technically the code of `CleanCompiledMacros` should be updated to first unload the library.). ### To Reproduce. See reproducer at https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10395
https://github.com/root-project/root/issues/10395:990,reliability,doe,does,990,"[core] CleanCompiledMacros behavior; ### Explain what you would like to see improved. Following https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. there were a number of things detected wrt the behaviour of `TSystem::CleanCompiledMacros`. ### Optional: share how it could be improved. - [ ] In the doxygen documentation of `TSystem::CompileMacro`, it should be stated that the default behavior is to remove libraries after closing ROOT. Right now you only learn about this behaviour if you look closely at the `k` flag. - [ ] Mention also in the doxygen documentation that, in contrast, even if functions do the same, the default behavior of `.L script.C+` is the opposite one, to leave things after closing, without removing. In other words, that `.L` always passes the `k` option behind the scenes. - [ ] `TSystem::CleanCompiledMacros` should also remove also the `.d` and `.pcm`, not just the `.so`. - [ ] On Windows, `CleanCompiledMacros` should work, too, right now it does not. (Can not delete a ""in-use file"" and technically the code of `CleanCompiledMacros` should be updated to first unload the library.). ### To Reproduce. See reproducer at https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10395
https://github.com/root-project/root/issues/10395:193,safety,detect,detected,193,"[core] CleanCompiledMacros behavior; ### Explain what you would like to see improved. Following https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. there were a number of things detected wrt the behaviour of `TSystem::CleanCompiledMacros`. ### Optional: share how it could be improved. - [ ] In the doxygen documentation of `TSystem::CompileMacro`, it should be stated that the default behavior is to remove libraries after closing ROOT. Right now you only learn about this behaviour if you look closely at the `k` flag. - [ ] Mention also in the doxygen documentation that, in contrast, even if functions do the same, the default behavior of `.L script.C+` is the opposite one, to leave things after closing, without removing. In other words, that `.L` always passes the `k` option behind the scenes. - [ ] `TSystem::CleanCompiledMacros` should also remove also the `.d` and `.pcm`, not just the `.so`. - [ ] On Windows, `CleanCompiledMacros` should work, too, right now it does not. (Can not delete a ""in-use file"" and technically the code of `CleanCompiledMacros` should be updated to first unload the library.). ### To Reproduce. See reproducer at https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10395
https://github.com/root-project/root/issues/10395:1092,safety,updat,updated,1092,"[core] CleanCompiledMacros behavior; ### Explain what you would like to see improved. Following https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. there were a number of things detected wrt the behaviour of `TSystem::CleanCompiledMacros`. ### Optional: share how it could be improved. - [ ] In the doxygen documentation of `TSystem::CompileMacro`, it should be stated that the default behavior is to remove libraries after closing ROOT. Right now you only learn about this behaviour if you look closely at the `k` flag. - [ ] Mention also in the doxygen documentation that, in contrast, even if functions do the same, the default behavior of `.L script.C+` is the opposite one, to leave things after closing, without removing. In other words, that `.L` always passes the `k` option behind the scenes. - [ ] `TSystem::CleanCompiledMacros` should also remove also the `.d` and `.pcm`, not just the `.so`. - [ ] On Windows, `CleanCompiledMacros` should work, too, right now it does not. (Can not delete a ""in-use file"" and technically the code of `CleanCompiledMacros` should be updated to first unload the library.). ### To Reproduce. See reproducer at https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10395
https://github.com/root-project/root/issues/10395:193,security,detect,detected,193,"[core] CleanCompiledMacros behavior; ### Explain what you would like to see improved. Following https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. there were a number of things detected wrt the behaviour of `TSystem::CleanCompiledMacros`. ### Optional: share how it could be improved. - [ ] In the doxygen documentation of `TSystem::CompileMacro`, it should be stated that the default behavior is to remove libraries after closing ROOT. Right now you only learn about this behaviour if you look closely at the `k` flag. - [ ] Mention also in the doxygen documentation that, in contrast, even if functions do the same, the default behavior of `.L script.C+` is the opposite one, to leave things after closing, without removing. In other words, that `.L` always passes the `k` option behind the scenes. - [ ] `TSystem::CleanCompiledMacros` should also remove also the `.d` and `.pcm`, not just the `.so`. - [ ] On Windows, `CleanCompiledMacros` should work, too, right now it does not. (Can not delete a ""in-use file"" and technically the code of `CleanCompiledMacros` should be updated to first unload the library.). ### To Reproduce. See reproducer at https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10395
https://github.com/root-project/root/issues/10395:1092,security,updat,updated,1092,"[core] CleanCompiledMacros behavior; ### Explain what you would like to see improved. Following https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. there were a number of things detected wrt the behaviour of `TSystem::CleanCompiledMacros`. ### Optional: share how it could be improved. - [ ] In the doxygen documentation of `TSystem::CompileMacro`, it should be stated that the default behavior is to remove libraries after closing ROOT. Right now you only learn about this behaviour if you look closely at the `k` flag. - [ ] Mention also in the doxygen documentation that, in contrast, even if functions do the same, the default behavior of `.L script.C+` is the opposite one, to leave things after closing, without removing. In other words, that `.L` always passes the `k` option behind the scenes. - [ ] `TSystem::CleanCompiledMacros` should also remove also the `.d` and `.pcm`, not just the `.so`. - [ ] On Windows, `CleanCompiledMacros` should work, too, right now it does not. (Can not delete a ""in-use file"" and technically the code of `CleanCompiledMacros` should be updated to first unload the library.). ### To Reproduce. See reproducer at https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10395
https://github.com/root-project/root/issues/10395:1391,security,Team,Team,1391,"[core] CleanCompiledMacros behavior; ### Explain what you would like to see improved. Following https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. there were a number of things detected wrt the behaviour of `TSystem::CleanCompiledMacros`. ### Optional: share how it could be improved. - [ ] In the doxygen documentation of `TSystem::CompileMacro`, it should be stated that the default behavior is to remove libraries after closing ROOT. Right now you only learn about this behaviour if you look closely at the `k` flag. - [ ] Mention also in the doxygen documentation that, in contrast, even if functions do the same, the default behavior of `.L script.C+` is the opposite one, to leave things after closing, without removing. In other words, that `.L` always passes the `k` option behind the scenes. - [ ] `TSystem::CleanCompiledMacros` should also remove also the `.d` and `.pcm`, not just the `.so`. - [ ] On Windows, `CleanCompiledMacros` should work, too, right now it does not. (Can not delete a ""in-use file"" and technically the code of `CleanCompiledMacros` should be updated to first unload the library.). ### To Reproduce. See reproducer at https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10395
https://github.com/root-project/root/issues/10395:27,usability,behavi,behavior,27,"[core] CleanCompiledMacros behavior; ### Explain what you would like to see improved. Following https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. there were a number of things detected wrt the behaviour of `TSystem::CleanCompiledMacros`. ### Optional: share how it could be improved. - [ ] In the doxygen documentation of `TSystem::CompileMacro`, it should be stated that the default behavior is to remove libraries after closing ROOT. Right now you only learn about this behaviour if you look closely at the `k` flag. - [ ] Mention also in the doxygen documentation that, in contrast, even if functions do the same, the default behavior of `.L script.C+` is the opposite one, to leave things after closing, without removing. In other words, that `.L` always passes the `k` option behind the scenes. - [ ] `TSystem::CleanCompiledMacros` should also remove also the `.d` and `.pcm`, not just the `.so`. - [ ] On Windows, `CleanCompiledMacros` should work, too, right now it does not. (Can not delete a ""in-use file"" and technically the code of `CleanCompiledMacros` should be updated to first unload the library.). ### To Reproduce. See reproducer at https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10395
https://github.com/root-project/root/issues/10395:210,usability,behavi,behaviour,210,"[core] CleanCompiledMacros behavior; ### Explain what you would like to see improved. Following https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. there were a number of things detected wrt the behaviour of `TSystem::CleanCompiledMacros`. ### Optional: share how it could be improved. - [ ] In the doxygen documentation of `TSystem::CompileMacro`, it should be stated that the default behavior is to remove libraries after closing ROOT. Right now you only learn about this behaviour if you look closely at the `k` flag. - [ ] Mention also in the doxygen documentation that, in contrast, even if functions do the same, the default behavior of `.L script.C+` is the opposite one, to leave things after closing, without removing. In other words, that `.L` always passes the `k` option behind the scenes. - [ ] `TSystem::CleanCompiledMacros` should also remove also the `.d` and `.pcm`, not just the `.so`. - [ ] On Windows, `CleanCompiledMacros` should work, too, right now it does not. (Can not delete a ""in-use file"" and technically the code of `CleanCompiledMacros` should be updated to first unload the library.). ### To Reproduce. See reproducer at https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10395
https://github.com/root-project/root/issues/10395:322,usability,document,documentation,322,"[core] CleanCompiledMacros behavior; ### Explain what you would like to see improved. Following https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. there were a number of things detected wrt the behaviour of `TSystem::CleanCompiledMacros`. ### Optional: share how it could be improved. - [ ] In the doxygen documentation of `TSystem::CompileMacro`, it should be stated that the default behavior is to remove libraries after closing ROOT. Right now you only learn about this behaviour if you look closely at the `k` flag. - [ ] Mention also in the doxygen documentation that, in contrast, even if functions do the same, the default behavior of `.L script.C+` is the opposite one, to leave things after closing, without removing. In other words, that `.L` always passes the `k` option behind the scenes. - [ ] `TSystem::CleanCompiledMacros` should also remove also the `.d` and `.pcm`, not just the `.so`. - [ ] On Windows, `CleanCompiledMacros` should work, too, right now it does not. (Can not delete a ""in-use file"" and technically the code of `CleanCompiledMacros` should be updated to first unload the library.). ### To Reproduce. See reproducer at https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10395
https://github.com/root-project/root/issues/10395:401,usability,behavi,behavior,401,"[core] CleanCompiledMacros behavior; ### Explain what you would like to see improved. Following https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. there were a number of things detected wrt the behaviour of `TSystem::CleanCompiledMacros`. ### Optional: share how it could be improved. - [ ] In the doxygen documentation of `TSystem::CompileMacro`, it should be stated that the default behavior is to remove libraries after closing ROOT. Right now you only learn about this behaviour if you look closely at the `k` flag. - [ ] Mention also in the doxygen documentation that, in contrast, even if functions do the same, the default behavior of `.L script.C+` is the opposite one, to leave things after closing, without removing. In other words, that `.L` always passes the `k` option behind the scenes. - [ ] `TSystem::CleanCompiledMacros` should also remove also the `.d` and `.pcm`, not just the `.so`. - [ ] On Windows, `CleanCompiledMacros` should work, too, right now it does not. (Can not delete a ""in-use file"" and technically the code of `CleanCompiledMacros` should be updated to first unload the library.). ### To Reproduce. See reproducer at https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10395
https://github.com/root-project/root/issues/10395:472,usability,learn,learn,472,"[core] CleanCompiledMacros behavior; ### Explain what you would like to see improved. Following https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. there were a number of things detected wrt the behaviour of `TSystem::CleanCompiledMacros`. ### Optional: share how it could be improved. - [ ] In the doxygen documentation of `TSystem::CompileMacro`, it should be stated that the default behavior is to remove libraries after closing ROOT. Right now you only learn about this behaviour if you look closely at the `k` flag. - [ ] Mention also in the doxygen documentation that, in contrast, even if functions do the same, the default behavior of `.L script.C+` is the opposite one, to leave things after closing, without removing. In other words, that `.L` always passes the `k` option behind the scenes. - [ ] `TSystem::CleanCompiledMacros` should also remove also the `.d` and `.pcm`, not just the `.so`. - [ ] On Windows, `CleanCompiledMacros` should work, too, right now it does not. (Can not delete a ""in-use file"" and technically the code of `CleanCompiledMacros` should be updated to first unload the library.). ### To Reproduce. See reproducer at https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10395
https://github.com/root-project/root/issues/10395:489,usability,behavi,behaviour,489,"[core] CleanCompiledMacros behavior; ### Explain what you would like to see improved. Following https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. there were a number of things detected wrt the behaviour of `TSystem::CleanCompiledMacros`. ### Optional: share how it could be improved. - [ ] In the doxygen documentation of `TSystem::CompileMacro`, it should be stated that the default behavior is to remove libraries after closing ROOT. Right now you only learn about this behaviour if you look closely at the `k` flag. - [ ] Mention also in the doxygen documentation that, in contrast, even if functions do the same, the default behavior of `.L script.C+` is the opposite one, to leave things after closing, without removing. In other words, that `.L` always passes the `k` option behind the scenes. - [ ] `TSystem::CleanCompiledMacros` should also remove also the `.d` and `.pcm`, not just the `.so`. - [ ] On Windows, `CleanCompiledMacros` should work, too, right now it does not. (Can not delete a ""in-use file"" and technically the code of `CleanCompiledMacros` should be updated to first unload the library.). ### To Reproduce. See reproducer at https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10395
https://github.com/root-project/root/issues/10395:511,usability,close,closely,511,"[core] CleanCompiledMacros behavior; ### Explain what you would like to see improved. Following https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. there were a number of things detected wrt the behaviour of `TSystem::CleanCompiledMacros`. ### Optional: share how it could be improved. - [ ] In the doxygen documentation of `TSystem::CompileMacro`, it should be stated that the default behavior is to remove libraries after closing ROOT. Right now you only learn about this behaviour if you look closely at the `k` flag. - [ ] Mention also in the doxygen documentation that, in contrast, even if functions do the same, the default behavior of `.L script.C+` is the opposite one, to leave things after closing, without removing. In other words, that `.L` always passes the `k` option behind the scenes. - [ ] `TSystem::CleanCompiledMacros` should also remove also the `.d` and `.pcm`, not just the `.so`. - [ ] On Windows, `CleanCompiledMacros` should work, too, right now it does not. (Can not delete a ""in-use file"" and technically the code of `CleanCompiledMacros` should be updated to first unload the library.). ### To Reproduce. See reproducer at https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10395
https://github.com/root-project/root/issues/10395:570,usability,document,documentation,570,"[core] CleanCompiledMacros behavior; ### Explain what you would like to see improved. Following https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. there were a number of things detected wrt the behaviour of `TSystem::CleanCompiledMacros`. ### Optional: share how it could be improved. - [ ] In the doxygen documentation of `TSystem::CompileMacro`, it should be stated that the default behavior is to remove libraries after closing ROOT. Right now you only learn about this behaviour if you look closely at the `k` flag. - [ ] Mention also in the doxygen documentation that, in contrast, even if functions do the same, the default behavior of `.L script.C+` is the opposite one, to leave things after closing, without removing. In other words, that `.L` always passes the `k` option behind the scenes. - [ ] `TSystem::CleanCompiledMacros` should also remove also the `.d` and `.pcm`, not just the `.so`. - [ ] On Windows, `CleanCompiledMacros` should work, too, right now it does not. (Can not delete a ""in-use file"" and technically the code of `CleanCompiledMacros` should be updated to first unload the library.). ### To Reproduce. See reproducer at https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10395
https://github.com/root-project/root/issues/10395:646,usability,behavi,behavior,646,"[core] CleanCompiledMacros behavior; ### Explain what you would like to see improved. Following https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. there were a number of things detected wrt the behaviour of `TSystem::CleanCompiledMacros`. ### Optional: share how it could be improved. - [ ] In the doxygen documentation of `TSystem::CompileMacro`, it should be stated that the default behavior is to remove libraries after closing ROOT. Right now you only learn about this behaviour if you look closely at the `k` flag. - [ ] Mention also in the doxygen documentation that, in contrast, even if functions do the same, the default behavior of `.L script.C+` is the opposite one, to leave things after closing, without removing. In other words, that `.L` always passes the `k` option behind the scenes. - [ ] `TSystem::CleanCompiledMacros` should also remove also the `.d` and `.pcm`, not just the `.so`. - [ ] On Windows, `CleanCompiledMacros` should work, too, right now it does not. (Can not delete a ""in-use file"" and technically the code of `CleanCompiledMacros` should be updated to first unload the library.). ### To Reproduce. See reproducer at https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10395
https://github.com/root-project/root/issues/10395:1596,usability,help,help,1596,"[core] CleanCompiledMacros behavior; ### Explain what you would like to see improved. Following https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. there were a number of things detected wrt the behaviour of `TSystem::CleanCompiledMacros`. ### Optional: share how it could be improved. - [ ] In the doxygen documentation of `TSystem::CompileMacro`, it should be stated that the default behavior is to remove libraries after closing ROOT. Right now you only learn about this behaviour if you look closely at the `k` flag. - [ ] Mention also in the doxygen documentation that, in contrast, even if functions do the same, the default behavior of `.L script.C+` is the opposite one, to leave things after closing, without removing. In other words, that `.L` always passes the `k` option behind the scenes. - [ ] `TSystem::CleanCompiledMacros` should also remove also the `.d` and `.pcm`, not just the `.so`. - [ ] On Windows, `CleanCompiledMacros` should work, too, right now it does not. (Can not delete a ""in-use file"" and technically the code of `CleanCompiledMacros` should be updated to first unload the library.). ### To Reproduce. See reproducer at https://mattermost.web.cern.ch/root/pl/k6amdch7bfdm5d8isiguo4i5re. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10395
https://github.com/root-project/root/pull/10396:1,energy efficiency,core,core,1,"[core] Improve implementation of `Rbswap_{16,32,64}()`; This pull request improves the definition of the `Rbswap_{16,32,64}()` macros in `Byteswap.h` (see changes below). ## Changes or fixes:. - Define `R__bswap_64(x)` even if the compiler has no intrinsic for it. In that case, provide a fallback (unoptimized) implementation. - In MSVC, implement `R__bswap_{16,32,64}(x)` in terms of the compiler intrinsic `_byteswap_xxx()`. ## Checklist:. - [X] tested changes locally. Follow-up PR: RNTuple read/write support in big-endian machines.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10396
https://github.com/root-project/root/pull/10396:449,safety,test,tested,449,"[core] Improve implementation of `Rbswap_{16,32,64}()`; This pull request improves the definition of the `Rbswap_{16,32,64}()` macros in `Byteswap.h` (see changes below). ## Changes or fixes:. - Define `R__bswap_64(x)` even if the compiler has no intrinsic for it. In that case, provide a fallback (unoptimized) implementation. - In MSVC, implement `R__bswap_{16,32,64}(x)` in terms of the compiler intrinsic `_byteswap_xxx()`. ## Checklist:. - [X] tested changes locally. Follow-up PR: RNTuple read/write support in big-endian machines.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10396
https://github.com/root-project/root/pull/10396:449,testability,test,tested,449,"[core] Improve implementation of `Rbswap_{16,32,64}()`; This pull request improves the definition of the `Rbswap_{16,32,64}()` macros in `Byteswap.h` (see changes below). ## Changes or fixes:. - Define `R__bswap_64(x)` even if the compiler has no intrinsic for it. In that case, provide a fallback (unoptimized) implementation. - In MSVC, implement `R__bswap_{16,32,64}(x)` in terms of the compiler intrinsic `_byteswap_xxx()`. ## Checklist:. - [X] tested changes locally. Follow-up PR: RNTuple read/write support in big-endian machines.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10396
https://github.com/root-project/root/pull/10396:506,usability,support,support,506,"[core] Improve implementation of `Rbswap_{16,32,64}()`; This pull request improves the definition of the `Rbswap_{16,32,64}()` macros in `Byteswap.h` (see changes below). ## Changes or fixes:. - Define `R__bswap_64(x)` even if the compiler has no intrinsic for it. In that case, provide a fallback (unoptimized) implementation. - In MSVC, implement `R__bswap_{16,32,64}(x)` in terms of the compiler intrinsic `_byteswap_xxx()`. ## Checklist:. - [X] tested changes locally. Follow-up PR: RNTuple read/write support in big-endian machines.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10396
https://github.com/root-project/root/pull/10397:394,deployability,compos,composite,394,"[RF] Correctly implement data reduction also for RooCompositeDataStore; In the current implementation of `RooDataSet::reduceEng`, the dataset. itself was queried to get the weight variable used in the reduced. dataset. This didn't work with the `RooCompositeDataStore`, because a. dataset with this data store doesn't have a weight variable, as these. are encapsulated in the components of the composite store. Hence,. reducing a weighted dataset with a RooCompositeDataStore yields an. unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic. for the RooCompositeDataStore: the components are now reduced. individually, instead of naively creating a RooCompositeDataStore from a. RooVectorDataStore/RooTreeDataStore. To avoid further code branches in. RooDataSet, a new virtual function `RooAbsDataStore::reduce` is. introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10397
https://github.com/root-project/root/pull/10397:588,deployability,log,logic,588,"[RF] Correctly implement data reduction also for RooCompositeDataStore; In the current implementation of `RooDataSet::reduceEng`, the dataset. itself was queried to get the weight variable used in the reduced. dataset. This didn't work with the `RooCompositeDataStore`, because a. dataset with this data store doesn't have a weight variable, as these. are encapsulated in the components of the composite store. Hence,. reducing a weighted dataset with a RooCompositeDataStore yields an. unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic. for the RooCompositeDataStore: the components are now reduced. individually, instead of naively creating a RooCompositeDataStore from a. RooVectorDataStore/RooTreeDataStore. To avoid further code branches in. RooDataSet, a new virtual function `RooAbsDataStore::reduce` is. introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10397
https://github.com/root-project/root/pull/10397:903,deployability,updat,update,903,"[RF] Correctly implement data reduction also for RooCompositeDataStore; In the current implementation of `RooDataSet::reduceEng`, the dataset. itself was queried to get the weight variable used in the reduced. dataset. This didn't work with the `RooCompositeDataStore`, because a. dataset with this data store doesn't have a weight variable, as these. are encapsulated in the components of the composite store. Hence,. reducing a weighted dataset with a RooCompositeDataStore yields an. unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic. for the RooCompositeDataStore: the components are now reduced. individually, instead of naively creating a RooCompositeDataStore from a. RooVectorDataStore/RooTreeDataStore. To avoid further code branches in. RooDataSet, a new virtual function `RooAbsDataStore::reduce` is. introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10397
https://github.com/root-project/root/pull/10397:30,energy efficiency,reduc,reduction,30,"[RF] Correctly implement data reduction also for RooCompositeDataStore; In the current implementation of `RooDataSet::reduceEng`, the dataset. itself was queried to get the weight variable used in the reduced. dataset. This didn't work with the `RooCompositeDataStore`, because a. dataset with this data store doesn't have a weight variable, as these. are encapsulated in the components of the composite store. Hence,. reducing a weighted dataset with a RooCompositeDataStore yields an. unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic. for the RooCompositeDataStore: the components are now reduced. individually, instead of naively creating a RooCompositeDataStore from a. RooVectorDataStore/RooTreeDataStore. To avoid further code branches in. RooDataSet, a new virtual function `RooAbsDataStore::reduce` is. introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10397
https://github.com/root-project/root/pull/10397:79,energy efficiency,current,current,79,"[RF] Correctly implement data reduction also for RooCompositeDataStore; In the current implementation of `RooDataSet::reduceEng`, the dataset. itself was queried to get the weight variable used in the reduced. dataset. This didn't work with the `RooCompositeDataStore`, because a. dataset with this data store doesn't have a weight variable, as these. are encapsulated in the components of the composite store. Hence,. reducing a weighted dataset with a RooCompositeDataStore yields an. unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic. for the RooCompositeDataStore: the components are now reduced. individually, instead of naively creating a RooCompositeDataStore from a. RooVectorDataStore/RooTreeDataStore. To avoid further code branches in. RooDataSet, a new virtual function `RooAbsDataStore::reduce` is. introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10397
https://github.com/root-project/root/pull/10397:118,energy efficiency,reduc,reduceEng,118,"[RF] Correctly implement data reduction also for RooCompositeDataStore; In the current implementation of `RooDataSet::reduceEng`, the dataset. itself was queried to get the weight variable used in the reduced. dataset. This didn't work with the `RooCompositeDataStore`, because a. dataset with this data store doesn't have a weight variable, as these. are encapsulated in the components of the composite store. Hence,. reducing a weighted dataset with a RooCompositeDataStore yields an. unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic. for the RooCompositeDataStore: the components are now reduced. individually, instead of naively creating a RooCompositeDataStore from a. RooVectorDataStore/RooTreeDataStore. To avoid further code branches in. RooDataSet, a new virtual function `RooAbsDataStore::reduce` is. introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10397
https://github.com/root-project/root/pull/10397:201,energy efficiency,reduc,reduced,201,"[RF] Correctly implement data reduction also for RooCompositeDataStore; In the current implementation of `RooDataSet::reduceEng`, the dataset. itself was queried to get the weight variable used in the reduced. dataset. This didn't work with the `RooCompositeDataStore`, because a. dataset with this data store doesn't have a weight variable, as these. are encapsulated in the components of the composite store. Hence,. reducing a weighted dataset with a RooCompositeDataStore yields an. unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic. for the RooCompositeDataStore: the components are now reduced. individually, instead of naively creating a RooCompositeDataStore from a. RooVectorDataStore/RooTreeDataStore. To avoid further code branches in. RooDataSet, a new virtual function `RooAbsDataStore::reduce` is. introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10397
https://github.com/root-project/root/pull/10397:419,energy efficiency,reduc,reducing,419,"[RF] Correctly implement data reduction also for RooCompositeDataStore; In the current implementation of `RooDataSet::reduceEng`, the dataset. itself was queried to get the weight variable used in the reduced. dataset. This didn't work with the `RooCompositeDataStore`, because a. dataset with this data store doesn't have a weight variable, as these. are encapsulated in the components of the composite store. Hence,. reducing a weighted dataset with a RooCompositeDataStore yields an. unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic. for the RooCompositeDataStore: the components are now reduced. individually, instead of naively creating a RooCompositeDataStore from a. RooVectorDataStore/RooTreeDataStore. To avoid further code branches in. RooDataSet, a new virtual function `RooAbsDataStore::reduce` is. introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10397
https://github.com/root-project/root/pull/10397:578,energy efficiency,reduc,reduction,578,"[RF] Correctly implement data reduction also for RooCompositeDataStore; In the current implementation of `RooDataSet::reduceEng`, the dataset. itself was queried to get the weight variable used in the reduced. dataset. This didn't work with the `RooCompositeDataStore`, because a. dataset with this data store doesn't have a weight variable, as these. are encapsulated in the components of the composite store. Hence,. reducing a weighted dataset with a RooCompositeDataStore yields an. unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic. for the RooCompositeDataStore: the components are now reduced. individually, instead of naively creating a RooCompositeDataStore from a. RooVectorDataStore/RooTreeDataStore. To avoid further code branches in. RooDataSet, a new virtual function `RooAbsDataStore::reduce` is. introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10397
https://github.com/root-project/root/pull/10397:649,energy efficiency,reduc,reduced,649,"[RF] Correctly implement data reduction also for RooCompositeDataStore; In the current implementation of `RooDataSet::reduceEng`, the dataset. itself was queried to get the weight variable used in the reduced. dataset. This didn't work with the `RooCompositeDataStore`, because a. dataset with this data store doesn't have a weight variable, as these. are encapsulated in the components of the composite store. Hence,. reducing a weighted dataset with a RooCompositeDataStore yields an. unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic. for the RooCompositeDataStore: the components are now reduced. individually, instead of naively creating a RooCompositeDataStore from a. RooVectorDataStore/RooTreeDataStore. To avoid further code branches in. RooDataSet, a new virtual function `RooAbsDataStore::reduce` is. introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10397
https://github.com/root-project/root/pull/10397:857,energy efficiency,reduc,reduce,857,"[RF] Correctly implement data reduction also for RooCompositeDataStore; In the current implementation of `RooDataSet::reduceEng`, the dataset. itself was queried to get the weight variable used in the reduced. dataset. This didn't work with the `RooCompositeDataStore`, because a. dataset with this data store doesn't have a weight variable, as these. are encapsulated in the components of the composite store. Hence,. reducing a weighted dataset with a RooCompositeDataStore yields an. unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic. for the RooCompositeDataStore: the components are now reduced. individually, instead of naively creating a RooCompositeDataStore from a. RooVectorDataStore/RooTreeDataStore. To avoid further code branches in. RooDataSet, a new virtual function `RooAbsDataStore::reduce` is. introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10397
https://github.com/root-project/root/pull/10397:919,energy efficiency,reduc,reduction,919,"[RF] Correctly implement data reduction also for RooCompositeDataStore; In the current implementation of `RooDataSet::reduceEng`, the dataset. itself was queried to get the weight variable used in the reduced. dataset. This didn't work with the `RooCompositeDataStore`, because a. dataset with this data store doesn't have a weight variable, as these. are encapsulated in the components of the composite store. Hence,. reducing a weighted dataset with a RooCompositeDataStore yields an. unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic. for the RooCompositeDataStore: the components are now reduced. individually, instead of naively creating a RooCompositeDataStore from a. RooVectorDataStore/RooTreeDataStore. To avoid further code branches in. RooDataSet, a new virtual function `RooAbsDataStore::reduce` is. introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10397
https://github.com/root-project/root/pull/10397:356,integrability,encapsulat,encapsulated,356,"[RF] Correctly implement data reduction also for RooCompositeDataStore; In the current implementation of `RooDataSet::reduceEng`, the dataset. itself was queried to get the weight variable used in the reduced. dataset. This didn't work with the `RooCompositeDataStore`, because a. dataset with this data store doesn't have a weight variable, as these. are encapsulated in the components of the composite store. Hence,. reducing a weighted dataset with a RooCompositeDataStore yields an. unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic. for the RooCompositeDataStore: the components are now reduced. individually, instead of naively creating a RooCompositeDataStore from a. RooVectorDataStore/RooTreeDataStore. To avoid further code branches in. RooDataSet, a new virtual function `RooAbsDataStore::reduce` is. introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10397
https://github.com/root-project/root/pull/10397:376,integrability,compon,components,376,"[RF] Correctly implement data reduction also for RooCompositeDataStore; In the current implementation of `RooDataSet::reduceEng`, the dataset. itself was queried to get the weight variable used in the reduced. dataset. This didn't work with the `RooCompositeDataStore`, because a. dataset with this data store doesn't have a weight variable, as these. are encapsulated in the components of the composite store. Hence,. reducing a weighted dataset with a RooCompositeDataStore yields an. unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic. for the RooCompositeDataStore: the components are now reduced. individually, instead of naively creating a RooCompositeDataStore from a. RooVectorDataStore/RooTreeDataStore. To avoid further code branches in. RooDataSet, a new virtual function `RooAbsDataStore::reduce` is. introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10397
https://github.com/root-project/root/pull/10397:630,integrability,compon,components,630,"[RF] Correctly implement data reduction also for RooCompositeDataStore; In the current implementation of `RooDataSet::reduceEng`, the dataset. itself was queried to get the weight variable used in the reduced. dataset. This didn't work with the `RooCompositeDataStore`, because a. dataset with this data store doesn't have a weight variable, as these. are encapsulated in the components of the composite store. Hence,. reducing a weighted dataset with a RooCompositeDataStore yields an. unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic. for the RooCompositeDataStore: the components are now reduced. individually, instead of naively creating a RooCompositeDataStore from a. RooVectorDataStore/RooTreeDataStore. To avoid further code branches in. RooDataSet, a new virtual function `RooAbsDataStore::reduce` is. introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10397
https://github.com/root-project/root/pull/10397:1003,integrability,messag,messages,1003,"[RF] Correctly implement data reduction also for RooCompositeDataStore; In the current implementation of `RooDataSet::reduceEng`, the dataset. itself was queried to get the weight variable used in the reduced. dataset. This didn't work with the `RooCompositeDataStore`, because a. dataset with this data store doesn't have a weight variable, as these. are encapsulated in the components of the composite store. Hence,. reducing a weighted dataset with a RooCompositeDataStore yields an. unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic. for the RooCompositeDataStore: the components are now reduced. individually, instead of naively creating a RooCompositeDataStore from a. RooVectorDataStore/RooTreeDataStore. To avoid further code branches in. RooDataSet, a new virtual function `RooAbsDataStore::reduce` is. introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10397
https://github.com/root-project/root/pull/10397:376,interoperability,compon,components,376,"[RF] Correctly implement data reduction also for RooCompositeDataStore; In the current implementation of `RooDataSet::reduceEng`, the dataset. itself was queried to get the weight variable used in the reduced. dataset. This didn't work with the `RooCompositeDataStore`, because a. dataset with this data store doesn't have a weight variable, as these. are encapsulated in the components of the composite store. Hence,. reducing a weighted dataset with a RooCompositeDataStore yields an. unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic. for the RooCompositeDataStore: the components are now reduced. individually, instead of naively creating a RooCompositeDataStore from a. RooVectorDataStore/RooTreeDataStore. To avoid further code branches in. RooDataSet, a new virtual function `RooAbsDataStore::reduce` is. introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10397
https://github.com/root-project/root/pull/10397:630,interoperability,compon,components,630,"[RF] Correctly implement data reduction also for RooCompositeDataStore; In the current implementation of `RooDataSet::reduceEng`, the dataset. itself was queried to get the weight variable used in the reduced. dataset. This didn't work with the `RooCompositeDataStore`, because a. dataset with this data store doesn't have a weight variable, as these. are encapsulated in the components of the composite store. Hence,. reducing a weighted dataset with a RooCompositeDataStore yields an. unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic. for the RooCompositeDataStore: the components are now reduced. individually, instead of naively creating a RooCompositeDataStore from a. RooVectorDataStore/RooTreeDataStore. To avoid further code branches in. RooDataSet, a new virtual function `RooAbsDataStore::reduce` is. introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10397
https://github.com/root-project/root/pull/10397:1003,interoperability,messag,messages,1003,"[RF] Correctly implement data reduction also for RooCompositeDataStore; In the current implementation of `RooDataSet::reduceEng`, the dataset. itself was queried to get the weight variable used in the reduced. dataset. This didn't work with the `RooCompositeDataStore`, because a. dataset with this data store doesn't have a weight variable, as these. are encapsulated in the components of the composite store. Hence,. reducing a weighted dataset with a RooCompositeDataStore yields an. unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic. for the RooCompositeDataStore: the components are now reduced. individually, instead of naively creating a RooCompositeDataStore from a. RooVectorDataStore/RooTreeDataStore. To avoid further code branches in. RooDataSet, a new virtual function `RooAbsDataStore::reduce` is. introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10397
https://github.com/root-project/root/pull/10397:180,modifiability,variab,variable,180,"[RF] Correctly implement data reduction also for RooCompositeDataStore; In the current implementation of `RooDataSet::reduceEng`, the dataset. itself was queried to get the weight variable used in the reduced. dataset. This didn't work with the `RooCompositeDataStore`, because a. dataset with this data store doesn't have a weight variable, as these. are encapsulated in the components of the composite store. Hence,. reducing a weighted dataset with a RooCompositeDataStore yields an. unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic. for the RooCompositeDataStore: the components are now reduced. individually, instead of naively creating a RooCompositeDataStore from a. RooVectorDataStore/RooTreeDataStore. To avoid further code branches in. RooDataSet, a new virtual function `RooAbsDataStore::reduce` is. introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10397
https://github.com/root-project/root/pull/10397:332,modifiability,variab,variable,332,"[RF] Correctly implement data reduction also for RooCompositeDataStore; In the current implementation of `RooDataSet::reduceEng`, the dataset. itself was queried to get the weight variable used in the reduced. dataset. This didn't work with the `RooCompositeDataStore`, because a. dataset with this data store doesn't have a weight variable, as these. are encapsulated in the components of the composite store. Hence,. reducing a weighted dataset with a RooCompositeDataStore yields an. unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic. for the RooCompositeDataStore: the components are now reduced. individually, instead of naively creating a RooCompositeDataStore from a. RooVectorDataStore/RooTreeDataStore. To avoid further code branches in. RooDataSet, a new virtual function `RooAbsDataStore::reduce` is. introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10397
https://github.com/root-project/root/pull/10397:356,modifiability,encapsul,encapsulated,356,"[RF] Correctly implement data reduction also for RooCompositeDataStore; In the current implementation of `RooDataSet::reduceEng`, the dataset. itself was queried to get the weight variable used in the reduced. dataset. This didn't work with the `RooCompositeDataStore`, because a. dataset with this data store doesn't have a weight variable, as these. are encapsulated in the components of the composite store. Hence,. reducing a weighted dataset with a RooCompositeDataStore yields an. unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic. for the RooCompositeDataStore: the components are now reduced. individually, instead of naively creating a RooCompositeDataStore from a. RooVectorDataStore/RooTreeDataStore. To avoid further code branches in. RooDataSet, a new virtual function `RooAbsDataStore::reduce` is. introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10397
https://github.com/root-project/root/pull/10397:376,modifiability,compon,components,376,"[RF] Correctly implement data reduction also for RooCompositeDataStore; In the current implementation of `RooDataSet::reduceEng`, the dataset. itself was queried to get the weight variable used in the reduced. dataset. This didn't work with the `RooCompositeDataStore`, because a. dataset with this data store doesn't have a weight variable, as these. are encapsulated in the components of the composite store. Hence,. reducing a weighted dataset with a RooCompositeDataStore yields an. unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic. for the RooCompositeDataStore: the components are now reduced. individually, instead of naively creating a RooCompositeDataStore from a. RooVectorDataStore/RooTreeDataStore. To avoid further code branches in. RooDataSet, a new virtual function `RooAbsDataStore::reduce` is. introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10397
https://github.com/root-project/root/pull/10397:394,modifiability,compos,composite,394,"[RF] Correctly implement data reduction also for RooCompositeDataStore; In the current implementation of `RooDataSet::reduceEng`, the dataset. itself was queried to get the weight variable used in the reduced. dataset. This didn't work with the `RooCompositeDataStore`, because a. dataset with this data store doesn't have a weight variable, as these. are encapsulated in the components of the composite store. Hence,. reducing a weighted dataset with a RooCompositeDataStore yields an. unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic. for the RooCompositeDataStore: the components are now reduced. individually, instead of naively creating a RooCompositeDataStore from a. RooVectorDataStore/RooTreeDataStore. To avoid further code branches in. RooDataSet, a new virtual function `RooAbsDataStore::reduce` is. introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10397
https://github.com/root-project/root/pull/10397:630,modifiability,compon,components,630,"[RF] Correctly implement data reduction also for RooCompositeDataStore; In the current implementation of `RooDataSet::reduceEng`, the dataset. itself was queried to get the weight variable used in the reduced. dataset. This didn't work with the `RooCompositeDataStore`, because a. dataset with this data store doesn't have a weight variable, as these. are encapsulated in the components of the composite store. Hence,. reducing a weighted dataset with a RooCompositeDataStore yields an. unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic. for the RooCompositeDataStore: the components are now reduced. individually, instead of naively creating a RooCompositeDataStore from a. RooVectorDataStore/RooTreeDataStore. To avoid further code branches in. RooDataSet, a new virtual function `RooAbsDataStore::reduce` is. introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10397
https://github.com/root-project/root/pull/10397:310,reliability,doe,doesn,310,"[RF] Correctly implement data reduction also for RooCompositeDataStore; In the current implementation of `RooDataSet::reduceEng`, the dataset. itself was queried to get the weight variable used in the reduced. dataset. This didn't work with the `RooCompositeDataStore`, because a. dataset with this data store doesn't have a weight variable, as these. are encapsulated in the components of the composite store. Hence,. reducing a weighted dataset with a RooCompositeDataStore yields an. unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic. for the RooCompositeDataStore: the components are now reduced. individually, instead of naively creating a RooCompositeDataStore from a. RooVectorDataStore/RooTreeDataStore. To avoid further code branches in. RooDataSet, a new virtual function `RooAbsDataStore::reduce` is. introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10397
https://github.com/root-project/root/pull/10397:588,safety,log,logic,588,"[RF] Correctly implement data reduction also for RooCompositeDataStore; In the current implementation of `RooDataSet::reduceEng`, the dataset. itself was queried to get the weight variable used in the reduced. dataset. This didn't work with the `RooCompositeDataStore`, because a. dataset with this data store doesn't have a weight variable, as these. are encapsulated in the components of the composite store. Hence,. reducing a weighted dataset with a RooCompositeDataStore yields an. unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic. for the RooCompositeDataStore: the components are now reduced. individually, instead of naively creating a RooCompositeDataStore from a. RooVectorDataStore/RooTreeDataStore. To avoid further code branches in. RooDataSet, a new virtual function `RooAbsDataStore::reduce` is. introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10397
https://github.com/root-project/root/pull/10397:772,safety,avoid,avoid,772,"[RF] Correctly implement data reduction also for RooCompositeDataStore; In the current implementation of `RooDataSet::reduceEng`, the dataset. itself was queried to get the weight variable used in the reduced. dataset. This didn't work with the `RooCompositeDataStore`, because a. dataset with this data store doesn't have a weight variable, as these. are encapsulated in the components of the composite store. Hence,. reducing a weighted dataset with a RooCompositeDataStore yields an. unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic. for the RooCompositeDataStore: the components are now reduced. individually, instead of naively creating a RooCompositeDataStore from a. RooVectorDataStore/RooTreeDataStore. To avoid further code branches in. RooDataSet, a new virtual function `RooAbsDataStore::reduce` is. introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10397
https://github.com/root-project/root/pull/10397:903,safety,updat,update,903,"[RF] Correctly implement data reduction also for RooCompositeDataStore; In the current implementation of `RooDataSet::reduceEng`, the dataset. itself was queried to get the weight variable used in the reduced. dataset. This didn't work with the `RooCompositeDataStore`, because a. dataset with this data store doesn't have a weight variable, as these. are encapsulated in the components of the composite store. Hence,. reducing a weighted dataset with a RooCompositeDataStore yields an. unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic. for the RooCompositeDataStore: the components are now reduced. individually, instead of naively creating a RooCompositeDataStore from a. RooVectorDataStore/RooTreeDataStore. To avoid further code branches in. RooDataSet, a new virtual function `RooAbsDataStore::reduce` is. introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10397
https://github.com/root-project/root/pull/10397:588,security,log,logic,588,"[RF] Correctly implement data reduction also for RooCompositeDataStore; In the current implementation of `RooDataSet::reduceEng`, the dataset. itself was queried to get the weight variable used in the reduced. dataset. This didn't work with the `RooCompositeDataStore`, because a. dataset with this data store doesn't have a weight variable, as these. are encapsulated in the components of the composite store. Hence,. reducing a weighted dataset with a RooCompositeDataStore yields an. unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic. for the RooCompositeDataStore: the components are now reduced. individually, instead of naively creating a RooCompositeDataStore from a. RooVectorDataStore/RooTreeDataStore. To avoid further code branches in. RooDataSet, a new virtual function `RooAbsDataStore::reduce` is. introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10397
https://github.com/root-project/root/pull/10397:903,security,updat,update,903,"[RF] Correctly implement data reduction also for RooCompositeDataStore; In the current implementation of `RooDataSet::reduceEng`, the dataset. itself was queried to get the weight variable used in the reduced. dataset. This didn't work with the `RooCompositeDataStore`, because a. dataset with this data store doesn't have a weight variable, as these. are encapsulated in the components of the composite store. Hence,. reducing a weighted dataset with a RooCompositeDataStore yields an. unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic. for the RooCompositeDataStore: the components are now reduced. individually, instead of naively creating a RooCompositeDataStore from a. RooVectorDataStore/RooTreeDataStore. To avoid further code branches in. RooDataSet, a new virtual function `RooAbsDataStore::reduce` is. introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10397
https://github.com/root-project/root/pull/10397:588,testability,log,logic,588,"[RF] Correctly implement data reduction also for RooCompositeDataStore; In the current implementation of `RooDataSet::reduceEng`, the dataset. itself was queried to get the weight variable used in the reduced. dataset. This didn't work with the `RooCompositeDataStore`, because a. dataset with this data store doesn't have a weight variable, as these. are encapsulated in the components of the composite store. Hence,. reducing a weighted dataset with a RooCompositeDataStore yields an. unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic. for the RooCompositeDataStore: the components are now reduced. individually, instead of naively creating a RooCompositeDataStore from a. RooVectorDataStore/RooTreeDataStore. To avoid further code branches in. RooDataSet, a new virtual function `RooAbsDataStore::reduce` is. introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10397
https://github.com/root-project/root/pull/10397:1036,usability,close,closes,1036,"[RF] Correctly implement data reduction also for RooCompositeDataStore; In the current implementation of `RooDataSet::reduceEng`, the dataset. itself was queried to get the weight variable used in the reduced. dataset. This didn't work with the `RooCompositeDataStore`, because a. dataset with this data store doesn't have a weight variable, as these. are encapsulated in the components of the composite store. Hence,. reducing a weighted dataset with a RooCompositeDataStore yields an. unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic. for the RooCompositeDataStore: the components are now reduced. individually, instead of naively creating a RooCompositeDataStore from a. RooVectorDataStore/RooTreeDataStore. To avoid further code branches in. RooDataSet, a new virtual function `RooAbsDataStore::reduce` is. introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10397
https://github.com/root-project/root/pull/10399:18,usability,support,support,18,"[TTreeReader] Add support for Short_t, UShort_t array sizes ; This fixes [ROOT-8827](https://sft.its.cern.ch/jira/browse/ROOT-8827). @pcanal I'm not sure whether `Long_t` and `Long64_t` should also be in the picture, let me know.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10399
https://github.com/root-project/root/issues/10400:372,availability,operat,operator,372,"Memory leak in TH3::DoProject2D; In my analysis program I faced a memory leak which was caused by `TH3::DoProject2D` according to `valgrind --leak-check=full` and independently by simple git dissection. Valgrind report:. ```. ==24570== 114,000 (5,160 direct, 108,840 indirect) bytes in 5 blocks are definitely lost in loss record 16,382 of 16,451. ==24570== at 0x483FF3F: operator new(unsigned long) (vg_replace_malloc.c:422). ==24570== by 0x4D9CEF9: TStorage::ObjectAlloc(unsigned long) (in /opt/ROOT-6.24.06/lib/libCore.so.6.24.06). ==24570== by 0x577B7DF: TH3::DoProject2D(char const*, char const*, TAxis const*, TAxis const*, bool, bool, bool, bool) const (in /opt/ROOT-6.24.06/lib/libHist.so.6.24.06). ==24570== by 0x5776AA7: TH3::Project3D(char const*) const (in /opt/ROOT-6.24.06/lib/libHist.so.6.24.06). ```. So I quickly looked at the source code and found TH2D objects are created with the new operator but newer deleted. https://github.com/root-project/root/blob/1f9dc812978722660f4a5f8310e0ca5fdf442ebe/hist/hist/src/TH3.cxx#L2114. Usually this if-branch in this function is avoided because TH2 is already created (if I understand the code above correctly), but I unfortunately chose the same name for all of my TH3 hists. [Here](https://github.com/root-project/root/files/8488019/report.txt) is my code which causes the memory leak.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10400
https://github.com/root-project/root/issues/10400:904,availability,operat,operator,904,"Memory leak in TH3::DoProject2D; In my analysis program I faced a memory leak which was caused by `TH3::DoProject2D` according to `valgrind --leak-check=full` and independently by simple git dissection. Valgrind report:. ```. ==24570== 114,000 (5,160 direct, 108,840 indirect) bytes in 5 blocks are definitely lost in loss record 16,382 of 16,451. ==24570== at 0x483FF3F: operator new(unsigned long) (vg_replace_malloc.c:422). ==24570== by 0x4D9CEF9: TStorage::ObjectAlloc(unsigned long) (in /opt/ROOT-6.24.06/lib/libCore.so.6.24.06). ==24570== by 0x577B7DF: TH3::DoProject2D(char const*, char const*, TAxis const*, TAxis const*, bool, bool, bool, bool) const (in /opt/ROOT-6.24.06/lib/libHist.so.6.24.06). ==24570== by 0x5776AA7: TH3::Project3D(char const*) const (in /opt/ROOT-6.24.06/lib/libHist.so.6.24.06). ```. So I quickly looked at the source code and found TH2D objects are created with the new operator but newer deleted. https://github.com/root-project/root/blob/1f9dc812978722660f4a5f8310e0ca5fdf442ebe/hist/hist/src/TH3.cxx#L2114. Usually this if-branch in this function is avoided because TH2 is already created (if I understand the code above correctly), but I unfortunately chose the same name for all of my TH3 hists. [Here](https://github.com/root-project/root/files/8488019/report.txt) is my code which causes the memory leak.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10400
https://github.com/root-project/root/issues/10400:0,performance,Memor,Memory,0,"Memory leak in TH3::DoProject2D; In my analysis program I faced a memory leak which was caused by `TH3::DoProject2D` according to `valgrind --leak-check=full` and independently by simple git dissection. Valgrind report:. ```. ==24570== 114,000 (5,160 direct, 108,840 indirect) bytes in 5 blocks are definitely lost in loss record 16,382 of 16,451. ==24570== at 0x483FF3F: operator new(unsigned long) (vg_replace_malloc.c:422). ==24570== by 0x4D9CEF9: TStorage::ObjectAlloc(unsigned long) (in /opt/ROOT-6.24.06/lib/libCore.so.6.24.06). ==24570== by 0x577B7DF: TH3::DoProject2D(char const*, char const*, TAxis const*, TAxis const*, bool, bool, bool, bool) const (in /opt/ROOT-6.24.06/lib/libHist.so.6.24.06). ==24570== by 0x5776AA7: TH3::Project3D(char const*) const (in /opt/ROOT-6.24.06/lib/libHist.so.6.24.06). ```. So I quickly looked at the source code and found TH2D objects are created with the new operator but newer deleted. https://github.com/root-project/root/blob/1f9dc812978722660f4a5f8310e0ca5fdf442ebe/hist/hist/src/TH3.cxx#L2114. Usually this if-branch in this function is avoided because TH2 is already created (if I understand the code above correctly), but I unfortunately chose the same name for all of my TH3 hists. [Here](https://github.com/root-project/root/files/8488019/report.txt) is my code which causes the memory leak.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10400
https://github.com/root-project/root/issues/10400:66,performance,memor,memory,66,"Memory leak in TH3::DoProject2D; In my analysis program I faced a memory leak which was caused by `TH3::DoProject2D` according to `valgrind --leak-check=full` and independently by simple git dissection. Valgrind report:. ```. ==24570== 114,000 (5,160 direct, 108,840 indirect) bytes in 5 blocks are definitely lost in loss record 16,382 of 16,451. ==24570== at 0x483FF3F: operator new(unsigned long) (vg_replace_malloc.c:422). ==24570== by 0x4D9CEF9: TStorage::ObjectAlloc(unsigned long) (in /opt/ROOT-6.24.06/lib/libCore.so.6.24.06). ==24570== by 0x577B7DF: TH3::DoProject2D(char const*, char const*, TAxis const*, TAxis const*, bool, bool, bool, bool) const (in /opt/ROOT-6.24.06/lib/libHist.so.6.24.06). ==24570== by 0x5776AA7: TH3::Project3D(char const*) const (in /opt/ROOT-6.24.06/lib/libHist.so.6.24.06). ```. So I quickly looked at the source code and found TH2D objects are created with the new operator but newer deleted. https://github.com/root-project/root/blob/1f9dc812978722660f4a5f8310e0ca5fdf442ebe/hist/hist/src/TH3.cxx#L2114. Usually this if-branch in this function is avoided because TH2 is already created (if I understand the code above correctly), but I unfortunately chose the same name for all of my TH3 hists. [Here](https://github.com/root-project/root/files/8488019/report.txt) is my code which causes the memory leak.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10400
https://github.com/root-project/root/issues/10400:1333,performance,memor,memory,1333,"Memory leak in TH3::DoProject2D; In my analysis program I faced a memory leak which was caused by `TH3::DoProject2D` according to `valgrind --leak-check=full` and independently by simple git dissection. Valgrind report:. ```. ==24570== 114,000 (5,160 direct, 108,840 indirect) bytes in 5 blocks are definitely lost in loss record 16,382 of 16,451. ==24570== at 0x483FF3F: operator new(unsigned long) (vg_replace_malloc.c:422). ==24570== by 0x4D9CEF9: TStorage::ObjectAlloc(unsigned long) (in /opt/ROOT-6.24.06/lib/libCore.so.6.24.06). ==24570== by 0x577B7DF: TH3::DoProject2D(char const*, char const*, TAxis const*, TAxis const*, bool, bool, bool, bool) const (in /opt/ROOT-6.24.06/lib/libHist.so.6.24.06). ==24570== by 0x5776AA7: TH3::Project3D(char const*) const (in /opt/ROOT-6.24.06/lib/libHist.so.6.24.06). ```. So I quickly looked at the source code and found TH2D objects are created with the new operator but newer deleted. https://github.com/root-project/root/blob/1f9dc812978722660f4a5f8310e0ca5fdf442ebe/hist/hist/src/TH3.cxx#L2114. Usually this if-branch in this function is avoided because TH2 is already created (if I understand the code above correctly), but I unfortunately chose the same name for all of my TH3 hists. [Here](https://github.com/root-project/root/files/8488019/report.txt) is my code which causes the memory leak.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10400
https://github.com/root-project/root/issues/10400:1087,safety,avoid,avoided,1087,"Memory leak in TH3::DoProject2D; In my analysis program I faced a memory leak which was caused by `TH3::DoProject2D` according to `valgrind --leak-check=full` and independently by simple git dissection. Valgrind report:. ```. ==24570== 114,000 (5,160 direct, 108,840 indirect) bytes in 5 blocks are definitely lost in loss record 16,382 of 16,451. ==24570== at 0x483FF3F: operator new(unsigned long) (vg_replace_malloc.c:422). ==24570== by 0x4D9CEF9: TStorage::ObjectAlloc(unsigned long) (in /opt/ROOT-6.24.06/lib/libCore.so.6.24.06). ==24570== by 0x577B7DF: TH3::DoProject2D(char const*, char const*, TAxis const*, TAxis const*, bool, bool, bool, bool) const (in /opt/ROOT-6.24.06/lib/libHist.so.6.24.06). ==24570== by 0x5776AA7: TH3::Project3D(char const*) const (in /opt/ROOT-6.24.06/lib/libHist.so.6.24.06). ```. So I quickly looked at the source code and found TH2D objects are created with the new operator but newer deleted. https://github.com/root-project/root/blob/1f9dc812978722660f4a5f8310e0ca5fdf442ebe/hist/hist/src/TH3.cxx#L2114. Usually this if-branch in this function is avoided because TH2 is already created (if I understand the code above correctly), but I unfortunately chose the same name for all of my TH3 hists. [Here](https://github.com/root-project/root/files/8488019/report.txt) is my code which causes the memory leak.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10400
https://github.com/root-project/root/issues/10400:318,security,loss,loss,318,"Memory leak in TH3::DoProject2D; In my analysis program I faced a memory leak which was caused by `TH3::DoProject2D` according to `valgrind --leak-check=full` and independently by simple git dissection. Valgrind report:. ```. ==24570== 114,000 (5,160 direct, 108,840 indirect) bytes in 5 blocks are definitely lost in loss record 16,382 of 16,451. ==24570== at 0x483FF3F: operator new(unsigned long) (vg_replace_malloc.c:422). ==24570== by 0x4D9CEF9: TStorage::ObjectAlloc(unsigned long) (in /opt/ROOT-6.24.06/lib/libCore.so.6.24.06). ==24570== by 0x577B7DF: TH3::DoProject2D(char const*, char const*, TAxis const*, TAxis const*, bool, bool, bool, bool) const (in /opt/ROOT-6.24.06/lib/libHist.so.6.24.06). ==24570== by 0x5776AA7: TH3::Project3D(char const*) const (in /opt/ROOT-6.24.06/lib/libHist.so.6.24.06). ```. So I quickly looked at the source code and found TH2D objects are created with the new operator but newer deleted. https://github.com/root-project/root/blob/1f9dc812978722660f4a5f8310e0ca5fdf442ebe/hist/hist/src/TH3.cxx#L2114. Usually this if-branch in this function is avoided because TH2 is already created (if I understand the code above correctly), but I unfortunately chose the same name for all of my TH3 hists. [Here](https://github.com/root-project/root/files/8488019/report.txt) is my code which causes the memory leak.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10400
https://github.com/root-project/root/issues/10400:180,testability,simpl,simple,180,"Memory leak in TH3::DoProject2D; In my analysis program I faced a memory leak which was caused by `TH3::DoProject2D` according to `valgrind --leak-check=full` and independently by simple git dissection. Valgrind report:. ```. ==24570== 114,000 (5,160 direct, 108,840 indirect) bytes in 5 blocks are definitely lost in loss record 16,382 of 16,451. ==24570== at 0x483FF3F: operator new(unsigned long) (vg_replace_malloc.c:422). ==24570== by 0x4D9CEF9: TStorage::ObjectAlloc(unsigned long) (in /opt/ROOT-6.24.06/lib/libCore.so.6.24.06). ==24570== by 0x577B7DF: TH3::DoProject2D(char const*, char const*, TAxis const*, TAxis const*, bool, bool, bool, bool) const (in /opt/ROOT-6.24.06/lib/libHist.so.6.24.06). ==24570== by 0x5776AA7: TH3::Project3D(char const*) const (in /opt/ROOT-6.24.06/lib/libHist.so.6.24.06). ```. So I quickly looked at the source code and found TH2D objects are created with the new operator but newer deleted. https://github.com/root-project/root/blob/1f9dc812978722660f4a5f8310e0ca5fdf442ebe/hist/hist/src/TH3.cxx#L2114. Usually this if-branch in this function is avoided because TH2 is already created (if I understand the code above correctly), but I unfortunately chose the same name for all of my TH3 hists. [Here](https://github.com/root-project/root/files/8488019/report.txt) is my code which causes the memory leak.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10400
https://github.com/root-project/root/issues/10400:1132,testability,understand,understand,1132,"Memory leak in TH3::DoProject2D; In my analysis program I faced a memory leak which was caused by `TH3::DoProject2D` according to `valgrind --leak-check=full` and independently by simple git dissection. Valgrind report:. ```. ==24570== 114,000 (5,160 direct, 108,840 indirect) bytes in 5 blocks are definitely lost in loss record 16,382 of 16,451. ==24570== at 0x483FF3F: operator new(unsigned long) (vg_replace_malloc.c:422). ==24570== by 0x4D9CEF9: TStorage::ObjectAlloc(unsigned long) (in /opt/ROOT-6.24.06/lib/libCore.so.6.24.06). ==24570== by 0x577B7DF: TH3::DoProject2D(char const*, char const*, TAxis const*, TAxis const*, bool, bool, bool, bool) const (in /opt/ROOT-6.24.06/lib/libHist.so.6.24.06). ==24570== by 0x5776AA7: TH3::Project3D(char const*) const (in /opt/ROOT-6.24.06/lib/libHist.so.6.24.06). ```. So I quickly looked at the source code and found TH2D objects are created with the new operator but newer deleted. https://github.com/root-project/root/blob/1f9dc812978722660f4a5f8310e0ca5fdf442ebe/hist/hist/src/TH3.cxx#L2114. Usually this if-branch in this function is avoided because TH2 is already created (if I understand the code above correctly), but I unfortunately chose the same name for all of my TH3 hists. [Here](https://github.com/root-project/root/files/8488019/report.txt) is my code which causes the memory leak.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10400
https://github.com/root-project/root/issues/10400:0,usability,Memor,Memory,0,"Memory leak in TH3::DoProject2D; In my analysis program I faced a memory leak which was caused by `TH3::DoProject2D` according to `valgrind --leak-check=full` and independently by simple git dissection. Valgrind report:. ```. ==24570== 114,000 (5,160 direct, 108,840 indirect) bytes in 5 blocks are definitely lost in loss record 16,382 of 16,451. ==24570== at 0x483FF3F: operator new(unsigned long) (vg_replace_malloc.c:422). ==24570== by 0x4D9CEF9: TStorage::ObjectAlloc(unsigned long) (in /opt/ROOT-6.24.06/lib/libCore.so.6.24.06). ==24570== by 0x577B7DF: TH3::DoProject2D(char const*, char const*, TAxis const*, TAxis const*, bool, bool, bool, bool) const (in /opt/ROOT-6.24.06/lib/libHist.so.6.24.06). ==24570== by 0x5776AA7: TH3::Project3D(char const*) const (in /opt/ROOT-6.24.06/lib/libHist.so.6.24.06). ```. So I quickly looked at the source code and found TH2D objects are created with the new operator but newer deleted. https://github.com/root-project/root/blob/1f9dc812978722660f4a5f8310e0ca5fdf442ebe/hist/hist/src/TH3.cxx#L2114. Usually this if-branch in this function is avoided because TH2 is already created (if I understand the code above correctly), but I unfortunately chose the same name for all of my TH3 hists. [Here](https://github.com/root-project/root/files/8488019/report.txt) is my code which causes the memory leak.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10400
https://github.com/root-project/root/issues/10400:66,usability,memor,memory,66,"Memory leak in TH3::DoProject2D; In my analysis program I faced a memory leak which was caused by `TH3::DoProject2D` according to `valgrind --leak-check=full` and independently by simple git dissection. Valgrind report:. ```. ==24570== 114,000 (5,160 direct, 108,840 indirect) bytes in 5 blocks are definitely lost in loss record 16,382 of 16,451. ==24570== at 0x483FF3F: operator new(unsigned long) (vg_replace_malloc.c:422). ==24570== by 0x4D9CEF9: TStorage::ObjectAlloc(unsigned long) (in /opt/ROOT-6.24.06/lib/libCore.so.6.24.06). ==24570== by 0x577B7DF: TH3::DoProject2D(char const*, char const*, TAxis const*, TAxis const*, bool, bool, bool, bool) const (in /opt/ROOT-6.24.06/lib/libHist.so.6.24.06). ==24570== by 0x5776AA7: TH3::Project3D(char const*) const (in /opt/ROOT-6.24.06/lib/libHist.so.6.24.06). ```. So I quickly looked at the source code and found TH2D objects are created with the new operator but newer deleted. https://github.com/root-project/root/blob/1f9dc812978722660f4a5f8310e0ca5fdf442ebe/hist/hist/src/TH3.cxx#L2114. Usually this if-branch in this function is avoided because TH2 is already created (if I understand the code above correctly), but I unfortunately chose the same name for all of my TH3 hists. [Here](https://github.com/root-project/root/files/8488019/report.txt) is my code which causes the memory leak.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10400
https://github.com/root-project/root/issues/10400:180,usability,simpl,simple,180,"Memory leak in TH3::DoProject2D; In my analysis program I faced a memory leak which was caused by `TH3::DoProject2D` according to `valgrind --leak-check=full` and independently by simple git dissection. Valgrind report:. ```. ==24570== 114,000 (5,160 direct, 108,840 indirect) bytes in 5 blocks are definitely lost in loss record 16,382 of 16,451. ==24570== at 0x483FF3F: operator new(unsigned long) (vg_replace_malloc.c:422). ==24570== by 0x4D9CEF9: TStorage::ObjectAlloc(unsigned long) (in /opt/ROOT-6.24.06/lib/libCore.so.6.24.06). ==24570== by 0x577B7DF: TH3::DoProject2D(char const*, char const*, TAxis const*, TAxis const*, bool, bool, bool, bool) const (in /opt/ROOT-6.24.06/lib/libHist.so.6.24.06). ==24570== by 0x5776AA7: TH3::Project3D(char const*) const (in /opt/ROOT-6.24.06/lib/libHist.so.6.24.06). ```. So I quickly looked at the source code and found TH2D objects are created with the new operator but newer deleted. https://github.com/root-project/root/blob/1f9dc812978722660f4a5f8310e0ca5fdf442ebe/hist/hist/src/TH3.cxx#L2114. Usually this if-branch in this function is avoided because TH2 is already created (if I understand the code above correctly), but I unfortunately chose the same name for all of my TH3 hists. [Here](https://github.com/root-project/root/files/8488019/report.txt) is my code which causes the memory leak.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10400
https://github.com/root-project/root/issues/10400:1333,usability,memor,memory,1333,"Memory leak in TH3::DoProject2D; In my analysis program I faced a memory leak which was caused by `TH3::DoProject2D` according to `valgrind --leak-check=full` and independently by simple git dissection. Valgrind report:. ```. ==24570== 114,000 (5,160 direct, 108,840 indirect) bytes in 5 blocks are definitely lost in loss record 16,382 of 16,451. ==24570== at 0x483FF3F: operator new(unsigned long) (vg_replace_malloc.c:422). ==24570== by 0x4D9CEF9: TStorage::ObjectAlloc(unsigned long) (in /opt/ROOT-6.24.06/lib/libCore.so.6.24.06). ==24570== by 0x577B7DF: TH3::DoProject2D(char const*, char const*, TAxis const*, TAxis const*, bool, bool, bool, bool) const (in /opt/ROOT-6.24.06/lib/libHist.so.6.24.06). ==24570== by 0x5776AA7: TH3::Project3D(char const*) const (in /opt/ROOT-6.24.06/lib/libHist.so.6.24.06). ```. So I quickly looked at the source code and found TH2D objects are created with the new operator but newer deleted. https://github.com/root-project/root/blob/1f9dc812978722660f4a5f8310e0ca5fdf442ebe/hist/hist/src/TH3.cxx#L2114. Usually this if-branch in this function is avoided because TH2 is already created (if I understand the code above correctly), but I unfortunately chose the same name for all of my TH3 hists. [Here](https://github.com/root-project/root/files/8488019/report.txt) is my code which causes the memory leak.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10400
https://github.com/root-project/root/issues/10401:560,deployability,observ,observable,560,"[RF] Problems with binning in `createHistogram`; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Under some circumstances, `createHistogram` creates histograms with a binning that does not reflect the ""correct"" binning of the observable. In general, it should be true that especially for workspaces generated with HistFactory, the histograms created with `createHistogram` from the various category Pdfs and datasets should have the same binning as the input histograms given to HistFactory. However, that is not always the case. I haven't figured out yet what the exact conditions are under which this fails and cannot at the moment provide a reproducer, but I'd like to suggest adding a few unit tests that create a workspace with HistFactory with different binnings, and then use `createHistogram` to create histograms from the input. The resulting histograms should always match the input in content (save for negative or 0 bin contents) and bin count and boundaries. I will follow up with a reproducer if I manage to create one. ### Additional context. Possibly related: https://github.com/root-project/root/pull/1916.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10401
https://github.com/root-project/root/issues/10401:937,deployability,fail,fails,937,"[RF] Problems with binning in `createHistogram`; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Under some circumstances, `createHistogram` creates histograms with a binning that does not reflect the ""correct"" binning of the observable. In general, it should be true that especially for workspaces generated with HistFactory, the histograms created with `createHistogram` from the various category Pdfs and datasets should have the same binning as the input histograms given to HistFactory. However, that is not always the case. I haven't figured out yet what the exact conditions are under which this fails and cannot at the moment provide a reproducer, but I'd like to suggest adding a few unit tests that create a workspace with HistFactory with different binnings, and then use `createHistogram` to create histograms from the input. The resulting histograms should always match the input in content (save for negative or 0 bin contents) and bin count and boundaries. I will follow up with a reproducer if I manage to create one. ### Additional context. Possibly related: https://github.com/root-project/root/pull/1916.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10401
https://github.com/root-project/root/issues/10401:1346,deployability,manag,manage,1346,"[RF] Problems with binning in `createHistogram`; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Under some circumstances, `createHistogram` creates histograms with a binning that does not reflect the ""correct"" binning of the observable. In general, it should be true that especially for workspaces generated with HistFactory, the histograms created with `createHistogram` from the various category Pdfs and datasets should have the same binning as the input histograms given to HistFactory. However, that is not always the case. I haven't figured out yet what the exact conditions are under which this fails and cannot at the moment provide a reproducer, but I'd like to suggest adding a few unit tests that create a workspace with HistFactory with different binnings, and then use `createHistogram` to create histograms from the input. The resulting histograms should always match the input in content (save for negative or 0 bin contents) and bin count and boundaries. I will follow up with a reproducer if I manage to create one. ### Additional context. Possibly related: https://github.com/root-project/root/pull/1916.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10401
https://github.com/root-project/root/issues/10401:1346,energy efficiency,manag,manage,1346,"[RF] Problems with binning in `createHistogram`; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Under some circumstances, `createHistogram` creates histograms with a binning that does not reflect the ""correct"" binning of the observable. In general, it should be true that especially for workspaces generated with HistFactory, the histograms created with `createHistogram` from the various category Pdfs and datasets should have the same binning as the input histograms given to HistFactory. However, that is not always the case. I haven't figured out yet what the exact conditions are under which this fails and cannot at the moment provide a reproducer, but I'd like to suggest adding a few unit tests that create a workspace with HistFactory with different binnings, and then use `createHistogram` to create histograms from the input. The resulting histograms should always match the input in content (save for negative or 0 bin contents) and bin count and boundaries. I will follow up with a reproducer if I manage to create one. ### Additional context. Possibly related: https://github.com/root-project/root/pull/1916.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10401
https://github.com/root-project/root/issues/10401:1230,performance,content,content,1230,"[RF] Problems with binning in `createHistogram`; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Under some circumstances, `createHistogram` creates histograms with a binning that does not reflect the ""correct"" binning of the observable. In general, it should be true that especially for workspaces generated with HistFactory, the histograms created with `createHistogram` from the various category Pdfs and datasets should have the same binning as the input histograms given to HistFactory. However, that is not always the case. I haven't figured out yet what the exact conditions are under which this fails and cannot at the moment provide a reproducer, but I'd like to suggest adding a few unit tests that create a workspace with HistFactory with different binnings, and then use `createHistogram` to create histograms from the input. The resulting histograms should always match the input in content (save for negative or 0 bin contents) and bin count and boundaries. I will follow up with a reproducer if I manage to create one. ### Additional context. Possibly related: https://github.com/root-project/root/pull/1916.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10401
https://github.com/root-project/root/issues/10401:1266,performance,content,contents,1266,"[RF] Problems with binning in `createHistogram`; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Under some circumstances, `createHistogram` creates histograms with a binning that does not reflect the ""correct"" binning of the observable. In general, it should be true that especially for workspaces generated with HistFactory, the histograms created with `createHistogram` from the various category Pdfs and datasets should have the same binning as the input histograms given to HistFactory. However, that is not always the case. I haven't figured out yet what the exact conditions are under which this fails and cannot at the moment provide a reproducer, but I'd like to suggest adding a few unit tests that create a workspace with HistFactory with different binnings, and then use `createHistogram` to create histograms from the input. The resulting histograms should always match the input in content (save for negative or 0 bin contents) and bin count and boundaries. I will follow up with a reproducer if I manage to create one. ### Additional context. Possibly related: https://github.com/root-project/root/pull/1916.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10401
https://github.com/root-project/root/issues/10401:514,reliability,doe,does,514,"[RF] Problems with binning in `createHistogram`; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Under some circumstances, `createHistogram` creates histograms with a binning that does not reflect the ""correct"" binning of the observable. In general, it should be true that especially for workspaces generated with HistFactory, the histograms created with `createHistogram` from the various category Pdfs and datasets should have the same binning as the input histograms given to HistFactory. However, that is not always the case. I haven't figured out yet what the exact conditions are under which this fails and cannot at the moment provide a reproducer, but I'd like to suggest adding a few unit tests that create a workspace with HistFactory with different binnings, and then use `createHistogram` to create histograms from the input. The resulting histograms should always match the input in content (save for negative or 0 bin contents) and bin count and boundaries. I will follow up with a reproducer if I manage to create one. ### Additional context. Possibly related: https://github.com/root-project/root/pull/1916.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10401
https://github.com/root-project/root/issues/10401:937,reliability,fail,fails,937,"[RF] Problems with binning in `createHistogram`; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Under some circumstances, `createHistogram` creates histograms with a binning that does not reflect the ""correct"" binning of the observable. In general, it should be true that especially for workspaces generated with HistFactory, the histograms created with `createHistogram` from the various category Pdfs and datasets should have the same binning as the input histograms given to HistFactory. However, that is not always the case. I haven't figured out yet what the exact conditions are under which this fails and cannot at the moment provide a reproducer, but I'd like to suggest adding a few unit tests that create a workspace with HistFactory with different binnings, and then use `createHistogram` to create histograms from the input. The resulting histograms should always match the input in content (save for negative or 0 bin contents) and bin count and boundaries. I will follow up with a reproducer if I manage to create one. ### Additional context. Possibly related: https://github.com/root-project/root/pull/1916.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10401
https://github.com/root-project/root/issues/10401:787,safety,input,input,787,"[RF] Problems with binning in `createHistogram`; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Under some circumstances, `createHistogram` creates histograms with a binning that does not reflect the ""correct"" binning of the observable. In general, it should be true that especially for workspaces generated with HistFactory, the histograms created with `createHistogram` from the various category Pdfs and datasets should have the same binning as the input histograms given to HistFactory. However, that is not always the case. I haven't figured out yet what the exact conditions are under which this fails and cannot at the moment provide a reproducer, but I'd like to suggest adding a few unit tests that create a workspace with HistFactory with different binnings, and then use `createHistogram` to create histograms from the input. The resulting histograms should always match the input in content (save for negative or 0 bin contents) and bin count and boundaries. I will follow up with a reproducer if I manage to create one. ### Additional context. Possibly related: https://github.com/root-project/root/pull/1916.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10401
https://github.com/root-project/root/issues/10401:1032,safety,test,tests,1032,"[RF] Problems with binning in `createHistogram`; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Under some circumstances, `createHistogram` creates histograms with a binning that does not reflect the ""correct"" binning of the observable. In general, it should be true that especially for workspaces generated with HistFactory, the histograms created with `createHistogram` from the various category Pdfs and datasets should have the same binning as the input histograms given to HistFactory. However, that is not always the case. I haven't figured out yet what the exact conditions are under which this fails and cannot at the moment provide a reproducer, but I'd like to suggest adding a few unit tests that create a workspace with HistFactory with different binnings, and then use `createHistogram` to create histograms from the input. The resulting histograms should always match the input in content (save for negative or 0 bin contents) and bin count and boundaries. I will follow up with a reproducer if I manage to create one. ### Additional context. Possibly related: https://github.com/root-project/root/pull/1916.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10401
https://github.com/root-project/root/issues/10401:1165,safety,input,input,1165,"[RF] Problems with binning in `createHistogram`; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Under some circumstances, `createHistogram` creates histograms with a binning that does not reflect the ""correct"" binning of the observable. In general, it should be true that especially for workspaces generated with HistFactory, the histograms created with `createHistogram` from the various category Pdfs and datasets should have the same binning as the input histograms given to HistFactory. However, that is not always the case. I haven't figured out yet what the exact conditions are under which this fails and cannot at the moment provide a reproducer, but I'd like to suggest adding a few unit tests that create a workspace with HistFactory with different binnings, and then use `createHistogram` to create histograms from the input. The resulting histograms should always match the input in content (save for negative or 0 bin contents) and bin count and boundaries. I will follow up with a reproducer if I manage to create one. ### Additional context. Possibly related: https://github.com/root-project/root/pull/1916.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10401
https://github.com/root-project/root/issues/10401:1221,safety,input,input,1221,"[RF] Problems with binning in `createHistogram`; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Under some circumstances, `createHistogram` creates histograms with a binning that does not reflect the ""correct"" binning of the observable. In general, it should be true that especially for workspaces generated with HistFactory, the histograms created with `createHistogram` from the various category Pdfs and datasets should have the same binning as the input histograms given to HistFactory. However, that is not always the case. I haven't figured out yet what the exact conditions are under which this fails and cannot at the moment provide a reproducer, but I'd like to suggest adding a few unit tests that create a workspace with HistFactory with different binnings, and then use `createHistogram` to create histograms from the input. The resulting histograms should always match the input in content (save for negative or 0 bin contents) and bin count and boundaries. I will follow up with a reproducer if I manage to create one. ### Additional context. Possibly related: https://github.com/root-project/root/pull/1916.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10401
https://github.com/root-project/root/issues/10401:1346,safety,manag,manage,1346,"[RF] Problems with binning in `createHistogram`; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Under some circumstances, `createHistogram` creates histograms with a binning that does not reflect the ""correct"" binning of the observable. In general, it should be true that especially for workspaces generated with HistFactory, the histograms created with `createHistogram` from the various category Pdfs and datasets should have the same binning as the input histograms given to HistFactory. However, that is not always the case. I haven't figured out yet what the exact conditions are under which this fails and cannot at the moment provide a reproducer, but I'd like to suggest adding a few unit tests that create a workspace with HistFactory with different binnings, and then use `createHistogram` to create histograms from the input. The resulting histograms should always match the input in content (save for negative or 0 bin contents) and bin count and boundaries. I will follow up with a reproducer if I manage to create one. ### Additional context. Possibly related: https://github.com/root-project/root/pull/1916.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10401
https://github.com/root-project/root/issues/10401:560,testability,observ,observable,560,"[RF] Problems with binning in `createHistogram`; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Under some circumstances, `createHistogram` creates histograms with a binning that does not reflect the ""correct"" binning of the observable. In general, it should be true that especially for workspaces generated with HistFactory, the histograms created with `createHistogram` from the various category Pdfs and datasets should have the same binning as the input histograms given to HistFactory. However, that is not always the case. I haven't figured out yet what the exact conditions are under which this fails and cannot at the moment provide a reproducer, but I'd like to suggest adding a few unit tests that create a workspace with HistFactory with different binnings, and then use `createHistogram` to create histograms from the input. The resulting histograms should always match the input in content (save for negative or 0 bin contents) and bin count and boundaries. I will follow up with a reproducer if I manage to create one. ### Additional context. Possibly related: https://github.com/root-project/root/pull/1916.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10401
https://github.com/root-project/root/issues/10401:1027,testability,unit,unit,1027,"[RF] Problems with binning in `createHistogram`; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Under some circumstances, `createHistogram` creates histograms with a binning that does not reflect the ""correct"" binning of the observable. In general, it should be true that especially for workspaces generated with HistFactory, the histograms created with `createHistogram` from the various category Pdfs and datasets should have the same binning as the input histograms given to HistFactory. However, that is not always the case. I haven't figured out yet what the exact conditions are under which this fails and cannot at the moment provide a reproducer, but I'd like to suggest adding a few unit tests that create a workspace with HistFactory with different binnings, and then use `createHistogram` to create histograms from the input. The resulting histograms should always match the input in content (save for negative or 0 bin contents) and bin count and boundaries. I will follow up with a reproducer if I manage to create one. ### Additional context. Possibly related: https://github.com/root-project/root/pull/1916.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10401
https://github.com/root-project/root/issues/10401:1032,testability,test,tests,1032,"[RF] Problems with binning in `createHistogram`; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Under some circumstances, `createHistogram` creates histograms with a binning that does not reflect the ""correct"" binning of the observable. In general, it should be true that especially for workspaces generated with HistFactory, the histograms created with `createHistogram` from the various category Pdfs and datasets should have the same binning as the input histograms given to HistFactory. However, that is not always the case. I haven't figured out yet what the exact conditions are under which this fails and cannot at the moment provide a reproducer, but I'd like to suggest adding a few unit tests that create a workspace with HistFactory with different binnings, and then use `createHistogram` to create histograms from the input. The resulting histograms should always match the input in content (save for negative or 0 bin contents) and bin count and boundaries. I will follow up with a reproducer if I manage to create one. ### Additional context. Possibly related: https://github.com/root-project/root/pull/1916.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10401
https://github.com/root-project/root/issues/10401:1383,testability,context,context,1383,"[RF] Problems with binning in `createHistogram`; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Under some circumstances, `createHistogram` creates histograms with a binning that does not reflect the ""correct"" binning of the observable. In general, it should be true that especially for workspaces generated with HistFactory, the histograms created with `createHistogram` from the various category Pdfs and datasets should have the same binning as the input histograms given to HistFactory. However, that is not always the case. I haven't figured out yet what the exact conditions are under which this fails and cannot at the moment provide a reproducer, but I'd like to suggest adding a few unit tests that create a workspace with HistFactory with different binnings, and then use `createHistogram` to create histograms from the input. The resulting histograms should always match the input in content (save for negative or 0 bin contents) and bin count and boundaries. I will follow up with a reproducer if I manage to create one. ### Additional context. Possibly related: https://github.com/root-project/root/pull/1916.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10401
https://github.com/root-project/root/issues/10401:787,usability,input,input,787,"[RF] Problems with binning in `createHistogram`; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Under some circumstances, `createHistogram` creates histograms with a binning that does not reflect the ""correct"" binning of the observable. In general, it should be true that especially for workspaces generated with HistFactory, the histograms created with `createHistogram` from the various category Pdfs and datasets should have the same binning as the input histograms given to HistFactory. However, that is not always the case. I haven't figured out yet what the exact conditions are under which this fails and cannot at the moment provide a reproducer, but I'd like to suggest adding a few unit tests that create a workspace with HistFactory with different binnings, and then use `createHistogram` to create histograms from the input. The resulting histograms should always match the input in content (save for negative or 0 bin contents) and bin count and boundaries. I will follow up with a reproducer if I manage to create one. ### Additional context. Possibly related: https://github.com/root-project/root/pull/1916.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10401
https://github.com/root-project/root/issues/10401:1165,usability,input,input,1165,"[RF] Problems with binning in `createHistogram`; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Under some circumstances, `createHistogram` creates histograms with a binning that does not reflect the ""correct"" binning of the observable. In general, it should be true that especially for workspaces generated with HistFactory, the histograms created with `createHistogram` from the various category Pdfs and datasets should have the same binning as the input histograms given to HistFactory. However, that is not always the case. I haven't figured out yet what the exact conditions are under which this fails and cannot at the moment provide a reproducer, but I'd like to suggest adding a few unit tests that create a workspace with HistFactory with different binnings, and then use `createHistogram` to create histograms from the input. The resulting histograms should always match the input in content (save for negative or 0 bin contents) and bin count and boundaries. I will follow up with a reproducer if I manage to create one. ### Additional context. Possibly related: https://github.com/root-project/root/pull/1916.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10401
https://github.com/root-project/root/issues/10401:1221,usability,input,input,1221,"[RF] Problems with binning in `createHistogram`; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Under some circumstances, `createHistogram` creates histograms with a binning that does not reflect the ""correct"" binning of the observable. In general, it should be true that especially for workspaces generated with HistFactory, the histograms created with `createHistogram` from the various category Pdfs and datasets should have the same binning as the input histograms given to HistFactory. However, that is not always the case. I haven't figured out yet what the exact conditions are under which this fails and cannot at the moment provide a reproducer, but I'd like to suggest adding a few unit tests that create a workspace with HistFactory with different binnings, and then use `createHistogram` to create histograms from the input. The resulting histograms should always match the input in content (save for negative or 0 bin contents) and bin count and boundaries. I will follow up with a reproducer if I manage to create one. ### Additional context. Possibly related: https://github.com/root-project/root/pull/1916.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10401
https://github.com/root-project/root/pull/10402:282,energy efficiency,CPU,CPU,282,"[ntuple] Support for big-endian architectures; This pull request completes support for big-endian architectures in RNTuple. Specifically, prior to this PR, metadata was serialized to a machine-independent representation, but data pages were still using the native endianness of the CPU. ## Changes or fixes:. - RColumnElement.hxx: Add `CopyElementsBswap<N>()` that byteswaps and copies a number of `N`-size elements from a source buffer to a destination buffer. `N` may be either 16, 32, or 64. - Provide a base class (`RColumnElementLE`) for columns whose on-storage representation is little-endian according to the v1 specification. The provided `Pack()` and `Unpack()` functions take care of swapping bytes if the target CPU is big-endian. - Use little-endian on-storage representation for columns of type `std::{,u}int{16,32,64}_t`, `ClusterSize_t`, `float`, and `double`. For single/double precision floating point numbers, IEEE-754 specifies the encoding but does not mandate a specific byte ordering; however, most architectures use the same endianness as for representing integers. - Amend implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>::{Pack,Unpack}()`. - Provide packing / unpacking for `RColumnElement<RColumnSwitch, EColumnType::kSwitch>`, compliant to v1 binary format specification. ## Checklist:. - [X] tested changes locally. - [X] add unit tests. - [x] `RColumnElement<RColumnSwitch>` should implement `Pack()` and `Unpack()` for machine-independent representation. - [x] revisit former implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>`. Follow-up PR of: https://github.com/root-project/root/pull/10396. This PR fixes #10383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10402
https://github.com/root-project/root/pull/10402:724,energy efficiency,CPU,CPU,724,"[ntuple] Support for big-endian architectures; This pull request completes support for big-endian architectures in RNTuple. Specifically, prior to this PR, metadata was serialized to a machine-independent representation, but data pages were still using the native endianness of the CPU. ## Changes or fixes:. - RColumnElement.hxx: Add `CopyElementsBswap<N>()` that byteswaps and copies a number of `N`-size elements from a source buffer to a destination buffer. `N` may be either 16, 32, or 64. - Provide a base class (`RColumnElementLE`) for columns whose on-storage representation is little-endian according to the v1 specification. The provided `Pack()` and `Unpack()` functions take care of swapping bytes if the target CPU is big-endian. - Use little-endian on-storage representation for columns of type `std::{,u}int{16,32,64}_t`, `ClusterSize_t`, `float`, and `double`. For single/double precision floating point numbers, IEEE-754 specifies the encoding but does not mandate a specific byte ordering; however, most architectures use the same endianness as for representing integers. - Amend implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>::{Pack,Unpack}()`. - Provide packing / unpacking for `RColumnElement<RColumnSwitch, EColumnType::kSwitch>`, compliant to v1 binary format specification. ## Checklist:. - [X] tested changes locally. - [X] add unit tests. - [x] `RColumnElement<RColumnSwitch>` should implement `Pack()` and `Unpack()` for machine-independent representation. - [x] revisit former implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>`. Follow-up PR of: https://github.com/root-project/root/pull/10396. This PR fixes #10383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10402
https://github.com/root-project/root/pull/10402:430,integrability,buffer,buffer,430,"[ntuple] Support for big-endian architectures; This pull request completes support for big-endian architectures in RNTuple. Specifically, prior to this PR, metadata was serialized to a machine-independent representation, but data pages were still using the native endianness of the CPU. ## Changes or fixes:. - RColumnElement.hxx: Add `CopyElementsBswap<N>()` that byteswaps and copies a number of `N`-size elements from a source buffer to a destination buffer. `N` may be either 16, 32, or 64. - Provide a base class (`RColumnElementLE`) for columns whose on-storage representation is little-endian according to the v1 specification. The provided `Pack()` and `Unpack()` functions take care of swapping bytes if the target CPU is big-endian. - Use little-endian on-storage representation for columns of type `std::{,u}int{16,32,64}_t`, `ClusterSize_t`, `float`, and `double`. For single/double precision floating point numbers, IEEE-754 specifies the encoding but does not mandate a specific byte ordering; however, most architectures use the same endianness as for representing integers. - Amend implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>::{Pack,Unpack}()`. - Provide packing / unpacking for `RColumnElement<RColumnSwitch, EColumnType::kSwitch>`, compliant to v1 binary format specification. ## Checklist:. - [X] tested changes locally. - [X] add unit tests. - [x] `RColumnElement<RColumnSwitch>` should implement `Pack()` and `Unpack()` for machine-independent representation. - [x] revisit former implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>`. Follow-up PR of: https://github.com/root-project/root/pull/10396. This PR fixes #10383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10402
https://github.com/root-project/root/pull/10402:454,integrability,buffer,buffer,454,"[ntuple] Support for big-endian architectures; This pull request completes support for big-endian architectures in RNTuple. Specifically, prior to this PR, metadata was serialized to a machine-independent representation, but data pages were still using the native endianness of the CPU. ## Changes or fixes:. - RColumnElement.hxx: Add `CopyElementsBswap<N>()` that byteswaps and copies a number of `N`-size elements from a source buffer to a destination buffer. `N` may be either 16, 32, or 64. - Provide a base class (`RColumnElementLE`) for columns whose on-storage representation is little-endian according to the v1 specification. The provided `Pack()` and `Unpack()` functions take care of swapping bytes if the target CPU is big-endian. - Use little-endian on-storage representation for columns of type `std::{,u}int{16,32,64}_t`, `ClusterSize_t`, `float`, and `double`. For single/double precision floating point numbers, IEEE-754 specifies the encoding but does not mandate a specific byte ordering; however, most architectures use the same endianness as for representing integers. - Amend implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>::{Pack,Unpack}()`. - Provide packing / unpacking for `RColumnElement<RColumnSwitch, EColumnType::kSwitch>`, compliant to v1 binary format specification. ## Checklist:. - [X] tested changes locally. - [X] add unit tests. - [x] `RColumnElement<RColumnSwitch>` should implement `Pack()` and `Unpack()` for machine-independent representation. - [x] revisit former implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>`. Follow-up PR of: https://github.com/root-project/root/pull/10396. This PR fixes #10383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10402
https://github.com/root-project/root/pull/10402:1275,integrability,complian,compliant,1275,"[ntuple] Support for big-endian architectures; This pull request completes support for big-endian architectures in RNTuple. Specifically, prior to this PR, metadata was serialized to a machine-independent representation, but data pages were still using the native endianness of the CPU. ## Changes or fixes:. - RColumnElement.hxx: Add `CopyElementsBswap<N>()` that byteswaps and copies a number of `N`-size elements from a source buffer to a destination buffer. `N` may be either 16, 32, or 64. - Provide a base class (`RColumnElementLE`) for columns whose on-storage representation is little-endian according to the v1 specification. The provided `Pack()` and `Unpack()` functions take care of swapping bytes if the target CPU is big-endian. - Use little-endian on-storage representation for columns of type `std::{,u}int{16,32,64}_t`, `ClusterSize_t`, `float`, and `double`. For single/double precision floating point numbers, IEEE-754 specifies the encoding but does not mandate a specific byte ordering; however, most architectures use the same endianness as for representing integers. - Amend implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>::{Pack,Unpack}()`. - Provide packing / unpacking for `RColumnElement<RColumnSwitch, EColumnType::kSwitch>`, compliant to v1 binary format specification. ## Checklist:. - [X] tested changes locally. - [X] add unit tests. - [x] `RColumnElement<RColumnSwitch>` should implement `Pack()` and `Unpack()` for machine-independent representation. - [x] revisit former implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>`. Follow-up PR of: https://github.com/root-project/root/pull/10396. This PR fixes #10383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10402
https://github.com/root-project/root/pull/10402:32,interoperability,architectur,architectures,32,"[ntuple] Support for big-endian architectures; This pull request completes support for big-endian architectures in RNTuple. Specifically, prior to this PR, metadata was serialized to a machine-independent representation, but data pages were still using the native endianness of the CPU. ## Changes or fixes:. - RColumnElement.hxx: Add `CopyElementsBswap<N>()` that byteswaps and copies a number of `N`-size elements from a source buffer to a destination buffer. `N` may be either 16, 32, or 64. - Provide a base class (`RColumnElementLE`) for columns whose on-storage representation is little-endian according to the v1 specification. The provided `Pack()` and `Unpack()` functions take care of swapping bytes if the target CPU is big-endian. - Use little-endian on-storage representation for columns of type `std::{,u}int{16,32,64}_t`, `ClusterSize_t`, `float`, and `double`. For single/double precision floating point numbers, IEEE-754 specifies the encoding but does not mandate a specific byte ordering; however, most architectures use the same endianness as for representing integers. - Amend implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>::{Pack,Unpack}()`. - Provide packing / unpacking for `RColumnElement<RColumnSwitch, EColumnType::kSwitch>`, compliant to v1 binary format specification. ## Checklist:. - [X] tested changes locally. - [X] add unit tests. - [x] `RColumnElement<RColumnSwitch>` should implement `Pack()` and `Unpack()` for machine-independent representation. - [x] revisit former implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>`. Follow-up PR of: https://github.com/root-project/root/pull/10396. This PR fixes #10383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10402
https://github.com/root-project/root/pull/10402:98,interoperability,architectur,architectures,98,"[ntuple] Support for big-endian architectures; This pull request completes support for big-endian architectures in RNTuple. Specifically, prior to this PR, metadata was serialized to a machine-independent representation, but data pages were still using the native endianness of the CPU. ## Changes or fixes:. - RColumnElement.hxx: Add `CopyElementsBswap<N>()` that byteswaps and copies a number of `N`-size elements from a source buffer to a destination buffer. `N` may be either 16, 32, or 64. - Provide a base class (`RColumnElementLE`) for columns whose on-storage representation is little-endian according to the v1 specification. The provided `Pack()` and `Unpack()` functions take care of swapping bytes if the target CPU is big-endian. - Use little-endian on-storage representation for columns of type `std::{,u}int{16,32,64}_t`, `ClusterSize_t`, `float`, and `double`. For single/double precision floating point numbers, IEEE-754 specifies the encoding but does not mandate a specific byte ordering; however, most architectures use the same endianness as for representing integers. - Amend implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>::{Pack,Unpack}()`. - Provide packing / unpacking for `RColumnElement<RColumnSwitch, EColumnType::kSwitch>`, compliant to v1 binary format specification. ## Checklist:. - [X] tested changes locally. - [X] add unit tests. - [x] `RColumnElement<RColumnSwitch>` should implement `Pack()` and `Unpack()` for machine-independent representation. - [x] revisit former implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>`. Follow-up PR of: https://github.com/root-project/root/pull/10396. This PR fixes #10383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10402
https://github.com/root-project/root/pull/10402:124,interoperability,Specif,Specifically,124,"[ntuple] Support for big-endian architectures; This pull request completes support for big-endian architectures in RNTuple. Specifically, prior to this PR, metadata was serialized to a machine-independent representation, but data pages were still using the native endianness of the CPU. ## Changes or fixes:. - RColumnElement.hxx: Add `CopyElementsBswap<N>()` that byteswaps and copies a number of `N`-size elements from a source buffer to a destination buffer. `N` may be either 16, 32, or 64. - Provide a base class (`RColumnElementLE`) for columns whose on-storage representation is little-endian according to the v1 specification. The provided `Pack()` and `Unpack()` functions take care of swapping bytes if the target CPU is big-endian. - Use little-endian on-storage representation for columns of type `std::{,u}int{16,32,64}_t`, `ClusterSize_t`, `float`, and `double`. For single/double precision floating point numbers, IEEE-754 specifies the encoding but does not mandate a specific byte ordering; however, most architectures use the same endianness as for representing integers. - Amend implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>::{Pack,Unpack}()`. - Provide packing / unpacking for `RColumnElement<RColumnSwitch, EColumnType::kSwitch>`, compliant to v1 binary format specification. ## Checklist:. - [X] tested changes locally. - [X] add unit tests. - [x] `RColumnElement<RColumnSwitch>` should implement `Pack()` and `Unpack()` for machine-independent representation. - [x] revisit former implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>`. Follow-up PR of: https://github.com/root-project/root/pull/10396. This PR fixes #10383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10402
https://github.com/root-project/root/pull/10402:620,interoperability,specif,specification,620,"[ntuple] Support for big-endian architectures; This pull request completes support for big-endian architectures in RNTuple. Specifically, prior to this PR, metadata was serialized to a machine-independent representation, but data pages were still using the native endianness of the CPU. ## Changes or fixes:. - RColumnElement.hxx: Add `CopyElementsBswap<N>()` that byteswaps and copies a number of `N`-size elements from a source buffer to a destination buffer. `N` may be either 16, 32, or 64. - Provide a base class (`RColumnElementLE`) for columns whose on-storage representation is little-endian according to the v1 specification. The provided `Pack()` and `Unpack()` functions take care of swapping bytes if the target CPU is big-endian. - Use little-endian on-storage representation for columns of type `std::{,u}int{16,32,64}_t`, `ClusterSize_t`, `float`, and `double`. For single/double precision floating point numbers, IEEE-754 specifies the encoding but does not mandate a specific byte ordering; however, most architectures use the same endianness as for representing integers. - Amend implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>::{Pack,Unpack}()`. - Provide packing / unpacking for `RColumnElement<RColumnSwitch, EColumnType::kSwitch>`, compliant to v1 binary format specification. ## Checklist:. - [X] tested changes locally. - [X] add unit tests. - [x] `RColumnElement<RColumnSwitch>` should implement `Pack()` and `Unpack()` for machine-independent representation. - [x] revisit former implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>`. Follow-up PR of: https://github.com/root-project/root/pull/10396. This PR fixes #10383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10402
https://github.com/root-project/root/pull/10402:938,interoperability,specif,specifies,938,"[ntuple] Support for big-endian architectures; This pull request completes support for big-endian architectures in RNTuple. Specifically, prior to this PR, metadata was serialized to a machine-independent representation, but data pages were still using the native endianness of the CPU. ## Changes or fixes:. - RColumnElement.hxx: Add `CopyElementsBswap<N>()` that byteswaps and copies a number of `N`-size elements from a source buffer to a destination buffer. `N` may be either 16, 32, or 64. - Provide a base class (`RColumnElementLE`) for columns whose on-storage representation is little-endian according to the v1 specification. The provided `Pack()` and `Unpack()` functions take care of swapping bytes if the target CPU is big-endian. - Use little-endian on-storage representation for columns of type `std::{,u}int{16,32,64}_t`, `ClusterSize_t`, `float`, and `double`. For single/double precision floating point numbers, IEEE-754 specifies the encoding but does not mandate a specific byte ordering; however, most architectures use the same endianness as for representing integers. - Amend implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>::{Pack,Unpack}()`. - Provide packing / unpacking for `RColumnElement<RColumnSwitch, EColumnType::kSwitch>`, compliant to v1 binary format specification. ## Checklist:. - [X] tested changes locally. - [X] add unit tests. - [x] `RColumnElement<RColumnSwitch>` should implement `Pack()` and `Unpack()` for machine-independent representation. - [x] revisit former implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>`. Follow-up PR of: https://github.com/root-project/root/pull/10396. This PR fixes #10383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10402
https://github.com/root-project/root/pull/10402:984,interoperability,specif,specific,984,"[ntuple] Support for big-endian architectures; This pull request completes support for big-endian architectures in RNTuple. Specifically, prior to this PR, metadata was serialized to a machine-independent representation, but data pages were still using the native endianness of the CPU. ## Changes or fixes:. - RColumnElement.hxx: Add `CopyElementsBswap<N>()` that byteswaps and copies a number of `N`-size elements from a source buffer to a destination buffer. `N` may be either 16, 32, or 64. - Provide a base class (`RColumnElementLE`) for columns whose on-storage representation is little-endian according to the v1 specification. The provided `Pack()` and `Unpack()` functions take care of swapping bytes if the target CPU is big-endian. - Use little-endian on-storage representation for columns of type `std::{,u}int{16,32,64}_t`, `ClusterSize_t`, `float`, and `double`. For single/double precision floating point numbers, IEEE-754 specifies the encoding but does not mandate a specific byte ordering; however, most architectures use the same endianness as for representing integers. - Amend implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>::{Pack,Unpack}()`. - Provide packing / unpacking for `RColumnElement<RColumnSwitch, EColumnType::kSwitch>`, compliant to v1 binary format specification. ## Checklist:. - [X] tested changes locally. - [X] add unit tests. - [x] `RColumnElement<RColumnSwitch>` should implement `Pack()` and `Unpack()` for machine-independent representation. - [x] revisit former implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>`. Follow-up PR of: https://github.com/root-project/root/pull/10396. This PR fixes #10383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10402
https://github.com/root-project/root/pull/10402:1022,interoperability,architectur,architectures,1022,"[ntuple] Support for big-endian architectures; This pull request completes support for big-endian architectures in RNTuple. Specifically, prior to this PR, metadata was serialized to a machine-independent representation, but data pages were still using the native endianness of the CPU. ## Changes or fixes:. - RColumnElement.hxx: Add `CopyElementsBswap<N>()` that byteswaps and copies a number of `N`-size elements from a source buffer to a destination buffer. `N` may be either 16, 32, or 64. - Provide a base class (`RColumnElementLE`) for columns whose on-storage representation is little-endian according to the v1 specification. The provided `Pack()` and `Unpack()` functions take care of swapping bytes if the target CPU is big-endian. - Use little-endian on-storage representation for columns of type `std::{,u}int{16,32,64}_t`, `ClusterSize_t`, `float`, and `double`. For single/double precision floating point numbers, IEEE-754 specifies the encoding but does not mandate a specific byte ordering; however, most architectures use the same endianness as for representing integers. - Amend implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>::{Pack,Unpack}()`. - Provide packing / unpacking for `RColumnElement<RColumnSwitch, EColumnType::kSwitch>`, compliant to v1 binary format specification. ## Checklist:. - [X] tested changes locally. - [X] add unit tests. - [x] `RColumnElement<RColumnSwitch>` should implement `Pack()` and `Unpack()` for machine-independent representation. - [x] revisit former implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>`. Follow-up PR of: https://github.com/root-project/root/pull/10396. This PR fixes #10383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10402
https://github.com/root-project/root/pull/10402:1298,interoperability,format,format,1298,"[ntuple] Support for big-endian architectures; This pull request completes support for big-endian architectures in RNTuple. Specifically, prior to this PR, metadata was serialized to a machine-independent representation, but data pages were still using the native endianness of the CPU. ## Changes or fixes:. - RColumnElement.hxx: Add `CopyElementsBswap<N>()` that byteswaps and copies a number of `N`-size elements from a source buffer to a destination buffer. `N` may be either 16, 32, or 64. - Provide a base class (`RColumnElementLE`) for columns whose on-storage representation is little-endian according to the v1 specification. The provided `Pack()` and `Unpack()` functions take care of swapping bytes if the target CPU is big-endian. - Use little-endian on-storage representation for columns of type `std::{,u}int{16,32,64}_t`, `ClusterSize_t`, `float`, and `double`. For single/double precision floating point numbers, IEEE-754 specifies the encoding but does not mandate a specific byte ordering; however, most architectures use the same endianness as for representing integers. - Amend implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>::{Pack,Unpack}()`. - Provide packing / unpacking for `RColumnElement<RColumnSwitch, EColumnType::kSwitch>`, compliant to v1 binary format specification. ## Checklist:. - [X] tested changes locally. - [X] add unit tests. - [x] `RColumnElement<RColumnSwitch>` should implement `Pack()` and `Unpack()` for machine-independent representation. - [x] revisit former implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>`. Follow-up PR of: https://github.com/root-project/root/pull/10396. This PR fixes #10383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10402
https://github.com/root-project/root/pull/10402:1305,interoperability,specif,specification,1305,"[ntuple] Support for big-endian architectures; This pull request completes support for big-endian architectures in RNTuple. Specifically, prior to this PR, metadata was serialized to a machine-independent representation, but data pages were still using the native endianness of the CPU. ## Changes or fixes:. - RColumnElement.hxx: Add `CopyElementsBswap<N>()` that byteswaps and copies a number of `N`-size elements from a source buffer to a destination buffer. `N` may be either 16, 32, or 64. - Provide a base class (`RColumnElementLE`) for columns whose on-storage representation is little-endian according to the v1 specification. The provided `Pack()` and `Unpack()` functions take care of swapping bytes if the target CPU is big-endian. - Use little-endian on-storage representation for columns of type `std::{,u}int{16,32,64}_t`, `ClusterSize_t`, `float`, and `double`. For single/double precision floating point numbers, IEEE-754 specifies the encoding but does not mandate a specific byte ordering; however, most architectures use the same endianness as for representing integers. - Amend implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>::{Pack,Unpack}()`. - Provide packing / unpacking for `RColumnElement<RColumnSwitch, EColumnType::kSwitch>`, compliant to v1 binary format specification. ## Checklist:. - [X] tested changes locally. - [X] add unit tests. - [x] `RColumnElement<RColumnSwitch>` should implement `Pack()` and `Unpack()` for machine-independent representation. - [x] revisit former implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>`. Follow-up PR of: https://github.com/root-project/root/pull/10396. This PR fixes #10383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10402
https://github.com/root-project/root/pull/10402:649,modifiability,Pac,Pack,649,"[ntuple] Support for big-endian architectures; This pull request completes support for big-endian architectures in RNTuple. Specifically, prior to this PR, metadata was serialized to a machine-independent representation, but data pages were still using the native endianness of the CPU. ## Changes or fixes:. - RColumnElement.hxx: Add `CopyElementsBswap<N>()` that byteswaps and copies a number of `N`-size elements from a source buffer to a destination buffer. `N` may be either 16, 32, or 64. - Provide a base class (`RColumnElementLE`) for columns whose on-storage representation is little-endian according to the v1 specification. The provided `Pack()` and `Unpack()` functions take care of swapping bytes if the target CPU is big-endian. - Use little-endian on-storage representation for columns of type `std::{,u}int{16,32,64}_t`, `ClusterSize_t`, `float`, and `double`. For single/double precision floating point numbers, IEEE-754 specifies the encoding but does not mandate a specific byte ordering; however, most architectures use the same endianness as for representing integers. - Amend implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>::{Pack,Unpack}()`. - Provide packing / unpacking for `RColumnElement<RColumnSwitch, EColumnType::kSwitch>`, compliant to v1 binary format specification. ## Checklist:. - [X] tested changes locally. - [X] add unit tests. - [x] `RColumnElement<RColumnSwitch>` should implement `Pack()` and `Unpack()` for machine-independent representation. - [x] revisit former implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>`. Follow-up PR of: https://github.com/root-project/root/pull/10396. This PR fixes #10383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10402
https://github.com/root-project/root/pull/10402:1169,modifiability,Pac,Pack,1169,"[ntuple] Support for big-endian architectures; This pull request completes support for big-endian architectures in RNTuple. Specifically, prior to this PR, metadata was serialized to a machine-independent representation, but data pages were still using the native endianness of the CPU. ## Changes or fixes:. - RColumnElement.hxx: Add `CopyElementsBswap<N>()` that byteswaps and copies a number of `N`-size elements from a source buffer to a destination buffer. `N` may be either 16, 32, or 64. - Provide a base class (`RColumnElementLE`) for columns whose on-storage representation is little-endian according to the v1 specification. The provided `Pack()` and `Unpack()` functions take care of swapping bytes if the target CPU is big-endian. - Use little-endian on-storage representation for columns of type `std::{,u}int{16,32,64}_t`, `ClusterSize_t`, `float`, and `double`. For single/double precision floating point numbers, IEEE-754 specifies the encoding but does not mandate a specific byte ordering; however, most architectures use the same endianness as for representing integers. - Amend implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>::{Pack,Unpack}()`. - Provide packing / unpacking for `RColumnElement<RColumnSwitch, EColumnType::kSwitch>`, compliant to v1 binary format specification. ## Checklist:. - [X] tested changes locally. - [X] add unit tests. - [x] `RColumnElement<RColumnSwitch>` should implement `Pack()` and `Unpack()` for machine-independent representation. - [x] revisit former implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>`. Follow-up PR of: https://github.com/root-project/root/pull/10396. This PR fixes #10383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10402
https://github.com/root-project/root/pull/10402:1196,modifiability,pac,packing,1196,"[ntuple] Support for big-endian architectures; This pull request completes support for big-endian architectures in RNTuple. Specifically, prior to this PR, metadata was serialized to a machine-independent representation, but data pages were still using the native endianness of the CPU. ## Changes or fixes:. - RColumnElement.hxx: Add `CopyElementsBswap<N>()` that byteswaps and copies a number of `N`-size elements from a source buffer to a destination buffer. `N` may be either 16, 32, or 64. - Provide a base class (`RColumnElementLE`) for columns whose on-storage representation is little-endian according to the v1 specification. The provided `Pack()` and `Unpack()` functions take care of swapping bytes if the target CPU is big-endian. - Use little-endian on-storage representation for columns of type `std::{,u}int{16,32,64}_t`, `ClusterSize_t`, `float`, and `double`. For single/double precision floating point numbers, IEEE-754 specifies the encoding but does not mandate a specific byte ordering; however, most architectures use the same endianness as for representing integers. - Amend implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>::{Pack,Unpack}()`. - Provide packing / unpacking for `RColumnElement<RColumnSwitch, EColumnType::kSwitch>`, compliant to v1 binary format specification. ## Checklist:. - [X] tested changes locally. - [X] add unit tests. - [x] `RColumnElement<RColumnSwitch>` should implement `Pack()` and `Unpack()` for machine-independent representation. - [x] revisit former implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>`. Follow-up PR of: https://github.com/root-project/root/pull/10396. This PR fixes #10383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10402
https://github.com/root-project/root/pull/10402:1443,modifiability,Pac,Pack,1443,"[ntuple] Support for big-endian architectures; This pull request completes support for big-endian architectures in RNTuple. Specifically, prior to this PR, metadata was serialized to a machine-independent representation, but data pages were still using the native endianness of the CPU. ## Changes or fixes:. - RColumnElement.hxx: Add `CopyElementsBswap<N>()` that byteswaps and copies a number of `N`-size elements from a source buffer to a destination buffer. `N` may be either 16, 32, or 64. - Provide a base class (`RColumnElementLE`) for columns whose on-storage representation is little-endian according to the v1 specification. The provided `Pack()` and `Unpack()` functions take care of swapping bytes if the target CPU is big-endian. - Use little-endian on-storage representation for columns of type `std::{,u}int{16,32,64}_t`, `ClusterSize_t`, `float`, and `double`. For single/double precision floating point numbers, IEEE-754 specifies the encoding but does not mandate a specific byte ordering; however, most architectures use the same endianness as for representing integers. - Amend implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>::{Pack,Unpack}()`. - Provide packing / unpacking for `RColumnElement<RColumnSwitch, EColumnType::kSwitch>`, compliant to v1 binary format specification. ## Checklist:. - [X] tested changes locally. - [X] add unit tests. - [x] `RColumnElement<RColumnSwitch>` should implement `Pack()` and `Unpack()` for machine-independent representation. - [x] revisit former implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>`. Follow-up PR of: https://github.com/root-project/root/pull/10396. This PR fixes #10383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10402
https://github.com/root-project/root/pull/10402:282,performance,CPU,CPU,282,"[ntuple] Support for big-endian architectures; This pull request completes support for big-endian architectures in RNTuple. Specifically, prior to this PR, metadata was serialized to a machine-independent representation, but data pages were still using the native endianness of the CPU. ## Changes or fixes:. - RColumnElement.hxx: Add `CopyElementsBswap<N>()` that byteswaps and copies a number of `N`-size elements from a source buffer to a destination buffer. `N` may be either 16, 32, or 64. - Provide a base class (`RColumnElementLE`) for columns whose on-storage representation is little-endian according to the v1 specification. The provided `Pack()` and `Unpack()` functions take care of swapping bytes if the target CPU is big-endian. - Use little-endian on-storage representation for columns of type `std::{,u}int{16,32,64}_t`, `ClusterSize_t`, `float`, and `double`. For single/double precision floating point numbers, IEEE-754 specifies the encoding but does not mandate a specific byte ordering; however, most architectures use the same endianness as for representing integers. - Amend implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>::{Pack,Unpack}()`. - Provide packing / unpacking for `RColumnElement<RColumnSwitch, EColumnType::kSwitch>`, compliant to v1 binary format specification. ## Checklist:. - [X] tested changes locally. - [X] add unit tests. - [x] `RColumnElement<RColumnSwitch>` should implement `Pack()` and `Unpack()` for machine-independent representation. - [x] revisit former implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>`. Follow-up PR of: https://github.com/root-project/root/pull/10396. This PR fixes #10383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10402
https://github.com/root-project/root/pull/10402:724,performance,CPU,CPU,724,"[ntuple] Support for big-endian architectures; This pull request completes support for big-endian architectures in RNTuple. Specifically, prior to this PR, metadata was serialized to a machine-independent representation, but data pages were still using the native endianness of the CPU. ## Changes or fixes:. - RColumnElement.hxx: Add `CopyElementsBswap<N>()` that byteswaps and copies a number of `N`-size elements from a source buffer to a destination buffer. `N` may be either 16, 32, or 64. - Provide a base class (`RColumnElementLE`) for columns whose on-storage representation is little-endian according to the v1 specification. The provided `Pack()` and `Unpack()` functions take care of swapping bytes if the target CPU is big-endian. - Use little-endian on-storage representation for columns of type `std::{,u}int{16,32,64}_t`, `ClusterSize_t`, `float`, and `double`. For single/double precision floating point numbers, IEEE-754 specifies the encoding but does not mandate a specific byte ordering; however, most architectures use the same endianness as for representing integers. - Amend implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>::{Pack,Unpack}()`. - Provide packing / unpacking for `RColumnElement<RColumnSwitch, EColumnType::kSwitch>`, compliant to v1 binary format specification. ## Checklist:. - [X] tested changes locally. - [X] add unit tests. - [x] `RColumnElement<RColumnSwitch>` should implement `Pack()` and `Unpack()` for machine-independent representation. - [x] revisit former implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>`. Follow-up PR of: https://github.com/root-project/root/pull/10396. This PR fixes #10383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10402
https://github.com/root-project/root/pull/10402:965,reliability,doe,does,965,"[ntuple] Support for big-endian architectures; This pull request completes support for big-endian architectures in RNTuple. Specifically, prior to this PR, metadata was serialized to a machine-independent representation, but data pages were still using the native endianness of the CPU. ## Changes or fixes:. - RColumnElement.hxx: Add `CopyElementsBswap<N>()` that byteswaps and copies a number of `N`-size elements from a source buffer to a destination buffer. `N` may be either 16, 32, or 64. - Provide a base class (`RColumnElementLE`) for columns whose on-storage representation is little-endian according to the v1 specification. The provided `Pack()` and `Unpack()` functions take care of swapping bytes if the target CPU is big-endian. - Use little-endian on-storage representation for columns of type `std::{,u}int{16,32,64}_t`, `ClusterSize_t`, `float`, and `double`. For single/double precision floating point numbers, IEEE-754 specifies the encoding but does not mandate a specific byte ordering; however, most architectures use the same endianness as for representing integers. - Amend implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>::{Pack,Unpack}()`. - Provide packing / unpacking for `RColumnElement<RColumnSwitch, EColumnType::kSwitch>`, compliant to v1 binary format specification. ## Checklist:. - [X] tested changes locally. - [X] add unit tests. - [x] `RColumnElement<RColumnSwitch>` should implement `Pack()` and `Unpack()` for machine-independent representation. - [x] revisit former implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>`. Follow-up PR of: https://github.com/root-project/root/pull/10396. This PR fixes #10383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10402
https://github.com/root-project/root/pull/10402:65,safety,compl,completes,65,"[ntuple] Support for big-endian architectures; This pull request completes support for big-endian architectures in RNTuple. Specifically, prior to this PR, metadata was serialized to a machine-independent representation, but data pages were still using the native endianness of the CPU. ## Changes or fixes:. - RColumnElement.hxx: Add `CopyElementsBswap<N>()` that byteswaps and copies a number of `N`-size elements from a source buffer to a destination buffer. `N` may be either 16, 32, or 64. - Provide a base class (`RColumnElementLE`) for columns whose on-storage representation is little-endian according to the v1 specification. The provided `Pack()` and `Unpack()` functions take care of swapping bytes if the target CPU is big-endian. - Use little-endian on-storage representation for columns of type `std::{,u}int{16,32,64}_t`, `ClusterSize_t`, `float`, and `double`. For single/double precision floating point numbers, IEEE-754 specifies the encoding but does not mandate a specific byte ordering; however, most architectures use the same endianness as for representing integers. - Amend implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>::{Pack,Unpack}()`. - Provide packing / unpacking for `RColumnElement<RColumnSwitch, EColumnType::kSwitch>`, compliant to v1 binary format specification. ## Checklist:. - [X] tested changes locally. - [X] add unit tests. - [x] `RColumnElement<RColumnSwitch>` should implement `Pack()` and `Unpack()` for machine-independent representation. - [x] revisit former implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>`. Follow-up PR of: https://github.com/root-project/root/pull/10396. This PR fixes #10383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10402
https://github.com/root-project/root/pull/10402:1275,safety,compl,compliant,1275,"[ntuple] Support for big-endian architectures; This pull request completes support for big-endian architectures in RNTuple. Specifically, prior to this PR, metadata was serialized to a machine-independent representation, but data pages were still using the native endianness of the CPU. ## Changes or fixes:. - RColumnElement.hxx: Add `CopyElementsBswap<N>()` that byteswaps and copies a number of `N`-size elements from a source buffer to a destination buffer. `N` may be either 16, 32, or 64. - Provide a base class (`RColumnElementLE`) for columns whose on-storage representation is little-endian according to the v1 specification. The provided `Pack()` and `Unpack()` functions take care of swapping bytes if the target CPU is big-endian. - Use little-endian on-storage representation for columns of type `std::{,u}int{16,32,64}_t`, `ClusterSize_t`, `float`, and `double`. For single/double precision floating point numbers, IEEE-754 specifies the encoding but does not mandate a specific byte ordering; however, most architectures use the same endianness as for representing integers. - Amend implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>::{Pack,Unpack}()`. - Provide packing / unpacking for `RColumnElement<RColumnSwitch, EColumnType::kSwitch>`, compliant to v1 binary format specification. ## Checklist:. - [X] tested changes locally. - [X] add unit tests. - [x] `RColumnElement<RColumnSwitch>` should implement `Pack()` and `Unpack()` for machine-independent representation. - [x] revisit former implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>`. Follow-up PR of: https://github.com/root-project/root/pull/10396. This PR fixes #10383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10402
https://github.com/root-project/root/pull/10402:1341,safety,test,tested,1341,"[ntuple] Support for big-endian architectures; This pull request completes support for big-endian architectures in RNTuple. Specifically, prior to this PR, metadata was serialized to a machine-independent representation, but data pages were still using the native endianness of the CPU. ## Changes or fixes:. - RColumnElement.hxx: Add `CopyElementsBswap<N>()` that byteswaps and copies a number of `N`-size elements from a source buffer to a destination buffer. `N` may be either 16, 32, or 64. - Provide a base class (`RColumnElementLE`) for columns whose on-storage representation is little-endian according to the v1 specification. The provided `Pack()` and `Unpack()` functions take care of swapping bytes if the target CPU is big-endian. - Use little-endian on-storage representation for columns of type `std::{,u}int{16,32,64}_t`, `ClusterSize_t`, `float`, and `double`. For single/double precision floating point numbers, IEEE-754 specifies the encoding but does not mandate a specific byte ordering; however, most architectures use the same endianness as for representing integers. - Amend implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>::{Pack,Unpack}()`. - Provide packing / unpacking for `RColumnElement<RColumnSwitch, EColumnType::kSwitch>`, compliant to v1 binary format specification. ## Checklist:. - [X] tested changes locally. - [X] add unit tests. - [x] `RColumnElement<RColumnSwitch>` should implement `Pack()` and `Unpack()` for machine-independent representation. - [x] revisit former implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>`. Follow-up PR of: https://github.com/root-project/root/pull/10396. This PR fixes #10383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10402
https://github.com/root-project/root/pull/10402:1380,safety,test,tests,1380,"[ntuple] Support for big-endian architectures; This pull request completes support for big-endian architectures in RNTuple. Specifically, prior to this PR, metadata was serialized to a machine-independent representation, but data pages were still using the native endianness of the CPU. ## Changes or fixes:. - RColumnElement.hxx: Add `CopyElementsBswap<N>()` that byteswaps and copies a number of `N`-size elements from a source buffer to a destination buffer. `N` may be either 16, 32, or 64. - Provide a base class (`RColumnElementLE`) for columns whose on-storage representation is little-endian according to the v1 specification. The provided `Pack()` and `Unpack()` functions take care of swapping bytes if the target CPU is big-endian. - Use little-endian on-storage representation for columns of type `std::{,u}int{16,32,64}_t`, `ClusterSize_t`, `float`, and `double`. For single/double precision floating point numbers, IEEE-754 specifies the encoding but does not mandate a specific byte ordering; however, most architectures use the same endianness as for representing integers. - Amend implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>::{Pack,Unpack}()`. - Provide packing / unpacking for `RColumnElement<RColumnSwitch, EColumnType::kSwitch>`, compliant to v1 binary format specification. ## Checklist:. - [X] tested changes locally. - [X] add unit tests. - [x] `RColumnElement<RColumnSwitch>` should implement `Pack()` and `Unpack()` for machine-independent representation. - [x] revisit former implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>`. Follow-up PR of: https://github.com/root-project/root/pull/10396. This PR fixes #10383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10402
https://github.com/root-project/root/pull/10402:65,security,compl,completes,65,"[ntuple] Support for big-endian architectures; This pull request completes support for big-endian architectures in RNTuple. Specifically, prior to this PR, metadata was serialized to a machine-independent representation, but data pages were still using the native endianness of the CPU. ## Changes or fixes:. - RColumnElement.hxx: Add `CopyElementsBswap<N>()` that byteswaps and copies a number of `N`-size elements from a source buffer to a destination buffer. `N` may be either 16, 32, or 64. - Provide a base class (`RColumnElementLE`) for columns whose on-storage representation is little-endian according to the v1 specification. The provided `Pack()` and `Unpack()` functions take care of swapping bytes if the target CPU is big-endian. - Use little-endian on-storage representation for columns of type `std::{,u}int{16,32,64}_t`, `ClusterSize_t`, `float`, and `double`. For single/double precision floating point numbers, IEEE-754 specifies the encoding but does not mandate a specific byte ordering; however, most architectures use the same endianness as for representing integers. - Amend implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>::{Pack,Unpack}()`. - Provide packing / unpacking for `RColumnElement<RColumnSwitch, EColumnType::kSwitch>`, compliant to v1 binary format specification. ## Checklist:. - [X] tested changes locally. - [X] add unit tests. - [x] `RColumnElement<RColumnSwitch>` should implement `Pack()` and `Unpack()` for machine-independent representation. - [x] revisit former implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>`. Follow-up PR of: https://github.com/root-project/root/pull/10396. This PR fixes #10383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10402
https://github.com/root-project/root/pull/10402:1275,security,compl,compliant,1275,"[ntuple] Support for big-endian architectures; This pull request completes support for big-endian architectures in RNTuple. Specifically, prior to this PR, metadata was serialized to a machine-independent representation, but data pages were still using the native endianness of the CPU. ## Changes or fixes:. - RColumnElement.hxx: Add `CopyElementsBswap<N>()` that byteswaps and copies a number of `N`-size elements from a source buffer to a destination buffer. `N` may be either 16, 32, or 64. - Provide a base class (`RColumnElementLE`) for columns whose on-storage representation is little-endian according to the v1 specification. The provided `Pack()` and `Unpack()` functions take care of swapping bytes if the target CPU is big-endian. - Use little-endian on-storage representation for columns of type `std::{,u}int{16,32,64}_t`, `ClusterSize_t`, `float`, and `double`. For single/double precision floating point numbers, IEEE-754 specifies the encoding but does not mandate a specific byte ordering; however, most architectures use the same endianness as for representing integers. - Amend implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>::{Pack,Unpack}()`. - Provide packing / unpacking for `RColumnElement<RColumnSwitch, EColumnType::kSwitch>`, compliant to v1 binary format specification. ## Checklist:. - [X] tested changes locally. - [X] add unit tests. - [x] `RColumnElement<RColumnSwitch>` should implement `Pack()` and `Unpack()` for machine-independent representation. - [x] revisit former implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>`. Follow-up PR of: https://github.com/root-project/root/pull/10396. This PR fixes #10383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10402
https://github.com/root-project/root/pull/10402:1341,testability,test,tested,1341,"[ntuple] Support for big-endian architectures; This pull request completes support for big-endian architectures in RNTuple. Specifically, prior to this PR, metadata was serialized to a machine-independent representation, but data pages were still using the native endianness of the CPU. ## Changes or fixes:. - RColumnElement.hxx: Add `CopyElementsBswap<N>()` that byteswaps and copies a number of `N`-size elements from a source buffer to a destination buffer. `N` may be either 16, 32, or 64. - Provide a base class (`RColumnElementLE`) for columns whose on-storage representation is little-endian according to the v1 specification. The provided `Pack()` and `Unpack()` functions take care of swapping bytes if the target CPU is big-endian. - Use little-endian on-storage representation for columns of type `std::{,u}int{16,32,64}_t`, `ClusterSize_t`, `float`, and `double`. For single/double precision floating point numbers, IEEE-754 specifies the encoding but does not mandate a specific byte ordering; however, most architectures use the same endianness as for representing integers. - Amend implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>::{Pack,Unpack}()`. - Provide packing / unpacking for `RColumnElement<RColumnSwitch, EColumnType::kSwitch>`, compliant to v1 binary format specification. ## Checklist:. - [X] tested changes locally. - [X] add unit tests. - [x] `RColumnElement<RColumnSwitch>` should implement `Pack()` and `Unpack()` for machine-independent representation. - [x] revisit former implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>`. Follow-up PR of: https://github.com/root-project/root/pull/10396. This PR fixes #10383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10402
https://github.com/root-project/root/pull/10402:1375,testability,unit,unit,1375,"[ntuple] Support for big-endian architectures; This pull request completes support for big-endian architectures in RNTuple. Specifically, prior to this PR, metadata was serialized to a machine-independent representation, but data pages were still using the native endianness of the CPU. ## Changes or fixes:. - RColumnElement.hxx: Add `CopyElementsBswap<N>()` that byteswaps and copies a number of `N`-size elements from a source buffer to a destination buffer. `N` may be either 16, 32, or 64. - Provide a base class (`RColumnElementLE`) for columns whose on-storage representation is little-endian according to the v1 specification. The provided `Pack()` and `Unpack()` functions take care of swapping bytes if the target CPU is big-endian. - Use little-endian on-storage representation for columns of type `std::{,u}int{16,32,64}_t`, `ClusterSize_t`, `float`, and `double`. For single/double precision floating point numbers, IEEE-754 specifies the encoding but does not mandate a specific byte ordering; however, most architectures use the same endianness as for representing integers. - Amend implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>::{Pack,Unpack}()`. - Provide packing / unpacking for `RColumnElement<RColumnSwitch, EColumnType::kSwitch>`, compliant to v1 binary format specification. ## Checklist:. - [X] tested changes locally. - [X] add unit tests. - [x] `RColumnElement<RColumnSwitch>` should implement `Pack()` and `Unpack()` for machine-independent representation. - [x] revisit former implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>`. Follow-up PR of: https://github.com/root-project/root/pull/10396. This PR fixes #10383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10402
https://github.com/root-project/root/pull/10402:1380,testability,test,tests,1380,"[ntuple] Support for big-endian architectures; This pull request completes support for big-endian architectures in RNTuple. Specifically, prior to this PR, metadata was serialized to a machine-independent representation, but data pages were still using the native endianness of the CPU. ## Changes or fixes:. - RColumnElement.hxx: Add `CopyElementsBswap<N>()` that byteswaps and copies a number of `N`-size elements from a source buffer to a destination buffer. `N` may be either 16, 32, or 64. - Provide a base class (`RColumnElementLE`) for columns whose on-storage representation is little-endian according to the v1 specification. The provided `Pack()` and `Unpack()` functions take care of swapping bytes if the target CPU is big-endian. - Use little-endian on-storage representation for columns of type `std::{,u}int{16,32,64}_t`, `ClusterSize_t`, `float`, and `double`. For single/double precision floating point numbers, IEEE-754 specifies the encoding but does not mandate a specific byte ordering; however, most architectures use the same endianness as for representing integers. - Amend implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>::{Pack,Unpack}()`. - Provide packing / unpacking for `RColumnElement<RColumnSwitch, EColumnType::kSwitch>`, compliant to v1 binary format specification. ## Checklist:. - [X] tested changes locally. - [X] add unit tests. - [x] `RColumnElement<RColumnSwitch>` should implement `Pack()` and `Unpack()` for machine-independent representation. - [x] revisit former implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>`. Follow-up PR of: https://github.com/root-project/root/pull/10396. This PR fixes #10383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10402
https://github.com/root-project/root/pull/10402:9,usability,Support,Support,9,"[ntuple] Support for big-endian architectures; This pull request completes support for big-endian architectures in RNTuple. Specifically, prior to this PR, metadata was serialized to a machine-independent representation, but data pages were still using the native endianness of the CPU. ## Changes or fixes:. - RColumnElement.hxx: Add `CopyElementsBswap<N>()` that byteswaps and copies a number of `N`-size elements from a source buffer to a destination buffer. `N` may be either 16, 32, or 64. - Provide a base class (`RColumnElementLE`) for columns whose on-storage representation is little-endian according to the v1 specification. The provided `Pack()` and `Unpack()` functions take care of swapping bytes if the target CPU is big-endian. - Use little-endian on-storage representation for columns of type `std::{,u}int{16,32,64}_t`, `ClusterSize_t`, `float`, and `double`. For single/double precision floating point numbers, IEEE-754 specifies the encoding but does not mandate a specific byte ordering; however, most architectures use the same endianness as for representing integers. - Amend implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>::{Pack,Unpack}()`. - Provide packing / unpacking for `RColumnElement<RColumnSwitch, EColumnType::kSwitch>`, compliant to v1 binary format specification. ## Checklist:. - [X] tested changes locally. - [X] add unit tests. - [x] `RColumnElement<RColumnSwitch>` should implement `Pack()` and `Unpack()` for machine-independent representation. - [x] revisit former implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>`. Follow-up PR of: https://github.com/root-project/root/pull/10396. This PR fixes #10383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10402
https://github.com/root-project/root/pull/10402:75,usability,support,support,75,"[ntuple] Support for big-endian architectures; This pull request completes support for big-endian architectures in RNTuple. Specifically, prior to this PR, metadata was serialized to a machine-independent representation, but data pages were still using the native endianness of the CPU. ## Changes or fixes:. - RColumnElement.hxx: Add `CopyElementsBswap<N>()` that byteswaps and copies a number of `N`-size elements from a source buffer to a destination buffer. `N` may be either 16, 32, or 64. - Provide a base class (`RColumnElementLE`) for columns whose on-storage representation is little-endian according to the v1 specification. The provided `Pack()` and `Unpack()` functions take care of swapping bytes if the target CPU is big-endian. - Use little-endian on-storage representation for columns of type `std::{,u}int{16,32,64}_t`, `ClusterSize_t`, `float`, and `double`. For single/double precision floating point numbers, IEEE-754 specifies the encoding but does not mandate a specific byte ordering; however, most architectures use the same endianness as for representing integers. - Amend implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>::{Pack,Unpack}()`. - Provide packing / unpacking for `RColumnElement<RColumnSwitch, EColumnType::kSwitch>`, compliant to v1 binary format specification. ## Checklist:. - [X] tested changes locally. - [X] add unit tests. - [x] `RColumnElement<RColumnSwitch>` should implement `Pack()` and `Unpack()` for machine-independent representation. - [x] revisit former implementation of `RColumnElement<std::int64_t, EColumnType::kInt32>`. Follow-up PR of: https://github.com/root-project/root/pull/10396. This PR fixes #10383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10402
https://github.com/root-project/root/issues/10403:145,availability,servic,services,145,"Update civetweb to 1.16 once it's released; In the `master` nightlies on Ubuntu 22.04, we see some warnings caused by civentweb:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu2204,SPEC=soversion,V=master/lastBuild/parsed_console/. ```. warning: ‘SHA1_Init’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. 12345 | SHA1_Init(&sha_ctx);. warning: ‘SHA1_Update’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. warning: ‘SHA1_Final’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. ```. Usage of these deprecated functions has been removed in the civetweb master branch:. https://github.com/civetweb/civetweb/pull/1072. Hence, once civetweb 1.16 is out, the code should by synchronized again with the ROOT repository to avoid these warnings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10403
https://github.com/root-project/root/issues/10403:0,deployability,Updat,Update,0,"Update civetweb to 1.16 once it's released; In the `master` nightlies on Ubuntu 22.04, we see some warnings caused by civentweb:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu2204,SPEC=soversion,V=master/lastBuild/parsed_console/. ```. warning: ‘SHA1_Init’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. 12345 | SHA1_Init(&sha_ctx);. warning: ‘SHA1_Update’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. warning: ‘SHA1_Final’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. ```. Usage of these deprecated functions has been removed in the civetweb master branch:. https://github.com/civetweb/civetweb/pull/1072. Hence, once civetweb 1.16 is out, the code should by synchronized again with the ROOT repository to avoid these warnings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10403
https://github.com/root-project/root/issues/10403:34,deployability,releas,released,34,"Update civetweb to 1.16 once it's released; In the `master` nightlies on Ubuntu 22.04, we see some warnings caused by civentweb:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu2204,SPEC=soversion,V=master/lastBuild/parsed_console/. ```. warning: ‘SHA1_Init’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. 12345 | SHA1_Init(&sha_ctx);. warning: ‘SHA1_Update’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. warning: ‘SHA1_Final’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. ```. Usage of these deprecated functions has been removed in the civetweb master branch:. https://github.com/civetweb/civetweb/pull/1072. Hence, once civetweb 1.16 is out, the code should by synchronized again with the ROOT repository to avoid these warnings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10403
https://github.com/root-project/root/issues/10403:145,deployability,servic,services,145,"Update civetweb to 1.16 once it's released; In the `master` nightlies on Ubuntu 22.04, we see some warnings caused by civentweb:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu2204,SPEC=soversion,V=master/lastBuild/parsed_console/. ```. warning: ‘SHA1_Init’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. 12345 | SHA1_Init(&sha_ctx);. warning: ‘SHA1_Update’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. warning: ‘SHA1_Final’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. ```. Usage of these deprecated functions has been removed in the civetweb master branch:. https://github.com/civetweb/civetweb/pull/1072. Hence, once civetweb 1.16 is out, the code should by synchronized again with the ROOT repository to avoid these warnings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10403
https://github.com/root-project/root/issues/10403:145,integrability,servic,services,145,"Update civetweb to 1.16 once it's released; In the `master` nightlies on Ubuntu 22.04, we see some warnings caused by civentweb:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu2204,SPEC=soversion,V=master/lastBuild/parsed_console/. ```. warning: ‘SHA1_Init’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. 12345 | SHA1_Init(&sha_ctx);. warning: ‘SHA1_Update’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. warning: ‘SHA1_Final’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. ```. Usage of these deprecated functions has been removed in the civetweb master branch:. https://github.com/civetweb/civetweb/pull/1072. Hence, once civetweb 1.16 is out, the code should by synchronized again with the ROOT repository to avoid these warnings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10403
https://github.com/root-project/root/issues/10403:803,integrability,repositor,repository,803,"Update civetweb to 1.16 once it's released; In the `master` nightlies on Ubuntu 22.04, we see some warnings caused by civentweb:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu2204,SPEC=soversion,V=master/lastBuild/parsed_console/. ```. warning: ‘SHA1_Init’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. 12345 | SHA1_Init(&sha_ctx);. warning: ‘SHA1_Update’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. warning: ‘SHA1_Final’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. ```. Usage of these deprecated functions has been removed in the civetweb master branch:. https://github.com/civetweb/civetweb/pull/1072. Hence, once civetweb 1.16 is out, the code should by synchronized again with the ROOT repository to avoid these warnings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10403
https://github.com/root-project/root/issues/10403:803,interoperability,repositor,repository,803,"Update civetweb to 1.16 once it's released; In the `master` nightlies on Ubuntu 22.04, we see some warnings caused by civentweb:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu2204,SPEC=soversion,V=master/lastBuild/parsed_console/. ```. warning: ‘SHA1_Init’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. 12345 | SHA1_Init(&sha_ctx);. warning: ‘SHA1_Update’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. warning: ‘SHA1_Final’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. ```. Usage of these deprecated functions has been removed in the civetweb master branch:. https://github.com/civetweb/civetweb/pull/1072. Hence, once civetweb 1.16 is out, the code should by synchronized again with the ROOT repository to avoid these warnings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10403
https://github.com/root-project/root/issues/10403:145,modifiability,servic,services,145,"Update civetweb to 1.16 once it's released; In the `master` nightlies on Ubuntu 22.04, we see some warnings caused by civentweb:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu2204,SPEC=soversion,V=master/lastBuild/parsed_console/. ```. warning: ‘SHA1_Init’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. 12345 | SHA1_Init(&sha_ctx);. warning: ‘SHA1_Update’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. warning: ‘SHA1_Final’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. ```. Usage of these deprecated functions has been removed in the civetweb master branch:. https://github.com/civetweb/civetweb/pull/1072. Hence, once civetweb 1.16 is out, the code should by synchronized again with the ROOT repository to avoid these warnings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10403
https://github.com/root-project/root/issues/10403:770,performance,synch,synchronized,770,"Update civetweb to 1.16 once it's released; In the `master` nightlies on Ubuntu 22.04, we see some warnings caused by civentweb:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu2204,SPEC=soversion,V=master/lastBuild/parsed_console/. ```. warning: ‘SHA1_Init’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. 12345 | SHA1_Init(&sha_ctx);. warning: ‘SHA1_Update’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. warning: ‘SHA1_Final’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. ```. Usage of these deprecated functions has been removed in the civetweb master branch:. https://github.com/civetweb/civetweb/pull/1072. Hence, once civetweb 1.16 is out, the code should by synchronized again with the ROOT repository to avoid these warnings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10403
https://github.com/root-project/root/issues/10403:0,safety,Updat,Update,0,"Update civetweb to 1.16 once it's released; In the `master` nightlies on Ubuntu 22.04, we see some warnings caused by civentweb:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu2204,SPEC=soversion,V=master/lastBuild/parsed_console/. ```. warning: ‘SHA1_Init’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. 12345 | SHA1_Init(&sha_ctx);. warning: ‘SHA1_Update’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. warning: ‘SHA1_Final’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. ```. Usage of these deprecated functions has been removed in the civetweb master branch:. https://github.com/civetweb/civetweb/pull/1072. Hence, once civetweb 1.16 is out, the code should by synchronized again with the ROOT repository to avoid these warnings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10403
https://github.com/root-project/root/issues/10403:817,safety,avoid,avoid,817,"Update civetweb to 1.16 once it's released; In the `master` nightlies on Ubuntu 22.04, we see some warnings caused by civentweb:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu2204,SPEC=soversion,V=master/lastBuild/parsed_console/. ```. warning: ‘SHA1_Init’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. 12345 | SHA1_Init(&sha_ctx);. warning: ‘SHA1_Update’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. warning: ‘SHA1_Final’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. ```. Usage of these deprecated functions has been removed in the civetweb master branch:. https://github.com/civetweb/civetweb/pull/1072. Hence, once civetweb 1.16 is out, the code should by synchronized again with the ROOT repository to avoid these warnings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10403
https://github.com/root-project/root/issues/10403:0,security,Updat,Update,0,"Update civetweb to 1.16 once it's released; In the `master` nightlies on Ubuntu 22.04, we see some warnings caused by civentweb:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu2204,SPEC=soversion,V=master/lastBuild/parsed_console/. ```. warning: ‘SHA1_Init’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. 12345 | SHA1_Init(&sha_ctx);. warning: ‘SHA1_Update’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. warning: ‘SHA1_Final’ is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. ```. Usage of these deprecated functions has been removed in the civetweb master branch:. https://github.com/civetweb/civetweb/pull/1072. Hence, once civetweb 1.16 is out, the code should by synchronized again with the ROOT repository to avoid these warnings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10403
https://github.com/root-project/root/issues/10404:888,availability,fault,fault,888,"Broken interaction between `TThreadExecutor` and `TSeq` with specified beginning/range; # Problem:. `TThreadExecutor` expects that `TSeq`-s always start with 0 and have step 1. Otherwise, it will give wrong result for `Foreach`, `MapReduce`, `Map` of the `TThreadExecutor`. With current master, the following snipet produces 0 and depending on compiler can also give `munmap_chunk(): invalid pointer` followed by `SIGABRT`:. ```C++. #include ""ROOT/TThreadExecutor.hxx"". #include ""ROOT/TSeq.hxx"". #include <iostream>. int main(){. auto func = [&](long int x)->long int { return x; };. auto redfunc = [](const std::vector<long int> &v){return std::accumulate(v.begin(), v.end(), 0l);};. ROOT::TThreadExecutor t(1);. std::cout << t.MapReduce(func, ROOT::TSeq<long int>(2, 4), redfunc) << '\n'; // expected result: 2 + 3 = 5. return 0;. }. ```. Moreover, when range is specified there is seg fault produced. # Partial Solution:. Looking with `gdb` I saw that in the reduction step, there is a call inside `TThreadExecutor.hxx:270`:. ```C++. unsigned start = *args.begin();. unsigned end = *args.end();. unsigned seqStep = args.step();. using retType = decltype(func(start));. std::vector<retType> reslist(args.size());. . auto lambda = [&](unsigned int i). {. reslist[i] = func(i);. };. ParallelFor(start, end, seqStep, lambda);. ``` . This assumes that the TSeq always starts with 0 and has step size 1. . To properly handle TSeq for MapReduce need to have:. ```C++. auto lambda = [&](unsigned int i). {. reslist[i] = func(args[i]);. };. ParallelFor(0U, args.size(), 1, lambda); // this calls tbb::parallel_for(start, end, step, f). // tbb::parallel_for expects as args: 1.starting idx, 2. end index, 3. step size, 4. func. // docs: https://spec.oneapi.io/versions/1.1-rev-1/elements/oneTBB/source/algorithms/functions/parallel_for_func.html. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10404
https://github.com/root-project/root/issues/10404:331,deployability,depend,depending,331,"Broken interaction between `TThreadExecutor` and `TSeq` with specified beginning/range; # Problem:. `TThreadExecutor` expects that `TSeq`-s always start with 0 and have step 1. Otherwise, it will give wrong result for `Foreach`, `MapReduce`, `Map` of the `TThreadExecutor`. With current master, the following snipet produces 0 and depending on compiler can also give `munmap_chunk(): invalid pointer` followed by `SIGABRT`:. ```C++. #include ""ROOT/TThreadExecutor.hxx"". #include ""ROOT/TSeq.hxx"". #include <iostream>. int main(){. auto func = [&](long int x)->long int { return x; };. auto redfunc = [](const std::vector<long int> &v){return std::accumulate(v.begin(), v.end(), 0l);};. ROOT::TThreadExecutor t(1);. std::cout << t.MapReduce(func, ROOT::TSeq<long int>(2, 4), redfunc) << '\n'; // expected result: 2 + 3 = 5. return 0;. }. ```. Moreover, when range is specified there is seg fault produced. # Partial Solution:. Looking with `gdb` I saw that in the reduction step, there is a call inside `TThreadExecutor.hxx:270`:. ```C++. unsigned start = *args.begin();. unsigned end = *args.end();. unsigned seqStep = args.step();. using retType = decltype(func(start));. std::vector<retType> reslist(args.size());. . auto lambda = [&](unsigned int i). {. reslist[i] = func(i);. };. ParallelFor(start, end, seqStep, lambda);. ``` . This assumes that the TSeq always starts with 0 and has step size 1. . To properly handle TSeq for MapReduce need to have:. ```C++. auto lambda = [&](unsigned int i). {. reslist[i] = func(args[i]);. };. ParallelFor(0U, args.size(), 1, lambda); // this calls tbb::parallel_for(start, end, step, f). // tbb::parallel_for expects as args: 1.starting idx, 2. end index, 3. step size, 4. func. // docs: https://spec.oneapi.io/versions/1.1-rev-1/elements/oneTBB/source/algorithms/functions/parallel_for_func.html. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10404
https://github.com/root-project/root/issues/10404:1753,deployability,version,versions,1753,"Broken interaction between `TThreadExecutor` and `TSeq` with specified beginning/range; # Problem:. `TThreadExecutor` expects that `TSeq`-s always start with 0 and have step 1. Otherwise, it will give wrong result for `Foreach`, `MapReduce`, `Map` of the `TThreadExecutor`. With current master, the following snipet produces 0 and depending on compiler can also give `munmap_chunk(): invalid pointer` followed by `SIGABRT`:. ```C++. #include ""ROOT/TThreadExecutor.hxx"". #include ""ROOT/TSeq.hxx"". #include <iostream>. int main(){. auto func = [&](long int x)->long int { return x; };. auto redfunc = [](const std::vector<long int> &v){return std::accumulate(v.begin(), v.end(), 0l);};. ROOT::TThreadExecutor t(1);. std::cout << t.MapReduce(func, ROOT::TSeq<long int>(2, 4), redfunc) << '\n'; // expected result: 2 + 3 = 5. return 0;. }. ```. Moreover, when range is specified there is seg fault produced. # Partial Solution:. Looking with `gdb` I saw that in the reduction step, there is a call inside `TThreadExecutor.hxx:270`:. ```C++. unsigned start = *args.begin();. unsigned end = *args.end();. unsigned seqStep = args.step();. using retType = decltype(func(start));. std::vector<retType> reslist(args.size());. . auto lambda = [&](unsigned int i). {. reslist[i] = func(i);. };. ParallelFor(start, end, seqStep, lambda);. ``` . This assumes that the TSeq always starts with 0 and has step size 1. . To properly handle TSeq for MapReduce need to have:. ```C++. auto lambda = [&](unsigned int i). {. reslist[i] = func(args[i]);. };. ParallelFor(0U, args.size(), 1, lambda); // this calls tbb::parallel_for(start, end, step, f). // tbb::parallel_for expects as args: 1.starting idx, 2. end index, 3. step size, 4. func. // docs: https://spec.oneapi.io/versions/1.1-rev-1/elements/oneTBB/source/algorithms/functions/parallel_for_func.html. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10404
https://github.com/root-project/root/issues/10404:279,energy efficiency,current,current,279,"Broken interaction between `TThreadExecutor` and `TSeq` with specified beginning/range; # Problem:. `TThreadExecutor` expects that `TSeq`-s always start with 0 and have step 1. Otherwise, it will give wrong result for `Foreach`, `MapReduce`, `Map` of the `TThreadExecutor`. With current master, the following snipet produces 0 and depending on compiler can also give `munmap_chunk(): invalid pointer` followed by `SIGABRT`:. ```C++. #include ""ROOT/TThreadExecutor.hxx"". #include ""ROOT/TSeq.hxx"". #include <iostream>. int main(){. auto func = [&](long int x)->long int { return x; };. auto redfunc = [](const std::vector<long int> &v){return std::accumulate(v.begin(), v.end(), 0l);};. ROOT::TThreadExecutor t(1);. std::cout << t.MapReduce(func, ROOT::TSeq<long int>(2, 4), redfunc) << '\n'; // expected result: 2 + 3 = 5. return 0;. }. ```. Moreover, when range is specified there is seg fault produced. # Partial Solution:. Looking with `gdb` I saw that in the reduction step, there is a call inside `TThreadExecutor.hxx:270`:. ```C++. unsigned start = *args.begin();. unsigned end = *args.end();. unsigned seqStep = args.step();. using retType = decltype(func(start));. std::vector<retType> reslist(args.size());. . auto lambda = [&](unsigned int i). {. reslist[i] = func(i);. };. ParallelFor(start, end, seqStep, lambda);. ``` . This assumes that the TSeq always starts with 0 and has step size 1. . To properly handle TSeq for MapReduce need to have:. ```C++. auto lambda = [&](unsigned int i). {. reslist[i] = func(args[i]);. };. ParallelFor(0U, args.size(), 1, lambda); // this calls tbb::parallel_for(start, end, step, f). // tbb::parallel_for expects as args: 1.starting idx, 2. end index, 3. step size, 4. func. // docs: https://spec.oneapi.io/versions/1.1-rev-1/elements/oneTBB/source/algorithms/functions/parallel_for_func.html. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10404
https://github.com/root-project/root/issues/10404:888,energy efficiency,fault,fault,888,"Broken interaction between `TThreadExecutor` and `TSeq` with specified beginning/range; # Problem:. `TThreadExecutor` expects that `TSeq`-s always start with 0 and have step 1. Otherwise, it will give wrong result for `Foreach`, `MapReduce`, `Map` of the `TThreadExecutor`. With current master, the following snipet produces 0 and depending on compiler can also give `munmap_chunk(): invalid pointer` followed by `SIGABRT`:. ```C++. #include ""ROOT/TThreadExecutor.hxx"". #include ""ROOT/TSeq.hxx"". #include <iostream>. int main(){. auto func = [&](long int x)->long int { return x; };. auto redfunc = [](const std::vector<long int> &v){return std::accumulate(v.begin(), v.end(), 0l);};. ROOT::TThreadExecutor t(1);. std::cout << t.MapReduce(func, ROOT::TSeq<long int>(2, 4), redfunc) << '\n'; // expected result: 2 + 3 = 5. return 0;. }. ```. Moreover, when range is specified there is seg fault produced. # Partial Solution:. Looking with `gdb` I saw that in the reduction step, there is a call inside `TThreadExecutor.hxx:270`:. ```C++. unsigned start = *args.begin();. unsigned end = *args.end();. unsigned seqStep = args.step();. using retType = decltype(func(start));. std::vector<retType> reslist(args.size());. . auto lambda = [&](unsigned int i). {. reslist[i] = func(i);. };. ParallelFor(start, end, seqStep, lambda);. ``` . This assumes that the TSeq always starts with 0 and has step size 1. . To properly handle TSeq for MapReduce need to have:. ```C++. auto lambda = [&](unsigned int i). {. reslist[i] = func(args[i]);. };. ParallelFor(0U, args.size(), 1, lambda); // this calls tbb::parallel_for(start, end, step, f). // tbb::parallel_for expects as args: 1.starting idx, 2. end index, 3. step size, 4. func. // docs: https://spec.oneapi.io/versions/1.1-rev-1/elements/oneTBB/source/algorithms/functions/parallel_for_func.html. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10404
https://github.com/root-project/root/issues/10404:962,energy efficiency,reduc,reduction,962,"Broken interaction between `TThreadExecutor` and `TSeq` with specified beginning/range; # Problem:. `TThreadExecutor` expects that `TSeq`-s always start with 0 and have step 1. Otherwise, it will give wrong result for `Foreach`, `MapReduce`, `Map` of the `TThreadExecutor`. With current master, the following snipet produces 0 and depending on compiler can also give `munmap_chunk(): invalid pointer` followed by `SIGABRT`:. ```C++. #include ""ROOT/TThreadExecutor.hxx"". #include ""ROOT/TSeq.hxx"". #include <iostream>. int main(){. auto func = [&](long int x)->long int { return x; };. auto redfunc = [](const std::vector<long int> &v){return std::accumulate(v.begin(), v.end(), 0l);};. ROOT::TThreadExecutor t(1);. std::cout << t.MapReduce(func, ROOT::TSeq<long int>(2, 4), redfunc) << '\n'; // expected result: 2 + 3 = 5. return 0;. }. ```. Moreover, when range is specified there is seg fault produced. # Partial Solution:. Looking with `gdb` I saw that in the reduction step, there is a call inside `TThreadExecutor.hxx:270`:. ```C++. unsigned start = *args.begin();. unsigned end = *args.end();. unsigned seqStep = args.step();. using retType = decltype(func(start));. std::vector<retType> reslist(args.size());. . auto lambda = [&](unsigned int i). {. reslist[i] = func(i);. };. ParallelFor(start, end, seqStep, lambda);. ``` . This assumes that the TSeq always starts with 0 and has step size 1. . To properly handle TSeq for MapReduce need to have:. ```C++. auto lambda = [&](unsigned int i). {. reslist[i] = func(args[i]);. };. ParallelFor(0U, args.size(), 1, lambda); // this calls tbb::parallel_for(start, end, step, f). // tbb::parallel_for expects as args: 1.starting idx, 2. end index, 3. step size, 4. func. // docs: https://spec.oneapi.io/versions/1.1-rev-1/elements/oneTBB/source/algorithms/functions/parallel_for_func.html. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10404
https://github.com/root-project/root/issues/10404:331,integrability,depend,depending,331,"Broken interaction between `TThreadExecutor` and `TSeq` with specified beginning/range; # Problem:. `TThreadExecutor` expects that `TSeq`-s always start with 0 and have step 1. Otherwise, it will give wrong result for `Foreach`, `MapReduce`, `Map` of the `TThreadExecutor`. With current master, the following snipet produces 0 and depending on compiler can also give `munmap_chunk(): invalid pointer` followed by `SIGABRT`:. ```C++. #include ""ROOT/TThreadExecutor.hxx"". #include ""ROOT/TSeq.hxx"". #include <iostream>. int main(){. auto func = [&](long int x)->long int { return x; };. auto redfunc = [](const std::vector<long int> &v){return std::accumulate(v.begin(), v.end(), 0l);};. ROOT::TThreadExecutor t(1);. std::cout << t.MapReduce(func, ROOT::TSeq<long int>(2, 4), redfunc) << '\n'; // expected result: 2 + 3 = 5. return 0;. }. ```. Moreover, when range is specified there is seg fault produced. # Partial Solution:. Looking with `gdb` I saw that in the reduction step, there is a call inside `TThreadExecutor.hxx:270`:. ```C++. unsigned start = *args.begin();. unsigned end = *args.end();. unsigned seqStep = args.step();. using retType = decltype(func(start));. std::vector<retType> reslist(args.size());. . auto lambda = [&](unsigned int i). {. reslist[i] = func(i);. };. ParallelFor(start, end, seqStep, lambda);. ``` . This assumes that the TSeq always starts with 0 and has step size 1. . To properly handle TSeq for MapReduce need to have:. ```C++. auto lambda = [&](unsigned int i). {. reslist[i] = func(args[i]);. };. ParallelFor(0U, args.size(), 1, lambda); // this calls tbb::parallel_for(start, end, step, f). // tbb::parallel_for expects as args: 1.starting idx, 2. end index, 3. step size, 4. func. // docs: https://spec.oneapi.io/versions/1.1-rev-1/elements/oneTBB/source/algorithms/functions/parallel_for_func.html. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10404
https://github.com/root-project/root/issues/10404:1753,integrability,version,versions,1753,"Broken interaction between `TThreadExecutor` and `TSeq` with specified beginning/range; # Problem:. `TThreadExecutor` expects that `TSeq`-s always start with 0 and have step 1. Otherwise, it will give wrong result for `Foreach`, `MapReduce`, `Map` of the `TThreadExecutor`. With current master, the following snipet produces 0 and depending on compiler can also give `munmap_chunk(): invalid pointer` followed by `SIGABRT`:. ```C++. #include ""ROOT/TThreadExecutor.hxx"". #include ""ROOT/TSeq.hxx"". #include <iostream>. int main(){. auto func = [&](long int x)->long int { return x; };. auto redfunc = [](const std::vector<long int> &v){return std::accumulate(v.begin(), v.end(), 0l);};. ROOT::TThreadExecutor t(1);. std::cout << t.MapReduce(func, ROOT::TSeq<long int>(2, 4), redfunc) << '\n'; // expected result: 2 + 3 = 5. return 0;. }. ```. Moreover, when range is specified there is seg fault produced. # Partial Solution:. Looking with `gdb` I saw that in the reduction step, there is a call inside `TThreadExecutor.hxx:270`:. ```C++. unsigned start = *args.begin();. unsigned end = *args.end();. unsigned seqStep = args.step();. using retType = decltype(func(start));. std::vector<retType> reslist(args.size());. . auto lambda = [&](unsigned int i). {. reslist[i] = func(i);. };. ParallelFor(start, end, seqStep, lambda);. ``` . This assumes that the TSeq always starts with 0 and has step size 1. . To properly handle TSeq for MapReduce need to have:. ```C++. auto lambda = [&](unsigned int i). {. reslist[i] = func(args[i]);. };. ParallelFor(0U, args.size(), 1, lambda); // this calls tbb::parallel_for(start, end, step, f). // tbb::parallel_for expects as args: 1.starting idx, 2. end index, 3. step size, 4. func. // docs: https://spec.oneapi.io/versions/1.1-rev-1/elements/oneTBB/source/algorithms/functions/parallel_for_func.html. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10404
https://github.com/root-project/root/issues/10404:61,interoperability,specif,specified,61,"Broken interaction between `TThreadExecutor` and `TSeq` with specified beginning/range; # Problem:. `TThreadExecutor` expects that `TSeq`-s always start with 0 and have step 1. Otherwise, it will give wrong result for `Foreach`, `MapReduce`, `Map` of the `TThreadExecutor`. With current master, the following snipet produces 0 and depending on compiler can also give `munmap_chunk(): invalid pointer` followed by `SIGABRT`:. ```C++. #include ""ROOT/TThreadExecutor.hxx"". #include ""ROOT/TSeq.hxx"". #include <iostream>. int main(){. auto func = [&](long int x)->long int { return x; };. auto redfunc = [](const std::vector<long int> &v){return std::accumulate(v.begin(), v.end(), 0l);};. ROOT::TThreadExecutor t(1);. std::cout << t.MapReduce(func, ROOT::TSeq<long int>(2, 4), redfunc) << '\n'; // expected result: 2 + 3 = 5. return 0;. }. ```. Moreover, when range is specified there is seg fault produced. # Partial Solution:. Looking with `gdb` I saw that in the reduction step, there is a call inside `TThreadExecutor.hxx:270`:. ```C++. unsigned start = *args.begin();. unsigned end = *args.end();. unsigned seqStep = args.step();. using retType = decltype(func(start));. std::vector<retType> reslist(args.size());. . auto lambda = [&](unsigned int i). {. reslist[i] = func(i);. };. ParallelFor(start, end, seqStep, lambda);. ``` . This assumes that the TSeq always starts with 0 and has step size 1. . To properly handle TSeq for MapReduce need to have:. ```C++. auto lambda = [&](unsigned int i). {. reslist[i] = func(args[i]);. };. ParallelFor(0U, args.size(), 1, lambda); // this calls tbb::parallel_for(start, end, step, f). // tbb::parallel_for expects as args: 1.starting idx, 2. end index, 3. step size, 4. func. // docs: https://spec.oneapi.io/versions/1.1-rev-1/elements/oneTBB/source/algorithms/functions/parallel_for_func.html. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10404
https://github.com/root-project/root/issues/10404:865,interoperability,specif,specified,865,"Broken interaction between `TThreadExecutor` and `TSeq` with specified beginning/range; # Problem:. `TThreadExecutor` expects that `TSeq`-s always start with 0 and have step 1. Otherwise, it will give wrong result for `Foreach`, `MapReduce`, `Map` of the `TThreadExecutor`. With current master, the following snipet produces 0 and depending on compiler can also give `munmap_chunk(): invalid pointer` followed by `SIGABRT`:. ```C++. #include ""ROOT/TThreadExecutor.hxx"". #include ""ROOT/TSeq.hxx"". #include <iostream>. int main(){. auto func = [&](long int x)->long int { return x; };. auto redfunc = [](const std::vector<long int> &v){return std::accumulate(v.begin(), v.end(), 0l);};. ROOT::TThreadExecutor t(1);. std::cout << t.MapReduce(func, ROOT::TSeq<long int>(2, 4), redfunc) << '\n'; // expected result: 2 + 3 = 5. return 0;. }. ```. Moreover, when range is specified there is seg fault produced. # Partial Solution:. Looking with `gdb` I saw that in the reduction step, there is a call inside `TThreadExecutor.hxx:270`:. ```C++. unsigned start = *args.begin();. unsigned end = *args.end();. unsigned seqStep = args.step();. using retType = decltype(func(start));. std::vector<retType> reslist(args.size());. . auto lambda = [&](unsigned int i). {. reslist[i] = func(i);. };. ParallelFor(start, end, seqStep, lambda);. ``` . This assumes that the TSeq always starts with 0 and has step size 1. . To properly handle TSeq for MapReduce need to have:. ```C++. auto lambda = [&](unsigned int i). {. reslist[i] = func(args[i]);. };. ParallelFor(0U, args.size(), 1, lambda); // this calls tbb::parallel_for(start, end, step, f). // tbb::parallel_for expects as args: 1.starting idx, 2. end index, 3. step size, 4. func. // docs: https://spec.oneapi.io/versions/1.1-rev-1/elements/oneTBB/source/algorithms/functions/parallel_for_func.html. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10404
https://github.com/root-project/root/issues/10404:331,modifiability,depend,depending,331,"Broken interaction between `TThreadExecutor` and `TSeq` with specified beginning/range; # Problem:. `TThreadExecutor` expects that `TSeq`-s always start with 0 and have step 1. Otherwise, it will give wrong result for `Foreach`, `MapReduce`, `Map` of the `TThreadExecutor`. With current master, the following snipet produces 0 and depending on compiler can also give `munmap_chunk(): invalid pointer` followed by `SIGABRT`:. ```C++. #include ""ROOT/TThreadExecutor.hxx"". #include ""ROOT/TSeq.hxx"". #include <iostream>. int main(){. auto func = [&](long int x)->long int { return x; };. auto redfunc = [](const std::vector<long int> &v){return std::accumulate(v.begin(), v.end(), 0l);};. ROOT::TThreadExecutor t(1);. std::cout << t.MapReduce(func, ROOT::TSeq<long int>(2, 4), redfunc) << '\n'; // expected result: 2 + 3 = 5. return 0;. }. ```. Moreover, when range is specified there is seg fault produced. # Partial Solution:. Looking with `gdb` I saw that in the reduction step, there is a call inside `TThreadExecutor.hxx:270`:. ```C++. unsigned start = *args.begin();. unsigned end = *args.end();. unsigned seqStep = args.step();. using retType = decltype(func(start));. std::vector<retType> reslist(args.size());. . auto lambda = [&](unsigned int i). {. reslist[i] = func(i);. };. ParallelFor(start, end, seqStep, lambda);. ``` . This assumes that the TSeq always starts with 0 and has step size 1. . To properly handle TSeq for MapReduce need to have:. ```C++. auto lambda = [&](unsigned int i). {. reslist[i] = func(args[i]);. };. ParallelFor(0U, args.size(), 1, lambda); // this calls tbb::parallel_for(start, end, step, f). // tbb::parallel_for expects as args: 1.starting idx, 2. end index, 3. step size, 4. func. // docs: https://spec.oneapi.io/versions/1.1-rev-1/elements/oneTBB/source/algorithms/functions/parallel_for_func.html. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10404
https://github.com/root-project/root/issues/10404:1753,modifiability,version,versions,1753,"Broken interaction between `TThreadExecutor` and `TSeq` with specified beginning/range; # Problem:. `TThreadExecutor` expects that `TSeq`-s always start with 0 and have step 1. Otherwise, it will give wrong result for `Foreach`, `MapReduce`, `Map` of the `TThreadExecutor`. With current master, the following snipet produces 0 and depending on compiler can also give `munmap_chunk(): invalid pointer` followed by `SIGABRT`:. ```C++. #include ""ROOT/TThreadExecutor.hxx"". #include ""ROOT/TSeq.hxx"". #include <iostream>. int main(){. auto func = [&](long int x)->long int { return x; };. auto redfunc = [](const std::vector<long int> &v){return std::accumulate(v.begin(), v.end(), 0l);};. ROOT::TThreadExecutor t(1);. std::cout << t.MapReduce(func, ROOT::TSeq<long int>(2, 4), redfunc) << '\n'; // expected result: 2 + 3 = 5. return 0;. }. ```. Moreover, when range is specified there is seg fault produced. # Partial Solution:. Looking with `gdb` I saw that in the reduction step, there is a call inside `TThreadExecutor.hxx:270`:. ```C++. unsigned start = *args.begin();. unsigned end = *args.end();. unsigned seqStep = args.step();. using retType = decltype(func(start));. std::vector<retType> reslist(args.size());. . auto lambda = [&](unsigned int i). {. reslist[i] = func(i);. };. ParallelFor(start, end, seqStep, lambda);. ``` . This assumes that the TSeq always starts with 0 and has step size 1. . To properly handle TSeq for MapReduce need to have:. ```C++. auto lambda = [&](unsigned int i). {. reslist[i] = func(args[i]);. };. ParallelFor(0U, args.size(), 1, lambda); // this calls tbb::parallel_for(start, end, step, f). // tbb::parallel_for expects as args: 1.starting idx, 2. end index, 3. step size, 4. func. // docs: https://spec.oneapi.io/versions/1.1-rev-1/elements/oneTBB/source/algorithms/functions/parallel_for_func.html. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10404
https://github.com/root-project/root/issues/10404:888,performance,fault,fault,888,"Broken interaction between `TThreadExecutor` and `TSeq` with specified beginning/range; # Problem:. `TThreadExecutor` expects that `TSeq`-s always start with 0 and have step 1. Otherwise, it will give wrong result for `Foreach`, `MapReduce`, `Map` of the `TThreadExecutor`. With current master, the following snipet produces 0 and depending on compiler can also give `munmap_chunk(): invalid pointer` followed by `SIGABRT`:. ```C++. #include ""ROOT/TThreadExecutor.hxx"". #include ""ROOT/TSeq.hxx"". #include <iostream>. int main(){. auto func = [&](long int x)->long int { return x; };. auto redfunc = [](const std::vector<long int> &v){return std::accumulate(v.begin(), v.end(), 0l);};. ROOT::TThreadExecutor t(1);. std::cout << t.MapReduce(func, ROOT::TSeq<long int>(2, 4), redfunc) << '\n'; // expected result: 2 + 3 = 5. return 0;. }. ```. Moreover, when range is specified there is seg fault produced. # Partial Solution:. Looking with `gdb` I saw that in the reduction step, there is a call inside `TThreadExecutor.hxx:270`:. ```C++. unsigned start = *args.begin();. unsigned end = *args.end();. unsigned seqStep = args.step();. using retType = decltype(func(start));. std::vector<retType> reslist(args.size());. . auto lambda = [&](unsigned int i). {. reslist[i] = func(i);. };. ParallelFor(start, end, seqStep, lambda);. ``` . This assumes that the TSeq always starts with 0 and has step size 1. . To properly handle TSeq for MapReduce need to have:. ```C++. auto lambda = [&](unsigned int i). {. reslist[i] = func(args[i]);. };. ParallelFor(0U, args.size(), 1, lambda); // this calls tbb::parallel_for(start, end, step, f). // tbb::parallel_for expects as args: 1.starting idx, 2. end index, 3. step size, 4. func. // docs: https://spec.oneapi.io/versions/1.1-rev-1/elements/oneTBB/source/algorithms/functions/parallel_for_func.html. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10404
https://github.com/root-project/root/issues/10404:1283,performance,Parallel,ParallelFor,1283,"Broken interaction between `TThreadExecutor` and `TSeq` with specified beginning/range; # Problem:. `TThreadExecutor` expects that `TSeq`-s always start with 0 and have step 1. Otherwise, it will give wrong result for `Foreach`, `MapReduce`, `Map` of the `TThreadExecutor`. With current master, the following snipet produces 0 and depending on compiler can also give `munmap_chunk(): invalid pointer` followed by `SIGABRT`:. ```C++. #include ""ROOT/TThreadExecutor.hxx"". #include ""ROOT/TSeq.hxx"". #include <iostream>. int main(){. auto func = [&](long int x)->long int { return x; };. auto redfunc = [](const std::vector<long int> &v){return std::accumulate(v.begin(), v.end(), 0l);};. ROOT::TThreadExecutor t(1);. std::cout << t.MapReduce(func, ROOT::TSeq<long int>(2, 4), redfunc) << '\n'; // expected result: 2 + 3 = 5. return 0;. }. ```. Moreover, when range is specified there is seg fault produced. # Partial Solution:. Looking with `gdb` I saw that in the reduction step, there is a call inside `TThreadExecutor.hxx:270`:. ```C++. unsigned start = *args.begin();. unsigned end = *args.end();. unsigned seqStep = args.step();. using retType = decltype(func(start));. std::vector<retType> reslist(args.size());. . auto lambda = [&](unsigned int i). {. reslist[i] = func(i);. };. ParallelFor(start, end, seqStep, lambda);. ``` . This assumes that the TSeq always starts with 0 and has step size 1. . To properly handle TSeq for MapReduce need to have:. ```C++. auto lambda = [&](unsigned int i). {. reslist[i] = func(args[i]);. };. ParallelFor(0U, args.size(), 1, lambda); // this calls tbb::parallel_for(start, end, step, f). // tbb::parallel_for expects as args: 1.starting idx, 2. end index, 3. step size, 4. func. // docs: https://spec.oneapi.io/versions/1.1-rev-1/elements/oneTBB/source/algorithms/functions/parallel_for_func.html. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10404
https://github.com/root-project/root/issues/10404:1535,performance,Parallel,ParallelFor,1535,"Broken interaction between `TThreadExecutor` and `TSeq` with specified beginning/range; # Problem:. `TThreadExecutor` expects that `TSeq`-s always start with 0 and have step 1. Otherwise, it will give wrong result for `Foreach`, `MapReduce`, `Map` of the `TThreadExecutor`. With current master, the following snipet produces 0 and depending on compiler can also give `munmap_chunk(): invalid pointer` followed by `SIGABRT`:. ```C++. #include ""ROOT/TThreadExecutor.hxx"". #include ""ROOT/TSeq.hxx"". #include <iostream>. int main(){. auto func = [&](long int x)->long int { return x; };. auto redfunc = [](const std::vector<long int> &v){return std::accumulate(v.begin(), v.end(), 0l);};. ROOT::TThreadExecutor t(1);. std::cout << t.MapReduce(func, ROOT::TSeq<long int>(2, 4), redfunc) << '\n'; // expected result: 2 + 3 = 5. return 0;. }. ```. Moreover, when range is specified there is seg fault produced. # Partial Solution:. Looking with `gdb` I saw that in the reduction step, there is a call inside `TThreadExecutor.hxx:270`:. ```C++. unsigned start = *args.begin();. unsigned end = *args.end();. unsigned seqStep = args.step();. using retType = decltype(func(start));. std::vector<retType> reslist(args.size());. . auto lambda = [&](unsigned int i). {. reslist[i] = func(i);. };. ParallelFor(start, end, seqStep, lambda);. ``` . This assumes that the TSeq always starts with 0 and has step size 1. . To properly handle TSeq for MapReduce need to have:. ```C++. auto lambda = [&](unsigned int i). {. reslist[i] = func(args[i]);. };. ParallelFor(0U, args.size(), 1, lambda); // this calls tbb::parallel_for(start, end, step, f). // tbb::parallel_for expects as args: 1.starting idx, 2. end index, 3. step size, 4. func. // docs: https://spec.oneapi.io/versions/1.1-rev-1/elements/oneTBB/source/algorithms/functions/parallel_for_func.html. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10404
https://github.com/root-project/root/issues/10404:888,reliability,fault,fault,888,"Broken interaction between `TThreadExecutor` and `TSeq` with specified beginning/range; # Problem:. `TThreadExecutor` expects that `TSeq`-s always start with 0 and have step 1. Otherwise, it will give wrong result for `Foreach`, `MapReduce`, `Map` of the `TThreadExecutor`. With current master, the following snipet produces 0 and depending on compiler can also give `munmap_chunk(): invalid pointer` followed by `SIGABRT`:. ```C++. #include ""ROOT/TThreadExecutor.hxx"". #include ""ROOT/TSeq.hxx"". #include <iostream>. int main(){. auto func = [&](long int x)->long int { return x; };. auto redfunc = [](const std::vector<long int> &v){return std::accumulate(v.begin(), v.end(), 0l);};. ROOT::TThreadExecutor t(1);. std::cout << t.MapReduce(func, ROOT::TSeq<long int>(2, 4), redfunc) << '\n'; // expected result: 2 + 3 = 5. return 0;. }. ```. Moreover, when range is specified there is seg fault produced. # Partial Solution:. Looking with `gdb` I saw that in the reduction step, there is a call inside `TThreadExecutor.hxx:270`:. ```C++. unsigned start = *args.begin();. unsigned end = *args.end();. unsigned seqStep = args.step();. using retType = decltype(func(start));. std::vector<retType> reslist(args.size());. . auto lambda = [&](unsigned int i). {. reslist[i] = func(i);. };. ParallelFor(start, end, seqStep, lambda);. ``` . This assumes that the TSeq always starts with 0 and has step size 1. . To properly handle TSeq for MapReduce need to have:. ```C++. auto lambda = [&](unsigned int i). {. reslist[i] = func(args[i]);. };. ParallelFor(0U, args.size(), 1, lambda); // this calls tbb::parallel_for(start, end, step, f). // tbb::parallel_for expects as args: 1.starting idx, 2. end index, 3. step size, 4. func. // docs: https://spec.oneapi.io/versions/1.1-rev-1/elements/oneTBB/source/algorithms/functions/parallel_for_func.html. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10404
https://github.com/root-project/root/issues/10404:331,safety,depend,depending,331,"Broken interaction between `TThreadExecutor` and `TSeq` with specified beginning/range; # Problem:. `TThreadExecutor` expects that `TSeq`-s always start with 0 and have step 1. Otherwise, it will give wrong result for `Foreach`, `MapReduce`, `Map` of the `TThreadExecutor`. With current master, the following snipet produces 0 and depending on compiler can also give `munmap_chunk(): invalid pointer` followed by `SIGABRT`:. ```C++. #include ""ROOT/TThreadExecutor.hxx"". #include ""ROOT/TSeq.hxx"". #include <iostream>. int main(){. auto func = [&](long int x)->long int { return x; };. auto redfunc = [](const std::vector<long int> &v){return std::accumulate(v.begin(), v.end(), 0l);};. ROOT::TThreadExecutor t(1);. std::cout << t.MapReduce(func, ROOT::TSeq<long int>(2, 4), redfunc) << '\n'; // expected result: 2 + 3 = 5. return 0;. }. ```. Moreover, when range is specified there is seg fault produced. # Partial Solution:. Looking with `gdb` I saw that in the reduction step, there is a call inside `TThreadExecutor.hxx:270`:. ```C++. unsigned start = *args.begin();. unsigned end = *args.end();. unsigned seqStep = args.step();. using retType = decltype(func(start));. std::vector<retType> reslist(args.size());. . auto lambda = [&](unsigned int i). {. reslist[i] = func(i);. };. ParallelFor(start, end, seqStep, lambda);. ``` . This assumes that the TSeq always starts with 0 and has step size 1. . To properly handle TSeq for MapReduce need to have:. ```C++. auto lambda = [&](unsigned int i). {. reslist[i] = func(args[i]);. };. ParallelFor(0U, args.size(), 1, lambda); // this calls tbb::parallel_for(start, end, step, f). // tbb::parallel_for expects as args: 1.starting idx, 2. end index, 3. step size, 4. func. // docs: https://spec.oneapi.io/versions/1.1-rev-1/elements/oneTBB/source/algorithms/functions/parallel_for_func.html. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10404
https://github.com/root-project/root/issues/10404:888,safety,fault,fault,888,"Broken interaction between `TThreadExecutor` and `TSeq` with specified beginning/range; # Problem:. `TThreadExecutor` expects that `TSeq`-s always start with 0 and have step 1. Otherwise, it will give wrong result for `Foreach`, `MapReduce`, `Map` of the `TThreadExecutor`. With current master, the following snipet produces 0 and depending on compiler can also give `munmap_chunk(): invalid pointer` followed by `SIGABRT`:. ```C++. #include ""ROOT/TThreadExecutor.hxx"". #include ""ROOT/TSeq.hxx"". #include <iostream>. int main(){. auto func = [&](long int x)->long int { return x; };. auto redfunc = [](const std::vector<long int> &v){return std::accumulate(v.begin(), v.end(), 0l);};. ROOT::TThreadExecutor t(1);. std::cout << t.MapReduce(func, ROOT::TSeq<long int>(2, 4), redfunc) << '\n'; // expected result: 2 + 3 = 5. return 0;. }. ```. Moreover, when range is specified there is seg fault produced. # Partial Solution:. Looking with `gdb` I saw that in the reduction step, there is a call inside `TThreadExecutor.hxx:270`:. ```C++. unsigned start = *args.begin();. unsigned end = *args.end();. unsigned seqStep = args.step();. using retType = decltype(func(start));. std::vector<retType> reslist(args.size());. . auto lambda = [&](unsigned int i). {. reslist[i] = func(i);. };. ParallelFor(start, end, seqStep, lambda);. ``` . This assumes that the TSeq always starts with 0 and has step size 1. . To properly handle TSeq for MapReduce need to have:. ```C++. auto lambda = [&](unsigned int i). {. reslist[i] = func(args[i]);. };. ParallelFor(0U, args.size(), 1, lambda); // this calls tbb::parallel_for(start, end, step, f). // tbb::parallel_for expects as args: 1.starting idx, 2. end index, 3. step size, 4. func. // docs: https://spec.oneapi.io/versions/1.1-rev-1/elements/oneTBB/source/algorithms/functions/parallel_for_func.html. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10404
https://github.com/root-project/root/issues/10404:331,testability,depend,depending,331,"Broken interaction between `TThreadExecutor` and `TSeq` with specified beginning/range; # Problem:. `TThreadExecutor` expects that `TSeq`-s always start with 0 and have step 1. Otherwise, it will give wrong result for `Foreach`, `MapReduce`, `Map` of the `TThreadExecutor`. With current master, the following snipet produces 0 and depending on compiler can also give `munmap_chunk(): invalid pointer` followed by `SIGABRT`:. ```C++. #include ""ROOT/TThreadExecutor.hxx"". #include ""ROOT/TSeq.hxx"". #include <iostream>. int main(){. auto func = [&](long int x)->long int { return x; };. auto redfunc = [](const std::vector<long int> &v){return std::accumulate(v.begin(), v.end(), 0l);};. ROOT::TThreadExecutor t(1);. std::cout << t.MapReduce(func, ROOT::TSeq<long int>(2, 4), redfunc) << '\n'; // expected result: 2 + 3 = 5. return 0;. }. ```. Moreover, when range is specified there is seg fault produced. # Partial Solution:. Looking with `gdb` I saw that in the reduction step, there is a call inside `TThreadExecutor.hxx:270`:. ```C++. unsigned start = *args.begin();. unsigned end = *args.end();. unsigned seqStep = args.step();. using retType = decltype(func(start));. std::vector<retType> reslist(args.size());. . auto lambda = [&](unsigned int i). {. reslist[i] = func(i);. };. ParallelFor(start, end, seqStep, lambda);. ``` . This assumes that the TSeq always starts with 0 and has step size 1. . To properly handle TSeq for MapReduce need to have:. ```C++. auto lambda = [&](unsigned int i). {. reslist[i] = func(args[i]);. };. ParallelFor(0U, args.size(), 1, lambda); // this calls tbb::parallel_for(start, end, step, f). // tbb::parallel_for expects as args: 1.starting idx, 2. end index, 3. step size, 4. func. // docs: https://spec.oneapi.io/versions/1.1-rev-1/elements/oneTBB/source/algorithms/functions/parallel_for_func.html. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10404
https://github.com/root-project/root/issues/10404:7,usability,interact,interaction,7,"Broken interaction between `TThreadExecutor` and `TSeq` with specified beginning/range; # Problem:. `TThreadExecutor` expects that `TSeq`-s always start with 0 and have step 1. Otherwise, it will give wrong result for `Foreach`, `MapReduce`, `Map` of the `TThreadExecutor`. With current master, the following snipet produces 0 and depending on compiler can also give `munmap_chunk(): invalid pointer` followed by `SIGABRT`:. ```C++. #include ""ROOT/TThreadExecutor.hxx"". #include ""ROOT/TSeq.hxx"". #include <iostream>. int main(){. auto func = [&](long int x)->long int { return x; };. auto redfunc = [](const std::vector<long int> &v){return std::accumulate(v.begin(), v.end(), 0l);};. ROOT::TThreadExecutor t(1);. std::cout << t.MapReduce(func, ROOT::TSeq<long int>(2, 4), redfunc) << '\n'; // expected result: 2 + 3 = 5. return 0;. }. ```. Moreover, when range is specified there is seg fault produced. # Partial Solution:. Looking with `gdb` I saw that in the reduction step, there is a call inside `TThreadExecutor.hxx:270`:. ```C++. unsigned start = *args.begin();. unsigned end = *args.end();. unsigned seqStep = args.step();. using retType = decltype(func(start));. std::vector<retType> reslist(args.size());. . auto lambda = [&](unsigned int i). {. reslist[i] = func(i);. };. ParallelFor(start, end, seqStep, lambda);. ``` . This assumes that the TSeq always starts with 0 and has step size 1. . To properly handle TSeq for MapReduce need to have:. ```C++. auto lambda = [&](unsigned int i). {. reslist[i] = func(args[i]);. };. ParallelFor(0U, args.size(), 1, lambda); // this calls tbb::parallel_for(start, end, step, f). // tbb::parallel_for expects as args: 1.starting idx, 2. end index, 3. step size, 4. func. // docs: https://spec.oneapi.io/versions/1.1-rev-1/elements/oneTBB/source/algorithms/functions/parallel_for_func.html. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10404
https://github.com/root-project/root/pull/10405:5,availability,Consist,Consistent,5,"[RF] Consistent behavior of `RooAbsData::createHistogram` overloads; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To get consistent behavior, this commit suggests to change the default. behavior of the overload with integer bin numbers also to using the. binning in the variable. The automatic binning can still be enabled by. passing a negative bin number, which has been already the case before. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10405
https://github.com/root-project/root/pull/10405:821,availability,consist,consistent,821,"[RF] Consistent behavior of `RooAbsData::createHistogram` overloads; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To get consistent behavior, this commit suggests to change the default. behavior of the overload with integer bin numbers also to using the. binning in the variable. The automatic binning can still be enabled by. passing a negative bin number, which has been already the case before. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10405
https://github.com/root-project/root/pull/10405:204,deployability,version,version,204,"[RF] Consistent behavior of `RooAbsData::createHistogram` overloads; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To get consistent behavior, this commit suggests to change the default. behavior of the overload with integer bin numbers also to using the. binning in the variable. The automatic binning can still be enabled by. passing a negative bin number, which has been already the case before. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10405
https://github.com/root-project/root/pull/10405:636,deployability,automat,automatically,636,"[RF] Consistent behavior of `RooAbsData::createHistogram` overloads; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To get consistent behavior, this commit suggests to change the default. behavior of the overload with integer bin numbers also to using the. binning in the variable. The automatic binning can still be enabled by. passing a negative bin number, which has been already the case before. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10405
https://github.com/root-project/root/pull/10405:984,deployability,automat,automatic,984,"[RF] Consistent behavior of `RooAbsData::createHistogram` overloads; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To get consistent behavior, this commit suggests to change the default. behavior of the overload with integer bin numbers also to using the. binning in the variable. The automatic binning can still be enabled by. passing a negative bin number, which has been already the case before. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10405
https://github.com/root-project/root/pull/10405:204,integrability,version,version,204,"[RF] Consistent behavior of `RooAbsData::createHistogram` overloads; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To get consistent behavior, this commit suggests to change the default. behavior of the overload with integer bin numbers also to using the. binning in the variable. The automatic binning can still be enabled by. passing a negative bin number, which has been already the case before. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10405
https://github.com/root-project/root/pull/10405:659,interoperability,distribut,distribution,659,"[RF] Consistent behavior of `RooAbsData::createHistogram` overloads; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To get consistent behavior, this commit suggests to change the default. behavior of the overload with integer bin numbers also to using the. binning in the variable. The automatic binning can still be enabled by. passing a negative bin number, which has been already the case before. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10405
https://github.com/root-project/root/pull/10405:204,modifiability,version,version,204,"[RF] Consistent behavior of `RooAbsData::createHistogram` overloads; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To get consistent behavior, this commit suggests to change the default. behavior of the overload with integer bin numbers also to using the. binning in the variable. The automatic binning can still be enabled by. passing a negative bin number, which has been already the case before. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10405
https://github.com/root-project/root/pull/10405:319,modifiability,paramet,parameters,319,"[RF] Consistent behavior of `RooAbsData::createHistogram` overloads; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To get consistent behavior, this commit suggests to change the default. behavior of the overload with integer bin numbers also to using the. binning in the variable. The automatic binning can still be enabled by. passing a negative bin number, which has been already the case before. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10405
https://github.com/root-project/root/pull/10405:763,modifiability,variab,variable,763,"[RF] Consistent behavior of `RooAbsData::createHistogram` overloads; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To get consistent behavior, this commit suggests to change the default. behavior of the overload with integer bin numbers also to using the. binning in the variable. The automatic binning can still be enabled by. passing a negative bin number, which has been already the case before. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10405
https://github.com/root-project/root/pull/10405:970,modifiability,variab,variable,970,"[RF] Consistent behavior of `RooAbsData::createHistogram` overloads; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To get consistent behavior, this commit suggests to change the default. behavior of the overload with integer bin numbers also to using the. binning in the variable. The automatic binning can still be enabled by. passing a negative bin number, which has been already the case before. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10405
https://github.com/root-project/root/pull/10405:636,testability,automat,automatically,636,"[RF] Consistent behavior of `RooAbsData::createHistogram` overloads; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To get consistent behavior, this commit suggests to change the default. behavior of the overload with integer bin numbers also to using the. binning in the variable. The automatic binning can still be enabled by. passing a negative bin number, which has been already the case before. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10405
https://github.com/root-project/root/pull/10405:984,testability,automat,automatic,984,"[RF] Consistent behavior of `RooAbsData::createHistogram` overloads; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To get consistent behavior, this commit suggests to change the default. behavior of the overload with integer bin numbers also to using the. binning in the variable. The automatic binning can still be enabled by. passing a negative bin number, which has been already the case before. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10405
https://github.com/root-project/root/pull/10405:5,usability,Consist,Consistent,5,"[RF] Consistent behavior of `RooAbsData::createHistogram` overloads; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To get consistent behavior, this commit suggests to change the default. behavior of the overload with integer bin numbers also to using the. binning in the variable. The automatic binning can still be enabled by. passing a negative bin number, which has been already the case before. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10405
https://github.com/root-project/root/pull/10405:16,usability,behavi,behavior,16,"[RF] Consistent behavior of `RooAbsData::createHistogram` overloads; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To get consistent behavior, this commit suggests to change the default. behavior of the overload with integer bin numbers also to using the. binning in the variable. The automatic binning can still be enabled by. passing a negative bin number, which has been already the case before. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10405
https://github.com/root-project/root/pull/10405:141,usability,command,command,141,"[RF] Consistent behavior of `RooAbsData::createHistogram` overloads; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To get consistent behavior, this commit suggests to change the default. behavior of the overload with integer bin numbers also to using the. binning in the variable. The automatic binning can still be enabled by. passing a negative bin number, which has been already the case before. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10405
https://github.com/root-project/root/pull/10405:218,usability,command,command,218,"[RF] Consistent behavior of `RooAbsData::createHistogram` overloads; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To get consistent behavior, this commit suggests to change the default. behavior of the overload with integer bin numbers also to using the. binning in the variable. The automatic binning can still be enabled by. passing a negative bin number, which has been already the case before. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10405
https://github.com/root-project/root/pull/10405:490,usability,command,command,490,"[RF] Consistent behavior of `RooAbsData::createHistogram` overloads; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To get consistent behavior, this commit suggests to change the default. behavior of the overload with integer bin numbers also to using the. binning in the variable. The automatic binning can still be enabled by. passing a negative bin number, which has been already the case before. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10405
https://github.com/root-project/root/pull/10405:707,usability,command,command,707,"[RF] Consistent behavior of `RooAbsData::createHistogram` overloads; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To get consistent behavior, this commit suggests to change the default. behavior of the overload with integer bin numbers also to using the. binning in the variable. The automatic binning can still be enabled by. passing a negative bin number, which has been already the case before. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10405
https://github.com/root-project/root/pull/10405:821,usability,consist,consistent,821,"[RF] Consistent behavior of `RooAbsData::createHistogram` overloads; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To get consistent behavior, this commit suggests to change the default. behavior of the overload with integer bin numbers also to using the. binning in the variable. The automatic binning can still be enabled by. passing a negative bin number, which has been already the case before. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10405
https://github.com/root-project/root/pull/10405:832,usability,behavi,behavior,832,"[RF] Consistent behavior of `RooAbsData::createHistogram` overloads; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To get consistent behavior, this commit suggests to change the default. behavior of the overload with integer bin numbers also to using the. binning in the variable. The automatic binning can still be enabled by. passing a negative bin number, which has been already the case before. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10405
https://github.com/root-project/root/pull/10405:886,usability,behavi,behavior,886,"[RF] Consistent behavior of `RooAbsData::createHistogram` overloads; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To get consistent behavior, this commit suggests to change the default. behavior of the overload with integer bin numbers also to using the. binning in the variable. The automatic binning can still be enabled by. passing a negative bin number, which has been already the case before. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10405
https://github.com/root-project/root/pull/10405:1098,usability,Close,Closes,1098,"[RF] Consistent behavior of `RooAbsData::createHistogram` overloads; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To get consistent behavior, this commit suggests to change the default. behavior of the overload with integer bin numbers also to using the. binning in the variable. The automatic binning can still be enabled by. passing a negative bin number, which has been already the case before. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10405
https://github.com/root-project/root/pull/10406:83,deployability,depend,depending,83,"Re-enable several tests and tutorials on Windows; Re-enable many tests on Windows, depending on the c++ standard (14/17) and the architecture (x86/x64).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10406
https://github.com/root-project/root/pull/10406:83,integrability,depend,depending,83,"Re-enable several tests and tutorials on Windows; Re-enable many tests on Windows, depending on the c++ standard (14/17) and the architecture (x86/x64).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10406
https://github.com/root-project/root/pull/10406:104,interoperability,standard,standard,104,"Re-enable several tests and tutorials on Windows; Re-enable many tests on Windows, depending on the c++ standard (14/17) and the architecture (x86/x64).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10406
https://github.com/root-project/root/pull/10406:129,interoperability,architectur,architecture,129,"Re-enable several tests and tutorials on Windows; Re-enable many tests on Windows, depending on the c++ standard (14/17) and the architecture (x86/x64).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10406
https://github.com/root-project/root/pull/10406:83,modifiability,depend,depending,83,"Re-enable several tests and tutorials on Windows; Re-enable many tests on Windows, depending on the c++ standard (14/17) and the architecture (x86/x64).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10406
https://github.com/root-project/root/pull/10406:18,safety,test,tests,18,"Re-enable several tests and tutorials on Windows; Re-enable many tests on Windows, depending on the c++ standard (14/17) and the architecture (x86/x64).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10406
https://github.com/root-project/root/pull/10406:65,safety,test,tests,65,"Re-enable several tests and tutorials on Windows; Re-enable many tests on Windows, depending on the c++ standard (14/17) and the architecture (x86/x64).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10406
https://github.com/root-project/root/pull/10406:83,safety,depend,depending,83,"Re-enable several tests and tutorials on Windows; Re-enable many tests on Windows, depending on the c++ standard (14/17) and the architecture (x86/x64).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10406
https://github.com/root-project/root/pull/10406:18,testability,test,tests,18,"Re-enable several tests and tutorials on Windows; Re-enable many tests on Windows, depending on the c++ standard (14/17) and the architecture (x86/x64).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10406
https://github.com/root-project/root/pull/10406:65,testability,test,tests,65,"Re-enable several tests and tutorials on Windows; Re-enable many tests on Windows, depending on the c++ standard (14/17) and the architecture (x86/x64).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10406
https://github.com/root-project/root/pull/10406:83,testability,depend,depending,83,"Re-enable several tests and tutorials on Windows; Re-enable many tests on Windows, depending on the c++ standard (14/17) and the architecture (x86/x64).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10406
https://github.com/root-project/root/pull/10407:45,availability,error,error,45,[core] Small TSeq improvements; * Controlled error when step size is 0. * Small enhancement when TSeq printed in cling (properly show when the. step is smaller than 0).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10407
https://github.com/root-project/root/pull/10407:1,energy efficiency,core,core,1,[core] Small TSeq improvements; * Controlled error when step size is 0. * Small enhancement when TSeq printed in cling (properly show when the. step is smaller than 0).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10407
https://github.com/root-project/root/pull/10407:45,performance,error,error,45,[core] Small TSeq improvements; * Controlled error when step size is 0. * Small enhancement when TSeq printed in cling (properly show when the. step is smaller than 0).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10407
https://github.com/root-project/root/pull/10407:45,safety,error,error,45,[core] Small TSeq improvements; * Controlled error when step size is 0. * Small enhancement when TSeq printed in cling (properly show when the. step is smaller than 0).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10407
https://github.com/root-project/root/pull/10407:34,security,Control,Controlled,34,[core] Small TSeq improvements; * Controlled error when step size is 0. * Small enhancement when TSeq printed in cling (properly show when the. step is smaller than 0).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10407
https://github.com/root-project/root/pull/10407:34,testability,Control,Controlled,34,[core] Small TSeq improvements; * Controlled error when step size is 0. * Small enhancement when TSeq printed in cling (properly show when the. step is smaller than 0).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10407
https://github.com/root-project/root/pull/10407:45,usability,error,error,45,[core] Small TSeq improvements; * Controlled error when step size is 0. * Small enhancement when TSeq printed in cling (properly show when the. step is smaller than 0).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10407
https://github.com/root-project/root/issues/10408:478,availability,ERROR,ERROR,478,"[ntuple] Re-allow type-erased reading; [This commit](https://github.com/root-project/root/commit/48bb3f69e0a7ab3641a5f10a189d89b214e0fb18#diff-1b09d441e22aa3d48c645df3c0ee3e713e400e82c58983e106fd58c6bfdb4d6fR184-R185) broke the following usecase by changing the return type of `RNTupleModel::GetField` from a non-const RFieldBase to a const RFieldBase. ```cpp. auto r = RNTupleReader::Open(""r"", fileGuard.GetPath());. const RFieldBase *rvecf = r->GetModel()->GetField(""v"");. // ERROR: GenerateValue is non-const, rvecf is a const pointer. auto rvecv = rvecf->GenerateValue();. ROOT::RVec<int> *v = rvecv.Get<ROOT::RVec<int>>();. ```. Before that commit, the above snippet was valid code, and there is no simple alternative. As per a discussion with @jblomer , the preferred solution would be to also make `RFieldBase::{GenerateValue,CaptureValue,DestroyValue}` const. However,. > reading an entry needs to be fixed up in this case. Because currently, LoadEntry iterates over the RFieldValues and calls Read on their associated fields. RField::Read() is non-const because a new page may need to be mapped in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10408
https://github.com/root-project/root/issues/10408:940,energy efficiency,current,currently,940,"[ntuple] Re-allow type-erased reading; [This commit](https://github.com/root-project/root/commit/48bb3f69e0a7ab3641a5f10a189d89b214e0fb18#diff-1b09d441e22aa3d48c645df3c0ee3e713e400e82c58983e106fd58c6bfdb4d6fR184-R185) broke the following usecase by changing the return type of `RNTupleModel::GetField` from a non-const RFieldBase to a const RFieldBase. ```cpp. auto r = RNTupleReader::Open(""r"", fileGuard.GetPath());. const RFieldBase *rvecf = r->GetModel()->GetField(""v"");. // ERROR: GenerateValue is non-const, rvecf is a const pointer. auto rvecv = rvecf->GenerateValue();. ROOT::RVec<int> *v = rvecv.Get<ROOT::RVec<int>>();. ```. Before that commit, the above snippet was valid code, and there is no simple alternative. As per a discussion with @jblomer , the preferred solution would be to also make `RFieldBase::{GenerateValue,CaptureValue,DestroyValue}` const. However,. > reading an entry needs to be fixed up in this case. Because currently, LoadEntry iterates over the RFieldValues and calls Read on their associated fields. RField::Read() is non-const because a new page may need to be mapped in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10408
https://github.com/root-project/root/issues/10408:951,energy efficiency,Load,LoadEntry,951,"[ntuple] Re-allow type-erased reading; [This commit](https://github.com/root-project/root/commit/48bb3f69e0a7ab3641a5f10a189d89b214e0fb18#diff-1b09d441e22aa3d48c645df3c0ee3e713e400e82c58983e106fd58c6bfdb4d6fR184-R185) broke the following usecase by changing the return type of `RNTupleModel::GetField` from a non-const RFieldBase to a const RFieldBase. ```cpp. auto r = RNTupleReader::Open(""r"", fileGuard.GetPath());. const RFieldBase *rvecf = r->GetModel()->GetField(""v"");. // ERROR: GenerateValue is non-const, rvecf is a const pointer. auto rvecv = rvecf->GenerateValue();. ROOT::RVec<int> *v = rvecv.Get<ROOT::RVec<int>>();. ```. Before that commit, the above snippet was valid code, and there is no simple alternative. As per a discussion with @jblomer , the preferred solution would be to also make `RFieldBase::{GenerateValue,CaptureValue,DestroyValue}` const. However,. > reading an entry needs to be fixed up in this case. Because currently, LoadEntry iterates over the RFieldValues and calls Read on their associated fields. RField::Read() is non-const because a new page may need to be mapped in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10408
https://github.com/root-project/root/issues/10408:478,performance,ERROR,ERROR,478,"[ntuple] Re-allow type-erased reading; [This commit](https://github.com/root-project/root/commit/48bb3f69e0a7ab3641a5f10a189d89b214e0fb18#diff-1b09d441e22aa3d48c645df3c0ee3e713e400e82c58983e106fd58c6bfdb4d6fR184-R185) broke the following usecase by changing the return type of `RNTupleModel::GetField` from a non-const RFieldBase to a const RFieldBase. ```cpp. auto r = RNTupleReader::Open(""r"", fileGuard.GetPath());. const RFieldBase *rvecf = r->GetModel()->GetField(""v"");. // ERROR: GenerateValue is non-const, rvecf is a const pointer. auto rvecv = rvecf->GenerateValue();. ROOT::RVec<int> *v = rvecv.Get<ROOT::RVec<int>>();. ```. Before that commit, the above snippet was valid code, and there is no simple alternative. As per a discussion with @jblomer , the preferred solution would be to also make `RFieldBase::{GenerateValue,CaptureValue,DestroyValue}` const. However,. > reading an entry needs to be fixed up in this case. Because currently, LoadEntry iterates over the RFieldValues and calls Read on their associated fields. RField::Read() is non-const because a new page may need to be mapped in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10408
https://github.com/root-project/root/issues/10408:951,performance,Load,LoadEntry,951,"[ntuple] Re-allow type-erased reading; [This commit](https://github.com/root-project/root/commit/48bb3f69e0a7ab3641a5f10a189d89b214e0fb18#diff-1b09d441e22aa3d48c645df3c0ee3e713e400e82c58983e106fd58c6bfdb4d6fR184-R185) broke the following usecase by changing the return type of `RNTupleModel::GetField` from a non-const RFieldBase to a const RFieldBase. ```cpp. auto r = RNTupleReader::Open(""r"", fileGuard.GetPath());. const RFieldBase *rvecf = r->GetModel()->GetField(""v"");. // ERROR: GenerateValue is non-const, rvecf is a const pointer. auto rvecv = rvecf->GenerateValue();. ROOT::RVec<int> *v = rvecv.Get<ROOT::RVec<int>>();. ```. Before that commit, the above snippet was valid code, and there is no simple alternative. As per a discussion with @jblomer , the preferred solution would be to also make `RFieldBase::{GenerateValue,CaptureValue,DestroyValue}` const. However,. > reading an entry needs to be fixed up in this case. Because currently, LoadEntry iterates over the RFieldValues and calls Read on their associated fields. RField::Read() is non-const because a new page may need to be mapped in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10408
https://github.com/root-project/root/issues/10408:478,safety,ERROR,ERROR,478,"[ntuple] Re-allow type-erased reading; [This commit](https://github.com/root-project/root/commit/48bb3f69e0a7ab3641a5f10a189d89b214e0fb18#diff-1b09d441e22aa3d48c645df3c0ee3e713e400e82c58983e106fd58c6bfdb4d6fR184-R185) broke the following usecase by changing the return type of `RNTupleModel::GetField` from a non-const RFieldBase to a const RFieldBase. ```cpp. auto r = RNTupleReader::Open(""r"", fileGuard.GetPath());. const RFieldBase *rvecf = r->GetModel()->GetField(""v"");. // ERROR: GenerateValue is non-const, rvecf is a const pointer. auto rvecv = rvecf->GenerateValue();. ROOT::RVec<int> *v = rvecv.Get<ROOT::RVec<int>>();. ```. Before that commit, the above snippet was valid code, and there is no simple alternative. As per a discussion with @jblomer , the preferred solution would be to also make `RFieldBase::{GenerateValue,CaptureValue,DestroyValue}` const. However,. > reading an entry needs to be fixed up in this case. Because currently, LoadEntry iterates over the RFieldValues and calls Read on their associated fields. RField::Read() is non-const because a new page may need to be mapped in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10408
https://github.com/root-project/root/issues/10408:676,safety,valid,valid,676,"[ntuple] Re-allow type-erased reading; [This commit](https://github.com/root-project/root/commit/48bb3f69e0a7ab3641a5f10a189d89b214e0fb18#diff-1b09d441e22aa3d48c645df3c0ee3e713e400e82c58983e106fd58c6bfdb4d6fR184-R185) broke the following usecase by changing the return type of `RNTupleModel::GetField` from a non-const RFieldBase to a const RFieldBase. ```cpp. auto r = RNTupleReader::Open(""r"", fileGuard.GetPath());. const RFieldBase *rvecf = r->GetModel()->GetField(""v"");. // ERROR: GenerateValue is non-const, rvecf is a const pointer. auto rvecv = rvecf->GenerateValue();. ROOT::RVec<int> *v = rvecv.Get<ROOT::RVec<int>>();. ```. Before that commit, the above snippet was valid code, and there is no simple alternative. As per a discussion with @jblomer , the preferred solution would be to also make `RFieldBase::{GenerateValue,CaptureValue,DestroyValue}` const. However,. > reading an entry needs to be fixed up in this case. Because currently, LoadEntry iterates over the RFieldValues and calls Read on their associated fields. RField::Read() is non-const because a new page may need to be mapped in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10408
https://github.com/root-project/root/issues/10408:704,testability,simpl,simple,704,"[ntuple] Re-allow type-erased reading; [This commit](https://github.com/root-project/root/commit/48bb3f69e0a7ab3641a5f10a189d89b214e0fb18#diff-1b09d441e22aa3d48c645df3c0ee3e713e400e82c58983e106fd58c6bfdb4d6fR184-R185) broke the following usecase by changing the return type of `RNTupleModel::GetField` from a non-const RFieldBase to a const RFieldBase. ```cpp. auto r = RNTupleReader::Open(""r"", fileGuard.GetPath());. const RFieldBase *rvecf = r->GetModel()->GetField(""v"");. // ERROR: GenerateValue is non-const, rvecf is a const pointer. auto rvecv = rvecf->GenerateValue();. ROOT::RVec<int> *v = rvecv.Get<ROOT::RVec<int>>();. ```. Before that commit, the above snippet was valid code, and there is no simple alternative. As per a discussion with @jblomer , the preferred solution would be to also make `RFieldBase::{GenerateValue,CaptureValue,DestroyValue}` const. However,. > reading an entry needs to be fixed up in this case. Because currently, LoadEntry iterates over the RFieldValues and calls Read on their associated fields. RField::Read() is non-const because a new page may need to be mapped in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10408
https://github.com/root-project/root/issues/10408:478,usability,ERROR,ERROR,478,"[ntuple] Re-allow type-erased reading; [This commit](https://github.com/root-project/root/commit/48bb3f69e0a7ab3641a5f10a189d89b214e0fb18#diff-1b09d441e22aa3d48c645df3c0ee3e713e400e82c58983e106fd58c6bfdb4d6fR184-R185) broke the following usecase by changing the return type of `RNTupleModel::GetField` from a non-const RFieldBase to a const RFieldBase. ```cpp. auto r = RNTupleReader::Open(""r"", fileGuard.GetPath());. const RFieldBase *rvecf = r->GetModel()->GetField(""v"");. // ERROR: GenerateValue is non-const, rvecf is a const pointer. auto rvecv = rvecf->GenerateValue();. ROOT::RVec<int> *v = rvecv.Get<ROOT::RVec<int>>();. ```. Before that commit, the above snippet was valid code, and there is no simple alternative. As per a discussion with @jblomer , the preferred solution would be to also make `RFieldBase::{GenerateValue,CaptureValue,DestroyValue}` const. However,. > reading an entry needs to be fixed up in this case. Because currently, LoadEntry iterates over the RFieldValues and calls Read on their associated fields. RField::Read() is non-const because a new page may need to be mapped in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10408
https://github.com/root-project/root/issues/10408:704,usability,simpl,simple,704,"[ntuple] Re-allow type-erased reading; [This commit](https://github.com/root-project/root/commit/48bb3f69e0a7ab3641a5f10a189d89b214e0fb18#diff-1b09d441e22aa3d48c645df3c0ee3e713e400e82c58983e106fd58c6bfdb4d6fR184-R185) broke the following usecase by changing the return type of `RNTupleModel::GetField` from a non-const RFieldBase to a const RFieldBase. ```cpp. auto r = RNTupleReader::Open(""r"", fileGuard.GetPath());. const RFieldBase *rvecf = r->GetModel()->GetField(""v"");. // ERROR: GenerateValue is non-const, rvecf is a const pointer. auto rvecv = rvecf->GenerateValue();. ROOT::RVec<int> *v = rvecv.Get<ROOT::RVec<int>>();. ```. Before that commit, the above snippet was valid code, and there is no simple alternative. As per a discussion with @jblomer , the preferred solution would be to also make `RFieldBase::{GenerateValue,CaptureValue,DestroyValue}` const. However,. > reading an entry needs to be fixed up in this case. Because currently, LoadEntry iterates over the RFieldValues and calls Read on their associated fields. RField::Read() is non-const because a new page may need to be mapped in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10408
https://github.com/root-project/root/issues/10408:764,usability,prefer,preferred,764,"[ntuple] Re-allow type-erased reading; [This commit](https://github.com/root-project/root/commit/48bb3f69e0a7ab3641a5f10a189d89b214e0fb18#diff-1b09d441e22aa3d48c645df3c0ee3e713e400e82c58983e106fd58c6bfdb4d6fR184-R185) broke the following usecase by changing the return type of `RNTupleModel::GetField` from a non-const RFieldBase to a const RFieldBase. ```cpp. auto r = RNTupleReader::Open(""r"", fileGuard.GetPath());. const RFieldBase *rvecf = r->GetModel()->GetField(""v"");. // ERROR: GenerateValue is non-const, rvecf is a const pointer. auto rvecv = rvecf->GenerateValue();. ROOT::RVec<int> *v = rvecv.Get<ROOT::RVec<int>>();. ```. Before that commit, the above snippet was valid code, and there is no simple alternative. As per a discussion with @jblomer , the preferred solution would be to also make `RFieldBase::{GenerateValue,CaptureValue,DestroyValue}` const. However,. > reading an entry needs to be fixed up in this case. Because currently, LoadEntry iterates over the RFieldValues and calls Read on their associated fields. RField::Read() is non-const because a new page may need to be mapped in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10408
https://github.com/root-project/root/issues/10409:5,availability,failur,failures,5,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:131,availability,failur,failures,131,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2446,availability,Error,Errors,2446,"roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Fa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2610,availability,failur,failures,2610," (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3863,availability,Error,Errors,3863,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:4009,availability,failur,failures,4009,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:4197,availability,failur,failures,4197,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:5,deployability,fail,failures,5,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:131,deployability,fail,failures,131,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:174,deployability,fail,failed,174,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:445,deployability,FAIL,FAILED,445,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:496,deployability,Fail,Failed,496,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:544,deployability,Fail,Failed,544,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:607,deployability,Fail,Failed,607,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:668,deployability,Fail,Failed,668,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:725,deployability,Fail,Failed,725,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:782,deployability,Fail,Failed,782,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:850,deployability,Fail,Failed,850,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:917,deployability,Fail,Failed,917,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:981,deployability,Fail,Failed,981,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1044,deployability,Fail,Failed,1044,"cates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1104,deployability,Fail,Failed,1104,"s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1165,deployability,Fail,Failed,1165,tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1230,deployability,Fail,Failed,1230,sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1294,deployability,Fail,Failed,1294,python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1354,deployability,Fail,Failed,1354,4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutoria,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1420,deployability,Fail,Failed,1420,. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampl,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1490,deployability,Fail,Failed,1490,r (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the propo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1557,deployability,Fail,Failed,1557,gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1616,deployability,Fail,Failed,1616,"9 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1684,deployability,Fail,Failed,1684,"st-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Lab",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1738,deployability,Fail,Failed,1738,"gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1776,deployability,Fail,Failed,1776,"r (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1826,deployability,Fail,Failed,1826,"stRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1863,deployability,Fail,Failed,1863,"gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1912,deployability,Fail,Failed,1912," (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1973,deployability,Fail,Failed,1973,"Pdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2030,deployability,Fail,Failed,2030,"FitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2087,deployability,Fail,Failed,2087,"estRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2147,deployability,Fail,Failed,2147,"estRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2206,deployability,Fail,Failed,2206,"-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2265,deployability,Fail,Failed,2265,"e-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2333,deployability,Fail,Failed,2333,"st-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2386,deployability,Fail,Failed,2386,"core-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2437,deployability,Fail,Failed,2437,"t-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2521,deployability,fail,fail,2521,"itcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2610,deployability,fail,failures,2610," (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2664,deployability,fail,failed,2664,"obalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-nt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2935,deployability,FAIL,FAILED,2935,"-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #103",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2986,deployability,Fail,Failed,2986,"gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally ther",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3034,deployability,Fail,Failed,3034,". 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3095,deployability,Fail,Failed,3095,"12 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3155,deployability,Fail,Failed,3155,"20 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3193,deployability,Fail,Failed,3193,"minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3243,deployability,Fail,Failed,3243,"t-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL rel",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3280,deployability,Fail,Failed,3280,"torial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3329,deployability,Fail,Failed,3329,"(Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3390,deployability,Fail,Failed,3390,". 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3447,deployability,Fail,Failed,3447,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3504,deployability,Fail,Failed,3504,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3564,deployability,Fail,Failed,3564,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3623,deployability,Fail,Failed,3623,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3682,deployability,Fail,Failed,3682,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3750,deployability,Fail,Failed,3750,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3803,deployability,Fail,Failed,3803,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3854,deployability,Fail,Failed,3854,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:4009,deployability,fail,failures,4009,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:4075,deployability,build,build,4075,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:4139,deployability,version,version,4139,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:4197,deployability,fail,failures,4197,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:4243,deployability,releas,releases,4243,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:4258,deployability,Build,Build,4258,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:4292,deployability,build,build,4292,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:4345,deployability,log,log,4345,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:4139,integrability,version,version,4139,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2255,modifiability,exten,extended,2255,"roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3672,modifiability,exten,extended,3672,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:4139,modifiability,version,version,4139,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:4284,modifiability,pac,package,4284,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:5,performance,failur,failures,5,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:131,performance,failur,failures,131,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:200,performance,Time,Time,200,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:398,performance,time,time,398,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2446,performance,Error,Errors,2446,"roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Fa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2610,performance,failur,failures,2610," (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2690,performance,Time,Time,2690," 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2888,performance,time,time,2888,"histofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3863,performance,Error,Errors,3863,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:4009,performance,failur,failures,4009,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:4197,performance,failur,failures,4197,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:5,reliability,fail,failures,5,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:131,reliability,fail,failures,131,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:174,reliability,fail,failed,174,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:445,reliability,FAIL,FAILED,445,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:496,reliability,Fail,Failed,496,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:544,reliability,Fail,Failed,544,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:607,reliability,Fail,Failed,607,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:668,reliability,Fail,Failed,668,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:725,reliability,Fail,Failed,725,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:782,reliability,Fail,Failed,782,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:850,reliability,Fail,Failed,850,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:917,reliability,Fail,Failed,917,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:981,reliability,Fail,Failed,981,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1044,reliability,Fail,Failed,1044,"cates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1104,reliability,Fail,Failed,1104,"s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1165,reliability,Fail,Failed,1165,tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1230,reliability,Fail,Failed,1230,sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1294,reliability,Fail,Failed,1294,python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1354,reliability,Fail,Failed,1354,4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutoria,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1420,reliability,Fail,Failed,1420,. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampl,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1490,reliability,Fail,Failed,1490,r (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the propo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1557,reliability,Fail,Failed,1557,gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1616,reliability,Fail,Failed,1616,"9 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1684,reliability,Fail,Failed,1684,"st-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Lab",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1738,reliability,Fail,Failed,1738,"gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1776,reliability,Fail,Failed,1776,"r (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1826,reliability,Fail,Failed,1826,"stRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1863,reliability,Fail,Failed,1863,"gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1912,reliability,Fail,Failed,1912," (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1973,reliability,Fail,Failed,1973,"Pdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2030,reliability,Fail,Failed,2030,"FitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2087,reliability,Fail,Failed,2087,"estRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2147,reliability,Fail,Failed,2147,"estRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2206,reliability,Fail,Failed,2206,"-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2265,reliability,Fail,Failed,2265,"e-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2333,reliability,Fail,Failed,2333,"st-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2386,reliability,Fail,Failed,2386,"core-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2437,reliability,Fail,Failed,2437,"t-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2521,reliability,fail,fail,2521,"itcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2610,reliability,fail,failures,2610," (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2664,reliability,fail,failed,2664,"obalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-nt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2935,reliability,FAIL,FAILED,2935,"-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #103",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2986,reliability,Fail,Failed,2986,"gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally ther",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3034,reliability,Fail,Failed,3034,". 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3095,reliability,Fail,Failed,3095,"12 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3155,reliability,Fail,Failed,3155,"20 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3193,reliability,Fail,Failed,3193,"minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3243,reliability,Fail,Failed,3243,"t-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL rel",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3280,reliability,Fail,Failed,3280,"torial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3329,reliability,Fail,Failed,3329,"(Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3390,reliability,Fail,Failed,3390,". 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3447,reliability,Fail,Failed,3447,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3504,reliability,Fail,Failed,3504,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3564,reliability,Fail,Failed,3564,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3623,reliability,Fail,Failed,3623,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3682,reliability,Fail,Failed,3682,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3750,reliability,Fail,Failed,3750,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3803,reliability,Fail,Failed,3803,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3854,reliability,Fail,Failed,3854,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:4009,reliability,fail,failures,4009,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:4197,reliability,fail,failures,4197,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:0,safety,Test,Test,0,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:98,safety,test,tests,98,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:151,safety,test,tests,151,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:168,safety,test,tests,168,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:246,safety,test,tests,246,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:289,safety,test,tests,289,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:338,safety,test,tests,338,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:379,safety,test,tests,379,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:393,safety,Test,Test,393,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:439,safety,test,tests,439,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:585,safety,test,test-testHistFactory,585,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:643,safety,test,test-testRooCrystalBall,643,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:704,safety,test,test-testRooJohnson,704,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:761,safety,test,test-,761,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:822,safety,test,test-testRooBinSamplingPdf,822,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:890,safety,test,test-testRooSimPdfBuilder,890,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:957,safety,test,test-testRooWrapperPdf,957,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1021,safety,test,test-testRooFitDriver,1021,"ecked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Fa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1084,safety,test,test-testRooAbsPdf,1084,"unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1144,safety,test,test-testRooProdPdf,1144,"ts passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1205,safety,test,test-testTestStatistics,1205,ngtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	4,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1270,safety,test,test-testRooProductPdf,1270,proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1334,safety,test,test-testNaNPacker,1334,). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1394,safety,test,test-testRooSimultaneous,1394,al) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tut,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1460,safety,test,test-testRooGradMinimizerFcn,1460,yroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1530,safety,test,test-testLikelihoodSerial,1530,(Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning ab,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1597,safety,test,test-testRooRealL,1597,"(Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1656,safety,test,test-testGlobalObservables,1656,"ailed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests faile",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1722,safety,test,test-testSPlot,1722,"ed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*pr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1754,safety,test,test-stresshistogram,1754,"t-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1792,safety,test,test-stresshistogram-interpreted,1792,"it-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps =",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1842,safety,test,test-stresshistofit,1842,"iled). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1879,safety,test,test-stresshistofit-interpreted,1879,"testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1949,safety,test,test-datasource-ntuple,1949,"t-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2010,safety,test,test-ntuple-basics,2010,"e-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2067,safety,test,test-ntuple-merger,2067,"fitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-te",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2124,safety,test,test-ntuple-serialize,2124,"ofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2184,safety,test,test-ntuple-minifile,2184,"roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2243,safety,test,test-ntuple-extended,2243,"oofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2446,safety,Error,Errors,2446,"roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Fa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2641,safety,test,tests,2641,"-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2658,safety,test,tests,2658,"testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2736,safety,test,tests,2736,"ailed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2779,safety,test,tests,2779,"). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-datafr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2828,safety,test,tests,2828,"d). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2869,safety,test,tests,2869,"	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors wh",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2883,safety,Test,Test,2883,"tresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2929,safety,test,tests,2929,"t-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3074,safety,test,test-testRooProdPdf,3074,"r (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3135,safety,test,test-testNaNPacker,3135,"e (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT versi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3171,safety,test,test-stresshistogram,3171,"v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s39",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3209,safety,test,test-stresshistogram-interpreted,3209,"st-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for othe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3259,safety,test,test-stresshistofit,3259,"ed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3296,safety,test,test-stresshistofit-interpreted,3296,"omInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3366,safety,test,test-datasource-ntuple,3366,"nges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-pro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3427,safety,test,test-ntuple-basics,3427,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3484,safety,test,test-ntuple-merger,3484,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3541,safety,test,test-ntuple-serialize,3541,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3601,safety,test,test-ntuple-minifile,3601,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3660,safety,test,test-ntuple-extended,3660,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3863,safety,Error,Errors,3863,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:4004,safety,test,test,4004,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:4113,safety,test,tests,4113,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:4345,safety,log,log,4345,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:4345,security,log,log,4345,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:0,testability,Test,Test,0,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:93,testability,unit,unit,93,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:98,testability,test,tests,98,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:151,testability,test,tests,151,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:168,testability,test,tests,168,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:246,testability,test,tests,246,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:289,testability,test,tests,289,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:338,testability,test,tests,338,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:379,testability,test,tests,379,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:393,testability,Test,Test,393,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:439,testability,test,tests,439,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:585,testability,test,test-testHistFactory,585,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:643,testability,test,test-testRooCrystalBall,643,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:704,testability,test,test-testRooJohnson,704,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:761,testability,test,test-,761,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:822,testability,test,test-testRooBinSamplingPdf,822,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:890,testability,test,test-testRooSimPdfBuilder,890,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:957,testability,test,test-testRooWrapperPdf,957,"Test failures on s390x; - [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1021,testability,test,test-testRooFitDriver,1021,"ecked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Fa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1084,testability,test,test-testRooAbsPdf,1084,"unit tests on s390x there are several failures:. ```. 97% tests passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1144,testability,test,test-testRooProdPdf,1144,"ts passed, 34 tests failed out of 1232. Label Time Summary:. longtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1205,testability,test,test-testTestStatistics,1205,ngtest = 572.89 sec*proc (27 tests). multithreaded = 889.21 sec*proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	4,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1270,testability,test,test-testRooProductPdf,1270,proc (2 tests). python_runtime_deps = 58.00 sec*proc (11 tests). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1334,testability,test,test-testNaNPacker,1334,). tutorial = 4391.45 sec*proc (786 tests). Total Test time (real) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1394,testability,test,test-testRooSimultaneous,1394,al) = 2976.41 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tut,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1460,testability,test,test-testRooGradMinimizerFcn,1460,yroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1530,testability,test,test-testLikelihoodSerial,1530,(Failed). 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning ab,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1597,testability,test,test-testRooRealL,1597,"(Failed). 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1656,testability,test,test-testGlobalObservables,1656,"ailed). 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests faile",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1722,testability,test,test-testSPlot,1722,"ed). 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*pr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1754,testability,test,test-stresshistogram,1754,"t-testSumW2Error (Failed). 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1792,testability,test,test-stresshistogram-interpreted,1792,"it-roofitcore-test-testRooBinSamplingPdf (Failed). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps =",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1842,testability,test,test-stresshistofit,1842,"iled). 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1879,testability,test,test-stresshistofit-interpreted,1879,"testRooSimPdfBuilder (Failed). 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:1949,testability,test,test-datasource-ntuple,1949,"t-testRooWrapperPdf (Failed). 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2010,testability,test,test-ntuple-basics,2010,"e-test-testRooFitDriver (Failed). 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2067,testability,test,test-ntuple-merger,2067,"fitcore-test-testRooAbsPdf (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-te",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2124,testability,test,test-ntuple-serialize,2124,"ofitcore-test-testRooProdPdf (Failed). 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2184,testability,test,test-ntuple-minifile,2184,"roofitcore-test-testTestStatistics (Failed). 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2243,testability,test,test-ntuple-extended,2243,"oofit-roofitcore-test-testRooProductPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed). 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2641,testability,test,tests,2641,"-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2658,testability,test,tests,2658,"testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2736,testability,test,tests,2736,"ailed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2779,testability,test,tests,2779,"). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-datafr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2828,testability,test,tests,2828,"d). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2869,testability,test,tests,2869,"	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors wh",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2883,testability,Test,Test,2883,"tresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2929,testability,test,tests,2929,"t-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3074,testability,test,test-testRooProdPdf,3074,"r (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3135,testability,test,test-testNaNPacker,3135,"e (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT versi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3171,testability,test,test-stresshistogram,3171,"v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s39",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3209,testability,test,test-stresshistogram-interpreted,3209,"st-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for othe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3259,testability,test,test-stresshistofit,3259,"ed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3296,testability,test,test-stresshistofit-interpreted,3296,"omInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3366,testability,test,test-datasource-ntuple,3366,"nges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-pro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3427,testability,test,test-ntuple-basics,3427,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3484,testability,test,test-ntuple-merger,3484,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3541,testability,test,test-ntuple-serialize,3541,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3601,testability,test,test-ntuple-minifile,3601,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3660,testability,test,test-ntuple-extended,3660,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:4004,testability,test,test,4004,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:4108,testability,unit,unit,4108,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:4113,testability,test,tests,4113,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:4331,testability,context,context,4331,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:4345,testability,log,log,4345,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:2446,usability,Error,Errors,2446,"roofitcore-test-testRooGradMinimizerFcn (Failed). 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed). 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed). 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed). 	252 - gtest-roofit-roostats-test-testSPlot (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Fa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3863,usability,Error,Errors,3863,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:3967,usability,behavi,behavior,3967,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10409:4060,usability,behavi,behaviour,4060,"math-exampleFunction-py (Failed). Errors while running CTest. ```. With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:. ```. 99% tests passed, 17 tests failed out of 1232. Label Time Summary:. longtest = 540.69 sec*proc (27 tests). multithreaded = 678.83 sec*proc (2 tests). python_runtime_deps = 60.39 sec*proc (11 tests). tutorial = 3802.05 sec*proc (786 tests). Total Test time (real) = 2732.59 sec. The following tests FAILED:. 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed). 	 57 - pyunittests-pyroot-pyz-rtensor (Failed). 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed). 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed). 	274 - test-stresshistogram (Failed). 	275 - test-stresshistogram-interpreted (Failed). 	296 - test-stresshistofit (Failed). 	297 - test-stresshistofit-interpreted (Failed). 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed). 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed). 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed). 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed). 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed). 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed). 	1077 - tutorial-dataframe-df006_ranges-py (Failed). 	1106 - tutorial-math-exampleFunction-py (Failed). Errors while running CTest. ```. For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:. 1. build root for s390x. 2. run the unit tests. ### Setup. 1. ROOT version 6.26.02. 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. . 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10409
https://github.com/root-project/root/issues/10410:341,availability,failur,failure,341,"ROOT fails to compile on a fast mac; On a M1 Max mac, ROOT fails to compile due to the fact it spawns too many processes too fast to copy the headers, going over the 256 file descriptors limit which is default on macOS. Changing ulimit via `ulimit -n 1024` fixes the issue, however it would be good to have some proper throttling, since the failure is really ambiguous.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10410
https://github.com/root-project/root/issues/10410:5,deployability,fail,fails,5,"ROOT fails to compile on a fast mac; On a M1 Max mac, ROOT fails to compile due to the fact it spawns too many processes too fast to copy the headers, going over the 256 file descriptors limit which is default on macOS. Changing ulimit via `ulimit -n 1024` fixes the issue, however it would be good to have some proper throttling, since the failure is really ambiguous.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10410
https://github.com/root-project/root/issues/10410:59,deployability,fail,fails,59,"ROOT fails to compile on a fast mac; On a M1 Max mac, ROOT fails to compile due to the fact it spawns too many processes too fast to copy the headers, going over the 256 file descriptors limit which is default on macOS. Changing ulimit via `ulimit -n 1024` fixes the issue, however it would be good to have some proper throttling, since the failure is really ambiguous.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10410
https://github.com/root-project/root/issues/10410:341,deployability,fail,failure,341,"ROOT fails to compile on a fast mac; On a M1 Max mac, ROOT fails to compile due to the fact it spawns too many processes too fast to copy the headers, going over the 256 file descriptors limit which is default on macOS. Changing ulimit via `ulimit -n 1024` fixes the issue, however it would be good to have some proper throttling, since the failure is really ambiguous.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10410
https://github.com/root-project/root/issues/10410:319,performance,throttl,throttling,319,"ROOT fails to compile on a fast mac; On a M1 Max mac, ROOT fails to compile due to the fact it spawns too many processes too fast to copy the headers, going over the 256 file descriptors limit which is default on macOS. Changing ulimit via `ulimit -n 1024` fixes the issue, however it would be good to have some proper throttling, since the failure is really ambiguous.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10410
https://github.com/root-project/root/issues/10410:341,performance,failur,failure,341,"ROOT fails to compile on a fast mac; On a M1 Max mac, ROOT fails to compile due to the fact it spawns too many processes too fast to copy the headers, going over the 256 file descriptors limit which is default on macOS. Changing ulimit via `ulimit -n 1024` fixes the issue, however it would be good to have some proper throttling, since the failure is really ambiguous.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10410
https://github.com/root-project/root/issues/10410:5,reliability,fail,fails,5,"ROOT fails to compile on a fast mac; On a M1 Max mac, ROOT fails to compile due to the fact it spawns too many processes too fast to copy the headers, going over the 256 file descriptors limit which is default on macOS. Changing ulimit via `ulimit -n 1024` fixes the issue, however it would be good to have some proper throttling, since the failure is really ambiguous.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10410
https://github.com/root-project/root/issues/10410:59,reliability,fail,fails,59,"ROOT fails to compile on a fast mac; On a M1 Max mac, ROOT fails to compile due to the fact it spawns too many processes too fast to copy the headers, going over the 256 file descriptors limit which is default on macOS. Changing ulimit via `ulimit -n 1024` fixes the issue, however it would be good to have some proper throttling, since the failure is really ambiguous.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10410
https://github.com/root-project/root/issues/10410:341,reliability,fail,failure,341,"ROOT fails to compile on a fast mac; On a M1 Max mac, ROOT fails to compile due to the fact it spawns too many processes too fast to copy the headers, going over the 256 file descriptors limit which is default on macOS. Changing ulimit via `ulimit -n 1024` fixes the issue, however it would be good to have some proper throttling, since the failure is really ambiguous.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10410
https://github.com/root-project/root/pull/10411:208,deployability,version,version,208,"[RF] Deprecate `RooAbsData::createHistogram` overload with `int` params; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To avoid confusion in the future, this commit marks the overload with. the `int` parameters as deprecated so it is removed in ROOT 6.30. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10411
https://github.com/root-project/root/pull/10411:640,deployability,automat,automatically,640,"[RF] Deprecate `RooAbsData::createHistogram` overload with `int` params; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To avoid confusion in the future, this commit marks the overload with. the `int` parameters as deprecated so it is removed in ROOT 6.30. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10411
https://github.com/root-project/root/pull/10411:208,integrability,version,version,208,"[RF] Deprecate `RooAbsData::createHistogram` overload with `int` params; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To avoid confusion in the future, this commit marks the overload with. the `int` parameters as deprecated so it is removed in ROOT 6.30. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10411
https://github.com/root-project/root/pull/10411:663,interoperability,distribut,distribution,663,"[RF] Deprecate `RooAbsData::createHistogram` overload with `int` params; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To avoid confusion in the future, this commit marks the overload with. the `int` parameters as deprecated so it is removed in ROOT 6.30. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10411
https://github.com/root-project/root/pull/10411:208,modifiability,version,version,208,"[RF] Deprecate `RooAbsData::createHistogram` overload with `int` params; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To avoid confusion in the future, this commit marks the overload with. the `int` parameters as deprecated so it is removed in ROOT 6.30. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10411
https://github.com/root-project/root/pull/10411:323,modifiability,paramet,parameters,323,"[RF] Deprecate `RooAbsData::createHistogram` overload with `int` params; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To avoid confusion in the future, this commit marks the overload with. the `int` parameters as deprecated so it is removed in ROOT 6.30. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10411
https://github.com/root-project/root/pull/10411:767,modifiability,variab,variable,767,"[RF] Deprecate `RooAbsData::createHistogram` overload with `int` params; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To avoid confusion in the future, this commit marks the overload with. the `int` parameters as deprecated so it is removed in ROOT 6.30. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10411
https://github.com/root-project/root/pull/10411:899,modifiability,paramet,parameters,899,"[RF] Deprecate `RooAbsData::createHistogram` overload with `int` params; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To avoid confusion in the future, this commit marks the overload with. the `int` parameters as deprecated so it is removed in ROOT 6.30. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10411
https://github.com/root-project/root/pull/10411:821,safety,avoid,avoid,821,"[RF] Deprecate `RooAbsData::createHistogram` overload with `int` params; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To avoid confusion in the future, this commit marks the overload with. the `int` parameters as deprecated so it is removed in ROOT 6.30. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10411
https://github.com/root-project/root/pull/10411:640,testability,automat,automatically,640,"[RF] Deprecate `RooAbsData::createHistogram` overload with `int` params; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To avoid confusion in the future, this commit marks the overload with. the `int` parameters as deprecated so it is removed in ROOT 6.30. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10411
https://github.com/root-project/root/pull/10411:145,usability,command,command,145,"[RF] Deprecate `RooAbsData::createHistogram` overload with `int` params; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To avoid confusion in the future, this commit marks the overload with. the `int` parameters as deprecated so it is removed in ROOT 6.30. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10411
https://github.com/root-project/root/pull/10411:222,usability,command,command,222,"[RF] Deprecate `RooAbsData::createHistogram` overload with `int` params; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To avoid confusion in the future, this commit marks the overload with. the `int` parameters as deprecated so it is removed in ROOT 6.30. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10411
https://github.com/root-project/root/pull/10411:494,usability,command,command,494,"[RF] Deprecate `RooAbsData::createHistogram` overload with `int` params; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To avoid confusion in the future, this commit marks the overload with. the `int` parameters as deprecated so it is removed in ROOT 6.30. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10411
https://github.com/root-project/root/pull/10411:711,usability,command,command,711,"[RF] Deprecate `RooAbsData::createHistogram` overload with `int` params; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To avoid confusion in the future, this commit marks the overload with. the `int` parameters as deprecated so it is removed in ROOT 6.30. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10411
https://github.com/root-project/root/pull/10411:955,usability,Close,Closes,955,"[RF] Deprecate `RooAbsData::createHistogram` overload with `int` params; The `RooAbsData::createHistogram` has two overloads, one taking RooFit. command arguments and one taking integers for bin numbers (the version. with command arguments is much more common in RooFit code). They behave inconsistently when using default parameters, e.g. these two. calls result in different binnings:. ```C++. // 1. overload with int bin numbers:. data->createHistogram(obs->GetName());. // 2. overload with command arguments:. data->createHistogram(data->GetName(), dataObs);. ```. The function with integer bin numbers defaults to computing a binning. automatically from the distribution in the dataset. The function with. command arguments defaults to the binning stored in the variable, which. is much more suitable for RooFit. To avoid confusion in the future, this commit marks the overload with. the `int` parameters as deprecated so it is removed in ROOT 6.30. Closes https://github.com/root-project/root/issues/10401.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10411
https://github.com/root-project/root/pull/10412:162,integrability,compon,component,162,"[RF] Take binning from input RooDataHists when combining them; When combining several RooDataHists to one, the binning of the variables. should be taken from the component histograms. This was already done correctly when importing `TH1` directly, but not. when RooDataHists were given as imput. The commit further introduces a check that makes sure the input. histograms have the same layout and binning, just like we already have. for the TH1 case. Closes #8015.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10412
https://github.com/root-project/root/pull/10412:162,interoperability,compon,component,162,"[RF] Take binning from input RooDataHists when combining them; When combining several RooDataHists to one, the binning of the variables. should be taken from the component histograms. This was already done correctly when importing `TH1` directly, but not. when RooDataHists were given as imput. The commit further introduces a check that makes sure the input. histograms have the same layout and binning, just like we already have. for the TH1 case. Closes #8015.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10412
https://github.com/root-project/root/pull/10412:126,modifiability,variab,variables,126,"[RF] Take binning from input RooDataHists when combining them; When combining several RooDataHists to one, the binning of the variables. should be taken from the component histograms. This was already done correctly when importing `TH1` directly, but not. when RooDataHists were given as imput. The commit further introduces a check that makes sure the input. histograms have the same layout and binning, just like we already have. for the TH1 case. Closes #8015.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10412
https://github.com/root-project/root/pull/10412:162,modifiability,compon,component,162,"[RF] Take binning from input RooDataHists when combining them; When combining several RooDataHists to one, the binning of the variables. should be taken from the component histograms. This was already done correctly when importing `TH1` directly, but not. when RooDataHists were given as imput. The commit further introduces a check that makes sure the input. histograms have the same layout and binning, just like we already have. for the TH1 case. Closes #8015.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10412
https://github.com/root-project/root/pull/10412:23,safety,input,input,23,"[RF] Take binning from input RooDataHists when combining them; When combining several RooDataHists to one, the binning of the variables. should be taken from the component histograms. This was already done correctly when importing `TH1` directly, but not. when RooDataHists were given as imput. The commit further introduces a check that makes sure the input. histograms have the same layout and binning, just like we already have. for the TH1 case. Closes #8015.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10412
https://github.com/root-project/root/pull/10412:353,safety,input,input,353,"[RF] Take binning from input RooDataHists when combining them; When combining several RooDataHists to one, the binning of the variables. should be taken from the component histograms. This was already done correctly when importing `TH1` directly, but not. when RooDataHists were given as imput. The commit further introduces a check that makes sure the input. histograms have the same layout and binning, just like we already have. for the TH1 case. Closes #8015.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10412
https://github.com/root-project/root/pull/10412:23,usability,input,input,23,"[RF] Take binning from input RooDataHists when combining them; When combining several RooDataHists to one, the binning of the variables. should be taken from the component histograms. This was already done correctly when importing `TH1` directly, but not. when RooDataHists were given as imput. The commit further introduces a check that makes sure the input. histograms have the same layout and binning, just like we already have. for the TH1 case. Closes #8015.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10412
https://github.com/root-project/root/pull/10412:353,usability,input,input,353,"[RF] Take binning from input RooDataHists when combining them; When combining several RooDataHists to one, the binning of the variables. should be taken from the component histograms. This was already done correctly when importing `TH1` directly, but not. when RooDataHists were given as imput. The commit further introduces a check that makes sure the input. histograms have the same layout and binning, just like we already have. for the TH1 case. Closes #8015.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10412
https://github.com/root-project/root/pull/10412:450,usability,Close,Closes,450,"[RF] Take binning from input RooDataHists when combining them; When combining several RooDataHists to one, the binning of the variables. should be taken from the component histograms. This was already done correctly when importing `TH1` directly, but not. when RooDataHists were given as imput. The commit further introduces a check that makes sure the input. histograms have the same layout and binning, just like we already have. for the TH1 case. Closes #8015.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10412
https://github.com/root-project/root/issues/10413:544,availability,error,error,544,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:580,availability,error,error,580,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:1595,availability,Operat,Operating,1595,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:1670,availability,down,download,1670,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:1709,availability,Error,Error,1709,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:1822,availability,error,error,1822,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:1441,deployability,build,build,1441,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:1583,deployability,version,version,1583,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:1652,deployability,instal,install,1652,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:1754,deployability,instal,installed,1754,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:1831,deployability,version,version,1831,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:951,energy efficiency,core,core,951,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:1082,energy efficiency,core,core,1082,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:550,integrability,messag,message,550,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:1583,integrability,version,version,1583,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:1831,integrability,version,version,1831,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:550,interoperability,messag,message,550,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:1583,modifiability,version,version,1583,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:1831,modifiability,version,version,1831,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:544,performance,error,error,544,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:580,performance,error,error,580,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:1709,performance,Error,Error,1709,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:1822,performance,error,error,1822,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:544,safety,error,error,544,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:580,safety,error,error,580,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:1395,safety,input,input,1395,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:1709,safety,Error,Error,1709,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:1822,safety,error,error,1822,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:1504,security,session,session,1504,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:1863,testability,context,context,1863,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:1892,testability,context,context,1892,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:428,usability,clear,clear,428,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:476,usability,behavi,behavior,476,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:544,usability,error,error,544,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:580,usability,error,error,580,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:769,usability,behavi,behavior,769,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:787,usability,clear,clear,787,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:1250,usability,behavi,behavior,1250,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:1395,usability,input,input,1395,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:1492,usability,interact,interactive,1492,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:1709,usability,Error,Error,1709,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/issues/10413:1822,usability,error,error,1822,"GetImplicitMTPoolSize() is not known; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Running `ROOT::GetImplicitMTPoolSize()` gives the error message. `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`. Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Start an interactive session of ROOT. Run `ROOT::GetImplicitMTPoolSize()`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs). No error in version 6.20/07. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10413
https://github.com/root-project/root/pull/10415:44,availability,Operat,Operator,44,[GSOC][TMVA][SOFIE]Adding a Leaky Relu ONNX Operator; # This Pull request: This Pull request adds a new ONNX operator Leaky Relu.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10415
https://github.com/root-project/root/pull/10415:109,availability,operat,operator,109,[GSOC][TMVA][SOFIE]Adding a Leaky Relu ONNX Operator; # This Pull request: This Pull request adds a new ONNX operator Leaky Relu.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10415
https://github.com/root-project/root/pull/10416:251,interoperability,platform,platforms,251,stdpair: Don't reuse of emulated StreamerInfo (when having compiled info); Previously it was reused it just 'happened' to have the expected size. (This applies only for the treatment of the `TClass` for an std::pair) and help fix the tests on 32 bits platforms. See test: https://github.com/root-project/roottest/pull/869,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10416
https://github.com/root-project/root/pull/10416:15,modifiability,reu,reuse,15,stdpair: Don't reuse of emulated StreamerInfo (when having compiled info); Previously it was reused it just 'happened' to have the expected size. (This applies only for the treatment of the `TClass` for an std::pair) and help fix the tests on 32 bits platforms. See test: https://github.com/root-project/roottest/pull/869,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10416
https://github.com/root-project/root/pull/10416:93,modifiability,reu,reused,93,stdpair: Don't reuse of emulated StreamerInfo (when having compiled info); Previously it was reused it just 'happened' to have the expected size. (This applies only for the treatment of the `TClass` for an std::pair) and help fix the tests on 32 bits platforms. See test: https://github.com/root-project/roottest/pull/869,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10416
https://github.com/root-project/root/pull/10416:234,safety,test,tests,234,stdpair: Don't reuse of emulated StreamerInfo (when having compiled info); Previously it was reused it just 'happened' to have the expected size. (This applies only for the treatment of the `TClass` for an std::pair) and help fix the tests on 32 bits platforms. See test: https://github.com/root-project/roottest/pull/869,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10416
https://github.com/root-project/root/pull/10416:266,safety,test,test,266,stdpair: Don't reuse of emulated StreamerInfo (when having compiled info); Previously it was reused it just 'happened' to have the expected size. (This applies only for the treatment of the `TClass` for an std::pair) and help fix the tests on 32 bits platforms. See test: https://github.com/root-project/roottest/pull/869,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10416
https://github.com/root-project/root/pull/10416:24,testability,emul,emulated,24,stdpair: Don't reuse of emulated StreamerInfo (when having compiled info); Previously it was reused it just 'happened' to have the expected size. (This applies only for the treatment of the `TClass` for an std::pair) and help fix the tests on 32 bits platforms. See test: https://github.com/root-project/roottest/pull/869,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10416
https://github.com/root-project/root/pull/10416:234,testability,test,tests,234,stdpair: Don't reuse of emulated StreamerInfo (when having compiled info); Previously it was reused it just 'happened' to have the expected size. (This applies only for the treatment of the `TClass` for an std::pair) and help fix the tests on 32 bits platforms. See test: https://github.com/root-project/roottest/pull/869,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10416
https://github.com/root-project/root/pull/10416:266,testability,test,test,266,stdpair: Don't reuse of emulated StreamerInfo (when having compiled info); Previously it was reused it just 'happened' to have the expected size. (This applies only for the treatment of the `TClass` for an std::pair) and help fix the tests on 32 bits platforms. See test: https://github.com/root-project/roottest/pull/869,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10416
https://github.com/root-project/root/pull/10416:221,usability,help,help,221,stdpair: Don't reuse of emulated StreamerInfo (when having compiled info); Previously it was reused it just 'happened' to have the expected size. (This applies only for the treatment of the `TClass` for an std::pair) and help fix the tests on 32 bits platforms. See test: https://github.com/root-project/roottest/pull/869,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10416
https://github.com/root-project/root/issues/10417:1089,availability,servic,services,1089,"thisroot.sh fails to identify shellname when running from executable script; ### Describe the bug. As found out by @couet, when running thisroot.sh on jenkins for building the docu (https://github.com/root-project/rootspi/blob/master/rdoc/makedoxy.sh#L38), the shell name is not properly found (probably bash?), it gets mixed by thinking that makedoxy.sh is an executable (trueExe=makedoxy.sh). That same function works otherwise well outside Jenkins with dash, bash or zsh. This is because makedoxy.sh is run as an executable, rather than 'sourced', see https://github.com/root-project/rootspi/blob/5b8d1747ccd9a093322fbdc268cff960f2c1159d/rdoc/makedoc.sh#L57. ```. +++ getTrueShellExeName. +++ local trueExe nextTarget. ++++ ps -o comm= 2106668. +++ trueExe=makedoxy.sh. +++ '[' makedoxy.sh = makedoxy.sh ']'. +++ '[' makedoxy.sh '!=' makedoxy.sh ']'. ++++ '[' -n '' ']'. ++++ which makedoxy.sh. +++ trueExe=. ++++ readlink ''. +++ nextTarget=. ++++ basename ''. +++ printf %s ''. ++ SHELLNAME=. ```. ### Expected behavior. It works also within Jenkins. ### To Reproduce. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/2650/console. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. It worked well until dash support was added. https://github.com/root-project/root/commit/d96ea9fb8f5b66bf95d7324de09c8a167b97a6c8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10417
https://github.com/root-project/root/issues/10417:12,deployability,fail,fails,12,"thisroot.sh fails to identify shellname when running from executable script; ### Describe the bug. As found out by @couet, when running thisroot.sh on jenkins for building the docu (https://github.com/root-project/rootspi/blob/master/rdoc/makedoxy.sh#L38), the shell name is not properly found (probably bash?), it gets mixed by thinking that makedoxy.sh is an executable (trueExe=makedoxy.sh). That same function works otherwise well outside Jenkins with dash, bash or zsh. This is because makedoxy.sh is run as an executable, rather than 'sourced', see https://github.com/root-project/rootspi/blob/5b8d1747ccd9a093322fbdc268cff960f2c1159d/rdoc/makedoc.sh#L57. ```. +++ getTrueShellExeName. +++ local trueExe nextTarget. ++++ ps -o comm= 2106668. +++ trueExe=makedoxy.sh. +++ '[' makedoxy.sh = makedoxy.sh ']'. +++ '[' makedoxy.sh '!=' makedoxy.sh ']'. ++++ '[' -n '' ']'. ++++ which makedoxy.sh. +++ trueExe=. ++++ readlink ''. +++ nextTarget=. ++++ basename ''. +++ printf %s ''. ++ SHELLNAME=. ```. ### Expected behavior. It works also within Jenkins. ### To Reproduce. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/2650/console. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. It worked well until dash support was added. https://github.com/root-project/root/commit/d96ea9fb8f5b66bf95d7324de09c8a167b97a6c8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10417
https://github.com/root-project/root/issues/10417:163,deployability,build,building,163,"thisroot.sh fails to identify shellname when running from executable script; ### Describe the bug. As found out by @couet, when running thisroot.sh on jenkins for building the docu (https://github.com/root-project/rootspi/blob/master/rdoc/makedoxy.sh#L38), the shell name is not properly found (probably bash?), it gets mixed by thinking that makedoxy.sh is an executable (trueExe=makedoxy.sh). That same function works otherwise well outside Jenkins with dash, bash or zsh. This is because makedoxy.sh is run as an executable, rather than 'sourced', see https://github.com/root-project/rootspi/blob/5b8d1747ccd9a093322fbdc268cff960f2c1159d/rdoc/makedoc.sh#L57. ```. +++ getTrueShellExeName. +++ local trueExe nextTarget. ++++ ps -o comm= 2106668. +++ trueExe=makedoxy.sh. +++ '[' makedoxy.sh = makedoxy.sh ']'. +++ '[' makedoxy.sh '!=' makedoxy.sh ']'. ++++ '[' -n '' ']'. ++++ which makedoxy.sh. +++ trueExe=. ++++ readlink ''. +++ nextTarget=. ++++ basename ''. +++ printf %s ''. ++ SHELLNAME=. ```. ### Expected behavior. It works also within Jenkins. ### To Reproduce. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/2650/console. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. It worked well until dash support was added. https://github.com/root-project/root/commit/d96ea9fb8f5b66bf95d7324de09c8a167b97a6c8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10417
https://github.com/root-project/root/issues/10417:1089,deployability,servic,services,1089,"thisroot.sh fails to identify shellname when running from executable script; ### Describe the bug. As found out by @couet, when running thisroot.sh on jenkins for building the docu (https://github.com/root-project/rootspi/blob/master/rdoc/makedoxy.sh#L38), the shell name is not properly found (probably bash?), it gets mixed by thinking that makedoxy.sh is an executable (trueExe=makedoxy.sh). That same function works otherwise well outside Jenkins with dash, bash or zsh. This is because makedoxy.sh is run as an executable, rather than 'sourced', see https://github.com/root-project/rootspi/blob/5b8d1747ccd9a093322fbdc268cff960f2c1159d/rdoc/makedoc.sh#L57. ```. +++ getTrueShellExeName. +++ local trueExe nextTarget. ++++ ps -o comm= 2106668. +++ trueExe=makedoxy.sh. +++ '[' makedoxy.sh = makedoxy.sh ']'. +++ '[' makedoxy.sh '!=' makedoxy.sh ']'. ++++ '[' -n '' ']'. ++++ which makedoxy.sh. +++ trueExe=. ++++ readlink ''. +++ nextTarget=. ++++ basename ''. +++ printf %s ''. ++ SHELLNAME=. ```. ### Expected behavior. It works also within Jenkins. ### To Reproduce. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/2650/console. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. It worked well until dash support was added. https://github.com/root-project/root/commit/d96ea9fb8f5b66bf95d7324de09c8a167b97a6c8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10417
https://github.com/root-project/root/issues/10417:1089,integrability,servic,services,1089,"thisroot.sh fails to identify shellname when running from executable script; ### Describe the bug. As found out by @couet, when running thisroot.sh on jenkins for building the docu (https://github.com/root-project/rootspi/blob/master/rdoc/makedoxy.sh#L38), the shell name is not properly found (probably bash?), it gets mixed by thinking that makedoxy.sh is an executable (trueExe=makedoxy.sh). That same function works otherwise well outside Jenkins with dash, bash or zsh. This is because makedoxy.sh is run as an executable, rather than 'sourced', see https://github.com/root-project/rootspi/blob/5b8d1747ccd9a093322fbdc268cff960f2c1159d/rdoc/makedoc.sh#L57. ```. +++ getTrueShellExeName. +++ local trueExe nextTarget. ++++ ps -o comm= 2106668. +++ trueExe=makedoxy.sh. +++ '[' makedoxy.sh = makedoxy.sh ']'. +++ '[' makedoxy.sh '!=' makedoxy.sh ']'. ++++ '[' -n '' ']'. ++++ which makedoxy.sh. +++ trueExe=. ++++ readlink ''. +++ nextTarget=. ++++ basename ''. +++ printf %s ''. ++ SHELLNAME=. ```. ### Expected behavior. It works also within Jenkins. ### To Reproduce. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/2650/console. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. It worked well until dash support was added. https://github.com/root-project/root/commit/d96ea9fb8f5b66bf95d7324de09c8a167b97a6c8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10417
https://github.com/root-project/root/issues/10417:1089,modifiability,servic,services,1089,"thisroot.sh fails to identify shellname when running from executable script; ### Describe the bug. As found out by @couet, when running thisroot.sh on jenkins for building the docu (https://github.com/root-project/rootspi/blob/master/rdoc/makedoxy.sh#L38), the shell name is not properly found (probably bash?), it gets mixed by thinking that makedoxy.sh is an executable (trueExe=makedoxy.sh). That same function works otherwise well outside Jenkins with dash, bash or zsh. This is because makedoxy.sh is run as an executable, rather than 'sourced', see https://github.com/root-project/rootspi/blob/5b8d1747ccd9a093322fbdc268cff960f2c1159d/rdoc/makedoc.sh#L57. ```. +++ getTrueShellExeName. +++ local trueExe nextTarget. ++++ ps -o comm= 2106668. +++ trueExe=makedoxy.sh. +++ '[' makedoxy.sh = makedoxy.sh ']'. +++ '[' makedoxy.sh '!=' makedoxy.sh ']'. ++++ '[' -n '' ']'. ++++ which makedoxy.sh. +++ trueExe=. ++++ readlink ''. +++ nextTarget=. ++++ basename ''. +++ printf %s ''. ++ SHELLNAME=. ```. ### Expected behavior. It works also within Jenkins. ### To Reproduce. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/2650/console. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. It worked well until dash support was added. https://github.com/root-project/root/commit/d96ea9fb8f5b66bf95d7324de09c8a167b97a6c8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10417
https://github.com/root-project/root/issues/10417:12,reliability,fail,fails,12,"thisroot.sh fails to identify shellname when running from executable script; ### Describe the bug. As found out by @couet, when running thisroot.sh on jenkins for building the docu (https://github.com/root-project/rootspi/blob/master/rdoc/makedoxy.sh#L38), the shell name is not properly found (probably bash?), it gets mixed by thinking that makedoxy.sh is an executable (trueExe=makedoxy.sh). That same function works otherwise well outside Jenkins with dash, bash or zsh. This is because makedoxy.sh is run as an executable, rather than 'sourced', see https://github.com/root-project/rootspi/blob/5b8d1747ccd9a093322fbdc268cff960f2c1159d/rdoc/makedoc.sh#L57. ```. +++ getTrueShellExeName. +++ local trueExe nextTarget. ++++ ps -o comm= 2106668. +++ trueExe=makedoxy.sh. +++ '[' makedoxy.sh = makedoxy.sh ']'. +++ '[' makedoxy.sh '!=' makedoxy.sh ']'. ++++ '[' -n '' ']'. ++++ which makedoxy.sh. +++ trueExe=. ++++ readlink ''. +++ nextTarget=. ++++ basename ''. +++ printf %s ''. ++ SHELLNAME=. ```. ### Expected behavior. It works also within Jenkins. ### To Reproduce. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/2650/console. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. It worked well until dash support was added. https://github.com/root-project/root/commit/d96ea9fb8f5b66bf95d7324de09c8a167b97a6c8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10417
https://github.com/root-project/root/issues/10417:21,security,ident,identify,21,"thisroot.sh fails to identify shellname when running from executable script; ### Describe the bug. As found out by @couet, when running thisroot.sh on jenkins for building the docu (https://github.com/root-project/rootspi/blob/master/rdoc/makedoxy.sh#L38), the shell name is not properly found (probably bash?), it gets mixed by thinking that makedoxy.sh is an executable (trueExe=makedoxy.sh). That same function works otherwise well outside Jenkins with dash, bash or zsh. This is because makedoxy.sh is run as an executable, rather than 'sourced', see https://github.com/root-project/rootspi/blob/5b8d1747ccd9a093322fbdc268cff960f2c1159d/rdoc/makedoc.sh#L57. ```. +++ getTrueShellExeName. +++ local trueExe nextTarget. ++++ ps -o comm= 2106668. +++ trueExe=makedoxy.sh. +++ '[' makedoxy.sh = makedoxy.sh ']'. +++ '[' makedoxy.sh '!=' makedoxy.sh ']'. ++++ '[' -n '' ']'. ++++ which makedoxy.sh. +++ trueExe=. ++++ readlink ''. +++ nextTarget=. ++++ basename ''. +++ printf %s ''. ++ SHELLNAME=. ```. ### Expected behavior. It works also within Jenkins. ### To Reproduce. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/2650/console. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. It worked well until dash support was added. https://github.com/root-project/root/commit/d96ea9fb8f5b66bf95d7324de09c8a167b97a6c8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10417
https://github.com/root-project/root/issues/10417:1324,security,Team,Team,1324,"thisroot.sh fails to identify shellname when running from executable script; ### Describe the bug. As found out by @couet, when running thisroot.sh on jenkins for building the docu (https://github.com/root-project/rootspi/blob/master/rdoc/makedoxy.sh#L38), the shell name is not properly found (probably bash?), it gets mixed by thinking that makedoxy.sh is an executable (trueExe=makedoxy.sh). That same function works otherwise well outside Jenkins with dash, bash or zsh. This is because makedoxy.sh is run as an executable, rather than 'sourced', see https://github.com/root-project/rootspi/blob/5b8d1747ccd9a093322fbdc268cff960f2c1159d/rdoc/makedoc.sh#L57. ```. +++ getTrueShellExeName. +++ local trueExe nextTarget. ++++ ps -o comm= 2106668. +++ trueExe=makedoxy.sh. +++ '[' makedoxy.sh = makedoxy.sh ']'. +++ '[' makedoxy.sh '!=' makedoxy.sh ']'. ++++ '[' -n '' ']'. ++++ which makedoxy.sh. +++ trueExe=. ++++ readlink ''. +++ nextTarget=. ++++ basename ''. +++ printf %s ''. ++ SHELLNAME=. ```. ### Expected behavior. It works also within Jenkins. ### To Reproduce. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/2650/console. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. It worked well until dash support was added. https://github.com/root-project/root/commit/d96ea9fb8f5b66bf95d7324de09c8a167b97a6c8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10417
https://github.com/root-project/root/issues/10417:1673,testability,context,context,1673,"thisroot.sh fails to identify shellname when running from executable script; ### Describe the bug. As found out by @couet, when running thisroot.sh on jenkins for building the docu (https://github.com/root-project/rootspi/blob/master/rdoc/makedoxy.sh#L38), the shell name is not properly found (probably bash?), it gets mixed by thinking that makedoxy.sh is an executable (trueExe=makedoxy.sh). That same function works otherwise well outside Jenkins with dash, bash or zsh. This is because makedoxy.sh is run as an executable, rather than 'sourced', see https://github.com/root-project/rootspi/blob/5b8d1747ccd9a093322fbdc268cff960f2c1159d/rdoc/makedoc.sh#L57. ```. +++ getTrueShellExeName. +++ local trueExe nextTarget. ++++ ps -o comm= 2106668. +++ trueExe=makedoxy.sh. +++ '[' makedoxy.sh = makedoxy.sh ']'. +++ '[' makedoxy.sh '!=' makedoxy.sh ']'. ++++ '[' -n '' ']'. ++++ which makedoxy.sh. +++ trueExe=. ++++ readlink ''. +++ nextTarget=. ++++ basename ''. +++ printf %s ''. ++ SHELLNAME=. ```. ### Expected behavior. It works also within Jenkins. ### To Reproduce. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/2650/console. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. It worked well until dash support was added. https://github.com/root-project/root/commit/d96ea9fb8f5b66bf95d7324de09c8a167b97a6c8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10417
https://github.com/root-project/root/issues/10417:1016,usability,behavi,behavior,1016,"thisroot.sh fails to identify shellname when running from executable script; ### Describe the bug. As found out by @couet, when running thisroot.sh on jenkins for building the docu (https://github.com/root-project/rootspi/blob/master/rdoc/makedoxy.sh#L38), the shell name is not properly found (probably bash?), it gets mixed by thinking that makedoxy.sh is an executable (trueExe=makedoxy.sh). That same function works otherwise well outside Jenkins with dash, bash or zsh. This is because makedoxy.sh is run as an executable, rather than 'sourced', see https://github.com/root-project/rootspi/blob/5b8d1747ccd9a093322fbdc268cff960f2c1159d/rdoc/makedoc.sh#L57. ```. +++ getTrueShellExeName. +++ local trueExe nextTarget. ++++ ps -o comm= 2106668. +++ trueExe=makedoxy.sh. +++ '[' makedoxy.sh = makedoxy.sh ']'. +++ '[' makedoxy.sh '!=' makedoxy.sh ']'. ++++ '[' -n '' ']'. ++++ which makedoxy.sh. +++ trueExe=. ++++ readlink ''. +++ nextTarget=. ++++ basename ''. +++ printf %s ''. ++ SHELLNAME=. ```. ### Expected behavior. It works also within Jenkins. ### To Reproduce. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/2650/console. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. It worked well until dash support was added. https://github.com/root-project/root/commit/d96ea9fb8f5b66bf95d7324de09c8a167b97a6c8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10417
https://github.com/root-project/root/issues/10417:1529,usability,help,help,1529,"thisroot.sh fails to identify shellname when running from executable script; ### Describe the bug. As found out by @couet, when running thisroot.sh on jenkins for building the docu (https://github.com/root-project/rootspi/blob/master/rdoc/makedoxy.sh#L38), the shell name is not properly found (probably bash?), it gets mixed by thinking that makedoxy.sh is an executable (trueExe=makedoxy.sh). That same function works otherwise well outside Jenkins with dash, bash or zsh. This is because makedoxy.sh is run as an executable, rather than 'sourced', see https://github.com/root-project/rootspi/blob/5b8d1747ccd9a093322fbdc268cff960f2c1159d/rdoc/makedoc.sh#L57. ```. +++ getTrueShellExeName. +++ local trueExe nextTarget. ++++ ps -o comm= 2106668. +++ trueExe=makedoxy.sh. +++ '[' makedoxy.sh = makedoxy.sh ']'. +++ '[' makedoxy.sh '!=' makedoxy.sh ']'. ++++ '[' -n '' ']'. ++++ which makedoxy.sh. +++ trueExe=. ++++ readlink ''. +++ nextTarget=. ++++ basename ''. +++ printf %s ''. ++ SHELLNAME=. ```. ### Expected behavior. It works also within Jenkins. ### To Reproduce. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/2650/console. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. It worked well until dash support was added. https://github.com/root-project/root/commit/d96ea9fb8f5b66bf95d7324de09c8a167b97a6c8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10417
https://github.com/root-project/root/issues/10417:1708,usability,support,support,1708,"thisroot.sh fails to identify shellname when running from executable script; ### Describe the bug. As found out by @couet, when running thisroot.sh on jenkins for building the docu (https://github.com/root-project/rootspi/blob/master/rdoc/makedoxy.sh#L38), the shell name is not properly found (probably bash?), it gets mixed by thinking that makedoxy.sh is an executable (trueExe=makedoxy.sh). That same function works otherwise well outside Jenkins with dash, bash or zsh. This is because makedoxy.sh is run as an executable, rather than 'sourced', see https://github.com/root-project/rootspi/blob/5b8d1747ccd9a093322fbdc268cff960f2c1159d/rdoc/makedoc.sh#L57. ```. +++ getTrueShellExeName. +++ local trueExe nextTarget. ++++ ps -o comm= 2106668. +++ trueExe=makedoxy.sh. +++ '[' makedoxy.sh = makedoxy.sh ']'. +++ '[' makedoxy.sh '!=' makedoxy.sh ']'. ++++ '[' -n '' ']'. ++++ which makedoxy.sh. +++ trueExe=. ++++ readlink ''. +++ nextTarget=. ++++ basename ''. +++ printf %s ''. ++ SHELLNAME=. ```. ### Expected behavior. It works also within Jenkins. ### To Reproduce. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/2650/console. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. It worked well until dash support was added. https://github.com/root-project/root/commit/d96ea9fb8f5b66bf95d7324de09c8a167b97a6c8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10417
https://github.com/root-project/root/pull/10418:436,deployability,updat,updated,436,"[config] Fix thisroot.sh when run from an executable script; # This Pull request:. ## Changes or fixes:. Support for dash was added recently to thisroot.sh https://github.com/root-project/root/pull/10332, but this has led to a problem when calling thisroot.sh from an executed script. The regression is fixed now by defaulting to the previous behaviour if the shell-name is not found. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes [#](https://github.com/root-project/root/issues/10417) .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10418
https://github.com/root-project/root/pull/10418:406,safety,test,tested,406,"[config] Fix thisroot.sh when run from an executable script; # This Pull request:. ## Changes or fixes:. Support for dash was added recently to thisroot.sh https://github.com/root-project/root/pull/10332, but this has led to a problem when calling thisroot.sh from an executed script. The regression is fixed now by defaulting to the previous behaviour if the shell-name is not found. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes [#](https://github.com/root-project/root/issues/10417) .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10418
https://github.com/root-project/root/pull/10418:436,safety,updat,updated,436,"[config] Fix thisroot.sh when run from an executable script; # This Pull request:. ## Changes or fixes:. Support for dash was added recently to thisroot.sh https://github.com/root-project/root/pull/10332, but this has led to a problem when calling thisroot.sh from an executed script. The regression is fixed now by defaulting to the previous behaviour if the shell-name is not found. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes [#](https://github.com/root-project/root/issues/10417) .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10418
https://github.com/root-project/root/pull/10418:436,security,updat,updated,436,"[config] Fix thisroot.sh when run from an executable script; # This Pull request:. ## Changes or fixes:. Support for dash was added recently to thisroot.sh https://github.com/root-project/root/pull/10332, but this has led to a problem when calling thisroot.sh from an executed script. The regression is fixed now by defaulting to the previous behaviour if the shell-name is not found. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes [#](https://github.com/root-project/root/issues/10417) .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10418
https://github.com/root-project/root/pull/10418:289,testability,regress,regression,289,"[config] Fix thisroot.sh when run from an executable script; # This Pull request:. ## Changes or fixes:. Support for dash was added recently to thisroot.sh https://github.com/root-project/root/pull/10332, but this has led to a problem when calling thisroot.sh from an executed script. The regression is fixed now by defaulting to the previous behaviour if the shell-name is not found. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes [#](https://github.com/root-project/root/issues/10417) .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10418
https://github.com/root-project/root/pull/10418:406,testability,test,tested,406,"[config] Fix thisroot.sh when run from an executable script; # This Pull request:. ## Changes or fixes:. Support for dash was added recently to thisroot.sh https://github.com/root-project/root/pull/10332, but this has led to a problem when calling thisroot.sh from an executed script. The regression is fixed now by defaulting to the previous behaviour if the shell-name is not found. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes [#](https://github.com/root-project/root/issues/10417) .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10418
https://github.com/root-project/root/pull/10418:105,usability,Support,Support,105,"[config] Fix thisroot.sh when run from an executable script; # This Pull request:. ## Changes or fixes:. Support for dash was added recently to thisroot.sh https://github.com/root-project/root/pull/10332, but this has led to a problem when calling thisroot.sh from an executed script. The regression is fixed now by defaulting to the previous behaviour if the shell-name is not found. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes [#](https://github.com/root-project/root/issues/10417) .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10418
https://github.com/root-project/root/pull/10418:343,usability,behavi,behaviour,343,"[config] Fix thisroot.sh when run from an executable script; # This Pull request:. ## Changes or fixes:. Support for dash was added recently to thisroot.sh https://github.com/root-project/root/pull/10332, but this has led to a problem when calling thisroot.sh from an executed script. The regression is fixed now by defaulting to the previous behaviour if the shell-name is not found. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes [#](https://github.com/root-project/root/issues/10417) .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10418
https://github.com/root-project/root/pull/10419:23,deployability,version,version,23,[RF] Remove deprecated version of `createHistogram` to see what happens; This is to see which tests are failing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10419
https://github.com/root-project/root/pull/10419:104,deployability,fail,failing,104,[RF] Remove deprecated version of `createHistogram` to see what happens; This is to see which tests are failing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10419
https://github.com/root-project/root/pull/10419:23,integrability,version,version,23,[RF] Remove deprecated version of `createHistogram` to see what happens; This is to see which tests are failing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10419
https://github.com/root-project/root/pull/10419:23,modifiability,version,version,23,[RF] Remove deprecated version of `createHistogram` to see what happens; This is to see which tests are failing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10419
https://github.com/root-project/root/pull/10419:104,reliability,fail,failing,104,[RF] Remove deprecated version of `createHistogram` to see what happens; This is to see which tests are failing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10419
https://github.com/root-project/root/pull/10419:94,safety,test,tests,94,[RF] Remove deprecated version of `createHistogram` to see what happens; This is to see which tests are failing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10419
https://github.com/root-project/root/pull/10419:94,testability,test,tests,94,[RF] Remove deprecated version of `createHistogram` to see what happens; This is to see which tests are failing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10419
https://github.com/root-project/root/pull/10420:110,deployability,log,logic,110,[core] Fix #10404: Fix interaction of TThreadExecutor and TSeq with specified beginning/range; * Modified the logic of MapReduce and Map of the TThreadExecutor which were. initially broken for the TThreadExecutor;. * Added corresponding tests. Fix https://github.com/root-project/root/issues/10404,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10420
https://github.com/root-project/root/pull/10420:1,energy efficiency,core,core,1,[core] Fix #10404: Fix interaction of TThreadExecutor and TSeq with specified beginning/range; * Modified the logic of MapReduce and Map of the TThreadExecutor which were. initially broken for the TThreadExecutor;. * Added corresponding tests. Fix https://github.com/root-project/root/issues/10404,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10420
https://github.com/root-project/root/pull/10420:68,interoperability,specif,specified,68,[core] Fix #10404: Fix interaction of TThreadExecutor and TSeq with specified beginning/range; * Modified the logic of MapReduce and Map of the TThreadExecutor which were. initially broken for the TThreadExecutor;. * Added corresponding tests. Fix https://github.com/root-project/root/issues/10404,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10420
https://github.com/root-project/root/pull/10420:110,safety,log,logic,110,[core] Fix #10404: Fix interaction of TThreadExecutor and TSeq with specified beginning/range; * Modified the logic of MapReduce and Map of the TThreadExecutor which were. initially broken for the TThreadExecutor;. * Added corresponding tests. Fix https://github.com/root-project/root/issues/10404,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10420
https://github.com/root-project/root/pull/10420:237,safety,test,tests,237,[core] Fix #10404: Fix interaction of TThreadExecutor and TSeq with specified beginning/range; * Modified the logic of MapReduce and Map of the TThreadExecutor which were. initially broken for the TThreadExecutor;. * Added corresponding tests. Fix https://github.com/root-project/root/issues/10404,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10420
https://github.com/root-project/root/pull/10420:97,security,Modif,Modified,97,[core] Fix #10404: Fix interaction of TThreadExecutor and TSeq with specified beginning/range; * Modified the logic of MapReduce and Map of the TThreadExecutor which were. initially broken for the TThreadExecutor;. * Added corresponding tests. Fix https://github.com/root-project/root/issues/10404,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10420
https://github.com/root-project/root/pull/10420:110,security,log,logic,110,[core] Fix #10404: Fix interaction of TThreadExecutor and TSeq with specified beginning/range; * Modified the logic of MapReduce and Map of the TThreadExecutor which were. initially broken for the TThreadExecutor;. * Added corresponding tests. Fix https://github.com/root-project/root/issues/10404,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10420
https://github.com/root-project/root/pull/10420:110,testability,log,logic,110,[core] Fix #10404: Fix interaction of TThreadExecutor and TSeq with specified beginning/range; * Modified the logic of MapReduce and Map of the TThreadExecutor which were. initially broken for the TThreadExecutor;. * Added corresponding tests. Fix https://github.com/root-project/root/issues/10404,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10420
https://github.com/root-project/root/pull/10420:237,testability,test,tests,237,[core] Fix #10404: Fix interaction of TThreadExecutor and TSeq with specified beginning/range; * Modified the logic of MapReduce and Map of the TThreadExecutor which were. initially broken for the TThreadExecutor;. * Added corresponding tests. Fix https://github.com/root-project/root/issues/10404,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10420
https://github.com/root-project/root/pull/10420:23,usability,interact,interaction,23,[core] Fix #10404: Fix interaction of TThreadExecutor and TSeq with specified beginning/range; * Modified the logic of MapReduce and Map of the TThreadExecutor which were. initially broken for the TThreadExecutor;. * Added corresponding tests. Fix https://github.com/root-project/root/issues/10404,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10420
https://github.com/root-project/root/pull/10421:1,energy efficiency,core,core,1,"[core] Fix interaction of Maps of TThreadExecutor and std::vectors; Fixed the types of the partial results after applying the function. Otherwise, there is a problem if `retType` is different than the input type `T`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10421
https://github.com/root-project/root/pull/10421:201,safety,input,input,201,"[core] Fix interaction of Maps of TThreadExecutor and std::vectors; Fixed the types of the partial results after applying the function. Otherwise, there is a problem if `retType` is different than the input type `T`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10421
https://github.com/root-project/root/pull/10421:11,usability,interact,interaction,11,"[core] Fix interaction of Maps of TThreadExecutor and std::vectors; Fixed the types of the partial results after applying the function. Otherwise, there is a problem if `retType` is different than the input type `T`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10421
https://github.com/root-project/root/pull/10421:201,usability,input,input,201,"[core] Fix interaction of Maps of TThreadExecutor and std::vectors; Fixed the types of the partial results after applying the function. Otherwise, there is a problem if `retType` is different than the input type `T`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10421
https://github.com/root-project/root/issues/10423:754,availability,Error,Error,754,"Reading XYZVectors with TTreeReader is broken in some cases; Reproducer:. ```cpp. #include <Math/Vector3D.h>. #include <ROOT/RDataFrame.hxx>. #include <vector>. #include <TClass.h>. int main() {. {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. ROOT::Math::XYZVector x(1, 2, 3);. std::vector<ROOT::Math::XYZVector> y{ROOT::Math::XYZVector(4,5,6)};. t.Branch(""x"", &x);. // original line:. // t.Branch(""y"", &y); // commenting this line ""fixes"" the problem! // Actual trigger:. auto c = TClass::GetClass(""std::vector<ROOT::Math::XYZVector>""); // commenting this line ""fixes"" the problem! t.Fill();. t.Write();. }. TFile f(""f.root"");. TTreeReader r(""t"", &f);. TTreeReaderValue<ROOT::Math::XYZVector> rx(r, ""x"");. r.Next();. *rx;. }. ```. yields:. ```. Error in <TTreeReaderValueBase::CreateProxy()>: The branch x contains data of type ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>. It cannot be accessed by a TTreeReaderValue<ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>>. Error in <TTreeReaderValue::Get()>: Value reader not properly initialized, did you call TTreeReader::Set(Next)Entry() or TTreeReader::Next()? ```. Interestingly, if branch `""y""` is not written out, then branch `""x""` can be read correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10423
https://github.com/root-project/root/issues/10423:1098,availability,Error,Error,1098,"Reading XYZVectors with TTreeReader is broken in some cases; Reproducer:. ```cpp. #include <Math/Vector3D.h>. #include <ROOT/RDataFrame.hxx>. #include <vector>. #include <TClass.h>. int main() {. {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. ROOT::Math::XYZVector x(1, 2, 3);. std::vector<ROOT::Math::XYZVector> y{ROOT::Math::XYZVector(4,5,6)};. t.Branch(""x"", &x);. // original line:. // t.Branch(""y"", &y); // commenting this line ""fixes"" the problem! // Actual trigger:. auto c = TClass::GetClass(""std::vector<ROOT::Math::XYZVector>""); // commenting this line ""fixes"" the problem! t.Fill();. t.Write();. }. TFile f(""f.root"");. TTreeReader r(""t"", &f);. TTreeReaderValue<ROOT::Math::XYZVector> rx(r, ""x"");. r.Next();. *rx;. }. ```. yields:. ```. Error in <TTreeReaderValueBase::CreateProxy()>: The branch x contains data of type ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>. It cannot be accessed by a TTreeReaderValue<ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>>. Error in <TTreeReaderValue::Get()>: Value reader not properly initialized, did you call TTreeReader::Set(Next)Entry() or TTreeReader::Next()? ```. Interestingly, if branch `""y""` is not written out, then branch `""x""` can be read correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10423
https://github.com/root-project/root/issues/10423:815,deployability,contain,contains,815,"Reading XYZVectors with TTreeReader is broken in some cases; Reproducer:. ```cpp. #include <Math/Vector3D.h>. #include <ROOT/RDataFrame.hxx>. #include <vector>. #include <TClass.h>. int main() {. {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. ROOT::Math::XYZVector x(1, 2, 3);. std::vector<ROOT::Math::XYZVector> y{ROOT::Math::XYZVector(4,5,6)};. t.Branch(""x"", &x);. // original line:. // t.Branch(""y"", &y); // commenting this line ""fixes"" the problem! // Actual trigger:. auto c = TClass::GetClass(""std::vector<ROOT::Math::XYZVector>""); // commenting this line ""fixes"" the problem! t.Fill();. t.Write();. }. TFile f(""f.root"");. TTreeReader r(""t"", &f);. TTreeReaderValue<ROOT::Math::XYZVector> rx(r, ""x"");. r.Next();. *rx;. }. ```. yields:. ```. Error in <TTreeReaderValueBase::CreateProxy()>: The branch x contains data of type ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>. It cannot be accessed by a TTreeReaderValue<ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>>. Error in <TTreeReaderValue::Get()>: Value reader not properly initialized, did you call TTreeReader::Set(Next)Entry() or TTreeReader::Next()? ```. Interestingly, if branch `""y""` is not written out, then branch `""x""` can be read correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10423
https://github.com/root-project/root/issues/10423:754,performance,Error,Error,754,"Reading XYZVectors with TTreeReader is broken in some cases; Reproducer:. ```cpp. #include <Math/Vector3D.h>. #include <ROOT/RDataFrame.hxx>. #include <vector>. #include <TClass.h>. int main() {. {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. ROOT::Math::XYZVector x(1, 2, 3);. std::vector<ROOT::Math::XYZVector> y{ROOT::Math::XYZVector(4,5,6)};. t.Branch(""x"", &x);. // original line:. // t.Branch(""y"", &y); // commenting this line ""fixes"" the problem! // Actual trigger:. auto c = TClass::GetClass(""std::vector<ROOT::Math::XYZVector>""); // commenting this line ""fixes"" the problem! t.Fill();. t.Write();. }. TFile f(""f.root"");. TTreeReader r(""t"", &f);. TTreeReaderValue<ROOT::Math::XYZVector> rx(r, ""x"");. r.Next();. *rx;. }. ```. yields:. ```. Error in <TTreeReaderValueBase::CreateProxy()>: The branch x contains data of type ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>. It cannot be accessed by a TTreeReaderValue<ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>>. Error in <TTreeReaderValue::Get()>: Value reader not properly initialized, did you call TTreeReader::Set(Next)Entry() or TTreeReader::Next()? ```. Interestingly, if branch `""y""` is not written out, then branch `""x""` can be read correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10423
https://github.com/root-project/root/issues/10423:1098,performance,Error,Error,1098,"Reading XYZVectors with TTreeReader is broken in some cases; Reproducer:. ```cpp. #include <Math/Vector3D.h>. #include <ROOT/RDataFrame.hxx>. #include <vector>. #include <TClass.h>. int main() {. {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. ROOT::Math::XYZVector x(1, 2, 3);. std::vector<ROOT::Math::XYZVector> y{ROOT::Math::XYZVector(4,5,6)};. t.Branch(""x"", &x);. // original line:. // t.Branch(""y"", &y); // commenting this line ""fixes"" the problem! // Actual trigger:. auto c = TClass::GetClass(""std::vector<ROOT::Math::XYZVector>""); // commenting this line ""fixes"" the problem! t.Fill();. t.Write();. }. TFile f(""f.root"");. TTreeReader r(""t"", &f);. TTreeReaderValue<ROOT::Math::XYZVector> rx(r, ""x"");. r.Next();. *rx;. }. ```. yields:. ```. Error in <TTreeReaderValueBase::CreateProxy()>: The branch x contains data of type ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>. It cannot be accessed by a TTreeReaderValue<ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>>. Error in <TTreeReaderValue::Get()>: Value reader not properly initialized, did you call TTreeReader::Set(Next)Entry() or TTreeReader::Next()? ```. Interestingly, if branch `""y""` is not written out, then branch `""x""` can be read correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10423
https://github.com/root-project/root/issues/10423:754,safety,Error,Error,754,"Reading XYZVectors with TTreeReader is broken in some cases; Reproducer:. ```cpp. #include <Math/Vector3D.h>. #include <ROOT/RDataFrame.hxx>. #include <vector>. #include <TClass.h>. int main() {. {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. ROOT::Math::XYZVector x(1, 2, 3);. std::vector<ROOT::Math::XYZVector> y{ROOT::Math::XYZVector(4,5,6)};. t.Branch(""x"", &x);. // original line:. // t.Branch(""y"", &y); // commenting this line ""fixes"" the problem! // Actual trigger:. auto c = TClass::GetClass(""std::vector<ROOT::Math::XYZVector>""); // commenting this line ""fixes"" the problem! t.Fill();. t.Write();. }. TFile f(""f.root"");. TTreeReader r(""t"", &f);. TTreeReaderValue<ROOT::Math::XYZVector> rx(r, ""x"");. r.Next();. *rx;. }. ```. yields:. ```. Error in <TTreeReaderValueBase::CreateProxy()>: The branch x contains data of type ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>. It cannot be accessed by a TTreeReaderValue<ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>>. Error in <TTreeReaderValue::Get()>: Value reader not properly initialized, did you call TTreeReader::Set(Next)Entry() or TTreeReader::Next()? ```. Interestingly, if branch `""y""` is not written out, then branch `""x""` can be read correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10423
https://github.com/root-project/root/issues/10423:1098,safety,Error,Error,1098,"Reading XYZVectors with TTreeReader is broken in some cases; Reproducer:. ```cpp. #include <Math/Vector3D.h>. #include <ROOT/RDataFrame.hxx>. #include <vector>. #include <TClass.h>. int main() {. {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. ROOT::Math::XYZVector x(1, 2, 3);. std::vector<ROOT::Math::XYZVector> y{ROOT::Math::XYZVector(4,5,6)};. t.Branch(""x"", &x);. // original line:. // t.Branch(""y"", &y); // commenting this line ""fixes"" the problem! // Actual trigger:. auto c = TClass::GetClass(""std::vector<ROOT::Math::XYZVector>""); // commenting this line ""fixes"" the problem! t.Fill();. t.Write();. }. TFile f(""f.root"");. TTreeReader r(""t"", &f);. TTreeReaderValue<ROOT::Math::XYZVector> rx(r, ""x"");. r.Next();. *rx;. }. ```. yields:. ```. Error in <TTreeReaderValueBase::CreateProxy()>: The branch x contains data of type ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>. It cannot be accessed by a TTreeReaderValue<ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>>. Error in <TTreeReaderValue::Get()>: Value reader not properly initialized, did you call TTreeReader::Set(Next)Entry() or TTreeReader::Next()? ```. Interestingly, if branch `""y""` is not written out, then branch `""x""` can be read correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10423
https://github.com/root-project/root/issues/10423:960,security,access,accessed,960,"Reading XYZVectors with TTreeReader is broken in some cases; Reproducer:. ```cpp. #include <Math/Vector3D.h>. #include <ROOT/RDataFrame.hxx>. #include <vector>. #include <TClass.h>. int main() {. {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. ROOT::Math::XYZVector x(1, 2, 3);. std::vector<ROOT::Math::XYZVector> y{ROOT::Math::XYZVector(4,5,6)};. t.Branch(""x"", &x);. // original line:. // t.Branch(""y"", &y); // commenting this line ""fixes"" the problem! // Actual trigger:. auto c = TClass::GetClass(""std::vector<ROOT::Math::XYZVector>""); // commenting this line ""fixes"" the problem! t.Fill();. t.Write();. }. TFile f(""f.root"");. TTreeReader r(""t"", &f);. TTreeReaderValue<ROOT::Math::XYZVector> rx(r, ""x"");. r.Next();. *rx;. }. ```. yields:. ```. Error in <TTreeReaderValueBase::CreateProxy()>: The branch x contains data of type ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>. It cannot be accessed by a TTreeReaderValue<ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>>. Error in <TTreeReaderValue::Get()>: Value reader not properly initialized, did you call TTreeReader::Set(Next)Entry() or TTreeReader::Next()? ```. Interestingly, if branch `""y""` is not written out, then branch `""x""` can be read correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10423
https://github.com/root-project/root/issues/10423:754,usability,Error,Error,754,"Reading XYZVectors with TTreeReader is broken in some cases; Reproducer:. ```cpp. #include <Math/Vector3D.h>. #include <ROOT/RDataFrame.hxx>. #include <vector>. #include <TClass.h>. int main() {. {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. ROOT::Math::XYZVector x(1, 2, 3);. std::vector<ROOT::Math::XYZVector> y{ROOT::Math::XYZVector(4,5,6)};. t.Branch(""x"", &x);. // original line:. // t.Branch(""y"", &y); // commenting this line ""fixes"" the problem! // Actual trigger:. auto c = TClass::GetClass(""std::vector<ROOT::Math::XYZVector>""); // commenting this line ""fixes"" the problem! t.Fill();. t.Write();. }. TFile f(""f.root"");. TTreeReader r(""t"", &f);. TTreeReaderValue<ROOT::Math::XYZVector> rx(r, ""x"");. r.Next();. *rx;. }. ```. yields:. ```. Error in <TTreeReaderValueBase::CreateProxy()>: The branch x contains data of type ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>. It cannot be accessed by a TTreeReaderValue<ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>>. Error in <TTreeReaderValue::Get()>: Value reader not properly initialized, did you call TTreeReader::Set(Next)Entry() or TTreeReader::Next()? ```. Interestingly, if branch `""y""` is not written out, then branch `""x""` can be read correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10423
https://github.com/root-project/root/issues/10423:1098,usability,Error,Error,1098,"Reading XYZVectors with TTreeReader is broken in some cases; Reproducer:. ```cpp. #include <Math/Vector3D.h>. #include <ROOT/RDataFrame.hxx>. #include <vector>. #include <TClass.h>. int main() {. {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. ROOT::Math::XYZVector x(1, 2, 3);. std::vector<ROOT::Math::XYZVector> y{ROOT::Math::XYZVector(4,5,6)};. t.Branch(""x"", &x);. // original line:. // t.Branch(""y"", &y); // commenting this line ""fixes"" the problem! // Actual trigger:. auto c = TClass::GetClass(""std::vector<ROOT::Math::XYZVector>""); // commenting this line ""fixes"" the problem! t.Fill();. t.Write();. }. TFile f(""f.root"");. TTreeReader r(""t"", &f);. TTreeReaderValue<ROOT::Math::XYZVector> rx(r, ""x"");. r.Next();. *rx;. }. ```. yields:. ```. Error in <TTreeReaderValueBase::CreateProxy()>: The branch x contains data of type ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>. It cannot be accessed by a TTreeReaderValue<ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>>. Error in <TTreeReaderValue::Get()>: Value reader not properly initialized, did you call TTreeReader::Set(Next)Entry() or TTreeReader::Next()? ```. Interestingly, if branch `""y""` is not written out, then branch `""x""` can be read correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10423
https://github.com/root-project/root/pull/10424:402,deployability,stack,stackoverflow,402,"[config] correctly identify shell name from an executable script; # This Pull request:. ## Changes or fixes:. Shell-name was not being found if the script was an executable, in that case it was assumed it was bash (see https://github.com/root-project/root/pull/10418). This PR applies a fix in the function getting the shell name, technical details are discussed here in the comments section:. https://stackoverflow.com/questions/71944436/how-to-get-the-unix-shell-executable-name-for-a-script-marked-as-executable-and . Now, the shell is correctly identified in all tested cases. For security, it will print a warning if shell name is not found, but still run. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10424
https://github.com/root-project/root/pull/10424:713,deployability,updat,updated,713,"[config] correctly identify shell name from an executable script; # This Pull request:. ## Changes or fixes:. Shell-name was not being found if the script was an executable, in that case it was assumed it was bash (see https://github.com/root-project/root/pull/10418). This PR applies a fix in the function getting the shell name, technical details are discussed here in the comments section:. https://stackoverflow.com/questions/71944436/how-to-get-the-unix-shell-executable-name-for-a-script-marked-as-executable-and . Now, the shell is correctly identified in all tested cases. For security, it will print a warning if shell name is not found, but still run. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10424
https://github.com/root-project/root/pull/10424:567,safety,test,tested,567,"[config] correctly identify shell name from an executable script; # This Pull request:. ## Changes or fixes:. Shell-name was not being found if the script was an executable, in that case it was assumed it was bash (see https://github.com/root-project/root/pull/10418). This PR applies a fix in the function getting the shell name, technical details are discussed here in the comments section:. https://stackoverflow.com/questions/71944436/how-to-get-the-unix-shell-executable-name-for-a-script-marked-as-executable-and . Now, the shell is correctly identified in all tested cases. For security, it will print a warning if shell name is not found, but still run. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10424
https://github.com/root-project/root/pull/10424:683,safety,test,tested,683,"[config] correctly identify shell name from an executable script; # This Pull request:. ## Changes or fixes:. Shell-name was not being found if the script was an executable, in that case it was assumed it was bash (see https://github.com/root-project/root/pull/10418). This PR applies a fix in the function getting the shell name, technical details are discussed here in the comments section:. https://stackoverflow.com/questions/71944436/how-to-get-the-unix-shell-executable-name-for-a-script-marked-as-executable-and . Now, the shell is correctly identified in all tested cases. For security, it will print a warning if shell name is not found, but still run. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10424
https://github.com/root-project/root/pull/10424:713,safety,updat,updated,713,"[config] correctly identify shell name from an executable script; # This Pull request:. ## Changes or fixes:. Shell-name was not being found if the script was an executable, in that case it was assumed it was bash (see https://github.com/root-project/root/pull/10418). This PR applies a fix in the function getting the shell name, technical details are discussed here in the comments section:. https://stackoverflow.com/questions/71944436/how-to-get-the-unix-shell-executable-name-for-a-script-marked-as-executable-and . Now, the shell is correctly identified in all tested cases. For security, it will print a warning if shell name is not found, but still run. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10424
https://github.com/root-project/root/pull/10424:19,security,ident,identify,19,"[config] correctly identify shell name from an executable script; # This Pull request:. ## Changes or fixes:. Shell-name was not being found if the script was an executable, in that case it was assumed it was bash (see https://github.com/root-project/root/pull/10418). This PR applies a fix in the function getting the shell name, technical details are discussed here in the comments section:. https://stackoverflow.com/questions/71944436/how-to-get-the-unix-shell-executable-name-for-a-script-marked-as-executable-and . Now, the shell is correctly identified in all tested cases. For security, it will print a warning if shell name is not found, but still run. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10424
https://github.com/root-project/root/pull/10424:549,security,ident,identified,549,"[config] correctly identify shell name from an executable script; # This Pull request:. ## Changes or fixes:. Shell-name was not being found if the script was an executable, in that case it was assumed it was bash (see https://github.com/root-project/root/pull/10418). This PR applies a fix in the function getting the shell name, technical details are discussed here in the comments section:. https://stackoverflow.com/questions/71944436/how-to-get-the-unix-shell-executable-name-for-a-script-marked-as-executable-and . Now, the shell is correctly identified in all tested cases. For security, it will print a warning if shell name is not found, but still run. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10424
https://github.com/root-project/root/pull/10424:585,security,secur,security,585,"[config] correctly identify shell name from an executable script; # This Pull request:. ## Changes or fixes:. Shell-name was not being found if the script was an executable, in that case it was assumed it was bash (see https://github.com/root-project/root/pull/10418). This PR applies a fix in the function getting the shell name, technical details are discussed here in the comments section:. https://stackoverflow.com/questions/71944436/how-to-get-the-unix-shell-executable-name-for-a-script-marked-as-executable-and . Now, the shell is correctly identified in all tested cases. For security, it will print a warning if shell name is not found, but still run. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10424
https://github.com/root-project/root/pull/10424:713,security,updat,updated,713,"[config] correctly identify shell name from an executable script; # This Pull request:. ## Changes or fixes:. Shell-name was not being found if the script was an executable, in that case it was assumed it was bash (see https://github.com/root-project/root/pull/10418). This PR applies a fix in the function getting the shell name, technical details are discussed here in the comments section:. https://stackoverflow.com/questions/71944436/how-to-get-the-unix-shell-executable-name-for-a-script-marked-as-executable-and . Now, the shell is correctly identified in all tested cases. For security, it will print a warning if shell name is not found, but still run. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10424
https://github.com/root-project/root/pull/10424:567,testability,test,tested,567,"[config] correctly identify shell name from an executable script; # This Pull request:. ## Changes or fixes:. Shell-name was not being found if the script was an executable, in that case it was assumed it was bash (see https://github.com/root-project/root/pull/10418). This PR applies a fix in the function getting the shell name, technical details are discussed here in the comments section:. https://stackoverflow.com/questions/71944436/how-to-get-the-unix-shell-executable-name-for-a-script-marked-as-executable-and . Now, the shell is correctly identified in all tested cases. For security, it will print a warning if shell name is not found, but still run. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10424
https://github.com/root-project/root/pull/10424:683,testability,test,tested,683,"[config] correctly identify shell name from an executable script; # This Pull request:. ## Changes or fixes:. Shell-name was not being found if the script was an executable, in that case it was assumed it was bash (see https://github.com/root-project/root/pull/10418). This PR applies a fix in the function getting the shell name, technical details are discussed here in the comments section:. https://stackoverflow.com/questions/71944436/how-to-get-the-unix-shell-executable-name-for-a-script-marked-as-executable-and . Now, the shell is correctly identified in all tested cases. For security, it will print a warning if shell name is not found, but still run. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10424
https://github.com/root-project/root/pull/10425:110,deployability,build,build,110,[skip-ci] Remove ellipsis; Remove the ellipsis character in documentation. It created problems during doxygen build.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10425
https://github.com/root-project/root/pull/10425:60,usability,document,documentation,60,[skip-ci] Remove ellipsis; Remove the ellipsis character in documentation. It created problems during doxygen build.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10425
https://github.com/root-project/root/pull/10426:53,deployability,version,version,53,Adjust TGraph2DAsymmErrors; 1. Do not increase class version in TGraph2DPainter. 2. Use `nullptr` in `TGraphErrors` and `TGraph2DErrors` classes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10426
https://github.com/root-project/root/pull/10426:53,integrability,version,version,53,Adjust TGraph2DAsymmErrors; 1. Do not increase class version in TGraph2DPainter. 2. Use `nullptr` in `TGraphErrors` and `TGraph2DErrors` classes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10426
https://github.com/root-project/root/pull/10426:53,modifiability,version,version,53,Adjust TGraph2DAsymmErrors; 1. Do not increase class version in TGraph2DPainter. 2. Use `nullptr` in `TGraphErrors` and `TGraph2DErrors` classes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10426
https://github.com/root-project/root/pull/10427:1,energy efficiency,core,core,1,"[core] Fix TThreadExecutor's MapReduce on std::vectors with chunks; The last chunk of partial results of MapReduce with std::vectors had the. size of all other chunks. This is dangerous, since the default vector. values might cause unexpected results of the Reduce function. Test added to verify the correctness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10427
https://github.com/root-project/root/pull/10427:258,energy efficiency,Reduc,Reduce,258,"[core] Fix TThreadExecutor's MapReduce on std::vectors with chunks; The last chunk of partial results of MapReduce with std::vectors had the. size of all other chunks. This is dangerous, since the default vector. values might cause unexpected results of the Reduce function. Test added to verify the correctness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10427
https://github.com/root-project/root/pull/10427:275,safety,Test,Test,275,"[core] Fix TThreadExecutor's MapReduce on std::vectors with chunks; The last chunk of partial results of MapReduce with std::vectors had the. size of all other chunks. This is dangerous, since the default vector. values might cause unexpected results of the Reduce function. Test added to verify the correctness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10427
https://github.com/root-project/root/pull/10427:275,testability,Test,Test,275,"[core] Fix TThreadExecutor's MapReduce on std::vectors with chunks; The last chunk of partial results of MapReduce with std::vectors had the. size of all other chunks. This is dangerous, since the default vector. values might cause unexpected results of the Reduce function. Test added to verify the correctness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10427
https://github.com/root-project/root/pull/10427:289,testability,verif,verify,289,"[core] Fix TThreadExecutor's MapReduce on std::vectors with chunks; The last chunk of partial results of MapReduce with std::vectors had the. size of all other chunks. This is dangerous, since the default vector. values might cause unexpected results of the Reduce function. Test added to verify the correctness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10427
https://github.com/root-project/root/pull/10429:21,availability,operat,operation,21,[6.26] Copy Snapshot operation arguments in a distributed task; Logical backport of #10391,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10429
https://github.com/root-project/root/pull/10429:64,deployability,Log,Logical,64,[6.26] Copy Snapshot operation arguments in a distributed task; Logical backport of #10391,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10429
https://github.com/root-project/root/pull/10429:46,interoperability,distribut,distributed,46,[6.26] Copy Snapshot operation arguments in a distributed task; Logical backport of #10391,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10429
https://github.com/root-project/root/pull/10429:64,safety,Log,Logical,64,[6.26] Copy Snapshot operation arguments in a distributed task; Logical backport of #10391,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10429
https://github.com/root-project/root/pull/10429:64,security,Log,Logical,64,[6.26] Copy Snapshot operation arguments in a distributed task; Logical backport of #10391,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10429
https://github.com/root-project/root/pull/10429:64,testability,Log,Logical,64,[6.26] Copy Snapshot operation arguments in a distributed task; Logical backport of #10391,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10429
https://github.com/root-project/root/issues/10430:236,availability,error,errors,236,"df105_WBosonAnalysis.py does not convert in notebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resource",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:593,availability,ERROR,ERROR,593,"df105_WBosonAnalysis.py does not convert in notebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resource",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:601,availability,Error,Error,601,"df105_WBosonAnalysis.py does not convert in notebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resource",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2448,availability,error,error,2448,", **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2662,availability,avail,available,2662,"rt/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opend",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:99,deployability,build,building,99,"df105_WBosonAnalysis.py does not convert in notebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resource",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:836,deployability,resourc,resources,836,"df105_WBosonAnalysis.py does not convert in notebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resource",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:895,deployability,resourc,resources,895,"df105_WBosonAnalysis.py does not convert in notebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resource",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:905,deployability,resourc,resources,905,"df105_WBosonAnalysis.py does not convert in notebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resource",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1041,deployability,resourc,resources,1041,"tebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preproces",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1051,deployability,resourc,resources,1051,"ng `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, reso",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1237,deployability,resourc,resources,1237,":. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1247,deployability,resourc,resources,1247,"/usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/pyt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1377,deployability,resourc,resources,1377,"notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1442,deployability,resourc,resources,1442,"home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1573,deployability,resourc,resources,1573,"[NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1611,deployability,resourc,resources,1611,"verting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1877,deployability,resourc,resources,1877,"ok_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)"").",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1992,deployability,resourc,resources,1992," in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2052,deployability,resourc,resources,2052,"ces, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit mu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2176,deployability,resourc,resources,2176,"notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2215,deployability,resourc,resources,2215,", as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.Enabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2584,deployability,scale,scale,2584,"lf._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2841,deployability,scale,scale,2841,"ll__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opendata/w"". ------------------. An exception has occurred, use %tb to see the full traceback. SystemExit: 2. SystemExit: 2. NOTEBOOK_CONVERSION_WARNING: Nbconvert failed for noteboo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:3119,deployability,scale,scale,3119,"rs/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opendata/w"". ------------------. An exception has occurred, use %tb to see the full traceback. SystemExit: 2. SystemExit: 2. NOTEBOOK_CONVERSION_WARNING: Nbconvert failed for notebook df105_WBosonAnalysis.py.ipynb with return code 1. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Writing 14399 bytes to /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.nbconvert.ipynb. 4.8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:3305,deployability,contain,contains,3305,"ine 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opendata/w"". ------------------. An exception has occurred, use %tb to see the full traceback. SystemExit: 2. SystemExit: 2. NOTEBOOK_CONVERSION_WARNING: Nbconvert failed for notebook df105_WBosonAnalysis.py.ipynb with return code 1. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Writing 14399 bytes to /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.nbconvert.ipynb. 4.87410593033. ```. ### Expected behavior. It should convert . ### To Reproduce. Execute the command above. ### Possible Fix. I looks like the argument parsing cannot be handled properly in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:3826,deployability,fail,failed,3826,"float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opendata/w"". ------------------. An exception has occurred, use %tb to see the full traceback. SystemExit: 2. SystemExit: 2. NOTEBOOK_CONVERSION_WARNING: Nbconvert failed for notebook df105_WBosonAnalysis.py.ipynb with return code 1. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Writing 14399 bytes to /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.nbconvert.ipynb. 4.87410593033. ```. ### Expected behavior. It should convert . ### To Reproduce. Execute the command above. ### Possible Fix. I looks like the argument parsing cannot be handled properly in the notebook. It is not possible to fix (I tried) this tutorial easily as the `args` variable is used every where. I suggest to not generate the notebook (for the time being)on this example as it polutes the log of the ref guide build. Experts (@etejedor ? @vepadulano ?) eyes are needed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:4517,deployability,log,log,4517,"float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opendata/w"". ------------------. An exception has occurred, use %tb to see the full traceback. SystemExit: 2. SystemExit: 2. NOTEBOOK_CONVERSION_WARNING: Nbconvert failed for notebook df105_WBosonAnalysis.py.ipynb with return code 1. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Writing 14399 bytes to /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.nbconvert.ipynb. 4.87410593033. ```. ### Expected behavior. It should convert . ### To Reproduce. Execute the command above. ### Possible Fix. I looks like the argument parsing cannot be handled properly in the notebook. It is not possible to fix (I tried) this tutorial easily as the `args` variable is used every where. I suggest to not generate the notebook (for the time being)on this example as it polutes the log of the ref guide build. Experts (@etejedor ? @vepadulano ?) eyes are needed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:4538,deployability,build,build,4538,"float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opendata/w"". ------------------. An exception has occurred, use %tb to see the full traceback. SystemExit: 2. SystemExit: 2. NOTEBOOK_CONVERSION_WARNING: Nbconvert failed for notebook df105_WBosonAnalysis.py.ipynb with return code 1. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Writing 14399 bytes to /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.nbconvert.ipynb. 4.87410593033. ```. ### Expected behavior. It should convert . ### To Reproduce. Execute the command above. ### Possible Fix. I looks like the argument parsing cannot be handled properly in the notebook. It is not possible to fix (I tried) this tutorial easily as the `args` variable is used every where. I suggest to not generate the notebook (for the time being)on this example as it polutes the log of the ref guide build. Experts (@etejedor ? @vepadulano ?) eyes are needed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:836,energy efficiency,resourc,resources,836,"df105_WBosonAnalysis.py does not convert in notebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resource",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:895,energy efficiency,resourc,resources,895,"df105_WBosonAnalysis.py does not convert in notebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resource",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:905,energy efficiency,resourc,resources,905,"df105_WBosonAnalysis.py does not convert in notebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resource",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1041,energy efficiency,resourc,resources,1041,"tebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preproces",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1051,energy efficiency,resourc,resources,1051,"ng `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, reso",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1237,energy efficiency,resourc,resources,1237,":. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1247,energy efficiency,resourc,resources,1247,"/usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/pyt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1377,energy efficiency,resourc,resources,1377,"notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1442,energy efficiency,resourc,resources,1442,"home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1573,energy efficiency,resourc,resources,1573,"[NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1611,energy efficiency,resourc,resources,1611,"verting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1877,energy efficiency,resourc,resources,1877,"ok_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)"").",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1992,energy efficiency,resourc,resources,1992," in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2052,energy efficiency,resourc,resources,2052,"ces, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit mu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2176,energy efficiency,resourc,resources,2176,"notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2215,energy efficiency,resourc,resources,2215,", as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.Enabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2584,energy efficiency,scale,scale,2584,"lf._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2841,energy efficiency,scale,scale,2841,"ll__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opendata/w"". ------------------. An exception has occurred, use %tb to see the full traceback. SystemExit: 2. SystemExit: 2. NOTEBOOK_CONVERSION_WARNING: Nbconvert failed for noteboo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:3119,energy efficiency,scale,scale,3119,"rs/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opendata/w"". ------------------. An exception has occurred, use %tb to see the full traceback. SystemExit: 2. SystemExit: 2. NOTEBOOK_CONVERSION_WARNING: Nbconvert failed for notebook df105_WBosonAnalysis.py.ipynb with return code 1. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Writing 14399 bytes to /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.nbconvert.ipynb. 4.8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2960,integrability,batch,batch,2960,"line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opendata/w"". ------------------. An exception has occurred, use %tb to see the full traceback. SystemExit: 2. SystemExit: 2. NOTEBOOK_CONVERSION_WARNING: Nbconvert failed for notebook df105_WBosonAnalysis.py.ipynb with return code 1. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:3437,interoperability,format,format,3437,"ror: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opendata/w"". ------------------. An exception has occurred, use %tb to see the full traceback. SystemExit: 2. SystemExit: 2. NOTEBOOK_CONVERSION_WARNING: Nbconvert failed for notebook df105_WBosonAnalysis.py.ipynb with return code 1. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Writing 14399 bytes to /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.nbconvert.ipynb. 4.87410593033. ```. ### Expected behavior. It should convert . ### To Reproduce. Execute the command above. ### Possible Fix. I looks like the argument parsing cannot be handled properly in the notebook. It is not possible to fix (I tried) this tutorial easily as the `args` variable is used every where. I suggest to not",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:754,modifiability,pac,packages,754,"df105_WBosonAnalysis.py does not convert in notebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resource",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:945,modifiability,pac,packages,945,"df105_WBosonAnalysis.py does not convert in notebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resource",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1097,modifiability,pac,packages,1097,"ilding the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1293,modifiability,pac,packages,1293,"tnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/ex",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1488,modifiability,pac,packages,1488,"nalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1651,modifiability,pac,packages,1651,"ks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1785,modifiability,pac,packages,1785,", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", def",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1917,modifiability,pac,packages,1917," ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""stor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2092,modifiability,pac,packages,2092,"-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset onl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2262,modifiability,pac,packages,2262,"ile ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2584,modifiability,scal,scale,2584,"lf._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2841,modifiability,scal,scale,2841,"ll__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opendata/w"". ------------------. An exception has occurred, use %tb to see the full traceback. SystemExit: 2. SystemExit: 2. NOTEBOOK_CONVERSION_WARNING: Nbconvert failed for noteboo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:3119,modifiability,scal,scale,3119,"rs/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opendata/w"". ------------------. An exception has occurred, use %tb to see the full traceback. SystemExit: 2. SystemExit: 2. NOTEBOOK_CONVERSION_WARNING: Nbconvert failed for notebook df105_WBosonAnalysis.py.ipynb with return code 1. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Writing 14399 bytes to /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.nbconvert.ipynb. 4.8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:4394,modifiability,variab,variable,4394,"float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opendata/w"". ------------------. An exception has occurred, use %tb to see the full traceback. SystemExit: 2. SystemExit: 2. NOTEBOOK_CONVERSION_WARNING: Nbconvert failed for notebook df105_WBosonAnalysis.py.ipynb with return code 1. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Writing 14399 bytes to /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.nbconvert.ipynb. 4.87410593033. ```. ### Expected behavior. It should convert . ### To Reproduce. Execute the command above. ### Possible Fix. I looks like the argument parsing cannot be handled properly in the notebook. It is not possible to fix (I tried) this tutorial easily as the `args` variable is used every where. I suggest to not generate the notebook (for the time being)on this example as it polutes the log of the ref guide build. Experts (@etejedor ? @vepadulano ?) eyes are needed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:236,performance,error,errors,236,"df105_WBosonAnalysis.py does not convert in notebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resource",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:593,performance,ERROR,ERROR,593,"df105_WBosonAnalysis.py does not convert in notebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resource",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:601,performance,Error,Error,601,"df105_WBosonAnalysis.py does not convert in notebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resource",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:836,performance,resourc,resources,836,"df105_WBosonAnalysis.py does not convert in notebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resource",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:895,performance,resourc,resources,895,"df105_WBosonAnalysis.py does not convert in notebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resource",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:905,performance,resourc,resources,905,"df105_WBosonAnalysis.py does not convert in notebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resource",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1041,performance,resourc,resources,1041,"tebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preproces",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1051,performance,resourc,resources,1051,"ng `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, reso",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1237,performance,resourc,resources,1237,":. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1247,performance,resourc,resources,1247,"/usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/pyt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1377,performance,resourc,resources,1377,"notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1442,performance,resourc,resources,1442,"home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1573,performance,resourc,resources,1573,"[NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1611,performance,resourc,resources,1611,"verting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1877,performance,resourc,resources,1877,"ok_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)"").",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1992,performance,resourc,resources,1992," in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2052,performance,resourc,resources,2052,"ces, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit mu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2176,performance,resourc,resources,2176,"notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2215,performance,resourc,resources,2215,", as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.Enabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2448,performance,error,error,2448,", **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2584,performance,scale,scale,2584,"lf._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2841,performance,scale,scale,2841,"ll__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opendata/w"". ------------------. An exception has occurred, use %tb to see the full traceback. SystemExit: 2. SystemExit: 2. NOTEBOOK_CONVERSION_WARNING: Nbconvert failed for noteboo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2960,performance,batch,batch,2960,"line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opendata/w"". ------------------. An exception has occurred, use %tb to see the full traceback. SystemExit: 2. SystemExit: 2. NOTEBOOK_CONVERSION_WARNING: Nbconvert failed for notebook df105_WBosonAnalysis.py.ipynb with return code 1. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:3119,performance,scale,scale,3119,"rs/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opendata/w"". ------------------. An exception has occurred, use %tb to see the full traceback. SystemExit: 2. SystemExit: 2. NOTEBOOK_CONVERSION_WARNING: Nbconvert failed for notebook df105_WBosonAnalysis.py.ipynb with return code 1. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Writing 14399 bytes to /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.nbconvert.ipynb. 4.8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:4472,performance,time,time,4472,"float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opendata/w"". ------------------. An exception has occurred, use %tb to see the full traceback. SystemExit: 2. SystemExit: 2. NOTEBOOK_CONVERSION_WARNING: Nbconvert failed for notebook df105_WBosonAnalysis.py.ipynb with return code 1. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Writing 14399 bytes to /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.nbconvert.ipynb. 4.87410593033. ```. ### Expected behavior. It should convert . ### To Reproduce. Execute the command above. ### Possible Fix. I looks like the argument parsing cannot be handled properly in the notebook. It is not possible to fix (I tried) this tutorial easily as the `args` variable is used every where. I suggest to not generate the notebook (for the time being)on this example as it polutes the log of the ref guide build. Experts (@etejedor ? @vepadulano ?) eyes are needed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:24,reliability,doe,does,24,"df105_WBosonAnalysis.py does not convert in notebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resource",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:167,reliability,doe,does,167,"df105_WBosonAnalysis.py does not convert in notebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resource",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2662,reliability,availab,available,2662,"rt/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opend",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:3826,reliability,fail,failed,3826,"float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opendata/w"". ------------------. An exception has occurred, use %tb to see the full traceback. SystemExit: 2. SystemExit: 2. NOTEBOOK_CONVERSION_WARNING: Nbconvert failed for notebook df105_WBosonAnalysis.py.ipynb with return code 1. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Writing 14399 bytes to /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.nbconvert.ipynb. 4.87410593033. ```. ### Expected behavior. It should convert . ### To Reproduce. Execute the command above. ### Possible Fix. I looks like the argument parsing cannot be handled properly in the notebook. It is not possible to fix (I tried) this tutorial easily as the `args` variable is used every where. I suggest to not generate the notebook (for the time being)on this example as it polutes the log of the ref guide build. Experts (@etejedor ? @vepadulano ?) eyes are needed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:236,safety,error,errors,236,"df105_WBosonAnalysis.py does not convert in notebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resource",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:593,safety,ERROR,ERROR,593,"df105_WBosonAnalysis.py does not convert in notebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resource",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:601,safety,Error,Error,601,"df105_WBosonAnalysis.py does not convert in notebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resource",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:836,safety,resourc,resources,836,"df105_WBosonAnalysis.py does not convert in notebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resource",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:895,safety,resourc,resources,895,"df105_WBosonAnalysis.py does not convert in notebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resource",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:905,safety,resourc,resources,905,"df105_WBosonAnalysis.py does not convert in notebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resource",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1041,safety,resourc,resources,1041,"tebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preproces",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1051,safety,resourc,resources,1051,"ng `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, reso",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1237,safety,resourc,resources,1237,":. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1247,safety,resourc,resources,1247,"/usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/pyt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1377,safety,resourc,resources,1377,"notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1442,safety,resourc,resources,1442,"home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1573,safety,resourc,resources,1573,"[NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1611,safety,resourc,resources,1611,"verting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1877,safety,resourc,resources,1877,"ok_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)"").",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1992,safety,resourc,resources,1992," in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2052,safety,resourc,resources,2052,"ces, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit mu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2176,safety,resourc,resources,2176,"notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2215,safety,resourc,resources,2215,", as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.Enabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2448,safety,error,error,2448,", **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2662,safety,avail,available,2662,"rt/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opend",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:3698,safety,except,exception,3698,"float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opendata/w"". ------------------. An exception has occurred, use %tb to see the full traceback. SystemExit: 2. SystemExit: 2. NOTEBOOK_CONVERSION_WARNING: Nbconvert failed for notebook df105_WBosonAnalysis.py.ipynb with return code 1. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Writing 14399 bytes to /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.nbconvert.ipynb. 4.87410593033. ```. ### Expected behavior. It should convert . ### To Reproduce. Execute the command above. ### Possible Fix. I looks like the argument parsing cannot be handled properly in the notebook. It is not possible to fix (I tried) this tutorial easily as the `args` variable is used every where. I suggest to not generate the notebook (for the time being)on this example as it polutes the log of the ref guide build. Experts (@etejedor ? @vepadulano ?) eyes are needed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:4517,safety,log,log,4517,"float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opendata/w"". ------------------. An exception has occurred, use %tb to see the full traceback. SystemExit: 2. SystemExit: 2. NOTEBOOK_CONVERSION_WARNING: Nbconvert failed for notebook df105_WBosonAnalysis.py.ipynb with return code 1. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Writing 14399 bytes to /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.nbconvert.ipynb. 4.87410593033. ```. ### Expected behavior. It should convert . ### To Reproduce. Execute the command above. ### Possible Fix. I looks like the argument parsing cannot be handled properly in the notebook. It is not possible to fix (I tried) this tutorial easily as the `args` variable is used every where. I suggest to not generate the notebook (for the time being)on this example as it polutes the log of the ref guide build. Experts (@etejedor ? @vepadulano ?) eyes are needed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2662,security,availab,available,2662,"rt/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opend",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:4517,security,log,log,4517,"float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opendata/w"". ------------------. An exception has occurred, use %tb to see the full traceback. SystemExit: 2. SystemExit: 2. NOTEBOOK_CONVERSION_WARNING: Nbconvert failed for notebook df105_WBosonAnalysis.py.ipynb with return code 1. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Writing 14399 bytes to /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.nbconvert.ipynb. 4.87410593033. ```. ### Expected behavior. It should convert . ### To Reproduce. Execute the command above. ### Possible Fix. I looks like the argument parsing cannot be handled properly in the notebook. It is not possible to fix (I tried) this tutorial easily as the `args` variable is used every where. I suggest to not generate the notebook (for the time being)on this example as it polutes the log of the ref guide build. Experts (@etejedor ? @vepadulano ?) eyes are needed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:690,testability,Trace,Traceback,690,"df105_WBosonAnalysis.py does not convert in notebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resource",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:836,testability,resourc,resources,836,"df105_WBosonAnalysis.py does not convert in notebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resource",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:895,testability,resourc,resources,895,"df105_WBosonAnalysis.py does not convert in notebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resource",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:905,testability,resourc,resources,905,"df105_WBosonAnalysis.py does not convert in notebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resource",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1041,testability,resourc,resources,1041,"tebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preproces",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1051,testability,resourc,resources,1051,"ng `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, reso",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1237,testability,resourc,resources,1237,":. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1247,testability,resourc,resources,1247,"/usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/pyt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1377,testability,resourc,resources,1377,"notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1442,testability,resourc,resources,1442,"home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1573,testability,resourc,resources,1573,"[NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1611,testability,resourc,resources,1611,"verting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1877,testability,resourc,resources,1877,"ok_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)"").",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:1992,testability,resourc,resources,1992," in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2052,testability,resourc,resources,2052,"ces, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit mu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2176,testability,resourc,resources,2176,"notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2215,testability,resourc,resources,2215,", as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.Enabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:3746,testability,trace,traceback,3746,"float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opendata/w"". ------------------. An exception has occurred, use %tb to see the full traceback. SystemExit: 2. SystemExit: 2. NOTEBOOK_CONVERSION_WARNING: Nbconvert failed for notebook df105_WBosonAnalysis.py.ipynb with return code 1. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Writing 14399 bytes to /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.nbconvert.ipynb. 4.87410593033. ```. ### Expected behavior. It should convert . ### To Reproduce. Execute the command above. ### Possible Fix. I looks like the argument parsing cannot be handled properly in the notebook. It is not possible to fix (I tried) this tutorial easily as the `args` variable is used every where. I suggest to not generate the notebook (for the time being)on this example as it polutes the log of the ref guide build. Experts (@etejedor ? @vepadulano ?) eyes are needed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:4517,testability,log,log,4517,"float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opendata/w"". ------------------. An exception has occurred, use %tb to see the full traceback. SystemExit: 2. SystemExit: 2. NOTEBOOK_CONVERSION_WARNING: Nbconvert failed for notebook df105_WBosonAnalysis.py.ipynb with return code 1. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Writing 14399 bytes to /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.nbconvert.ipynb. 4.87410593033. ```. ### Expected behavior. It should convert . ### To Reproduce. Execute the command above. ### Possible Fix. I looks like the argument parsing cannot be handled properly in the notebook. It is not possible to fix (I tried) this tutorial easily as the `args` variable is used every where. I suggest to not generate the notebook (for the time being)on this example as it polutes the log of the ref guide build. Experts (@etejedor ? @vepadulano ?) eyes are needed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:122,usability,guid,guide,122,"df105_WBosonAnalysis.py does not convert in notebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resource",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:236,usability,error,errors,236,"df105_WBosonAnalysis.py does not convert in notebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resource",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:593,usability,ERROR,ERROR,593,"df105_WBosonAnalysis.py does not convert in notebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resource",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:601,usability,Error,Error,601,"df105_WBosonAnalysis.py does not convert in notebook using `nbconvert`; ### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`. we get the following errors:. ```. $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/. 0.0331268310547. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Executing notebook with kernel: python2. [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'. Traceback (most recent call last):. File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook. output, resources = self.exporter.from_filename(notebook_filename, resources=resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename. return self.from_file(f, resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file. return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node. nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resource",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2448,usability,error,error,2448,", **kw). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node. nb_copy, resources = self._preprocess(nb_copy, resources). File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2620,usability,help,help,2620," File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". else: dataset_path = ""root://eospub",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2687,usability,usab,usable,2687,"y"", line 316, in _preprocess. nbc, resc = preprocessor(nbc, resc). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opendata/w"". ---------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2802,usability,help,help,2802,"preprocessors/base.py"", line 47, in __call__. return self.preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opendata/w"". ------------------. An exception has occurred, use %tb to see the full traceback. SystemExit: 2. SystemExit: 2. NOTEBOOK_CONVERSI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:2945,usability,help,help,2945,"rs/execute.py"", line 405, in preprocess. nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opendata/w"". ------------------. An exception has occurred, use %tb to see the full traceback. SystemExit: 2. SystemExit: 2. NOTEBOOK_CONVERSION_WARNING: Nbconvert failed for notebook df105_WBosonAnalysis.py.ipynb with return code 1. [NbConvertApp] Converting notebook /home/sftnight/r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:3036,usability,help,help,3036,"reprocess(nb, resources). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess. nb.cells[index], resources = self.preprocess_cell(cell, resources, index). File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell. raise CellExecutionError.from_cell_and_msg(cell, out). nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:. ------------------. parser = argparse.ArgumentParser(). parser.add_argument(""--lumi-scale"", type=float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opendata/w"". ------------------. An exception has occurred, use %tb to see the full traceback. SystemExit: 2. SystemExit: 2. NOTEBOOK_CONVERSION_WARNING: Nbconvert failed for notebook df105_WBosonAnalysis.py.ipynb with return code 1. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Writing 14399 by",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:4152,usability,behavi,behavior,4152,"float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opendata/w"". ------------------. An exception has occurred, use %tb to see the full traceback. SystemExit: 2. SystemExit: 2. NOTEBOOK_CONVERSION_WARNING: Nbconvert failed for notebook df105_WBosonAnalysis.py.ipynb with return code 1. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Writing 14399 bytes to /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.nbconvert.ipynb. 4.87410593033. ```. ### Expected behavior. It should convert . ### To Reproduce. Execute the command above. ### Possible Fix. I looks like the argument parsing cannot be handled properly in the notebook. It is not possible to fix (I tried) this tutorial easily as the `args` variable is used every where. I suggest to not generate the notebook (for the time being)on this example as it polutes the log of the ref guide build. Experts (@etejedor ? @vepadulano ?) eyes are needed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:4212,usability,command,command,4212,"float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opendata/w"". ------------------. An exception has occurred, use %tb to see the full traceback. SystemExit: 2. SystemExit: 2. NOTEBOOK_CONVERSION_WARNING: Nbconvert failed for notebook df105_WBosonAnalysis.py.ipynb with return code 1. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Writing 14399 bytes to /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.nbconvert.ipynb. 4.87410593033. ```. ### Expected behavior. It should convert . ### To Reproduce. Execute the command above. ### Possible Fix. I looks like the argument parsing cannot be handled properly in the notebook. It is not possible to fix (I tried) this tutorial easily as the `args` variable is used every where. I suggest to not generate the notebook (for the time being)on this example as it polutes the log of the ref guide build. Experts (@etejedor ? @vepadulano ?) eyes are needed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/issues/10430:4532,usability,guid,guide,4532,"float, default=0.001,. help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""). parser.add_argument(""--full-dataset"", action=""store_true"", default=False,. help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""). parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""). parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""). args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True). if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1. else: lumi_scale = args.lumi_scale. lumi = 10064.0. print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22"". else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opendata/w"". ------------------. An exception has occurred, use %tb to see the full traceback. SystemExit: 2. SystemExit: 2. NOTEBOOK_CONVERSION_WARNING: Nbconvert failed for notebook df105_WBosonAnalysis.py.ipynb with return code 1. [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook. [NbConvertApp] Writing 14399 bytes to /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.nbconvert.ipynb. 4.87410593033. ```. ### Expected behavior. It should convert . ### To Reproduce. Execute the command above. ### Possible Fix. I looks like the argument parsing cannot be handled properly in the notebook. It is not possible to fix (I tried) this tutorial easily as the `args` variable is used every where. I suggest to not generate the notebook (for the time being)on this example as it polutes the log of the ref guide build. Experts (@etejedor ? @vepadulano ?) eyes are needed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10430
https://github.com/root-project/root/pull/10433:95,availability,avail,available,95,[skip-ci] Disable animated gif production by default.; On some machines the gif library is not available. The animated gif production is disabled by default. The tutorial header explains how to activate it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10433
https://github.com/root-project/root/pull/10433:95,reliability,availab,available,95,[skip-ci] Disable animated gif production by default.; On some machines the gif library is not available. The animated gif production is disabled by default. The tutorial header explains how to activate it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10433
https://github.com/root-project/root/pull/10433:95,safety,avail,available,95,[skip-ci] Disable animated gif production by default.; On some machines the gif library is not available. The animated gif production is disabled by default. The tutorial header explains how to activate it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10433
https://github.com/root-project/root/pull/10433:95,security,availab,available,95,[skip-ci] Disable animated gif production by default.; On some machines the gif library is not available. The animated gif production is disabled by default. The tutorial header explains how to activate it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10433
https://github.com/root-project/root/pull/10434:62,deployability,build,build,62,[skip-ci] Some tutorials need python3; python3 is now used to build the reference because some tutorials like `distrdf001_spark_connection.py` require python3. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10434
https://github.com/root-project/root/pull/10435:25,availability,error,error,25,[GSOC][TMVA][SOFIE] Some error messages and spelling mistakes fixed related to operators; This Pull request: fixes some error messages and spelling mistakes in operators . ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10435
https://github.com/root-project/root/pull/10435:79,availability,operat,operators,79,[GSOC][TMVA][SOFIE] Some error messages and spelling mistakes fixed related to operators; This Pull request: fixes some error messages and spelling mistakes in operators . ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10435
https://github.com/root-project/root/pull/10435:120,availability,error,error,120,[GSOC][TMVA][SOFIE] Some error messages and spelling mistakes fixed related to operators; This Pull request: fixes some error messages and spelling mistakes in operators . ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10435
https://github.com/root-project/root/pull/10435:160,availability,operat,operators,160,[GSOC][TMVA][SOFIE] Some error messages and spelling mistakes fixed related to operators; This Pull request: fixes some error messages and spelling mistakes in operators . ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10435
https://github.com/root-project/root/pull/10435:223,deployability,updat,updated,223,[GSOC][TMVA][SOFIE] Some error messages and spelling mistakes fixed related to operators; This Pull request: fixes some error messages and spelling mistakes in operators . ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10435
https://github.com/root-project/root/pull/10435:31,integrability,messag,messages,31,[GSOC][TMVA][SOFIE] Some error messages and spelling mistakes fixed related to operators; This Pull request: fixes some error messages and spelling mistakes in operators . ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10435
https://github.com/root-project/root/pull/10435:126,integrability,messag,messages,126,[GSOC][TMVA][SOFIE] Some error messages and spelling mistakes fixed related to operators; This Pull request: fixes some error messages and spelling mistakes in operators . ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10435
https://github.com/root-project/root/pull/10435:31,interoperability,messag,messages,31,[GSOC][TMVA][SOFIE] Some error messages and spelling mistakes fixed related to operators; This Pull request: fixes some error messages and spelling mistakes in operators . ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10435
https://github.com/root-project/root/pull/10435:126,interoperability,messag,messages,126,[GSOC][TMVA][SOFIE] Some error messages and spelling mistakes fixed related to operators; This Pull request: fixes some error messages and spelling mistakes in operators . ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10435
https://github.com/root-project/root/pull/10435:25,performance,error,error,25,[GSOC][TMVA][SOFIE] Some error messages and spelling mistakes fixed related to operators; This Pull request: fixes some error messages and spelling mistakes in operators . ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10435
https://github.com/root-project/root/pull/10435:120,performance,error,error,120,[GSOC][TMVA][SOFIE] Some error messages and spelling mistakes fixed related to operators; This Pull request: fixes some error messages and spelling mistakes in operators . ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10435
https://github.com/root-project/root/pull/10435:25,safety,error,error,25,[GSOC][TMVA][SOFIE] Some error messages and spelling mistakes fixed related to operators; This Pull request: fixes some error messages and spelling mistakes in operators . ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10435
https://github.com/root-project/root/pull/10435:120,safety,error,error,120,[GSOC][TMVA][SOFIE] Some error messages and spelling mistakes fixed related to operators; This Pull request: fixes some error messages and spelling mistakes in operators . ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10435
https://github.com/root-project/root/pull/10435:193,safety,test,tested,193,[GSOC][TMVA][SOFIE] Some error messages and spelling mistakes fixed related to operators; This Pull request: fixes some error messages and spelling mistakes in operators . ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10435
https://github.com/root-project/root/pull/10435:223,safety,updat,updated,223,[GSOC][TMVA][SOFIE] Some error messages and spelling mistakes fixed related to operators; This Pull request: fixes some error messages and spelling mistakes in operators . ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10435
https://github.com/root-project/root/pull/10435:223,security,updat,updated,223,[GSOC][TMVA][SOFIE] Some error messages and spelling mistakes fixed related to operators; This Pull request: fixes some error messages and spelling mistakes in operators . ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10435
https://github.com/root-project/root/pull/10435:193,testability,test,tested,193,[GSOC][TMVA][SOFIE] Some error messages and spelling mistakes fixed related to operators; This Pull request: fixes some error messages and spelling mistakes in operators . ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10435
https://github.com/root-project/root/pull/10435:25,usability,error,error,25,[GSOC][TMVA][SOFIE] Some error messages and spelling mistakes fixed related to operators; This Pull request: fixes some error messages and spelling mistakes in operators . ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10435
https://github.com/root-project/root/pull/10435:120,usability,error,error,120,[GSOC][TMVA][SOFIE] Some error messages and spelling mistakes fixed related to operators; This Pull request: fixes some error messages and spelling mistakes in operators . ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10435
https://github.com/root-project/root/pull/10436:91,security,access,access,91,"[skip-ci][win] Disable the df013_InspectAnalysis.C tutorial on Windows; It crashes with an access violation, so disable it on Windows (32 and 64 bit)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10436
https://github.com/root-project/root/pull/10438:238,deployability,updat,updated,238,[hist] Clarify DoProject2D return pointer ownership; # This Pull request:. ## Changes or fixes:. Clarifies the need to delete TH1 pointer after DoProject3D if histogram was not existing. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10400,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10438
https://github.com/root-project/root/pull/10438:208,safety,test,tested,208,[hist] Clarify DoProject2D return pointer ownership; # This Pull request:. ## Changes or fixes:. Clarifies the need to delete TH1 pointer after DoProject3D if histogram was not existing. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10400,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10438
https://github.com/root-project/root/pull/10438:238,safety,updat,updated,238,[hist] Clarify DoProject2D return pointer ownership; # This Pull request:. ## Changes or fixes:. Clarifies the need to delete TH1 pointer after DoProject3D if histogram was not existing. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10400,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10438
https://github.com/root-project/root/pull/10438:238,security,updat,updated,238,[hist] Clarify DoProject2D return pointer ownership; # This Pull request:. ## Changes or fixes:. Clarifies the need to delete TH1 pointer after DoProject3D if histogram was not existing. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10400,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10438
https://github.com/root-project/root/pull/10438:208,testability,test,tested,208,[hist] Clarify DoProject2D return pointer ownership; # This Pull request:. ## Changes or fixes:. Clarifies the need to delete TH1 pointer after DoProject3D if histogram was not existing. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10400,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10438
https://github.com/root-project/root/pull/10439:289,integrability,transform,transformation,289,[Math] Fix memory leak when using GSLMultiFit and improve Fitter class; This Pull request fixes a memory leak reported in https://root-forum.cern.ch/t/gslmultifit-memory-leak-with-root-fitter/49566 when using GSLMultiFit. . In addition for fixing for the leak the handling of the internal transformation function is improved and an extra un-needed clone of the objective function in the Fitter class is avoided. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10439
https://github.com/root-project/root/pull/10439:289,interoperability,transform,transformation,289,[Math] Fix memory leak when using GSLMultiFit and improve Fitter class; This Pull request fixes a memory leak reported in https://root-forum.cern.ch/t/gslmultifit-memory-leak-with-root-fitter/49566 when using GSLMultiFit. . In addition for fixing for the leak the handling of the internal transformation function is improved and an extra un-needed clone of the objective function in the Fitter class is avoided. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10439
https://github.com/root-project/root/pull/10439:11,performance,memor,memory,11,[Math] Fix memory leak when using GSLMultiFit and improve Fitter class; This Pull request fixes a memory leak reported in https://root-forum.cern.ch/t/gslmultifit-memory-leak-with-root-fitter/49566 when using GSLMultiFit. . In addition for fixing for the leak the handling of the internal transformation function is improved and an extra un-needed clone of the objective function in the Fitter class is avoided. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10439
https://github.com/root-project/root/pull/10439:98,performance,memor,memory,98,[Math] Fix memory leak when using GSLMultiFit and improve Fitter class; This Pull request fixes a memory leak reported in https://root-forum.cern.ch/t/gslmultifit-memory-leak-with-root-fitter/49566 when using GSLMultiFit. . In addition for fixing for the leak the handling of the internal transformation function is improved and an extra un-needed clone of the objective function in the Fitter class is avoided. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10439
https://github.com/root-project/root/pull/10439:163,performance,memor,memory-leak-with-root-fitter,163,[Math] Fix memory leak when using GSLMultiFit and improve Fitter class; This Pull request fixes a memory leak reported in https://root-forum.cern.ch/t/gslmultifit-memory-leak-with-root-fitter/49566 when using GSLMultiFit. . In addition for fixing for the leak the handling of the internal transformation function is improved and an extra un-needed clone of the objective function in the Fitter class is avoided. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10439
https://github.com/root-project/root/pull/10439:403,safety,avoid,avoided,403,[Math] Fix memory leak when using GSLMultiFit and improve Fitter class; This Pull request fixes a memory leak reported in https://root-forum.cern.ch/t/gslmultifit-memory-leak-with-root-fitter/49566 when using GSLMultiFit. . In addition for fixing for the leak the handling of the internal transformation function is improved and an extra un-needed clone of the objective function in the Fitter class is avoided. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10439
https://github.com/root-project/root/pull/10439:11,usability,memor,memory,11,[Math] Fix memory leak when using GSLMultiFit and improve Fitter class; This Pull request fixes a memory leak reported in https://root-forum.cern.ch/t/gslmultifit-memory-leak-with-root-fitter/49566 when using GSLMultiFit. . In addition for fixing for the leak the handling of the internal transformation function is improved and an extra un-needed clone of the objective function in the Fitter class is avoided. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10439
https://github.com/root-project/root/pull/10439:98,usability,memor,memory,98,[Math] Fix memory leak when using GSLMultiFit and improve Fitter class; This Pull request fixes a memory leak reported in https://root-forum.cern.ch/t/gslmultifit-memory-leak-with-root-fitter/49566 when using GSLMultiFit. . In addition for fixing for the leak the handling of the internal transformation function is improved and an extra un-needed clone of the objective function in the Fitter class is avoided. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10439
https://github.com/root-project/root/pull/10439:163,usability,memor,memory-leak-with-root-fitter,163,[Math] Fix memory leak when using GSLMultiFit and improve Fitter class; This Pull request fixes a memory leak reported in https://root-forum.cern.ch/t/gslmultifit-memory-leak-with-root-fitter/49566 when using GSLMultiFit. . In addition for fixing for the leak the handling of the internal transformation function is improved and an extra un-needed clone of the objective function in the Fitter class is avoided. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10439
https://github.com/root-project/root/issues/10440:156,availability,error,errordef-and-gets-not-restored,156,"[RF] Making two times RooMinimizer::contour does not give back the same plot ; See https://root-forum.cern.ch/t/possible-bug-in-roominimizer-contour-change-errordef-and-gets-not-restored/46919. Calling two times: . ```. RooPlot *frame = m.contour(frac, sigma_g2, 1, 2, 3); . RooPlot *frame2 = m.contour(frac, sigma_g2, 1,2,3);. ```. gives the second time a different contour, probably using the wrong definition of the error level coming from the previous call.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10440
https://github.com/root-project/root/issues/10440:419,availability,error,error,419,"[RF] Making two times RooMinimizer::contour does not give back the same plot ; See https://root-forum.cern.ch/t/possible-bug-in-roominimizer-contour-change-errordef-and-gets-not-restored/46919. Calling two times: . ```. RooPlot *frame = m.contour(frac, sigma_g2, 1, 2, 3); . RooPlot *frame2 = m.contour(frac, sigma_g2, 1,2,3);. ```. gives the second time a different contour, probably using the wrong definition of the error level coming from the previous call.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10440
https://github.com/root-project/root/issues/10440:16,performance,time,times,16,"[RF] Making two times RooMinimizer::contour does not give back the same plot ; See https://root-forum.cern.ch/t/possible-bug-in-roominimizer-contour-change-errordef-and-gets-not-restored/46919. Calling two times: . ```. RooPlot *frame = m.contour(frac, sigma_g2, 1, 2, 3); . RooPlot *frame2 = m.contour(frac, sigma_g2, 1,2,3);. ```. gives the second time a different contour, probably using the wrong definition of the error level coming from the previous call.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10440
https://github.com/root-project/root/issues/10440:156,performance,error,errordef-and-gets-not-restored,156,"[RF] Making two times RooMinimizer::contour does not give back the same plot ; See https://root-forum.cern.ch/t/possible-bug-in-roominimizer-contour-change-errordef-and-gets-not-restored/46919. Calling two times: . ```. RooPlot *frame = m.contour(frac, sigma_g2, 1, 2, 3); . RooPlot *frame2 = m.contour(frac, sigma_g2, 1,2,3);. ```. gives the second time a different contour, probably using the wrong definition of the error level coming from the previous call.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10440
https://github.com/root-project/root/issues/10440:206,performance,time,times,206,"[RF] Making two times RooMinimizer::contour does not give back the same plot ; See https://root-forum.cern.ch/t/possible-bug-in-roominimizer-contour-change-errordef-and-gets-not-restored/46919. Calling two times: . ```. RooPlot *frame = m.contour(frac, sigma_g2, 1, 2, 3); . RooPlot *frame2 = m.contour(frac, sigma_g2, 1,2,3);. ```. gives the second time a different contour, probably using the wrong definition of the error level coming from the previous call.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10440
https://github.com/root-project/root/issues/10440:350,performance,time,time,350,"[RF] Making two times RooMinimizer::contour does not give back the same plot ; See https://root-forum.cern.ch/t/possible-bug-in-roominimizer-contour-change-errordef-and-gets-not-restored/46919. Calling two times: . ```. RooPlot *frame = m.contour(frac, sigma_g2, 1, 2, 3); . RooPlot *frame2 = m.contour(frac, sigma_g2, 1,2,3);. ```. gives the second time a different contour, probably using the wrong definition of the error level coming from the previous call.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10440
https://github.com/root-project/root/issues/10440:419,performance,error,error,419,"[RF] Making two times RooMinimizer::contour does not give back the same plot ; See https://root-forum.cern.ch/t/possible-bug-in-roominimizer-contour-change-errordef-and-gets-not-restored/46919. Calling two times: . ```. RooPlot *frame = m.contour(frac, sigma_g2, 1, 2, 3); . RooPlot *frame2 = m.contour(frac, sigma_g2, 1,2,3);. ```. gives the second time a different contour, probably using the wrong definition of the error level coming from the previous call.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10440
https://github.com/root-project/root/issues/10440:44,reliability,doe,does,44,"[RF] Making two times RooMinimizer::contour does not give back the same plot ; See https://root-forum.cern.ch/t/possible-bug-in-roominimizer-contour-change-errordef-and-gets-not-restored/46919. Calling two times: . ```. RooPlot *frame = m.contour(frac, sigma_g2, 1, 2, 3); . RooPlot *frame2 = m.contour(frac, sigma_g2, 1,2,3);. ```. gives the second time a different contour, probably using the wrong definition of the error level coming from the previous call.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10440
https://github.com/root-project/root/issues/10440:178,reliability,restor,restored,178,"[RF] Making two times RooMinimizer::contour does not give back the same plot ; See https://root-forum.cern.ch/t/possible-bug-in-roominimizer-contour-change-errordef-and-gets-not-restored/46919. Calling two times: . ```. RooPlot *frame = m.contour(frac, sigma_g2, 1, 2, 3); . RooPlot *frame2 = m.contour(frac, sigma_g2, 1,2,3);. ```. gives the second time a different contour, probably using the wrong definition of the error level coming from the previous call.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10440
https://github.com/root-project/root/issues/10440:156,safety,error,errordef-and-gets-not-restored,156,"[RF] Making two times RooMinimizer::contour does not give back the same plot ; See https://root-forum.cern.ch/t/possible-bug-in-roominimizer-contour-change-errordef-and-gets-not-restored/46919. Calling two times: . ```. RooPlot *frame = m.contour(frac, sigma_g2, 1, 2, 3); . RooPlot *frame2 = m.contour(frac, sigma_g2, 1,2,3);. ```. gives the second time a different contour, probably using the wrong definition of the error level coming from the previous call.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10440
https://github.com/root-project/root/issues/10440:419,safety,error,error,419,"[RF] Making two times RooMinimizer::contour does not give back the same plot ; See https://root-forum.cern.ch/t/possible-bug-in-roominimizer-contour-change-errordef-and-gets-not-restored/46919. Calling two times: . ```. RooPlot *frame = m.contour(frac, sigma_g2, 1, 2, 3); . RooPlot *frame2 = m.contour(frac, sigma_g2, 1,2,3);. ```. gives the second time a different contour, probably using the wrong definition of the error level coming from the previous call.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10440
https://github.com/root-project/root/issues/10440:156,usability,error,errordef-and-gets-not-restored,156,"[RF] Making two times RooMinimizer::contour does not give back the same plot ; See https://root-forum.cern.ch/t/possible-bug-in-roominimizer-contour-change-errordef-and-gets-not-restored/46919. Calling two times: . ```. RooPlot *frame = m.contour(frac, sigma_g2, 1, 2, 3); . RooPlot *frame2 = m.contour(frac, sigma_g2, 1,2,3);. ```. gives the second time a different contour, probably using the wrong definition of the error level coming from the previous call.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10440
https://github.com/root-project/root/issues/10440:419,usability,error,error,419,"[RF] Making two times RooMinimizer::contour does not give back the same plot ; See https://root-forum.cern.ch/t/possible-bug-in-roominimizer-contour-change-errordef-and-gets-not-restored/46919. Calling two times: . ```. RooPlot *frame = m.contour(frac, sigma_g2, 1, 2, 3); . RooPlot *frame2 = m.contour(frac, sigma_g2, 1,2,3);. ```. gives the second time a different contour, probably using the wrong definition of the error level coming from the previous call.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10440
https://github.com/root-project/root/pull/10441:189,performance,memor,memory,189,"[ntuple] Capture, do not generate value in RVecField::ReadGlobalImpl; The `resize` called a few lines above initializes elements as. necessary. We don't need to call GenerateValue on those memory. locations (which performs another placement new on them), rather. a CaptureValue is enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10441
https://github.com/root-project/root/pull/10441:214,performance,perform,performs,214,"[ntuple] Capture, do not generate value in RVecField::ReadGlobalImpl; The `resize` called a few lines above initializes elements as. necessary. We don't need to call GenerateValue on those memory. locations (which performs another placement new on them), rather. a CaptureValue is enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10441
https://github.com/root-project/root/pull/10441:189,usability,memor,memory,189,"[ntuple] Capture, do not generate value in RVecField::ReadGlobalImpl; The `resize` called a few lines above initializes elements as. necessary. We don't need to call GenerateValue on those memory. locations (which performs another placement new on them), rather. a CaptureValue is enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10441
https://github.com/root-project/root/pull/10441:214,usability,perform,performs,214,"[ntuple] Capture, do not generate value in RVecField::ReadGlobalImpl; The `resize` called a few lines above initializes elements as. necessary. We don't need to call GenerateValue on those memory. locations (which performs another placement new on them), rather. a CaptureValue is enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10441
https://github.com/root-project/root/pull/10442:786,deployability,updat,updated,786,"Python Tutorials for CNN, Higgs and RNN added in Tutorials/TMVA; # This Pull request: Adds the Python Tutorials to several C files in Tutorials/TMVA. One of the tasks of Pythonization project for Gsoc was to add Python tutorials for C files in Tutorials/TMVA. I have added python tutorials for TMVA_Higgs_Classification.C , TMVA_CNN_Classification.C and TMVA_RNN_Classification.C. The notebooks for the same can be found [here](https://github.com/Neel-Shah-29/root-1/tree/Neel-Shah-Notebook-final/tutorials/tmva/Notebooks). We can also make an improvement regarding adding a PyTorch model for RNN and train it, its implementation can be found [here](https://github.com/lmoneta/root/pull/17). We can add this improvement once reviewed. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10442
https://github.com/root-project/root/pull/10442:583,energy efficiency,model,model,583,"Python Tutorials for CNN, Higgs and RNN added in Tutorials/TMVA; # This Pull request: Adds the Python Tutorials to several C files in Tutorials/TMVA. One of the tasks of Pythonization project for Gsoc was to add Python tutorials for C files in Tutorials/TMVA. I have added python tutorials for TMVA_Higgs_Classification.C , TMVA_CNN_Classification.C and TMVA_RNN_Classification.C. The notebooks for the same can be found [here](https://github.com/Neel-Shah-29/root-1/tree/Neel-Shah-Notebook-final/tutorials/tmva/Notebooks). We can also make an improvement regarding adding a PyTorch model for RNN and train it, its implementation can be found [here](https://github.com/lmoneta/root/pull/17). We can add this improvement once reviewed. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10442
https://github.com/root-project/root/pull/10442:725,safety,review,reviewed,725,"Python Tutorials for CNN, Higgs and RNN added in Tutorials/TMVA; # This Pull request: Adds the Python Tutorials to several C files in Tutorials/TMVA. One of the tasks of Pythonization project for Gsoc was to add Python tutorials for C files in Tutorials/TMVA. I have added python tutorials for TMVA_Higgs_Classification.C , TMVA_CNN_Classification.C and TMVA_RNN_Classification.C. The notebooks for the same can be found [here](https://github.com/Neel-Shah-29/root-1/tree/Neel-Shah-Notebook-final/tutorials/tmva/Notebooks). We can also make an improvement regarding adding a PyTorch model for RNN and train it, its implementation can be found [here](https://github.com/lmoneta/root/pull/17). We can add this improvement once reviewed. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10442
https://github.com/root-project/root/pull/10442:756,safety,test,tested,756,"Python Tutorials for CNN, Higgs and RNN added in Tutorials/TMVA; # This Pull request: Adds the Python Tutorials to several C files in Tutorials/TMVA. One of the tasks of Pythonization project for Gsoc was to add Python tutorials for C files in Tutorials/TMVA. I have added python tutorials for TMVA_Higgs_Classification.C , TMVA_CNN_Classification.C and TMVA_RNN_Classification.C. The notebooks for the same can be found [here](https://github.com/Neel-Shah-29/root-1/tree/Neel-Shah-Notebook-final/tutorials/tmva/Notebooks). We can also make an improvement regarding adding a PyTorch model for RNN and train it, its implementation can be found [here](https://github.com/lmoneta/root/pull/17). We can add this improvement once reviewed. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10442
https://github.com/root-project/root/pull/10442:786,safety,updat,updated,786,"Python Tutorials for CNN, Higgs and RNN added in Tutorials/TMVA; # This Pull request: Adds the Python Tutorials to several C files in Tutorials/TMVA. One of the tasks of Pythonization project for Gsoc was to add Python tutorials for C files in Tutorials/TMVA. I have added python tutorials for TMVA_Higgs_Classification.C , TMVA_CNN_Classification.C and TMVA_RNN_Classification.C. The notebooks for the same can be found [here](https://github.com/Neel-Shah-29/root-1/tree/Neel-Shah-Notebook-final/tutorials/tmva/Notebooks). We can also make an improvement regarding adding a PyTorch model for RNN and train it, its implementation can be found [here](https://github.com/lmoneta/root/pull/17). We can add this improvement once reviewed. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10442
https://github.com/root-project/root/pull/10442:583,security,model,model,583,"Python Tutorials for CNN, Higgs and RNN added in Tutorials/TMVA; # This Pull request: Adds the Python Tutorials to several C files in Tutorials/TMVA. One of the tasks of Pythonization project for Gsoc was to add Python tutorials for C files in Tutorials/TMVA. I have added python tutorials for TMVA_Higgs_Classification.C , TMVA_CNN_Classification.C and TMVA_RNN_Classification.C. The notebooks for the same can be found [here](https://github.com/Neel-Shah-29/root-1/tree/Neel-Shah-Notebook-final/tutorials/tmva/Notebooks). We can also make an improvement regarding adding a PyTorch model for RNN and train it, its implementation can be found [here](https://github.com/lmoneta/root/pull/17). We can add this improvement once reviewed. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10442
https://github.com/root-project/root/pull/10442:786,security,updat,updated,786,"Python Tutorials for CNN, Higgs and RNN added in Tutorials/TMVA; # This Pull request: Adds the Python Tutorials to several C files in Tutorials/TMVA. One of the tasks of Pythonization project for Gsoc was to add Python tutorials for C files in Tutorials/TMVA. I have added python tutorials for TMVA_Higgs_Classification.C , TMVA_CNN_Classification.C and TMVA_RNN_Classification.C. The notebooks for the same can be found [here](https://github.com/Neel-Shah-29/root-1/tree/Neel-Shah-Notebook-final/tutorials/tmva/Notebooks). We can also make an improvement regarding adding a PyTorch model for RNN and train it, its implementation can be found [here](https://github.com/lmoneta/root/pull/17). We can add this improvement once reviewed. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10442
https://github.com/root-project/root/pull/10442:725,testability,review,reviewed,725,"Python Tutorials for CNN, Higgs and RNN added in Tutorials/TMVA; # This Pull request: Adds the Python Tutorials to several C files in Tutorials/TMVA. One of the tasks of Pythonization project for Gsoc was to add Python tutorials for C files in Tutorials/TMVA. I have added python tutorials for TMVA_Higgs_Classification.C , TMVA_CNN_Classification.C and TMVA_RNN_Classification.C. The notebooks for the same can be found [here](https://github.com/Neel-Shah-29/root-1/tree/Neel-Shah-Notebook-final/tutorials/tmva/Notebooks). We can also make an improvement regarding adding a PyTorch model for RNN and train it, its implementation can be found [here](https://github.com/lmoneta/root/pull/17). We can add this improvement once reviewed. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10442
https://github.com/root-project/root/pull/10442:756,testability,test,tested,756,"Python Tutorials for CNN, Higgs and RNN added in Tutorials/TMVA; # This Pull request: Adds the Python Tutorials to several C files in Tutorials/TMVA. One of the tasks of Pythonization project for Gsoc was to add Python tutorials for C files in Tutorials/TMVA. I have added python tutorials for TMVA_Higgs_Classification.C , TMVA_CNN_Classification.C and TMVA_RNN_Classification.C. The notebooks for the same can be found [here](https://github.com/Neel-Shah-29/root-1/tree/Neel-Shah-Notebook-final/tutorials/tmva/Notebooks). We can also make an improvement regarding adding a PyTorch model for RNN and train it, its implementation can be found [here](https://github.com/lmoneta/root/pull/17). We can add this improvement once reviewed. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10442
https://github.com/root-project/root/pull/10443:146,deployability,releas,release,146,Fix access violation with df017_vecOpsHEP.C on Windows; Prevent access violation when executing the df017_vecOpsHEP.C tutorial with ROOT built in release mode. To be reviewed when updating Visual Studio or LLVM,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10443
https://github.com/root-project/root/pull/10443:180,deployability,updat,updating,180,Fix access violation with df017_vecOpsHEP.C on Windows; Prevent access violation when executing the df017_vecOpsHEP.C tutorial with ROOT built in release mode. To be reviewed when updating Visual Studio or LLVM,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10443
https://github.com/root-project/root/pull/10443:56,safety,Prevent,Prevent,56,Fix access violation with df017_vecOpsHEP.C on Windows; Prevent access violation when executing the df017_vecOpsHEP.C tutorial with ROOT built in release mode. To be reviewed when updating Visual Studio or LLVM,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10443
https://github.com/root-project/root/pull/10443:166,safety,review,reviewed,166,Fix access violation with df017_vecOpsHEP.C on Windows; Prevent access violation when executing the df017_vecOpsHEP.C tutorial with ROOT built in release mode. To be reviewed when updating Visual Studio or LLVM,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10443
https://github.com/root-project/root/pull/10443:180,safety,updat,updating,180,Fix access violation with df017_vecOpsHEP.C on Windows; Prevent access violation when executing the df017_vecOpsHEP.C tutorial with ROOT built in release mode. To be reviewed when updating Visual Studio or LLVM,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10443
https://github.com/root-project/root/pull/10443:4,security,access,access,4,Fix access violation with df017_vecOpsHEP.C on Windows; Prevent access violation when executing the df017_vecOpsHEP.C tutorial with ROOT built in release mode. To be reviewed when updating Visual Studio or LLVM,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10443
https://github.com/root-project/root/pull/10443:56,security,Preven,Prevent,56,Fix access violation with df017_vecOpsHEP.C on Windows; Prevent access violation when executing the df017_vecOpsHEP.C tutorial with ROOT built in release mode. To be reviewed when updating Visual Studio or LLVM,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10443
https://github.com/root-project/root/pull/10443:64,security,access,access,64,Fix access violation with df017_vecOpsHEP.C on Windows; Prevent access violation when executing the df017_vecOpsHEP.C tutorial with ROOT built in release mode. To be reviewed when updating Visual Studio or LLVM,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10443
https://github.com/root-project/root/pull/10443:180,security,updat,updating,180,Fix access violation with df017_vecOpsHEP.C on Windows; Prevent access violation when executing the df017_vecOpsHEP.C tutorial with ROOT built in release mode. To be reviewed when updating Visual Studio or LLVM,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10443
https://github.com/root-project/root/pull/10443:166,testability,review,reviewed,166,Fix access violation with df017_vecOpsHEP.C on Windows; Prevent access violation when executing the df017_vecOpsHEP.C tutorial with ROOT built in release mode. To be reviewed when updating Visual Studio or LLVM,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10443
https://github.com/root-project/root/pull/10443:189,usability,Visual,Visual,189,Fix access violation with df017_vecOpsHEP.C on Windows; Prevent access violation when executing the df017_vecOpsHEP.C tutorial with ROOT built in release mode. To be reviewed when updating Visual Studio or LLVM,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10443
https://github.com/root-project/root/pull/10444:28,energy efficiency,core,core,28,Use override syntax in some core classes; Let avoid compiler warnings if sub-project compiled with `-Wsuggest-override` . Only some classes are adjusted,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10444
https://github.com/root-project/root/pull/10444:73,integrability,sub,sub-project,73,Use override syntax in some core classes; Let avoid compiler warnings if sub-project compiled with `-Wsuggest-override` . Only some classes are adjusted,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10444
https://github.com/root-project/root/pull/10444:46,safety,avoid,avoid,46,Use override syntax in some core classes; Let avoid compiler warnings if sub-project compiled with `-Wsuggest-override` . Only some classes are adjusted,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10444
https://github.com/root-project/root/pull/10445:98,deployability,log,logic,98,[core] Fix interaction of TThreadExecutor and TSeq with specified beginning/range; * Modified the logic of MapReduce and Map of the TThreadExecutor which were. initially broken for the TThreadExecutor;. * Added corresponding tests. Fix https://github.com/root-project/root/issues/10404.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10445
https://github.com/root-project/root/pull/10445:1,energy efficiency,core,core,1,[core] Fix interaction of TThreadExecutor and TSeq with specified beginning/range; * Modified the logic of MapReduce and Map of the TThreadExecutor which were. initially broken for the TThreadExecutor;. * Added corresponding tests. Fix https://github.com/root-project/root/issues/10404.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10445
https://github.com/root-project/root/pull/10445:56,interoperability,specif,specified,56,[core] Fix interaction of TThreadExecutor and TSeq with specified beginning/range; * Modified the logic of MapReduce and Map of the TThreadExecutor which were. initially broken for the TThreadExecutor;. * Added corresponding tests. Fix https://github.com/root-project/root/issues/10404.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10445
https://github.com/root-project/root/pull/10445:98,safety,log,logic,98,[core] Fix interaction of TThreadExecutor and TSeq with specified beginning/range; * Modified the logic of MapReduce and Map of the TThreadExecutor which were. initially broken for the TThreadExecutor;. * Added corresponding tests. Fix https://github.com/root-project/root/issues/10404.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10445
https://github.com/root-project/root/pull/10445:225,safety,test,tests,225,[core] Fix interaction of TThreadExecutor and TSeq with specified beginning/range; * Modified the logic of MapReduce and Map of the TThreadExecutor which were. initially broken for the TThreadExecutor;. * Added corresponding tests. Fix https://github.com/root-project/root/issues/10404.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10445
https://github.com/root-project/root/pull/10445:85,security,Modif,Modified,85,[core] Fix interaction of TThreadExecutor and TSeq with specified beginning/range; * Modified the logic of MapReduce and Map of the TThreadExecutor which were. initially broken for the TThreadExecutor;. * Added corresponding tests. Fix https://github.com/root-project/root/issues/10404.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10445
https://github.com/root-project/root/pull/10445:98,security,log,logic,98,[core] Fix interaction of TThreadExecutor and TSeq with specified beginning/range; * Modified the logic of MapReduce and Map of the TThreadExecutor which were. initially broken for the TThreadExecutor;. * Added corresponding tests. Fix https://github.com/root-project/root/issues/10404.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10445
https://github.com/root-project/root/pull/10445:98,testability,log,logic,98,[core] Fix interaction of TThreadExecutor and TSeq with specified beginning/range; * Modified the logic of MapReduce and Map of the TThreadExecutor which were. initially broken for the TThreadExecutor;. * Added corresponding tests. Fix https://github.com/root-project/root/issues/10404.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10445
https://github.com/root-project/root/pull/10445:225,testability,test,tests,225,[core] Fix interaction of TThreadExecutor and TSeq with specified beginning/range; * Modified the logic of MapReduce and Map of the TThreadExecutor which were. initially broken for the TThreadExecutor;. * Added corresponding tests. Fix https://github.com/root-project/root/issues/10404.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10445
https://github.com/root-project/root/pull/10445:11,usability,interact,interaction,11,[core] Fix interaction of TThreadExecutor and TSeq with specified beginning/range; * Modified the logic of MapReduce and Map of the TThreadExecutor which were. initially broken for the TThreadExecutor;. * Added corresponding tests. Fix https://github.com/root-project/root/issues/10404.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10445
https://github.com/root-project/root/pull/10446:120,security,access,access,120,Fix DF examples to make them work as notebooks; . df107_SingleTopAnalysis.py:. - fix arguments parsing. - fix data file access. df106_HiggsToFourLeptons.py:. - fix data file access. Makefile:. - Some DF tutorials need `PYSPARK_PYTHON` to be defined,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10446
https://github.com/root-project/root/pull/10446:174,security,access,access,174,Fix DF examples to make them work as notebooks; . df107_SingleTopAnalysis.py:. - fix arguments parsing. - fix data file access. df106_HiggsToFourLeptons.py:. - fix data file access. Makefile:. - Some DF tutorials need `PYSPARK_PYTHON` to be defined,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10446
https://github.com/root-project/root/issues/10447:998,deployability,version,version,998,"[RF] `RooDataSet.from_numpy` clips the values instead of skipping events; - [X] Checked for duplicates. ### Describe the bug. When i create a `RooDataSet` from a numpy array using `RooDataSet.from_numpy` the values are ""clipped"" to the range of the `RooRealVar` (setting values outside the bounds to the values at the boundary). probably caused by this code:. https://github.com/root-project/root/blob/e4e8e62c2a04bd5c167b69118bf1afba7b35081b/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py#L101-L102. ### Expected behavior. I think it should instead skip events outside of the range. When i import a TTree instead events will be skipped. ### To Reproduce. ```python. import ROOT. import numpy as np. x = ROOT.RooRealVar(""x"", """", 2, 5). rds = ROOT.RooDataSet.from_numpy({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}, [x]). list(rds.store().realStoreList().data().data()). ```. gives me. ```. [2.0, 2.0, 3.0, 4.0, 5.0, 5.0, 5.0, 5.0, 5.0]. ```. Compared to the TTree version:. ```python. ROOT.RDF.MakeNumpyDataFrame({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}).Snapshot(""tree"", ""npdf.root""). f = ROOT.TFile.Open(""npdf.root""). tree = f.Get(""tree""). rds = ROOT.RooDataSet("""", """", [x], ROOT.RooFit.Import(tree)). list(rds.store().realStoreList().data().data()). ```. gives me. ```. [2.0, 3.0, 4.0, 5.0]. ```. ### Setup. ```. ROOT Version: 6.26/00. Built for linuxx8664gcc on Mar 03 2022, 06:51:13. From tags/v6-26-00@v6-26-00. ```. installed on archlinux with pacman. ### Additional context. Thanks a lot for creating these pythonizations! I think this is really nice, making pyROOT interoperable with the rest of the python ecosystem!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10447
https://github.com/root-project/root/issues/10447:1359,deployability,Version,Version,1359,"[RF] `RooDataSet.from_numpy` clips the values instead of skipping events; - [X] Checked for duplicates. ### Describe the bug. When i create a `RooDataSet` from a numpy array using `RooDataSet.from_numpy` the values are ""clipped"" to the range of the `RooRealVar` (setting values outside the bounds to the values at the boundary). probably caused by this code:. https://github.com/root-project/root/blob/e4e8e62c2a04bd5c167b69118bf1afba7b35081b/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py#L101-L102. ### Expected behavior. I think it should instead skip events outside of the range. When i import a TTree instead events will be skipped. ### To Reproduce. ```python. import ROOT. import numpy as np. x = ROOT.RooRealVar(""x"", """", 2, 5). rds = ROOT.RooDataSet.from_numpy({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}, [x]). list(rds.store().realStoreList().data().data()). ```. gives me. ```. [2.0, 2.0, 3.0, 4.0, 5.0, 5.0, 5.0, 5.0, 5.0]. ```. Compared to the TTree version:. ```python. ROOT.RDF.MakeNumpyDataFrame({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}).Snapshot(""tree"", ""npdf.root""). f = ROOT.TFile.Open(""npdf.root""). tree = f.Get(""tree""). rds = ROOT.RooDataSet("""", """", [x], ROOT.RooFit.Import(tree)). list(rds.store().realStoreList().data().data()). ```. gives me. ```. [2.0, 3.0, 4.0, 5.0]. ```. ### Setup. ```. ROOT Version: 6.26/00. Built for linuxx8664gcc on Mar 03 2022, 06:51:13. From tags/v6-26-00@v6-26-00. ```. installed on archlinux with pacman. ### Additional context. Thanks a lot for creating these pythonizations! I think this is really nice, making pyROOT interoperable with the rest of the python ecosystem!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10447
https://github.com/root-project/root/issues/10447:1461,deployability,instal,installed,1461,"[RF] `RooDataSet.from_numpy` clips the values instead of skipping events; - [X] Checked for duplicates. ### Describe the bug. When i create a `RooDataSet` from a numpy array using `RooDataSet.from_numpy` the values are ""clipped"" to the range of the `RooRealVar` (setting values outside the bounds to the values at the boundary). probably caused by this code:. https://github.com/root-project/root/blob/e4e8e62c2a04bd5c167b69118bf1afba7b35081b/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py#L101-L102. ### Expected behavior. I think it should instead skip events outside of the range. When i import a TTree instead events will be skipped. ### To Reproduce. ```python. import ROOT. import numpy as np. x = ROOT.RooRealVar(""x"", """", 2, 5). rds = ROOT.RooDataSet.from_numpy({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}, [x]). list(rds.store().realStoreList().data().data()). ```. gives me. ```. [2.0, 2.0, 3.0, 4.0, 5.0, 5.0, 5.0, 5.0, 5.0]. ```. Compared to the TTree version:. ```python. ROOT.RDF.MakeNumpyDataFrame({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}).Snapshot(""tree"", ""npdf.root""). f = ROOT.TFile.Open(""npdf.root""). tree = f.Get(""tree""). rds = ROOT.RooDataSet("""", """", [x], ROOT.RooFit.Import(tree)). list(rds.store().realStoreList().data().data()). ```. gives me. ```. [2.0, 3.0, 4.0, 5.0]. ```. ### Setup. ```. ROOT Version: 6.26/00. Built for linuxx8664gcc on Mar 03 2022, 06:51:13. From tags/v6-26-00@v6-26-00. ```. installed on archlinux with pacman. ### Additional context. Thanks a lot for creating these pythonizations! I think this is really nice, making pyROOT interoperable with the rest of the python ecosystem!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10447
https://github.com/root-project/root/issues/10447:66,integrability,event,events,66,"[RF] `RooDataSet.from_numpy` clips the values instead of skipping events; - [X] Checked for duplicates. ### Describe the bug. When i create a `RooDataSet` from a numpy array using `RooDataSet.from_numpy` the values are ""clipped"" to the range of the `RooRealVar` (setting values outside the bounds to the values at the boundary). probably caused by this code:. https://github.com/root-project/root/blob/e4e8e62c2a04bd5c167b69118bf1afba7b35081b/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py#L101-L102. ### Expected behavior. I think it should instead skip events outside of the range. When i import a TTree instead events will be skipped. ### To Reproduce. ```python. import ROOT. import numpy as np. x = ROOT.RooRealVar(""x"", """", 2, 5). rds = ROOT.RooDataSet.from_numpy({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}, [x]). list(rds.store().realStoreList().data().data()). ```. gives me. ```. [2.0, 2.0, 3.0, 4.0, 5.0, 5.0, 5.0, 5.0, 5.0]. ```. Compared to the TTree version:. ```python. ROOT.RDF.MakeNumpyDataFrame({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}).Snapshot(""tree"", ""npdf.root""). f = ROOT.TFile.Open(""npdf.root""). tree = f.Get(""tree""). rds = ROOT.RooDataSet("""", """", [x], ROOT.RooFit.Import(tree)). list(rds.store().realStoreList().data().data()). ```. gives me. ```. [2.0, 3.0, 4.0, 5.0]. ```. ### Setup. ```. ROOT Version: 6.26/00. Built for linuxx8664gcc on Mar 03 2022, 06:51:13. From tags/v6-26-00@v6-26-00. ```. installed on archlinux with pacman. ### Additional context. Thanks a lot for creating these pythonizations! I think this is really nice, making pyROOT interoperable with the rest of the python ecosystem!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10447
https://github.com/root-project/root/issues/10447:589,integrability,event,events,589,"[RF] `RooDataSet.from_numpy` clips the values instead of skipping events; - [X] Checked for duplicates. ### Describe the bug. When i create a `RooDataSet` from a numpy array using `RooDataSet.from_numpy` the values are ""clipped"" to the range of the `RooRealVar` (setting values outside the bounds to the values at the boundary). probably caused by this code:. https://github.com/root-project/root/blob/e4e8e62c2a04bd5c167b69118bf1afba7b35081b/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py#L101-L102. ### Expected behavior. I think it should instead skip events outside of the range. When i import a TTree instead events will be skipped. ### To Reproduce. ```python. import ROOT. import numpy as np. x = ROOT.RooRealVar(""x"", """", 2, 5). rds = ROOT.RooDataSet.from_numpy({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}, [x]). list(rds.store().realStoreList().data().data()). ```. gives me. ```. [2.0, 2.0, 3.0, 4.0, 5.0, 5.0, 5.0, 5.0, 5.0]. ```. Compared to the TTree version:. ```python. ROOT.RDF.MakeNumpyDataFrame({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}).Snapshot(""tree"", ""npdf.root""). f = ROOT.TFile.Open(""npdf.root""). tree = f.Get(""tree""). rds = ROOT.RooDataSet("""", """", [x], ROOT.RooFit.Import(tree)). list(rds.store().realStoreList().data().data()). ```. gives me. ```. [2.0, 3.0, 4.0, 5.0]. ```. ### Setup. ```. ROOT Version: 6.26/00. Built for linuxx8664gcc on Mar 03 2022, 06:51:13. From tags/v6-26-00@v6-26-00. ```. installed on archlinux with pacman. ### Additional context. Thanks a lot for creating these pythonizations! I think this is really nice, making pyROOT interoperable with the rest of the python ecosystem!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10447
https://github.com/root-project/root/issues/10447:648,integrability,event,events,648,"[RF] `RooDataSet.from_numpy` clips the values instead of skipping events; - [X] Checked for duplicates. ### Describe the bug. When i create a `RooDataSet` from a numpy array using `RooDataSet.from_numpy` the values are ""clipped"" to the range of the `RooRealVar` (setting values outside the bounds to the values at the boundary). probably caused by this code:. https://github.com/root-project/root/blob/e4e8e62c2a04bd5c167b69118bf1afba7b35081b/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py#L101-L102. ### Expected behavior. I think it should instead skip events outside of the range. When i import a TTree instead events will be skipped. ### To Reproduce. ```python. import ROOT. import numpy as np. x = ROOT.RooRealVar(""x"", """", 2, 5). rds = ROOT.RooDataSet.from_numpy({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}, [x]). list(rds.store().realStoreList().data().data()). ```. gives me. ```. [2.0, 2.0, 3.0, 4.0, 5.0, 5.0, 5.0, 5.0, 5.0]. ```. Compared to the TTree version:. ```python. ROOT.RDF.MakeNumpyDataFrame({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}).Snapshot(""tree"", ""npdf.root""). f = ROOT.TFile.Open(""npdf.root""). tree = f.Get(""tree""). rds = ROOT.RooDataSet("""", """", [x], ROOT.RooFit.Import(tree)). list(rds.store().realStoreList().data().data()). ```. gives me. ```. [2.0, 3.0, 4.0, 5.0]. ```. ### Setup. ```. ROOT Version: 6.26/00. Built for linuxx8664gcc on Mar 03 2022, 06:51:13. From tags/v6-26-00@v6-26-00. ```. installed on archlinux with pacman. ### Additional context. Thanks a lot for creating these pythonizations! I think this is really nice, making pyROOT interoperable with the rest of the python ecosystem!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10447
https://github.com/root-project/root/issues/10447:998,integrability,version,version,998,"[RF] `RooDataSet.from_numpy` clips the values instead of skipping events; - [X] Checked for duplicates. ### Describe the bug. When i create a `RooDataSet` from a numpy array using `RooDataSet.from_numpy` the values are ""clipped"" to the range of the `RooRealVar` (setting values outside the bounds to the values at the boundary). probably caused by this code:. https://github.com/root-project/root/blob/e4e8e62c2a04bd5c167b69118bf1afba7b35081b/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py#L101-L102. ### Expected behavior. I think it should instead skip events outside of the range. When i import a TTree instead events will be skipped. ### To Reproduce. ```python. import ROOT. import numpy as np. x = ROOT.RooRealVar(""x"", """", 2, 5). rds = ROOT.RooDataSet.from_numpy({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}, [x]). list(rds.store().realStoreList().data().data()). ```. gives me. ```. [2.0, 2.0, 3.0, 4.0, 5.0, 5.0, 5.0, 5.0, 5.0]. ```. Compared to the TTree version:. ```python. ROOT.RDF.MakeNumpyDataFrame({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}).Snapshot(""tree"", ""npdf.root""). f = ROOT.TFile.Open(""npdf.root""). tree = f.Get(""tree""). rds = ROOT.RooDataSet("""", """", [x], ROOT.RooFit.Import(tree)). list(rds.store().realStoreList().data().data()). ```. gives me. ```. [2.0, 3.0, 4.0, 5.0]. ```. ### Setup. ```. ROOT Version: 6.26/00. Built for linuxx8664gcc on Mar 03 2022, 06:51:13. From tags/v6-26-00@v6-26-00. ```. installed on archlinux with pacman. ### Additional context. Thanks a lot for creating these pythonizations! I think this is really nice, making pyROOT interoperable with the rest of the python ecosystem!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10447
https://github.com/root-project/root/issues/10447:1359,integrability,Version,Version,1359,"[RF] `RooDataSet.from_numpy` clips the values instead of skipping events; - [X] Checked for duplicates. ### Describe the bug. When i create a `RooDataSet` from a numpy array using `RooDataSet.from_numpy` the values are ""clipped"" to the range of the `RooRealVar` (setting values outside the bounds to the values at the boundary). probably caused by this code:. https://github.com/root-project/root/blob/e4e8e62c2a04bd5c167b69118bf1afba7b35081b/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py#L101-L102. ### Expected behavior. I think it should instead skip events outside of the range. When i import a TTree instead events will be skipped. ### To Reproduce. ```python. import ROOT. import numpy as np. x = ROOT.RooRealVar(""x"", """", 2, 5). rds = ROOT.RooDataSet.from_numpy({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}, [x]). list(rds.store().realStoreList().data().data()). ```. gives me. ```. [2.0, 2.0, 3.0, 4.0, 5.0, 5.0, 5.0, 5.0, 5.0]. ```. Compared to the TTree version:. ```python. ROOT.RDF.MakeNumpyDataFrame({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}).Snapshot(""tree"", ""npdf.root""). f = ROOT.TFile.Open(""npdf.root""). tree = f.Get(""tree""). rds = ROOT.RooDataSet("""", """", [x], ROOT.RooFit.Import(tree)). list(rds.store().realStoreList().data().data()). ```. gives me. ```. [2.0, 3.0, 4.0, 5.0]. ```. ### Setup. ```. ROOT Version: 6.26/00. Built for linuxx8664gcc on Mar 03 2022, 06:51:13. From tags/v6-26-00@v6-26-00. ```. installed on archlinux with pacman. ### Additional context. Thanks a lot for creating these pythonizations! I think this is really nice, making pyROOT interoperable with the rest of the python ecosystem!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10447
https://github.com/root-project/root/issues/10447:443,interoperability,bind,bindings,443,"[RF] `RooDataSet.from_numpy` clips the values instead of skipping events; - [X] Checked for duplicates. ### Describe the bug. When i create a `RooDataSet` from a numpy array using `RooDataSet.from_numpy` the values are ""clipped"" to the range of the `RooRealVar` (setting values outside the bounds to the values at the boundary). probably caused by this code:. https://github.com/root-project/root/blob/e4e8e62c2a04bd5c167b69118bf1afba7b35081b/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py#L101-L102. ### Expected behavior. I think it should instead skip events outside of the range. When i import a TTree instead events will be skipped. ### To Reproduce. ```python. import ROOT. import numpy as np. x = ROOT.RooRealVar(""x"", """", 2, 5). rds = ROOT.RooDataSet.from_numpy({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}, [x]). list(rds.store().realStoreList().data().data()). ```. gives me. ```. [2.0, 2.0, 3.0, 4.0, 5.0, 5.0, 5.0, 5.0, 5.0]. ```. Compared to the TTree version:. ```python. ROOT.RDF.MakeNumpyDataFrame({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}).Snapshot(""tree"", ""npdf.root""). f = ROOT.TFile.Open(""npdf.root""). tree = f.Get(""tree""). rds = ROOT.RooDataSet("""", """", [x], ROOT.RooFit.Import(tree)). list(rds.store().realStoreList().data().data()). ```. gives me. ```. [2.0, 3.0, 4.0, 5.0]. ```. ### Setup. ```. ROOT Version: 6.26/00. Built for linuxx8664gcc on Mar 03 2022, 06:51:13. From tags/v6-26-00@v6-26-00. ```. installed on archlinux with pacman. ### Additional context. Thanks a lot for creating these pythonizations! I think this is really nice, making pyROOT interoperable with the rest of the python ecosystem!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10447
https://github.com/root-project/root/issues/10447:1612,interoperability,interoperab,interoperable,1612,"[RF] `RooDataSet.from_numpy` clips the values instead of skipping events; - [X] Checked for duplicates. ### Describe the bug. When i create a `RooDataSet` from a numpy array using `RooDataSet.from_numpy` the values are ""clipped"" to the range of the `RooRealVar` (setting values outside the bounds to the values at the boundary). probably caused by this code:. https://github.com/root-project/root/blob/e4e8e62c2a04bd5c167b69118bf1afba7b35081b/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py#L101-L102. ### Expected behavior. I think it should instead skip events outside of the range. When i import a TTree instead events will be skipped. ### To Reproduce. ```python. import ROOT. import numpy as np. x = ROOT.RooRealVar(""x"", """", 2, 5). rds = ROOT.RooDataSet.from_numpy({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}, [x]). list(rds.store().realStoreList().data().data()). ```. gives me. ```. [2.0, 2.0, 3.0, 4.0, 5.0, 5.0, 5.0, 5.0, 5.0]. ```. Compared to the TTree version:. ```python. ROOT.RDF.MakeNumpyDataFrame({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}).Snapshot(""tree"", ""npdf.root""). f = ROOT.TFile.Open(""npdf.root""). tree = f.Get(""tree""). rds = ROOT.RooDataSet("""", """", [x], ROOT.RooFit.Import(tree)). list(rds.store().realStoreList().data().data()). ```. gives me. ```. [2.0, 3.0, 4.0, 5.0]. ```. ### Setup. ```. ROOT Version: 6.26/00. Built for linuxx8664gcc on Mar 03 2022, 06:51:13. From tags/v6-26-00@v6-26-00. ```. installed on archlinux with pacman. ### Additional context. Thanks a lot for creating these pythonizations! I think this is really nice, making pyROOT interoperable with the rest of the python ecosystem!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10447
https://github.com/root-project/root/issues/10447:443,modifiability,bind,bindings,443,"[RF] `RooDataSet.from_numpy` clips the values instead of skipping events; - [X] Checked for duplicates. ### Describe the bug. When i create a `RooDataSet` from a numpy array using `RooDataSet.from_numpy` the values are ""clipped"" to the range of the `RooRealVar` (setting values outside the bounds to the values at the boundary). probably caused by this code:. https://github.com/root-project/root/blob/e4e8e62c2a04bd5c167b69118bf1afba7b35081b/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py#L101-L102. ### Expected behavior. I think it should instead skip events outside of the range. When i import a TTree instead events will be skipped. ### To Reproduce. ```python. import ROOT. import numpy as np. x = ROOT.RooRealVar(""x"", """", 2, 5). rds = ROOT.RooDataSet.from_numpy({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}, [x]). list(rds.store().realStoreList().data().data()). ```. gives me. ```. [2.0, 2.0, 3.0, 4.0, 5.0, 5.0, 5.0, 5.0, 5.0]. ```. Compared to the TTree version:. ```python. ROOT.RDF.MakeNumpyDataFrame({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}).Snapshot(""tree"", ""npdf.root""). f = ROOT.TFile.Open(""npdf.root""). tree = f.Get(""tree""). rds = ROOT.RooDataSet("""", """", [x], ROOT.RooFit.Import(tree)). list(rds.store().realStoreList().data().data()). ```. gives me. ```. [2.0, 3.0, 4.0, 5.0]. ```. ### Setup. ```. ROOT Version: 6.26/00. Built for linuxx8664gcc on Mar 03 2022, 06:51:13. From tags/v6-26-00@v6-26-00. ```. installed on archlinux with pacman. ### Additional context. Thanks a lot for creating these pythonizations! I think this is really nice, making pyROOT interoperable with the rest of the python ecosystem!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10447
https://github.com/root-project/root/issues/10447:998,modifiability,version,version,998,"[RF] `RooDataSet.from_numpy` clips the values instead of skipping events; - [X] Checked for duplicates. ### Describe the bug. When i create a `RooDataSet` from a numpy array using `RooDataSet.from_numpy` the values are ""clipped"" to the range of the `RooRealVar` (setting values outside the bounds to the values at the boundary). probably caused by this code:. https://github.com/root-project/root/blob/e4e8e62c2a04bd5c167b69118bf1afba7b35081b/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py#L101-L102. ### Expected behavior. I think it should instead skip events outside of the range. When i import a TTree instead events will be skipped. ### To Reproduce. ```python. import ROOT. import numpy as np. x = ROOT.RooRealVar(""x"", """", 2, 5). rds = ROOT.RooDataSet.from_numpy({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}, [x]). list(rds.store().realStoreList().data().data()). ```. gives me. ```. [2.0, 2.0, 3.0, 4.0, 5.0, 5.0, 5.0, 5.0, 5.0]. ```. Compared to the TTree version:. ```python. ROOT.RDF.MakeNumpyDataFrame({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}).Snapshot(""tree"", ""npdf.root""). f = ROOT.TFile.Open(""npdf.root""). tree = f.Get(""tree""). rds = ROOT.RooDataSet("""", """", [x], ROOT.RooFit.Import(tree)). list(rds.store().realStoreList().data().data()). ```. gives me. ```. [2.0, 3.0, 4.0, 5.0]. ```. ### Setup. ```. ROOT Version: 6.26/00. Built for linuxx8664gcc on Mar 03 2022, 06:51:13. From tags/v6-26-00@v6-26-00. ```. installed on archlinux with pacman. ### Additional context. Thanks a lot for creating these pythonizations! I think this is really nice, making pyROOT interoperable with the rest of the python ecosystem!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10447
https://github.com/root-project/root/issues/10447:1359,modifiability,Version,Version,1359,"[RF] `RooDataSet.from_numpy` clips the values instead of skipping events; - [X] Checked for duplicates. ### Describe the bug. When i create a `RooDataSet` from a numpy array using `RooDataSet.from_numpy` the values are ""clipped"" to the range of the `RooRealVar` (setting values outside the bounds to the values at the boundary). probably caused by this code:. https://github.com/root-project/root/blob/e4e8e62c2a04bd5c167b69118bf1afba7b35081b/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py#L101-L102. ### Expected behavior. I think it should instead skip events outside of the range. When i import a TTree instead events will be skipped. ### To Reproduce. ```python. import ROOT. import numpy as np. x = ROOT.RooRealVar(""x"", """", 2, 5). rds = ROOT.RooDataSet.from_numpy({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}, [x]). list(rds.store().realStoreList().data().data()). ```. gives me. ```. [2.0, 2.0, 3.0, 4.0, 5.0, 5.0, 5.0, 5.0, 5.0]. ```. Compared to the TTree version:. ```python. ROOT.RDF.MakeNumpyDataFrame({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}).Snapshot(""tree"", ""npdf.root""). f = ROOT.TFile.Open(""npdf.root""). tree = f.Get(""tree""). rds = ROOT.RooDataSet("""", """", [x], ROOT.RooFit.Import(tree)). list(rds.store().realStoreList().data().data()). ```. gives me. ```. [2.0, 3.0, 4.0, 5.0]. ```. ### Setup. ```. ROOT Version: 6.26/00. Built for linuxx8664gcc on Mar 03 2022, 06:51:13. From tags/v6-26-00@v6-26-00. ```. installed on archlinux with pacman. ### Additional context. Thanks a lot for creating these pythonizations! I think this is really nice, making pyROOT interoperable with the rest of the python ecosystem!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10447
https://github.com/root-project/root/issues/10447:1489,modifiability,pac,pacman,1489,"[RF] `RooDataSet.from_numpy` clips the values instead of skipping events; - [X] Checked for duplicates. ### Describe the bug. When i create a `RooDataSet` from a numpy array using `RooDataSet.from_numpy` the values are ""clipped"" to the range of the `RooRealVar` (setting values outside the bounds to the values at the boundary). probably caused by this code:. https://github.com/root-project/root/blob/e4e8e62c2a04bd5c167b69118bf1afba7b35081b/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py#L101-L102. ### Expected behavior. I think it should instead skip events outside of the range. When i import a TTree instead events will be skipped. ### To Reproduce. ```python. import ROOT. import numpy as np. x = ROOT.RooRealVar(""x"", """", 2, 5). rds = ROOT.RooDataSet.from_numpy({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}, [x]). list(rds.store().realStoreList().data().data()). ```. gives me. ```. [2.0, 2.0, 3.0, 4.0, 5.0, 5.0, 5.0, 5.0, 5.0]. ```. Compared to the TTree version:. ```python. ROOT.RDF.MakeNumpyDataFrame({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}).Snapshot(""tree"", ""npdf.root""). f = ROOT.TFile.Open(""npdf.root""). tree = f.Get(""tree""). rds = ROOT.RooDataSet("""", """", [x], ROOT.RooFit.Import(tree)). list(rds.store().realStoreList().data().data()). ```. gives me. ```. [2.0, 3.0, 4.0, 5.0]. ```. ### Setup. ```. ROOT Version: 6.26/00. Built for linuxx8664gcc on Mar 03 2022, 06:51:13. From tags/v6-26-00@v6-26-00. ```. installed on archlinux with pacman. ### Additional context. Thanks a lot for creating these pythonizations! I think this is really nice, making pyROOT interoperable with the rest of the python ecosystem!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10447
https://github.com/root-project/root/issues/10447:1612,modifiability,interop,interoperable,1612,"[RF] `RooDataSet.from_numpy` clips the values instead of skipping events; - [X] Checked for duplicates. ### Describe the bug. When i create a `RooDataSet` from a numpy array using `RooDataSet.from_numpy` the values are ""clipped"" to the range of the `RooRealVar` (setting values outside the bounds to the values at the boundary). probably caused by this code:. https://github.com/root-project/root/blob/e4e8e62c2a04bd5c167b69118bf1afba7b35081b/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py#L101-L102. ### Expected behavior. I think it should instead skip events outside of the range. When i import a TTree instead events will be skipped. ### To Reproduce. ```python. import ROOT. import numpy as np. x = ROOT.RooRealVar(""x"", """", 2, 5). rds = ROOT.RooDataSet.from_numpy({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}, [x]). list(rds.store().realStoreList().data().data()). ```. gives me. ```. [2.0, 2.0, 3.0, 4.0, 5.0, 5.0, 5.0, 5.0, 5.0]. ```. Compared to the TTree version:. ```python. ROOT.RDF.MakeNumpyDataFrame({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}).Snapshot(""tree"", ""npdf.root""). f = ROOT.TFile.Open(""npdf.root""). tree = f.Get(""tree""). rds = ROOT.RooDataSet("""", """", [x], ROOT.RooFit.Import(tree)). list(rds.store().realStoreList().data().data()). ```. gives me. ```. [2.0, 3.0, 4.0, 5.0]. ```. ### Setup. ```. ROOT Version: 6.26/00. Built for linuxx8664gcc on Mar 03 2022, 06:51:13. From tags/v6-26-00@v6-26-00. ```. installed on archlinux with pacman. ### Additional context. Thanks a lot for creating these pythonizations! I think this is really nice, making pyROOT interoperable with the rest of the python ecosystem!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10447
https://github.com/root-project/root/issues/10447:1512,testability,context,context,1512,"[RF] `RooDataSet.from_numpy` clips the values instead of skipping events; - [X] Checked for duplicates. ### Describe the bug. When i create a `RooDataSet` from a numpy array using `RooDataSet.from_numpy` the values are ""clipped"" to the range of the `RooRealVar` (setting values outside the bounds to the values at the boundary). probably caused by this code:. https://github.com/root-project/root/blob/e4e8e62c2a04bd5c167b69118bf1afba7b35081b/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py#L101-L102. ### Expected behavior. I think it should instead skip events outside of the range. When i import a TTree instead events will be skipped. ### To Reproduce. ```python. import ROOT. import numpy as np. x = ROOT.RooRealVar(""x"", """", 2, 5). rds = ROOT.RooDataSet.from_numpy({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}, [x]). list(rds.store().realStoreList().data().data()). ```. gives me. ```. [2.0, 2.0, 3.0, 4.0, 5.0, 5.0, 5.0, 5.0, 5.0]. ```. Compared to the TTree version:. ```python. ROOT.RDF.MakeNumpyDataFrame({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}).Snapshot(""tree"", ""npdf.root""). f = ROOT.TFile.Open(""npdf.root""). tree = f.Get(""tree""). rds = ROOT.RooDataSet("""", """", [x], ROOT.RooFit.Import(tree)). list(rds.store().realStoreList().data().data()). ```. gives me. ```. [2.0, 3.0, 4.0, 5.0]. ```. ### Setup. ```. ROOT Version: 6.26/00. Built for linuxx8664gcc on Mar 03 2022, 06:51:13. From tags/v6-26-00@v6-26-00. ```. installed on archlinux with pacman. ### Additional context. Thanks a lot for creating these pythonizations! I think this is really nice, making pyROOT interoperable with the rest of the python ecosystem!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10447
https://github.com/root-project/root/issues/10447:548,usability,behavi,behavior,548,"[RF] `RooDataSet.from_numpy` clips the values instead of skipping events; - [X] Checked for duplicates. ### Describe the bug. When i create a `RooDataSet` from a numpy array using `RooDataSet.from_numpy` the values are ""clipped"" to the range of the `RooRealVar` (setting values outside the bounds to the values at the boundary). probably caused by this code:. https://github.com/root-project/root/blob/e4e8e62c2a04bd5c167b69118bf1afba7b35081b/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py#L101-L102. ### Expected behavior. I think it should instead skip events outside of the range. When i import a TTree instead events will be skipped. ### To Reproduce. ```python. import ROOT. import numpy as np. x = ROOT.RooRealVar(""x"", """", 2, 5). rds = ROOT.RooDataSet.from_numpy({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}, [x]). list(rds.store().realStoreList().data().data()). ```. gives me. ```. [2.0, 2.0, 3.0, 4.0, 5.0, 5.0, 5.0, 5.0, 5.0]. ```. Compared to the TTree version:. ```python. ROOT.RDF.MakeNumpyDataFrame({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}).Snapshot(""tree"", ""npdf.root""). f = ROOT.TFile.Open(""npdf.root""). tree = f.Get(""tree""). rds = ROOT.RooDataSet("""", """", [x], ROOT.RooFit.Import(tree)). list(rds.store().realStoreList().data().data()). ```. gives me. ```. [2.0, 3.0, 4.0, 5.0]. ```. ### Setup. ```. ROOT Version: 6.26/00. Built for linuxx8664gcc on Mar 03 2022, 06:51:13. From tags/v6-26-00@v6-26-00. ```. installed on archlinux with pacman. ### Additional context. Thanks a lot for creating these pythonizations! I think this is really nice, making pyROOT interoperable with the rest of the python ecosystem!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10447
https://github.com/root-project/root/issues/10448:6,interoperability,format,format,6,"clang-format should not run on linkdef files; As discussed in #10336, `clang-format` does not work well on linkdef files. It may be best to skip them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10448
https://github.com/root-project/root/issues/10448:77,interoperability,format,format,77,"clang-format should not run on linkdef files; As discussed in #10336, `clang-format` does not work well on linkdef files. It may be best to skip them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10448
https://github.com/root-project/root/issues/10448:85,reliability,doe,does,85,"clang-format should not run on linkdef files; As discussed in #10336, `clang-format` does not work well on linkdef files. It may be best to skip them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10448
https://github.com/root-project/root/issues/10449:526,availability,operat,operations,526,"Recursion limits hit in pruning/serialisation of distributed RDF graph; # Original bug. The RDataFrame graph defined by the user in the local application is translated into a series of node objects. Each object stores a list of references to its children. When sending the tasks to a distributed scheduler, the head node of the graph is serialised (through pickle), and all its children are serialised with it (and their children, recursively). This behaviour leads to recursion limits hit by pickle after a certain amount of operations is requested, I could reproduce it with 200 operations:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. def many_defines(df):. # Maximum recursion depth exceeded at 200 iterations. for i in range(200):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). df = RDataFrame(100, daskclient=client). many_defines(df). ```. Which raises the following. ```. _pickle.PicklingError: Could not pickle object as excessively deep recursion required. ```. # Update. Fixing just the serialisation issue of the reproducer above unveiled another limitation of the current implementation. The distrdf graph locally needs to be pruned before being sent to the distributed scheduler. The pruning algorithm is also a recursive function, which by default have a limit of 1000 calls in Python. The reproducer above, when run with `990` Define nodes in the `many_defines` function, returns. ```. $: python test_many_defines.py. File ""/home/vpadulan/programs/rootproject/rootbuild/distrdf-percentage-ranges-distrdf-debug/lib/DistRDF/Node.py"", line 177, in graph_prune. if not n.graph_prune():. [Previous line repeated 988 more times]. RecursionError: maximum recursion depth exceeded. ```. ### Expected behavior. No error, as with ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10449
https://github.com/root-project/root/issues/10449:581,availability,operat,operations,581,"Recursion limits hit in pruning/serialisation of distributed RDF graph; # Original bug. The RDataFrame graph defined by the user in the local application is translated into a series of node objects. Each object stores a list of references to its children. When sending the tasks to a distributed scheduler, the head node of the graph is serialised (through pickle), and all its children are serialised with it (and their children, recursively). This behaviour leads to recursion limits hit by pickle after a certain amount of operations is requested, I could reproduce it with 200 operations:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. def many_defines(df):. # Maximum recursion depth exceeded at 200 iterations. for i in range(200):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). df = RDataFrame(100, daskclient=client). many_defines(df). ```. Which raises the following. ```. _pickle.PicklingError: Could not pickle object as excessively deep recursion required. ```. # Update. Fixing just the serialisation issue of the reproducer above unveiled another limitation of the current implementation. The distrdf graph locally needs to be pruned before being sent to the distributed scheduler. The pruning algorithm is also a recursive function, which by default have a limit of 1000 calls in Python. The reproducer above, when run with `990` Define nodes in the `many_defines` function, returns. ```. $: python test_many_defines.py. File ""/home/vpadulan/programs/rootproject/rootbuild/distrdf-percentage-ranges-distrdf-debug/lib/DistRDF/Node.py"", line 177, in graph_prune. if not n.graph_prune():. [Previous line repeated 988 more times]. RecursionError: maximum recursion depth exceeded. ```. ### Expected behavior. No error, as with ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10449
https://github.com/root-project/root/issues/10449:946,availability,cluster,cluster,946,"Recursion limits hit in pruning/serialisation of distributed RDF graph; # Original bug. The RDataFrame graph defined by the user in the local application is translated into a series of node objects. Each object stores a list of references to its children. When sending the tasks to a distributed scheduler, the head node of the graph is serialised (through pickle), and all its children are serialised with it (and their children, recursively). This behaviour leads to recursion limits hit by pickle after a certain amount of operations is requested, I could reproduce it with 200 operations:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. def many_defines(df):. # Maximum recursion depth exceeded at 200 iterations. for i in range(200):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). df = RDataFrame(100, daskclient=client). many_defines(df). ```. Which raises the following. ```. _pickle.PicklingError: Could not pickle object as excessively deep recursion required. ```. # Update. Fixing just the serialisation issue of the reproducer above unveiled another limitation of the current implementation. The distrdf graph locally needs to be pruned before being sent to the distributed scheduler. The pruning algorithm is also a recursive function, which by default have a limit of 1000 calls in Python. The reproducer above, when run with `990` Define nodes in the `many_defines` function, returns. ```. $: python test_many_defines.py. File ""/home/vpadulan/programs/rootproject/rootbuild/distrdf-percentage-ranges-distrdf-debug/lib/DistRDF/Node.py"", line 177, in graph_prune. if not n.graph_prune():. [Previous line repeated 988 more times]. RecursionError: maximum recursion depth exceeded. ```. ### Expected behavior. No error, as with ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10449
https://github.com/root-project/root/issues/10449:1037,availability,cluster,cluster,1037,"tion of distributed RDF graph; # Original bug. The RDataFrame graph defined by the user in the local application is translated into a series of node objects. Each object stores a list of references to its children. When sending the tasks to a distributed scheduler, the head node of the graph is serialised (through pickle), and all its children are serialised with it (and their children, recursively). This behaviour leads to recursion limits hit by pickle after a certain amount of operations is requested, I could reproduce it with 200 operations:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. def many_defines(df):. # Maximum recursion depth exceeded at 200 iterations. for i in range(200):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). df = RDataFrame(100, daskclient=client). many_defines(df). ```. Which raises the following. ```. _pickle.PicklingError: Could not pickle object as excessively deep recursion required. ```. # Update. Fixing just the serialisation issue of the reproducer above unveiled another limitation of the current implementation. The distrdf graph locally needs to be pruned before being sent to the distributed scheduler. The pruning algorithm is also a recursive function, which by default have a limit of 1000 calls in Python. The reproducer above, when run with `990` Define nodes in the `many_defines` function, returns. ```. $: python test_many_defines.py. File ""/home/vpadulan/programs/rootproject/rootbuild/distrdf-percentage-ranges-distrdf-debug/lib/DistRDF/Node.py"", line 177, in graph_prune. if not n.graph_prune():. [Previous line repeated 988 more times]. RecursionError: maximum recursion depth exceeded. ```. ### Expected behavior. No error, as with local RDF:. ```python. import ROOT. def m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10449
https://github.com/root-project/root/issues/10449:1985,availability,error,error,1985,"ised (through pickle), and all its children are serialised with it (and their children, recursively). This behaviour leads to recursion limits hit by pickle after a certain amount of operations is requested, I could reproduce it with 200 operations:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. def many_defines(df):. # Maximum recursion depth exceeded at 200 iterations. for i in range(200):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). df = RDataFrame(100, daskclient=client). many_defines(df). ```. Which raises the following. ```. _pickle.PicklingError: Could not pickle object as excessively deep recursion required. ```. # Update. Fixing just the serialisation issue of the reproducer above unveiled another limitation of the current implementation. The distrdf graph locally needs to be pruned before being sent to the distributed scheduler. The pruning algorithm is also a recursive function, which by default have a limit of 1000 calls in Python. The reproducer above, when run with `990` Define nodes in the `many_defines` function, returns. ```. $: python test_many_defines.py. File ""/home/vpadulan/programs/rootproject/rootbuild/distrdf-percentage-ranges-distrdf-debug/lib/DistRDF/Node.py"", line 177, in graph_prune. if not n.graph_prune():. [Previous line repeated 988 more times]. RecursionError: maximum recursion depth exceeded. ```. ### Expected behavior. No error, as with local RDF:. ```python. import ROOT. def many_defines(df):. for i in range(1000):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. df = ROOT.RDataFrame(100). many_defines(df). ```. ```. $: python rdf_many_defines.py . Total entries: 100. ```. ### Setup. Fedora 35. ROOT >= 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10449
https://github.com/root-project/root/issues/10449:946,deployability,cluster,cluster,946,"Recursion limits hit in pruning/serialisation of distributed RDF graph; # Original bug. The RDataFrame graph defined by the user in the local application is translated into a series of node objects. Each object stores a list of references to its children. When sending the tasks to a distributed scheduler, the head node of the graph is serialised (through pickle), and all its children are serialised with it (and their children, recursively). This behaviour leads to recursion limits hit by pickle after a certain amount of operations is requested, I could reproduce it with 200 operations:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. def many_defines(df):. # Maximum recursion depth exceeded at 200 iterations. for i in range(200):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). df = RDataFrame(100, daskclient=client). many_defines(df). ```. Which raises the following. ```. _pickle.PicklingError: Could not pickle object as excessively deep recursion required. ```. # Update. Fixing just the serialisation issue of the reproducer above unveiled another limitation of the current implementation. The distrdf graph locally needs to be pruned before being sent to the distributed scheduler. The pruning algorithm is also a recursive function, which by default have a limit of 1000 calls in Python. The reproducer above, when run with `990` Define nodes in the `many_defines` function, returns. ```. $: python test_many_defines.py. File ""/home/vpadulan/programs/rootproject/rootbuild/distrdf-percentage-ranges-distrdf-debug/lib/DistRDF/Node.py"", line 177, in graph_prune. if not n.graph_prune():. [Previous line repeated 988 more times]. RecursionError: maximum recursion depth exceeded. ```. ### Expected behavior. No error, as with ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10449
https://github.com/root-project/root/issues/10449:1037,deployability,cluster,cluster,1037,"tion of distributed RDF graph; # Original bug. The RDataFrame graph defined by the user in the local application is translated into a series of node objects. Each object stores a list of references to its children. When sending the tasks to a distributed scheduler, the head node of the graph is serialised (through pickle), and all its children are serialised with it (and their children, recursively). This behaviour leads to recursion limits hit by pickle after a certain amount of operations is requested, I could reproduce it with 200 operations:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. def many_defines(df):. # Maximum recursion depth exceeded at 200 iterations. for i in range(200):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). df = RDataFrame(100, daskclient=client). many_defines(df). ```. Which raises the following. ```. _pickle.PicklingError: Could not pickle object as excessively deep recursion required. ```. # Update. Fixing just the serialisation issue of the reproducer above unveiled another limitation of the current implementation. The distrdf graph locally needs to be pruned before being sent to the distributed scheduler. The pruning algorithm is also a recursive function, which by default have a limit of 1000 calls in Python. The reproducer above, when run with `990` Define nodes in the `many_defines` function, returns. ```. $: python test_many_defines.py. File ""/home/vpadulan/programs/rootproject/rootbuild/distrdf-percentage-ranges-distrdf-debug/lib/DistRDF/Node.py"", line 177, in graph_prune. if not n.graph_prune():. [Previous line repeated 988 more times]. RecursionError: maximum recursion depth exceeded. ```. ### Expected behavior. No error, as with local RDF:. ```python. import ROOT. def m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10449
https://github.com/root-project/root/issues/10449:1238,deployability,Updat,Update,1238," its children. When sending the tasks to a distributed scheduler, the head node of the graph is serialised (through pickle), and all its children are serialised with it (and their children, recursively). This behaviour leads to recursion limits hit by pickle after a certain amount of operations is requested, I could reproduce it with 200 operations:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. def many_defines(df):. # Maximum recursion depth exceeded at 200 iterations. for i in range(200):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). df = RDataFrame(100, daskclient=client). many_defines(df). ```. Which raises the following. ```. _pickle.PicklingError: Could not pickle object as excessively deep recursion required. ```. # Update. Fixing just the serialisation issue of the reproducer above unveiled another limitation of the current implementation. The distrdf graph locally needs to be pruned before being sent to the distributed scheduler. The pruning algorithm is also a recursive function, which by default have a limit of 1000 calls in Python. The reproducer above, when run with `990` Define nodes in the `many_defines` function, returns. ```. $: python test_many_defines.py. File ""/home/vpadulan/programs/rootproject/rootbuild/distrdf-percentage-ranges-distrdf-debug/lib/DistRDF/Node.py"", line 177, in graph_prune. if not n.graph_prune():. [Previous line repeated 988 more times]. RecursionError: maximum recursion depth exceeded. ```. ### Expected behavior. No error, as with local RDF:. ```python. import ROOT. def many_defines(df):. for i in range(1000):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. df = ROOT.RDataFrame(100). many_defines(df). ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10449
https://github.com/root-project/root/issues/10449:296,energy efficiency,schedul,scheduler,296,"Recursion limits hit in pruning/serialisation of distributed RDF graph; # Original bug. The RDataFrame graph defined by the user in the local application is translated into a series of node objects. Each object stores a list of references to its children. When sending the tasks to a distributed scheduler, the head node of the graph is serialised (through pickle), and all its children are serialised with it (and their children, recursively). This behaviour leads to recursion limits hit by pickle after a certain amount of operations is requested, I could reproduce it with 200 operations:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. def many_defines(df):. # Maximum recursion depth exceeded at 200 iterations. for i in range(200):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). df = RDataFrame(100, daskclient=client). many_defines(df). ```. Which raises the following. ```. _pickle.PicklingError: Could not pickle object as excessively deep recursion required. ```. # Update. Fixing just the serialisation issue of the reproducer above unveiled another limitation of the current implementation. The distrdf graph locally needs to be pruned before being sent to the distributed scheduler. The pruning algorithm is also a recursive function, which by default have a limit of 1000 calls in Python. The reproducer above, when run with `990` Define nodes in the `many_defines` function, returns. ```. $: python test_many_defines.py. File ""/home/vpadulan/programs/rootproject/rootbuild/distrdf-percentage-ranges-distrdf-debug/lib/DistRDF/Node.py"", line 177, in graph_prune. if not n.graph_prune():. [Previous line repeated 988 more times]. RecursionError: maximum recursion depth exceeded. ```. ### Expected behavior. No error, as with ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10449
https://github.com/root-project/root/issues/10449:1341,energy efficiency,current,current,1341,"ised (through pickle), and all its children are serialised with it (and their children, recursively). This behaviour leads to recursion limits hit by pickle after a certain amount of operations is requested, I could reproduce it with 200 operations:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. def many_defines(df):. # Maximum recursion depth exceeded at 200 iterations. for i in range(200):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). df = RDataFrame(100, daskclient=client). many_defines(df). ```. Which raises the following. ```. _pickle.PicklingError: Could not pickle object as excessively deep recursion required. ```. # Update. Fixing just the serialisation issue of the reproducer above unveiled another limitation of the current implementation. The distrdf graph locally needs to be pruned before being sent to the distributed scheduler. The pruning algorithm is also a recursive function, which by default have a limit of 1000 calls in Python. The reproducer above, when run with `990` Define nodes in the `many_defines` function, returns. ```. $: python test_many_defines.py. File ""/home/vpadulan/programs/rootproject/rootbuild/distrdf-percentage-ranges-distrdf-debug/lib/DistRDF/Node.py"", line 177, in graph_prune. if not n.graph_prune():. [Previous line repeated 988 more times]. RecursionError: maximum recursion depth exceeded. ```. ### Expected behavior. No error, as with local RDF:. ```python. import ROOT. def many_defines(df):. for i in range(1000):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. df = ROOT.RDataFrame(100). many_defines(df). ```. ```. $: python rdf_many_defines.py . Total entries: 100. ```. ### Setup. Fedora 35. ROOT >= 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10449
https://github.com/root-project/root/issues/10449:1447,energy efficiency,schedul,scheduler,1447,"ised (through pickle), and all its children are serialised with it (and their children, recursively). This behaviour leads to recursion limits hit by pickle after a certain amount of operations is requested, I could reproduce it with 200 operations:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. def many_defines(df):. # Maximum recursion depth exceeded at 200 iterations. for i in range(200):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). df = RDataFrame(100, daskclient=client). many_defines(df). ```. Which raises the following. ```. _pickle.PicklingError: Could not pickle object as excessively deep recursion required. ```. # Update. Fixing just the serialisation issue of the reproducer above unveiled another limitation of the current implementation. The distrdf graph locally needs to be pruned before being sent to the distributed scheduler. The pruning algorithm is also a recursive function, which by default have a limit of 1000 calls in Python. The reproducer above, when run with `990` Define nodes in the `many_defines` function, returns. ```. $: python test_many_defines.py. File ""/home/vpadulan/programs/rootproject/rootbuild/distrdf-percentage-ranges-distrdf-debug/lib/DistRDF/Node.py"", line 177, in graph_prune. if not n.graph_prune():. [Previous line repeated 988 more times]. RecursionError: maximum recursion depth exceeded. ```. ### Expected behavior. No error, as with local RDF:. ```python. import ROOT. def many_defines(df):. for i in range(1000):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. df = ROOT.RDataFrame(100). many_defines(df). ```. ```. $: python rdf_many_defines.py . Total entries: 100. ```. ### Setup. Fedora 35. ROOT >= 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10449
https://github.com/root-project/root/issues/10449:157,integrability,translat,translated,157,"Recursion limits hit in pruning/serialisation of distributed RDF graph; # Original bug. The RDataFrame graph defined by the user in the local application is translated into a series of node objects. Each object stores a list of references to its children. When sending the tasks to a distributed scheduler, the head node of the graph is serialised (through pickle), and all its children are serialised with it (and their children, recursively). This behaviour leads to recursion limits hit by pickle after a certain amount of operations is requested, I could reproduce it with 200 operations:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. def many_defines(df):. # Maximum recursion depth exceeded at 200 iterations. for i in range(200):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). df = RDataFrame(100, daskclient=client). many_defines(df). ```. Which raises the following. ```. _pickle.PicklingError: Could not pickle object as excessively deep recursion required. ```. # Update. Fixing just the serialisation issue of the reproducer above unveiled another limitation of the current implementation. The distrdf graph locally needs to be pruned before being sent to the distributed scheduler. The pruning algorithm is also a recursive function, which by default have a limit of 1000 calls in Python. The reproducer above, when run with `990` Define nodes in the `many_defines` function, returns. ```. $: python test_many_defines.py. File ""/home/vpadulan/programs/rootproject/rootbuild/distrdf-percentage-ranges-distrdf-debug/lib/DistRDF/Node.py"", line 177, in graph_prune. if not n.graph_prune():. [Previous line repeated 988 more times]. RecursionError: maximum recursion depth exceeded. ```. ### Expected behavior. No error, as with ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10449
https://github.com/root-project/root/issues/10449:49,interoperability,distribut,distributed,49,"Recursion limits hit in pruning/serialisation of distributed RDF graph; # Original bug. The RDataFrame graph defined by the user in the local application is translated into a series of node objects. Each object stores a list of references to its children. When sending the tasks to a distributed scheduler, the head node of the graph is serialised (through pickle), and all its children are serialised with it (and their children, recursively). This behaviour leads to recursion limits hit by pickle after a certain amount of operations is requested, I could reproduce it with 200 operations:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. def many_defines(df):. # Maximum recursion depth exceeded at 200 iterations. for i in range(200):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). df = RDataFrame(100, daskclient=client). many_defines(df). ```. Which raises the following. ```. _pickle.PicklingError: Could not pickle object as excessively deep recursion required. ```. # Update. Fixing just the serialisation issue of the reproducer above unveiled another limitation of the current implementation. The distrdf graph locally needs to be pruned before being sent to the distributed scheduler. The pruning algorithm is also a recursive function, which by default have a limit of 1000 calls in Python. The reproducer above, when run with `990` Define nodes in the `many_defines` function, returns. ```. $: python test_many_defines.py. File ""/home/vpadulan/programs/rootproject/rootbuild/distrdf-percentage-ranges-distrdf-debug/lib/DistRDF/Node.py"", line 177, in graph_prune. if not n.graph_prune():. [Previous line repeated 988 more times]. RecursionError: maximum recursion depth exceeded. ```. ### Expected behavior. No error, as with ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10449
https://github.com/root-project/root/issues/10449:157,interoperability,translat,translated,157,"Recursion limits hit in pruning/serialisation of distributed RDF graph; # Original bug. The RDataFrame graph defined by the user in the local application is translated into a series of node objects. Each object stores a list of references to its children. When sending the tasks to a distributed scheduler, the head node of the graph is serialised (through pickle), and all its children are serialised with it (and their children, recursively). This behaviour leads to recursion limits hit by pickle after a certain amount of operations is requested, I could reproduce it with 200 operations:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. def many_defines(df):. # Maximum recursion depth exceeded at 200 iterations. for i in range(200):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). df = RDataFrame(100, daskclient=client). many_defines(df). ```. Which raises the following. ```. _pickle.PicklingError: Could not pickle object as excessively deep recursion required. ```. # Update. Fixing just the serialisation issue of the reproducer above unveiled another limitation of the current implementation. The distrdf graph locally needs to be pruned before being sent to the distributed scheduler. The pruning algorithm is also a recursive function, which by default have a limit of 1000 calls in Python. The reproducer above, when run with `990` Define nodes in the `many_defines` function, returns. ```. $: python test_many_defines.py. File ""/home/vpadulan/programs/rootproject/rootbuild/distrdf-percentage-ranges-distrdf-debug/lib/DistRDF/Node.py"", line 177, in graph_prune. if not n.graph_prune():. [Previous line repeated 988 more times]. RecursionError: maximum recursion depth exceeded. ```. ### Expected behavior. No error, as with ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10449
https://github.com/root-project/root/issues/10449:284,interoperability,distribut,distributed,284,"Recursion limits hit in pruning/serialisation of distributed RDF graph; # Original bug. The RDataFrame graph defined by the user in the local application is translated into a series of node objects. Each object stores a list of references to its children. When sending the tasks to a distributed scheduler, the head node of the graph is serialised (through pickle), and all its children are serialised with it (and their children, recursively). This behaviour leads to recursion limits hit by pickle after a certain amount of operations is requested, I could reproduce it with 200 operations:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. def many_defines(df):. # Maximum recursion depth exceeded at 200 iterations. for i in range(200):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). df = RDataFrame(100, daskclient=client). many_defines(df). ```. Which raises the following. ```. _pickle.PicklingError: Could not pickle object as excessively deep recursion required. ```. # Update. Fixing just the serialisation issue of the reproducer above unveiled another limitation of the current implementation. The distrdf graph locally needs to be pruned before being sent to the distributed scheduler. The pruning algorithm is also a recursive function, which by default have a limit of 1000 calls in Python. The reproducer above, when run with `990` Define nodes in the `many_defines` function, returns. ```. $: python test_many_defines.py. File ""/home/vpadulan/programs/rootproject/rootbuild/distrdf-percentage-ranges-distrdf-debug/lib/DistRDF/Node.py"", line 177, in graph_prune. if not n.graph_prune():. [Previous line repeated 988 more times]. RecursionError: maximum recursion depth exceeded. ```. ### Expected behavior. No error, as with ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10449
https://github.com/root-project/root/issues/10449:653,interoperability,Distribut,Distributed,653,"Recursion limits hit in pruning/serialisation of distributed RDF graph; # Original bug. The RDataFrame graph defined by the user in the local application is translated into a series of node objects. Each object stores a list of references to its children. When sending the tasks to a distributed scheduler, the head node of the graph is serialised (through pickle), and all its children are serialised with it (and their children, recursively). This behaviour leads to recursion limits hit by pickle after a certain amount of operations is requested, I could reproduce it with 200 operations:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. def many_defines(df):. # Maximum recursion depth exceeded at 200 iterations. for i in range(200):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). df = RDataFrame(100, daskclient=client). many_defines(df). ```. Which raises the following. ```. _pickle.PicklingError: Could not pickle object as excessively deep recursion required. ```. # Update. Fixing just the serialisation issue of the reproducer above unveiled another limitation of the current implementation. The distrdf graph locally needs to be pruned before being sent to the distributed scheduler. The pruning algorithm is also a recursive function, which by default have a limit of 1000 calls in Python. The reproducer above, when run with `990` Define nodes in the `many_defines` function, returns. ```. $: python test_many_defines.py. File ""/home/vpadulan/programs/rootproject/rootbuild/distrdf-percentage-ranges-distrdf-debug/lib/DistRDF/Node.py"", line 177, in graph_prune. if not n.graph_prune():. [Previous line repeated 988 more times]. RecursionError: maximum recursion depth exceeded. ```. ### Expected behavior. No error, as with ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10449
https://github.com/root-project/root/issues/10449:692,interoperability,distribut,distributed,692,"Recursion limits hit in pruning/serialisation of distributed RDF graph; # Original bug. The RDataFrame graph defined by the user in the local application is translated into a series of node objects. Each object stores a list of references to its children. When sending the tasks to a distributed scheduler, the head node of the graph is serialised (through pickle), and all its children are serialised with it (and their children, recursively). This behaviour leads to recursion limits hit by pickle after a certain amount of operations is requested, I could reproduce it with 200 operations:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. def many_defines(df):. # Maximum recursion depth exceeded at 200 iterations. for i in range(200):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). df = RDataFrame(100, daskclient=client). many_defines(df). ```. Which raises the following. ```. _pickle.PicklingError: Could not pickle object as excessively deep recursion required. ```. # Update. Fixing just the serialisation issue of the reproducer above unveiled another limitation of the current implementation. The distrdf graph locally needs to be pruned before being sent to the distributed scheduler. The pruning algorithm is also a recursive function, which by default have a limit of 1000 calls in Python. The reproducer above, when run with `990` Define nodes in the `many_defines` function, returns. ```. $: python test_many_defines.py. File ""/home/vpadulan/programs/rootproject/rootbuild/distrdf-percentage-ranges-distrdf-debug/lib/DistRDF/Node.py"", line 177, in graph_prune. if not n.graph_prune():. [Previous line repeated 988 more times]. RecursionError: maximum recursion depth exceeded. ```. ### Expected behavior. No error, as with ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10449
https://github.com/root-project/root/issues/10449:1435,interoperability,distribut,distributed,1435,"ised (through pickle), and all its children are serialised with it (and their children, recursively). This behaviour leads to recursion limits hit by pickle after a certain amount of operations is requested, I could reproduce it with 200 operations:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. def many_defines(df):. # Maximum recursion depth exceeded at 200 iterations. for i in range(200):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). df = RDataFrame(100, daskclient=client). many_defines(df). ```. Which raises the following. ```. _pickle.PicklingError: Could not pickle object as excessively deep recursion required. ```. # Update. Fixing just the serialisation issue of the reproducer above unveiled another limitation of the current implementation. The distrdf graph locally needs to be pruned before being sent to the distributed scheduler. The pruning algorithm is also a recursive function, which by default have a limit of 1000 calls in Python. The reproducer above, when run with `990` Define nodes in the `many_defines` function, returns. ```. $: python test_many_defines.py. File ""/home/vpadulan/programs/rootproject/rootbuild/distrdf-percentage-ranges-distrdf-debug/lib/DistRDF/Node.py"", line 177, in graph_prune. if not n.graph_prune():. [Previous line repeated 988 more times]. RecursionError: maximum recursion depth exceeded. ```. ### Expected behavior. No error, as with local RDF:. ```python. import ROOT. def many_defines(df):. for i in range(1000):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. df = ROOT.RDataFrame(100). many_defines(df). ```. ```. $: python rdf_many_defines.py . Total entries: 100. ```. ### Setup. Fedora 35. ROOT >= 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10449
https://github.com/root-project/root/issues/10449:296,performance,schedul,scheduler,296,"Recursion limits hit in pruning/serialisation of distributed RDF graph; # Original bug. The RDataFrame graph defined by the user in the local application is translated into a series of node objects. Each object stores a list of references to its children. When sending the tasks to a distributed scheduler, the head node of the graph is serialised (through pickle), and all its children are serialised with it (and their children, recursively). This behaviour leads to recursion limits hit by pickle after a certain amount of operations is requested, I could reproduce it with 200 operations:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. def many_defines(df):. # Maximum recursion depth exceeded at 200 iterations. for i in range(200):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). df = RDataFrame(100, daskclient=client). many_defines(df). ```. Which raises the following. ```. _pickle.PicklingError: Could not pickle object as excessively deep recursion required. ```. # Update. Fixing just the serialisation issue of the reproducer above unveiled another limitation of the current implementation. The distrdf graph locally needs to be pruned before being sent to the distributed scheduler. The pruning algorithm is also a recursive function, which by default have a limit of 1000 calls in Python. The reproducer above, when run with `990` Define nodes in the `many_defines` function, returns. ```. $: python test_many_defines.py. File ""/home/vpadulan/programs/rootproject/rootbuild/distrdf-percentage-ranges-distrdf-debug/lib/DistRDF/Node.py"", line 177, in graph_prune. if not n.graph_prune():. [Previous line repeated 988 more times]. RecursionError: maximum recursion depth exceeded. ```. ### Expected behavior. No error, as with ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10449
https://github.com/root-project/root/issues/10449:1447,performance,schedul,scheduler,1447,"ised (through pickle), and all its children are serialised with it (and their children, recursively). This behaviour leads to recursion limits hit by pickle after a certain amount of operations is requested, I could reproduce it with 200 operations:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. def many_defines(df):. # Maximum recursion depth exceeded at 200 iterations. for i in range(200):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). df = RDataFrame(100, daskclient=client). many_defines(df). ```. Which raises the following. ```. _pickle.PicklingError: Could not pickle object as excessively deep recursion required. ```. # Update. Fixing just the serialisation issue of the reproducer above unveiled another limitation of the current implementation. The distrdf graph locally needs to be pruned before being sent to the distributed scheduler. The pruning algorithm is also a recursive function, which by default have a limit of 1000 calls in Python. The reproducer above, when run with `990` Define nodes in the `many_defines` function, returns. ```. $: python test_many_defines.py. File ""/home/vpadulan/programs/rootproject/rootbuild/distrdf-percentage-ranges-distrdf-debug/lib/DistRDF/Node.py"", line 177, in graph_prune. if not n.graph_prune():. [Previous line repeated 988 more times]. RecursionError: maximum recursion depth exceeded. ```. ### Expected behavior. No error, as with local RDF:. ```python. import ROOT. def many_defines(df):. for i in range(1000):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. df = ROOT.RDataFrame(100). many_defines(df). ```. ```. $: python rdf_many_defines.py . Total entries: 100. ```. ### Setup. Fedora 35. ROOT >= 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10449
https://github.com/root-project/root/issues/10449:1896,performance,time,times,1896,"ised (through pickle), and all its children are serialised with it (and their children, recursively). This behaviour leads to recursion limits hit by pickle after a certain amount of operations is requested, I could reproduce it with 200 operations:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. def many_defines(df):. # Maximum recursion depth exceeded at 200 iterations. for i in range(200):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). df = RDataFrame(100, daskclient=client). many_defines(df). ```. Which raises the following. ```. _pickle.PicklingError: Could not pickle object as excessively deep recursion required. ```. # Update. Fixing just the serialisation issue of the reproducer above unveiled another limitation of the current implementation. The distrdf graph locally needs to be pruned before being sent to the distributed scheduler. The pruning algorithm is also a recursive function, which by default have a limit of 1000 calls in Python. The reproducer above, when run with `990` Define nodes in the `many_defines` function, returns. ```. $: python test_many_defines.py. File ""/home/vpadulan/programs/rootproject/rootbuild/distrdf-percentage-ranges-distrdf-debug/lib/DistRDF/Node.py"", line 177, in graph_prune. if not n.graph_prune():. [Previous line repeated 988 more times]. RecursionError: maximum recursion depth exceeded. ```. ### Expected behavior. No error, as with local RDF:. ```python. import ROOT. def many_defines(df):. for i in range(1000):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. df = ROOT.RDataFrame(100). many_defines(df). ```. ```. $: python rdf_many_defines.py . Total entries: 100. ```. ### Setup. Fedora 35. ROOT >= 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10449
https://github.com/root-project/root/issues/10449:1985,performance,error,error,1985,"ised (through pickle), and all its children are serialised with it (and their children, recursively). This behaviour leads to recursion limits hit by pickle after a certain amount of operations is requested, I could reproduce it with 200 operations:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. def many_defines(df):. # Maximum recursion depth exceeded at 200 iterations. for i in range(200):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). df = RDataFrame(100, daskclient=client). many_defines(df). ```. Which raises the following. ```. _pickle.PicklingError: Could not pickle object as excessively deep recursion required. ```. # Update. Fixing just the serialisation issue of the reproducer above unveiled another limitation of the current implementation. The distrdf graph locally needs to be pruned before being sent to the distributed scheduler. The pruning algorithm is also a recursive function, which by default have a limit of 1000 calls in Python. The reproducer above, when run with `990` Define nodes in the `many_defines` function, returns. ```. $: python test_many_defines.py. File ""/home/vpadulan/programs/rootproject/rootbuild/distrdf-percentage-ranges-distrdf-debug/lib/DistRDF/Node.py"", line 177, in graph_prune. if not n.graph_prune():. [Previous line repeated 988 more times]. RecursionError: maximum recursion depth exceeded. ```. ### Expected behavior. No error, as with local RDF:. ```python. import ROOT. def many_defines(df):. for i in range(1000):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. df = ROOT.RDataFrame(100). many_defines(df). ```. ```. $: python rdf_many_defines.py . Total entries: 100. ```. ### Setup. Fedora 35. ROOT >= 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10449
https://github.com/root-project/root/issues/10449:1238,safety,Updat,Update,1238," its children. When sending the tasks to a distributed scheduler, the head node of the graph is serialised (through pickle), and all its children are serialised with it (and their children, recursively). This behaviour leads to recursion limits hit by pickle after a certain amount of operations is requested, I could reproduce it with 200 operations:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. def many_defines(df):. # Maximum recursion depth exceeded at 200 iterations. for i in range(200):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). df = RDataFrame(100, daskclient=client). many_defines(df). ```. Which raises the following. ```. _pickle.PicklingError: Could not pickle object as excessively deep recursion required. ```. # Update. Fixing just the serialisation issue of the reproducer above unveiled another limitation of the current implementation. The distrdf graph locally needs to be pruned before being sent to the distributed scheduler. The pruning algorithm is also a recursive function, which by default have a limit of 1000 calls in Python. The reproducer above, when run with `990` Define nodes in the `many_defines` function, returns. ```. $: python test_many_defines.py. File ""/home/vpadulan/programs/rootproject/rootbuild/distrdf-percentage-ranges-distrdf-debug/lib/DistRDF/Node.py"", line 177, in graph_prune. if not n.graph_prune():. [Previous line repeated 988 more times]. RecursionError: maximum recursion depth exceeded. ```. ### Expected behavior. No error, as with local RDF:. ```python. import ROOT. def many_defines(df):. for i in range(1000):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. df = ROOT.RDataFrame(100). many_defines(df). ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10449
https://github.com/root-project/root/issues/10449:1985,safety,error,error,1985,"ised (through pickle), and all its children are serialised with it (and their children, recursively). This behaviour leads to recursion limits hit by pickle after a certain amount of operations is requested, I could reproduce it with 200 operations:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. def many_defines(df):. # Maximum recursion depth exceeded at 200 iterations. for i in range(200):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). df = RDataFrame(100, daskclient=client). many_defines(df). ```. Which raises the following. ```. _pickle.PicklingError: Could not pickle object as excessively deep recursion required. ```. # Update. Fixing just the serialisation issue of the reproducer above unveiled another limitation of the current implementation. The distrdf graph locally needs to be pruned before being sent to the distributed scheduler. The pruning algorithm is also a recursive function, which by default have a limit of 1000 calls in Python. The reproducer above, when run with `990` Define nodes in the `many_defines` function, returns. ```. $: python test_many_defines.py. File ""/home/vpadulan/programs/rootproject/rootbuild/distrdf-percentage-ranges-distrdf-debug/lib/DistRDF/Node.py"", line 177, in graph_prune. if not n.graph_prune():. [Previous line repeated 988 more times]. RecursionError: maximum recursion depth exceeded. ```. ### Expected behavior. No error, as with local RDF:. ```python. import ROOT. def many_defines(df):. for i in range(1000):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. df = ROOT.RDataFrame(100). many_defines(df). ```. ```. $: python rdf_many_defines.py . Total entries: 100. ```. ### Setup. Fedora 35. ROOT >= 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10449
https://github.com/root-project/root/issues/10449:1238,security,Updat,Update,1238," its children. When sending the tasks to a distributed scheduler, the head node of the graph is serialised (through pickle), and all its children are serialised with it (and their children, recursively). This behaviour leads to recursion limits hit by pickle after a certain amount of operations is requested, I could reproduce it with 200 operations:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. def many_defines(df):. # Maximum recursion depth exceeded at 200 iterations. for i in range(200):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). df = RDataFrame(100, daskclient=client). many_defines(df). ```. Which raises the following. ```. _pickle.PicklingError: Could not pickle object as excessively deep recursion required. ```. # Update. Fixing just the serialisation issue of the reproducer above unveiled another limitation of the current implementation. The distrdf graph locally needs to be pruned before being sent to the distributed scheduler. The pruning algorithm is also a recursive function, which by default have a limit of 1000 calls in Python. The reproducer above, when run with `990` Define nodes in the `many_defines` function, returns. ```. $: python test_many_defines.py. File ""/home/vpadulan/programs/rootproject/rootbuild/distrdf-percentage-ranges-distrdf-debug/lib/DistRDF/Node.py"", line 177, in graph_prune. if not n.graph_prune():. [Previous line repeated 988 more times]. RecursionError: maximum recursion depth exceeded. ```. ### Expected behavior. No error, as with local RDF:. ```python. import ROOT. def many_defines(df):. for i in range(1000):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. df = ROOT.RDataFrame(100). many_defines(df). ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10449
https://github.com/root-project/root/issues/10449:124,usability,user,user,124,"Recursion limits hit in pruning/serialisation of distributed RDF graph; # Original bug. The RDataFrame graph defined by the user in the local application is translated into a series of node objects. Each object stores a list of references to its children. When sending the tasks to a distributed scheduler, the head node of the graph is serialised (through pickle), and all its children are serialised with it (and their children, recursively). This behaviour leads to recursion limits hit by pickle after a certain amount of operations is requested, I could reproduce it with 200 operations:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. def many_defines(df):. # Maximum recursion depth exceeded at 200 iterations. for i in range(200):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). df = RDataFrame(100, daskclient=client). many_defines(df). ```. Which raises the following. ```. _pickle.PicklingError: Could not pickle object as excessively deep recursion required. ```. # Update. Fixing just the serialisation issue of the reproducer above unveiled another limitation of the current implementation. The distrdf graph locally needs to be pruned before being sent to the distributed scheduler. The pruning algorithm is also a recursive function, which by default have a limit of 1000 calls in Python. The reproducer above, when run with `990` Define nodes in the `many_defines` function, returns. ```. $: python test_many_defines.py. File ""/home/vpadulan/programs/rootproject/rootbuild/distrdf-percentage-ranges-distrdf-debug/lib/DistRDF/Node.py"", line 177, in graph_prune. if not n.graph_prune():. [Previous line repeated 988 more times]. RecursionError: maximum recursion depth exceeded. ```. ### Expected behavior. No error, as with ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10449
https://github.com/root-project/root/issues/10449:450,usability,behavi,behaviour,450,"Recursion limits hit in pruning/serialisation of distributed RDF graph; # Original bug. The RDataFrame graph defined by the user in the local application is translated into a series of node objects. Each object stores a list of references to its children. When sending the tasks to a distributed scheduler, the head node of the graph is serialised (through pickle), and all its children are serialised with it (and their children, recursively). This behaviour leads to recursion limits hit by pickle after a certain amount of operations is requested, I could reproduce it with 200 operations:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. def many_defines(df):. # Maximum recursion depth exceeded at 200 iterations. for i in range(200):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). df = RDataFrame(100, daskclient=client). many_defines(df). ```. Which raises the following. ```. _pickle.PicklingError: Could not pickle object as excessively deep recursion required. ```. # Update. Fixing just the serialisation issue of the reproducer above unveiled another limitation of the current implementation. The distrdf graph locally needs to be pruned before being sent to the distributed scheduler. The pruning algorithm is also a recursive function, which by default have a limit of 1000 calls in Python. The reproducer above, when run with `990` Define nodes in the `many_defines` function, returns. ```. $: python test_many_defines.py. File ""/home/vpadulan/programs/rootproject/rootbuild/distrdf-percentage-ranges-distrdf-debug/lib/DistRDF/Node.py"", line 177, in graph_prune. if not n.graph_prune():. [Previous line repeated 988 more times]. RecursionError: maximum recursion depth exceeded. ```. ### Expected behavior. No error, as with ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10449
https://github.com/root-project/root/issues/10449:1972,usability,behavi,behavior,1972,"ised (through pickle), and all its children are serialised with it (and their children, recursively). This behaviour leads to recursion limits hit by pickle after a certain amount of operations is requested, I could reproduce it with 200 operations:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. def many_defines(df):. # Maximum recursion depth exceeded at 200 iterations. for i in range(200):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). df = RDataFrame(100, daskclient=client). many_defines(df). ```. Which raises the following. ```. _pickle.PicklingError: Could not pickle object as excessively deep recursion required. ```. # Update. Fixing just the serialisation issue of the reproducer above unveiled another limitation of the current implementation. The distrdf graph locally needs to be pruned before being sent to the distributed scheduler. The pruning algorithm is also a recursive function, which by default have a limit of 1000 calls in Python. The reproducer above, when run with `990` Define nodes in the `many_defines` function, returns. ```. $: python test_many_defines.py. File ""/home/vpadulan/programs/rootproject/rootbuild/distrdf-percentage-ranges-distrdf-debug/lib/DistRDF/Node.py"", line 177, in graph_prune. if not n.graph_prune():. [Previous line repeated 988 more times]. RecursionError: maximum recursion depth exceeded. ```. ### Expected behavior. No error, as with local RDF:. ```python. import ROOT. def many_defines(df):. for i in range(1000):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. df = ROOT.RDataFrame(100). many_defines(df). ```. ```. $: python rdf_many_defines.py . Total entries: 100. ```. ### Setup. Fedora 35. ROOT >= 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10449
https://github.com/root-project/root/issues/10449:1985,usability,error,error,1985,"ised (through pickle), and all its children are serialised with it (and their children, recursively). This behaviour leads to recursion limits hit by pickle after a certain amount of operations is requested, I could reproduce it with 200 operations:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. def many_defines(df):. # Maximum recursion depth exceeded at 200 iterations. for i in range(200):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). df = RDataFrame(100, daskclient=client). many_defines(df). ```. Which raises the following. ```. _pickle.PicklingError: Could not pickle object as excessively deep recursion required. ```. # Update. Fixing just the serialisation issue of the reproducer above unveiled another limitation of the current implementation. The distrdf graph locally needs to be pruned before being sent to the distributed scheduler. The pruning algorithm is also a recursive function, which by default have a limit of 1000 calls in Python. The reproducer above, when run with `990` Define nodes in the `many_defines` function, returns. ```. $: python test_many_defines.py. File ""/home/vpadulan/programs/rootproject/rootbuild/distrdf-percentage-ranges-distrdf-debug/lib/DistRDF/Node.py"", line 177, in graph_prune. if not n.graph_prune():. [Previous line repeated 988 more times]. RecursionError: maximum recursion depth exceeded. ```. ### Expected behavior. No error, as with local RDF:. ```python. import ROOT. def many_defines(df):. for i in range(1000):. df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":. df = ROOT.RDataFrame(100). many_defines(df). ```. ```. $: python rdf_many_defines.py . Total entries: 100. ```. ### Setup. Fedora 35. ROOT >= 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10449
https://github.com/root-project/root/pull/10451:13,deployability,build,build,13,Fix parallel build of tests from roottest on Windows; Prevent the parallel builds of tests from roottest to trigger rebuilding of rootcling_stage1.exe on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10451
https://github.com/root-project/root/pull/10451:75,deployability,build,builds,75,Fix parallel build of tests from roottest on Windows; Prevent the parallel builds of tests from roottest to trigger rebuilding of rootcling_stage1.exe on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10451
https://github.com/root-project/root/pull/10451:4,performance,parallel,parallel,4,Fix parallel build of tests from roottest on Windows; Prevent the parallel builds of tests from roottest to trigger rebuilding of rootcling_stage1.exe on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10451
https://github.com/root-project/root/pull/10451:66,performance,parallel,parallel,66,Fix parallel build of tests from roottest on Windows; Prevent the parallel builds of tests from roottest to trigger rebuilding of rootcling_stage1.exe on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10451
https://github.com/root-project/root/pull/10451:22,safety,test,tests,22,Fix parallel build of tests from roottest on Windows; Prevent the parallel builds of tests from roottest to trigger rebuilding of rootcling_stage1.exe on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10451
https://github.com/root-project/root/pull/10451:54,safety,Prevent,Prevent,54,Fix parallel build of tests from roottest on Windows; Prevent the parallel builds of tests from roottest to trigger rebuilding of rootcling_stage1.exe on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10451
https://github.com/root-project/root/pull/10451:85,safety,test,tests,85,Fix parallel build of tests from roottest on Windows; Prevent the parallel builds of tests from roottest to trigger rebuilding of rootcling_stage1.exe on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10451
https://github.com/root-project/root/pull/10451:54,security,Preven,Prevent,54,Fix parallel build of tests from roottest on Windows; Prevent the parallel builds of tests from roottest to trigger rebuilding of rootcling_stage1.exe on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10451
https://github.com/root-project/root/pull/10451:22,testability,test,tests,22,Fix parallel build of tests from roottest on Windows; Prevent the parallel builds of tests from roottest to trigger rebuilding of rootcling_stage1.exe on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10451
https://github.com/root-project/root/pull/10451:85,testability,test,tests,85,Fix parallel build of tests from roottest on Windows; Prevent the parallel builds of tests from roottest to trigger rebuilding of rootcling_stage1.exe on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10451
https://github.com/root-project/root/issues/10452:1821,availability,down,download,1821,"Cling symbols not exported in win32 and win64; - [x] Checked for duplicates. ### Describe the bug. Cling symbol `cling::runtime::internal::LifetimeHandler` may need to be explicitly exported from shared library on windows. Define a function with function call (`sqrt` in my scenario) in interactive mode. Use it to initialize a `TF1`. nightly 6.27.01 outputs following:. (6.26.00 release crash immediately). ```. IncrementalExecutor::executeFunction: symbol '??0LifetimeHandler@internal@runtime@cling@@QAE@PAVDynamicExprInfo@123@PAVDeclContext@clang@@PBDPAVInterpreter@3@@Z' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::LifetimeHandler(class cling::runtime::internal::DynamicExprInfo *,class clang::DeclContext *,char const *,class cling::Interpreter *). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '??1LifetimeHandler@internal@runtime@cling@@QAE@XZ' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::~LifetimeHandler(void). Maybe you need to load the corresponding shared library? ```. Then call `TF1::Draw()` on it (if 6.27.01), and see interpreter dump stacktrace. Problem not present in script mode. Compiling with `.L test.cpp+` fails, but that seems irrelevant. Without `sqrt` math function interpreter works (function returing 0 immediately). ### Expected behavior. `TF1` initialized with function pointer. ### To Reproduce. Detailed in description section. ### Setup. root nightly 6.27.01 32 bit and 64 bit. root release 6.26.00 32 bit. windows 64 bit os. installed from [nightly repo](https://root.cern/download/nightly/) and the release page binary. ### Additional context. Should be enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10452
https://github.com/root-project/root/issues/10452:380,deployability,releas,release,380,"Cling symbols not exported in win32 and win64; - [x] Checked for duplicates. ### Describe the bug. Cling symbol `cling::runtime::internal::LifetimeHandler` may need to be explicitly exported from shared library on windows. Define a function with function call (`sqrt` in my scenario) in interactive mode. Use it to initialize a `TF1`. nightly 6.27.01 outputs following:. (6.26.00 release crash immediately). ```. IncrementalExecutor::executeFunction: symbol '??0LifetimeHandler@internal@runtime@cling@@QAE@PAVDynamicExprInfo@123@PAVDeclContext@clang@@PBDPAVInterpreter@3@@Z' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::LifetimeHandler(class cling::runtime::internal::DynamicExprInfo *,class clang::DeclContext *,char const *,class cling::Interpreter *). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '??1LifetimeHandler@internal@runtime@cling@@QAE@XZ' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::~LifetimeHandler(void). Maybe you need to load the corresponding shared library? ```. Then call `TF1::Draw()` on it (if 6.27.01), and see interpreter dump stacktrace. Problem not present in script mode. Compiling with `.L test.cpp+` fails, but that seems irrelevant. Without `sqrt` math function interpreter works (function returing 0 immediately). ### Expected behavior. `TF1` initialized with function pointer. ### To Reproduce. Detailed in description section. ### Setup. root nightly 6.27.01 32 bit and 64 bit. root release 6.26.00 32 bit. windows 64 bit os. installed from [nightly repo](https://root.cern/download/nightly/) and the release page binary. ### Additional context. Should be enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10452
https://github.com/root-project/root/issues/10452:1365,deployability,stack,stacktrace,1365,"Cling symbols not exported in win32 and win64; - [x] Checked for duplicates. ### Describe the bug. Cling symbol `cling::runtime::internal::LifetimeHandler` may need to be explicitly exported from shared library on windows. Define a function with function call (`sqrt` in my scenario) in interactive mode. Use it to initialize a `TF1`. nightly 6.27.01 outputs following:. (6.26.00 release crash immediately). ```. IncrementalExecutor::executeFunction: symbol '??0LifetimeHandler@internal@runtime@cling@@QAE@PAVDynamicExprInfo@123@PAVDeclContext@clang@@PBDPAVInterpreter@3@@Z' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::LifetimeHandler(class cling::runtime::internal::DynamicExprInfo *,class clang::DeclContext *,char const *,class cling::Interpreter *). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '??1LifetimeHandler@internal@runtime@cling@@QAE@XZ' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::~LifetimeHandler(void). Maybe you need to load the corresponding shared library? ```. Then call `TF1::Draw()` on it (if 6.27.01), and see interpreter dump stacktrace. Problem not present in script mode. Compiling with `.L test.cpp+` fails, but that seems irrelevant. Without `sqrt` math function interpreter works (function returing 0 immediately). ### Expected behavior. `TF1` initialized with function pointer. ### To Reproduce. Detailed in description section. ### Setup. root nightly 6.27.01 32 bit and 64 bit. root release 6.26.00 32 bit. windows 64 bit os. installed from [nightly repo](https://root.cern/download/nightly/) and the release page binary. ### Additional context. Should be enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10452
https://github.com/root-project/root/issues/10452:1443,deployability,fail,fails,1443,"Cling symbols not exported in win32 and win64; - [x] Checked for duplicates. ### Describe the bug. Cling symbol `cling::runtime::internal::LifetimeHandler` may need to be explicitly exported from shared library on windows. Define a function with function call (`sqrt` in my scenario) in interactive mode. Use it to initialize a `TF1`. nightly 6.27.01 outputs following:. (6.26.00 release crash immediately). ```. IncrementalExecutor::executeFunction: symbol '??0LifetimeHandler@internal@runtime@cling@@QAE@PAVDynamicExprInfo@123@PAVDeclContext@clang@@PBDPAVInterpreter@3@@Z' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::LifetimeHandler(class cling::runtime::internal::DynamicExprInfo *,class clang::DeclContext *,char const *,class cling::Interpreter *). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '??1LifetimeHandler@internal@runtime@cling@@QAE@XZ' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::~LifetimeHandler(void). Maybe you need to load the corresponding shared library? ```. Then call `TF1::Draw()` on it (if 6.27.01), and see interpreter dump stacktrace. Problem not present in script mode. Compiling with `.L test.cpp+` fails, but that seems irrelevant. Without `sqrt` math function interpreter works (function returing 0 immediately). ### Expected behavior. `TF1` initialized with function pointer. ### To Reproduce. Detailed in description section. ### Setup. root nightly 6.27.01 32 bit and 64 bit. root release 6.26.00 32 bit. windows 64 bit os. installed from [nightly repo](https://root.cern/download/nightly/) and the release page binary. ### Additional context. Should be enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10452
https://github.com/root-project/root/issues/10452:1730,deployability,releas,release,1730,"Cling symbols not exported in win32 and win64; - [x] Checked for duplicates. ### Describe the bug. Cling symbol `cling::runtime::internal::LifetimeHandler` may need to be explicitly exported from shared library on windows. Define a function with function call (`sqrt` in my scenario) in interactive mode. Use it to initialize a `TF1`. nightly 6.27.01 outputs following:. (6.26.00 release crash immediately). ```. IncrementalExecutor::executeFunction: symbol '??0LifetimeHandler@internal@runtime@cling@@QAE@PAVDynamicExprInfo@123@PAVDeclContext@clang@@PBDPAVInterpreter@3@@Z' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::LifetimeHandler(class cling::runtime::internal::DynamicExprInfo *,class clang::DeclContext *,char const *,class cling::Interpreter *). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '??1LifetimeHandler@internal@runtime@cling@@QAE@XZ' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::~LifetimeHandler(void). Maybe you need to load the corresponding shared library? ```. Then call `TF1::Draw()` on it (if 6.27.01), and see interpreter dump stacktrace. Problem not present in script mode. Compiling with `.L test.cpp+` fails, but that seems irrelevant. Without `sqrt` math function interpreter works (function returing 0 immediately). ### Expected behavior. `TF1` initialized with function pointer. ### To Reproduce. Detailed in description section. ### Setup. root nightly 6.27.01 32 bit and 64 bit. root release 6.26.00 32 bit. windows 64 bit os. installed from [nightly repo](https://root.cern/download/nightly/) and the release page binary. ### Additional context. Should be enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10452
https://github.com/root-project/root/issues/10452:1773,deployability,instal,installed,1773,"Cling symbols not exported in win32 and win64; - [x] Checked for duplicates. ### Describe the bug. Cling symbol `cling::runtime::internal::LifetimeHandler` may need to be explicitly exported from shared library on windows. Define a function with function call (`sqrt` in my scenario) in interactive mode. Use it to initialize a `TF1`. nightly 6.27.01 outputs following:. (6.26.00 release crash immediately). ```. IncrementalExecutor::executeFunction: symbol '??0LifetimeHandler@internal@runtime@cling@@QAE@PAVDynamicExprInfo@123@PAVDeclContext@clang@@PBDPAVInterpreter@3@@Z' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::LifetimeHandler(class cling::runtime::internal::DynamicExprInfo *,class clang::DeclContext *,char const *,class cling::Interpreter *). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '??1LifetimeHandler@internal@runtime@cling@@QAE@XZ' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::~LifetimeHandler(void). Maybe you need to load the corresponding shared library? ```. Then call `TF1::Draw()` on it (if 6.27.01), and see interpreter dump stacktrace. Problem not present in script mode. Compiling with `.L test.cpp+` fails, but that seems irrelevant. Without `sqrt` math function interpreter works (function returing 0 immediately). ### Expected behavior. `TF1` initialized with function pointer. ### To Reproduce. Detailed in description section. ### Setup. root nightly 6.27.01 32 bit and 64 bit. root release 6.26.00 32 bit. windows 64 bit os. installed from [nightly repo](https://root.cern/download/nightly/) and the release page binary. ### Additional context. Should be enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10452
https://github.com/root-project/root/issues/10452:1848,deployability,releas,release,1848,"Cling symbols not exported in win32 and win64; - [x] Checked for duplicates. ### Describe the bug. Cling symbol `cling::runtime::internal::LifetimeHandler` may need to be explicitly exported from shared library on windows. Define a function with function call (`sqrt` in my scenario) in interactive mode. Use it to initialize a `TF1`. nightly 6.27.01 outputs following:. (6.26.00 release crash immediately). ```. IncrementalExecutor::executeFunction: symbol '??0LifetimeHandler@internal@runtime@cling@@QAE@PAVDynamicExprInfo@123@PAVDeclContext@clang@@PBDPAVInterpreter@3@@Z' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::LifetimeHandler(class cling::runtime::internal::DynamicExprInfo *,class clang::DeclContext *,char const *,class cling::Interpreter *). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '??1LifetimeHandler@internal@runtime@cling@@QAE@XZ' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::~LifetimeHandler(void). Maybe you need to load the corresponding shared library? ```. Then call `TF1::Draw()` on it (if 6.27.01), and see interpreter dump stacktrace. Problem not present in script mode. Compiling with `.L test.cpp+` fails, but that seems irrelevant. Without `sqrt` math function interpreter works (function returing 0 immediately). ### Expected behavior. `TF1` initialized with function pointer. ### To Reproduce. Detailed in description section. ### Setup. root nightly 6.27.01 32 bit and 64 bit. root release 6.26.00 32 bit. windows 64 bit os. installed from [nightly repo](https://root.cern/download/nightly/) and the release page binary. ### Additional context. Should be enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10452
https://github.com/root-project/root/issues/10452:901,energy efficiency,load,load,901,"Cling symbols not exported in win32 and win64; - [x] Checked for duplicates. ### Describe the bug. Cling symbol `cling::runtime::internal::LifetimeHandler` may need to be explicitly exported from shared library on windows. Define a function with function call (`sqrt` in my scenario) in interactive mode. Use it to initialize a `TF1`. nightly 6.27.01 outputs following:. (6.26.00 release crash immediately). ```. IncrementalExecutor::executeFunction: symbol '??0LifetimeHandler@internal@runtime@cling@@QAE@PAVDynamicExprInfo@123@PAVDeclContext@clang@@PBDPAVInterpreter@3@@Z' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::LifetimeHandler(class cling::runtime::internal::DynamicExprInfo *,class clang::DeclContext *,char const *,class cling::Interpreter *). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '??1LifetimeHandler@internal@runtime@cling@@QAE@XZ' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::~LifetimeHandler(void). Maybe you need to load the corresponding shared library? ```. Then call `TF1::Draw()` on it (if 6.27.01), and see interpreter dump stacktrace. Problem not present in script mode. Compiling with `.L test.cpp+` fails, but that seems irrelevant. Without `sqrt` math function interpreter works (function returing 0 immediately). ### Expected behavior. `TF1` initialized with function pointer. ### To Reproduce. Detailed in description section. ### Setup. root nightly 6.27.01 32 bit and 64 bit. root release 6.26.00 32 bit. windows 64 bit os. installed from [nightly repo](https://root.cern/download/nightly/) and the release page binary. ### Additional context. Should be enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10452
https://github.com/root-project/root/issues/10452:1252,energy efficiency,load,load,1252,"Cling symbols not exported in win32 and win64; - [x] Checked for duplicates. ### Describe the bug. Cling symbol `cling::runtime::internal::LifetimeHandler` may need to be explicitly exported from shared library on windows. Define a function with function call (`sqrt` in my scenario) in interactive mode. Use it to initialize a `TF1`. nightly 6.27.01 outputs following:. (6.26.00 release crash immediately). ```. IncrementalExecutor::executeFunction: symbol '??0LifetimeHandler@internal@runtime@cling@@QAE@PAVDynamicExprInfo@123@PAVDeclContext@clang@@PBDPAVInterpreter@3@@Z' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::LifetimeHandler(class cling::runtime::internal::DynamicExprInfo *,class clang::DeclContext *,char const *,class cling::Interpreter *). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '??1LifetimeHandler@internal@runtime@cling@@QAE@XZ' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::~LifetimeHandler(void). Maybe you need to load the corresponding shared library? ```. Then call `TF1::Draw()` on it (if 6.27.01), and see interpreter dump stacktrace. Problem not present in script mode. Compiling with `.L test.cpp+` fails, but that seems irrelevant. Without `sqrt` math function interpreter works (function returing 0 immediately). ### Expected behavior. `TF1` initialized with function pointer. ### To Reproduce. Detailed in description section. ### Setup. root nightly 6.27.01 32 bit and 64 bit. root release 6.26.00 32 bit. windows 64 bit os. installed from [nightly repo](https://root.cern/download/nightly/) and the release page binary. ### Additional context. Should be enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10452
https://github.com/root-project/root/issues/10452:1312,energy efficiency,Draw,Draw,1312,"Cling symbols not exported in win32 and win64; - [x] Checked for duplicates. ### Describe the bug. Cling symbol `cling::runtime::internal::LifetimeHandler` may need to be explicitly exported from shared library on windows. Define a function with function call (`sqrt` in my scenario) in interactive mode. Use it to initialize a `TF1`. nightly 6.27.01 outputs following:. (6.26.00 release crash immediately). ```. IncrementalExecutor::executeFunction: symbol '??0LifetimeHandler@internal@runtime@cling@@QAE@PAVDynamicExprInfo@123@PAVDeclContext@clang@@PBDPAVInterpreter@3@@Z' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::LifetimeHandler(class cling::runtime::internal::DynamicExprInfo *,class clang::DeclContext *,char const *,class cling::Interpreter *). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '??1LifetimeHandler@internal@runtime@cling@@QAE@XZ' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::~LifetimeHandler(void). Maybe you need to load the corresponding shared library? ```. Then call `TF1::Draw()` on it (if 6.27.01), and see interpreter dump stacktrace. Problem not present in script mode. Compiling with `.L test.cpp+` fails, but that seems irrelevant. Without `sqrt` math function interpreter works (function returing 0 immediately). ### Expected behavior. `TF1` initialized with function pointer. ### To Reproduce. Detailed in description section. ### Setup. root nightly 6.27.01 32 bit and 64 bit. root release 6.26.00 32 bit. windows 64 bit os. installed from [nightly repo](https://root.cern/download/nightly/) and the release page binary. ### Additional context. Should be enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10452
https://github.com/root-project/root/issues/10452:686,integrability,pub,public,686,"Cling symbols not exported in win32 and win64; - [x] Checked for duplicates. ### Describe the bug. Cling symbol `cling::runtime::internal::LifetimeHandler` may need to be explicitly exported from shared library on windows. Define a function with function call (`sqrt` in my scenario) in interactive mode. Use it to initialize a `TF1`. nightly 6.27.01 outputs following:. (6.26.00 release crash immediately). ```. IncrementalExecutor::executeFunction: symbol '??0LifetimeHandler@internal@runtime@cling@@QAE@PAVDynamicExprInfo@123@PAVDeclContext@clang@@PBDPAVInterpreter@3@@Z' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::LifetimeHandler(class cling::runtime::internal::DynamicExprInfo *,class clang::DeclContext *,char const *,class cling::Interpreter *). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '??1LifetimeHandler@internal@runtime@cling@@QAE@XZ' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::~LifetimeHandler(void). Maybe you need to load the corresponding shared library? ```. Then call `TF1::Draw()` on it (if 6.27.01), and see interpreter dump stacktrace. Problem not present in script mode. Compiling with `.L test.cpp+` fails, but that seems irrelevant. Without `sqrt` math function interpreter works (function returing 0 immediately). ### Expected behavior. `TF1` initialized with function pointer. ### To Reproduce. Detailed in description section. ### Setup. root nightly 6.27.01 32 bit and 64 bit. root release 6.26.00 32 bit. windows 64 bit os. installed from [nightly repo](https://root.cern/download/nightly/) and the release page binary. ### Additional context. Should be enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10452
https://github.com/root-project/root/issues/10452:1148,integrability,pub,public,1148,"Cling symbols not exported in win32 and win64; - [x] Checked for duplicates. ### Describe the bug. Cling symbol `cling::runtime::internal::LifetimeHandler` may need to be explicitly exported from shared library on windows. Define a function with function call (`sqrt` in my scenario) in interactive mode. Use it to initialize a `TF1`. nightly 6.27.01 outputs following:. (6.26.00 release crash immediately). ```. IncrementalExecutor::executeFunction: symbol '??0LifetimeHandler@internal@runtime@cling@@QAE@PAVDynamicExprInfo@123@PAVDeclContext@clang@@PBDPAVInterpreter@3@@Z' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::LifetimeHandler(class cling::runtime::internal::DynamicExprInfo *,class clang::DeclContext *,char const *,class cling::Interpreter *). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '??1LifetimeHandler@internal@runtime@cling@@QAE@XZ' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::~LifetimeHandler(void). Maybe you need to load the corresponding shared library? ```. Then call `TF1::Draw()` on it (if 6.27.01), and see interpreter dump stacktrace. Problem not present in script mode. Compiling with `.L test.cpp+` fails, but that seems irrelevant. Without `sqrt` math function interpreter works (function returing 0 immediately). ### Expected behavior. `TF1` initialized with function pointer. ### To Reproduce. Detailed in description section. ### Setup. root nightly 6.27.01 32 bit and 64 bit. root release 6.26.00 32 bit. windows 64 bit os. installed from [nightly repo](https://root.cern/download/nightly/) and the release page binary. ### Additional context. Should be enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10452
https://github.com/root-project/root/issues/10452:196,interoperability,share,shared,196,"Cling symbols not exported in win32 and win64; - [x] Checked for duplicates. ### Describe the bug. Cling symbol `cling::runtime::internal::LifetimeHandler` may need to be explicitly exported from shared library on windows. Define a function with function call (`sqrt` in my scenario) in interactive mode. Use it to initialize a `TF1`. nightly 6.27.01 outputs following:. (6.26.00 release crash immediately). ```. IncrementalExecutor::executeFunction: symbol '??0LifetimeHandler@internal@runtime@cling@@QAE@PAVDynamicExprInfo@123@PAVDeclContext@clang@@PBDPAVInterpreter@3@@Z' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::LifetimeHandler(class cling::runtime::internal::DynamicExprInfo *,class clang::DeclContext *,char const *,class cling::Interpreter *). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '??1LifetimeHandler@internal@runtime@cling@@QAE@XZ' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::~LifetimeHandler(void). Maybe you need to load the corresponding shared library? ```. Then call `TF1::Draw()` on it (if 6.27.01), and see interpreter dump stacktrace. Problem not present in script mode. Compiling with `.L test.cpp+` fails, but that seems irrelevant. Without `sqrt` math function interpreter works (function returing 0 immediately). ### Expected behavior. `TF1` initialized with function pointer. ### To Reproduce. Detailed in description section. ### Setup. root nightly 6.27.01 32 bit and 64 bit. root release 6.26.00 32 bit. windows 64 bit os. installed from [nightly repo](https://root.cern/download/nightly/) and the release page binary. ### Additional context. Should be enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10452
https://github.com/root-project/root/issues/10452:924,interoperability,share,shared,924,"Cling symbols not exported in win32 and win64; - [x] Checked for duplicates. ### Describe the bug. Cling symbol `cling::runtime::internal::LifetimeHandler` may need to be explicitly exported from shared library on windows. Define a function with function call (`sqrt` in my scenario) in interactive mode. Use it to initialize a `TF1`. nightly 6.27.01 outputs following:. (6.26.00 release crash immediately). ```. IncrementalExecutor::executeFunction: symbol '??0LifetimeHandler@internal@runtime@cling@@QAE@PAVDynamicExprInfo@123@PAVDeclContext@clang@@PBDPAVInterpreter@3@@Z' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::LifetimeHandler(class cling::runtime::internal::DynamicExprInfo *,class clang::DeclContext *,char const *,class cling::Interpreter *). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '??1LifetimeHandler@internal@runtime@cling@@QAE@XZ' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::~LifetimeHandler(void). Maybe you need to load the corresponding shared library? ```. Then call `TF1::Draw()` on it (if 6.27.01), and see interpreter dump stacktrace. Problem not present in script mode. Compiling with `.L test.cpp+` fails, but that seems irrelevant. Without `sqrt` math function interpreter works (function returing 0 immediately). ### Expected behavior. `TF1` initialized with function pointer. ### To Reproduce. Detailed in description section. ### Setup. root nightly 6.27.01 32 bit and 64 bit. root release 6.26.00 32 bit. windows 64 bit os. installed from [nightly repo](https://root.cern/download/nightly/) and the release page binary. ### Additional context. Should be enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10452
https://github.com/root-project/root/issues/10452:1275,interoperability,share,shared,1275,"Cling symbols not exported in win32 and win64; - [x] Checked for duplicates. ### Describe the bug. Cling symbol `cling::runtime::internal::LifetimeHandler` may need to be explicitly exported from shared library on windows. Define a function with function call (`sqrt` in my scenario) in interactive mode. Use it to initialize a `TF1`. nightly 6.27.01 outputs following:. (6.26.00 release crash immediately). ```. IncrementalExecutor::executeFunction: symbol '??0LifetimeHandler@internal@runtime@cling@@QAE@PAVDynamicExprInfo@123@PAVDeclContext@clang@@PBDPAVInterpreter@3@@Z' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::LifetimeHandler(class cling::runtime::internal::DynamicExprInfo *,class clang::DeclContext *,char const *,class cling::Interpreter *). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '??1LifetimeHandler@internal@runtime@cling@@QAE@XZ' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::~LifetimeHandler(void). Maybe you need to load the corresponding shared library? ```. Then call `TF1::Draw()` on it (if 6.27.01), and see interpreter dump stacktrace. Problem not present in script mode. Compiling with `.L test.cpp+` fails, but that seems irrelevant. Without `sqrt` math function interpreter works (function returing 0 immediately). ### Expected behavior. `TF1` initialized with function pointer. ### To Reproduce. Detailed in description section. ### Setup. root nightly 6.27.01 32 bit and 64 bit. root release 6.26.00 32 bit. windows 64 bit os. installed from [nightly repo](https://root.cern/download/nightly/) and the release page binary. ### Additional context. Should be enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10452
https://github.com/root-project/root/issues/10452:274,modifiability,scenario,scenario,274,"Cling symbols not exported in win32 and win64; - [x] Checked for duplicates. ### Describe the bug. Cling symbol `cling::runtime::internal::LifetimeHandler` may need to be explicitly exported from shared library on windows. Define a function with function call (`sqrt` in my scenario) in interactive mode. Use it to initialize a `TF1`. nightly 6.27.01 outputs following:. (6.26.00 release crash immediately). ```. IncrementalExecutor::executeFunction: symbol '??0LifetimeHandler@internal@runtime@cling@@QAE@PAVDynamicExprInfo@123@PAVDeclContext@clang@@PBDPAVInterpreter@3@@Z' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::LifetimeHandler(class cling::runtime::internal::DynamicExprInfo *,class clang::DeclContext *,char const *,class cling::Interpreter *). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '??1LifetimeHandler@internal@runtime@cling@@QAE@XZ' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::~LifetimeHandler(void). Maybe you need to load the corresponding shared library? ```. Then call `TF1::Draw()` on it (if 6.27.01), and see interpreter dump stacktrace. Problem not present in script mode. Compiling with `.L test.cpp+` fails, but that seems irrelevant. Without `sqrt` math function interpreter works (function returing 0 immediately). ### Expected behavior. `TF1` initialized with function pointer. ### To Reproduce. Detailed in description section. ### Setup. root nightly 6.27.01 32 bit and 64 bit. root release 6.26.00 32 bit. windows 64 bit os. installed from [nightly repo](https://root.cern/download/nightly/) and the release page binary. ### Additional context. Should be enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10452
https://github.com/root-project/root/issues/10452:901,performance,load,load,901,"Cling symbols not exported in win32 and win64; - [x] Checked for duplicates. ### Describe the bug. Cling symbol `cling::runtime::internal::LifetimeHandler` may need to be explicitly exported from shared library on windows. Define a function with function call (`sqrt` in my scenario) in interactive mode. Use it to initialize a `TF1`. nightly 6.27.01 outputs following:. (6.26.00 release crash immediately). ```. IncrementalExecutor::executeFunction: symbol '??0LifetimeHandler@internal@runtime@cling@@QAE@PAVDynamicExprInfo@123@PAVDeclContext@clang@@PBDPAVInterpreter@3@@Z' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::LifetimeHandler(class cling::runtime::internal::DynamicExprInfo *,class clang::DeclContext *,char const *,class cling::Interpreter *). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '??1LifetimeHandler@internal@runtime@cling@@QAE@XZ' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::~LifetimeHandler(void). Maybe you need to load the corresponding shared library? ```. Then call `TF1::Draw()` on it (if 6.27.01), and see interpreter dump stacktrace. Problem not present in script mode. Compiling with `.L test.cpp+` fails, but that seems irrelevant. Without `sqrt` math function interpreter works (function returing 0 immediately). ### Expected behavior. `TF1` initialized with function pointer. ### To Reproduce. Detailed in description section. ### Setup. root nightly 6.27.01 32 bit and 64 bit. root release 6.26.00 32 bit. windows 64 bit os. installed from [nightly repo](https://root.cern/download/nightly/) and the release page binary. ### Additional context. Should be enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10452
https://github.com/root-project/root/issues/10452:1252,performance,load,load,1252,"Cling symbols not exported in win32 and win64; - [x] Checked for duplicates. ### Describe the bug. Cling symbol `cling::runtime::internal::LifetimeHandler` may need to be explicitly exported from shared library on windows. Define a function with function call (`sqrt` in my scenario) in interactive mode. Use it to initialize a `TF1`. nightly 6.27.01 outputs following:. (6.26.00 release crash immediately). ```. IncrementalExecutor::executeFunction: symbol '??0LifetimeHandler@internal@runtime@cling@@QAE@PAVDynamicExprInfo@123@PAVDeclContext@clang@@PBDPAVInterpreter@3@@Z' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::LifetimeHandler(class cling::runtime::internal::DynamicExprInfo *,class clang::DeclContext *,char const *,class cling::Interpreter *). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '??1LifetimeHandler@internal@runtime@cling@@QAE@XZ' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::~LifetimeHandler(void). Maybe you need to load the corresponding shared library? ```. Then call `TF1::Draw()` on it (if 6.27.01), and see interpreter dump stacktrace. Problem not present in script mode. Compiling with `.L test.cpp+` fails, but that seems irrelevant. Without `sqrt` math function interpreter works (function returing 0 immediately). ### Expected behavior. `TF1` initialized with function pointer. ### To Reproduce. Detailed in description section. ### Setup. root nightly 6.27.01 32 bit and 64 bit. root release 6.26.00 32 bit. windows 64 bit os. installed from [nightly repo](https://root.cern/download/nightly/) and the release page binary. ### Additional context. Should be enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10452
https://github.com/root-project/root/issues/10452:1443,reliability,fail,fails,1443,"Cling symbols not exported in win32 and win64; - [x] Checked for duplicates. ### Describe the bug. Cling symbol `cling::runtime::internal::LifetimeHandler` may need to be explicitly exported from shared library on windows. Define a function with function call (`sqrt` in my scenario) in interactive mode. Use it to initialize a `TF1`. nightly 6.27.01 outputs following:. (6.26.00 release crash immediately). ```. IncrementalExecutor::executeFunction: symbol '??0LifetimeHandler@internal@runtime@cling@@QAE@PAVDynamicExprInfo@123@PAVDeclContext@clang@@PBDPAVInterpreter@3@@Z' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::LifetimeHandler(class cling::runtime::internal::DynamicExprInfo *,class clang::DeclContext *,char const *,class cling::Interpreter *). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '??1LifetimeHandler@internal@runtime@cling@@QAE@XZ' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::~LifetimeHandler(void). Maybe you need to load the corresponding shared library? ```. Then call `TF1::Draw()` on it (if 6.27.01), and see interpreter dump stacktrace. Problem not present in script mode. Compiling with `.L test.cpp+` fails, but that seems irrelevant. Without `sqrt` math function interpreter works (function returing 0 immediately). ### Expected behavior. `TF1` initialized with function pointer. ### To Reproduce. Detailed in description section. ### Setup. root nightly 6.27.01 32 bit and 64 bit. root release 6.26.00 32 bit. windows 64 bit os. installed from [nightly repo](https://root.cern/download/nightly/) and the release page binary. ### Additional context. Should be enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10452
https://github.com/root-project/root/issues/10452:1432,safety,test,test,1432,"Cling symbols not exported in win32 and win64; - [x] Checked for duplicates. ### Describe the bug. Cling symbol `cling::runtime::internal::LifetimeHandler` may need to be explicitly exported from shared library on windows. Define a function with function call (`sqrt` in my scenario) in interactive mode. Use it to initialize a `TF1`. nightly 6.27.01 outputs following:. (6.26.00 release crash immediately). ```. IncrementalExecutor::executeFunction: symbol '??0LifetimeHandler@internal@runtime@cling@@QAE@PAVDynamicExprInfo@123@PAVDeclContext@clang@@PBDPAVInterpreter@3@@Z' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::LifetimeHandler(class cling::runtime::internal::DynamicExprInfo *,class clang::DeclContext *,char const *,class cling::Interpreter *). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '??1LifetimeHandler@internal@runtime@cling@@QAE@XZ' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::~LifetimeHandler(void). Maybe you need to load the corresponding shared library? ```. Then call `TF1::Draw()` on it (if 6.27.01), and see interpreter dump stacktrace. Problem not present in script mode. Compiling with `.L test.cpp+` fails, but that seems irrelevant. Without `sqrt` math function interpreter works (function returing 0 immediately). ### Expected behavior. `TF1` initialized with function pointer. ### To Reproduce. Detailed in description section. ### Setup. root nightly 6.27.01 32 bit and 64 bit. root release 6.26.00 32 bit. windows 64 bit os. installed from [nightly repo](https://root.cern/download/nightly/) and the release page binary. ### Additional context. Should be enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10452
https://github.com/root-project/root/issues/10452:1432,testability,test,test,1432,"Cling symbols not exported in win32 and win64; - [x] Checked for duplicates. ### Describe the bug. Cling symbol `cling::runtime::internal::LifetimeHandler` may need to be explicitly exported from shared library on windows. Define a function with function call (`sqrt` in my scenario) in interactive mode. Use it to initialize a `TF1`. nightly 6.27.01 outputs following:. (6.26.00 release crash immediately). ```. IncrementalExecutor::executeFunction: symbol '??0LifetimeHandler@internal@runtime@cling@@QAE@PAVDynamicExprInfo@123@PAVDeclContext@clang@@PBDPAVInterpreter@3@@Z' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::LifetimeHandler(class cling::runtime::internal::DynamicExprInfo *,class clang::DeclContext *,char const *,class cling::Interpreter *). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '??1LifetimeHandler@internal@runtime@cling@@QAE@XZ' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::~LifetimeHandler(void). Maybe you need to load the corresponding shared library? ```. Then call `TF1::Draw()` on it (if 6.27.01), and see interpreter dump stacktrace. Problem not present in script mode. Compiling with `.L test.cpp+` fails, but that seems irrelevant. Without `sqrt` math function interpreter works (function returing 0 immediately). ### Expected behavior. `TF1` initialized with function pointer. ### To Reproduce. Detailed in description section. ### Setup. root nightly 6.27.01 32 bit and 64 bit. root release 6.26.00 32 bit. windows 64 bit os. installed from [nightly repo](https://root.cern/download/nightly/) and the release page binary. ### Additional context. Should be enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10452
https://github.com/root-project/root/issues/10452:1884,testability,context,context,1884,"Cling symbols not exported in win32 and win64; - [x] Checked for duplicates. ### Describe the bug. Cling symbol `cling::runtime::internal::LifetimeHandler` may need to be explicitly exported from shared library on windows. Define a function with function call (`sqrt` in my scenario) in interactive mode. Use it to initialize a `TF1`. nightly 6.27.01 outputs following:. (6.26.00 release crash immediately). ```. IncrementalExecutor::executeFunction: symbol '??0LifetimeHandler@internal@runtime@cling@@QAE@PAVDynamicExprInfo@123@PAVDeclContext@clang@@PBDPAVInterpreter@3@@Z' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::LifetimeHandler(class cling::runtime::internal::DynamicExprInfo *,class clang::DeclContext *,char const *,class cling::Interpreter *). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '??1LifetimeHandler@internal@runtime@cling@@QAE@XZ' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::~LifetimeHandler(void). Maybe you need to load the corresponding shared library? ```. Then call `TF1::Draw()` on it (if 6.27.01), and see interpreter dump stacktrace. Problem not present in script mode. Compiling with `.L test.cpp+` fails, but that seems irrelevant. Without `sqrt` math function interpreter works (function returing 0 immediately). ### Expected behavior. `TF1` initialized with function pointer. ### To Reproduce. Detailed in description section. ### Setup. root nightly 6.27.01 32 bit and 64 bit. root release 6.26.00 32 bit. windows 64 bit os. installed from [nightly repo](https://root.cern/download/nightly/) and the release page binary. ### Additional context. Should be enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10452
https://github.com/root-project/root/issues/10452:287,usability,interact,interactive,287,"Cling symbols not exported in win32 and win64; - [x] Checked for duplicates. ### Describe the bug. Cling symbol `cling::runtime::internal::LifetimeHandler` may need to be explicitly exported from shared library on windows. Define a function with function call (`sqrt` in my scenario) in interactive mode. Use it to initialize a `TF1`. nightly 6.27.01 outputs following:. (6.26.00 release crash immediately). ```. IncrementalExecutor::executeFunction: symbol '??0LifetimeHandler@internal@runtime@cling@@QAE@PAVDynamicExprInfo@123@PAVDeclContext@clang@@PBDPAVInterpreter@3@@Z' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::LifetimeHandler(class cling::runtime::internal::DynamicExprInfo *,class clang::DeclContext *,char const *,class cling::Interpreter *). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '??1LifetimeHandler@internal@runtime@cling@@QAE@XZ' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::~LifetimeHandler(void). Maybe you need to load the corresponding shared library? ```. Then call `TF1::Draw()` on it (if 6.27.01), and see interpreter dump stacktrace. Problem not present in script mode. Compiling with `.L test.cpp+` fails, but that seems irrelevant. Without `sqrt` math function interpreter works (function returing 0 immediately). ### Expected behavior. `TF1` initialized with function pointer. ### To Reproduce. Detailed in description section. ### Setup. root nightly 6.27.01 32 bit and 64 bit. root release 6.26.00 32 bit. windows 64 bit os. installed from [nightly repo](https://root.cern/download/nightly/) and the release page binary. ### Additional context. Should be enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10452
https://github.com/root-project/root/issues/10452:1572,usability,behavi,behavior,1572,"Cling symbols not exported in win32 and win64; - [x] Checked for duplicates. ### Describe the bug. Cling symbol `cling::runtime::internal::LifetimeHandler` may need to be explicitly exported from shared library on windows. Define a function with function call (`sqrt` in my scenario) in interactive mode. Use it to initialize a `TF1`. nightly 6.27.01 outputs following:. (6.26.00 release crash immediately). ```. IncrementalExecutor::executeFunction: symbol '??0LifetimeHandler@internal@runtime@cling@@QAE@PAVDynamicExprInfo@123@PAVDeclContext@clang@@PBDPAVInterpreter@3@@Z' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::LifetimeHandler(class cling::runtime::internal::DynamicExprInfo *,class clang::DeclContext *,char const *,class cling::Interpreter *). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '??1LifetimeHandler@internal@runtime@cling@@QAE@XZ' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::~LifetimeHandler(void). Maybe you need to load the corresponding shared library? ```. Then call `TF1::Draw()` on it (if 6.27.01), and see interpreter dump stacktrace. Problem not present in script mode. Compiling with `.L test.cpp+` fails, but that seems irrelevant. Without `sqrt` math function interpreter works (function returing 0 immediately). ### Expected behavior. `TF1` initialized with function pointer. ### To Reproduce. Detailed in description section. ### Setup. root nightly 6.27.01 32 bit and 64 bit. root release 6.26.00 32 bit. windows 64 bit os. installed from [nightly repo](https://root.cern/download/nightly/) and the release page binary. ### Additional context. Should be enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10452
https://github.com/root-project/root/pull/10453:22,security,auth,authors,22,[skip-ci] Uniformize \authors; Uniformize the `\authors` directive in tutorials.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10453
https://github.com/root-project/root/pull/10453:48,security,auth,authors,48,[skip-ci] Uniformize \authors; Uniformize the `\authors` directive in tutorials.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10453
https://github.com/root-project/root/issues/10454:403,energy efficiency,current,current,403,"[cling] Memory hogging when checking if type is an enum; Initially reported here:. https://root-forum.cern.ch/t/pyroot-and-std-vector-dramatic-ram-usage/49711. when a user was getting a `vector<int>` branch from a tree in a loop in PyROOT. After a bit of digging, it seems the culprit is a call that is made from cppyy to `TInterpreter::ClassInfo_IsEnum`. The following is a C++ reproducer (tested with current master):. ```python. float getMem() {. auto info = ProcInfo_t();. gSystem->GetProcInfo(&info);. float mem = (float)info.fMemResident;. return mem*1e-3;. }. void test(). {. for (int i=0; i < 100000; ++i) {. gInterpreter->ClassInfo_IsEnum(""vector<int>"");. if (i%1000 == 0). printf(""RSS at iteration %d is %f\n"", i, getMem());. }. }. ```. When running the macro above, it can be seen how the memory usage increases after each iteration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10454
https://github.com/root-project/root/issues/10454:8,performance,Memor,Memory,8,"[cling] Memory hogging when checking if type is an enum; Initially reported here:. https://root-forum.cern.ch/t/pyroot-and-std-vector-dramatic-ram-usage/49711. when a user was getting a `vector<int>` branch from a tree in a loop in PyROOT. After a bit of digging, it seems the culprit is a call that is made from cppyy to `TInterpreter::ClassInfo_IsEnum`. The following is a C++ reproducer (tested with current master):. ```python. float getMem() {. auto info = ProcInfo_t();. gSystem->GetProcInfo(&info);. float mem = (float)info.fMemResident;. return mem*1e-3;. }. void test(). {. for (int i=0; i < 100000; ++i) {. gInterpreter->ClassInfo_IsEnum(""vector<int>"");. if (i%1000 == 0). printf(""RSS at iteration %d is %f\n"", i, getMem());. }. }. ```. When running the macro above, it can be seen how the memory usage increases after each iteration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10454
https://github.com/root-project/root/issues/10454:800,performance,memor,memory,800,"[cling] Memory hogging when checking if type is an enum; Initially reported here:. https://root-forum.cern.ch/t/pyroot-and-std-vector-dramatic-ram-usage/49711. when a user was getting a `vector<int>` branch from a tree in a loop in PyROOT. After a bit of digging, it seems the culprit is a call that is made from cppyy to `TInterpreter::ClassInfo_IsEnum`. The following is a C++ reproducer (tested with current master):. ```python. float getMem() {. auto info = ProcInfo_t();. gSystem->GetProcInfo(&info);. float mem = (float)info.fMemResident;. return mem*1e-3;. }. void test(). {. for (int i=0; i < 100000; ++i) {. gInterpreter->ClassInfo_IsEnum(""vector<int>"");. if (i%1000 == 0). printf(""RSS at iteration %d is %f\n"", i, getMem());. }. }. ```. When running the macro above, it can be seen how the memory usage increases after each iteration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10454
https://github.com/root-project/root/issues/10454:391,safety,test,tested,391,"[cling] Memory hogging when checking if type is an enum; Initially reported here:. https://root-forum.cern.ch/t/pyroot-and-std-vector-dramatic-ram-usage/49711. when a user was getting a `vector<int>` branch from a tree in a loop in PyROOT. After a bit of digging, it seems the culprit is a call that is made from cppyy to `TInterpreter::ClassInfo_IsEnum`. The following is a C++ reproducer (tested with current master):. ```python. float getMem() {. auto info = ProcInfo_t();. gSystem->GetProcInfo(&info);. float mem = (float)info.fMemResident;. return mem*1e-3;. }. void test(). {. for (int i=0; i < 100000; ++i) {. gInterpreter->ClassInfo_IsEnum(""vector<int>"");. if (i%1000 == 0). printf(""RSS at iteration %d is %f\n"", i, getMem());. }. }. ```. When running the macro above, it can be seen how the memory usage increases after each iteration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10454
https://github.com/root-project/root/issues/10454:572,safety,test,test,572,"[cling] Memory hogging when checking if type is an enum; Initially reported here:. https://root-forum.cern.ch/t/pyroot-and-std-vector-dramatic-ram-usage/49711. when a user was getting a `vector<int>` branch from a tree in a loop in PyROOT. After a bit of digging, it seems the culprit is a call that is made from cppyy to `TInterpreter::ClassInfo_IsEnum`. The following is a C++ reproducer (tested with current master):. ```python. float getMem() {. auto info = ProcInfo_t();. gSystem->GetProcInfo(&info);. float mem = (float)info.fMemResident;. return mem*1e-3;. }. void test(). {. for (int i=0; i < 100000; ++i) {. gInterpreter->ClassInfo_IsEnum(""vector<int>"");. if (i%1000 == 0). printf(""RSS at iteration %d is %f\n"", i, getMem());. }. }. ```. When running the macro above, it can be seen how the memory usage increases after each iteration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10454
https://github.com/root-project/root/issues/10454:391,testability,test,tested,391,"[cling] Memory hogging when checking if type is an enum; Initially reported here:. https://root-forum.cern.ch/t/pyroot-and-std-vector-dramatic-ram-usage/49711. when a user was getting a `vector<int>` branch from a tree in a loop in PyROOT. After a bit of digging, it seems the culprit is a call that is made from cppyy to `TInterpreter::ClassInfo_IsEnum`. The following is a C++ reproducer (tested with current master):. ```python. float getMem() {. auto info = ProcInfo_t();. gSystem->GetProcInfo(&info);. float mem = (float)info.fMemResident;. return mem*1e-3;. }. void test(). {. for (int i=0; i < 100000; ++i) {. gInterpreter->ClassInfo_IsEnum(""vector<int>"");. if (i%1000 == 0). printf(""RSS at iteration %d is %f\n"", i, getMem());. }. }. ```. When running the macro above, it can be seen how the memory usage increases after each iteration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10454
https://github.com/root-project/root/issues/10454:572,testability,test,test,572,"[cling] Memory hogging when checking if type is an enum; Initially reported here:. https://root-forum.cern.ch/t/pyroot-and-std-vector-dramatic-ram-usage/49711. when a user was getting a `vector<int>` branch from a tree in a loop in PyROOT. After a bit of digging, it seems the culprit is a call that is made from cppyy to `TInterpreter::ClassInfo_IsEnum`. The following is a C++ reproducer (tested with current master):. ```python. float getMem() {. auto info = ProcInfo_t();. gSystem->GetProcInfo(&info);. float mem = (float)info.fMemResident;. return mem*1e-3;. }. void test(). {. for (int i=0; i < 100000; ++i) {. gInterpreter->ClassInfo_IsEnum(""vector<int>"");. if (i%1000 == 0). printf(""RSS at iteration %d is %f\n"", i, getMem());. }. }. ```. When running the macro above, it can be seen how the memory usage increases after each iteration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10454
https://github.com/root-project/root/issues/10454:8,usability,Memor,Memory,8,"[cling] Memory hogging when checking if type is an enum; Initially reported here:. https://root-forum.cern.ch/t/pyroot-and-std-vector-dramatic-ram-usage/49711. when a user was getting a `vector<int>` branch from a tree in a loop in PyROOT. After a bit of digging, it seems the culprit is a call that is made from cppyy to `TInterpreter::ClassInfo_IsEnum`. The following is a C++ reproducer (tested with current master):. ```python. float getMem() {. auto info = ProcInfo_t();. gSystem->GetProcInfo(&info);. float mem = (float)info.fMemResident;. return mem*1e-3;. }. void test(). {. for (int i=0; i < 100000; ++i) {. gInterpreter->ClassInfo_IsEnum(""vector<int>"");. if (i%1000 == 0). printf(""RSS at iteration %d is %f\n"", i, getMem());. }. }. ```. When running the macro above, it can be seen how the memory usage increases after each iteration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10454
https://github.com/root-project/root/issues/10454:167,usability,user,user,167,"[cling] Memory hogging when checking if type is an enum; Initially reported here:. https://root-forum.cern.ch/t/pyroot-and-std-vector-dramatic-ram-usage/49711. when a user was getting a `vector<int>` branch from a tree in a loop in PyROOT. After a bit of digging, it seems the culprit is a call that is made from cppyy to `TInterpreter::ClassInfo_IsEnum`. The following is a C++ reproducer (tested with current master):. ```python. float getMem() {. auto info = ProcInfo_t();. gSystem->GetProcInfo(&info);. float mem = (float)info.fMemResident;. return mem*1e-3;. }. void test(). {. for (int i=0; i < 100000; ++i) {. gInterpreter->ClassInfo_IsEnum(""vector<int>"");. if (i%1000 == 0). printf(""RSS at iteration %d is %f\n"", i, getMem());. }. }. ```. When running the macro above, it can be seen how the memory usage increases after each iteration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10454
https://github.com/root-project/root/issues/10454:800,usability,memor,memory,800,"[cling] Memory hogging when checking if type is an enum; Initially reported here:. https://root-forum.cern.ch/t/pyroot-and-std-vector-dramatic-ram-usage/49711. when a user was getting a `vector<int>` branch from a tree in a loop in PyROOT. After a bit of digging, it seems the culprit is a call that is made from cppyy to `TInterpreter::ClassInfo_IsEnum`. The following is a C++ reproducer (tested with current master):. ```python. float getMem() {. auto info = ProcInfo_t();. gSystem->GetProcInfo(&info);. float mem = (float)info.fMemResident;. return mem*1e-3;. }. void test(). {. for (int i=0; i < 100000; ++i) {. gInterpreter->ClassInfo_IsEnum(""vector<int>"");. if (i%1000 == 0). printf(""RSS at iteration %d is %f\n"", i, getMem());. }. }. ```. When running the macro above, it can be seen how the memory usage increases after each iteration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10454
https://github.com/root-project/root/pull/10455:117,deployability,version,versions,117,[pyroot] Remove duplicated multifit.py tutorial ; Remove multifit.py tutorial in pyroot tutorial since a more recent versions has been added in the fit directory recently by Jonas. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10455
https://github.com/root-project/root/pull/10455:117,integrability,version,versions,117,[pyroot] Remove duplicated multifit.py tutorial ; Remove multifit.py tutorial in pyroot tutorial since a more recent versions has been added in the fit directory recently by Jonas. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10455
https://github.com/root-project/root/pull/10455:117,modifiability,version,versions,117,[pyroot] Remove duplicated multifit.py tutorial ; Remove multifit.py tutorial in pyroot tutorial since a more recent versions has been added in the fit directory recently by Jonas. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10455
https://github.com/root-project/root/pull/10456:818,interoperability,specif,specific,818,"[RF] Improvements to `createHistogram` functions of RooFit datasets; Recently, the overload of `RooAbsData::createHistogram` that takes. integer bin numbers instead of command arguments was deprecated because. its default behavior was inconsistent with the command argument. overload. However, that overload with bin numbers had the advantage that it. accepted the variable names in a comma-separated string, which was often. more convenient than passing the variables by RooFit object references. To preserve this convenience even when the bin integer overload is. removed, a new overload is introduced that also takes strings for. variable names but this time uses RooFit command arguments. A further improvement is made for PyROOT. There was no reason to have these overloads not in `RooAbsData`: no. functionality specific to RooDataSet is used. By moving all `createHistogram` overloads to the RooAbsDataBase class,. we make all overloads accessible to PyROOT also via instances. In the second commit, the RooFit Python tutorials were also code formatted with `black --line-length=120`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10456
https://github.com/root-project/root/pull/10456:1050,interoperability,format,formatted,1050,"[RF] Improvements to `createHistogram` functions of RooFit datasets; Recently, the overload of `RooAbsData::createHistogram` that takes. integer bin numbers instead of command arguments was deprecated because. its default behavior was inconsistent with the command argument. overload. However, that overload with bin numbers had the advantage that it. accepted the variable names in a comma-separated string, which was often. more convenient than passing the variables by RooFit object references. To preserve this convenience even when the bin integer overload is. removed, a new overload is introduced that also takes strings for. variable names but this time uses RooFit command arguments. A further improvement is made for PyROOT. There was no reason to have these overloads not in `RooAbsData`: no. functionality specific to RooDataSet is used. By moving all `createHistogram` overloads to the RooAbsDataBase class,. we make all overloads accessible to PyROOT also via instances. In the second commit, the RooFit Python tutorials were also code formatted with `black --line-length=120`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10456
https://github.com/root-project/root/pull/10456:365,modifiability,variab,variable,365,"[RF] Improvements to `createHistogram` functions of RooFit datasets; Recently, the overload of `RooAbsData::createHistogram` that takes. integer bin numbers instead of command arguments was deprecated because. its default behavior was inconsistent with the command argument. overload. However, that overload with bin numbers had the advantage that it. accepted the variable names in a comma-separated string, which was often. more convenient than passing the variables by RooFit object references. To preserve this convenience even when the bin integer overload is. removed, a new overload is introduced that also takes strings for. variable names but this time uses RooFit command arguments. A further improvement is made for PyROOT. There was no reason to have these overloads not in `RooAbsData`: no. functionality specific to RooDataSet is used. By moving all `createHistogram` overloads to the RooAbsDataBase class,. we make all overloads accessible to PyROOT also via instances. In the second commit, the RooFit Python tutorials were also code formatted with `black --line-length=120`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10456
https://github.com/root-project/root/pull/10456:459,modifiability,variab,variables,459,"[RF] Improvements to `createHistogram` functions of RooFit datasets; Recently, the overload of `RooAbsData::createHistogram` that takes. integer bin numbers instead of command arguments was deprecated because. its default behavior was inconsistent with the command argument. overload. However, that overload with bin numbers had the advantage that it. accepted the variable names in a comma-separated string, which was often. more convenient than passing the variables by RooFit object references. To preserve this convenience even when the bin integer overload is. removed, a new overload is introduced that also takes strings for. variable names but this time uses RooFit command arguments. A further improvement is made for PyROOT. There was no reason to have these overloads not in `RooAbsData`: no. functionality specific to RooDataSet is used. By moving all `createHistogram` overloads to the RooAbsDataBase class,. we make all overloads accessible to PyROOT also via instances. In the second commit, the RooFit Python tutorials were also code formatted with `black --line-length=120`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10456
https://github.com/root-project/root/pull/10456:633,modifiability,variab,variable,633,"[RF] Improvements to `createHistogram` functions of RooFit datasets; Recently, the overload of `RooAbsData::createHistogram` that takes. integer bin numbers instead of command arguments was deprecated because. its default behavior was inconsistent with the command argument. overload. However, that overload with bin numbers had the advantage that it. accepted the variable names in a comma-separated string, which was often. more convenient than passing the variables by RooFit object references. To preserve this convenience even when the bin integer overload is. removed, a new overload is introduced that also takes strings for. variable names but this time uses RooFit command arguments. A further improvement is made for PyROOT. There was no reason to have these overloads not in `RooAbsData`: no. functionality specific to RooDataSet is used. By moving all `createHistogram` overloads to the RooAbsDataBase class,. we make all overloads accessible to PyROOT also via instances. In the second commit, the RooFit Python tutorials were also code formatted with `black --line-length=120`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10456
https://github.com/root-project/root/pull/10456:657,performance,time,time,657,"[RF] Improvements to `createHistogram` functions of RooFit datasets; Recently, the overload of `RooAbsData::createHistogram` that takes. integer bin numbers instead of command arguments was deprecated because. its default behavior was inconsistent with the command argument. overload. However, that overload with bin numbers had the advantage that it. accepted the variable names in a comma-separated string, which was often. more convenient than passing the variables by RooFit object references. To preserve this convenience even when the bin integer overload is. removed, a new overload is introduced that also takes strings for. variable names but this time uses RooFit command arguments. A further improvement is made for PyROOT. There was no reason to have these overloads not in `RooAbsData`: no. functionality specific to RooDataSet is used. By moving all `createHistogram` overloads to the RooAbsDataBase class,. we make all overloads accessible to PyROOT also via instances. In the second commit, the RooFit Python tutorials were also code formatted with `black --line-length=120`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10456
https://github.com/root-project/root/pull/10456:944,security,access,accessible,944,"[RF] Improvements to `createHistogram` functions of RooFit datasets; Recently, the overload of `RooAbsData::createHistogram` that takes. integer bin numbers instead of command arguments was deprecated because. its default behavior was inconsistent with the command argument. overload. However, that overload with bin numbers had the advantage that it. accepted the variable names in a comma-separated string, which was often. more convenient than passing the variables by RooFit object references. To preserve this convenience even when the bin integer overload is. removed, a new overload is introduced that also takes strings for. variable names but this time uses RooFit command arguments. A further improvement is made for PyROOT. There was no reason to have these overloads not in `RooAbsData`: no. functionality specific to RooDataSet is used. By moving all `createHistogram` overloads to the RooAbsDataBase class,. we make all overloads accessible to PyROOT also via instances. In the second commit, the RooFit Python tutorials were also code formatted with `black --line-length=120`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10456
https://github.com/root-project/root/pull/10456:168,usability,command,command,168,"[RF] Improvements to `createHistogram` functions of RooFit datasets; Recently, the overload of `RooAbsData::createHistogram` that takes. integer bin numbers instead of command arguments was deprecated because. its default behavior was inconsistent with the command argument. overload. However, that overload with bin numbers had the advantage that it. accepted the variable names in a comma-separated string, which was often. more convenient than passing the variables by RooFit object references. To preserve this convenience even when the bin integer overload is. removed, a new overload is introduced that also takes strings for. variable names but this time uses RooFit command arguments. A further improvement is made for PyROOT. There was no reason to have these overloads not in `RooAbsData`: no. functionality specific to RooDataSet is used. By moving all `createHistogram` overloads to the RooAbsDataBase class,. we make all overloads accessible to PyROOT also via instances. In the second commit, the RooFit Python tutorials were also code formatted with `black --line-length=120`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10456
https://github.com/root-project/root/pull/10456:222,usability,behavi,behavior,222,"[RF] Improvements to `createHistogram` functions of RooFit datasets; Recently, the overload of `RooAbsData::createHistogram` that takes. integer bin numbers instead of command arguments was deprecated because. its default behavior was inconsistent with the command argument. overload. However, that overload with bin numbers had the advantage that it. accepted the variable names in a comma-separated string, which was often. more convenient than passing the variables by RooFit object references. To preserve this convenience even when the bin integer overload is. removed, a new overload is introduced that also takes strings for. variable names but this time uses RooFit command arguments. A further improvement is made for PyROOT. There was no reason to have these overloads not in `RooAbsData`: no. functionality specific to RooDataSet is used. By moving all `createHistogram` overloads to the RooAbsDataBase class,. we make all overloads accessible to PyROOT also via instances. In the second commit, the RooFit Python tutorials were also code formatted with `black --line-length=120`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10456
https://github.com/root-project/root/pull/10456:257,usability,command,command,257,"[RF] Improvements to `createHistogram` functions of RooFit datasets; Recently, the overload of `RooAbsData::createHistogram` that takes. integer bin numbers instead of command arguments was deprecated because. its default behavior was inconsistent with the command argument. overload. However, that overload with bin numbers had the advantage that it. accepted the variable names in a comma-separated string, which was often. more convenient than passing the variables by RooFit object references. To preserve this convenience even when the bin integer overload is. removed, a new overload is introduced that also takes strings for. variable names but this time uses RooFit command arguments. A further improvement is made for PyROOT. There was no reason to have these overloads not in `RooAbsData`: no. functionality specific to RooDataSet is used. By moving all `createHistogram` overloads to the RooAbsDataBase class,. we make all overloads accessible to PyROOT also via instances. In the second commit, the RooFit Python tutorials were also code formatted with `black --line-length=120`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10456
https://github.com/root-project/root/pull/10456:674,usability,command,command,674,"[RF] Improvements to `createHistogram` functions of RooFit datasets; Recently, the overload of `RooAbsData::createHistogram` that takes. integer bin numbers instead of command arguments was deprecated because. its default behavior was inconsistent with the command argument. overload. However, that overload with bin numbers had the advantage that it. accepted the variable names in a comma-separated string, which was often. more convenient than passing the variables by RooFit object references. To preserve this convenience even when the bin integer overload is. removed, a new overload is introduced that also takes strings for. variable names but this time uses RooFit command arguments. A further improvement is made for PyROOT. There was no reason to have these overloads not in `RooAbsData`: no. functionality specific to RooDataSet is used. By moving all `createHistogram` overloads to the RooAbsDataBase class,. we make all overloads accessible to PyROOT also via instances. In the second commit, the RooFit Python tutorials were also code formatted with `black --line-length=120`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10456
https://github.com/root-project/root/pull/10457:1,energy efficiency,core,core,1,[core] TViewPubDataMembersIter: avoid using deprecated `std::iterator`; `std::iterator<...>` was deprecated in C++17; manually declare the expected member types instead. ## Checklist:. - [X] tested changes locally. This PR fixes #10351.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10457
https://github.com/root-project/root/pull/10457:32,safety,avoid,avoid,32,[core] TViewPubDataMembersIter: avoid using deprecated `std::iterator`; `std::iterator<...>` was deprecated in C++17; manually declare the expected member types instead. ## Checklist:. - [X] tested changes locally. This PR fixes #10351.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10457
https://github.com/root-project/root/pull/10457:191,safety,test,tested,191,[core] TViewPubDataMembersIter: avoid using deprecated `std::iterator`; `std::iterator<...>` was deprecated in C++17; manually declare the expected member types instead. ## Checklist:. - [X] tested changes locally. This PR fixes #10351.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10457
https://github.com/root-project/root/pull/10457:191,testability,test,tested,191,[core] TViewPubDataMembersIter: avoid using deprecated `std::iterator`; `std::iterator<...>` was deprecated in C++17; manually declare the expected member types instead. ## Checklist:. - [X] tested changes locally. This PR fixes #10351.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10457
https://github.com/root-project/root/pull/10458:5,safety,Avoid,Avoid,5,"[DF] Avoid expensive stringstream construction in RCsvDS; With these changes, reading in a CSV of 32M lines takes 43 seconds on my laptop instead of 1m48s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10458
https://github.com/root-project/root/pull/10459:265,availability,operat,operation,265,"Use flat representation of computation graph in tasks; Fixes #10449 . Avoids serialisation of the head node which triggered recursive serialisation of all nodes in the graph. The graph is now represented with a flat list with node information. Each element has the operation of the current node and a (integer id) reference to the parent , which the operation should be called upon. In turn, also recreating the graph on each task is not done recursively anymore. Update:. Tests added, code reviewed. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10459
https://github.com/root-project/root/pull/10459:350,availability,operat,operation,350,"Use flat representation of computation graph in tasks; Fixes #10449 . Avoids serialisation of the head node which triggered recursive serialisation of all nodes in the graph. The graph is now represented with a flat list with node information. Each element has the operation of the current node and a (integer id) reference to the parent , which the operation should be called upon. In turn, also recreating the graph on each task is not done recursively anymore. Update:. Tests added, code reviewed. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10459
https://github.com/root-project/root/pull/10459:464,deployability,Updat,Update,464,"Use flat representation of computation graph in tasks; Fixes #10449 . Avoids serialisation of the head node which triggered recursive serialisation of all nodes in the graph. The graph is now represented with a flat list with node information. Each element has the operation of the current node and a (integer id) reference to the parent , which the operation should be called upon. In turn, also recreating the graph on each task is not done recursively anymore. Update:. Tests added, code reviewed. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10459
https://github.com/root-project/root/pull/10459:282,energy efficiency,current,current,282,"Use flat representation of computation graph in tasks; Fixes #10449 . Avoids serialisation of the head node which triggered recursive serialisation of all nodes in the graph. The graph is now represented with a flat list with node information. Each element has the operation of the current node and a (integer id) reference to the parent , which the operation should be called upon. In turn, also recreating the graph on each task is not done recursively anymore. Update:. Tests added, code reviewed. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10459
https://github.com/root-project/root/pull/10459:70,safety,Avoid,Avoids,70,"Use flat representation of computation graph in tasks; Fixes #10449 . Avoids serialisation of the head node which triggered recursive serialisation of all nodes in the graph. The graph is now represented with a flat list with node information. Each element has the operation of the current node and a (integer id) reference to the parent , which the operation should be called upon. In turn, also recreating the graph on each task is not done recursively anymore. Update:. Tests added, code reviewed. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10459
https://github.com/root-project/root/pull/10459:464,safety,Updat,Update,464,"Use flat representation of computation graph in tasks; Fixes #10449 . Avoids serialisation of the head node which triggered recursive serialisation of all nodes in the graph. The graph is now represented with a flat list with node information. Each element has the operation of the current node and a (integer id) reference to the parent , which the operation should be called upon. In turn, also recreating the graph on each task is not done recursively anymore. Update:. Tests added, code reviewed. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10459
https://github.com/root-project/root/pull/10459:473,safety,Test,Tests,473,"Use flat representation of computation graph in tasks; Fixes #10449 . Avoids serialisation of the head node which triggered recursive serialisation of all nodes in the graph. The graph is now represented with a flat list with node information. Each element has the operation of the current node and a (integer id) reference to the parent , which the operation should be called upon. In turn, also recreating the graph on each task is not done recursively anymore. Update:. Tests added, code reviewed. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10459
https://github.com/root-project/root/pull/10459:491,safety,review,reviewed,491,"Use flat representation of computation graph in tasks; Fixes #10449 . Avoids serialisation of the head node which triggered recursive serialisation of all nodes in the graph. The graph is now represented with a flat list with node information. Each element has the operation of the current node and a (integer id) reference to the parent , which the operation should be called upon. In turn, also recreating the graph on each task is not done recursively anymore. Update:. Tests added, code reviewed. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10459
https://github.com/root-project/root/pull/10459:464,security,Updat,Update,464,"Use flat representation of computation graph in tasks; Fixes #10449 . Avoids serialisation of the head node which triggered recursive serialisation of all nodes in the graph. The graph is now represented with a flat list with node information. Each element has the operation of the current node and a (integer id) reference to the parent , which the operation should be called upon. In turn, also recreating the graph on each task is not done recursively anymore. Update:. Tests added, code reviewed. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10459
https://github.com/root-project/root/pull/10459:473,testability,Test,Tests,473,"Use flat representation of computation graph in tasks; Fixes #10449 . Avoids serialisation of the head node which triggered recursive serialisation of all nodes in the graph. The graph is now represented with a flat list with node information. Each element has the operation of the current node and a (integer id) reference to the parent , which the operation should be called upon. In turn, also recreating the graph on each task is not done recursively anymore. Update:. Tests added, code reviewed. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10459
https://github.com/root-project/root/pull/10459:491,testability,review,reviewed,491,"Use flat representation of computation graph in tasks; Fixes #10449 . Avoids serialisation of the head node which triggered recursive serialisation of all nodes in the graph. The graph is now represented with a flat list with node information. Each element has the operation of the current node and a (integer id) reference to the parent , which the operation should be called upon. In turn, also recreating the graph on each task is not done recursively anymore. Update:. Tests added, code reviewed. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10459
https://github.com/root-project/root/pull/10460:102,availability,error,error,102,"[skip-ci] Fix the double ""author""; Some tutorials had two `\author` lines. This generates the doxygen error:. ```. \endcond command within this file. ```. These double lines are replaced by the `\authors` single line.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10460
https://github.com/root-project/root/pull/10460:102,performance,error,error,102,"[skip-ci] Fix the double ""author""; Some tutorials had two `\author` lines. This generates the doxygen error:. ```. \endcond command within this file. ```. These double lines are replaced by the `\authors` single line.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10460
https://github.com/root-project/root/pull/10460:102,safety,error,error,102,"[skip-ci] Fix the double ""author""; Some tutorials had two `\author` lines. This generates the doxygen error:. ```. \endcond command within this file. ```. These double lines are replaced by the `\authors` single line.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10460
https://github.com/root-project/root/pull/10460:26,security,auth,author,26,"[skip-ci] Fix the double ""author""; Some tutorials had two `\author` lines. This generates the doxygen error:. ```. \endcond command within this file. ```. These double lines are replaced by the `\authors` single line.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10460
https://github.com/root-project/root/pull/10460:60,security,auth,author,60,"[skip-ci] Fix the double ""author""; Some tutorials had two `\author` lines. This generates the doxygen error:. ```. \endcond command within this file. ```. These double lines are replaced by the `\authors` single line.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10460
https://github.com/root-project/root/pull/10460:196,security,auth,authors,196,"[skip-ci] Fix the double ""author""; Some tutorials had two `\author` lines. This generates the doxygen error:. ```. \endcond command within this file. ```. These double lines are replaced by the `\authors` single line.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10460
https://github.com/root-project/root/pull/10460:102,usability,error,error,102,"[skip-ci] Fix the double ""author""; Some tutorials had two `\author` lines. This generates the doxygen error:. ```. \endcond command within this file. ```. These double lines are replaced by the `\authors` single line.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10460
https://github.com/root-project/root/pull/10460:124,usability,command,command,124,"[skip-ci] Fix the double ""author""; Some tutorials had two `\author` lines. This generates the doxygen error:. ```. \endcond command within this file. ```. These double lines are replaced by the `\authors` single line.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10460
https://github.com/root-project/root/issues/10461:5,availability,Error,Errors,5,"TMVA Errors while building the reference guide.; When building the reference guide, some notebook generation for the TMVA tutorials generate errors:. ```. [NbConvertApp] Writing 3244 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_ONNX.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_ONNX.C:15:12: error: no type named 'RModelParser_ONNX' in namespace 'TMVA::Experimental::SOFIE'. SOFIE::RModelParser_ONNX Parser;. ~~~~~~~^. ```. ```. [NbConvertApp] Writing 4914 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_RDataFrame.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.C:28:10: fatal error: 'Higgs_trained_model.hxx' file not found. #include ""Higgs_trained_model.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~. Info in <TMVA_SOFIE_RDataFrame>: You need to run TMVA_Higgs_Classification.C to generate the Keras trained model. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10461
https://github.com/root-project/root/issues/10461:141,availability,error,errors,141,"TMVA Errors while building the reference guide.; When building the reference guide, some notebook generation for the TMVA tutorials generate errors:. ```. [NbConvertApp] Writing 3244 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_ONNX.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_ONNX.C:15:12: error: no type named 'RModelParser_ONNX' in namespace 'TMVA::Experimental::SOFIE'. SOFIE::RModelParser_ONNX Parser;. ~~~~~~~^. ```. ```. [NbConvertApp] Writing 4914 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_RDataFrame.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.C:28:10: fatal error: 'Higgs_trained_model.hxx' file not found. #include ""Higgs_trained_model.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~. Info in <TMVA_SOFIE_RDataFrame>: You need to run TMVA_Higgs_Classification.C to generate the Keras trained model. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10461
https://github.com/root-project/root/issues/10461:466,availability,error,error,466,"TMVA Errors while building the reference guide.; When building the reference guide, some notebook generation for the TMVA tutorials generate errors:. ```. [NbConvertApp] Writing 3244 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_ONNX.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_ONNX.C:15:12: error: no type named 'RModelParser_ONNX' in namespace 'TMVA::Experimental::SOFIE'. SOFIE::RModelParser_ONNX Parser;. ~~~~~~~^. ```. ```. [NbConvertApp] Writing 4914 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_RDataFrame.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.C:28:10: fatal error: 'Higgs_trained_model.hxx' file not found. #include ""Higgs_trained_model.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~. Info in <TMVA_SOFIE_RDataFrame>: You need to run TMVA_Higgs_Classification.C to generate the Keras trained model. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10461
https://github.com/root-project/root/issues/10461:932,availability,error,error,932,"TMVA Errors while building the reference guide.; When building the reference guide, some notebook generation for the TMVA tutorials generate errors:. ```. [NbConvertApp] Writing 3244 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_ONNX.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_ONNX.C:15:12: error: no type named 'RModelParser_ONNX' in namespace 'TMVA::Experimental::SOFIE'. SOFIE::RModelParser_ONNX Parser;. ~~~~~~~^. ```. ```. [NbConvertApp] Writing 4914 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_RDataFrame.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.C:28:10: fatal error: 'Higgs_trained_model.hxx' file not found. #include ""Higgs_trained_model.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~. Info in <TMVA_SOFIE_RDataFrame>: You need to run TMVA_Higgs_Classification.C to generate the Keras trained model. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10461
https://github.com/root-project/root/issues/10461:18,deployability,build,building,18,"TMVA Errors while building the reference guide.; When building the reference guide, some notebook generation for the TMVA tutorials generate errors:. ```. [NbConvertApp] Writing 3244 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_ONNX.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_ONNX.C:15:12: error: no type named 'RModelParser_ONNX' in namespace 'TMVA::Experimental::SOFIE'. SOFIE::RModelParser_ONNX Parser;. ~~~~~~~^. ```. ```. [NbConvertApp] Writing 4914 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_RDataFrame.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.C:28:10: fatal error: 'Higgs_trained_model.hxx' file not found. #include ""Higgs_trained_model.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~. Info in <TMVA_SOFIE_RDataFrame>: You need to run TMVA_Higgs_Classification.C to generate the Keras trained model. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10461
https://github.com/root-project/root/issues/10461:54,deployability,build,building,54,"TMVA Errors while building the reference guide.; When building the reference guide, some notebook generation for the TMVA tutorials generate errors:. ```. [NbConvertApp] Writing 3244 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_ONNX.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_ONNX.C:15:12: error: no type named 'RModelParser_ONNX' in namespace 'TMVA::Experimental::SOFIE'. SOFIE::RModelParser_ONNX Parser;. ~~~~~~~^. ```. ```. [NbConvertApp] Writing 4914 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_RDataFrame.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.C:28:10: fatal error: 'Higgs_trained_model.hxx' file not found. #include ""Higgs_trained_model.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~. Info in <TMVA_SOFIE_RDataFrame>: You need to run TMVA_Higgs_Classification.C to generate the Keras trained model. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10461
https://github.com/root-project/root/issues/10461:207,deployability,build,build,207,"TMVA Errors while building the reference guide.; When building the reference guide, some notebook generation for the TMVA tutorials generate errors:. ```. [NbConvertApp] Writing 3244 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_ONNX.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_ONNX.C:15:12: error: no type named 'RModelParser_ONNX' in namespace 'TMVA::Experimental::SOFIE'. SOFIE::RModelParser_ONNX Parser;. ~~~~~~~^. ```. ```. [NbConvertApp] Writing 4914 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_RDataFrame.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.C:28:10: fatal error: 'Higgs_trained_model.hxx' file not found. #include ""Higgs_trained_model.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~. Info in <TMVA_SOFIE_RDataFrame>: You need to run TMVA_Higgs_Classification.C to generate the Keras trained model. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10461
https://github.com/root-project/root/issues/10461:366,deployability,build,build,366,"TMVA Errors while building the reference guide.; When building the reference guide, some notebook generation for the TMVA tutorials generate errors:. ```. [NbConvertApp] Writing 3244 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_ONNX.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_ONNX.C:15:12: error: no type named 'RModelParser_ONNX' in namespace 'TMVA::Experimental::SOFIE'. SOFIE::RModelParser_ONNX Parser;. ~~~~~~~^. ```. ```. [NbConvertApp] Writing 4914 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_RDataFrame.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.C:28:10: fatal error: 'Higgs_trained_model.hxx' file not found. #include ""Higgs_trained_model.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~. Info in <TMVA_SOFIE_RDataFrame>: You need to run TMVA_Higgs_Classification.C to generate the Keras trained model. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10461
https://github.com/root-project/root/issues/10461:655,deployability,build,build,655,"TMVA Errors while building the reference guide.; When building the reference guide, some notebook generation for the TMVA tutorials generate errors:. ```. [NbConvertApp] Writing 3244 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_ONNX.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_ONNX.C:15:12: error: no type named 'RModelParser_ONNX' in namespace 'TMVA::Experimental::SOFIE'. SOFIE::RModelParser_ONNX Parser;. ~~~~~~~^. ```. ```. [NbConvertApp] Writing 4914 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_RDataFrame.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.C:28:10: fatal error: 'Higgs_trained_model.hxx' file not found. #include ""Higgs_trained_model.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~. Info in <TMVA_SOFIE_RDataFrame>: You need to run TMVA_Higgs_Classification.C to generate the Keras trained model. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10461
https://github.com/root-project/root/issues/10461:820,deployability,build,build,820,"TMVA Errors while building the reference guide.; When building the reference guide, some notebook generation for the TMVA tutorials generate errors:. ```. [NbConvertApp] Writing 3244 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_ONNX.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_ONNX.C:15:12: error: no type named 'RModelParser_ONNX' in namespace 'TMVA::Experimental::SOFIE'. SOFIE::RModelParser_ONNX Parser;. ~~~~~~~^. ```. ```. [NbConvertApp] Writing 4914 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_RDataFrame.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.C:28:10: fatal error: 'Higgs_trained_model.hxx' file not found. #include ""Higgs_trained_model.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~. Info in <TMVA_SOFIE_RDataFrame>: You need to run TMVA_Higgs_Classification.C to generate the Keras trained model. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10461
https://github.com/root-project/root/issues/10461:1151,energy efficiency,model,model,1151,"TMVA Errors while building the reference guide.; When building the reference guide, some notebook generation for the TMVA tutorials generate errors:. ```. [NbConvertApp] Writing 3244 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_ONNX.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_ONNX.C:15:12: error: no type named 'RModelParser_ONNX' in namespace 'TMVA::Experimental::SOFIE'. SOFIE::RModelParser_ONNX Parser;. ~~~~~~~^. ```. ```. [NbConvertApp] Writing 4914 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_RDataFrame.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.C:28:10: fatal error: 'Higgs_trained_model.hxx' file not found. #include ""Higgs_trained_model.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~. Info in <TMVA_SOFIE_RDataFrame>: You need to run TMVA_Higgs_Classification.C to generate the Keras trained model. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10461
https://github.com/root-project/root/issues/10461:5,performance,Error,Errors,5,"TMVA Errors while building the reference guide.; When building the reference guide, some notebook generation for the TMVA tutorials generate errors:. ```. [NbConvertApp] Writing 3244 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_ONNX.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_ONNX.C:15:12: error: no type named 'RModelParser_ONNX' in namespace 'TMVA::Experimental::SOFIE'. SOFIE::RModelParser_ONNX Parser;. ~~~~~~~^. ```. ```. [NbConvertApp] Writing 4914 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_RDataFrame.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.C:28:10: fatal error: 'Higgs_trained_model.hxx' file not found. #include ""Higgs_trained_model.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~. Info in <TMVA_SOFIE_RDataFrame>: You need to run TMVA_Higgs_Classification.C to generate the Keras trained model. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10461
https://github.com/root-project/root/issues/10461:141,performance,error,errors,141,"TMVA Errors while building the reference guide.; When building the reference guide, some notebook generation for the TMVA tutorials generate errors:. ```. [NbConvertApp] Writing 3244 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_ONNX.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_ONNX.C:15:12: error: no type named 'RModelParser_ONNX' in namespace 'TMVA::Experimental::SOFIE'. SOFIE::RModelParser_ONNX Parser;. ~~~~~~~^. ```. ```. [NbConvertApp] Writing 4914 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_RDataFrame.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.C:28:10: fatal error: 'Higgs_trained_model.hxx' file not found. #include ""Higgs_trained_model.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~. Info in <TMVA_SOFIE_RDataFrame>: You need to run TMVA_Higgs_Classification.C to generate the Keras trained model. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10461
https://github.com/root-project/root/issues/10461:466,performance,error,error,466,"TMVA Errors while building the reference guide.; When building the reference guide, some notebook generation for the TMVA tutorials generate errors:. ```. [NbConvertApp] Writing 3244 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_ONNX.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_ONNX.C:15:12: error: no type named 'RModelParser_ONNX' in namespace 'TMVA::Experimental::SOFIE'. SOFIE::RModelParser_ONNX Parser;. ~~~~~~~^. ```. ```. [NbConvertApp] Writing 4914 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_RDataFrame.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.C:28:10: fatal error: 'Higgs_trained_model.hxx' file not found. #include ""Higgs_trained_model.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~. Info in <TMVA_SOFIE_RDataFrame>: You need to run TMVA_Higgs_Classification.C to generate the Keras trained model. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10461
https://github.com/root-project/root/issues/10461:932,performance,error,error,932,"TMVA Errors while building the reference guide.; When building the reference guide, some notebook generation for the TMVA tutorials generate errors:. ```. [NbConvertApp] Writing 3244 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_ONNX.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_ONNX.C:15:12: error: no type named 'RModelParser_ONNX' in namespace 'TMVA::Experimental::SOFIE'. SOFIE::RModelParser_ONNX Parser;. ~~~~~~~^. ```. ```. [NbConvertApp] Writing 4914 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_RDataFrame.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.C:28:10: fatal error: 'Higgs_trained_model.hxx' file not found. #include ""Higgs_trained_model.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~. Info in <TMVA_SOFIE_RDataFrame>: You need to run TMVA_Higgs_Classification.C to generate the Keras trained model. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10461
https://github.com/root-project/root/issues/10461:5,safety,Error,Errors,5,"TMVA Errors while building the reference guide.; When building the reference guide, some notebook generation for the TMVA tutorials generate errors:. ```. [NbConvertApp] Writing 3244 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_ONNX.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_ONNX.C:15:12: error: no type named 'RModelParser_ONNX' in namespace 'TMVA::Experimental::SOFIE'. SOFIE::RModelParser_ONNX Parser;. ~~~~~~~^. ```. ```. [NbConvertApp] Writing 4914 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_RDataFrame.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.C:28:10: fatal error: 'Higgs_trained_model.hxx' file not found. #include ""Higgs_trained_model.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~. Info in <TMVA_SOFIE_RDataFrame>: You need to run TMVA_Higgs_Classification.C to generate the Keras trained model. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10461
https://github.com/root-project/root/issues/10461:141,safety,error,errors,141,"TMVA Errors while building the reference guide.; When building the reference guide, some notebook generation for the TMVA tutorials generate errors:. ```. [NbConvertApp] Writing 3244 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_ONNX.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_ONNX.C:15:12: error: no type named 'RModelParser_ONNX' in namespace 'TMVA::Experimental::SOFIE'. SOFIE::RModelParser_ONNX Parser;. ~~~~~~~^. ```. ```. [NbConvertApp] Writing 4914 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_RDataFrame.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.C:28:10: fatal error: 'Higgs_trained_model.hxx' file not found. #include ""Higgs_trained_model.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~. Info in <TMVA_SOFIE_RDataFrame>: You need to run TMVA_Higgs_Classification.C to generate the Keras trained model. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10461
https://github.com/root-project/root/issues/10461:466,safety,error,error,466,"TMVA Errors while building the reference guide.; When building the reference guide, some notebook generation for the TMVA tutorials generate errors:. ```. [NbConvertApp] Writing 3244 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_ONNX.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_ONNX.C:15:12: error: no type named 'RModelParser_ONNX' in namespace 'TMVA::Experimental::SOFIE'. SOFIE::RModelParser_ONNX Parser;. ~~~~~~~^. ```. ```. [NbConvertApp] Writing 4914 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_RDataFrame.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.C:28:10: fatal error: 'Higgs_trained_model.hxx' file not found. #include ""Higgs_trained_model.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~. Info in <TMVA_SOFIE_RDataFrame>: You need to run TMVA_Higgs_Classification.C to generate the Keras trained model. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10461
https://github.com/root-project/root/issues/10461:932,safety,error,error,932,"TMVA Errors while building the reference guide.; When building the reference guide, some notebook generation for the TMVA tutorials generate errors:. ```. [NbConvertApp] Writing 3244 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_ONNX.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_ONNX.C:15:12: error: no type named 'RModelParser_ONNX' in namespace 'TMVA::Experimental::SOFIE'. SOFIE::RModelParser_ONNX Parser;. ~~~~~~~^. ```. ```. [NbConvertApp] Writing 4914 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_RDataFrame.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.C:28:10: fatal error: 'Higgs_trained_model.hxx' file not found. #include ""Higgs_trained_model.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~. Info in <TMVA_SOFIE_RDataFrame>: You need to run TMVA_Higgs_Classification.C to generate the Keras trained model. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10461
https://github.com/root-project/root/issues/10461:1151,security,model,model,1151,"TMVA Errors while building the reference guide.; When building the reference guide, some notebook generation for the TMVA tutorials generate errors:. ```. [NbConvertApp] Writing 3244 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_ONNX.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_ONNX.C:15:12: error: no type named 'RModelParser_ONNX' in namespace 'TMVA::Experimental::SOFIE'. SOFIE::RModelParser_ONNX Parser;. ~~~~~~~^. ```. ```. [NbConvertApp] Writing 4914 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_RDataFrame.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.C:28:10: fatal error: 'Higgs_trained_model.hxx' file not found. #include ""Higgs_trained_model.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~. Info in <TMVA_SOFIE_RDataFrame>: You need to run TMVA_Higgs_Classification.C to generate the Keras trained model. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10461
https://github.com/root-project/root/issues/10461:5,usability,Error,Errors,5,"TMVA Errors while building the reference guide.; When building the reference guide, some notebook generation for the TMVA tutorials generate errors:. ```. [NbConvertApp] Writing 3244 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_ONNX.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_ONNX.C:15:12: error: no type named 'RModelParser_ONNX' in namespace 'TMVA::Experimental::SOFIE'. SOFIE::RModelParser_ONNX Parser;. ~~~~~~~^. ```. ```. [NbConvertApp] Writing 4914 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_RDataFrame.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.C:28:10: fatal error: 'Higgs_trained_model.hxx' file not found. #include ""Higgs_trained_model.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~. Info in <TMVA_SOFIE_RDataFrame>: You need to run TMVA_Higgs_Classification.C to generate the Keras trained model. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10461
https://github.com/root-project/root/issues/10461:41,usability,guid,guide,41,"TMVA Errors while building the reference guide.; When building the reference guide, some notebook generation for the TMVA tutorials generate errors:. ```. [NbConvertApp] Writing 3244 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_ONNX.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_ONNX.C:15:12: error: no type named 'RModelParser_ONNX' in namespace 'TMVA::Experimental::SOFIE'. SOFIE::RModelParser_ONNX Parser;. ~~~~~~~^. ```. ```. [NbConvertApp] Writing 4914 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_RDataFrame.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.C:28:10: fatal error: 'Higgs_trained_model.hxx' file not found. #include ""Higgs_trained_model.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~. Info in <TMVA_SOFIE_RDataFrame>: You need to run TMVA_Higgs_Classification.C to generate the Keras trained model. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10461
https://github.com/root-project/root/issues/10461:77,usability,guid,guide,77,"TMVA Errors while building the reference guide.; When building the reference guide, some notebook generation for the TMVA tutorials generate errors:. ```. [NbConvertApp] Writing 3244 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_ONNX.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_ONNX.C:15:12: error: no type named 'RModelParser_ONNX' in namespace 'TMVA::Experimental::SOFIE'. SOFIE::RModelParser_ONNX Parser;. ~~~~~~~^. ```. ```. [NbConvertApp] Writing 4914 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_RDataFrame.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.C:28:10: fatal error: 'Higgs_trained_model.hxx' file not found. #include ""Higgs_trained_model.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~. Info in <TMVA_SOFIE_RDataFrame>: You need to run TMVA_Higgs_Classification.C to generate the Keras trained model. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10461
https://github.com/root-project/root/issues/10461:141,usability,error,errors,141,"TMVA Errors while building the reference guide.; When building the reference guide, some notebook generation for the TMVA tutorials generate errors:. ```. [NbConvertApp] Writing 3244 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_ONNX.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_ONNX.C:15:12: error: no type named 'RModelParser_ONNX' in namespace 'TMVA::Experimental::SOFIE'. SOFIE::RModelParser_ONNX Parser;. ~~~~~~~^. ```. ```. [NbConvertApp] Writing 4914 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_RDataFrame.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.C:28:10: fatal error: 'Higgs_trained_model.hxx' file not found. #include ""Higgs_trained_model.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~. Info in <TMVA_SOFIE_RDataFrame>: You need to run TMVA_Higgs_Classification.C to generate the Keras trained model. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10461
https://github.com/root-project/root/issues/10461:466,usability,error,error,466,"TMVA Errors while building the reference guide.; When building the reference guide, some notebook generation for the TMVA tutorials generate errors:. ```. [NbConvertApp] Writing 3244 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_ONNX.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_ONNX.C:15:12: error: no type named 'RModelParser_ONNX' in namespace 'TMVA::Experimental::SOFIE'. SOFIE::RModelParser_ONNX Parser;. ~~~~~~~^. ```. ```. [NbConvertApp] Writing 4914 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_RDataFrame.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.C:28:10: fatal error: 'Higgs_trained_model.hxx' file not found. #include ""Higgs_trained_model.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~. Info in <TMVA_SOFIE_RDataFrame>: You need to run TMVA_Higgs_Classification.C to generate the Keras trained model. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10461
https://github.com/root-project/root/issues/10461:932,usability,error,error,932,"TMVA Errors while building the reference guide.; When building the reference guide, some notebook generation for the TMVA tutorials generate errors:. ```. [NbConvertApp] Writing 3244 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_ONNX.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_ONNX.C:15:12: error: no type named 'RModelParser_ONNX' in namespace 'TMVA::Experimental::SOFIE'. SOFIE::RModelParser_ONNX Parser;. ~~~~~~~^. ```. ```. [NbConvertApp] Writing 4914 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_RDataFrame.C.nbconvert.ipynb. In file included from input_line_8:1:. /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.C:28:10: fatal error: 'Higgs_trained_model.hxx' file not found. #include ""Higgs_trained_model.hxx"". ^~~~~~~~~~~~~~~~~~~~~~~~~. Info in <TMVA_SOFIE_RDataFrame>: You need to run TMVA_Higgs_Classification.C to generate the Keras trained model. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10461
https://github.com/root-project/root/pull/10462:111,availability,error,error,111,"[skip] norm shadows a declaration in the 'std' namespace; This was seen by the jupyter notebook which give the error:. ```. input_line_42:2:2: warning: 'norm' shadows a declaration with the same name in the 'std' namespace; use '::norm' to reference this declaration. TH1F *norm = new TH1F(""Normal Histogram"", ""Normal Histogram"", 100, 0, 100);. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10462
https://github.com/root-project/root/pull/10462:111,performance,error,error,111,"[skip] norm shadows a declaration in the 'std' namespace; This was seen by the jupyter notebook which give the error:. ```. input_line_42:2:2: warning: 'norm' shadows a declaration with the same name in the 'std' namespace; use '::norm' to reference this declaration. TH1F *norm = new TH1F(""Normal Histogram"", ""Normal Histogram"", 100, 0, 100);. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10462
https://github.com/root-project/root/pull/10462:111,safety,error,error,111,"[skip] norm shadows a declaration in the 'std' namespace; This was seen by the jupyter notebook which give the error:. ```. input_line_42:2:2: warning: 'norm' shadows a declaration with the same name in the 'std' namespace; use '::norm' to reference this declaration. TH1F *norm = new TH1F(""Normal Histogram"", ""Normal Histogram"", 100, 0, 100);. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10462
https://github.com/root-project/root/pull/10462:111,usability,error,error,111,"[skip] norm shadows a declaration in the 'std' namespace; This was seen by the jupyter notebook which give the error:. ```. input_line_42:2:2: warning: 'norm' shadows a declaration with the same name in the 'std' namespace; use '::norm' to reference this declaration. TH1F *norm = new TH1F(""Normal Histogram"", ""Normal Histogram"", 100, 0, 100);. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10462
https://github.com/root-project/root/pull/10465:28,availability,error,errors,28,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:223,availability,error,errors,223,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:239,availability,redund,redundant,239,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:325,availability,error,errors,325,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:371,availability,error,errors,371,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:424,availability,error,error,424,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:514,availability,error,errors,514,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:634,availability,error,errors,634,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:805,availability,error,error,805,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:966,availability,toler,tolerance,966,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:994,availability,error,error,994,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:1235,availability,error,errors,1235,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:239,deployability,redundan,redundant,239,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:913,integrability,pub,public,913,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:18,modifiability,paramet,parameter,18,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:132,modifiability,paramet,parameter,132,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:213,modifiability,paramet,parameter,213,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:315,modifiability,paramet,parameter,315,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:361,modifiability,paramet,parameter,361,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:547,modifiability,paramet,parameter,547,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:624,modifiability,paramet,parameter,624,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:820,modifiability,paramet,parameters,820,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:951,modifiability,exten,extended,951,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:976,modifiability,paramet,parameter,976,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:1225,modifiability,paramet,parameter,1225,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:28,performance,error,errors,28,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:223,performance,error,errors,223,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:325,performance,error,errors,325,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:371,performance,error,errors,371,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:424,performance,error,error,424,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:514,performance,error,errors,514,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:634,performance,error,errors,634,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:805,performance,error,error,805,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:994,performance,error,error,994,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:1235,performance,error,errors,1235,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:239,reliability,redundan,redundant,239,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:966,reliability,toleran,tolerance,966,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:28,safety,error,errors,28,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:223,safety,error,errors,223,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:239,safety,redund,redundant,239,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:325,safety,error,errors,325,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:371,safety,error,errors,371,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:424,safety,error,error,424,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:514,safety,error,errors,514,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:634,safety,error,errors,634,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:805,safety,error,error,805,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:994,safety,error,error,994,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:1145,safety,test,test,1145,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:1175,safety,test,testRooAbsPdf,1175,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:1195,safety,test,test,1195,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:1235,safety,error,errors,1235,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:581,security,ident,identical,581,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:896,security,sign,signature,896,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:1140,testability,unit,unit,1140,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:1145,testability,test,test,1145,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:1175,testability,test,testRooAbsPdf,1175,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:1190,testability,unit,unit,1190,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:1195,testability,test,test,1195,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:28,usability,error,errors,28,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:223,usability,error,errors,223,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:325,usability,error,errors,325,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:371,usability,error,errors,371,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:424,usability,error,error,424,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:484,usability,minim,minimization,484,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:514,usability,error,errors,514,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:634,usability,error,errors,634,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:653,usability,user,user,653,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:805,usability,error,error,805,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:994,usability,error,error,994,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:1043,usability,user,user,1043,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/pull/10465:1235,usability,error,errors,1235,"[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov); The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10465
https://github.com/root-project/root/issues/10466:57,energy efficiency,current,currently,57,"[ntuple] `GetViewCollection` semantics are unclear; This currently compiles and works, but probably should not (we are reading the subcollection as if it were a scalar):. https://github.com/root-project/root/blob/6bd78bb934c2ef8833ca70dd78c7872315cb99a6/tree/ntuple/v7/test/rfield_vector.cxx#L23-L31",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10466
https://github.com/root-project/root/issues/10466:131,integrability,sub,subcollection,131,"[ntuple] `GetViewCollection` semantics are unclear; This currently compiles and works, but probably should not (we are reading the subcollection as if it were a scalar):. https://github.com/root-project/root/blob/6bd78bb934c2ef8833ca70dd78c7872315cb99a6/tree/ntuple/v7/test/rfield_vector.cxx#L23-L31",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10466
https://github.com/root-project/root/issues/10466:29,interoperability,semant,semantics,29,"[ntuple] `GetViewCollection` semantics are unclear; This currently compiles and works, but probably should not (we are reading the subcollection as if it were a scalar):. https://github.com/root-project/root/blob/6bd78bb934c2ef8833ca70dd78c7872315cb99a6/tree/ntuple/v7/test/rfield_vector.cxx#L23-L31",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10466
https://github.com/root-project/root/issues/10466:161,modifiability,scal,scalar,161,"[ntuple] `GetViewCollection` semantics are unclear; This currently compiles and works, but probably should not (we are reading the subcollection as if it were a scalar):. https://github.com/root-project/root/blob/6bd78bb934c2ef8833ca70dd78c7872315cb99a6/tree/ntuple/v7/test/rfield_vector.cxx#L23-L31",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10466
https://github.com/root-project/root/issues/10466:269,safety,test,test,269,"[ntuple] `GetViewCollection` semantics are unclear; This currently compiles and works, but probably should not (we are reading the subcollection as if it were a scalar):. https://github.com/root-project/root/blob/6bd78bb934c2ef8833ca70dd78c7872315cb99a6/tree/ntuple/v7/test/rfield_vector.cxx#L23-L31",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10466
https://github.com/root-project/root/issues/10466:269,testability,test,test,269,"[ntuple] `GetViewCollection` semantics are unclear; This currently compiles and works, but probably should not (we are reading the subcollection as if it were a scalar):. https://github.com/root-project/root/blob/6bd78bb934c2ef8833ca70dd78c7872315cb99a6/tree/ntuple/v7/test/rfield_vector.cxx#L23-L31",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10466
https://github.com/root-project/root/pull/10467:629,availability,error,errors-with-,629,"[RF] Fix SumW2Error with extended term BatchMode; The extended term needs a special correction, it should not just be. reevaluated with the squared weights replacing the weights. This is not. implemented correctly. The way how weights are handled in the batch mode was also simplified. Previously, a dummy `RooRealVar` was created for the weight and the. squared weight each, but now the conventional name for the weight. variable is used directly to look up the names in the data map. In the second commit, a unit test is added for this, inspired by the following forum post:. https://root-forum.cern.ch/t/batchmode-gives-wrong-errors-with-sumw2errors/49597/8.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10467
https://github.com/root-project/root/pull/10467:39,integrability,Batch,BatchMode,39,"[RF] Fix SumW2Error with extended term BatchMode; The extended term needs a special correction, it should not just be. reevaluated with the squared weights replacing the weights. This is not. implemented correctly. The way how weights are handled in the batch mode was also simplified. Previously, a dummy `RooRealVar` was created for the weight and the. squared weight each, but now the conventional name for the weight. variable is used directly to look up the names in the data map. In the second commit, a unit test is added for this, inspired by the following forum post:. https://root-forum.cern.ch/t/batchmode-gives-wrong-errors-with-sumw2errors/49597/8.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10467
https://github.com/root-project/root/pull/10467:254,integrability,batch,batch,254,"[RF] Fix SumW2Error with extended term BatchMode; The extended term needs a special correction, it should not just be. reevaluated with the squared weights replacing the weights. This is not. implemented correctly. The way how weights are handled in the batch mode was also simplified. Previously, a dummy `RooRealVar` was created for the weight and the. squared weight each, but now the conventional name for the weight. variable is used directly to look up the names in the data map. In the second commit, a unit test is added for this, inspired by the following forum post:. https://root-forum.cern.ch/t/batchmode-gives-wrong-errors-with-sumw2errors/49597/8.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10467
https://github.com/root-project/root/pull/10467:607,integrability,batch,batchmode-gives-wrong-errors-with-,607,"[RF] Fix SumW2Error with extended term BatchMode; The extended term needs a special correction, it should not just be. reevaluated with the squared weights replacing the weights. This is not. implemented correctly. The way how weights are handled in the batch mode was also simplified. Previously, a dummy `RooRealVar` was created for the weight and the. squared weight each, but now the conventional name for the weight. variable is used directly to look up the names in the data map. In the second commit, a unit test is added for this, inspired by the following forum post:. https://root-forum.cern.ch/t/batchmode-gives-wrong-errors-with-sumw2errors/49597/8.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10467
https://github.com/root-project/root/pull/10467:25,modifiability,exten,extended,25,"[RF] Fix SumW2Error with extended term BatchMode; The extended term needs a special correction, it should not just be. reevaluated with the squared weights replacing the weights. This is not. implemented correctly. The way how weights are handled in the batch mode was also simplified. Previously, a dummy `RooRealVar` was created for the weight and the. squared weight each, but now the conventional name for the weight. variable is used directly to look up the names in the data map. In the second commit, a unit test is added for this, inspired by the following forum post:. https://root-forum.cern.ch/t/batchmode-gives-wrong-errors-with-sumw2errors/49597/8.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10467
https://github.com/root-project/root/pull/10467:54,modifiability,exten,extended,54,"[RF] Fix SumW2Error with extended term BatchMode; The extended term needs a special correction, it should not just be. reevaluated with the squared weights replacing the weights. This is not. implemented correctly. The way how weights are handled in the batch mode was also simplified. Previously, a dummy `RooRealVar` was created for the weight and the. squared weight each, but now the conventional name for the weight. variable is used directly to look up the names in the data map. In the second commit, a unit test is added for this, inspired by the following forum post:. https://root-forum.cern.ch/t/batchmode-gives-wrong-errors-with-sumw2errors/49597/8.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10467
https://github.com/root-project/root/pull/10467:422,modifiability,variab,variable,422,"[RF] Fix SumW2Error with extended term BatchMode; The extended term needs a special correction, it should not just be. reevaluated with the squared weights replacing the weights. This is not. implemented correctly. The way how weights are handled in the batch mode was also simplified. Previously, a dummy `RooRealVar` was created for the weight and the. squared weight each, but now the conventional name for the weight. variable is used directly to look up the names in the data map. In the second commit, a unit test is added for this, inspired by the following forum post:. https://root-forum.cern.ch/t/batchmode-gives-wrong-errors-with-sumw2errors/49597/8.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10467
https://github.com/root-project/root/pull/10467:39,performance,Batch,BatchMode,39,"[RF] Fix SumW2Error with extended term BatchMode; The extended term needs a special correction, it should not just be. reevaluated with the squared weights replacing the weights. This is not. implemented correctly. The way how weights are handled in the batch mode was also simplified. Previously, a dummy `RooRealVar` was created for the weight and the. squared weight each, but now the conventional name for the weight. variable is used directly to look up the names in the data map. In the second commit, a unit test is added for this, inspired by the following forum post:. https://root-forum.cern.ch/t/batchmode-gives-wrong-errors-with-sumw2errors/49597/8.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10467
https://github.com/root-project/root/pull/10467:254,performance,batch,batch,254,"[RF] Fix SumW2Error with extended term BatchMode; The extended term needs a special correction, it should not just be. reevaluated with the squared weights replacing the weights. This is not. implemented correctly. The way how weights are handled in the batch mode was also simplified. Previously, a dummy `RooRealVar` was created for the weight and the. squared weight each, but now the conventional name for the weight. variable is used directly to look up the names in the data map. In the second commit, a unit test is added for this, inspired by the following forum post:. https://root-forum.cern.ch/t/batchmode-gives-wrong-errors-with-sumw2errors/49597/8.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10467
https://github.com/root-project/root/pull/10467:607,performance,batch,batchmode-gives-wrong-errors-with-,607,"[RF] Fix SumW2Error with extended term BatchMode; The extended term needs a special correction, it should not just be. reevaluated with the squared weights replacing the weights. This is not. implemented correctly. The way how weights are handled in the batch mode was also simplified. Previously, a dummy `RooRealVar` was created for the weight and the. squared weight each, but now the conventional name for the weight. variable is used directly to look up the names in the data map. In the second commit, a unit test is added for this, inspired by the following forum post:. https://root-forum.cern.ch/t/batchmode-gives-wrong-errors-with-sumw2errors/49597/8.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10467
https://github.com/root-project/root/pull/10467:515,safety,test,test,515,"[RF] Fix SumW2Error with extended term BatchMode; The extended term needs a special correction, it should not just be. reevaluated with the squared weights replacing the weights. This is not. implemented correctly. The way how weights are handled in the batch mode was also simplified. Previously, a dummy `RooRealVar` was created for the weight and the. squared weight each, but now the conventional name for the weight. variable is used directly to look up the names in the data map. In the second commit, a unit test is added for this, inspired by the following forum post:. https://root-forum.cern.ch/t/batchmode-gives-wrong-errors-with-sumw2errors/49597/8.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10467
https://github.com/root-project/root/pull/10467:629,safety,error,errors-with-,629,"[RF] Fix SumW2Error with extended term BatchMode; The extended term needs a special correction, it should not just be. reevaluated with the squared weights replacing the weights. This is not. implemented correctly. The way how weights are handled in the batch mode was also simplified. Previously, a dummy `RooRealVar` was created for the weight and the. squared weight each, but now the conventional name for the weight. variable is used directly to look up the names in the data map. In the second commit, a unit test is added for this, inspired by the following forum post:. https://root-forum.cern.ch/t/batchmode-gives-wrong-errors-with-sumw2errors/49597/8.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10467
https://github.com/root-project/root/pull/10467:274,testability,simpl,simplified,274,"[RF] Fix SumW2Error with extended term BatchMode; The extended term needs a special correction, it should not just be. reevaluated with the squared weights replacing the weights. This is not. implemented correctly. The way how weights are handled in the batch mode was also simplified. Previously, a dummy `RooRealVar` was created for the weight and the. squared weight each, but now the conventional name for the weight. variable is used directly to look up the names in the data map. In the second commit, a unit test is added for this, inspired by the following forum post:. https://root-forum.cern.ch/t/batchmode-gives-wrong-errors-with-sumw2errors/49597/8.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10467
https://github.com/root-project/root/pull/10467:510,testability,unit,unit,510,"[RF] Fix SumW2Error with extended term BatchMode; The extended term needs a special correction, it should not just be. reevaluated with the squared weights replacing the weights. This is not. implemented correctly. The way how weights are handled in the batch mode was also simplified. Previously, a dummy `RooRealVar` was created for the weight and the. squared weight each, but now the conventional name for the weight. variable is used directly to look up the names in the data map. In the second commit, a unit test is added for this, inspired by the following forum post:. https://root-forum.cern.ch/t/batchmode-gives-wrong-errors-with-sumw2errors/49597/8.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10467
https://github.com/root-project/root/pull/10467:515,testability,test,test,515,"[RF] Fix SumW2Error with extended term BatchMode; The extended term needs a special correction, it should not just be. reevaluated with the squared weights replacing the weights. This is not. implemented correctly. The way how weights are handled in the batch mode was also simplified. Previously, a dummy `RooRealVar` was created for the weight and the. squared weight each, but now the conventional name for the weight. variable is used directly to look up the names in the data map. In the second commit, a unit test is added for this, inspired by the following forum post:. https://root-forum.cern.ch/t/batchmode-gives-wrong-errors-with-sumw2errors/49597/8.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10467
https://github.com/root-project/root/pull/10467:274,usability,simpl,simplified,274,"[RF] Fix SumW2Error with extended term BatchMode; The extended term needs a special correction, it should not just be. reevaluated with the squared weights replacing the weights. This is not. implemented correctly. The way how weights are handled in the batch mode was also simplified. Previously, a dummy `RooRealVar` was created for the weight and the. squared weight each, but now the conventional name for the weight. variable is used directly to look up the names in the data map. In the second commit, a unit test is added for this, inspired by the following forum post:. https://root-forum.cern.ch/t/batchmode-gives-wrong-errors-with-sumw2errors/49597/8.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10467
https://github.com/root-project/root/pull/10467:629,usability,error,errors-with-,629,"[RF] Fix SumW2Error with extended term BatchMode; The extended term needs a special correction, it should not just be. reevaluated with the squared weights replacing the weights. This is not. implemented correctly. The way how weights are handled in the batch mode was also simplified. Previously, a dummy `RooRealVar` was created for the weight and the. squared weight each, but now the conventional name for the weight. variable is used directly to look up the names in the data map. In the second commit, a unit test is added for this, inspired by the following forum post:. https://root-forum.cern.ch/t/batchmode-gives-wrong-errors-with-sumw2errors/49597/8.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10467
https://github.com/root-project/root/pull/10468:328,deployability,patch,patches,328,"[core,v6-26] TViewPubDataMembersIter: avoid using deprecated `std::iterator`; `std::iterator<...>` was deprecated in C++17; manually declare the expected member types instead. ## Checklist:. - [X] tested changes locally. This PR fixes #10351. This PR is a backport of https://github.com/root-project/root/pull/10457 to v6-26-00-patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10468
https://github.com/root-project/root/pull/10468:1,energy efficiency,core,core,1,"[core,v6-26] TViewPubDataMembersIter: avoid using deprecated `std::iterator`; `std::iterator<...>` was deprecated in C++17; manually declare the expected member types instead. ## Checklist:. - [X] tested changes locally. This PR fixes #10351. This PR is a backport of https://github.com/root-project/root/pull/10457 to v6-26-00-patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10468
https://github.com/root-project/root/pull/10468:38,safety,avoid,avoid,38,"[core,v6-26] TViewPubDataMembersIter: avoid using deprecated `std::iterator`; `std::iterator<...>` was deprecated in C++17; manually declare the expected member types instead. ## Checklist:. - [X] tested changes locally. This PR fixes #10351. This PR is a backport of https://github.com/root-project/root/pull/10457 to v6-26-00-patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10468
https://github.com/root-project/root/pull/10468:197,safety,test,tested,197,"[core,v6-26] TViewPubDataMembersIter: avoid using deprecated `std::iterator`; `std::iterator<...>` was deprecated in C++17; manually declare the expected member types instead. ## Checklist:. - [X] tested changes locally. This PR fixes #10351. This PR is a backport of https://github.com/root-project/root/pull/10457 to v6-26-00-patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10468
https://github.com/root-project/root/pull/10468:328,safety,patch,patches,328,"[core,v6-26] TViewPubDataMembersIter: avoid using deprecated `std::iterator`; `std::iterator<...>` was deprecated in C++17; manually declare the expected member types instead. ## Checklist:. - [X] tested changes locally. This PR fixes #10351. This PR is a backport of https://github.com/root-project/root/pull/10457 to v6-26-00-patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10468
https://github.com/root-project/root/pull/10468:328,security,patch,patches,328,"[core,v6-26] TViewPubDataMembersIter: avoid using deprecated `std::iterator`; `std::iterator<...>` was deprecated in C++17; manually declare the expected member types instead. ## Checklist:. - [X] tested changes locally. This PR fixes #10351. This PR is a backport of https://github.com/root-project/root/pull/10457 to v6-26-00-patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10468
https://github.com/root-project/root/pull/10468:197,testability,test,tested,197,"[core,v6-26] TViewPubDataMembersIter: avoid using deprecated `std::iterator`; `std::iterator<...>` was deprecated in C++17; manually declare the expected member types instead. ## Checklist:. - [X] tested changes locally. This PR fixes #10351. This PR is a backport of https://github.com/root-project/root/pull/10457 to v6-26-00-patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10468
https://github.com/root-project/root/pull/10469:33,integrability,interfac,interface,33,Use more override syntax in main interface classes; Let compile large ROOT-based project with `-Wsuggest-override` compile options. At some point `-Wsuggest-override` can be add to `-Ddev=ON` compilation mode for ROOT itself,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10469
https://github.com/root-project/root/pull/10469:33,interoperability,interfac,interface,33,Use more override syntax in main interface classes; Let compile large ROOT-based project with `-Wsuggest-override` compile options. At some point `-Wsuggest-override` can be add to `-Ddev=ON` compilation mode for ROOT itself,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10469
https://github.com/root-project/root/pull/10469:33,modifiability,interfac,interface,33,Use more override syntax in main interface classes; Let compile large ROOT-based project with `-Wsuggest-override` compile options. At some point `-Wsuggest-override` can be add to `-Ddev=ON` compilation mode for ROOT itself,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10469
https://github.com/root-project/root/pull/10470:5,availability,Error,Error,5,"[RF] Error out when setting out-of-range variable value instead of clipping; In previous ROOT versions, if you set the value of a variable with. `RooRealVar::setVal()`, the value was silently clippend when it was. outside the variable range. This silent mutation of data can be. dangerous. With ROOT 6.28, an exception will be thrown instead. If you. know what you are doing and want to restore the old clipping behavior,. you can do so with `RooRealVar::enableSilentClipping()`, but this is not. recommended. This change caught a logic error in `stressRooFit` where a background. fraction was randomized to be outside the `[0,1]` interval. That part of. the test was therefore removed (it was already removed from the. corresponding tutorial). Closes https://github.com/root-project/root/issues/6937.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10470
https://github.com/root-project/root/pull/10470:387,availability,restor,restore,387,"[RF] Error out when setting out-of-range variable value instead of clipping; In previous ROOT versions, if you set the value of a variable with. `RooRealVar::setVal()`, the value was silently clippend when it was. outside the variable range. This silent mutation of data can be. dangerous. With ROOT 6.28, an exception will be thrown instead. If you. know what you are doing and want to restore the old clipping behavior,. you can do so with `RooRealVar::enableSilentClipping()`, but this is not. recommended. This change caught a logic error in `stressRooFit` where a background. fraction was randomized to be outside the `[0,1]` interval. That part of. the test was therefore removed (it was already removed from the. corresponding tutorial). Closes https://github.com/root-project/root/issues/6937.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10470
https://github.com/root-project/root/pull/10470:537,availability,error,error,537,"[RF] Error out when setting out-of-range variable value instead of clipping; In previous ROOT versions, if you set the value of a variable with. `RooRealVar::setVal()`, the value was silently clippend when it was. outside the variable range. This silent mutation of data can be. dangerous. With ROOT 6.28, an exception will be thrown instead. If you. know what you are doing and want to restore the old clipping behavior,. you can do so with `RooRealVar::enableSilentClipping()`, but this is not. recommended. This change caught a logic error in `stressRooFit` where a background. fraction was randomized to be outside the `[0,1]` interval. That part of. the test was therefore removed (it was already removed from the. corresponding tutorial). Closes https://github.com/root-project/root/issues/6937.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10470
https://github.com/root-project/root/pull/10470:94,deployability,version,versions,94,"[RF] Error out when setting out-of-range variable value instead of clipping; In previous ROOT versions, if you set the value of a variable with. `RooRealVar::setVal()`, the value was silently clippend when it was. outside the variable range. This silent mutation of data can be. dangerous. With ROOT 6.28, an exception will be thrown instead. If you. know what you are doing and want to restore the old clipping behavior,. you can do so with `RooRealVar::enableSilentClipping()`, but this is not. recommended. This change caught a logic error in `stressRooFit` where a background. fraction was randomized to be outside the `[0,1]` interval. That part of. the test was therefore removed (it was already removed from the. corresponding tutorial). Closes https://github.com/root-project/root/issues/6937.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10470
https://github.com/root-project/root/pull/10470:531,deployability,log,logic,531,"[RF] Error out when setting out-of-range variable value instead of clipping; In previous ROOT versions, if you set the value of a variable with. `RooRealVar::setVal()`, the value was silently clippend when it was. outside the variable range. This silent mutation of data can be. dangerous. With ROOT 6.28, an exception will be thrown instead. If you. know what you are doing and want to restore the old clipping behavior,. you can do so with `RooRealVar::enableSilentClipping()`, but this is not. recommended. This change caught a logic error in `stressRooFit` where a background. fraction was randomized to be outside the `[0,1]` interval. That part of. the test was therefore removed (it was already removed from the. corresponding tutorial). Closes https://github.com/root-project/root/issues/6937.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10470
https://github.com/root-project/root/pull/10470:94,integrability,version,versions,94,"[RF] Error out when setting out-of-range variable value instead of clipping; In previous ROOT versions, if you set the value of a variable with. `RooRealVar::setVal()`, the value was silently clippend when it was. outside the variable range. This silent mutation of data can be. dangerous. With ROOT 6.28, an exception will be thrown instead. If you. know what you are doing and want to restore the old clipping behavior,. you can do so with `RooRealVar::enableSilentClipping()`, but this is not. recommended. This change caught a logic error in `stressRooFit` where a background. fraction was randomized to be outside the `[0,1]` interval. That part of. the test was therefore removed (it was already removed from the. corresponding tutorial). Closes https://github.com/root-project/root/issues/6937.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10470
https://github.com/root-project/root/pull/10470:41,modifiability,variab,variable,41,"[RF] Error out when setting out-of-range variable value instead of clipping; In previous ROOT versions, if you set the value of a variable with. `RooRealVar::setVal()`, the value was silently clippend when it was. outside the variable range. This silent mutation of data can be. dangerous. With ROOT 6.28, an exception will be thrown instead. If you. know what you are doing and want to restore the old clipping behavior,. you can do so with `RooRealVar::enableSilentClipping()`, but this is not. recommended. This change caught a logic error in `stressRooFit` where a background. fraction was randomized to be outside the `[0,1]` interval. That part of. the test was therefore removed (it was already removed from the. corresponding tutorial). Closes https://github.com/root-project/root/issues/6937.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10470
https://github.com/root-project/root/pull/10470:94,modifiability,version,versions,94,"[RF] Error out when setting out-of-range variable value instead of clipping; In previous ROOT versions, if you set the value of a variable with. `RooRealVar::setVal()`, the value was silently clippend when it was. outside the variable range. This silent mutation of data can be. dangerous. With ROOT 6.28, an exception will be thrown instead. If you. know what you are doing and want to restore the old clipping behavior,. you can do so with `RooRealVar::enableSilentClipping()`, but this is not. recommended. This change caught a logic error in `stressRooFit` where a background. fraction was randomized to be outside the `[0,1]` interval. That part of. the test was therefore removed (it was already removed from the. corresponding tutorial). Closes https://github.com/root-project/root/issues/6937.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10470
https://github.com/root-project/root/pull/10470:130,modifiability,variab,variable,130,"[RF] Error out when setting out-of-range variable value instead of clipping; In previous ROOT versions, if you set the value of a variable with. `RooRealVar::setVal()`, the value was silently clippend when it was. outside the variable range. This silent mutation of data can be. dangerous. With ROOT 6.28, an exception will be thrown instead. If you. know what you are doing and want to restore the old clipping behavior,. you can do so with `RooRealVar::enableSilentClipping()`, but this is not. recommended. This change caught a logic error in `stressRooFit` where a background. fraction was randomized to be outside the `[0,1]` interval. That part of. the test was therefore removed (it was already removed from the. corresponding tutorial). Closes https://github.com/root-project/root/issues/6937.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10470
https://github.com/root-project/root/pull/10470:226,modifiability,variab,variable,226,"[RF] Error out when setting out-of-range variable value instead of clipping; In previous ROOT versions, if you set the value of a variable with. `RooRealVar::setVal()`, the value was silently clippend when it was. outside the variable range. This silent mutation of data can be. dangerous. With ROOT 6.28, an exception will be thrown instead. If you. know what you are doing and want to restore the old clipping behavior,. you can do so with `RooRealVar::enableSilentClipping()`, but this is not. recommended. This change caught a logic error in `stressRooFit` where a background. fraction was randomized to be outside the `[0,1]` interval. That part of. the test was therefore removed (it was already removed from the. corresponding tutorial). Closes https://github.com/root-project/root/issues/6937.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10470
https://github.com/root-project/root/pull/10470:5,performance,Error,Error,5,"[RF] Error out when setting out-of-range variable value instead of clipping; In previous ROOT versions, if you set the value of a variable with. `RooRealVar::setVal()`, the value was silently clippend when it was. outside the variable range. This silent mutation of data can be. dangerous. With ROOT 6.28, an exception will be thrown instead. If you. know what you are doing and want to restore the old clipping behavior,. you can do so with `RooRealVar::enableSilentClipping()`, but this is not. recommended. This change caught a logic error in `stressRooFit` where a background. fraction was randomized to be outside the `[0,1]` interval. That part of. the test was therefore removed (it was already removed from the. corresponding tutorial). Closes https://github.com/root-project/root/issues/6937.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10470
https://github.com/root-project/root/pull/10470:537,performance,error,error,537,"[RF] Error out when setting out-of-range variable value instead of clipping; In previous ROOT versions, if you set the value of a variable with. `RooRealVar::setVal()`, the value was silently clippend when it was. outside the variable range. This silent mutation of data can be. dangerous. With ROOT 6.28, an exception will be thrown instead. If you. know what you are doing and want to restore the old clipping behavior,. you can do so with `RooRealVar::enableSilentClipping()`, but this is not. recommended. This change caught a logic error in `stressRooFit` where a background. fraction was randomized to be outside the `[0,1]` interval. That part of. the test was therefore removed (it was already removed from the. corresponding tutorial). Closes https://github.com/root-project/root/issues/6937.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10470
https://github.com/root-project/root/pull/10470:387,reliability,restor,restore,387,"[RF] Error out when setting out-of-range variable value instead of clipping; In previous ROOT versions, if you set the value of a variable with. `RooRealVar::setVal()`, the value was silently clippend when it was. outside the variable range. This silent mutation of data can be. dangerous. With ROOT 6.28, an exception will be thrown instead. If you. know what you are doing and want to restore the old clipping behavior,. you can do so with `RooRealVar::enableSilentClipping()`, but this is not. recommended. This change caught a logic error in `stressRooFit` where a background. fraction was randomized to be outside the `[0,1]` interval. That part of. the test was therefore removed (it was already removed from the. corresponding tutorial). Closes https://github.com/root-project/root/issues/6937.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10470
https://github.com/root-project/root/pull/10470:5,safety,Error,Error,5,"[RF] Error out when setting out-of-range variable value instead of clipping; In previous ROOT versions, if you set the value of a variable with. `RooRealVar::setVal()`, the value was silently clippend when it was. outside the variable range. This silent mutation of data can be. dangerous. With ROOT 6.28, an exception will be thrown instead. If you. know what you are doing and want to restore the old clipping behavior,. you can do so with `RooRealVar::enableSilentClipping()`, but this is not. recommended. This change caught a logic error in `stressRooFit` where a background. fraction was randomized to be outside the `[0,1]` interval. That part of. the test was therefore removed (it was already removed from the. corresponding tutorial). Closes https://github.com/root-project/root/issues/6937.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10470
https://github.com/root-project/root/pull/10470:309,safety,except,exception,309,"[RF] Error out when setting out-of-range variable value instead of clipping; In previous ROOT versions, if you set the value of a variable with. `RooRealVar::setVal()`, the value was silently clippend when it was. outside the variable range. This silent mutation of data can be. dangerous. With ROOT 6.28, an exception will be thrown instead. If you. know what you are doing and want to restore the old clipping behavior,. you can do so with `RooRealVar::enableSilentClipping()`, but this is not. recommended. This change caught a logic error in `stressRooFit` where a background. fraction was randomized to be outside the `[0,1]` interval. That part of. the test was therefore removed (it was already removed from the. corresponding tutorial). Closes https://github.com/root-project/root/issues/6937.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10470
https://github.com/root-project/root/pull/10470:531,safety,log,logic,531,"[RF] Error out when setting out-of-range variable value instead of clipping; In previous ROOT versions, if you set the value of a variable with. `RooRealVar::setVal()`, the value was silently clippend when it was. outside the variable range. This silent mutation of data can be. dangerous. With ROOT 6.28, an exception will be thrown instead. If you. know what you are doing and want to restore the old clipping behavior,. you can do so with `RooRealVar::enableSilentClipping()`, but this is not. recommended. This change caught a logic error in `stressRooFit` where a background. fraction was randomized to be outside the `[0,1]` interval. That part of. the test was therefore removed (it was already removed from the. corresponding tutorial). Closes https://github.com/root-project/root/issues/6937.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10470
https://github.com/root-project/root/pull/10470:537,safety,error,error,537,"[RF] Error out when setting out-of-range variable value instead of clipping; In previous ROOT versions, if you set the value of a variable with. `RooRealVar::setVal()`, the value was silently clippend when it was. outside the variable range. This silent mutation of data can be. dangerous. With ROOT 6.28, an exception will be thrown instead. If you. know what you are doing and want to restore the old clipping behavior,. you can do so with `RooRealVar::enableSilentClipping()`, but this is not. recommended. This change caught a logic error in `stressRooFit` where a background. fraction was randomized to be outside the `[0,1]` interval. That part of. the test was therefore removed (it was already removed from the. corresponding tutorial). Closes https://github.com/root-project/root/issues/6937.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10470
https://github.com/root-project/root/pull/10470:659,safety,test,test,659,"[RF] Error out when setting out-of-range variable value instead of clipping; In previous ROOT versions, if you set the value of a variable with. `RooRealVar::setVal()`, the value was silently clippend when it was. outside the variable range. This silent mutation of data can be. dangerous. With ROOT 6.28, an exception will be thrown instead. If you. know what you are doing and want to restore the old clipping behavior,. you can do so with `RooRealVar::enableSilentClipping()`, but this is not. recommended. This change caught a logic error in `stressRooFit` where a background. fraction was randomized to be outside the `[0,1]` interval. That part of. the test was therefore removed (it was already removed from the. corresponding tutorial). Closes https://github.com/root-project/root/issues/6937.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10470
https://github.com/root-project/root/pull/10470:531,security,log,logic,531,"[RF] Error out when setting out-of-range variable value instead of clipping; In previous ROOT versions, if you set the value of a variable with. `RooRealVar::setVal()`, the value was silently clippend when it was. outside the variable range. This silent mutation of data can be. dangerous. With ROOT 6.28, an exception will be thrown instead. If you. know what you are doing and want to restore the old clipping behavior,. you can do so with `RooRealVar::enableSilentClipping()`, but this is not. recommended. This change caught a logic error in `stressRooFit` where a background. fraction was randomized to be outside the `[0,1]` interval. That part of. the test was therefore removed (it was already removed from the. corresponding tutorial). Closes https://github.com/root-project/root/issues/6937.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10470
https://github.com/root-project/root/pull/10470:531,testability,log,logic,531,"[RF] Error out when setting out-of-range variable value instead of clipping; In previous ROOT versions, if you set the value of a variable with. `RooRealVar::setVal()`, the value was silently clippend when it was. outside the variable range. This silent mutation of data can be. dangerous. With ROOT 6.28, an exception will be thrown instead. If you. know what you are doing and want to restore the old clipping behavior,. you can do so with `RooRealVar::enableSilentClipping()`, but this is not. recommended. This change caught a logic error in `stressRooFit` where a background. fraction was randomized to be outside the `[0,1]` interval. That part of. the test was therefore removed (it was already removed from the. corresponding tutorial). Closes https://github.com/root-project/root/issues/6937.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10470
https://github.com/root-project/root/pull/10470:659,testability,test,test,659,"[RF] Error out when setting out-of-range variable value instead of clipping; In previous ROOT versions, if you set the value of a variable with. `RooRealVar::setVal()`, the value was silently clippend when it was. outside the variable range. This silent mutation of data can be. dangerous. With ROOT 6.28, an exception will be thrown instead. If you. know what you are doing and want to restore the old clipping behavior,. you can do so with `RooRealVar::enableSilentClipping()`, but this is not. recommended. This change caught a logic error in `stressRooFit` where a background. fraction was randomized to be outside the `[0,1]` interval. That part of. the test was therefore removed (it was already removed from the. corresponding tutorial). Closes https://github.com/root-project/root/issues/6937.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10470
https://github.com/root-project/root/pull/10470:5,usability,Error,Error,5,"[RF] Error out when setting out-of-range variable value instead of clipping; In previous ROOT versions, if you set the value of a variable with. `RooRealVar::setVal()`, the value was silently clippend when it was. outside the variable range. This silent mutation of data can be. dangerous. With ROOT 6.28, an exception will be thrown instead. If you. know what you are doing and want to restore the old clipping behavior,. you can do so with `RooRealVar::enableSilentClipping()`, but this is not. recommended. This change caught a logic error in `stressRooFit` where a background. fraction was randomized to be outside the `[0,1]` interval. That part of. the test was therefore removed (it was already removed from the. corresponding tutorial). Closes https://github.com/root-project/root/issues/6937.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10470
https://github.com/root-project/root/pull/10470:412,usability,behavi,behavior,412,"[RF] Error out when setting out-of-range variable value instead of clipping; In previous ROOT versions, if you set the value of a variable with. `RooRealVar::setVal()`, the value was silently clippend when it was. outside the variable range. This silent mutation of data can be. dangerous. With ROOT 6.28, an exception will be thrown instead. If you. know what you are doing and want to restore the old clipping behavior,. you can do so with `RooRealVar::enableSilentClipping()`, but this is not. recommended. This change caught a logic error in `stressRooFit` where a background. fraction was randomized to be outside the `[0,1]` interval. That part of. the test was therefore removed (it was already removed from the. corresponding tutorial). Closes https://github.com/root-project/root/issues/6937.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10470
https://github.com/root-project/root/pull/10470:537,usability,error,error,537,"[RF] Error out when setting out-of-range variable value instead of clipping; In previous ROOT versions, if you set the value of a variable with. `RooRealVar::setVal()`, the value was silently clippend when it was. outside the variable range. This silent mutation of data can be. dangerous. With ROOT 6.28, an exception will be thrown instead. If you. know what you are doing and want to restore the old clipping behavior,. you can do so with `RooRealVar::enableSilentClipping()`, but this is not. recommended. This change caught a logic error in `stressRooFit` where a background. fraction was randomized to be outside the `[0,1]` interval. That part of. the test was therefore removed (it was already removed from the. corresponding tutorial). Closes https://github.com/root-project/root/issues/6937.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10470
https://github.com/root-project/root/pull/10470:745,usability,Close,Closes,745,"[RF] Error out when setting out-of-range variable value instead of clipping; In previous ROOT versions, if you set the value of a variable with. `RooRealVar::setVal()`, the value was silently clippend when it was. outside the variable range. This silent mutation of data can be. dangerous. With ROOT 6.28, an exception will be thrown instead. If you. know what you are doing and want to restore the old clipping behavior,. you can do so with `RooRealVar::enableSilentClipping()`, but this is not. recommended. This change caught a logic error in `stressRooFit` where a background. fraction was randomized to be outside the `[0,1]` interval. That part of. the test was therefore removed (it was already removed from the. corresponding tutorial). Closes https://github.com/root-project/root/issues/6937.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10470
https://github.com/root-project/root/pull/10471:74,availability,Error,Error,74,Test the files existence before using them; Using TFile::Open produces an Error message catch by the jenkins rules declaring the doc failure. These changes test the file existence before using them. A warning (not an Error) is printed if not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10471
https://github.com/root-project/root/pull/10471:133,availability,failur,failure,133,Test the files existence before using them; Using TFile::Open produces an Error message catch by the jenkins rules declaring the doc failure. These changes test the file existence before using them. A warning (not an Error) is printed if not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10471
https://github.com/root-project/root/pull/10471:217,availability,Error,Error,217,Test the files existence before using them; Using TFile::Open produces an Error message catch by the jenkins rules declaring the doc failure. These changes test the file existence before using them. A warning (not an Error) is printed if not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10471
https://github.com/root-project/root/pull/10471:133,deployability,fail,failure,133,Test the files existence before using them; Using TFile::Open produces an Error message catch by the jenkins rules declaring the doc failure. These changes test the file existence before using them. A warning (not an Error) is printed if not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10471
https://github.com/root-project/root/pull/10471:80,integrability,messag,message,80,Test the files existence before using them; Using TFile::Open produces an Error message catch by the jenkins rules declaring the doc failure. These changes test the file existence before using them. A warning (not an Error) is printed if not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10471
https://github.com/root-project/root/pull/10471:80,interoperability,messag,message,80,Test the files existence before using them; Using TFile::Open produces an Error message catch by the jenkins rules declaring the doc failure. These changes test the file existence before using them. A warning (not an Error) is printed if not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10471
https://github.com/root-project/root/pull/10471:74,performance,Error,Error,74,Test the files existence before using them; Using TFile::Open produces an Error message catch by the jenkins rules declaring the doc failure. These changes test the file existence before using them. A warning (not an Error) is printed if not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10471
https://github.com/root-project/root/pull/10471:133,performance,failur,failure,133,Test the files existence before using them; Using TFile::Open produces an Error message catch by the jenkins rules declaring the doc failure. These changes test the file existence before using them. A warning (not an Error) is printed if not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10471
https://github.com/root-project/root/pull/10471:217,performance,Error,Error,217,Test the files existence before using them; Using TFile::Open produces an Error message catch by the jenkins rules declaring the doc failure. These changes test the file existence before using them. A warning (not an Error) is printed if not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10471
https://github.com/root-project/root/pull/10471:133,reliability,fail,failure,133,Test the files existence before using them; Using TFile::Open produces an Error message catch by the jenkins rules declaring the doc failure. These changes test the file existence before using them. A warning (not an Error) is printed if not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10471
https://github.com/root-project/root/pull/10471:0,safety,Test,Test,0,Test the files existence before using them; Using TFile::Open produces an Error message catch by the jenkins rules declaring the doc failure. These changes test the file existence before using them. A warning (not an Error) is printed if not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10471
https://github.com/root-project/root/pull/10471:74,safety,Error,Error,74,Test the files existence before using them; Using TFile::Open produces an Error message catch by the jenkins rules declaring the doc failure. These changes test the file existence before using them. A warning (not an Error) is printed if not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10471
https://github.com/root-project/root/pull/10471:156,safety,test,test,156,Test the files existence before using them; Using TFile::Open produces an Error message catch by the jenkins rules declaring the doc failure. These changes test the file existence before using them. A warning (not an Error) is printed if not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10471
https://github.com/root-project/root/pull/10471:217,safety,Error,Error,217,Test the files existence before using them; Using TFile::Open produces an Error message catch by the jenkins rules declaring the doc failure. These changes test the file existence before using them. A warning (not an Error) is printed if not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10471
https://github.com/root-project/root/pull/10471:0,testability,Test,Test,0,Test the files existence before using them; Using TFile::Open produces an Error message catch by the jenkins rules declaring the doc failure. These changes test the file existence before using them. A warning (not an Error) is printed if not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10471
https://github.com/root-project/root/pull/10471:156,testability,test,test,156,Test the files existence before using them; Using TFile::Open produces an Error message catch by the jenkins rules declaring the doc failure. These changes test the file existence before using them. A warning (not an Error) is printed if not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10471
https://github.com/root-project/root/pull/10471:74,usability,Error,Error,74,Test the files existence before using them; Using TFile::Open produces an Error message catch by the jenkins rules declaring the doc failure. These changes test the file existence before using them. A warning (not an Error) is printed if not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10471
https://github.com/root-project/root/pull/10471:217,usability,Error,Error,217,Test the files existence before using them; Using TFile::Open produces an Error message catch by the jenkins rules declaring the doc failure. These changes test the file existence before using them. A warning (not an Error) is printed if not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10471
https://github.com/root-project/root/issues/10472:906,availability,Operat,Operating,906,"Weightfield2 5.3 not work; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version 6.26/02. 2. Operating system Mac Big Sur apple m1. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->binary download. ### Additional context. <!--. create a microstrip simulation with:. <img width=""1440"" alt=""Schermata 2022-04-27 alle 16 55 24"" src=""https://user-images.githubusercontent.com/75098135/165547907-b77c9c26-b3ac-4ec6-809d-f0d2032e9c4e.png"">. --> creat with Weightfield2 5.2 or 5.3 . [bug weightfield53.txt](https://github.com/root-project/root/files/8573132/bug.weightfield53.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10472
https://github.com/root-project/root/issues/10472:1002,availability,down,download,1002,"Weightfield2 5.3 not work; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version 6.26/02. 2. Operating system Mac Big Sur apple m1. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->binary download. ### Additional context. <!--. create a microstrip simulation with:. <img width=""1440"" alt=""Schermata 2022-04-27 alle 16 55 24"" src=""https://user-images.githubusercontent.com/75098135/165547907-b77c9c26-b3ac-4ec6-809d-f0d2032e9c4e.png"">. --> creat with Weightfield2 5.2 or 5.3 . [bug weightfield53.txt](https://github.com/root-project/root/files/8573132/bug.weightfield53.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10472
https://github.com/root-project/root/issues/10472:1046,availability,down,download,1046,"Weightfield2 5.3 not work; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version 6.26/02. 2. Operating system Mac Big Sur apple m1. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->binary download. ### Additional context. <!--. create a microstrip simulation with:. <img width=""1440"" alt=""Schermata 2022-04-27 alle 16 55 24"" src=""https://user-images.githubusercontent.com/75098135/165547907-b77c9c26-b3ac-4ec6-809d-f0d2032e9c4e.png"">. --> creat with Weightfield2 5.2 or 5.3 . [bug weightfield53.txt](https://github.com/root-project/root/files/8573132/bug.weightfield53.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10472
https://github.com/root-project/root/issues/10472:819,deployability,build,build,819,"Weightfield2 5.3 not work; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version 6.26/02. 2. Operating system Mac Big Sur apple m1. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->binary download. ### Additional context. <!--. create a microstrip simulation with:. <img width=""1440"" alt=""Schermata 2022-04-27 alle 16 55 24"" src=""https://user-images.githubusercontent.com/75098135/165547907-b77c9c26-b3ac-4ec6-809d-f0d2032e9c4e.png"">. --> creat with Weightfield2 5.2 or 5.3 . [bug weightfield53.txt](https://github.com/root-project/root/files/8573132/bug.weightfield53.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10472
https://github.com/root-project/root/issues/10472:886,deployability,version,version,886,"Weightfield2 5.3 not work; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version 6.26/02. 2. Operating system Mac Big Sur apple m1. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->binary download. ### Additional context. <!--. create a microstrip simulation with:. <img width=""1440"" alt=""Schermata 2022-04-27 alle 16 55 24"" src=""https://user-images.githubusercontent.com/75098135/165547907-b77c9c26-b3ac-4ec6-809d-f0d2032e9c4e.png"">. --> creat with Weightfield2 5.2 or 5.3 . [bug weightfield53.txt](https://github.com/root-project/root/files/8573132/bug.weightfield53.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10472
https://github.com/root-project/root/issues/10472:984,deployability,instal,install,984,"Weightfield2 5.3 not work; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version 6.26/02. 2. Operating system Mac Big Sur apple m1. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->binary download. ### Additional context. <!--. create a microstrip simulation with:. <img width=""1440"" alt=""Schermata 2022-04-27 alle 16 55 24"" src=""https://user-images.githubusercontent.com/75098135/165547907-b77c9c26-b3ac-4ec6-809d-f0d2032e9c4e.png"">. --> creat with Weightfield2 5.2 or 5.3 . [bug weightfield53.txt](https://github.com/root-project/root/files/8573132/bug.weightfield53.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10472
https://github.com/root-project/root/issues/10472:886,integrability,version,version,886,"Weightfield2 5.3 not work; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version 6.26/02. 2. Operating system Mac Big Sur apple m1. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->binary download. ### Additional context. <!--. create a microstrip simulation with:. <img width=""1440"" alt=""Schermata 2022-04-27 alle 16 55 24"" src=""https://user-images.githubusercontent.com/75098135/165547907-b77c9c26-b3ac-4ec6-809d-f0d2032e9c4e.png"">. --> creat with Weightfield2 5.2 or 5.3 . [bug weightfield53.txt](https://github.com/root-project/root/files/8573132/bug.weightfield53.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10472
https://github.com/root-project/root/issues/10472:886,modifiability,version,version,886,"Weightfield2 5.3 not work; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version 6.26/02. 2. Operating system Mac Big Sur apple m1. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->binary download. ### Additional context. <!--. create a microstrip simulation with:. <img width=""1440"" alt=""Schermata 2022-04-27 alle 16 55 24"" src=""https://user-images.githubusercontent.com/75098135/165547907-b77c9c26-b3ac-4ec6-809d-f0d2032e9c4e.png"">. --> creat with Weightfield2 5.2 or 5.3 . [bug weightfield53.txt](https://github.com/root-project/root/files/8573132/bug.weightfield53.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10472
https://github.com/root-project/root/issues/10472:773,safety,input,input,773,"Weightfield2 5.3 not work; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version 6.26/02. 2. Operating system Mac Big Sur apple m1. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->binary download. ### Additional context. <!--. create a microstrip simulation with:. <img width=""1440"" alt=""Schermata 2022-04-27 alle 16 55 24"" src=""https://user-images.githubusercontent.com/75098135/165547907-b77c9c26-b3ac-4ec6-809d-f0d2032e9c4e.png"">. --> creat with Weightfield2 5.2 or 5.3 . [bug weightfield53.txt](https://github.com/root-project/root/files/8573132/bug.weightfield53.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10472
https://github.com/root-project/root/issues/10472:1071,testability,context,context,1071,"Weightfield2 5.3 not work; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version 6.26/02. 2. Operating system Mac Big Sur apple m1. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->binary download. ### Additional context. <!--. create a microstrip simulation with:. <img width=""1440"" alt=""Schermata 2022-04-27 alle 16 55 24"" src=""https://user-images.githubusercontent.com/75098135/165547907-b77c9c26-b3ac-4ec6-809d-f0d2032e9c4e.png"">. --> creat with Weightfield2 5.2 or 5.3 . [bug weightfield53.txt](https://github.com/root-project/root/files/8573132/bug.weightfield53.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10472
https://github.com/root-project/root/issues/10472:1106,testability,simul,simulation,1106,"Weightfield2 5.3 not work; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version 6.26/02. 2. Operating system Mac Big Sur apple m1. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->binary download. ### Additional context. <!--. create a microstrip simulation with:. <img width=""1440"" alt=""Schermata 2022-04-27 alle 16 55 24"" src=""https://user-images.githubusercontent.com/75098135/165547907-b77c9c26-b3ac-4ec6-809d-f0d2032e9c4e.png"">. --> creat with Weightfield2 5.2 or 5.3 . [bug weightfield53.txt](https://github.com/root-project/root/files/8573132/bug.weightfield53.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10472
https://github.com/root-project/root/issues/10472:417,usability,clear,clear,417,"Weightfield2 5.3 not work; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version 6.26/02. 2. Operating system Mac Big Sur apple m1. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->binary download. ### Additional context. <!--. create a microstrip simulation with:. <img width=""1440"" alt=""Schermata 2022-04-27 alle 16 55 24"" src=""https://user-images.githubusercontent.com/75098135/165547907-b77c9c26-b3ac-4ec6-809d-f0d2032e9c4e.png"">. --> creat with Weightfield2 5.2 or 5.3 . [bug weightfield53.txt](https://github.com/root-project/root/files/8573132/bug.weightfield53.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10472
https://github.com/root-project/root/issues/10472:465,usability,behavi,behavior,465,"Weightfield2 5.3 not work; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version 6.26/02. 2. Operating system Mac Big Sur apple m1. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->binary download. ### Additional context. <!--. create a microstrip simulation with:. <img width=""1440"" alt=""Schermata 2022-04-27 alle 16 55 24"" src=""https://user-images.githubusercontent.com/75098135/165547907-b77c9c26-b3ac-4ec6-809d-f0d2032e9c4e.png"">. --> creat with Weightfield2 5.2 or 5.3 . [bug weightfield53.txt](https://github.com/root-project/root/files/8573132/bug.weightfield53.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10472
https://github.com/root-project/root/issues/10472:496,usability,behavi,behavior,496,"Weightfield2 5.3 not work; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version 6.26/02. 2. Operating system Mac Big Sur apple m1. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->binary download. ### Additional context. <!--. create a microstrip simulation with:. <img width=""1440"" alt=""Schermata 2022-04-27 alle 16 55 24"" src=""https://user-images.githubusercontent.com/75098135/165547907-b77c9c26-b3ac-4ec6-809d-f0d2032e9c4e.png"">. --> creat with Weightfield2 5.2 or 5.3 . [bug weightfield53.txt](https://github.com/root-project/root/files/8573132/bug.weightfield53.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10472
https://github.com/root-project/root/issues/10472:514,usability,clear,clear,514,"Weightfield2 5.3 not work; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version 6.26/02. 2. Operating system Mac Big Sur apple m1. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->binary download. ### Additional context. <!--. create a microstrip simulation with:. <img width=""1440"" alt=""Schermata 2022-04-27 alle 16 55 24"" src=""https://user-images.githubusercontent.com/75098135/165547907-b77c9c26-b3ac-4ec6-809d-f0d2032e9c4e.png"">. --> creat with Weightfield2 5.2 or 5.3 . [bug weightfield53.txt](https://github.com/root-project/root/files/8573132/bug.weightfield53.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10472
https://github.com/root-project/root/issues/10472:628,usability,behavi,behavior,628,"Weightfield2 5.3 not work; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version 6.26/02. 2. Operating system Mac Big Sur apple m1. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->binary download. ### Additional context. <!--. create a microstrip simulation with:. <img width=""1440"" alt=""Schermata 2022-04-27 alle 16 55 24"" src=""https://user-images.githubusercontent.com/75098135/165547907-b77c9c26-b3ac-4ec6-809d-f0d2032e9c4e.png"">. --> creat with Weightfield2 5.2 or 5.3 . [bug weightfield53.txt](https://github.com/root-project/root/files/8573132/bug.weightfield53.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10472
https://github.com/root-project/root/issues/10472:773,usability,input,input,773,"Weightfield2 5.3 not work; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version 6.26/02. 2. Operating system Mac Big Sur apple m1. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->binary download. ### Additional context. <!--. create a microstrip simulation with:. <img width=""1440"" alt=""Schermata 2022-04-27 alle 16 55 24"" src=""https://user-images.githubusercontent.com/75098135/165547907-b77c9c26-b3ac-4ec6-809d-f0d2032e9c4e.png"">. --> creat with Weightfield2 5.2 or 5.3 . [bug weightfield53.txt](https://github.com/root-project/root/files/8573132/bug.weightfield53.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10472
https://github.com/root-project/root/issues/10472:1196,usability,user,user-images,1196,"Weightfield2 5.3 not work; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version 6.26/02. 2. Operating system Mac Big Sur apple m1. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->binary download. ### Additional context. <!--. create a microstrip simulation with:. <img width=""1440"" alt=""Schermata 2022-04-27 alle 16 55 24"" src=""https://user-images.githubusercontent.com/75098135/165547907-b77c9c26-b3ac-4ec6-809d-f0d2032e9c4e.png"">. --> creat with Weightfield2 5.2 or 5.3 . [bug weightfield53.txt](https://github.com/root-project/root/files/8573132/bug.weightfield53.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10472
https://github.com/root-project/root/issues/10473:2303,availability,Operat,Operating,2303,"ith a category, and a RooSimultaneous pdf. The sim pdf does not contain a pdf for each value of the category, because some values are to be ignored in that stage of the fit. . In ROOT 6.26 this segfaults, either in prepareSimultaneousModelForBatchMode (when batchmode is on) or in RooAbsData::split (when batchmode is off). The issue in both functions is that they iterate over the values of the index category, and assume that each value has a corresponding pdf inside the RooSimultaneous. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No crash, the sim pdf fits the pdfs for the index it contains and ignores the rest. This used to work in ROOT 6.24 and earlier. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. void test_roosimcrash() {. RooRealVar x(""x"", """", 0, 1);. RooRealVar rnd(""rnd"", """", 0, 1);. RooThresholdCategory catThr(""cat"", """", rnd, ""v2"", 2);. catThr.addThreshold(1./3, ""v0"", 0);. catThr.addThreshold(2./3, ""v1"", 1);. . RooRealVar m(""m"", """", 0.5, 0, 1);. RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));. RooUniform rndPdf(""rndPdf"", """", rnd);. RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));. . auto ds = pdf.generate(RooArgSet(x, rnd), RooFit::Name(""ds""), RooFit::NumEvents(100));. auto cat = dynamic_cast<RooCategory*>(ds->addColumn(catThr));. . RooSimultaneous sim(""sim"", """", *cat);. sim.addPdf(g, ""v0"");. sim.addPdf(g, ""v1"");. . sim.fitTo(*ds, RooFit::Save(true))->Print(""V"");. }. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Centos7. Broken in 6.26 from LCG dev4. Works in 6.24.06 from LCG_101. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10473
https://github.com/root-project/root/issues/10473:2378,availability,down,download,2378,"ith a category, and a RooSimultaneous pdf. The sim pdf does not contain a pdf for each value of the category, because some values are to be ignored in that stage of the fit. . In ROOT 6.26 this segfaults, either in prepareSimultaneousModelForBatchMode (when batchmode is on) or in RooAbsData::split (when batchmode is off). The issue in both functions is that they iterate over the values of the index category, and assume that each value has a corresponding pdf inside the RooSimultaneous. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No crash, the sim pdf fits the pdfs for the index it contains and ignores the rest. This used to work in ROOT 6.24 and earlier. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. void test_roosimcrash() {. RooRealVar x(""x"", """", 0, 1);. RooRealVar rnd(""rnd"", """", 0, 1);. RooThresholdCategory catThr(""cat"", """", rnd, ""v2"", 2);. catThr.addThreshold(1./3, ""v0"", 0);. catThr.addThreshold(2./3, ""v1"", 1);. . RooRealVar m(""m"", """", 0.5, 0, 1);. RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));. RooUniform rndPdf(""rndPdf"", """", rnd);. RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));. . auto ds = pdf.generate(RooArgSet(x, rnd), RooFit::Name(""ds""), RooFit::NumEvents(100));. auto cat = dynamic_cast<RooCategory*>(ds->addColumn(catThr));. . RooSimultaneous sim(""sim"", """", *cat);. sim.addPdf(g, ""v0"");. sim.addPdf(g, ""v1"");. . sim.fitTo(*ds, RooFit::Save(true))->Print(""V"");. }. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Centos7. Broken in 6.26 from LCG dev4. Works in 6.24.06 from LCG_101. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10473
https://github.com/root-project/root/issues/10473:41,deployability,contain,contain,41,"[RF] Crash when RooSimultaneous does not contain a pdf for each value of the index category; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I have a dataset with a category, and a RooSimultaneous pdf. The sim pdf does not contain a pdf for each value of the category, because some values are to be ignored in that stage of the fit. . In ROOT 6.26 this segfaults, either in prepareSimultaneousModelForBatchMode (when batchmode is on) or in RooAbsData::split (when batchmode is off). The issue in both functions is that they iterate over the values of the index category, and assume that each value has a corresponding pdf inside the RooSimultaneous. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No crash, the sim pdf fits the pdfs for the index it contains and ignores the rest. This used to work in ROOT 6.24 and earlier. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. void test_roosimcrash() {. RooRealVar x(""x"", """", 0, 1);. RooRealVar rnd(""rnd"", """", 0, 1);. RooThresholdCategory catThr(""cat"", """", rnd, ""v2"", 2);. catThr.addThreshold(1./3, ""v0"", 0);. catThr.addThreshold(2./3, ""v1"", 1);. . RooRealVar m(""m"", """", 0.5, 0, 1);. RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));. RooUniform rndPdf(""rndPdf"", """", rnd);. RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));. . auto ds = pdf.generate(RooArg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10473
https://github.com/root-project/root/issues/10473:631,deployability,contain,contain,631,"[RF] Crash when RooSimultaneous does not contain a pdf for each value of the index category; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I have a dataset with a category, and a RooSimultaneous pdf. The sim pdf does not contain a pdf for each value of the category, because some values are to be ignored in that stage of the fit. . In ROOT 6.26 this segfaults, either in prepareSimultaneousModelForBatchMode (when batchmode is on) or in RooAbsData::split (when batchmode is off). The issue in both functions is that they iterate over the values of the index category, and assume that each value has a corresponding pdf inside the RooSimultaneous. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No crash, the sim pdf fits the pdfs for the index it contains and ignores the rest. This used to work in ROOT 6.24 and earlier. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. void test_roosimcrash() {. RooRealVar x(""x"", """", 0, 1);. RooRealVar rnd(""rnd"", """", 0, 1);. RooThresholdCategory catThr(""cat"", """", rnd, ""v2"", 2);. catThr.addThreshold(1./3, ""v0"", 0);. catThr.addThreshold(2./3, ""v1"", 1);. . RooRealVar m(""m"", """", 0.5, 0, 1);. RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));. RooUniform rndPdf(""rndPdf"", """", rnd);. RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));. . auto ds = pdf.generate(RooArg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10473
https://github.com/root-project/root/issues/10473:723,deployability,stage,stage,723,"[RF] Crash when RooSimultaneous does not contain a pdf for each value of the index category; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I have a dataset with a category, and a RooSimultaneous pdf. The sim pdf does not contain a pdf for each value of the category, because some values are to be ignored in that stage of the fit. . In ROOT 6.26 this segfaults, either in prepareSimultaneousModelForBatchMode (when batchmode is on) or in RooAbsData::split (when batchmode is off). The issue in both functions is that they iterate over the values of the index category, and assume that each value has a corresponding pdf inside the RooSimultaneous. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No crash, the sim pdf fits the pdfs for the index it contains and ignores the rest. This used to work in ROOT 6.24 and earlier. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. void test_roosimcrash() {. RooRealVar x(""x"", """", 0, 1);. RooRealVar rnd(""rnd"", """", 0, 1);. RooThresholdCategory catThr(""cat"", """", rnd, ""v2"", 2);. catThr.addThreshold(1./3, ""v0"", 0);. catThr.addThreshold(2./3, ""v1"", 1);. . RooRealVar m(""m"", """", 0.5, 0, 1);. RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));. RooUniform rndPdf(""rndPdf"", """", rnd);. RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));. . auto ds = pdf.generate(RooArg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10473
https://github.com/root-project/root/issues/10473:1209,deployability,contain,contains,1209,"e). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I have a dataset with a category, and a RooSimultaneous pdf. The sim pdf does not contain a pdf for each value of the category, because some values are to be ignored in that stage of the fit. . In ROOT 6.26 this segfaults, either in prepareSimultaneousModelForBatchMode (when batchmode is on) or in RooAbsData::split (when batchmode is off). The issue in both functions is that they iterate over the values of the index category, and assume that each value has a corresponding pdf inside the RooSimultaneous. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No crash, the sim pdf fits the pdfs for the index it contains and ignores the rest. This used to work in ROOT 6.24 and earlier. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. void test_roosimcrash() {. RooRealVar x(""x"", """", 0, 1);. RooRealVar rnd(""rnd"", """", 0, 1);. RooThresholdCategory catThr(""cat"", """", rnd, ""v2"", 2);. catThr.addThreshold(1./3, ""v0"", 0);. catThr.addThreshold(2./3, ""v1"", 1);. . RooRealVar m(""m"", """", 0.5, 0, 1);. RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));. RooUniform rndPdf(""rndPdf"", """", rnd);. RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));. . auto ds = pdf.generate(RooArgSet(x, rnd), RooFit::Name(""ds""), RooFit::NumEvents(100));. auto cat = dynamic_cast<RooCategory*>(ds->addColumn(catThr));. . RooSimultaneous sim(""sim"", """", *cat);. sim.addPdf(g, ""v0"");. sim.addPdf(g, ""v1"");. . sim.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10473
https://github.com/root-project/root/issues/10473:1522,deployability,build,build,1522,"wrong behavior is. -->. I have a dataset with a category, and a RooSimultaneous pdf. The sim pdf does not contain a pdf for each value of the category, because some values are to be ignored in that stage of the fit. . In ROOT 6.26 this segfaults, either in prepareSimultaneousModelForBatchMode (when batchmode is on) or in RooAbsData::split (when batchmode is off). The issue in both functions is that they iterate over the values of the index category, and assume that each value has a corresponding pdf inside the RooSimultaneous. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No crash, the sim pdf fits the pdfs for the index it contains and ignores the rest. This used to work in ROOT 6.24 and earlier. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. void test_roosimcrash() {. RooRealVar x(""x"", """", 0, 1);. RooRealVar rnd(""rnd"", """", 0, 1);. RooThresholdCategory catThr(""cat"", """", rnd, ""v2"", 2);. catThr.addThreshold(1./3, ""v0"", 0);. catThr.addThreshold(2./3, ""v1"", 1);. . RooRealVar m(""m"", """", 0.5, 0, 1);. RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));. RooUniform rndPdf(""rndPdf"", """", rnd);. RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));. . auto ds = pdf.generate(RooArgSet(x, rnd), RooFit::Name(""ds""), RooFit::NumEvents(100));. auto cat = dynamic_cast<RooCategory*>(ds->addColumn(catThr));. . RooSimultaneous sim(""sim"", """", *cat);. sim.addPdf(g, ""v0"");. sim.addPdf(g, ""v1"");. . sim.fitTo(*ds, RooFit::Save(true))->Print(""V"");. }. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Centos7. Broken in 6.26 from LCG dev4. Works in 6.24.06 from LCG_101. ### Additional context. <!--. Add any ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10473
https://github.com/root-project/root/issues/10473:2291,deployability,version,version,2291,"ith a category, and a RooSimultaneous pdf. The sim pdf does not contain a pdf for each value of the category, because some values are to be ignored in that stage of the fit. . In ROOT 6.26 this segfaults, either in prepareSimultaneousModelForBatchMode (when batchmode is on) or in RooAbsData::split (when batchmode is off). The issue in both functions is that they iterate over the values of the index category, and assume that each value has a corresponding pdf inside the RooSimultaneous. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No crash, the sim pdf fits the pdfs for the index it contains and ignores the rest. This used to work in ROOT 6.24 and earlier. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. void test_roosimcrash() {. RooRealVar x(""x"", """", 0, 1);. RooRealVar rnd(""rnd"", """", 0, 1);. RooThresholdCategory catThr(""cat"", """", rnd, ""v2"", 2);. catThr.addThreshold(1./3, ""v0"", 0);. catThr.addThreshold(2./3, ""v1"", 1);. . RooRealVar m(""m"", """", 0.5, 0, 1);. RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));. RooUniform rndPdf(""rndPdf"", """", rnd);. RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));. . auto ds = pdf.generate(RooArgSet(x, rnd), RooFit::Name(""ds""), RooFit::NumEvents(100));. auto cat = dynamic_cast<RooCategory*>(ds->addColumn(catThr));. . RooSimultaneous sim(""sim"", """", *cat);. sim.addPdf(g, ""v0"");. sim.addPdf(g, ""v1"");. . sim.fitTo(*ds, RooFit::Save(true))->Print(""V"");. }. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Centos7. Broken in 6.26 from LCG dev4. Works in 6.24.06 from LCG_101. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10473
https://github.com/root-project/root/issues/10473:2360,deployability,instal,install,2360,"ith a category, and a RooSimultaneous pdf. The sim pdf does not contain a pdf for each value of the category, because some values are to be ignored in that stage of the fit. . In ROOT 6.26 this segfaults, either in prepareSimultaneousModelForBatchMode (when batchmode is on) or in RooAbsData::split (when batchmode is off). The issue in both functions is that they iterate over the values of the index category, and assume that each value has a corresponding pdf inside the RooSimultaneous. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No crash, the sim pdf fits the pdfs for the index it contains and ignores the rest. This used to work in ROOT 6.24 and earlier. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. void test_roosimcrash() {. RooRealVar x(""x"", """", 0, 1);. RooRealVar rnd(""rnd"", """", 0, 1);. RooThresholdCategory catThr(""cat"", """", rnd, ""v2"", 2);. catThr.addThreshold(1./3, ""v0"", 0);. catThr.addThreshold(2./3, ""v1"", 1);. . RooRealVar m(""m"", """", 0.5, 0, 1);. RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));. RooUniform rndPdf(""rndPdf"", """", rnd);. RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));. . auto ds = pdf.generate(RooArgSet(x, rnd), RooFit::Name(""ds""), RooFit::NumEvents(100));. auto cat = dynamic_cast<RooCategory*>(ds->addColumn(catThr));. . RooSimultaneous sim(""sim"", """", *cat);. sim.addPdf(g, ""v0"");. sim.addPdf(g, ""v1"");. . sim.fitTo(*ds, RooFit::Save(true))->Print(""V"");. }. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Centos7. Broken in 6.26 from LCG dev4. Works in 6.24.06 from LCG_101. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10473
https://github.com/root-project/root/issues/10473:825,integrability,batch,batchmode,825,"[RF] Crash when RooSimultaneous does not contain a pdf for each value of the index category; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I have a dataset with a category, and a RooSimultaneous pdf. The sim pdf does not contain a pdf for each value of the category, because some values are to be ignored in that stage of the fit. . In ROOT 6.26 this segfaults, either in prepareSimultaneousModelForBatchMode (when batchmode is on) or in RooAbsData::split (when batchmode is off). The issue in both functions is that they iterate over the values of the index category, and assume that each value has a corresponding pdf inside the RooSimultaneous. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No crash, the sim pdf fits the pdfs for the index it contains and ignores the rest. This used to work in ROOT 6.24 and earlier. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. void test_roosimcrash() {. RooRealVar x(""x"", """", 0, 1);. RooRealVar rnd(""rnd"", """", 0, 1);. RooThresholdCategory catThr(""cat"", """", rnd, ""v2"", 2);. catThr.addThreshold(1./3, ""v0"", 0);. catThr.addThreshold(2./3, ""v1"", 1);. . RooRealVar m(""m"", """", 0.5, 0, 1);. RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));. RooUniform rndPdf(""rndPdf"", """", rnd);. RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));. . auto ds = pdf.generate(RooArg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10473
https://github.com/root-project/root/issues/10473:872,integrability,batch,batchmode,872,"[RF] Crash when RooSimultaneous does not contain a pdf for each value of the index category; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I have a dataset with a category, and a RooSimultaneous pdf. The sim pdf does not contain a pdf for each value of the category, because some values are to be ignored in that stage of the fit. . In ROOT 6.26 this segfaults, either in prepareSimultaneousModelForBatchMode (when batchmode is on) or in RooAbsData::split (when batchmode is off). The issue in both functions is that they iterate over the values of the index category, and assume that each value has a corresponding pdf inside the RooSimultaneous. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No crash, the sim pdf fits the pdfs for the index it contains and ignores the rest. This used to work in ROOT 6.24 and earlier. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. void test_roosimcrash() {. RooRealVar x(""x"", """", 0, 1);. RooRealVar rnd(""rnd"", """", 0, 1);. RooThresholdCategory catThr(""cat"", """", rnd, ""v2"", 2);. catThr.addThreshold(1./3, ""v0"", 0);. catThr.addThreshold(2./3, ""v1"", 1);. . RooRealVar m(""m"", """", 0.5, 0, 1);. RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));. RooUniform rndPdf(""rndPdf"", """", rnd);. RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));. . auto ds = pdf.generate(RooArg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10473
https://github.com/root-project/root/issues/10473:2291,integrability,version,version,2291,"ith a category, and a RooSimultaneous pdf. The sim pdf does not contain a pdf for each value of the category, because some values are to be ignored in that stage of the fit. . In ROOT 6.26 this segfaults, either in prepareSimultaneousModelForBatchMode (when batchmode is on) or in RooAbsData::split (when batchmode is off). The issue in both functions is that they iterate over the values of the index category, and assume that each value has a corresponding pdf inside the RooSimultaneous. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No crash, the sim pdf fits the pdfs for the index it contains and ignores the rest. This used to work in ROOT 6.24 and earlier. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. void test_roosimcrash() {. RooRealVar x(""x"", """", 0, 1);. RooRealVar rnd(""rnd"", """", 0, 1);. RooThresholdCategory catThr(""cat"", """", rnd, ""v2"", 2);. catThr.addThreshold(1./3, ""v0"", 0);. catThr.addThreshold(2./3, ""v1"", 1);. . RooRealVar m(""m"", """", 0.5, 0, 1);. RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));. RooUniform rndPdf(""rndPdf"", """", rnd);. RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));. . auto ds = pdf.generate(RooArgSet(x, rnd), RooFit::Name(""ds""), RooFit::NumEvents(100));. auto cat = dynamic_cast<RooCategory*>(ds->addColumn(catThr));. . RooSimultaneous sim(""sim"", """", *cat);. sim.addPdf(g, ""v0"");. sim.addPdf(g, ""v1"");. . sim.fitTo(*ds, RooFit::Save(true))->Print(""V"");. }. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Centos7. Broken in 6.26 from LCG dev4. Works in 6.24.06 from LCG_101. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10473
https://github.com/root-project/root/issues/10473:2291,modifiability,version,version,2291,"ith a category, and a RooSimultaneous pdf. The sim pdf does not contain a pdf for each value of the category, because some values are to be ignored in that stage of the fit. . In ROOT 6.26 this segfaults, either in prepareSimultaneousModelForBatchMode (when batchmode is on) or in RooAbsData::split (when batchmode is off). The issue in both functions is that they iterate over the values of the index category, and assume that each value has a corresponding pdf inside the RooSimultaneous. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No crash, the sim pdf fits the pdfs for the index it contains and ignores the rest. This used to work in ROOT 6.24 and earlier. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. void test_roosimcrash() {. RooRealVar x(""x"", """", 0, 1);. RooRealVar rnd(""rnd"", """", 0, 1);. RooThresholdCategory catThr(""cat"", """", rnd, ""v2"", 2);. catThr.addThreshold(1./3, ""v0"", 0);. catThr.addThreshold(2./3, ""v1"", 1);. . RooRealVar m(""m"", """", 0.5, 0, 1);. RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));. RooUniform rndPdf(""rndPdf"", """", rnd);. RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));. . auto ds = pdf.generate(RooArgSet(x, rnd), RooFit::Name(""ds""), RooFit::NumEvents(100));. auto cat = dynamic_cast<RooCategory*>(ds->addColumn(catThr));. . RooSimultaneous sim(""sim"", """", *cat);. sim.addPdf(g, ""v0"");. sim.addPdf(g, ""v1"");. . sim.fitTo(*ds, RooFit::Save(true))->Print(""V"");. }. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Centos7. Broken in 6.26 from LCG dev4. Works in 6.24.06 from LCG_101. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10473
https://github.com/root-project/root/issues/10473:825,performance,batch,batchmode,825,"[RF] Crash when RooSimultaneous does not contain a pdf for each value of the index category; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I have a dataset with a category, and a RooSimultaneous pdf. The sim pdf does not contain a pdf for each value of the category, because some values are to be ignored in that stage of the fit. . In ROOT 6.26 this segfaults, either in prepareSimultaneousModelForBatchMode (when batchmode is on) or in RooAbsData::split (when batchmode is off). The issue in both functions is that they iterate over the values of the index category, and assume that each value has a corresponding pdf inside the RooSimultaneous. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No crash, the sim pdf fits the pdfs for the index it contains and ignores the rest. This used to work in ROOT 6.24 and earlier. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. void test_roosimcrash() {. RooRealVar x(""x"", """", 0, 1);. RooRealVar rnd(""rnd"", """", 0, 1);. RooThresholdCategory catThr(""cat"", """", rnd, ""v2"", 2);. catThr.addThreshold(1./3, ""v0"", 0);. catThr.addThreshold(2./3, ""v1"", 1);. . RooRealVar m(""m"", """", 0.5, 0, 1);. RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));. RooUniform rndPdf(""rndPdf"", """", rnd);. RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));. . auto ds = pdf.generate(RooArg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10473
https://github.com/root-project/root/issues/10473:872,performance,batch,batchmode,872,"[RF] Crash when RooSimultaneous does not contain a pdf for each value of the index category; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I have a dataset with a category, and a RooSimultaneous pdf. The sim pdf does not contain a pdf for each value of the category, because some values are to be ignored in that stage of the fit. . In ROOT 6.26 this segfaults, either in prepareSimultaneousModelForBatchMode (when batchmode is on) or in RooAbsData::split (when batchmode is off). The issue in both functions is that they iterate over the values of the index category, and assume that each value has a corresponding pdf inside the RooSimultaneous. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No crash, the sim pdf fits the pdfs for the index it contains and ignores the rest. This used to work in ROOT 6.24 and earlier. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. void test_roosimcrash() {. RooRealVar x(""x"", """", 0, 1);. RooRealVar rnd(""rnd"", """", 0, 1);. RooThresholdCategory catThr(""cat"", """", rnd, ""v2"", 2);. catThr.addThreshold(1./3, ""v0"", 0);. catThr.addThreshold(2./3, ""v1"", 1);. . RooRealVar m(""m"", """", 0.5, 0, 1);. RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));. RooUniform rndPdf(""rndPdf"", """", rnd);. RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));. . auto ds = pdf.generate(RooArg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10473
https://github.com/root-project/root/issues/10473:32,reliability,doe,does,32,"[RF] Crash when RooSimultaneous does not contain a pdf for each value of the index category; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I have a dataset with a category, and a RooSimultaneous pdf. The sim pdf does not contain a pdf for each value of the category, because some values are to be ignored in that stage of the fit. . In ROOT 6.26 this segfaults, either in prepareSimultaneousModelForBatchMode (when batchmode is on) or in RooAbsData::split (when batchmode is off). The issue in both functions is that they iterate over the values of the index category, and assume that each value has a corresponding pdf inside the RooSimultaneous. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No crash, the sim pdf fits the pdfs for the index it contains and ignores the rest. This used to work in ROOT 6.24 and earlier. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. void test_roosimcrash() {. RooRealVar x(""x"", """", 0, 1);. RooRealVar rnd(""rnd"", """", 0, 1);. RooThresholdCategory catThr(""cat"", """", rnd, ""v2"", 2);. catThr.addThreshold(1./3, ""v0"", 0);. catThr.addThreshold(2./3, ""v1"", 1);. . RooRealVar m(""m"", """", 0.5, 0, 1);. RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));. RooUniform rndPdf(""rndPdf"", """", rnd);. RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));. . auto ds = pdf.generate(RooArg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10473
https://github.com/root-project/root/issues/10473:622,reliability,doe,does,622,"[RF] Crash when RooSimultaneous does not contain a pdf for each value of the index category; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I have a dataset with a category, and a RooSimultaneous pdf. The sim pdf does not contain a pdf for each value of the category, because some values are to be ignored in that stage of the fit. . In ROOT 6.26 this segfaults, either in prepareSimultaneousModelForBatchMode (when batchmode is on) or in RooAbsData::split (when batchmode is off). The issue in both functions is that they iterate over the values of the index category, and assume that each value has a corresponding pdf inside the RooSimultaneous. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No crash, the sim pdf fits the pdfs for the index it contains and ignores the rest. This used to work in ROOT 6.24 and earlier. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. void test_roosimcrash() {. RooRealVar x(""x"", """", 0, 1);. RooRealVar rnd(""rnd"", """", 0, 1);. RooThresholdCategory catThr(""cat"", """", rnd, ""v2"", 2);. catThr.addThreshold(1./3, ""v0"", 0);. catThr.addThreshold(2./3, ""v1"", 1);. . RooRealVar m(""m"", """", 0.5, 0, 1);. RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));. RooUniform rndPdf(""rndPdf"", """", rnd);. RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));. . auto ds = pdf.generate(RooArg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10473
https://github.com/root-project/root/issues/10473:1476,safety,input,input,1476,". A clear and concise description of what the wrong behavior is. -->. I have a dataset with a category, and a RooSimultaneous pdf. The sim pdf does not contain a pdf for each value of the category, because some values are to be ignored in that stage of the fit. . In ROOT 6.26 this segfaults, either in prepareSimultaneousModelForBatchMode (when batchmode is on) or in RooAbsData::split (when batchmode is off). The issue in both functions is that they iterate over the values of the index category, and assume that each value has a corresponding pdf inside the RooSimultaneous. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No crash, the sim pdf fits the pdfs for the index it contains and ignores the rest. This used to work in ROOT 6.24 and earlier. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. void test_roosimcrash() {. RooRealVar x(""x"", """", 0, 1);. RooRealVar rnd(""rnd"", """", 0, 1);. RooThresholdCategory catThr(""cat"", """", rnd, ""v2"", 2);. catThr.addThreshold(1./3, ""v0"", 0);. catThr.addThreshold(2./3, ""v1"", 1);. . RooRealVar m(""m"", """", 0.5, 0, 1);. RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));. RooUniform rndPdf(""rndPdf"", """", rnd);. RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));. . auto ds = pdf.generate(RooArgSet(x, rnd), RooFit::Name(""ds""), RooFit::NumEvents(100));. auto cat = dynamic_cast<RooCategory*>(ds->addColumn(catThr));. . RooSimultaneous sim(""sim"", """", *cat);. sim.addPdf(g, ""v0"");. sim.addPdf(g, ""v1"");. . sim.fitTo(*ds, RooFit::Save(true))->Print(""V"");. }. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Centos7. Broken in 6.26 from LCG dev4. Works in 6.24.06 from L",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10473
https://github.com/root-project/root/issues/10473:2502,testability,context,context,2502,"ith a category, and a RooSimultaneous pdf. The sim pdf does not contain a pdf for each value of the category, because some values are to be ignored in that stage of the fit. . In ROOT 6.26 this segfaults, either in prepareSimultaneousModelForBatchMode (when batchmode is on) or in RooAbsData::split (when batchmode is off). The issue in both functions is that they iterate over the values of the index category, and assume that each value has a corresponding pdf inside the RooSimultaneous. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No crash, the sim pdf fits the pdfs for the index it contains and ignores the rest. This used to work in ROOT 6.24 and earlier. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. void test_roosimcrash() {. RooRealVar x(""x"", """", 0, 1);. RooRealVar rnd(""rnd"", """", 0, 1);. RooThresholdCategory catThr(""cat"", """", rnd, ""v2"", 2);. catThr.addThreshold(1./3, ""v0"", 0);. catThr.addThreshold(2./3, ""v1"", 1);. . RooRealVar m(""m"", """", 0.5, 0, 1);. RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));. RooUniform rndPdf(""rndPdf"", """", rnd);. RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));. . auto ds = pdf.generate(RooArgSet(x, rnd), RooFit::Name(""ds""), RooFit::NumEvents(100));. auto cat = dynamic_cast<RooCategory*>(ds->addColumn(catThr));. . RooSimultaneous sim(""sim"", """", *cat);. sim.addPdf(g, ""v0"");. sim.addPdf(g, ""v1"");. . sim.fitTo(*ds, RooFit::Save(true))->Print(""V"");. }. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Centos7. Broken in 6.26 from LCG dev4. Works in 6.24.06 from LCG_101. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10473
https://github.com/root-project/root/issues/10473:2531,testability,context,context,2531,"ith a category, and a RooSimultaneous pdf. The sim pdf does not contain a pdf for each value of the category, because some values are to be ignored in that stage of the fit. . In ROOT 6.26 this segfaults, either in prepareSimultaneousModelForBatchMode (when batchmode is on) or in RooAbsData::split (when batchmode is off). The issue in both functions is that they iterate over the values of the index category, and assume that each value has a corresponding pdf inside the RooSimultaneous. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No crash, the sim pdf fits the pdfs for the index it contains and ignores the rest. This used to work in ROOT 6.24 and earlier. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. void test_roosimcrash() {. RooRealVar x(""x"", """", 0, 1);. RooRealVar rnd(""rnd"", """", 0, 1);. RooThresholdCategory catThr(""cat"", """", rnd, ""v2"", 2);. catThr.addThreshold(1./3, ""v0"", 0);. catThr.addThreshold(2./3, ""v1"", 1);. . RooRealVar m(""m"", """", 0.5, 0, 1);. RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));. RooUniform rndPdf(""rndPdf"", """", rnd);. RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));. . auto ds = pdf.generate(RooArgSet(x, rnd), RooFit::Name(""ds""), RooFit::NumEvents(100));. auto cat = dynamic_cast<RooCategory*>(ds->addColumn(catThr));. . RooSimultaneous sim(""sim"", """", *cat);. sim.addPdf(g, ""v0"");. sim.addPdf(g, ""v1"");. . sim.fitTo(*ds, RooFit::Save(true))->Print(""V"");. }. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Centos7. Broken in 6.26 from LCG dev4. Works in 6.24.06 from LCG_101. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10473
https://github.com/root-project/root/issues/10473:483,usability,clear,clear,483,"[RF] Crash when RooSimultaneous does not contain a pdf for each value of the index category; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I have a dataset with a category, and a RooSimultaneous pdf. The sim pdf does not contain a pdf for each value of the category, because some values are to be ignored in that stage of the fit. . In ROOT 6.26 this segfaults, either in prepareSimultaneousModelForBatchMode (when batchmode is on) or in RooAbsData::split (when batchmode is off). The issue in both functions is that they iterate over the values of the index category, and assume that each value has a corresponding pdf inside the RooSimultaneous. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No crash, the sim pdf fits the pdfs for the index it contains and ignores the rest. This used to work in ROOT 6.24 and earlier. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. void test_roosimcrash() {. RooRealVar x(""x"", """", 0, 1);. RooRealVar rnd(""rnd"", """", 0, 1);. RooThresholdCategory catThr(""cat"", """", rnd, ""v2"", 2);. catThr.addThreshold(1./3, ""v0"", 0);. catThr.addThreshold(2./3, ""v1"", 1);. . RooRealVar m(""m"", """", 0.5, 0, 1);. RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));. RooUniform rndPdf(""rndPdf"", """", rnd);. RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));. . auto ds = pdf.generate(RooArg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10473
https://github.com/root-project/root/issues/10473:531,usability,behavi,behavior,531,"[RF] Crash when RooSimultaneous does not contain a pdf for each value of the index category; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I have a dataset with a category, and a RooSimultaneous pdf. The sim pdf does not contain a pdf for each value of the category, because some values are to be ignored in that stage of the fit. . In ROOT 6.26 this segfaults, either in prepareSimultaneousModelForBatchMode (when batchmode is on) or in RooAbsData::split (when batchmode is off). The issue in both functions is that they iterate over the values of the index category, and assume that each value has a corresponding pdf inside the RooSimultaneous. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No crash, the sim pdf fits the pdfs for the index it contains and ignores the rest. This used to work in ROOT 6.24 and earlier. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. void test_roosimcrash() {. RooRealVar x(""x"", """", 0, 1);. RooRealVar rnd(""rnd"", """", 0, 1);. RooThresholdCategory catThr(""cat"", """", rnd, ""v2"", 2);. catThr.addThreshold(1./3, ""v0"", 0);. catThr.addThreshold(2./3, ""v1"", 1);. . RooRealVar m(""m"", """", 0.5, 0, 1);. RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));. RooUniform rndPdf(""rndPdf"", """", rnd);. RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));. . auto ds = pdf.generate(RooArg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10473
https://github.com/root-project/root/issues/10473:1071,usability,behavi,behavior,1071,"e index category; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I have a dataset with a category, and a RooSimultaneous pdf. The sim pdf does not contain a pdf for each value of the category, because some values are to be ignored in that stage of the fit. . In ROOT 6.26 this segfaults, either in prepareSimultaneousModelForBatchMode (when batchmode is on) or in RooAbsData::split (when batchmode is off). The issue in both functions is that they iterate over the values of the index category, and assume that each value has a corresponding pdf inside the RooSimultaneous. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No crash, the sim pdf fits the pdfs for the index it contains and ignores the rest. This used to work in ROOT 6.24 and earlier. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. void test_roosimcrash() {. RooRealVar x(""x"", """", 0, 1);. RooRealVar rnd(""rnd"", """", 0, 1);. RooThresholdCategory catThr(""cat"", """", rnd, ""v2"", 2);. catThr.addThreshold(1./3, ""v0"", 0);. catThr.addThreshold(2./3, ""v1"", 1);. . RooRealVar m(""m"", """", 0.5, 0, 1);. RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));. RooUniform rndPdf(""rndPdf"", """", rnd);. RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));. . auto ds = pdf.generate(RooArgSet(x, rnd), RooFit::Name(""ds""), RooFit::NumEvents(100));. auto cat = dynam",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10473
https://github.com/root-project/root/issues/10473:1089,usability,clear,clear,1089," - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I have a dataset with a category, and a RooSimultaneous pdf. The sim pdf does not contain a pdf for each value of the category, because some values are to be ignored in that stage of the fit. . In ROOT 6.26 this segfaults, either in prepareSimultaneousModelForBatchMode (when batchmode is on) or in RooAbsData::split (when batchmode is off). The issue in both functions is that they iterate over the values of the index category, and assume that each value has a corresponding pdf inside the RooSimultaneous. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No crash, the sim pdf fits the pdfs for the index it contains and ignores the rest. This used to work in ROOT 6.24 and earlier. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. void test_roosimcrash() {. RooRealVar x(""x"", """", 0, 1);. RooRealVar rnd(""rnd"", """", 0, 1);. RooThresholdCategory catThr(""cat"", """", rnd, ""v2"", 2);. catThr.addThreshold(1./3, ""v0"", 0);. catThr.addThreshold(2./3, ""v1"", 1);. . RooRealVar m(""m"", """", 0.5, 0, 1);. RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));. RooUniform rndPdf(""rndPdf"", """", rnd);. RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));. . auto ds = pdf.generate(RooArgSet(x, rnd), RooFit::Name(""ds""), RooFit::NumEvents(100));. auto cat = dynamic_cast<RooCatego",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10473
https://github.com/root-project/root/issues/10473:1331,usability,behavi,behavior,1331,"nd one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I have a dataset with a category, and a RooSimultaneous pdf. The sim pdf does not contain a pdf for each value of the category, because some values are to be ignored in that stage of the fit. . In ROOT 6.26 this segfaults, either in prepareSimultaneousModelForBatchMode (when batchmode is on) or in RooAbsData::split (when batchmode is off). The issue in both functions is that they iterate over the values of the index category, and assume that each value has a corresponding pdf inside the RooSimultaneous. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No crash, the sim pdf fits the pdfs for the index it contains and ignores the rest. This used to work in ROOT 6.24 and earlier. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. void test_roosimcrash() {. RooRealVar x(""x"", """", 0, 1);. RooRealVar rnd(""rnd"", """", 0, 1);. RooThresholdCategory catThr(""cat"", """", rnd, ""v2"", 2);. catThr.addThreshold(1./3, ""v0"", 0);. catThr.addThreshold(2./3, ""v1"", 1);. . RooRealVar m(""m"", """", 0.5, 0, 1);. RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));. RooUniform rndPdf(""rndPdf"", """", rnd);. RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));. . auto ds = pdf.generate(RooArgSet(x, rnd), RooFit::Name(""ds""), RooFit::NumEvents(100));. auto cat = dynamic_cast<RooCategory*>(ds->addColumn(catThr));. . RooSimultaneous sim(""sim"", """", *cat);. sim.addPdf(g, ""v0"");. sim.addPdf(g, ""v1"");. . sim.fitTo(*ds, RooFit::Save(true))->Print(""V"");. }. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10473
https://github.com/root-project/root/issues/10473:1476,usability,input,input,1476,". A clear and concise description of what the wrong behavior is. -->. I have a dataset with a category, and a RooSimultaneous pdf. The sim pdf does not contain a pdf for each value of the category, because some values are to be ignored in that stage of the fit. . In ROOT 6.26 this segfaults, either in prepareSimultaneousModelForBatchMode (when batchmode is on) or in RooAbsData::split (when batchmode is off). The issue in both functions is that they iterate over the values of the index category, and assume that each value has a corresponding pdf inside the RooSimultaneous. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No crash, the sim pdf fits the pdfs for the index it contains and ignores the rest. This used to work in ROOT 6.24 and earlier. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. void test_roosimcrash() {. RooRealVar x(""x"", """", 0, 1);. RooRealVar rnd(""rnd"", """", 0, 1);. RooThresholdCategory catThr(""cat"", """", rnd, ""v2"", 2);. catThr.addThreshold(1./3, ""v0"", 0);. catThr.addThreshold(2./3, ""v1"", 1);. . RooRealVar m(""m"", """", 0.5, 0, 1);. RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));. RooUniform rndPdf(""rndPdf"", """", rnd);. RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));. . auto ds = pdf.generate(RooArgSet(x, rnd), RooFit::Name(""ds""), RooFit::NumEvents(100));. auto cat = dynamic_cast<RooCategory*>(ds->addColumn(catThr));. . RooSimultaneous sim(""sim"", """", *cat);. sim.addPdf(g, ""v0"");. sim.addPdf(g, ""v1"");. . sim.fitTo(*ds, RooFit::Save(true))->Print(""V"");. }. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Centos7. Broken in 6.26 from LCG dev4. Works in 6.24.06 from L",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10473
https://github.com/root-project/root/issues/10474:1256,deployability,stack,stackoverflow,1256,"THistSaveAs txt or csv; ### Explain what you would like to see improved. I open this to keep track of a suggestion by @lmoneta to save histograms as csv or txt files. https://github.com/root-project/root/issues/9491#issuecomment-1094786152. Right now, there are all sorts of workarounds to achieve this (see below), but they are easy to forget and periodically there are new questions on the forum wrt the same thing. A function doing. `TH1::SaveAs("".txt"")`. would be more user-friendly. ### Optional: share how it could be improved. Move TGraph implementation in https://github.com/root-project/root/issues/9491 to a class THistSaveAs. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 02 2021, 14:20:23 |. | From tags/v6-24-06@v6-24-06 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://root-forum.cern.ch/t/save-data-points-from-a-histogram-in-a-txt-file/49768/3. https://root-forum.cern.ch/t/save-histogram-in-txt-file/43616/13. https://stackoverflow.com/questions/28970124/cern-root-exporting-data-to-plain-text. https://root-forum.cern.ch/t/save-the-contents-of-histogram-to-text-file/28616/2. https://root-forum.cern.ch/t/histogram-to-ascii/14080/6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10474
https://github.com/root-project/root/issues/10474:502,interoperability,share,share,502,"THistSaveAs txt or csv; ### Explain what you would like to see improved. I open this to keep track of a suggestion by @lmoneta to save histograms as csv or txt files. https://github.com/root-project/root/issues/9491#issuecomment-1094786152. Right now, there are all sorts of workarounds to achieve this (see below), but they are easy to forget and periodically there are new questions on the forum wrt the same thing. A function doing. `TH1::SaveAs("".txt"")`. would be more user-friendly. ### Optional: share how it could be improved. Move TGraph implementation in https://github.com/root-project/root/issues/9491 to a class THistSaveAs. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 02 2021, 14:20:23 |. | From tags/v6-24-06@v6-24-06 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://root-forum.cern.ch/t/save-data-points-from-a-histogram-in-a-txt-file/49768/3. https://root-forum.cern.ch/t/save-histogram-in-txt-file/43616/13. https://stackoverflow.com/questions/28970124/cern-root-exporting-data-to-plain-text. https://root-forum.cern.ch/t/save-the-contents-of-histogram-to-text-file/28616/2. https://root-forum.cern.ch/t/histogram-to-ascii/14080/6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10474
https://github.com/root-project/root/issues/10474:1371,performance,content,contents-of-histogram-to-text-file,1371,"THistSaveAs txt or csv; ### Explain what you would like to see improved. I open this to keep track of a suggestion by @lmoneta to save histograms as csv or txt files. https://github.com/root-project/root/issues/9491#issuecomment-1094786152. Right now, there are all sorts of workarounds to achieve this (see below), but they are easy to forget and periodically there are new questions on the forum wrt the same thing. A function doing. `TH1::SaveAs("".txt"")`. would be more user-friendly. ### Optional: share how it could be improved. Move TGraph implementation in https://github.com/root-project/root/issues/9491 to a class THistSaveAs. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 02 2021, 14:20:23 |. | From tags/v6-24-06@v6-24-06 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://root-forum.cern.ch/t/save-data-points-from-a-histogram-in-a-txt-file/49768/3. https://root-forum.cern.ch/t/save-histogram-in-txt-file/43616/13. https://stackoverflow.com/questions/28970124/cern-root-exporting-data-to-plain-text. https://root-forum.cern.ch/t/save-the-contents-of-histogram-to-text-file/28616/2. https://root-forum.cern.ch/t/histogram-to-ascii/14080/6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10474
https://github.com/root-project/root/issues/10474:794,security,Team,Team,794,"THistSaveAs txt or csv; ### Explain what you would like to see improved. I open this to keep track of a suggestion by @lmoneta to save histograms as csv or txt files. https://github.com/root-project/root/issues/9491#issuecomment-1094786152. Right now, there are all sorts of workarounds to achieve this (see below), but they are easy to forget and periodically there are new questions on the forum wrt the same thing. A function doing. `TH1::SaveAs("".txt"")`. would be more user-friendly. ### Optional: share how it could be improved. Move TGraph implementation in https://github.com/root-project/root/issues/9491 to a class THistSaveAs. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 02 2021, 14:20:23 |. | From tags/v6-24-06@v6-24-06 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://root-forum.cern.ch/t/save-data-points-from-a-histogram-in-a-txt-file/49768/3. https://root-forum.cern.ch/t/save-histogram-in-txt-file/43616/13. https://stackoverflow.com/questions/28970124/cern-root-exporting-data-to-plain-text. https://root-forum.cern.ch/t/save-the-contents-of-histogram-to-text-file/28616/2. https://root-forum.cern.ch/t/histogram-to-ascii/14080/6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10474
https://github.com/root-project/root/issues/10474:1087,testability,context,context,1087,"THistSaveAs txt or csv; ### Explain what you would like to see improved. I open this to keep track of a suggestion by @lmoneta to save histograms as csv or txt files. https://github.com/root-project/root/issues/9491#issuecomment-1094786152. Right now, there are all sorts of workarounds to achieve this (see below), but they are easy to forget and periodically there are new questions on the forum wrt the same thing. A function doing. `TH1::SaveAs("".txt"")`. would be more user-friendly. ### Optional: share how it could be improved. Move TGraph implementation in https://github.com/root-project/root/issues/9491 to a class THistSaveAs. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 02 2021, 14:20:23 |. | From tags/v6-24-06@v6-24-06 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://root-forum.cern.ch/t/save-data-points-from-a-histogram-in-a-txt-file/49768/3. https://root-forum.cern.ch/t/save-histogram-in-txt-file/43616/13. https://stackoverflow.com/questions/28970124/cern-root-exporting-data-to-plain-text. https://root-forum.cern.ch/t/save-the-contents-of-histogram-to-text-file/28616/2. https://root-forum.cern.ch/t/histogram-to-ascii/14080/6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10474
https://github.com/root-project/root/issues/10474:473,usability,user,user-friendly,473,"THistSaveAs txt or csv; ### Explain what you would like to see improved. I open this to keep track of a suggestion by @lmoneta to save histograms as csv or txt files. https://github.com/root-project/root/issues/9491#issuecomment-1094786152. Right now, there are all sorts of workarounds to achieve this (see below), but they are easy to forget and periodically there are new questions on the forum wrt the same thing. A function doing. `TH1::SaveAs("".txt"")`. would be more user-friendly. ### Optional: share how it could be improved. Move TGraph implementation in https://github.com/root-project/root/issues/9491 to a class THistSaveAs. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 02 2021, 14:20:23 |. | From tags/v6-24-06@v6-24-06 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://root-forum.cern.ch/t/save-data-points-from-a-histogram-in-a-txt-file/49768/3. https://root-forum.cern.ch/t/save-histogram-in-txt-file/43616/13. https://stackoverflow.com/questions/28970124/cern-root-exporting-data-to-plain-text. https://root-forum.cern.ch/t/save-the-contents-of-histogram-to-text-file/28616/2. https://root-forum.cern.ch/t/histogram-to-ascii/14080/6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10474
https://github.com/root-project/root/issues/10474:943,usability,help,help,943,"THistSaveAs txt or csv; ### Explain what you would like to see improved. I open this to keep track of a suggestion by @lmoneta to save histograms as csv or txt files. https://github.com/root-project/root/issues/9491#issuecomment-1094786152. Right now, there are all sorts of workarounds to achieve this (see below), but they are easy to forget and periodically there are new questions on the forum wrt the same thing. A function doing. `TH1::SaveAs("".txt"")`. would be more user-friendly. ### Optional: share how it could be improved. Move TGraph implementation in https://github.com/root-project/root/issues/9491 to a class THistSaveAs. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 02 2021, 14:20:23 |. | From tags/v6-24-06@v6-24-06 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://root-forum.cern.ch/t/save-data-points-from-a-histogram-in-a-txt-file/49768/3. https://root-forum.cern.ch/t/save-histogram-in-txt-file/43616/13. https://stackoverflow.com/questions/28970124/cern-root-exporting-data-to-plain-text. https://root-forum.cern.ch/t/save-the-contents-of-histogram-to-text-file/28616/2. https://root-forum.cern.ch/t/histogram-to-ascii/14080/6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10474
https://github.com/root-project/root/pull/10475:254,interoperability,platform,platforms,254,v624 stdpair: Don't reuse of emulated StreamerInfo (when having compiled info); Previously it was reused it just 'happened' to have the expected size. (This applies only for the treatment of the TClass for an std::pair) and help fix the tests on 32 bits platforms. See test: https://github.com/root-project/roottest/pull/869. backport of https://github.com/root-project/root/pull/10416,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10475
https://github.com/root-project/root/pull/10475:20,modifiability,reu,reuse,20,v624 stdpair: Don't reuse of emulated StreamerInfo (when having compiled info); Previously it was reused it just 'happened' to have the expected size. (This applies only for the treatment of the TClass for an std::pair) and help fix the tests on 32 bits platforms. See test: https://github.com/root-project/roottest/pull/869. backport of https://github.com/root-project/root/pull/10416,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10475
https://github.com/root-project/root/pull/10475:98,modifiability,reu,reused,98,v624 stdpair: Don't reuse of emulated StreamerInfo (when having compiled info); Previously it was reused it just 'happened' to have the expected size. (This applies only for the treatment of the TClass for an std::pair) and help fix the tests on 32 bits platforms. See test: https://github.com/root-project/roottest/pull/869. backport of https://github.com/root-project/root/pull/10416,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10475
https://github.com/root-project/root/pull/10475:237,safety,test,tests,237,v624 stdpair: Don't reuse of emulated StreamerInfo (when having compiled info); Previously it was reused it just 'happened' to have the expected size. (This applies only for the treatment of the TClass for an std::pair) and help fix the tests on 32 bits platforms. See test: https://github.com/root-project/roottest/pull/869. backport of https://github.com/root-project/root/pull/10416,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10475
https://github.com/root-project/root/pull/10475:269,safety,test,test,269,v624 stdpair: Don't reuse of emulated StreamerInfo (when having compiled info); Previously it was reused it just 'happened' to have the expected size. (This applies only for the treatment of the TClass for an std::pair) and help fix the tests on 32 bits platforms. See test: https://github.com/root-project/roottest/pull/869. backport of https://github.com/root-project/root/pull/10416,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10475
https://github.com/root-project/root/pull/10475:29,testability,emul,emulated,29,v624 stdpair: Don't reuse of emulated StreamerInfo (when having compiled info); Previously it was reused it just 'happened' to have the expected size. (This applies only for the treatment of the TClass for an std::pair) and help fix the tests on 32 bits platforms. See test: https://github.com/root-project/roottest/pull/869. backport of https://github.com/root-project/root/pull/10416,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10475
https://github.com/root-project/root/pull/10475:237,testability,test,tests,237,v624 stdpair: Don't reuse of emulated StreamerInfo (when having compiled info); Previously it was reused it just 'happened' to have the expected size. (This applies only for the treatment of the TClass for an std::pair) and help fix the tests on 32 bits platforms. See test: https://github.com/root-project/roottest/pull/869. backport of https://github.com/root-project/root/pull/10416,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10475
https://github.com/root-project/root/pull/10475:269,testability,test,test,269,v624 stdpair: Don't reuse of emulated StreamerInfo (when having compiled info); Previously it was reused it just 'happened' to have the expected size. (This applies only for the treatment of the TClass for an std::pair) and help fix the tests on 32 bits platforms. See test: https://github.com/root-project/roottest/pull/869. backport of https://github.com/root-project/root/pull/10416,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10475
https://github.com/root-project/root/pull/10475:224,usability,help,help,224,v624 stdpair: Don't reuse of emulated StreamerInfo (when having compiled info); Previously it was reused it just 'happened' to have the expected size. (This applies only for the treatment of the TClass for an std::pair) and help fix the tests on 32 bits platforms. See test: https://github.com/root-project/roottest/pull/869. backport of https://github.com/root-project/root/pull/10416,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10475
https://github.com/root-project/root/pull/10476:254,interoperability,platform,platforms,254,v626 stdpair: Don't reuse of emulated StreamerInfo (when having compiled info); Previously it was reused it just 'happened' to have the expected size. (This applies only for the treatment of the TClass for an std::pair) and help fix the tests on 32 bits platforms. See test: https://github.com/root-project/roottest/pull/869. backport of https://github.com/root-project/root/pull/10416.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10476
https://github.com/root-project/root/pull/10476:20,modifiability,reu,reuse,20,v626 stdpair: Don't reuse of emulated StreamerInfo (when having compiled info); Previously it was reused it just 'happened' to have the expected size. (This applies only for the treatment of the TClass for an std::pair) and help fix the tests on 32 bits platforms. See test: https://github.com/root-project/roottest/pull/869. backport of https://github.com/root-project/root/pull/10416.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10476
https://github.com/root-project/root/pull/10476:98,modifiability,reu,reused,98,v626 stdpair: Don't reuse of emulated StreamerInfo (when having compiled info); Previously it was reused it just 'happened' to have the expected size. (This applies only for the treatment of the TClass for an std::pair) and help fix the tests on 32 bits platforms. See test: https://github.com/root-project/roottest/pull/869. backport of https://github.com/root-project/root/pull/10416.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10476
https://github.com/root-project/root/pull/10476:237,safety,test,tests,237,v626 stdpair: Don't reuse of emulated StreamerInfo (when having compiled info); Previously it was reused it just 'happened' to have the expected size. (This applies only for the treatment of the TClass for an std::pair) and help fix the tests on 32 bits platforms. See test: https://github.com/root-project/roottest/pull/869. backport of https://github.com/root-project/root/pull/10416.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10476
https://github.com/root-project/root/pull/10476:269,safety,test,test,269,v626 stdpair: Don't reuse of emulated StreamerInfo (when having compiled info); Previously it was reused it just 'happened' to have the expected size. (This applies only for the treatment of the TClass for an std::pair) and help fix the tests on 32 bits platforms. See test: https://github.com/root-project/roottest/pull/869. backport of https://github.com/root-project/root/pull/10416.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10476
https://github.com/root-project/root/pull/10476:29,testability,emul,emulated,29,v626 stdpair: Don't reuse of emulated StreamerInfo (when having compiled info); Previously it was reused it just 'happened' to have the expected size. (This applies only for the treatment of the TClass for an std::pair) and help fix the tests on 32 bits platforms. See test: https://github.com/root-project/roottest/pull/869. backport of https://github.com/root-project/root/pull/10416.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10476
https://github.com/root-project/root/pull/10476:237,testability,test,tests,237,v626 stdpair: Don't reuse of emulated StreamerInfo (when having compiled info); Previously it was reused it just 'happened' to have the expected size. (This applies only for the treatment of the TClass for an std::pair) and help fix the tests on 32 bits platforms. See test: https://github.com/root-project/roottest/pull/869. backport of https://github.com/root-project/root/pull/10416.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10476
https://github.com/root-project/root/pull/10476:269,testability,test,test,269,v626 stdpair: Don't reuse of emulated StreamerInfo (when having compiled info); Previously it was reused it just 'happened' to have the expected size. (This applies only for the treatment of the TClass for an std::pair) and help fix the tests on 32 bits platforms. See test: https://github.com/root-project/roottest/pull/869. backport of https://github.com/root-project/root/pull/10416.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10476
https://github.com/root-project/root/pull/10476:224,usability,help,help,224,v626 stdpair: Don't reuse of emulated StreamerInfo (when having compiled info); Previously it was reused it just 'happened' to have the expected size. (This applies only for the treatment of the TClass for an std::pair) and help fix the tests on 32 bits platforms. See test: https://github.com/root-project/roottest/pull/869. backport of https://github.com/root-project/root/pull/10416.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10476
https://github.com/root-project/root/pull/10477:199,energy efficiency,load,loading,199,"[RF] Refactor RooFitDriver and move some functionality to other files; The `RooFitDriver.cxx` source file was growing a lot recently, and many. functional parts were mixed together. For example, the loading of spans. from the dataset and the analysis of the computation graph are two. separate things but they were mixed in this file. This commit suggests to improve the situation by moving all data related. functionality to a new file `BatchModeDataHelpers.cxx`. Some CUDA. helpers are also moved to `CUDAHelpers.cxx`. Another helper function was. moded to `BatchModeHelpers.cxx` to keep the footprint of. `RooFitDriver.cxx` small such that new contributors can get started more. easily.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10477
https://github.com/root-project/root/pull/10477:438,integrability,Batch,BatchModeDataHelpers,438,"[RF] Refactor RooFitDriver and move some functionality to other files; The `RooFitDriver.cxx` source file was growing a lot recently, and many. functional parts were mixed together. For example, the loading of spans. from the dataset and the analysis of the computation graph are two. separate things but they were mixed in this file. This commit suggests to improve the situation by moving all data related. functionality to a new file `BatchModeDataHelpers.cxx`. Some CUDA. helpers are also moved to `CUDAHelpers.cxx`. Another helper function was. moded to `BatchModeHelpers.cxx` to keep the footprint of. `RooFitDriver.cxx` small such that new contributors can get started more. easily.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10477
https://github.com/root-project/root/pull/10477:560,integrability,Batch,BatchModeHelpers,560,"[RF] Refactor RooFitDriver and move some functionality to other files; The `RooFitDriver.cxx` source file was growing a lot recently, and many. functional parts were mixed together. For example, the loading of spans. from the dataset and the analysis of the computation graph are two. separate things but they were mixed in this file. This commit suggests to improve the situation by moving all data related. functionality to a new file `BatchModeDataHelpers.cxx`. Some CUDA. helpers are also moved to `CUDAHelpers.cxx`. Another helper function was. moded to `BatchModeHelpers.cxx` to keep the footprint of. `RooFitDriver.cxx` small such that new contributors can get started more. easily.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10477
https://github.com/root-project/root/pull/10477:5,modifiability,Refact,Refactor,5,"[RF] Refactor RooFitDriver and move some functionality to other files; The `RooFitDriver.cxx` source file was growing a lot recently, and many. functional parts were mixed together. For example, the loading of spans. from the dataset and the analysis of the computation graph are two. separate things but they were mixed in this file. This commit suggests to improve the situation by moving all data related. functionality to a new file `BatchModeDataHelpers.cxx`. Some CUDA. helpers are also moved to `CUDAHelpers.cxx`. Another helper function was. moded to `BatchModeHelpers.cxx` to keep the footprint of. `RooFitDriver.cxx` small such that new contributors can get started more. easily.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10477
https://github.com/root-project/root/pull/10477:5,performance,Refactor,Refactor,5,"[RF] Refactor RooFitDriver and move some functionality to other files; The `RooFitDriver.cxx` source file was growing a lot recently, and many. functional parts were mixed together. For example, the loading of spans. from the dataset and the analysis of the computation graph are two. separate things but they were mixed in this file. This commit suggests to improve the situation by moving all data related. functionality to a new file `BatchModeDataHelpers.cxx`. Some CUDA. helpers are also moved to `CUDAHelpers.cxx`. Another helper function was. moded to `BatchModeHelpers.cxx` to keep the footprint of. `RooFitDriver.cxx` small such that new contributors can get started more. easily.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10477
https://github.com/root-project/root/pull/10477:199,performance,load,loading,199,"[RF] Refactor RooFitDriver and move some functionality to other files; The `RooFitDriver.cxx` source file was growing a lot recently, and many. functional parts were mixed together. For example, the loading of spans. from the dataset and the analysis of the computation graph are two. separate things but they were mixed in this file. This commit suggests to improve the situation by moving all data related. functionality to a new file `BatchModeDataHelpers.cxx`. Some CUDA. helpers are also moved to `CUDAHelpers.cxx`. Another helper function was. moded to `BatchModeHelpers.cxx` to keep the footprint of. `RooFitDriver.cxx` small such that new contributors can get started more. easily.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10477
https://github.com/root-project/root/pull/10477:438,performance,Batch,BatchModeDataHelpers,438,"[RF] Refactor RooFitDriver and move some functionality to other files; The `RooFitDriver.cxx` source file was growing a lot recently, and many. functional parts were mixed together. For example, the loading of spans. from the dataset and the analysis of the computation graph are two. separate things but they were mixed in this file. This commit suggests to improve the situation by moving all data related. functionality to a new file `BatchModeDataHelpers.cxx`. Some CUDA. helpers are also moved to `CUDAHelpers.cxx`. Another helper function was. moded to `BatchModeHelpers.cxx` to keep the footprint of. `RooFitDriver.cxx` small such that new contributors can get started more. easily.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10477
https://github.com/root-project/root/pull/10477:560,performance,Batch,BatchModeHelpers,560,"[RF] Refactor RooFitDriver and move some functionality to other files; The `RooFitDriver.cxx` source file was growing a lot recently, and many. functional parts were mixed together. For example, the loading of spans. from the dataset and the analysis of the computation graph are two. separate things but they were mixed in this file. This commit suggests to improve the situation by moving all data related. functionality to a new file `BatchModeDataHelpers.cxx`. Some CUDA. helpers are also moved to `CUDAHelpers.cxx`. Another helper function was. moded to `BatchModeHelpers.cxx` to keep the footprint of. `RooFitDriver.cxx` small such that new contributors can get started more. easily.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10477
https://github.com/root-project/root/pull/10477:476,usability,help,helpers,476,"[RF] Refactor RooFitDriver and move some functionality to other files; The `RooFitDriver.cxx` source file was growing a lot recently, and many. functional parts were mixed together. For example, the loading of spans. from the dataset and the analysis of the computation graph are two. separate things but they were mixed in this file. This commit suggests to improve the situation by moving all data related. functionality to a new file `BatchModeDataHelpers.cxx`. Some CUDA. helpers are also moved to `CUDAHelpers.cxx`. Another helper function was. moded to `BatchModeHelpers.cxx` to keep the footprint of. `RooFitDriver.cxx` small such that new contributors can get started more. easily.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10477
https://github.com/root-project/root/pull/10477:529,usability,help,helper,529,"[RF] Refactor RooFitDriver and move some functionality to other files; The `RooFitDriver.cxx` source file was growing a lot recently, and many. functional parts were mixed together. For example, the loading of spans. from the dataset and the analysis of the computation graph are two. separate things but they were mixed in this file. This commit suggests to improve the situation by moving all data related. functionality to a new file `BatchModeDataHelpers.cxx`. Some CUDA. helpers are also moved to `CUDAHelpers.cxx`. Another helper function was. moded to `BatchModeHelpers.cxx` to keep the footprint of. `RooFitDriver.cxx` small such that new contributors can get started more. easily.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10477
https://github.com/root-project/root/issues/10478:1047,availability,error,errors,1047,"`console. ❯ cat reproducer.def. Bootstrap: docker. From: fedora:36. %post. dnf -y update. dnf -y install git make cmake gcc-c++ gcc binutils ninja-build \. libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1242,availability,error,errors,1242,"libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1258,availability,redund,redundant,1258,"on openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1344,availability,error,errors,1344,"b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1390,availability,error,errors,1390,"ect/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foun",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1443,availability,error,error,1443,"ake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1533,availability,error,errors,1533,"larity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1653,availability,error,errors,1653,"+ mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1824,availability,error,error,1824,"og. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1985,availability,toler,tolerance,1985," Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:2013,availability,error,error,2013,"0. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:2254,availability,error,errors,2254," redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:8854,availability,error,error,8854,"TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:5:10: note: std.algorithm defined here. module ""algorithm"" {. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.array'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:9:10: note: std.array defined here. module ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:21,deployability,fail,fails,21,"`runtime_cxxmodules` fails to build with GCC12; ```console. ❯ cat reproducer.def. Bootstrap: docker. From: fedora:36. %post. dnf -y update. dnf -y install git make cmake gcc-c++ gcc binutils ninja-build \. libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance param",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:30,deployability,build,build,30,"`runtime_cxxmodules` fails to build with GCC12; ```console. ❯ cat reproducer.def. Bootstrap: docker. From: fedora:36. %post. dnf -y update. dnf -y install git make cmake gcc-c++ gcc binutils ninja-build \. libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance param",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:132,deployability,updat,update,132,"`runtime_cxxmodules` fails to build with GCC12; ```console. ❯ cat reproducer.def. Bootstrap: docker. From: fedora:36. %post. dnf -y update. dnf -y install git make cmake gcc-c++ gcc binutils ninja-build \. libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance param",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:147,deployability,instal,install,147,"`runtime_cxxmodules` fails to build with GCC12; ```console. ❯ cat reproducer.def. Bootstrap: docker. From: fedora:36. %post. dnf -y update. dnf -y install git make cmake gcc-c++ gcc binutils ninja-build \. libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance param",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:197,deployability,build,build,197,"`runtime_cxxmodules` fails to build with GCC12; ```console. ❯ cat reproducer.def. Bootstrap: docker. From: fedora:36. %post. dnf -y update. dnf -y install git make cmake gcc-c++ gcc binutils ninja-build \. libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance param",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:424,deployability,log,log,424,"`runtime_cxxmodules` fails to build with GCC12; ```console. ❯ cat reproducer.def. Bootstrap: docker. From: fedora:36. %post. dnf -y update. dnf -y install git make cmake gcc-c++ gcc binutils ninja-build \. libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance param",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:435,deployability,version,version,435,"`runtime_cxxmodules` fails to build with GCC12; ```console. ❯ cat reproducer.def. Bootstrap: docker. From: fedora:36. %post. dnf -y update. dnf -y install git make cmake gcc-c++ gcc binutils ninja-build \. libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance param",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:471,deployability,build,build,471,"`runtime_cxxmodules` fails to build with GCC12; ```console. ❯ cat reproducer.def. Bootstrap: docker. From: fedora:36. %post. dnf -y update. dnf -y install git make cmake gcc-c++ gcc binutils ninja-build \. libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance param",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:499,deployability,build,build,499,"`runtime_cxxmodules` fails to build with GCC12; ```console. ❯ cat reproducer.def. Bootstrap: docker. From: fedora:36. %post. dnf -y update. dnf -y install git make cmake gcc-c++ gcc binutils ninja-build \. libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance param",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:505,deployability,build,build,505,"`runtime_cxxmodules` fails to build with GCC12; ```console. ❯ cat reproducer.def. Bootstrap: docker. From: fedora:36. %post. dnf -y update. dnf -y install git make cmake gcc-c++ gcc binutils ninja-build \. libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance param",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:545,deployability,version,version,545,"`runtime_cxxmodules` fails to build with GCC12; ```console. ❯ cat reproducer.def. Bootstrap: docker. From: fedora:36. %post. dnf -y update. dnf -y install git make cmake gcc-c++ gcc binutils ninja-build \. libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance param",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:566,deployability,version,version,566,"`runtime_cxxmodules` fails to build with GCC12; ```console. ❯ cat reproducer.def. Bootstrap: docker. From: fedora:36. %post. dnf -y update. dnf -y install git make cmake gcc-c++ gcc binutils ninja-build \. libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance param",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:602,deployability,build,build,602,"`runtime_cxxmodules` fails to build with GCC12; ```console. ❯ cat reproducer.def. Bootstrap: docker. From: fedora:36. %post. dnf -y update. dnf -y install git make cmake gcc-c++ gcc binutils ninja-build \. libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance param",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:826,deployability,log,log,826,"`runtime_cxxmodules` fails to build with GCC12; ```console. ❯ cat reproducer.def. Bootstrap: docker. From: fedora:36. %post. dnf -y update. dnf -y install git make cmake gcc-c++ gcc binutils ninja-build \. libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance param",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1258,deployability,redundan,redundant,1258,"on openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:2301,deployability,version,version,2301,"t's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:2586,deployability,build,build,2586,"most never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been wri",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:2628,deployability,Configurat,Configuration,2628,"initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:2751,deployability,Build,Build,2751,"n the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:2762,deployability,Releas,Release,2762,"f `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:2771,deployability,Instal,Install,2771,"Result::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:3133,deployability,Modul,Module,3133," only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm. cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:3564,deployability,Build,Build,3564,"Ninja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm. cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/ba",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:3610,deployability,build,build,3610,"p...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm. cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:3627,deployability,build,build,3627,"nfiguration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm. cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:3633,deployability,build,build,3633,"ation. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm. cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compile",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:3717,deployability,FAIL,FAILED,3717,"with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm. cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-lin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:3767,deployability,build,build,3767," Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm. cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:3802,deployability,build,build,3802,"GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm. cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -I/reproducer/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:3837,deployability,build,build,3837,"agnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm. cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -I/reproducer/build/include -I/reproducer/build/ginclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:3901,deployability,build,build,3901,"-pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm. cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -I/reproducer/build/include -I/reproducer/build/ginclude -I/reproducer/source/core/base/inc -I/reproducer/source/core/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:3944,deployability,build,build,3944,"lor=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm. cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -I/reproducer/build/include -I/reproducer/build/ginclude -I/reproducer/source/core/base/inc -I/reproducer/source/core/foundation/inc -I/reproducer/source/core/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:4038,deployability,build,build,4038,"verloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm. cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -I/reproducer/build/include -I/reproducer/build/ginclude -I/reproducer/source/core/base/inc -I/reproducer/source/core/foundation/inc -I/reproducer/source/core/cont/inc -I/reproducer/source/core/gui/inc -I/reproducer/source/core/meta/inc -I/reproducer/sour",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:4116,deployability,build,build,4116,"le -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm. cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -I/reproducer/build/include -I/reproducer/build/ginclude -I/reproducer/source/core/base/inc -I/reproducer/source/core/foundation/inc -I/reproducer/source/core/cont/inc -I/reproducer/source/core/gui/inc -I/reproducer/source/core/meta/inc -I/reproducer/source/core/clib/inc -I/reproducer/source/core/rint/inc -I/reproducer/source/core/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:4156,deployability,build,build,4156,"defined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm. cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -I/reproducer/build/include -I/reproducer/build/ginclude -I/reproducer/source/core/base/inc -I/reproducer/source/core/foundation/inc -I/reproducer/source/core/cont/inc -I/reproducer/source/core/gui/inc -I/reproducer/source/core/meta/inc -I/reproducer/source/core/clib/inc -I/reproducer/source/core/rint/inc -I/reproducer/source/core/zip/inc -I/reproducer/source/core/thread",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:4197,deployability,build,build,4197,"ed support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm. cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -I/reproducer/build/include -I/reproducer/build/ginclude -I/reproducer/source/core/base/inc -I/reproducer/source/core/foundation/inc -I/reproducer/source/core/cont/inc -I/reproducer/source/core/gui/inc -I/reproducer/source/core/meta/inc -I/reproducer/source/core/clib/inc -I/reproducer/source/core/rint/inc -I/reproducer/source/core/zip/inc -I/reproducer/source/core/thread/inc -I/reproducer/source/core/textinput/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:4800,deployability,build,build,4800,uild/lib/Core.pcm. cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -I/reproducer/build/include -I/reproducer/build/ginclude -I/reproducer/source/core/base/inc -I/reproducer/source/core/foundation/inc -I/reproducer/source/core/cont/inc -I/reproducer/source/core/gui/inc -I/reproducer/source/core/meta/inc -I/reproducer/source/core/clib/inc -I/reproducer/source/core/rint/inc -I/reproducer/source/core/zip/inc -I/reproducer/source/core/thread/inc -I/reproducer/source/core/textinput/inc -I/reproducer/source/core/clingutils/inc -I/reproducer/source/core/base/v7/inc -I/reproducer/source/core/foundation/v7/inc -I/reproducer/source/core/unix/inc -I/usr/include -I/reproducer/source/builtins/xxhash -I/reproducer/source/builtins/lz4 -I/reproducer/source/builtins/zstd ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DType,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:4828,deployability,build,build,4828,ducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -I/reproducer/build/include -I/reproducer/build/ginclude -I/reproducer/source/core/base/inc -I/reproducer/source/core/foundation/inc -I/reproducer/source/core/cont/inc -I/reproducer/source/core/gui/inc -I/reproducer/source/core/meta/inc -I/reproducer/source/core/clib/inc -I/reproducer/source/core/rint/inc -I/reproducer/source/core/zip/inc -I/reproducer/source/core/thread/inc -I/reproducer/source/core/textinput/inc -I/reproducer/source/core/clingutils/inc -I/reproducer/source/core/base/v7/inc -I/reproducer/source/core/foundation/v7/inc -I/reproducer/source/core/unix/inc -I/usr/include -I/reproducer/source/builtins/xxhash -I/reproducer/source/builtins/lz4 -I/reproducer/source/builtins/zstd ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:8328,deployability,build,building,8328,"tils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx TUnixSystem.h root_std_complex.h GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:8337,deployability,modul,module,8337," ROOT/span.hxx ROOT/TypeTraits.hxx TUnixSystem.h root_std_complex.h GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /repr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:8359,deployability,build,building,8359,"eTraits.hxx TUnixSystem.h root_std_complex.h GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:8368,deployability,modul,module,8368,"hxx TUnixSystem.h root_std_complex.h GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:8435,deployability,modul,module-includes,8435,"er.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:5:10: note: std.algorithm defined here. module ""algorithm"" {. ^. /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:9237,deployability,modul,module,9237,"TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:5:10: note: std.algorithm defined here. module ""algorithm"" {. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.array'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:9:10: note: std.array defined here. module ""array"" {. ^. (...skip many more...). ```. Building with `-Druntime_cxxmodules=OFF` succeeds. Note: Details for the [GCC 12.0.1](https://src.fedoraproject.org/rpms/gcc/blob/7198391f753717bdc336bf84860c1decf220b524/f/gcc.spec) used above. [full_log.txt](https://github.com/root-project/root/files/8581364/full_log.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:9347,deployability,build,build,9347,"TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:5:10: note: std.algorithm defined here. module ""algorithm"" {. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.array'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:9:10: note: std.array defined here. module ""array"" {. ^. (...skip many more...). ```. Building with `-Druntime_cxxmodules=OFF` succeeds. Note: Details for the [GCC 12.0.1](https://src.fedoraproject.org/rpms/gcc/blob/7198391f753717bdc336bf84860c1decf220b524/f/gcc.spec) used above. [full_log.txt](https://github.com/root-project/root/files/8581364/full_log.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:9367,deployability,modul,modulemap,9367,"TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:5:10: note: std.algorithm defined here. module ""algorithm"" {. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.array'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:9:10: note: std.array defined here. module ""array"" {. ^. (...skip many more...). ```. Building with `-Druntime_cxxmodules=OFF` succeeds. Note: Details for the [GCC 12.0.1](https://src.fedoraproject.org/rpms/gcc/blob/7198391f753717bdc336bf84860c1decf220b524/f/gcc.spec) used above. [full_log.txt](https://github.com/root-project/root/files/8581364/full_log.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:9417,deployability,modul,module,9417,"TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:5:10: note: std.algorithm defined here. module ""algorithm"" {. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.array'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:9:10: note: std.array defined here. module ""array"" {. ^. (...skip many more...). ```. Building with `-Druntime_cxxmodules=OFF` succeeds. Note: Details for the [GCC 12.0.1](https://src.fedoraproject.org/rpms/gcc/blob/7198391f753717bdc336bf84860c1decf220b524/f/gcc.spec) used above. [full_log.txt](https://github.com/root-project/root/files/8581364/full_log.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:9678,deployability,modul,module,9678,"TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:5:10: note: std.algorithm defined here. module ""algorithm"" {. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.array'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:9:10: note: std.array defined here. module ""array"" {. ^. (...skip many more...). ```. Building with `-Druntime_cxxmodules=OFF` succeeds. Note: Details for the [GCC 12.0.1](https://src.fedoraproject.org/rpms/gcc/blob/7198391f753717bdc336bf84860c1decf220b524/f/gcc.spec) used above. [full_log.txt](https://github.com/root-project/root/files/8581364/full_log.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:9784,deployability,build,build,9784,"TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:5:10: note: std.algorithm defined here. module ""algorithm"" {. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.array'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:9:10: note: std.array defined here. module ""array"" {. ^. (...skip many more...). ```. Building with `-Druntime_cxxmodules=OFF` succeeds. Note: Details for the [GCC 12.0.1](https://src.fedoraproject.org/rpms/gcc/blob/7198391f753717bdc336bf84860c1decf220b524/f/gcc.spec) used above. [full_log.txt](https://github.com/root-project/root/files/8581364/full_log.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:9804,deployability,modul,modulemap,9804,"TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:5:10: note: std.algorithm defined here. module ""algorithm"" {. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.array'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:9:10: note: std.array defined here. module ""array"" {. ^. (...skip many more...). ```. Building with `-Druntime_cxxmodules=OFF` succeeds. Note: Details for the [GCC 12.0.1](https://src.fedoraproject.org/rpms/gcc/blob/7198391f753717bdc336bf84860c1decf220b524/f/gcc.spec) used above. [full_log.txt](https://github.com/root-project/root/files/8581364/full_log.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:9850,deployability,modul,module,9850,"TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:5:10: note: std.algorithm defined here. module ""algorithm"" {. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.array'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:9:10: note: std.array defined here. module ""array"" {. ^. (...skip many more...). ```. Building with `-Druntime_cxxmodules=OFF` succeeds. Note: Details for the [GCC 12.0.1](https://src.fedoraproject.org/rpms/gcc/blob/7198391f753717bdc336bf84860c1decf220b524/f/gcc.spec) used above. [full_log.txt](https://github.com/root-project/root/files/8581364/full_log.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:9900,deployability,Build,Building,9900,"TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:5:10: note: std.algorithm defined here. module ""algorithm"" {. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.array'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:9:10: note: std.array defined here. module ""array"" {. ^. (...skip many more...). ```. Building with `-Druntime_cxxmodules=OFF` succeeds. Note: Details for the [GCC 12.0.1](https://src.fedoraproject.org/rpms/gcc/blob/7198391f753717bdc336bf84860c1decf220b524/f/gcc.spec) used above. [full_log.txt](https://github.com/root-project/root/files/8581364/full_log.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:2696,energy efficiency,core,core,2696,"fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:3707,energy efficiency,Core,Core,3707,"n 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm. cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:3725,energy efficiency,core,core,3725,"deon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm. cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:3746,energy efficiency,Core,Core,3746,"). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm. cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:3773,energy efficiency,core,core,3773,"all path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm. cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:3812,energy efficiency,Core,Core,3812,"1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm. cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -I/reproducer/build/include ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:3843,energy efficiency,core,core,3843,"tics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm. cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -I/reproducer/build/include -I/reproducer/build/ginclude -I",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:3950,energy efficiency,core,core,3950,"lways -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm. cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -I/reproducer/build/include -I/reproducer/build/ginclude -I/reproducer/source/core/base/inc -I/reproducer/source/core/foundation/inc -I/reproducer/source/core/cont/in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:4864,energy efficiency,core,core,4864,-E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -I/reproducer/build/include -I/reproducer/build/ginclude -I/reproducer/source/core/base/inc -I/reproducer/source/core/foundation/inc -I/reproducer/source/core/cont/inc -I/reproducer/source/core/gui/inc -I/reproducer/source/core/meta/inc -I/reproducer/source/core/clib/inc -I/reproducer/source/core/rint/inc -I/reproducer/source/core/zip/inc -I/reproducer/source/core/thread/inc -I/reproducer/source/core/textinput/inc -I/reproducer/source/core/clingutils/inc -I/reproducer/source/core/base/v7/inc -I/reproducer/source/core/foundation/v7/inc -I/reproducer/source/core/unix/inc -I/usr/include -I/reproducer/source/builtins/xxhash -I/reproducer/source/builtins/lz4 -I/reproducer/source/builtins/zstd ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:4899,energy efficiency,core,core,4899,build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -I/reproducer/build/include -I/reproducer/build/ginclude -I/reproducer/source/core/base/inc -I/reproducer/source/core/foundation/inc -I/reproducer/source/core/cont/inc -I/reproducer/source/core/gui/inc -I/reproducer/source/core/meta/inc -I/reproducer/source/core/clib/inc -I/reproducer/source/core/rint/inc -I/reproducer/source/core/zip/inc -I/reproducer/source/core/thread/inc -I/reproducer/source/core/textinput/inc -I/reproducer/source/core/clingutils/inc -I/reproducer/source/core/base/v7/inc -I/reproducer/source/core/foundation/v7/inc -I/reproducer/source/core/unix/inc -I/usr/include -I/reproducer/source/builtins/xxhash -I/reproducer/source/builtins/lz4 -I/reproducer/source/builtins/zstd ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:4940,energy efficiency,core,core,4940,r/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -I/reproducer/build/include -I/reproducer/build/ginclude -I/reproducer/source/core/base/inc -I/reproducer/source/core/foundation/inc -I/reproducer/source/core/cont/inc -I/reproducer/source/core/gui/inc -I/reproducer/source/core/meta/inc -I/reproducer/source/core/clib/inc -I/reproducer/source/core/rint/inc -I/reproducer/source/core/zip/inc -I/reproducer/source/core/thread/inc -I/reproducer/source/core/textinput/inc -I/reproducer/source/core/clingutils/inc -I/reproducer/source/core/base/v7/inc -I/reproducer/source/core/foundation/v7/inc -I/reproducer/source/core/unix/inc -I/usr/include -I/reproducer/source/builtins/xxhash -I/reproducer/source/builtins/lz4 -I/reproducer/source/builtins/zstd ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAdd,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:4975,energy efficiency,core,core,4975,ootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -I/reproducer/build/include -I/reproducer/build/ginclude -I/reproducer/source/core/base/inc -I/reproducer/source/core/foundation/inc -I/reproducer/source/core/cont/inc -I/reproducer/source/core/gui/inc -I/reproducer/source/core/meta/inc -I/reproducer/source/core/clib/inc -I/reproducer/source/core/rint/inc -I/reproducer/source/core/zip/inc -I/reproducer/source/core/thread/inc -I/reproducer/source/core/textinput/inc -I/reproducer/source/core/clingutils/inc -I/reproducer/source/core/base/v7/inc -I/reproducer/source/core/foundation/v7/inc -I/reproducer/source/core/unix/inc -I/usr/include -I/reproducer/source/builtins/xxhash -I/reproducer/source/builtins/lz4 -I/reproducer/source/builtins/zstd ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:5009,energy efficiency,core,core,5009, -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -I/reproducer/build/include -I/reproducer/build/ginclude -I/reproducer/source/core/base/inc -I/reproducer/source/core/foundation/inc -I/reproducer/source/core/cont/inc -I/reproducer/source/core/gui/inc -I/reproducer/source/core/meta/inc -I/reproducer/source/core/clib/inc -I/reproducer/source/core/rint/inc -I/reproducer/source/core/zip/inc -I/reproducer/source/core/thread/inc -I/reproducer/source/core/textinput/inc -I/reproducer/source/core/clingutils/inc -I/reproducer/source/core/base/v7/inc -I/reproducer/source/core/foundation/v7/inc -I/reproducer/source/core/unix/inc -I/usr/include -I/reproducer/source/builtins/xxhash -I/reproducer/source/builtins/lz4 -I/reproducer/source/builtins/zstd ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:5044,energy efficiency,core,core,5044,b/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -I/reproducer/build/include -I/reproducer/build/ginclude -I/reproducer/source/core/base/inc -I/reproducer/source/core/foundation/inc -I/reproducer/source/core/cont/inc -I/reproducer/source/core/gui/inc -I/reproducer/source/core/meta/inc -I/reproducer/source/core/clib/inc -I/reproducer/source/core/rint/inc -I/reproducer/source/core/zip/inc -I/reproducer/source/core/thread/inc -I/reproducer/source/core/textinput/inc -I/reproducer/source/core/clingutils/inc -I/reproducer/source/core/base/v7/inc -I/reproducer/source/core/foundation/v7/inc -I/reproducer/source/core/unix/inc -I/usr/include -I/reproducer/source/builtins/xxhash -I/reproducer/source/builtins/lz4 -I/reproducer/source/builtins/zstd ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:5079,energy efficiency,core,core,5079,er/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -I/reproducer/build/include -I/reproducer/build/ginclude -I/reproducer/source/core/base/inc -I/reproducer/source/core/foundation/inc -I/reproducer/source/core/cont/inc -I/reproducer/source/core/gui/inc -I/reproducer/source/core/meta/inc -I/reproducer/source/core/clib/inc -I/reproducer/source/core/rint/inc -I/reproducer/source/core/zip/inc -I/reproducer/source/core/thread/inc -I/reproducer/source/core/textinput/inc -I/reproducer/source/core/clingutils/inc -I/reproducer/source/core/base/v7/inc -I/reproducer/source/core/foundation/v7/inc -I/reproducer/source/core/unix/inc -I/usr/include -I/reproducer/source/builtins/xxhash -I/reproducer/source/builtins/lz4 -I/reproducer/source/builtins/zstd ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginM,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:5114,energy efficiency,core,core,5114,build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -I/reproducer/build/include -I/reproducer/build/ginclude -I/reproducer/source/core/base/inc -I/reproducer/source/core/foundation/inc -I/reproducer/source/core/cont/inc -I/reproducer/source/core/gui/inc -I/reproducer/source/core/meta/inc -I/reproducer/source/core/clib/inc -I/reproducer/source/core/rint/inc -I/reproducer/source/core/zip/inc -I/reproducer/source/core/thread/inc -I/reproducer/source/core/textinput/inc -I/reproducer/source/core/clingutils/inc -I/reproducer/source/core/base/v7/inc -I/reproducer/source/core/foundation/v7/inc -I/reproducer/source/core/unix/inc -I/usr/include -I/reproducer/source/builtins/xxhash -I/reproducer/source/builtins/lz4 -I/reproducer/source/builtins/zstd ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProce,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:5148,energy efficiency,core,core,5148,ducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -I/reproducer/build/include -I/reproducer/build/ginclude -I/reproducer/source/core/base/inc -I/reproducer/source/core/foundation/inc -I/reproducer/source/core/cont/inc -I/reproducer/source/core/gui/inc -I/reproducer/source/core/meta/inc -I/reproducer/source/core/clib/inc -I/reproducer/source/core/rint/inc -I/reproducer/source/core/zip/inc -I/reproducer/source/core/thread/inc -I/reproducer/source/core/textinput/inc -I/reproducer/source/core/clingutils/inc -I/reproducer/source/core/base/v7/inc -I/reproducer/source/core/foundation/v7/inc -I/reproducer/source/core/unix/inc -I/usr/include -I/reproducer/source/builtins/xxhash -I/reproducer/source/builtins/lz4 -I/reproducer/source/builtins/zstd ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:5185,energy efficiency,core,core,5185,eproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -I/reproducer/build/include -I/reproducer/build/ginclude -I/reproducer/source/core/base/inc -I/reproducer/source/core/foundation/inc -I/reproducer/source/core/cont/inc -I/reproducer/source/core/gui/inc -I/reproducer/source/core/meta/inc -I/reproducer/source/core/clib/inc -I/reproducer/source/core/rint/inc -I/reproducer/source/core/zip/inc -I/reproducer/source/core/thread/inc -I/reproducer/source/core/textinput/inc -I/reproducer/source/core/clingutils/inc -I/reproducer/source/core/base/v7/inc -I/reproducer/source/core/foundation/v7/inc -I/reproducer/source/core/unix/inc -I/usr/include -I/reproducer/source/builtins/xxhash -I/reproducer/source/builtins/lz4 -I/reproducer/source/builtins/zstd ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h T,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:5225,energy efficiency,core,core,5225,PCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -I/reproducer/build/include -I/reproducer/build/ginclude -I/reproducer/source/core/base/inc -I/reproducer/source/core/foundation/inc -I/reproducer/source/core/cont/inc -I/reproducer/source/core/gui/inc -I/reproducer/source/core/meta/inc -I/reproducer/source/core/clib/inc -I/reproducer/source/core/rint/inc -I/reproducer/source/core/zip/inc -I/reproducer/source/core/thread/inc -I/reproducer/source/core/textinput/inc -I/reproducer/source/core/clingutils/inc -I/reproducer/source/core/base/v7/inc -I/reproducer/source/core/foundation/v7/inc -I/reproducer/source/core/unix/inc -I/usr/include -I/reproducer/source/builtins/xxhash -I/reproducer/source/builtins/lz4 -I/reproducer/source/builtins/zstd ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h T,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:5266,energy efficiency,core,core,5266,uiltin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -I/reproducer/build/include -I/reproducer/build/ginclude -I/reproducer/source/core/base/inc -I/reproducer/source/core/foundation/inc -I/reproducer/source/core/cont/inc -I/reproducer/source/core/gui/inc -I/reproducer/source/core/meta/inc -I/reproducer/source/core/clib/inc -I/reproducer/source/core/rint/inc -I/reproducer/source/core/zip/inc -I/reproducer/source/core/thread/inc -I/reproducer/source/core/textinput/inc -I/reproducer/source/core/clingutils/inc -I/reproducer/source/core/base/v7/inc -I/reproducer/source/core/foundation/v7/inc -I/reproducer/source/core/unix/inc -I/usr/include -I/reproducer/source/builtins/xxhash -I/reproducer/source/builtins/lz4 -I/reproducer/source/builtins/zstd ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOC,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:5304,energy efficiency,core,core,5304,ndation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -I/reproducer/build/include -I/reproducer/build/ginclude -I/reproducer/source/core/base/inc -I/reproducer/source/core/foundation/inc -I/reproducer/source/core/cont/inc -I/reproducer/source/core/gui/inc -I/reproducer/source/core/meta/inc -I/reproducer/source/core/clib/inc -I/reproducer/source/core/rint/inc -I/reproducer/source/core/zip/inc -I/reproducer/source/core/thread/inc -I/reproducer/source/core/textinput/inc -I/reproducer/source/core/clingutils/inc -I/reproducer/source/core/base/v7/inc -I/reproducer/source/core/foundation/v7/inc -I/reproducer/source/core/unix/inc -I/usr/include -I/reproducer/source/builtins/xxhash -I/reproducer/source/builtins/lz4 -I/reproducer/source/builtins/zstd ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:5348,energy efficiency,core,core,5348,ation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -I/reproducer/build/include -I/reproducer/build/ginclude -I/reproducer/source/core/base/inc -I/reproducer/source/core/foundation/inc -I/reproducer/source/core/cont/inc -I/reproducer/source/core/gui/inc -I/reproducer/source/core/meta/inc -I/reproducer/source/core/clib/inc -I/reproducer/source/core/rint/inc -I/reproducer/source/core/zip/inc -I/reproducer/source/core/thread/inc -I/reproducer/source/core/textinput/inc -I/reproducer/source/core/clingutils/inc -I/reproducer/source/core/base/v7/inc -I/reproducer/source/core/foundation/v7/inc -I/reproducer/source/core/unix/inc -I/usr/include -I/reproducer/source/builtins/xxhash -I/reproducer/source/builtins/lz4 -I/reproducer/source/builtins/zstd ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TS,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:8297,energy efficiency,core,core,8297,"ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx TUnixSystem.h root_std_complex.h GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:8345,energy efficiency,Core,Core,8345,"pan.hxx ROOT/TypeTraits.hxx TUnixSystem.h root_std_complex.h GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:435,integrability,version,version,435,"`runtime_cxxmodules` fails to build with GCC12; ```console. ❯ cat reproducer.def. Bootstrap: docker. From: fedora:36. %post. dnf -y update. dnf -y install git make cmake gcc-c++ gcc binutils ninja-build \. libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance param",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:545,integrability,version,version,545,"`runtime_cxxmodules` fails to build with GCC12; ```console. ❯ cat reproducer.def. Bootstrap: docker. From: fedora:36. %post. dnf -y update. dnf -y install git make cmake gcc-c++ gcc binutils ninja-build \. libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance param",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:566,integrability,version,version,566,"`runtime_cxxmodules` fails to build with GCC12; ```console. ❯ cat reproducer.def. Bootstrap: docker. From: fedora:36. %post. dnf -y update. dnf -y install git make cmake gcc-c++ gcc binutils ninja-build \. libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance param",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1932,integrability,pub,public,1932,"uthor: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:2301,integrability,version,version,2301,"t's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:2628,integrability,Configur,Configuration,2628,"initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:3523,integrability,Configur,Configuring,3523,"S FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm. cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:5604,integrability,Messag,MessageTypes,5604,-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -I/reproducer/build/include -I/reproducer/build/ginclude -I/reproducer/source/core/base/inc -I/reproducer/source/core/foundation/inc -I/reproducer/source/core/cont/inc -I/reproducer/source/core/gui/inc -I/reproducer/source/core/meta/inc -I/reproducer/source/core/clib/inc -I/reproducer/source/core/rint/inc -I/reproducer/source/core/zip/inc -I/reproducer/source/core/thread/inc -I/reproducer/source/core/textinput/inc -I/reproducer/source/core/clingutils/inc -I/reproducer/source/core/base/v7/inc -I/reproducer/source/core/foundation/v7/inc -I/reproducer/source/core/unix/inc -I/usr/include -I/reproducer/source/builtins/xxhash -I/reproducer/source/builtins/lz4 -I/reproducer/source/builtins/zstd ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtualPadPain,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:3141,interoperability,Share,Shared,3141,"ed in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm. cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:3482,interoperability,share,shared,3482,"anty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm. cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:3515,interoperability,xml,xml,3515,"TY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm. cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:5604,interoperability,Messag,MessageTypes,5604,-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -I/reproducer/build/include -I/reproducer/build/ginclude -I/reproducer/source/core/base/inc -I/reproducer/source/core/foundation/inc -I/reproducer/source/core/cont/inc -I/reproducer/source/core/gui/inc -I/reproducer/source/core/meta/inc -I/reproducer/source/core/clib/inc -I/reproducer/source/core/rint/inc -I/reproducer/source/core/zip/inc -I/reproducer/source/core/thread/inc -I/reproducer/source/core/textinput/inc -I/reproducer/source/core/clingutils/inc -I/reproducer/source/core/base/v7/inc -I/reproducer/source/core/foundation/v7/inc -I/reproducer/source/core/unix/inc -I/usr/include -I/reproducer/source/builtins/xxhash -I/reproducer/source/builtins/lz4 -I/reproducer/source/builtins/zstd ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtualPadPain,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:435,modifiability,version,version,435,"`runtime_cxxmodules` fails to build with GCC12; ```console. ❯ cat reproducer.def. Bootstrap: docker. From: fedora:36. %post. dnf -y update. dnf -y install git make cmake gcc-c++ gcc binutils ninja-build \. libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance param",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:545,modifiability,version,version,545,"`runtime_cxxmodules` fails to build with GCC12; ```console. ❯ cat reproducer.def. Bootstrap: docker. From: fedora:36. %post. dnf -y update. dnf -y install git make cmake gcc-c++ gcc binutils ninja-build \. libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance param",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:566,modifiability,version,version,566,"`runtime_cxxmodules` fails to build with GCC12; ```console. ❯ cat reproducer.def. Bootstrap: docker. From: fedora:36. %post. dnf -y update. dnf -y install git make cmake gcc-c++ gcc binutils ninja-build \. libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance param",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1037,modifiability,paramet,parameter,1037,"CC12; ```console. ❯ cat reproducer.def. Bootstrap: docker. From: fedora:36. %post. dnf -y update. dnf -y install git make cmake gcc-c++ gcc binutils ninja-build \. libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is exp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1151,modifiability,paramet,parameter,1151,"it make cmake gcc-c++ gcc binutils ninja-build \. libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a sing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1232,modifiability,paramet,parameter,1232,"t-devel libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1334,modifiability,paramet,parameter,1334," clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1380,modifiability,paramet,parameter,1380,"oot-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Softw",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1566,modifiability,paramet,parameter,1566,"on 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinj",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1643,modifiability,paramet,parameter,1643,"ip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. Syste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1839,modifiability,paramet,parameters,1839,"a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagno",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1970,modifiability,exten,extended,1970,"n.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1995,modifiability,paramet,parameter,1995,":58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:2244,modifiability,paramet,parameter,2244,"would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:2301,modifiability,version,version,2301,"t's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:2628,modifiability,Configur,Configuration,2628,"initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:3133,modifiability,Modul,Module,3133," only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm. cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:3523,modifiability,Configur,Configuring,3523,"S FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm. cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:8337,modifiability,modul,module,8337," ROOT/span.hxx ROOT/TypeTraits.hxx TUnixSystem.h root_std_complex.h GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /repr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:8368,modifiability,modul,module,8368,"hxx TUnixSystem.h root_std_complex.h GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:8435,modifiability,modul,module-includes,8435,"er.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:5:10: note: std.algorithm defined here. module ""algorithm"" {. ^. /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:9237,modifiability,modul,module,9237,"TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:5:10: note: std.algorithm defined here. module ""algorithm"" {. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.array'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:9:10: note: std.array defined here. module ""array"" {. ^. (...skip many more...). ```. Building with `-Druntime_cxxmodules=OFF` succeeds. Note: Details for the [GCC 12.0.1](https://src.fedoraproject.org/rpms/gcc/blob/7198391f753717bdc336bf84860c1decf220b524/f/gcc.spec) used above. [full_log.txt](https://github.com/root-project/root/files/8581364/full_log.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:9367,modifiability,modul,modulemap,9367,"TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:5:10: note: std.algorithm defined here. module ""algorithm"" {. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.array'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:9:10: note: std.array defined here. module ""array"" {. ^. (...skip many more...). ```. Building with `-Druntime_cxxmodules=OFF` succeeds. Note: Details for the [GCC 12.0.1](https://src.fedoraproject.org/rpms/gcc/blob/7198391f753717bdc336bf84860c1decf220b524/f/gcc.spec) used above. [full_log.txt](https://github.com/root-project/root/files/8581364/full_log.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:9417,modifiability,modul,module,9417,"TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:5:10: note: std.algorithm defined here. module ""algorithm"" {. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.array'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:9:10: note: std.array defined here. module ""array"" {. ^. (...skip many more...). ```. Building with `-Druntime_cxxmodules=OFF` succeeds. Note: Details for the [GCC 12.0.1](https://src.fedoraproject.org/rpms/gcc/blob/7198391f753717bdc336bf84860c1decf220b524/f/gcc.spec) used above. [full_log.txt](https://github.com/root-project/root/files/8581364/full_log.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:9678,modifiability,modul,module,9678,"TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:5:10: note: std.algorithm defined here. module ""algorithm"" {. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.array'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:9:10: note: std.array defined here. module ""array"" {. ^. (...skip many more...). ```. Building with `-Druntime_cxxmodules=OFF` succeeds. Note: Details for the [GCC 12.0.1](https://src.fedoraproject.org/rpms/gcc/blob/7198391f753717bdc336bf84860c1decf220b524/f/gcc.spec) used above. [full_log.txt](https://github.com/root-project/root/files/8581364/full_log.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:9804,modifiability,modul,modulemap,9804,"TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:5:10: note: std.algorithm defined here. module ""algorithm"" {. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.array'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:9:10: note: std.array defined here. module ""array"" {. ^. (...skip many more...). ```. Building with `-Druntime_cxxmodules=OFF` succeeds. Note: Details for the [GCC 12.0.1](https://src.fedoraproject.org/rpms/gcc/blob/7198391f753717bdc336bf84860c1decf220b524/f/gcc.spec) used above. [full_log.txt](https://github.com/root-project/root/files/8581364/full_log.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:9850,modifiability,modul,module,9850,"TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:5:10: note: std.algorithm defined here. module ""algorithm"" {. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.array'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:9:10: note: std.array defined here. module ""array"" {. ^. (...skip many more...). ```. Building with `-Druntime_cxxmodules=OFF` succeeds. Note: Details for the [GCC 12.0.1](https://src.fedoraproject.org/rpms/gcc/blob/7198391f753717bdc336bf84860c1decf220b524/f/gcc.spec) used above. [full_log.txt](https://github.com/root-project/root/files/8581364/full_log.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1047,performance,error,errors,1047,"`console. ❯ cat reproducer.def. Bootstrap: docker. From: fedora:36. %post. dnf -y update. dnf -y install git make cmake gcc-c++ gcc binutils ninja-build \. libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1242,performance,error,errors,1242,"libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1344,performance,error,errors,1344,"b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1390,performance,error,errors,1390,"ect/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foun",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1443,performance,error,error,1443,"ake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1533,performance,error,errors,1533,"larity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1653,performance,error,errors,1653,"+ mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1824,performance,error,error,1824,"og. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:2013,performance,error,error,2013,"0. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:2254,performance,error,errors,2254," redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:8854,performance,error,error,8854,"TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:5:10: note: std.algorithm defined here. module ""algorithm"" {. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.array'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:9:10: note: std.array defined here. module ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:9191,performance,time,times,9191,"TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:5:10: note: std.algorithm defined here. module ""algorithm"" {. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.array'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:9:10: note: std.array defined here. module ""array"" {. ^. (...skip many more...). ```. Building with `-Druntime_cxxmodules=OFF` succeeds. Note: Details for the [GCC 12.0.1](https://src.fedoraproject.org/rpms/gcc/blob/7198391f753717bdc336bf84860c1decf220b524/f/gcc.spec) used above. [full_log.txt](https://github.com/root-project/root/files/8581364/full_log.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:9632,performance,time,times,9632,"TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:5:10: note: std.algorithm defined here. module ""algorithm"" {. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.array'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:9:10: note: std.array defined here. module ""array"" {. ^. (...skip many more...). ```. Building with `-Druntime_cxxmodules=OFF` succeeds. Note: Details for the [GCC 12.0.1](https://src.fedoraproject.org/rpms/gcc/blob/7198391f753717bdc336bf84860c1decf220b524/f/gcc.spec) used above. [full_log.txt](https://github.com/root-project/root/files/8581364/full_log.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:21,reliability,fail,fails,21,"`runtime_cxxmodules` fails to build with GCC12; ```console. ❯ cat reproducer.def. Bootstrap: docker. From: fedora:36. %post. dnf -y update. dnf -y install git make cmake gcc-c++ gcc binutils ninja-build \. libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance param",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1258,reliability,redundan,redundant,1258,"on openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1985,reliability,toleran,tolerance,1985," Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:3717,reliability,FAIL,FAILED,3717,"with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm. cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-lin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:132,safety,updat,update,132,"`runtime_cxxmodules` fails to build with GCC12; ```console. ❯ cat reproducer.def. Bootstrap: docker. From: fedora:36. %post. dnf -y update. dnf -y install git make cmake gcc-c++ gcc binutils ninja-build \. libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance param",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:424,safety,log,log,424,"`runtime_cxxmodules` fails to build with GCC12; ```console. ❯ cat reproducer.def. Bootstrap: docker. From: fedora:36. %post. dnf -y update. dnf -y install git make cmake gcc-c++ gcc binutils ninja-build \. libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance param",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:826,safety,log,log,826,"`runtime_cxxmodules` fails to build with GCC12; ```console. ❯ cat reproducer.def. Bootstrap: docker. From: fedora:36. %post. dnf -y update. dnf -y install git make cmake gcc-c++ gcc binutils ninja-build \. libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance param",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1047,safety,error,errors,1047,"`console. ❯ cat reproducer.def. Bootstrap: docker. From: fedora:36. %post. dnf -y update. dnf -y install git make cmake gcc-c++ gcc binutils ninja-build \. libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1242,safety,error,errors,1242,"libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1258,safety,redund,redundant,1258,"on openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1344,safety,error,errors,1344,"b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1390,safety,error,errors,1390,"ect/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foun",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1443,safety,error,error,1443,"ake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1533,safety,error,errors,1533,"larity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1653,safety,error,errors,1653,"+ mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1824,safety,error,error,1824,"og. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:2013,safety,error,error,2013,"0. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:2164,safety,test,test,2164,"es and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:2194,safety,test,testRooAbsPdf,2194,"en though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enable",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:2214,safety,test,test,2214,"ring the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:2254,safety,error,errors,2254," redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:3133,safety,Modul,Module,3133," only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm. cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:3400,safety,except,exceptions,3400," This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm. cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:8337,safety,modul,module,8337," ROOT/span.hxx ROOT/TypeTraits.hxx TUnixSystem.h root_std_complex.h GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /repr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:8368,safety,modul,module,8368,"hxx TUnixSystem.h root_std_complex.h GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:8435,safety,modul,module-includes,8435,"er.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:5:10: note: std.algorithm defined here. module ""algorithm"" {. ^. /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:8854,safety,error,error,8854,"TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:5:10: note: std.algorithm defined here. module ""algorithm"" {. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.array'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:9:10: note: std.array defined here. module ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:9237,safety,modul,module,9237,"TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:5:10: note: std.algorithm defined here. module ""algorithm"" {. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.array'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:9:10: note: std.array defined here. module ""array"" {. ^. (...skip many more...). ```. Building with `-Druntime_cxxmodules=OFF` succeeds. Note: Details for the [GCC 12.0.1](https://src.fedoraproject.org/rpms/gcc/blob/7198391f753717bdc336bf84860c1decf220b524/f/gcc.spec) used above. [full_log.txt](https://github.com/root-project/root/files/8581364/full_log.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:9367,safety,modul,modulemap,9367,"TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:5:10: note: std.algorithm defined here. module ""algorithm"" {. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.array'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:9:10: note: std.array defined here. module ""array"" {. ^. (...skip many more...). ```. Building with `-Druntime_cxxmodules=OFF` succeeds. Note: Details for the [GCC 12.0.1](https://src.fedoraproject.org/rpms/gcc/blob/7198391f753717bdc336bf84860c1decf220b524/f/gcc.spec) used above. [full_log.txt](https://github.com/root-project/root/files/8581364/full_log.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:9417,safety,modul,module,9417,"TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:5:10: note: std.algorithm defined here. module ""algorithm"" {. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.array'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:9:10: note: std.array defined here. module ""array"" {. ^. (...skip many more...). ```. Building with `-Druntime_cxxmodules=OFF` succeeds. Note: Details for the [GCC 12.0.1](https://src.fedoraproject.org/rpms/gcc/blob/7198391f753717bdc336bf84860c1decf220b524/f/gcc.spec) used above. [full_log.txt](https://github.com/root-project/root/files/8581364/full_log.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:9678,safety,modul,module,9678,"TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:5:10: note: std.algorithm defined here. module ""algorithm"" {. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.array'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:9:10: note: std.array defined here. module ""array"" {. ^. (...skip many more...). ```. Building with `-Druntime_cxxmodules=OFF` succeeds. Note: Details for the [GCC 12.0.1](https://src.fedoraproject.org/rpms/gcc/blob/7198391f753717bdc336bf84860c1decf220b524/f/gcc.spec) used above. [full_log.txt](https://github.com/root-project/root/files/8581364/full_log.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:9804,safety,modul,modulemap,9804,"TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:5:10: note: std.algorithm defined here. module ""algorithm"" {. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.array'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:9:10: note: std.array defined here. module ""array"" {. ^. (...skip many more...). ```. Building with `-Druntime_cxxmodules=OFF` succeeds. Note: Details for the [GCC 12.0.1](https://src.fedoraproject.org/rpms/gcc/blob/7198391f753717bdc336bf84860c1decf220b524/f/gcc.spec) used above. [full_log.txt](https://github.com/root-project/root/files/8581364/full_log.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:9850,safety,modul,module,9850,"TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:2:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:. In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'. inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:5:10: note: std.algorithm defined here. module ""algorithm"" {. ^. /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.array'. # include <bits/utility.h> // for std::tuple_element, std::tuple_size. ^. /reproducer/build/etc/cling/std.modulemap:9:10: note: std.array defined here. module ""array"" {. ^. (...skip many more...). ```. Building with `-Druntime_cxxmodules=OFF` succeeds. Note: Details for the [GCC 12.0.1](https://src.fedoraproject.org/rpms/gcc/blob/7198391f753717bdc336bf84860c1decf220b524/f/gcc.spec) used above. [full_log.txt](https://github.com/root-project/root/files/8581364/full_log.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:132,security,updat,update,132,"`runtime_cxxmodules` fails to build with GCC12; ```console. ❯ cat reproducer.def. Bootstrap: docker. From: fedora:36. %post. dnf -y update. dnf -y install git make cmake gcc-c++ gcc binutils ninja-build \. libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance param",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:424,security,log,log,424,"`runtime_cxxmodules` fails to build with GCC12; ```console. ❯ cat reproducer.def. Bootstrap: docker. From: fedora:36. %post. dnf -y update. dnf -y install git make cmake gcc-c++ gcc binutils ninja-build \. libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance param",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:826,security,log,log,826,"`runtime_cxxmodules` fails to build with GCC12; ```console. ❯ cat reproducer.def. Bootstrap: docker. From: fedora:36. %post. dnf -y update. dnf -y install git make cmake gcc-c++ gcc binutils ninja-build \. libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance param",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:934,security,Auth,Author,934,"`runtime_cxxmodules` fails to build with GCC12; ```console. ❯ cat reproducer.def. Bootstrap: docker. From: fedora:36. %post. dnf -y update. dnf -y install git make cmake gcc-c++ gcc binutils ninja-build \. libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel. dnf -y clean all. mkdir /reproducer && cd /reproducer. git clone -b master --depth 1 http://github.com/root-project/root source. git -C source log. gcc --version. cmake -GNinja -S source -B build -Dxrootd=OFF. cmake --build build. ```. ```console. ❯ singularity --version. singularity version 3.8.7-1.fc35. ❯ singularity build -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance param",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1600,security,ident,identical,1600,"ld -f reproducer.sif reproducer.def. (...skip...). + mkdir /reproducer. + cd /reproducer. + git clone -b master --depth 1 http://github.com/root-project/root source. Cloning into 'source'... (...skip...). + git -C source log. commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:1915,security,sign,signature,1915,"origin/HEAD). Author: Jonas Rembser <jonas.rembser@cern.ch>. Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter. values and covariance matrix values. Even though comparing the final. parameter errors would be redundant with the covariance matrix checks,. it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the. initial error determins the initial step size which influences the. minimization path. If initial errors are different, the final. parameter values are almost never identical. Catching differences in initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DN",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:2628,security,Configur,Configuration,2628,"initial parameter errors informs the user. that differences in fit result are because of the starting. conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check. the error of final parameters because there is no comparison of. covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a. tolerance parameter for the error comparison. This is expected to not. break user code, because the function was only introduced in 6.26 and is. so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:3173,security,hash,hash-style,3173,"W2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors. correctly, which is now fixed. + gcc --version. gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0). Copyright (C) 2022 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm. cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -exclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:3489,security,ssl,ssl,3489,"not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm. cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
https://github.com/root-project/root/issues/10478:3523,security,Configur,Configuring,3523,"S FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF. (...skip...). -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64. Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64). Build type Release. Install path /usr/local. Compiler GNU 12.0.1. Compiler flags:. C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml. -- Configuring done. -- Generating done. -- Build files have been written to: /reproducer/build. + cmake --build build. (...skip...). ```. ```. [7047/9103] Generating G__Core.cxx, ../lib/Core.pcm. FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm. cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10478
