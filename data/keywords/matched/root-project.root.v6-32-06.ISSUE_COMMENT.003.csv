id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/547:569,modifiability,layer,layer,569,"Focusing on CID 68746 as an example:. Your patch has. ```. template<typename Architecture_t>. TLayer<Architecture_t>::TLayer(const TLayer &layer). : fBatchSize(layer.fBatchSize), fInputWidth(layer.fInputWidth),. fWidth(layer.fWidth), fDropoutProbability(layer.fDropoutProbability),. fWeights(layer.fWidth, layer.fInputWidth), fBiases(layer.fWidth, 1),. ```. while Coverity sees. ```. template<typename Architecture_t>. TLayer<Architecture_t>::TLayer(const TLayer &layer). : fBatchSize(layer.fBatchSize),. fInputWidth(layer.fInputWidth), fWidth(layer.fWidth),. fWeights(layer.fWidth, layer.fInputWidth), fBiases(layer.fWidth, 1),. fOutput(layer.fBatchSize, layer.fWidth),. ```. So Coverity is correct for the code it sees, only that's not the code we have. I.e. as I suspected: a build issue with our Jenkins job, or a database issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/547
https://github.com/root-project/root/pull/547:583,modifiability,layer,layer,583,"Focusing on CID 68746 as an example:. Your patch has. ```. template<typename Architecture_t>. TLayer<Architecture_t>::TLayer(const TLayer &layer). : fBatchSize(layer.fBatchSize), fInputWidth(layer.fInputWidth),. fWidth(layer.fWidth), fDropoutProbability(layer.fDropoutProbability),. fWeights(layer.fWidth, layer.fInputWidth), fBiases(layer.fWidth, 1),. ```. while Coverity sees. ```. template<typename Architecture_t>. TLayer<Architecture_t>::TLayer(const TLayer &layer). : fBatchSize(layer.fBatchSize),. fInputWidth(layer.fInputWidth), fWidth(layer.fWidth),. fWeights(layer.fWidth, layer.fInputWidth), fBiases(layer.fWidth, 1),. fOutput(layer.fBatchSize, layer.fWidth),. ```. So Coverity is correct for the code it sees, only that's not the code we have. I.e. as I suspected: a build issue with our Jenkins job, or a database issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/547
https://github.com/root-project/root/pull/547:611,modifiability,layer,layer,611,"Focusing on CID 68746 as an example:. Your patch has. ```. template<typename Architecture_t>. TLayer<Architecture_t>::TLayer(const TLayer &layer). : fBatchSize(layer.fBatchSize), fInputWidth(layer.fInputWidth),. fWidth(layer.fWidth), fDropoutProbability(layer.fDropoutProbability),. fWeights(layer.fWidth, layer.fInputWidth), fBiases(layer.fWidth, 1),. ```. while Coverity sees. ```. template<typename Architecture_t>. TLayer<Architecture_t>::TLayer(const TLayer &layer). : fBatchSize(layer.fBatchSize),. fInputWidth(layer.fInputWidth), fWidth(layer.fWidth),. fWeights(layer.fWidth, layer.fInputWidth), fBiases(layer.fWidth, 1),. fOutput(layer.fBatchSize, layer.fWidth),. ```. So Coverity is correct for the code it sees, only that's not the code we have. I.e. as I suspected: a build issue with our Jenkins job, or a database issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/547
https://github.com/root-project/root/pull/547:638,modifiability,layer,layer,638,"Focusing on CID 68746 as an example:. Your patch has. ```. template<typename Architecture_t>. TLayer<Architecture_t>::TLayer(const TLayer &layer). : fBatchSize(layer.fBatchSize), fInputWidth(layer.fInputWidth),. fWidth(layer.fWidth), fDropoutProbability(layer.fDropoutProbability),. fWeights(layer.fWidth, layer.fInputWidth), fBiases(layer.fWidth, 1),. ```. while Coverity sees. ```. template<typename Architecture_t>. TLayer<Architecture_t>::TLayer(const TLayer &layer). : fBatchSize(layer.fBatchSize),. fInputWidth(layer.fInputWidth), fWidth(layer.fWidth),. fWeights(layer.fWidth, layer.fInputWidth), fBiases(layer.fWidth, 1),. fOutput(layer.fBatchSize, layer.fWidth),. ```. So Coverity is correct for the code it sees, only that's not the code we have. I.e. as I suspected: a build issue with our Jenkins job, or a database issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/547
https://github.com/root-project/root/pull/547:656,modifiability,layer,layer,656,"Focusing on CID 68746 as an example:. Your patch has. ```. template<typename Architecture_t>. TLayer<Architecture_t>::TLayer(const TLayer &layer). : fBatchSize(layer.fBatchSize), fInputWidth(layer.fInputWidth),. fWidth(layer.fWidth), fDropoutProbability(layer.fDropoutProbability),. fWeights(layer.fWidth, layer.fInputWidth), fBiases(layer.fWidth, 1),. ```. while Coverity sees. ```. template<typename Architecture_t>. TLayer<Architecture_t>::TLayer(const TLayer &layer). : fBatchSize(layer.fBatchSize),. fInputWidth(layer.fInputWidth), fWidth(layer.fWidth),. fWeights(layer.fWidth, layer.fInputWidth), fBiases(layer.fWidth, 1),. fOutput(layer.fBatchSize, layer.fWidth),. ```. So Coverity is correct for the code it sees, only that's not the code we have. I.e. as I suspected: a build issue with our Jenkins job, or a database issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/547
https://github.com/root-project/root/pull/547:43,safety,patch,patch,43,"Focusing on CID 68746 as an example:. Your patch has. ```. template<typename Architecture_t>. TLayer<Architecture_t>::TLayer(const TLayer &layer). : fBatchSize(layer.fBatchSize), fInputWidth(layer.fInputWidth),. fWidth(layer.fWidth), fDropoutProbability(layer.fDropoutProbability),. fWeights(layer.fWidth, layer.fInputWidth), fBiases(layer.fWidth, 1),. ```. while Coverity sees. ```. template<typename Architecture_t>. TLayer<Architecture_t>::TLayer(const TLayer &layer). : fBatchSize(layer.fBatchSize),. fInputWidth(layer.fInputWidth), fWidth(layer.fWidth),. fWeights(layer.fWidth, layer.fInputWidth), fBiases(layer.fWidth, 1),. fOutput(layer.fBatchSize, layer.fWidth),. ```. So Coverity is correct for the code it sees, only that's not the code we have. I.e. as I suspected: a build issue with our Jenkins job, or a database issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/547
https://github.com/root-project/root/pull/547:43,security,patch,patch,43,"Focusing on CID 68746 as an example:. Your patch has. ```. template<typename Architecture_t>. TLayer<Architecture_t>::TLayer(const TLayer &layer). : fBatchSize(layer.fBatchSize), fInputWidth(layer.fInputWidth),. fWidth(layer.fWidth), fDropoutProbability(layer.fDropoutProbability),. fWeights(layer.fWidth, layer.fInputWidth), fBiases(layer.fWidth, 1),. ```. while Coverity sees. ```. template<typename Architecture_t>. TLayer<Architecture_t>::TLayer(const TLayer &layer). : fBatchSize(layer.fBatchSize),. fInputWidth(layer.fInputWidth), fWidth(layer.fWidth),. fWeights(layer.fWidth, layer.fInputWidth), fBiases(layer.fWidth, 1),. fOutput(layer.fBatchSize, layer.fWidth),. ```. So Coverity is correct for the code it sees, only that's not the code we have. I.e. as I suspected: a build issue with our Jenkins job, or a database issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/547
https://github.com/root-project/root/pull/547:31,testability,understand,understand,31,"Thanks, @Axel-Naumann! I don't understand why the code is different. Where is coverity taking it from?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/547
https://github.com/root-project/root/pull/547:39,deployability,artifact,artifact,39,"Uh, sorry about that, it was a merging artifact from @harveyj1953 history divergence. We updated his PR submission workflow and this shouldn't happen anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/547
https://github.com/root-project/root/pull/547:89,deployability,updat,updated,89,"Uh, sorry about that, it was a merging artifact from @harveyj1953 history divergence. We updated his PR submission workflow and this shouldn't happen anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/547
https://github.com/root-project/root/pull/547:104,integrability,sub,submission,104,"Uh, sorry about that, it was a merging artifact from @harveyj1953 history divergence. We updated his PR submission workflow and this shouldn't happen anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/547
https://github.com/root-project/root/pull/547:89,safety,updat,updated,89,"Uh, sorry about that, it was a merging artifact from @harveyj1953 history divergence. We updated his PR submission workflow and this shouldn't happen anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/547
https://github.com/root-project/root/pull/547:89,security,updat,updated,89,"Uh, sorry about that, it was a merging artifact from @harveyj1953 history divergence. We updated his PR submission workflow and this shouldn't happen anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/547
https://github.com/root-project/root/pull/547:115,usability,workflow,workflow,115,"Uh, sorry about that, it was a merging artifact from @harveyj1953 history divergence. We updated his PR submission workflow and this shouldn't happen anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/547
https://github.com/root-project/root/pull/547:227,availability,down,down,227,"The problem was that CID 68746 was seen by Coverity only in the past (and when asked, Coverity will show the code where it saw it). Coverity correctly reports that this issue does *not* exist in the current ROOT sources. I sat down with John, we couldn't figure out how he ended up fixing a Coverity report that isn't current :-) So let's call it a one-off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/547
https://github.com/root-project/root/pull/547:199,energy efficiency,current,current,199,"The problem was that CID 68746 was seen by Coverity only in the past (and when asked, Coverity will show the code where it saw it). Coverity correctly reports that this issue does *not* exist in the current ROOT sources. I sat down with John, we couldn't figure out how he ended up fixing a Coverity report that isn't current :-) So let's call it a one-off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/547
https://github.com/root-project/root/pull/547:318,energy efficiency,current,current,318,"The problem was that CID 68746 was seen by Coverity only in the past (and when asked, Coverity will show the code where it saw it). Coverity correctly reports that this issue does *not* exist in the current ROOT sources. I sat down with John, we couldn't figure out how he ended up fixing a Coverity report that isn't current :-) So let's call it a one-off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/547
https://github.com/root-project/root/pull/547:175,reliability,doe,does,175,"The problem was that CID 68746 was seen by Coverity only in the past (and when asked, Coverity will show the code where it saw it). Coverity correctly reports that this issue does *not* exist in the current ROOT sources. I sat down with John, we couldn't figure out how he ended up fixing a Coverity report that isn't current :-) So let's call it a one-off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/547
https://github.com/root-project/root/pull/547:81,deployability,build,builds,81,Thanks for re-fixing this after attentively following the incremental and master builds after the merge of the PR which included ccc0521,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/547
https://github.com/root-project/root/pull/548:13,deployability,build,build,13,"Canceled the build, no reason to test a readme change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/548
https://github.com/root-project/root/pull/548:33,safety,test,test,33,"Canceled the build, no reason to test a readme change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/548
https://github.com/root-project/root/pull/548:33,testability,test,test,33,"Canceled the build, no reason to test a readme change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/548
https://github.com/root-project/root/pull/548:0,usability,Cancel,Canceled,0,"Canceled the build, no reason to test a readme change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/548
https://github.com/root-project/root/pull/549:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/549
https://github.com/root-project/root/pull/549:60,reliability,doe,doesn,60,@Axel-Naumann no objections. We noticed that `__cplusplus ` doesn't have proper value yesterday.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/549
https://github.com/root-project/root/pull/550:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/550
https://github.com/root-project/root/pull/551:11,deployability,build,build,11,@phsft-bot build with compiler:clang_gcc62;extra_cmake_options:-Dcxxmodules=On -DCMAKE_VERBOSE_MAKEFILE:BOOL=On !,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/551
https://github.com/root-project/root/pull/551:11,deployability,build,build,11,@phsft-bot build with compiler:clang_gcc62;extra_cmake_options:-Dcxxmodules=On -Dccache=Off -DCMAKE_VERBOSE_MAKEFILE:BOOL=On !,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/551
https://github.com/root-project/root/pull/551:11,deployability,build,build,11,@phsft-bot build with compiler:clang_gcc62;extra_cmake_options:-Dcxxmodules=On -Dccache=Off -DCMAKE_VERBOSE_MAKEFILE:BOOL=On !,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/551
https://github.com/root-project/root/pull/551:0,deployability,Build,Build,0,Build passes for me locally. Pls merge @vgvassilev,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/551
https://github.com/root-project/root/pull/553:6,interoperability,format,format,6,clang-format can be ignored for comments. merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/553
https://github.com/root-project/root/pull/553:103,performance,time,time,103,"@pcanal, hm, the comments have trailing whitespaces. If we decide to ignore this, we should check next time somebody commits 'Whitespace fixes' in the comments...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/553
https://github.com/root-project/root/pull/553:342,usability,clear,clear,342,"@vgvassilev Indeed trailing space are not allowed in neither code nor comments ... . In this case the output from travis showed **also** other type of changes (including alignment) and since the trailing spaces were **not** **highlighted**, it was **very** easy to overlook them ... (see for example the result of git diff that makes it very clear).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/553
https://github.com/root-project/root/pull/555:78,deployability,modul,modulemap,78,This was intentionally re-added because otherwise we cannot generate easily a modulemap if we want to use configure with cxxmodules enabled. This would go away once we remove the configure as it is deprecated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/555
https://github.com/root-project/root/pull/555:106,integrability,configur,configure,106,This was intentionally re-added because otherwise we cannot generate easily a modulemap if we want to use configure with cxxmodules enabled. This would go away once we remove the configure as it is deprecated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/555
https://github.com/root-project/root/pull/555:179,integrability,configur,configure,179,This was intentionally re-added because otherwise we cannot generate easily a modulemap if we want to use configure with cxxmodules enabled. This would go away once we remove the configure as it is deprecated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/555
https://github.com/root-project/root/pull/555:78,modifiability,modul,modulemap,78,This was intentionally re-added because otherwise we cannot generate easily a modulemap if we want to use configure with cxxmodules enabled. This would go away once we remove the configure as it is deprecated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/555
https://github.com/root-project/root/pull/555:106,modifiability,configur,configure,106,This was intentionally re-added because otherwise we cannot generate easily a modulemap if we want to use configure with cxxmodules enabled. This would go away once we remove the configure as it is deprecated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/555
https://github.com/root-project/root/pull/555:179,modifiability,configur,configure,179,This was intentionally re-added because otherwise we cannot generate easily a modulemap if we want to use configure with cxxmodules enabled. This would go away once we remove the configure as it is deprecated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/555
https://github.com/root-project/root/pull/555:78,safety,modul,modulemap,78,This was intentionally re-added because otherwise we cannot generate easily a modulemap if we want to use configure with cxxmodules enabled. This would go away once we remove the configure as it is deprecated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/555
https://github.com/root-project/root/pull/555:106,security,configur,configure,106,This was intentionally re-added because otherwise we cannot generate easily a modulemap if we want to use configure with cxxmodules enabled. This would go away once we remove the configure as it is deprecated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/555
https://github.com/root-project/root/pull/555:179,security,configur,configure,179,This was intentionally re-added because otherwise we cannot generate easily a modulemap if we want to use configure with cxxmodules enabled. This would go away once we remove the configure as it is deprecated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/555
https://github.com/root-project/root/pull/558:27,deployability,modul,modules,27,"Note, this handles now the modules an the non-modules case correctly. So no `if(getenv(""ROOT_MODULES"")) ...` here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/558
https://github.com/root-project/root/pull/558:46,deployability,modul,modules,46,"Note, this handles now the modules an the non-modules case correctly. So no `if(getenv(""ROOT_MODULES"")) ...` here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/558
https://github.com/root-project/root/pull/558:27,modifiability,modul,modules,27,"Note, this handles now the modules an the non-modules case correctly. So no `if(getenv(""ROOT_MODULES"")) ...` here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/558
https://github.com/root-project/root/pull/558:46,modifiability,modul,modules,46,"Note, this handles now the modules an the non-modules case correctly. So no `if(getenv(""ROOT_MODULES"")) ...` here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/558
https://github.com/root-project/root/pull/558:27,safety,modul,modules,27,"Note, this handles now the modules an the non-modules case correctly. So no `if(getenv(""ROOT_MODULES"")) ...` here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/558
https://github.com/root-project/root/pull/558:46,safety,modul,modules,46,"Note, this handles now the modules an the non-modules case correctly. So no `if(getenv(""ROOT_MODULES"")) ...` here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/558
https://github.com/root-project/root/pull/558:87,deployability,updat,update,87,"Shall I merge this? If yes, could you add a FIXME saying that this can go away when we update clang (presumably after our patch lands there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/558
https://github.com/root-project/root/pull/558:122,deployability,patch,patch,122,"Shall I merge this? If yes, could you add a FIXME saying that this can go away when we update clang (presumably after our patch lands there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/558
https://github.com/root-project/root/pull/558:87,safety,updat,update,87,"Shall I merge this? If yes, could you add a FIXME saying that this can go away when we update clang (presumably after our patch lands there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/558
https://github.com/root-project/root/pull/558:122,safety,patch,patch,122,"Shall I merge this? If yes, could you add a FIXME saying that this can go away when we update clang (presumably after our patch lands there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/558
https://github.com/root-project/root/pull/558:87,security,updat,update,87,"Shall I merge this? If yes, could you add a FIXME saying that this can go away when we update clang (presumably after our patch lands there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/558
https://github.com/root-project/root/pull/558:122,security,patch,patch,122,"Shall I merge this? If yes, could you add a FIXME saying that this can go away when we update clang (presumably after our patch lands there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/558
https://github.com/root-project/root/pull/558:49,deployability,updat,update,49,"Sure, let's merge this. It won't bite us when we update clang and I added a FIXME for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/558
https://github.com/root-project/root/pull/558:49,safety,updat,update,49,"Sure, let's merge this. It won't bite us when we update clang and I added a FIXME for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/558
https://github.com/root-project/root/pull/558:49,security,updat,update,49,"Sure, let's merge this. It won't bite us when we update clang and I added a FIXME for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/558
https://github.com/root-project/root/pull/559:32,deployability,patch,patch,32,Hi @suhlatwork . Thanks for the patch. Indeed it represents an improvements. On the other hand I was wondering if the autocompletion of methods could also be solved before merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/559
https://github.com/root-project/root/pull/559:32,safety,patch,patch,32,Hi @suhlatwork . Thanks for the patch. Indeed it represents an improvements. On the other hand I was wondering if the autocompletion of methods could also be solved before merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/559
https://github.com/root-project/root/pull/559:32,security,patch,patch,32,Hi @suhlatwork . Thanks for the patch. Indeed it represents an improvements. On the other hand I was wondering if the autocompletion of methods could also be solved before merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/559
https://github.com/root-project/root/pull/559:158,energy efficiency,current,currently,158,"I am actually not sure that this remaining issue is an issue within ROOT. With the given example I do not find any unusual or unexpected input to the methods currently provided by ROOT's implementation of `MetaKernel`. The `get_completions` method is only called with `a.Da` as an argument, it never actually sees any hint for this double completion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/559
https://github.com/root-project/root/pull/559:137,safety,input,input,137,"I am actually not sure that this remaining issue is an issue within ROOT. With the given example I do not find any unusual or unexpected input to the methods currently provided by ROOT's implementation of `MetaKernel`. The `get_completions` method is only called with `a.Da` as an argument, it never actually sees any hint for this double completion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/559
https://github.com/root-project/root/pull/559:339,safety,compl,completion,339,"I am actually not sure that this remaining issue is an issue within ROOT. With the given example I do not find any unusual or unexpected input to the methods currently provided by ROOT's implementation of `MetaKernel`. The `get_completions` method is only called with `a.Da` as an argument, it never actually sees any hint for this double completion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/559
https://github.com/root-project/root/pull/559:339,security,compl,completion,339,"I am actually not sure that this remaining issue is an issue within ROOT. With the given example I do not find any unusual or unexpected input to the methods currently provided by ROOT's implementation of `MetaKernel`. The `get_completions` method is only called with `a.Da` as an argument, it never actually sees any hint for this double completion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/559
https://github.com/root-project/root/pull/559:137,usability,input,input,137,"I am actually not sure that this remaining issue is an issue within ROOT. With the given example I do not find any unusual or unexpected input to the methods currently provided by ROOT's implementation of `MetaKernel`. The `get_completions` method is only called with `a.Da` as an argument, it never actually sees any hint for this double completion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/559
https://github.com/root-project/root/pull/559:318,usability,hint,hint,318,"I am actually not sure that this remaining issue is an issue within ROOT. With the given example I do not find any unusual or unexpected input to the methods currently provided by ROOT's implementation of `MetaKernel`. The `get_completions` method is only called with `a.Da` as an argument, it never actually sees any hint for this double completion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/559
https://github.com/root-project/root/pull/559:263,energy efficiency,Current,Currently,263,"There seems to be one option to avoid the double completion: One could remove the empty brackets for functions without arguments. That would mean that one always has to type the '()' to call a function, which also seems to be the behaviour of Jupyter for Python. Currently for ROOT notebooks the brackets would be added for functions without arguments, but are in any case already omitted for functions requiring arguments.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/559
https://github.com/root-project/root/pull/559:32,safety,avoid,avoid,32,"There seems to be one option to avoid the double completion: One could remove the empty brackets for functions without arguments. That would mean that one always has to type the '()' to call a function, which also seems to be the behaviour of Jupyter for Python. Currently for ROOT notebooks the brackets would be added for functions without arguments, but are in any case already omitted for functions requiring arguments.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/559
https://github.com/root-project/root/pull/559:49,safety,compl,completion,49,"There seems to be one option to avoid the double completion: One could remove the empty brackets for functions without arguments. That would mean that one always has to type the '()' to call a function, which also seems to be the behaviour of Jupyter for Python. Currently for ROOT notebooks the brackets would be added for functions without arguments, but are in any case already omitted for functions requiring arguments.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/559
https://github.com/root-project/root/pull/559:49,security,compl,completion,49,"There seems to be one option to avoid the double completion: One could remove the empty brackets for functions without arguments. That would mean that one always has to type the '()' to call a function, which also seems to be the behaviour of Jupyter for Python. Currently for ROOT notebooks the brackets would be added for functions without arguments, but are in any case already omitted for functions requiring arguments.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/559
https://github.com/root-project/root/pull/559:230,usability,behavi,behaviour,230,"There seems to be one option to avoid the double completion: One could remove the empty brackets for functions without arguments. That would mean that one always has to type the '()' to call a function, which also seems to be the behaviour of Jupyter for Python. Currently for ROOT notebooks the brackets would be added for functions without arguments, but are in any case already omitted for functions requiring arguments.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/559
https://github.com/root-project/root/pull/559:41,deployability,updat,updated,41,I just pushed this change to GitHub. The updated test is [here](https://gist.github.com/suhlatwork/ef20df8ffeef8cf9212d6535ef2e8137#file-testtcjupyroot_update-py).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/559
https://github.com/root-project/root/pull/559:41,safety,updat,updated,41,I just pushed this change to GitHub. The updated test is [here](https://gist.github.com/suhlatwork/ef20df8ffeef8cf9212d6535ef2e8137#file-testtcjupyroot_update-py).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/559
https://github.com/root-project/root/pull/559:49,safety,test,test,49,I just pushed this change to GitHub. The updated test is [here](https://gist.github.com/suhlatwork/ef20df8ffeef8cf9212d6535ef2e8137#file-testtcjupyroot_update-py).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/559
https://github.com/root-project/root/pull/559:41,security,updat,updated,41,I just pushed this change to GitHub. The updated test is [here](https://gist.github.com/suhlatwork/ef20df8ffeef8cf9212d6535ef2e8137#file-testtcjupyroot_update-py).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/559
https://github.com/root-project/root/pull/559:49,testability,test,test,49,I just pushed this change to GitHub. The updated test is [here](https://gist.github.com/suhlatwork/ef20df8ffeef8cf9212d6535ef2e8137#file-testtcjupyroot_update-py).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/559
https://github.com/root-project/root/pull/559:92,energy efficiency,batter,battery,92,"Hi @suhlatwork,. thanks. I merged that after testing: it looks good. Let's see how the full battery of tests go on all platforms tonight.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/559
https://github.com/root-project/root/pull/559:119,interoperability,platform,platforms,119,"Hi @suhlatwork,. thanks. I merged that after testing: it looks good. Let's see how the full battery of tests go on all platforms tonight.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/559
https://github.com/root-project/root/pull/559:45,safety,test,testing,45,"Hi @suhlatwork,. thanks. I merged that after testing: it looks good. Let's see how the full battery of tests go on all platforms tonight.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/559
https://github.com/root-project/root/pull/559:103,safety,test,tests,103,"Hi @suhlatwork,. thanks. I merged that after testing: it looks good. Let's see how the full battery of tests go on all platforms tonight.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/559
https://github.com/root-project/root/pull/559:45,testability,test,testing,45,"Hi @suhlatwork,. thanks. I merged that after testing: it looks good. Let's see how the full battery of tests go on all platforms tonight.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/559
https://github.com/root-project/root/pull/559:103,testability,test,tests,103,"Hi @suhlatwork,. thanks. I merged that after testing: it looks good. Let's see how the full battery of tests go on all platforms tonight.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/559
https://github.com/root-project/root/pull/561:0,deployability,Build,Building,0,Building failed for some reason. . Is it a problem with master branch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/561
https://github.com/root-project/root/pull/561:9,deployability,fail,failed,9,Building failed for some reason. . Is it a problem with master branch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/561
https://github.com/root-project/root/pull/561:9,reliability,fail,failed,9,Building failed for some reason. . Is it a problem with master branch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/561
https://github.com/root-project/root/pull/562:245,availability,cluster,cluster,245,"For example, the script below sometimes fails because the Mean results are different due to the different ordering of the data. Setting the auto flush to a large number then should get rid of the problem because then there will be only a single cluster in the input tree. ```cpp. #include ""TFile.h"". #include ""TH1F.h"". #include ""TTree.h"". #include <iostream>. #include <random>. #include ""ROOT/TDataFrame.hxx"". void fill_tree(const char *filename, const char *treeName). {. TFile f(filename, ""RECREATE"");. TTree t(treeName, treeName);. t.SetAutoFlush(64); // for creation of clusters to test in MT mode. int b1;. float b2;. t.Branch(""b1"", &b1);. t.Branch(""b2"", &b2);. for (int i = 0; i < 1024 * 64; ++i) {. b1 = i;. b2 = std::rand();. t.Fill();. }. t.Write();. f.Close();. return;. }. class A {. public:. A(){};. A(int i):fI(i){}. int GetI(){return fI;}. private:. int fI = 0;. };. int test_snapshot(). {. ROOT::EnableImplicitMT();. auto fileName = ""test_snapshot.root"";. auto outFileName = ""test_snapshot_output.root"";. auto treeName = ""myTree"";. fill_tree(fileName, treeName);. ROOT::Experimental::TDataFrame d(treeName, fileName);. auto d_cut = d.Filter(""b1 % 2 == 0"");. auto d2 = d_cut.Define(""a"",""A(b1)""). .Define(""b1_square"", ""b1 * b1""). .Define(""b2_vector"", [](float b2){ std::vector<float> v; for (int i=0;i < 3; i++) v.push_back(b2*i); return v;}, {""b2""});. auto snapshot_tdf = d2.Snapshot<int, int, std::vector<float>, A>(treeName, outFileName, {""b1"", ""b1_square"", ""b2_vector"", ""a""});. // Open the new file and list the branches of the tree. TFile f(outFileName);. TTree* t;. f.GetObject(treeName, t);. for (auto branch : *t->GetListOfBranches()) {. std::cout << ""Branch: "" << branch->GetName() << std::endl;. }. f.Close();. auto max_b1 = snapshot_tdf.Max(""b1"");. auto max_a = snapshot_tdf.Define(""a_val"",[](A& a){return a.GetI();},{""a""}).Max(""a_val"");. std::cout << ""Maximum: max(b1) = "" << *max_b1 << "", max(A(b1)) = "" << *max_a << std::endl;. if (*max_b1 != *max_a) {. std::cerr << ""Erro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/562
https://github.com/root-project/root/pull/562:575,availability,cluster,clusters,575,"For example, the script below sometimes fails because the Mean results are different due to the different ordering of the data. Setting the auto flush to a large number then should get rid of the problem because then there will be only a single cluster in the input tree. ```cpp. #include ""TFile.h"". #include ""TH1F.h"". #include ""TTree.h"". #include <iostream>. #include <random>. #include ""ROOT/TDataFrame.hxx"". void fill_tree(const char *filename, const char *treeName). {. TFile f(filename, ""RECREATE"");. TTree t(treeName, treeName);. t.SetAutoFlush(64); // for creation of clusters to test in MT mode. int b1;. float b2;. t.Branch(""b1"", &b1);. t.Branch(""b2"", &b2);. for (int i = 0; i < 1024 * 64; ++i) {. b1 = i;. b2 = std::rand();. t.Fill();. }. t.Write();. f.Close();. return;. }. class A {. public:. A(){};. A(int i):fI(i){}. int GetI(){return fI;}. private:. int fI = 0;. };. int test_snapshot(). {. ROOT::EnableImplicitMT();. auto fileName = ""test_snapshot.root"";. auto outFileName = ""test_snapshot_output.root"";. auto treeName = ""myTree"";. fill_tree(fileName, treeName);. ROOT::Experimental::TDataFrame d(treeName, fileName);. auto d_cut = d.Filter(""b1 % 2 == 0"");. auto d2 = d_cut.Define(""a"",""A(b1)""). .Define(""b1_square"", ""b1 * b1""). .Define(""b2_vector"", [](float b2){ std::vector<float> v; for (int i=0;i < 3; i++) v.push_back(b2*i); return v;}, {""b2""});. auto snapshot_tdf = d2.Snapshot<int, int, std::vector<float>, A>(treeName, outFileName, {""b1"", ""b1_square"", ""b2_vector"", ""a""});. // Open the new file and list the branches of the tree. TFile f(outFileName);. TTree* t;. f.GetObject(treeName, t);. for (auto branch : *t->GetListOfBranches()) {. std::cout << ""Branch: "" << branch->GetName() << std::endl;. }. f.Close();. auto max_b1 = snapshot_tdf.Max(""b1"");. auto max_a = snapshot_tdf.Define(""a_val"",[](A& a){return a.GetI();},{""a""}).Max(""a_val"");. std::cout << ""Maximum: max(b1) = "" << *max_b1 << "", max(A(b1)) = "" << *max_a << std::endl;. if (*max_b1 != *max_a) {. std::cerr << ""Erro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/562
https://github.com/root-project/root/pull/562:1996,availability,Error,Error,1996," the data. Setting the auto flush to a large number then should get rid of the problem because then there will be only a single cluster in the input tree. ```cpp. #include ""TFile.h"". #include ""TH1F.h"". #include ""TTree.h"". #include <iostream>. #include <random>. #include ""ROOT/TDataFrame.hxx"". void fill_tree(const char *filename, const char *treeName). {. TFile f(filename, ""RECREATE"");. TTree t(treeName, treeName);. t.SetAutoFlush(64); // for creation of clusters to test in MT mode. int b1;. float b2;. t.Branch(""b1"", &b1);. t.Branch(""b2"", &b2);. for (int i = 0; i < 1024 * 64; ++i) {. b1 = i;. b2 = std::rand();. t.Fill();. }. t.Write();. f.Close();. return;. }. class A {. public:. A(){};. A(int i):fI(i){}. int GetI(){return fI;}. private:. int fI = 0;. };. int test_snapshot(). {. ROOT::EnableImplicitMT();. auto fileName = ""test_snapshot.root"";. auto outFileName = ""test_snapshot_output.root"";. auto treeName = ""myTree"";. fill_tree(fileName, treeName);. ROOT::Experimental::TDataFrame d(treeName, fileName);. auto d_cut = d.Filter(""b1 % 2 == 0"");. auto d2 = d_cut.Define(""a"",""A(b1)""). .Define(""b1_square"", ""b1 * b1""). .Define(""b2_vector"", [](float b2){ std::vector<float> v; for (int i=0;i < 3; i++) v.push_back(b2*i); return v;}, {""b2""});. auto snapshot_tdf = d2.Snapshot<int, int, std::vector<float>, A>(treeName, outFileName, {""b1"", ""b1_square"", ""b2_vector"", ""a""});. // Open the new file and list the branches of the tree. TFile f(outFileName);. TTree* t;. f.GetObject(treeName, t);. for (auto branch : *t->GetListOfBranches()) {. std::cout << ""Branch: "" << branch->GetName() << std::endl;. }. f.Close();. auto max_b1 = snapshot_tdf.Max(""b1"");. auto max_a = snapshot_tdf.Define(""a_val"",[](A& a){return a.GetI();},{""a""}).Max(""a_val"");. std::cout << ""Maximum: max(b1) = "" << *max_b1 << "", max(A(b1)) = "" << *max_a << std::endl;. if (*max_b1 != *max_a) {. std::cerr << ""Error: the maximum values of two branches which are supposed to be identical differ!\n"";. return 1;. }. return 0;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/562
https://github.com/root-project/root/pull/562:40,deployability,fail,fails,40,"For example, the script below sometimes fails because the Mean results are different due to the different ordering of the data. Setting the auto flush to a large number then should get rid of the problem because then there will be only a single cluster in the input tree. ```cpp. #include ""TFile.h"". #include ""TH1F.h"". #include ""TTree.h"". #include <iostream>. #include <random>. #include ""ROOT/TDataFrame.hxx"". void fill_tree(const char *filename, const char *treeName). {. TFile f(filename, ""RECREATE"");. TTree t(treeName, treeName);. t.SetAutoFlush(64); // for creation of clusters to test in MT mode. int b1;. float b2;. t.Branch(""b1"", &b1);. t.Branch(""b2"", &b2);. for (int i = 0; i < 1024 * 64; ++i) {. b1 = i;. b2 = std::rand();. t.Fill();. }. t.Write();. f.Close();. return;. }. class A {. public:. A(){};. A(int i):fI(i){}. int GetI(){return fI;}. private:. int fI = 0;. };. int test_snapshot(). {. ROOT::EnableImplicitMT();. auto fileName = ""test_snapshot.root"";. auto outFileName = ""test_snapshot_output.root"";. auto treeName = ""myTree"";. fill_tree(fileName, treeName);. ROOT::Experimental::TDataFrame d(treeName, fileName);. auto d_cut = d.Filter(""b1 % 2 == 0"");. auto d2 = d_cut.Define(""a"",""A(b1)""). .Define(""b1_square"", ""b1 * b1""). .Define(""b2_vector"", [](float b2){ std::vector<float> v; for (int i=0;i < 3; i++) v.push_back(b2*i); return v;}, {""b2""});. auto snapshot_tdf = d2.Snapshot<int, int, std::vector<float>, A>(treeName, outFileName, {""b1"", ""b1_square"", ""b2_vector"", ""a""});. // Open the new file and list the branches of the tree. TFile f(outFileName);. TTree* t;. f.GetObject(treeName, t);. for (auto branch : *t->GetListOfBranches()) {. std::cout << ""Branch: "" << branch->GetName() << std::endl;. }. f.Close();. auto max_b1 = snapshot_tdf.Max(""b1"");. auto max_a = snapshot_tdf.Define(""a_val"",[](A& a){return a.GetI();},{""a""}).Max(""a_val"");. std::cout << ""Maximum: max(b1) = "" << *max_b1 << "", max(A(b1)) = "" << *max_a << std::endl;. if (*max_b1 != *max_a) {. std::cerr << ""Erro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/562
https://github.com/root-project/root/pull/562:245,deployability,cluster,cluster,245,"For example, the script below sometimes fails because the Mean results are different due to the different ordering of the data. Setting the auto flush to a large number then should get rid of the problem because then there will be only a single cluster in the input tree. ```cpp. #include ""TFile.h"". #include ""TH1F.h"". #include ""TTree.h"". #include <iostream>. #include <random>. #include ""ROOT/TDataFrame.hxx"". void fill_tree(const char *filename, const char *treeName). {. TFile f(filename, ""RECREATE"");. TTree t(treeName, treeName);. t.SetAutoFlush(64); // for creation of clusters to test in MT mode. int b1;. float b2;. t.Branch(""b1"", &b1);. t.Branch(""b2"", &b2);. for (int i = 0; i < 1024 * 64; ++i) {. b1 = i;. b2 = std::rand();. t.Fill();. }. t.Write();. f.Close();. return;. }. class A {. public:. A(){};. A(int i):fI(i){}. int GetI(){return fI;}. private:. int fI = 0;. };. int test_snapshot(). {. ROOT::EnableImplicitMT();. auto fileName = ""test_snapshot.root"";. auto outFileName = ""test_snapshot_output.root"";. auto treeName = ""myTree"";. fill_tree(fileName, treeName);. ROOT::Experimental::TDataFrame d(treeName, fileName);. auto d_cut = d.Filter(""b1 % 2 == 0"");. auto d2 = d_cut.Define(""a"",""A(b1)""). .Define(""b1_square"", ""b1 * b1""). .Define(""b2_vector"", [](float b2){ std::vector<float> v; for (int i=0;i < 3; i++) v.push_back(b2*i); return v;}, {""b2""});. auto snapshot_tdf = d2.Snapshot<int, int, std::vector<float>, A>(treeName, outFileName, {""b1"", ""b1_square"", ""b2_vector"", ""a""});. // Open the new file and list the branches of the tree. TFile f(outFileName);. TTree* t;. f.GetObject(treeName, t);. for (auto branch : *t->GetListOfBranches()) {. std::cout << ""Branch: "" << branch->GetName() << std::endl;. }. f.Close();. auto max_b1 = snapshot_tdf.Max(""b1"");. auto max_a = snapshot_tdf.Define(""a_val"",[](A& a){return a.GetI();},{""a""}).Max(""a_val"");. std::cout << ""Maximum: max(b1) = "" << *max_b1 << "", max(A(b1)) = "" << *max_a << std::endl;. if (*max_b1 != *max_a) {. std::cerr << ""Erro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/562
https://github.com/root-project/root/pull/562:575,deployability,cluster,clusters,575,"For example, the script below sometimes fails because the Mean results are different due to the different ordering of the data. Setting the auto flush to a large number then should get rid of the problem because then there will be only a single cluster in the input tree. ```cpp. #include ""TFile.h"". #include ""TH1F.h"". #include ""TTree.h"". #include <iostream>. #include <random>. #include ""ROOT/TDataFrame.hxx"". void fill_tree(const char *filename, const char *treeName). {. TFile f(filename, ""RECREATE"");. TTree t(treeName, treeName);. t.SetAutoFlush(64); // for creation of clusters to test in MT mode. int b1;. float b2;. t.Branch(""b1"", &b1);. t.Branch(""b2"", &b2);. for (int i = 0; i < 1024 * 64; ++i) {. b1 = i;. b2 = std::rand();. t.Fill();. }. t.Write();. f.Close();. return;. }. class A {. public:. A(){};. A(int i):fI(i){}. int GetI(){return fI;}. private:. int fI = 0;. };. int test_snapshot(). {. ROOT::EnableImplicitMT();. auto fileName = ""test_snapshot.root"";. auto outFileName = ""test_snapshot_output.root"";. auto treeName = ""myTree"";. fill_tree(fileName, treeName);. ROOT::Experimental::TDataFrame d(treeName, fileName);. auto d_cut = d.Filter(""b1 % 2 == 0"");. auto d2 = d_cut.Define(""a"",""A(b1)""). .Define(""b1_square"", ""b1 * b1""). .Define(""b2_vector"", [](float b2){ std::vector<float> v; for (int i=0;i < 3; i++) v.push_back(b2*i); return v;}, {""b2""});. auto snapshot_tdf = d2.Snapshot<int, int, std::vector<float>, A>(treeName, outFileName, {""b1"", ""b1_square"", ""b2_vector"", ""a""});. // Open the new file and list the branches of the tree. TFile f(outFileName);. TTree* t;. f.GetObject(treeName, t);. for (auto branch : *t->GetListOfBranches()) {. std::cout << ""Branch: "" << branch->GetName() << std::endl;. }. f.Close();. auto max_b1 = snapshot_tdf.Max(""b1"");. auto max_a = snapshot_tdf.Define(""a_val"",[](A& a){return a.GetI();},{""a""}).Max(""a_val"");. std::cout << ""Maximum: max(b1) = "" << *max_b1 << "", max(A(b1)) = "" << *max_a << std::endl;. if (*max_b1 != *max_a) {. std::cerr << ""Erro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/562
https://github.com/root-project/root/pull/562:796,integrability,pub,public,796,"For example, the script below sometimes fails because the Mean results are different due to the different ordering of the data. Setting the auto flush to a large number then should get rid of the problem because then there will be only a single cluster in the input tree. ```cpp. #include ""TFile.h"". #include ""TH1F.h"". #include ""TTree.h"". #include <iostream>. #include <random>. #include ""ROOT/TDataFrame.hxx"". void fill_tree(const char *filename, const char *treeName). {. TFile f(filename, ""RECREATE"");. TTree t(treeName, treeName);. t.SetAutoFlush(64); // for creation of clusters to test in MT mode. int b1;. float b2;. t.Branch(""b1"", &b1);. t.Branch(""b2"", &b2);. for (int i = 0; i < 1024 * 64; ++i) {. b1 = i;. b2 = std::rand();. t.Fill();. }. t.Write();. f.Close();. return;. }. class A {. public:. A(){};. A(int i):fI(i){}. int GetI(){return fI;}. private:. int fI = 0;. };. int test_snapshot(). {. ROOT::EnableImplicitMT();. auto fileName = ""test_snapshot.root"";. auto outFileName = ""test_snapshot_output.root"";. auto treeName = ""myTree"";. fill_tree(fileName, treeName);. ROOT::Experimental::TDataFrame d(treeName, fileName);. auto d_cut = d.Filter(""b1 % 2 == 0"");. auto d2 = d_cut.Define(""a"",""A(b1)""). .Define(""b1_square"", ""b1 * b1""). .Define(""b2_vector"", [](float b2){ std::vector<float> v; for (int i=0;i < 3; i++) v.push_back(b2*i); return v;}, {""b2""});. auto snapshot_tdf = d2.Snapshot<int, int, std::vector<float>, A>(treeName, outFileName, {""b1"", ""b1_square"", ""b2_vector"", ""a""});. // Open the new file and list the branches of the tree. TFile f(outFileName);. TTree* t;. f.GetObject(treeName, t);. for (auto branch : *t->GetListOfBranches()) {. std::cout << ""Branch: "" << branch->GetName() << std::endl;. }. f.Close();. auto max_b1 = snapshot_tdf.Max(""b1"");. auto max_a = snapshot_tdf.Define(""a_val"",[](A& a){return a.GetI();},{""a""}).Max(""a_val"");. std::cout << ""Maximum: max(b1) = "" << *max_b1 << "", max(A(b1)) = "" << *max_a << std::endl;. if (*max_b1 != *max_a) {. std::cerr << ""Erro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/562
https://github.com/root-project/root/pull/562:1150,integrability,Filter,Filter,1150," the data. Setting the auto flush to a large number then should get rid of the problem because then there will be only a single cluster in the input tree. ```cpp. #include ""TFile.h"". #include ""TH1F.h"". #include ""TTree.h"". #include <iostream>. #include <random>. #include ""ROOT/TDataFrame.hxx"". void fill_tree(const char *filename, const char *treeName). {. TFile f(filename, ""RECREATE"");. TTree t(treeName, treeName);. t.SetAutoFlush(64); // for creation of clusters to test in MT mode. int b1;. float b2;. t.Branch(""b1"", &b1);. t.Branch(""b2"", &b2);. for (int i = 0; i < 1024 * 64; ++i) {. b1 = i;. b2 = std::rand();. t.Fill();. }. t.Write();. f.Close();. return;. }. class A {. public:. A(){};. A(int i):fI(i){}. int GetI(){return fI;}. private:. int fI = 0;. };. int test_snapshot(). {. ROOT::EnableImplicitMT();. auto fileName = ""test_snapshot.root"";. auto outFileName = ""test_snapshot_output.root"";. auto treeName = ""myTree"";. fill_tree(fileName, treeName);. ROOT::Experimental::TDataFrame d(treeName, fileName);. auto d_cut = d.Filter(""b1 % 2 == 0"");. auto d2 = d_cut.Define(""a"",""A(b1)""). .Define(""b1_square"", ""b1 * b1""). .Define(""b2_vector"", [](float b2){ std::vector<float> v; for (int i=0;i < 3; i++) v.push_back(b2*i); return v;}, {""b2""});. auto snapshot_tdf = d2.Snapshot<int, int, std::vector<float>, A>(treeName, outFileName, {""b1"", ""b1_square"", ""b2_vector"", ""a""});. // Open the new file and list the branches of the tree. TFile f(outFileName);. TTree* t;. f.GetObject(treeName, t);. for (auto branch : *t->GetListOfBranches()) {. std::cout << ""Branch: "" << branch->GetName() << std::endl;. }. f.Close();. auto max_b1 = snapshot_tdf.Max(""b1"");. auto max_a = snapshot_tdf.Define(""a_val"",[](A& a){return a.GetI();},{""a""}).Max(""a_val"");. std::cout << ""Maximum: max(b1) = "" << *max_b1 << "", max(A(b1)) = "" << *max_a << std::endl;. if (*max_b1 != *max_a) {. std::cerr << ""Error: the maximum values of two branches which are supposed to be identical differ!\n"";. return 1;. }. return 0;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/562
https://github.com/root-project/root/pull/562:1996,performance,Error,Error,1996," the data. Setting the auto flush to a large number then should get rid of the problem because then there will be only a single cluster in the input tree. ```cpp. #include ""TFile.h"". #include ""TH1F.h"". #include ""TTree.h"". #include <iostream>. #include <random>. #include ""ROOT/TDataFrame.hxx"". void fill_tree(const char *filename, const char *treeName). {. TFile f(filename, ""RECREATE"");. TTree t(treeName, treeName);. t.SetAutoFlush(64); // for creation of clusters to test in MT mode. int b1;. float b2;. t.Branch(""b1"", &b1);. t.Branch(""b2"", &b2);. for (int i = 0; i < 1024 * 64; ++i) {. b1 = i;. b2 = std::rand();. t.Fill();. }. t.Write();. f.Close();. return;. }. class A {. public:. A(){};. A(int i):fI(i){}. int GetI(){return fI;}. private:. int fI = 0;. };. int test_snapshot(). {. ROOT::EnableImplicitMT();. auto fileName = ""test_snapshot.root"";. auto outFileName = ""test_snapshot_output.root"";. auto treeName = ""myTree"";. fill_tree(fileName, treeName);. ROOT::Experimental::TDataFrame d(treeName, fileName);. auto d_cut = d.Filter(""b1 % 2 == 0"");. auto d2 = d_cut.Define(""a"",""A(b1)""). .Define(""b1_square"", ""b1 * b1""). .Define(""b2_vector"", [](float b2){ std::vector<float> v; for (int i=0;i < 3; i++) v.push_back(b2*i); return v;}, {""b2""});. auto snapshot_tdf = d2.Snapshot<int, int, std::vector<float>, A>(treeName, outFileName, {""b1"", ""b1_square"", ""b2_vector"", ""a""});. // Open the new file and list the branches of the tree. TFile f(outFileName);. TTree* t;. f.GetObject(treeName, t);. for (auto branch : *t->GetListOfBranches()) {. std::cout << ""Branch: "" << branch->GetName() << std::endl;. }. f.Close();. auto max_b1 = snapshot_tdf.Max(""b1"");. auto max_a = snapshot_tdf.Define(""a_val"",[](A& a){return a.GetI();},{""a""}).Max(""a_val"");. std::cout << ""Maximum: max(b1) = "" << *max_b1 << "", max(A(b1)) = "" << *max_a << std::endl;. if (*max_b1 != *max_a) {. std::cerr << ""Error: the maximum values of two branches which are supposed to be identical differ!\n"";. return 1;. }. return 0;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/562
https://github.com/root-project/root/pull/562:40,reliability,fail,fails,40,"For example, the script below sometimes fails because the Mean results are different due to the different ordering of the data. Setting the auto flush to a large number then should get rid of the problem because then there will be only a single cluster in the input tree. ```cpp. #include ""TFile.h"". #include ""TH1F.h"". #include ""TTree.h"". #include <iostream>. #include <random>. #include ""ROOT/TDataFrame.hxx"". void fill_tree(const char *filename, const char *treeName). {. TFile f(filename, ""RECREATE"");. TTree t(treeName, treeName);. t.SetAutoFlush(64); // for creation of clusters to test in MT mode. int b1;. float b2;. t.Branch(""b1"", &b1);. t.Branch(""b2"", &b2);. for (int i = 0; i < 1024 * 64; ++i) {. b1 = i;. b2 = std::rand();. t.Fill();. }. t.Write();. f.Close();. return;. }. class A {. public:. A(){};. A(int i):fI(i){}. int GetI(){return fI;}. private:. int fI = 0;. };. int test_snapshot(). {. ROOT::EnableImplicitMT();. auto fileName = ""test_snapshot.root"";. auto outFileName = ""test_snapshot_output.root"";. auto treeName = ""myTree"";. fill_tree(fileName, treeName);. ROOT::Experimental::TDataFrame d(treeName, fileName);. auto d_cut = d.Filter(""b1 % 2 == 0"");. auto d2 = d_cut.Define(""a"",""A(b1)""). .Define(""b1_square"", ""b1 * b1""). .Define(""b2_vector"", [](float b2){ std::vector<float> v; for (int i=0;i < 3; i++) v.push_back(b2*i); return v;}, {""b2""});. auto snapshot_tdf = d2.Snapshot<int, int, std::vector<float>, A>(treeName, outFileName, {""b1"", ""b1_square"", ""b2_vector"", ""a""});. // Open the new file and list the branches of the tree. TFile f(outFileName);. TTree* t;. f.GetObject(treeName, t);. for (auto branch : *t->GetListOfBranches()) {. std::cout << ""Branch: "" << branch->GetName() << std::endl;. }. f.Close();. auto max_b1 = snapshot_tdf.Max(""b1"");. auto max_a = snapshot_tdf.Define(""a_val"",[](A& a){return a.GetI();},{""a""}).Max(""a_val"");. std::cout << ""Maximum: max(b1) = "" << *max_b1 << "", max(A(b1)) = "" << *max_a << std::endl;. if (*max_b1 != *max_a) {. std::cerr << ""Erro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/562
https://github.com/root-project/root/pull/562:260,safety,input,input,260,"For example, the script below sometimes fails because the Mean results are different due to the different ordering of the data. Setting the auto flush to a large number then should get rid of the problem because then there will be only a single cluster in the input tree. ```cpp. #include ""TFile.h"". #include ""TH1F.h"". #include ""TTree.h"". #include <iostream>. #include <random>. #include ""ROOT/TDataFrame.hxx"". void fill_tree(const char *filename, const char *treeName). {. TFile f(filename, ""RECREATE"");. TTree t(treeName, treeName);. t.SetAutoFlush(64); // for creation of clusters to test in MT mode. int b1;. float b2;. t.Branch(""b1"", &b1);. t.Branch(""b2"", &b2);. for (int i = 0; i < 1024 * 64; ++i) {. b1 = i;. b2 = std::rand();. t.Fill();. }. t.Write();. f.Close();. return;. }. class A {. public:. A(){};. A(int i):fI(i){}. int GetI(){return fI;}. private:. int fI = 0;. };. int test_snapshot(). {. ROOT::EnableImplicitMT();. auto fileName = ""test_snapshot.root"";. auto outFileName = ""test_snapshot_output.root"";. auto treeName = ""myTree"";. fill_tree(fileName, treeName);. ROOT::Experimental::TDataFrame d(treeName, fileName);. auto d_cut = d.Filter(""b1 % 2 == 0"");. auto d2 = d_cut.Define(""a"",""A(b1)""). .Define(""b1_square"", ""b1 * b1""). .Define(""b2_vector"", [](float b2){ std::vector<float> v; for (int i=0;i < 3; i++) v.push_back(b2*i); return v;}, {""b2""});. auto snapshot_tdf = d2.Snapshot<int, int, std::vector<float>, A>(treeName, outFileName, {""b1"", ""b1_square"", ""b2_vector"", ""a""});. // Open the new file and list the branches of the tree. TFile f(outFileName);. TTree* t;. f.GetObject(treeName, t);. for (auto branch : *t->GetListOfBranches()) {. std::cout << ""Branch: "" << branch->GetName() << std::endl;. }. f.Close();. auto max_b1 = snapshot_tdf.Max(""b1"");. auto max_a = snapshot_tdf.Define(""a_val"",[](A& a){return a.GetI();},{""a""}).Max(""a_val"");. std::cout << ""Maximum: max(b1) = "" << *max_b1 << "", max(A(b1)) = "" << *max_a << std::endl;. if (*max_b1 != *max_a) {. std::cerr << ""Erro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/562
https://github.com/root-project/root/pull/562:587,safety,test,test,587,"For example, the script below sometimes fails because the Mean results are different due to the different ordering of the data. Setting the auto flush to a large number then should get rid of the problem because then there will be only a single cluster in the input tree. ```cpp. #include ""TFile.h"". #include ""TH1F.h"". #include ""TTree.h"". #include <iostream>. #include <random>. #include ""ROOT/TDataFrame.hxx"". void fill_tree(const char *filename, const char *treeName). {. TFile f(filename, ""RECREATE"");. TTree t(treeName, treeName);. t.SetAutoFlush(64); // for creation of clusters to test in MT mode. int b1;. float b2;. t.Branch(""b1"", &b1);. t.Branch(""b2"", &b2);. for (int i = 0; i < 1024 * 64; ++i) {. b1 = i;. b2 = std::rand();. t.Fill();. }. t.Write();. f.Close();. return;. }. class A {. public:. A(){};. A(int i):fI(i){}. int GetI(){return fI;}. private:. int fI = 0;. };. int test_snapshot(). {. ROOT::EnableImplicitMT();. auto fileName = ""test_snapshot.root"";. auto outFileName = ""test_snapshot_output.root"";. auto treeName = ""myTree"";. fill_tree(fileName, treeName);. ROOT::Experimental::TDataFrame d(treeName, fileName);. auto d_cut = d.Filter(""b1 % 2 == 0"");. auto d2 = d_cut.Define(""a"",""A(b1)""). .Define(""b1_square"", ""b1 * b1""). .Define(""b2_vector"", [](float b2){ std::vector<float> v; for (int i=0;i < 3; i++) v.push_back(b2*i); return v;}, {""b2""});. auto snapshot_tdf = d2.Snapshot<int, int, std::vector<float>, A>(treeName, outFileName, {""b1"", ""b1_square"", ""b2_vector"", ""a""});. // Open the new file and list the branches of the tree. TFile f(outFileName);. TTree* t;. f.GetObject(treeName, t);. for (auto branch : *t->GetListOfBranches()) {. std::cout << ""Branch: "" << branch->GetName() << std::endl;. }. f.Close();. auto max_b1 = snapshot_tdf.Max(""b1"");. auto max_a = snapshot_tdf.Define(""a_val"",[](A& a){return a.GetI();},{""a""}).Max(""a_val"");. std::cout << ""Maximum: max(b1) = "" << *max_b1 << "", max(A(b1)) = "" << *max_a << std::endl;. if (*max_b1 != *max_a) {. std::cerr << ""Erro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/562
https://github.com/root-project/root/pull/562:1996,safety,Error,Error,1996," the data. Setting the auto flush to a large number then should get rid of the problem because then there will be only a single cluster in the input tree. ```cpp. #include ""TFile.h"". #include ""TH1F.h"". #include ""TTree.h"". #include <iostream>. #include <random>. #include ""ROOT/TDataFrame.hxx"". void fill_tree(const char *filename, const char *treeName). {. TFile f(filename, ""RECREATE"");. TTree t(treeName, treeName);. t.SetAutoFlush(64); // for creation of clusters to test in MT mode. int b1;. float b2;. t.Branch(""b1"", &b1);. t.Branch(""b2"", &b2);. for (int i = 0; i < 1024 * 64; ++i) {. b1 = i;. b2 = std::rand();. t.Fill();. }. t.Write();. f.Close();. return;. }. class A {. public:. A(){};. A(int i):fI(i){}. int GetI(){return fI;}. private:. int fI = 0;. };. int test_snapshot(). {. ROOT::EnableImplicitMT();. auto fileName = ""test_snapshot.root"";. auto outFileName = ""test_snapshot_output.root"";. auto treeName = ""myTree"";. fill_tree(fileName, treeName);. ROOT::Experimental::TDataFrame d(treeName, fileName);. auto d_cut = d.Filter(""b1 % 2 == 0"");. auto d2 = d_cut.Define(""a"",""A(b1)""). .Define(""b1_square"", ""b1 * b1""). .Define(""b2_vector"", [](float b2){ std::vector<float> v; for (int i=0;i < 3; i++) v.push_back(b2*i); return v;}, {""b2""});. auto snapshot_tdf = d2.Snapshot<int, int, std::vector<float>, A>(treeName, outFileName, {""b1"", ""b1_square"", ""b2_vector"", ""a""});. // Open the new file and list the branches of the tree. TFile f(outFileName);. TTree* t;. f.GetObject(treeName, t);. for (auto branch : *t->GetListOfBranches()) {. std::cout << ""Branch: "" << branch->GetName() << std::endl;. }. f.Close();. auto max_b1 = snapshot_tdf.Max(""b1"");. auto max_a = snapshot_tdf.Define(""a_val"",[](A& a){return a.GetI();},{""a""}).Max(""a_val"");. std::cout << ""Maximum: max(b1) = "" << *max_b1 << "", max(A(b1)) = "" << *max_a << std::endl;. if (*max_b1 != *max_a) {. std::cerr << ""Error: the maximum values of two branches which are supposed to be identical differ!\n"";. return 1;. }. return 0;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/562
https://github.com/root-project/root/pull/562:2063,security,ident,identical,2063," the data. Setting the auto flush to a large number then should get rid of the problem because then there will be only a single cluster in the input tree. ```cpp. #include ""TFile.h"". #include ""TH1F.h"". #include ""TTree.h"". #include <iostream>. #include <random>. #include ""ROOT/TDataFrame.hxx"". void fill_tree(const char *filename, const char *treeName). {. TFile f(filename, ""RECREATE"");. TTree t(treeName, treeName);. t.SetAutoFlush(64); // for creation of clusters to test in MT mode. int b1;. float b2;. t.Branch(""b1"", &b1);. t.Branch(""b2"", &b2);. for (int i = 0; i < 1024 * 64; ++i) {. b1 = i;. b2 = std::rand();. t.Fill();. }. t.Write();. f.Close();. return;. }. class A {. public:. A(){};. A(int i):fI(i){}. int GetI(){return fI;}. private:. int fI = 0;. };. int test_snapshot(). {. ROOT::EnableImplicitMT();. auto fileName = ""test_snapshot.root"";. auto outFileName = ""test_snapshot_output.root"";. auto treeName = ""myTree"";. fill_tree(fileName, treeName);. ROOT::Experimental::TDataFrame d(treeName, fileName);. auto d_cut = d.Filter(""b1 % 2 == 0"");. auto d2 = d_cut.Define(""a"",""A(b1)""). .Define(""b1_square"", ""b1 * b1""). .Define(""b2_vector"", [](float b2){ std::vector<float> v; for (int i=0;i < 3; i++) v.push_back(b2*i); return v;}, {""b2""});. auto snapshot_tdf = d2.Snapshot<int, int, std::vector<float>, A>(treeName, outFileName, {""b1"", ""b1_square"", ""b2_vector"", ""a""});. // Open the new file and list the branches of the tree. TFile f(outFileName);. TTree* t;. f.GetObject(treeName, t);. for (auto branch : *t->GetListOfBranches()) {. std::cout << ""Branch: "" << branch->GetName() << std::endl;. }. f.Close();. auto max_b1 = snapshot_tdf.Max(""b1"");. auto max_a = snapshot_tdf.Define(""a_val"",[](A& a){return a.GetI();},{""a""}).Max(""a_val"");. std::cout << ""Maximum: max(b1) = "" << *max_b1 << "", max(A(b1)) = "" << *max_a << std::endl;. if (*max_b1 != *max_a) {. std::cerr << ""Error: the maximum values of two branches which are supposed to be identical differ!\n"";. return 1;. }. return 0;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/562
https://github.com/root-project/root/pull/562:587,testability,test,test,587,"For example, the script below sometimes fails because the Mean results are different due to the different ordering of the data. Setting the auto flush to a large number then should get rid of the problem because then there will be only a single cluster in the input tree. ```cpp. #include ""TFile.h"". #include ""TH1F.h"". #include ""TTree.h"". #include <iostream>. #include <random>. #include ""ROOT/TDataFrame.hxx"". void fill_tree(const char *filename, const char *treeName). {. TFile f(filename, ""RECREATE"");. TTree t(treeName, treeName);. t.SetAutoFlush(64); // for creation of clusters to test in MT mode. int b1;. float b2;. t.Branch(""b1"", &b1);. t.Branch(""b2"", &b2);. for (int i = 0; i < 1024 * 64; ++i) {. b1 = i;. b2 = std::rand();. t.Fill();. }. t.Write();. f.Close();. return;. }. class A {. public:. A(){};. A(int i):fI(i){}. int GetI(){return fI;}. private:. int fI = 0;. };. int test_snapshot(). {. ROOT::EnableImplicitMT();. auto fileName = ""test_snapshot.root"";. auto outFileName = ""test_snapshot_output.root"";. auto treeName = ""myTree"";. fill_tree(fileName, treeName);. ROOT::Experimental::TDataFrame d(treeName, fileName);. auto d_cut = d.Filter(""b1 % 2 == 0"");. auto d2 = d_cut.Define(""a"",""A(b1)""). .Define(""b1_square"", ""b1 * b1""). .Define(""b2_vector"", [](float b2){ std::vector<float> v; for (int i=0;i < 3; i++) v.push_back(b2*i); return v;}, {""b2""});. auto snapshot_tdf = d2.Snapshot<int, int, std::vector<float>, A>(treeName, outFileName, {""b1"", ""b1_square"", ""b2_vector"", ""a""});. // Open the new file and list the branches of the tree. TFile f(outFileName);. TTree* t;. f.GetObject(treeName, t);. for (auto branch : *t->GetListOfBranches()) {. std::cout << ""Branch: "" << branch->GetName() << std::endl;. }. f.Close();. auto max_b1 = snapshot_tdf.Max(""b1"");. auto max_a = snapshot_tdf.Define(""a_val"",[](A& a){return a.GetI();},{""a""}).Max(""a_val"");. std::cout << ""Maximum: max(b1) = "" << *max_b1 << "", max(A(b1)) = "" << *max_a << std::endl;. if (*max_b1 != *max_a) {. std::cerr << ""Erro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/562
https://github.com/root-project/root/pull/562:260,usability,input,input,260,"For example, the script below sometimes fails because the Mean results are different due to the different ordering of the data. Setting the auto flush to a large number then should get rid of the problem because then there will be only a single cluster in the input tree. ```cpp. #include ""TFile.h"". #include ""TH1F.h"". #include ""TTree.h"". #include <iostream>. #include <random>. #include ""ROOT/TDataFrame.hxx"". void fill_tree(const char *filename, const char *treeName). {. TFile f(filename, ""RECREATE"");. TTree t(treeName, treeName);. t.SetAutoFlush(64); // for creation of clusters to test in MT mode. int b1;. float b2;. t.Branch(""b1"", &b1);. t.Branch(""b2"", &b2);. for (int i = 0; i < 1024 * 64; ++i) {. b1 = i;. b2 = std::rand();. t.Fill();. }. t.Write();. f.Close();. return;. }. class A {. public:. A(){};. A(int i):fI(i){}. int GetI(){return fI;}. private:. int fI = 0;. };. int test_snapshot(). {. ROOT::EnableImplicitMT();. auto fileName = ""test_snapshot.root"";. auto outFileName = ""test_snapshot_output.root"";. auto treeName = ""myTree"";. fill_tree(fileName, treeName);. ROOT::Experimental::TDataFrame d(treeName, fileName);. auto d_cut = d.Filter(""b1 % 2 == 0"");. auto d2 = d_cut.Define(""a"",""A(b1)""). .Define(""b1_square"", ""b1 * b1""). .Define(""b2_vector"", [](float b2){ std::vector<float> v; for (int i=0;i < 3; i++) v.push_back(b2*i); return v;}, {""b2""});. auto snapshot_tdf = d2.Snapshot<int, int, std::vector<float>, A>(treeName, outFileName, {""b1"", ""b1_square"", ""b2_vector"", ""a""});. // Open the new file and list the branches of the tree. TFile f(outFileName);. TTree* t;. f.GetObject(treeName, t);. for (auto branch : *t->GetListOfBranches()) {. std::cout << ""Branch: "" << branch->GetName() << std::endl;. }. f.Close();. auto max_b1 = snapshot_tdf.Max(""b1"");. auto max_a = snapshot_tdf.Define(""a_val"",[](A& a){return a.GetI();},{""a""}).Max(""a_val"");. std::cout << ""Maximum: max(b1) = "" << *max_b1 << "", max(A(b1)) = "" << *max_a << std::endl;. if (*max_b1 != *max_a) {. std::cerr << ""Erro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/562
https://github.com/root-project/root/pull/562:763,usability,Close,Close,763,"For example, the script below sometimes fails because the Mean results are different due to the different ordering of the data. Setting the auto flush to a large number then should get rid of the problem because then there will be only a single cluster in the input tree. ```cpp. #include ""TFile.h"". #include ""TH1F.h"". #include ""TTree.h"". #include <iostream>. #include <random>. #include ""ROOT/TDataFrame.hxx"". void fill_tree(const char *filename, const char *treeName). {. TFile f(filename, ""RECREATE"");. TTree t(treeName, treeName);. t.SetAutoFlush(64); // for creation of clusters to test in MT mode. int b1;. float b2;. t.Branch(""b1"", &b1);. t.Branch(""b2"", &b2);. for (int i = 0; i < 1024 * 64; ++i) {. b1 = i;. b2 = std::rand();. t.Fill();. }. t.Write();. f.Close();. return;. }. class A {. public:. A(){};. A(int i):fI(i){}. int GetI(){return fI;}. private:. int fI = 0;. };. int test_snapshot(). {. ROOT::EnableImplicitMT();. auto fileName = ""test_snapshot.root"";. auto outFileName = ""test_snapshot_output.root"";. auto treeName = ""myTree"";. fill_tree(fileName, treeName);. ROOT::Experimental::TDataFrame d(treeName, fileName);. auto d_cut = d.Filter(""b1 % 2 == 0"");. auto d2 = d_cut.Define(""a"",""A(b1)""). .Define(""b1_square"", ""b1 * b1""). .Define(""b2_vector"", [](float b2){ std::vector<float> v; for (int i=0;i < 3; i++) v.push_back(b2*i); return v;}, {""b2""});. auto snapshot_tdf = d2.Snapshot<int, int, std::vector<float>, A>(treeName, outFileName, {""b1"", ""b1_square"", ""b2_vector"", ""a""});. // Open the new file and list the branches of the tree. TFile f(outFileName);. TTree* t;. f.GetObject(treeName, t);. for (auto branch : *t->GetListOfBranches()) {. std::cout << ""Branch: "" << branch->GetName() << std::endl;. }. f.Close();. auto max_b1 = snapshot_tdf.Max(""b1"");. auto max_a = snapshot_tdf.Define(""a_val"",[](A& a){return a.GetI();},{""a""}).Max(""a_val"");. std::cout << ""Maximum: max(b1) = "" << *max_b1 << "", max(A(b1)) = "" << *max_a << std::endl;. if (*max_b1 != *max_a) {. std::cerr << ""Erro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/562
https://github.com/root-project/root/pull/562:1725,usability,Close,Close,1725," the data. Setting the auto flush to a large number then should get rid of the problem because then there will be only a single cluster in the input tree. ```cpp. #include ""TFile.h"". #include ""TH1F.h"". #include ""TTree.h"". #include <iostream>. #include <random>. #include ""ROOT/TDataFrame.hxx"". void fill_tree(const char *filename, const char *treeName). {. TFile f(filename, ""RECREATE"");. TTree t(treeName, treeName);. t.SetAutoFlush(64); // for creation of clusters to test in MT mode. int b1;. float b2;. t.Branch(""b1"", &b1);. t.Branch(""b2"", &b2);. for (int i = 0; i < 1024 * 64; ++i) {. b1 = i;. b2 = std::rand();. t.Fill();. }. t.Write();. f.Close();. return;. }. class A {. public:. A(){};. A(int i):fI(i){}. int GetI(){return fI;}. private:. int fI = 0;. };. int test_snapshot(). {. ROOT::EnableImplicitMT();. auto fileName = ""test_snapshot.root"";. auto outFileName = ""test_snapshot_output.root"";. auto treeName = ""myTree"";. fill_tree(fileName, treeName);. ROOT::Experimental::TDataFrame d(treeName, fileName);. auto d_cut = d.Filter(""b1 % 2 == 0"");. auto d2 = d_cut.Define(""a"",""A(b1)""). .Define(""b1_square"", ""b1 * b1""). .Define(""b2_vector"", [](float b2){ std::vector<float> v; for (int i=0;i < 3; i++) v.push_back(b2*i); return v;}, {""b2""});. auto snapshot_tdf = d2.Snapshot<int, int, std::vector<float>, A>(treeName, outFileName, {""b1"", ""b1_square"", ""b2_vector"", ""a""});. // Open the new file and list the branches of the tree. TFile f(outFileName);. TTree* t;. f.GetObject(treeName, t);. for (auto branch : *t->GetListOfBranches()) {. std::cout << ""Branch: "" << branch->GetName() << std::endl;. }. f.Close();. auto max_b1 = snapshot_tdf.Max(""b1"");. auto max_a = snapshot_tdf.Define(""a_val"",[](A& a){return a.GetI();},{""a""}).Max(""a_val"");. std::cout << ""Maximum: max(b1) = "" << *max_b1 << "", max(A(b1)) = "" << *max_a << std::endl;. if (*max_b1 != *max_a) {. std::cerr << ""Error: the maximum values of two branches which are supposed to be identical differ!\n"";. return 1;. }. return 0;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/562
https://github.com/root-project/root/pull/562:1996,usability,Error,Error,1996," the data. Setting the auto flush to a large number then should get rid of the problem because then there will be only a single cluster in the input tree. ```cpp. #include ""TFile.h"". #include ""TH1F.h"". #include ""TTree.h"". #include <iostream>. #include <random>. #include ""ROOT/TDataFrame.hxx"". void fill_tree(const char *filename, const char *treeName). {. TFile f(filename, ""RECREATE"");. TTree t(treeName, treeName);. t.SetAutoFlush(64); // for creation of clusters to test in MT mode. int b1;. float b2;. t.Branch(""b1"", &b1);. t.Branch(""b2"", &b2);. for (int i = 0; i < 1024 * 64; ++i) {. b1 = i;. b2 = std::rand();. t.Fill();. }. t.Write();. f.Close();. return;. }. class A {. public:. A(){};. A(int i):fI(i){}. int GetI(){return fI;}. private:. int fI = 0;. };. int test_snapshot(). {. ROOT::EnableImplicitMT();. auto fileName = ""test_snapshot.root"";. auto outFileName = ""test_snapshot_output.root"";. auto treeName = ""myTree"";. fill_tree(fileName, treeName);. ROOT::Experimental::TDataFrame d(treeName, fileName);. auto d_cut = d.Filter(""b1 % 2 == 0"");. auto d2 = d_cut.Define(""a"",""A(b1)""). .Define(""b1_square"", ""b1 * b1""). .Define(""b2_vector"", [](float b2){ std::vector<float> v; for (int i=0;i < 3; i++) v.push_back(b2*i); return v;}, {""b2""});. auto snapshot_tdf = d2.Snapshot<int, int, std::vector<float>, A>(treeName, outFileName, {""b1"", ""b1_square"", ""b2_vector"", ""a""});. // Open the new file and list the branches of the tree. TFile f(outFileName);. TTree* t;. f.GetObject(treeName, t);. for (auto branch : *t->GetListOfBranches()) {. std::cout << ""Branch: "" << branch->GetName() << std::endl;. }. f.Close();. auto max_b1 = snapshot_tdf.Max(""b1"");. auto max_a = snapshot_tdf.Define(""a_val"",[](A& a){return a.GetI();},{""a""}).Max(""a_val"");. std::cout << ""Maximum: max(b1) = "" << *max_b1 << "", max(A(b1)) = "" << *max_a << std::endl;. if (*max_b1 != *max_a) {. std::cerr << ""Error: the maximum values of two branches which are supposed to be identical differ!\n"";. return 1;. }. return 0;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/562
https://github.com/root-project/root/pull/562:0,deployability,Fail,Failed,0,Failed with `13:53:02 FAILED: lib/libOracle.so`. Is master broken?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/562
https://github.com/root-project/root/pull/562:22,deployability,FAIL,FAILED,22,Failed with `13:53:02 FAILED: lib/libOracle.so`. Is master broken?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/562
https://github.com/root-project/root/pull/562:0,reliability,Fail,Failed,0,Failed with `13:53:02 FAILED: lib/libOracle.so`. Is master broken?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/562
https://github.com/root-project/root/pull/562:22,reliability,FAIL,FAILED,22,Failed with `13:53:02 FAILED: lib/libOracle.so`. Is master broken?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/562
https://github.com/root-project/root/pull/562:57,deployability,fail,failing,57,"@dpiparo Thank you for merging. Let's keep track of that failing test, however. It runs on my machine, but there may be an actual problem there due to the different environment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/562
https://github.com/root-project/root/pull/562:57,reliability,fail,failing,57,"@dpiparo Thank you for merging. Let's keep track of that failing test, however. It runs on my machine, but there may be an actual problem there due to the different environment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/562
https://github.com/root-project/root/pull/562:65,safety,test,test,65,"@dpiparo Thank you for merging. Let's keep track of that failing test, however. It runs on my machine, but there may be an actual problem there due to the different environment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/562
https://github.com/root-project/root/pull/562:65,testability,test,test,65,"@dpiparo Thank you for merging. Let's keep track of that failing test, however. It runs on my machine, but there may be an actual problem there due to the different environment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/562
https://github.com/root-project/root/pull/563:50,deployability,build,build,50,It would be sufficient to disable oracle for this build of ROOT using these set of externals. I would not change the code for this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/563
https://github.com/root-project/root/pull/563:51,reliability,doe,does,51,Shouldn't we do that in jenkins instead? I.e. This does not check if the oracle library found has been compiled with one library or the other (so once/when there is a oracle library using libcxx this test will be wrong).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/563
https://github.com/root-project/root/pull/563:200,safety,test,test,200,Shouldn't we do that in jenkins instead? I.e. This does not check if the oracle library found has been compiled with one library or the other (so once/when there is a oracle library using libcxx this test will be wrong).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/563
https://github.com/root-project/root/pull/563:200,testability,test,test,200,Shouldn't we do that in jenkins instead? I.e. This does not check if the oracle library found has been compiled with one library or the other (so once/when there is a oracle library using libcxx this test will be wrong).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/563
https://github.com/root-project/root/pull/563:39,deployability,build,building,39,"Plus (for the record) there are people building ROOT on MacOS with GCC, even successfully so. They could use the default libocci.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/563
https://github.com/root-project/root/pull/564:39,availability,down,down,39,"Thanks for the education, I just wrote down what I learned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/564
https://github.com/root-project/root/pull/564:51,usability,learn,learned,51,"Thanks for the education, I just wrote down what I learned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/564
https://github.com/root-project/root/pull/565:15,availability,failur,failure,15,The chain/make failure is mine ... fixing it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/565
https://github.com/root-project/root/pull/565:15,deployability,fail,failure,15,The chain/make failure is mine ... fixing it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/565
https://github.com/root-project/root/pull/565:15,performance,failur,failure,15,The chain/make failure is mine ... fixing it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/565
https://github.com/root-project/root/pull/565:15,reliability,fail,failure,15,The chain/make failure is mine ... fixing it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/565
https://github.com/root-project/root/pull/565:19,availability,failur,failures,19,The test_inference failures are fixed by PR 40 in roottest (https://github.com/root-project/roottest/pull/40),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/565
https://github.com/root-project/root/pull/565:19,deployability,fail,failures,19,The test_inference failures are fixed by PR 40 in roottest (https://github.com/root-project/roottest/pull/40),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/565
https://github.com/root-project/root/pull/565:19,performance,failur,failures,19,The test_inference failures are fixed by PR 40 in roottest (https://github.com/root-project/roottest/pull/40),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/565
https://github.com/root-project/root/pull/565:19,reliability,fail,failures,19,The test_inference failures are fixed by PR 40 in roottest (https://github.com/root-project/roottest/pull/40),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/565
https://github.com/root-project/root/pull/566:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:26,availability,error,errors,26,"Matevz, could you fix the errors reported by Travis? (clang-format and clang-tidy) Thanks! (I don't know why the Jenkins CI builds are failing...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:124,deployability,build,builds,124,"Matevz, could you fix the errors reported by Travis? (clang-format and clang-tidy) Thanks! (I don't know why the Jenkins CI builds are failing...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:135,deployability,fail,failing,135,"Matevz, could you fix the errors reported by Travis? (clang-format and clang-tidy) Thanks! (I don't know why the Jenkins CI builds are failing...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:60,interoperability,format,format,60,"Matevz, could you fix the errors reported by Travis? (clang-format and clang-tidy) Thanks! (I don't know why the Jenkins CI builds are failing...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:26,performance,error,errors,26,"Matevz, could you fix the errors reported by Travis? (clang-format and clang-tidy) Thanks! (I don't know why the Jenkins CI builds are failing...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:135,reliability,fail,failing,135,"Matevz, could you fix the errors reported by Travis? (clang-format and clang-tidy) Thanks! (I don't know why the Jenkins CI builds are failing...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:26,safety,error,errors,26,"Matevz, could you fix the errors reported by Travis? (clang-format and clang-tidy) Thanks! (I don't know why the Jenkins CI builds are failing...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:26,usability,error,errors,26,"Matevz, could you fix the errors reported by Travis? (clang-format and clang-tidy) Thanks! (I don't know why the Jenkins CI builds are failing...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:66,deployability,log,logs,66,"Sorry, I don't get this ... what I'm supposed to fix here? :) The logs don't seem to contain anything useful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:85,deployability,contain,contain,85,"Sorry, I don't get this ... what I'm supposed to fix here? :) The logs don't seem to contain anything useful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:66,safety,log,logs,66,"Sorry, I don't get this ... what I'm supposed to fix here? :) The logs don't seem to contain anything useful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:66,security,log,logs,66,"Sorry, I don't get this ... what I'm supposed to fix here? :) The logs don't seem to contain anything useful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:66,testability,log,logs,66,"Sorry, I don't get this ... what I'm supposed to fix here? :) The logs don't seem to contain anything useful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:55,deployability,log,log,55,"If you look carefully, you'll see in the [clang-format log](https://travis-ci.org/root-project/root/jobs/231041859), a diff, starting from line 360. (you can also run clang-format on your side). And in the [clang-tidy log](https://travis-ci.org/root-project/root/jobs/231041860), an explanation of the issue, starting from line 3598.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:218,deployability,log,log,218,"If you look carefully, you'll see in the [clang-format log](https://travis-ci.org/root-project/root/jobs/231041859), a diff, starting from line 360. (you can also run clang-format on your side). And in the [clang-tidy log](https://travis-ci.org/root-project/root/jobs/231041860), an explanation of the issue, starting from line 3598.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:48,interoperability,format,format,48,"If you look carefully, you'll see in the [clang-format log](https://travis-ci.org/root-project/root/jobs/231041859), a diff, starting from line 360. (you can also run clang-format on your side). And in the [clang-tidy log](https://travis-ci.org/root-project/root/jobs/231041860), an explanation of the issue, starting from line 3598.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:173,interoperability,format,format,173,"If you look carefully, you'll see in the [clang-format log](https://travis-ci.org/root-project/root/jobs/231041859), a diff, starting from line 360. (you can also run clang-format on your side). And in the [clang-tidy log](https://travis-ci.org/root-project/root/jobs/231041860), an explanation of the issue, starting from line 3598.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:55,safety,log,log,55,"If you look carefully, you'll see in the [clang-format log](https://travis-ci.org/root-project/root/jobs/231041859), a diff, starting from line 360. (you can also run clang-format on your side). And in the [clang-tidy log](https://travis-ci.org/root-project/root/jobs/231041860), an explanation of the issue, starting from line 3598.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:218,safety,log,log,218,"If you look carefully, you'll see in the [clang-format log](https://travis-ci.org/root-project/root/jobs/231041859), a diff, starting from line 360. (you can also run clang-format on your side). And in the [clang-tidy log](https://travis-ci.org/root-project/root/jobs/231041860), an explanation of the issue, starting from line 3598.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:55,security,log,log,55,"If you look carefully, you'll see in the [clang-format log](https://travis-ci.org/root-project/root/jobs/231041859), a diff, starting from line 360. (you can also run clang-format on your side). And in the [clang-tidy log](https://travis-ci.org/root-project/root/jobs/231041860), an explanation of the issue, starting from line 3598.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:218,security,log,log,218,"If you look carefully, you'll see in the [clang-format log](https://travis-ci.org/root-project/root/jobs/231041859), a diff, starting from line 360. (you can also run clang-format on your side). And in the [clang-tidy log](https://travis-ci.org/root-project/root/jobs/231041860), an explanation of the issue, starting from line 3598.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:55,testability,log,log,55,"If you look carefully, you'll see in the [clang-format log](https://travis-ci.org/root-project/root/jobs/231041859), a diff, starting from line 360. (you can also run clang-format on your side). And in the [clang-tidy log](https://travis-ci.org/root-project/root/jobs/231041860), an explanation of the issue, starting from line 3598.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:218,testability,log,log,218,"If you look carefully, you'll see in the [clang-format log](https://travis-ci.org/root-project/root/jobs/231041859), a diff, starting from line 360. (you can also run clang-format on your side). And in the [clang-tidy log](https://travis-ci.org/root-project/root/jobs/231041860), an explanation of the issue, starting from line 3598.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:67,availability,consist,consistent,67,"OK, so I got it right :). I'm not going to change formatting, it's consistent with the rest of eve/gl and what it's proposing to do is adding 4 lines 8 times with final effect of decreasing readability of the code. The tidy errors are coming from TMath ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:224,availability,error,errors,224,"OK, so I got it right :). I'm not going to change formatting, it's consistent with the rest of eve/gl and what it's proposing to do is adding 4 lines 8 times with final effect of decreasing readability of the code. The tidy errors are coming from TMath ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:50,interoperability,format,formatting,50,"OK, so I got it right :). I'm not going to change formatting, it's consistent with the rest of eve/gl and what it's proposing to do is adding 4 lines 8 times with final effect of decreasing readability of the code. The tidy errors are coming from TMath ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:152,performance,time,times,152,"OK, so I got it right :). I'm not going to change formatting, it's consistent with the rest of eve/gl and what it's proposing to do is adding 4 lines 8 times with final effect of decreasing readability of the code. The tidy errors are coming from TMath ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:224,performance,error,errors,224,"OK, so I got it right :). I'm not going to change formatting, it's consistent with the rest of eve/gl and what it's proposing to do is adding 4 lines 8 times with final effect of decreasing readability of the code. The tidy errors are coming from TMath ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:224,safety,error,errors,224,"OK, so I got it right :). I'm not going to change formatting, it's consistent with the rest of eve/gl and what it's proposing to do is adding 4 lines 8 times with final effect of decreasing readability of the code. The tidy errors are coming from TMath ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:67,usability,consist,consistent,67,"OK, so I got it right :). I'm not going to change formatting, it's consistent with the rest of eve/gl and what it's proposing to do is adding 4 lines 8 times with final effect of decreasing readability of the code. The tidy errors are coming from TMath ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:224,usability,error,errors,224,"OK, so I got it right :). I'm not going to change formatting, it's consistent with the rest of eve/gl and what it's proposing to do is adding 4 lines 8 times with final effect of decreasing readability of the code. The tidy errors are coming from TMath ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:237,deployability,continu,continuous,237,"It does not follow ROOTs coding conventions. It may increase the readability but decreases the debug-ability of this code, for example. The clang-tidy report seems a real issue. TEveVector relies on memory alignment for fX, fY, fZ to be continuous in memory because Arr() returns &fX and then we access the others by pointer arithmetic. A way to fix this could be making an fixed size array of three elements and fX, fY and fZ to be initialized with the address of respectively first, second and third element.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:199,performance,memor,memory,199,"It does not follow ROOTs coding conventions. It may increase the readability but decreases the debug-ability of this code, for example. The clang-tidy report seems a real issue. TEveVector relies on memory alignment for fX, fY, fZ to be continuous in memory because Arr() returns &fX and then we access the others by pointer arithmetic. A way to fix this could be making an fixed size array of three elements and fX, fY and fZ to be initialized with the address of respectively first, second and third element.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:251,performance,memor,memory,251,"It does not follow ROOTs coding conventions. It may increase the readability but decreases the debug-ability of this code, for example. The clang-tidy report seems a real issue. TEveVector relies on memory alignment for fX, fY, fZ to be continuous in memory because Arr() returns &fX and then we access the others by pointer arithmetic. A way to fix this could be making an fixed size array of three elements and fX, fY and fZ to be initialized with the address of respectively first, second and third element.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:3,reliability,doe,does,3,"It does not follow ROOTs coding conventions. It may increase the readability but decreases the debug-ability of this code, for example. The clang-tidy report seems a real issue. TEveVector relies on memory alignment for fX, fY, fZ to be continuous in memory because Arr() returns &fX and then we access the others by pointer arithmetic. A way to fix this could be making an fixed size array of three elements and fX, fY and fZ to be initialized with the address of respectively first, second and third element.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:296,security,access,access,296,"It does not follow ROOTs coding conventions. It may increase the readability but decreases the debug-ability of this code, for example. The clang-tidy report seems a real issue. TEveVector relies on memory alignment for fX, fY, fZ to be continuous in memory because Arr() returns &fX and then we access the others by pointer arithmetic. A way to fix this could be making an fixed size array of three elements and fX, fY and fZ to be initialized with the address of respectively first, second and third element.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:199,usability,memor,memory,199,"It does not follow ROOTs coding conventions. It may increase the readability but decreases the debug-ability of this code, for example. The clang-tidy report seems a real issue. TEveVector relies on memory alignment for fX, fY, fZ to be continuous in memory because Arr() returns &fX and then we access the others by pointer arithmetic. A way to fix this could be making an fixed size array of three elements and fX, fY and fZ to be initialized with the address of respectively first, second and third element.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:251,usability,memor,memory,251,"It does not follow ROOTs coding conventions. It may increase the readability but decreases the debug-ability of this code, for example. The clang-tidy report seems a real issue. TEveVector relies on memory alignment for fX, fY, fZ to be continuous in memory because Arr() returns &fX and then we access the others by pointer arithmetic. A way to fix this could be making an fixed size array of three elements and fX, fY and fZ to be initialized with the address of respectively first, second and third element.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:26,interoperability,standard,standard,26,"Hmmh, I'm pretty sure c++ standard guarantees the members to be contiguous. I'll fix that ... there is a Cross() in TEveVector, probably I added it at some later time :). You realize this is only picking up things that have been there since ~ forever ... nothing reported here has been changed by my commit. So I blame it on ex-CERN employees ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:162,performance,time,time,162,"Hmmh, I'm pretty sure c++ standard guarantees the members to be contiguous. I'll fix that ... there is a Cross() in TEveVector, probably I added it at some later time :). You realize this is only picking up things that have been there since ~ forever ... nothing reported here has been changed by my commit. So I blame it on ex-CERN employees ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:597,deployability,manag,managing,597,"@osschar, C++ didn't have wording for class members until C++11. [C++ draft](http://open-std.org/JTC1/SC22/WG21/docs/papers/2016/n4618.pdf), 9.2 [class.mem] 17) ""Non-static data members of a (non-union) class with the same access control (Clause 11) are allocated so that later members have higher addresses within a class object. The order of allocation of non-static data members with different access control is unspecified (Clause 11). Implementation alignment requirements might cause two adjacent members not to be allocated immediately after each other; so might requirements for space for managing virtual functions (10.3) and virtual base classes (10.1)."". This means they indeed get higher addresses but are not guaranteed to be continuous in memory. The committed fix is just hiding the bug from the clang-tidy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:739,deployability,continu,continuous,739,"@osschar, C++ didn't have wording for class members until C++11. [C++ draft](http://open-std.org/JTC1/SC22/WG21/docs/papers/2016/n4618.pdf), 9.2 [class.mem] 17) ""Non-static data members of a (non-union) class with the same access control (Clause 11) are allocated so that later members have higher addresses within a class object. The order of allocation of non-static data members with different access control is unspecified (Clause 11). Implementation alignment requirements might cause two adjacent members not to be allocated immediately after each other; so might requirements for space for managing virtual functions (10.3) and virtual base classes (10.1)."". This means they indeed get higher addresses but are not guaranteed to be continuous in memory. The committed fix is just hiding the bug from the clang-tidy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:254,energy efficiency,alloc,allocated,254,"@osschar, C++ didn't have wording for class members until C++11. [C++ draft](http://open-std.org/JTC1/SC22/WG21/docs/papers/2016/n4618.pdf), 9.2 [class.mem] 17) ""Non-static data members of a (non-union) class with the same access control (Clause 11) are allocated so that later members have higher addresses within a class object. The order of allocation of non-static data members with different access control is unspecified (Clause 11). Implementation alignment requirements might cause two adjacent members not to be allocated immediately after each other; so might requirements for space for managing virtual functions (10.3) and virtual base classes (10.1)."". This means they indeed get higher addresses but are not guaranteed to be continuous in memory. The committed fix is just hiding the bug from the clang-tidy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:344,energy efficiency,alloc,allocation,344,"@osschar, C++ didn't have wording for class members until C++11. [C++ draft](http://open-std.org/JTC1/SC22/WG21/docs/papers/2016/n4618.pdf), 9.2 [class.mem] 17) ""Non-static data members of a (non-union) class with the same access control (Clause 11) are allocated so that later members have higher addresses within a class object. The order of allocation of non-static data members with different access control is unspecified (Clause 11). Implementation alignment requirements might cause two adjacent members not to be allocated immediately after each other; so might requirements for space for managing virtual functions (10.3) and virtual base classes (10.1)."". This means they indeed get higher addresses but are not guaranteed to be continuous in memory. The committed fix is just hiding the bug from the clang-tidy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:521,energy efficiency,alloc,allocated,521,"@osschar, C++ didn't have wording for class members until C++11. [C++ draft](http://open-std.org/JTC1/SC22/WG21/docs/papers/2016/n4618.pdf), 9.2 [class.mem] 17) ""Non-static data members of a (non-union) class with the same access control (Clause 11) are allocated so that later members have higher addresses within a class object. The order of allocation of non-static data members with different access control is unspecified (Clause 11). Implementation alignment requirements might cause two adjacent members not to be allocated immediately after each other; so might requirements for space for managing virtual functions (10.3) and virtual base classes (10.1)."". This means they indeed get higher addresses but are not guaranteed to be continuous in memory. The committed fix is just hiding the bug from the clang-tidy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:597,energy efficiency,manag,managing,597,"@osschar, C++ didn't have wording for class members until C++11. [C++ draft](http://open-std.org/JTC1/SC22/WG21/docs/papers/2016/n4618.pdf), 9.2 [class.mem] 17) ""Non-static data members of a (non-union) class with the same access control (Clause 11) are allocated so that later members have higher addresses within a class object. The order of allocation of non-static data members with different access control is unspecified (Clause 11). Implementation alignment requirements might cause two adjacent members not to be allocated immediately after each other; so might requirements for space for managing virtual functions (10.3) and virtual base classes (10.1)."". This means they indeed get higher addresses but are not guaranteed to be continuous in memory. The committed fix is just hiding the bug from the clang-tidy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:753,performance,memor,memory,753,"@osschar, C++ didn't have wording for class members until C++11. [C++ draft](http://open-std.org/JTC1/SC22/WG21/docs/papers/2016/n4618.pdf), 9.2 [class.mem] 17) ""Non-static data members of a (non-union) class with the same access control (Clause 11) are allocated so that later members have higher addresses within a class object. The order of allocation of non-static data members with different access control is unspecified (Clause 11). Implementation alignment requirements might cause two adjacent members not to be allocated immediately after each other; so might requirements for space for managing virtual functions (10.3) and virtual base classes (10.1)."". This means they indeed get higher addresses but are not guaranteed to be continuous in memory. The committed fix is just hiding the bug from the clang-tidy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:597,safety,manag,managing,597,"@osschar, C++ didn't have wording for class members until C++11. [C++ draft](http://open-std.org/JTC1/SC22/WG21/docs/papers/2016/n4618.pdf), 9.2 [class.mem] 17) ""Non-static data members of a (non-union) class with the same access control (Clause 11) are allocated so that later members have higher addresses within a class object. The order of allocation of non-static data members with different access control is unspecified (Clause 11). Implementation alignment requirements might cause two adjacent members not to be allocated immediately after each other; so might requirements for space for managing virtual functions (10.3) and virtual base classes (10.1)."". This means they indeed get higher addresses but are not guaranteed to be continuous in memory. The committed fix is just hiding the bug from the clang-tidy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:223,security,access,access,223,"@osschar, C++ didn't have wording for class members until C++11. [C++ draft](http://open-std.org/JTC1/SC22/WG21/docs/papers/2016/n4618.pdf), 9.2 [class.mem] 17) ""Non-static data members of a (non-union) class with the same access control (Clause 11) are allocated so that later members have higher addresses within a class object. The order of allocation of non-static data members with different access control is unspecified (Clause 11). Implementation alignment requirements might cause two adjacent members not to be allocated immediately after each other; so might requirements for space for managing virtual functions (10.3) and virtual base classes (10.1)."". This means they indeed get higher addresses but are not guaranteed to be continuous in memory. The committed fix is just hiding the bug from the clang-tidy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:230,security,control,control,230,"@osschar, C++ didn't have wording for class members until C++11. [C++ draft](http://open-std.org/JTC1/SC22/WG21/docs/papers/2016/n4618.pdf), 9.2 [class.mem] 17) ""Non-static data members of a (non-union) class with the same access control (Clause 11) are allocated so that later members have higher addresses within a class object. The order of allocation of non-static data members with different access control is unspecified (Clause 11). Implementation alignment requirements might cause two adjacent members not to be allocated immediately after each other; so might requirements for space for managing virtual functions (10.3) and virtual base classes (10.1)."". This means they indeed get higher addresses but are not guaranteed to be continuous in memory. The committed fix is just hiding the bug from the clang-tidy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:397,security,access,access,397,"@osschar, C++ didn't have wording for class members until C++11. [C++ draft](http://open-std.org/JTC1/SC22/WG21/docs/papers/2016/n4618.pdf), 9.2 [class.mem] 17) ""Non-static data members of a (non-union) class with the same access control (Clause 11) are allocated so that later members have higher addresses within a class object. The order of allocation of non-static data members with different access control is unspecified (Clause 11). Implementation alignment requirements might cause two adjacent members not to be allocated immediately after each other; so might requirements for space for managing virtual functions (10.3) and virtual base classes (10.1)."". This means they indeed get higher addresses but are not guaranteed to be continuous in memory. The committed fix is just hiding the bug from the clang-tidy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:404,security,control,control,404,"@osschar, C++ didn't have wording for class members until C++11. [C++ draft](http://open-std.org/JTC1/SC22/WG21/docs/papers/2016/n4618.pdf), 9.2 [class.mem] 17) ""Non-static data members of a (non-union) class with the same access control (Clause 11) are allocated so that later members have higher addresses within a class object. The order of allocation of non-static data members with different access control is unspecified (Clause 11). Implementation alignment requirements might cause two adjacent members not to be allocated immediately after each other; so might requirements for space for managing virtual functions (10.3) and virtual base classes (10.1)."". This means they indeed get higher addresses but are not guaranteed to be continuous in memory. The committed fix is just hiding the bug from the clang-tidy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:230,testability,control,control,230,"@osschar, C++ didn't have wording for class members until C++11. [C++ draft](http://open-std.org/JTC1/SC22/WG21/docs/papers/2016/n4618.pdf), 9.2 [class.mem] 17) ""Non-static data members of a (non-union) class with the same access control (Clause 11) are allocated so that later members have higher addresses within a class object. The order of allocation of non-static data members with different access control is unspecified (Clause 11). Implementation alignment requirements might cause two adjacent members not to be allocated immediately after each other; so might requirements for space for managing virtual functions (10.3) and virtual base classes (10.1)."". This means they indeed get higher addresses but are not guaranteed to be continuous in memory. The committed fix is just hiding the bug from the clang-tidy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:404,testability,control,control,404,"@osschar, C++ didn't have wording for class members until C++11. [C++ draft](http://open-std.org/JTC1/SC22/WG21/docs/papers/2016/n4618.pdf), 9.2 [class.mem] 17) ""Non-static data members of a (non-union) class with the same access control (Clause 11) are allocated so that later members have higher addresses within a class object. The order of allocation of non-static data members with different access control is unspecified (Clause 11). Implementation alignment requirements might cause two adjacent members not to be allocated immediately after each other; so might requirements for space for managing virtual functions (10.3) and virtual base classes (10.1)."". This means they indeed get higher addresses but are not guaranteed to be continuous in memory. The committed fix is just hiding the bug from the clang-tidy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:753,usability,memor,memory,753,"@osschar, C++ didn't have wording for class members until C++11. [C++ draft](http://open-std.org/JTC1/SC22/WG21/docs/papers/2016/n4618.pdf), 9.2 [class.mem] 17) ""Non-static data members of a (non-union) class with the same access control (Clause 11) are allocated so that later members have higher addresses within a class object. The order of allocation of non-static data members with different access control is unspecified (Clause 11). Implementation alignment requirements might cause two adjacent members not to be allocated immediately after each other; so might requirements for space for managing virtual functions (10.3) and virtual base classes (10.1)."". This means they indeed get higher addresses but are not guaranteed to be continuous in memory. The committed fix is just hiding the bug from the clang-tidy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:103,interoperability,format,format,103,"So I'm going to merge it, but be aware that next time it will complain again, and the day we run clang-format on the whole ROOT code base, one will have to fix it anyway. And we would appreciate if next time you follow the coding conventions...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:49,performance,time,time,49,"So I'm going to merge it, but be aware that next time it will complain again, and the day we run clang-format on the whole ROOT code base, one will have to fix it anyway. And we would appreciate if next time you follow the coding conventions...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:203,performance,time,time,203,"So I'm going to merge it, but be aware that next time it will complain again, and the day we run clang-format on the whole ROOT code base, one will have to fix it anyway. And we would appreciate if next time you follow the coding conventions...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:62,safety,compl,complain,62,"So I'm going to merge it, but be aware that next time it will complain again, and the day we run clang-format on the whole ROOT code base, one will have to fix it anyway. And we would appreciate if next time you follow the coding conventions...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/566:62,security,compl,complain,62,"So I'm going to merge it, but be aware that next time it will complain again, and the day we run clang-format on the whole ROOT code base, one will have to fix it anyway. And we would appreciate if next time you follow the coding conventions...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/566
https://github.com/root-project/root/pull/567:80,deployability,build,builds,80,@peremato @pcanal Do I need to do something more in this commit for the classic builds? https://github.com/root-project/root/pull/567/commits/69749eda2e47022c13fb95a2a8223815b2cd5eae,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/567
https://github.com/root-project/root/pull/567:82,deployability,build,builds,82,"> @peremato @pcanal Do I need to do something more in this commit for the classic builds? Yes, you need to make sure configure fills out hasveccore, search the configure file for 'hasvc' or 'hascocoa' and duplicate the 'negative' parts (i.e. setting to no).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/567
https://github.com/root-project/root/pull/567:117,integrability,configur,configure,117,"> @peremato @pcanal Do I need to do something more in this commit for the classic builds? Yes, you need to make sure configure fills out hasveccore, search the configure file for 'hasvc' or 'hascocoa' and duplicate the 'negative' parts (i.e. setting to no).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/567
https://github.com/root-project/root/pull/567:160,integrability,configur,configure,160,"> @peremato @pcanal Do I need to do something more in this commit for the classic builds? Yes, you need to make sure configure fills out hasveccore, search the configure file for 'hasvc' or 'hascocoa' and duplicate the 'negative' parts (i.e. setting to no).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/567
https://github.com/root-project/root/pull/567:117,modifiability,configur,configure,117,"> @peremato @pcanal Do I need to do something more in this commit for the classic builds? Yes, you need to make sure configure fills out hasveccore, search the configure file for 'hasvc' or 'hascocoa' and duplicate the 'negative' parts (i.e. setting to no).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/567
https://github.com/root-project/root/pull/567:160,modifiability,configur,configure,160,"> @peremato @pcanal Do I need to do something more in this commit for the classic builds? Yes, you need to make sure configure fills out hasveccore, search the configure file for 'hasvc' or 'hascocoa' and duplicate the 'negative' parts (i.e. setting to no).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/567
https://github.com/root-project/root/pull/567:117,security,configur,configure,117,"> @peremato @pcanal Do I need to do something more in this commit for the classic builds? Yes, you need to make sure configure fills out hasveccore, search the configure file for 'hasvc' or 'hascocoa' and duplicate the 'negative' parts (i.e. setting to no).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/567
https://github.com/root-project/root/pull/567:160,security,configur,configure,160,"> @peremato @pcanal Do I need to do something more in this commit for the classic builds? Yes, you need to make sure configure fills out hasveccore, search the configure file for 'hasvc' or 'hascocoa' and duplicate the 'negative' parts (i.e. setting to no).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/567
https://github.com/root-project/root/pull/567:8,testability,understand,understand,8,I don;t understand some of the changes in TF1. Why the default type for fType is switched from 1 to 3 (vectorised one ? ). . Also the fFunctor data member should be marked as transient,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/567
https://github.com/root-project/root/pull/567:2,reliability,doe,doesn,2,3 doesn't mean vectorised but templated. All the constructors have been progressively ported to a templated implementation. Will do the transient.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/567
https://github.com/root-project/root/pull/567:72,usability,progress,progressively,72,3 doesn't mean vectorised but templated. All the constructors have been progressively ported to a templated implementation. Will do the transient.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/567
https://github.com/root-project/root/pull/567:144,safety,review,reviewing,144,"Thanks for working on this! Could you add some gtests to it, so that I could get an impression, how that is designed to be used, etc. It'd make reviewing it easier on my side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/567
https://github.com/root-project/root/pull/567:144,testability,review,reviewing,144,"Thanks for working on this! Could you add some gtests to it, so that I could get an impression, how that is designed to be used, etc. It'd make reviewing it easier on my side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/567
https://github.com/root-project/root/pull/567:28,deployability,depend,dependency,28,"I'd like to discuss the lib dependency at the team meeting on Monday. Can we hold back with the merge until after that discussion? (Disclaimer: I don't have an opinion yet, but I think we should discuss this.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/567
https://github.com/root-project/root/pull/567:28,integrability,depend,dependency,28,"I'd like to discuss the lib dependency at the team meeting on Monday. Can we hold back with the merge until after that discussion? (Disclaimer: I don't have an opinion yet, but I think we should discuss this.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/567
https://github.com/root-project/root/pull/567:28,modifiability,depend,dependency,28,"I'd like to discuss the lib dependency at the team meeting on Monday. Can we hold back with the merge until after that discussion? (Disclaimer: I don't have an opinion yet, but I think we should discuss this.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/567
https://github.com/root-project/root/pull/567:28,safety,depend,dependency,28,"I'd like to discuss the lib dependency at the team meeting on Monday. Can we hold back with the merge until after that discussion? (Disclaimer: I don't have an opinion yet, but I think we should discuss this.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/567
https://github.com/root-project/root/pull/567:46,security,team,team,46,"I'd like to discuss the lib dependency at the team meeting on Monday. Can we hold back with the merge until after that discussion? (Disclaimer: I don't have an opinion yet, but I think we should discuss this.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/567
https://github.com/root-project/root/pull/567:28,testability,depend,dependency,28,"I'd like to discuss the lib dependency at the team meeting on Monday. Can we hold back with the merge until after that discussion? (Disclaimer: I don't have an opinion yet, but I think we should discuss this.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/567
https://github.com/root-project/root/pull/567:11,integrability,configur,configure,11,@xvallspl @configure yes it looks good. thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/567
https://github.com/root-project/root/pull/567:11,modifiability,configur,configure,11,@xvallspl @configure yes it looks good. thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/567
https://github.com/root-project/root/pull/567:11,security,configur,configure,11,@xvallspl @configure yes it looks good. thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/567
https://github.com/root-project/root/pull/567:52,energy efficiency,reduc,reduce,52,"@vgvassilev Yes, of course. I need to tune them and reduce/chunk/extend them a little bit, but I will add a PR on roottest before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/567
https://github.com/root-project/root/pull/567:65,modifiability,exten,extend,65,"@vgvassilev Yes, of course. I need to tune them and reduce/chunk/extend them a little bit, but I will add a PR on roottest before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/567
https://github.com/root-project/root/pull/567:38,performance,tune,tune,38,"@vgvassilev Yes, of course. I need to tune them and reduce/chunk/extend them a little bit, but I will add a PR on roottest before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/567
https://github.com/root-project/root/pull/567:169,safety,test,tests,169,"Thanks a lot, Vassil. It is still work in progress. It implies a lot of changes and I thought it better if I could receive feedback the earliest possible. There will be tests and I'll try to improve the documentation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/567
https://github.com/root-project/root/pull/567:169,testability,test,tests,169,"Thanks a lot, Vassil. It is still work in progress. It implies a lot of changes and I thought it better if I could receive feedback the earliest possible. There will be tests and I'll try to improve the documentation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/567
https://github.com/root-project/root/pull/567:42,usability,progress,progress,42,"Thanks a lot, Vassil. It is still work in progress. It implies a lot of changes and I thought it better if I could receive feedback the earliest possible. There will be tests and I'll try to improve the documentation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/567
https://github.com/root-project/root/pull/567:123,usability,feedback,feedback,123,"Thanks a lot, Vassil. It is still work in progress. It implies a lot of changes and I thought it better if I could receive feedback the earliest possible. There will be tests and I'll try to improve the documentation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/567
https://github.com/root-project/root/pull/567:203,usability,document,documentation,203,"Thanks a lot, Vassil. It is still work in progress. It implies a lot of changes and I thought it better if I could receive feedback the earliest possible. There will be tests and I'll try to improve the documentation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/567
https://github.com/root-project/root/pull/568:306,availability,restor,restore,306,"Hi,. this mitigates the issue but still does not solve entirely the problem. Did you have the possibility to try after the fix of @pcanal for creating a TChain with a null gDirectory? One improvement which in general we could put in place and is likely to fix the issue is to use a TDirectory::TContext to restore the status of the gDirectory to the one at the beginning of the method call. In general I would expect that the call to Snapshot does not have an influence to the state of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/568
https://github.com/root-project/root/pull/568:477,availability,state,state,477,"Hi,. this mitigates the issue but still does not solve entirely the problem. Did you have the possibility to try after the fix of @pcanal for creating a TChain with a null gDirectory? One improvement which in general we could put in place and is likely to fix the issue is to use a TDirectory::TContext to restore the status of the gDirectory to the one at the beginning of the method call. In general I would expect that the call to Snapshot does not have an influence to the state of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/568
https://github.com/root-project/root/pull/568:477,integrability,state,state,477,"Hi,. this mitigates the issue but still does not solve entirely the problem. Did you have the possibility to try after the fix of @pcanal for creating a TChain with a null gDirectory? One improvement which in general we could put in place and is likely to fix the issue is to use a TDirectory::TContext to restore the status of the gDirectory to the one at the beginning of the method call. In general I would expect that the call to Snapshot does not have an influence to the state of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/568
https://github.com/root-project/root/pull/568:40,reliability,doe,does,40,"Hi,. this mitigates the issue but still does not solve entirely the problem. Did you have the possibility to try after the fix of @pcanal for creating a TChain with a null gDirectory? One improvement which in general we could put in place and is likely to fix the issue is to use a TDirectory::TContext to restore the status of the gDirectory to the one at the beginning of the method call. In general I would expect that the call to Snapshot does not have an influence to the state of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/568
https://github.com/root-project/root/pull/568:306,reliability,restor,restore,306,"Hi,. this mitigates the issue but still does not solve entirely the problem. Did you have the possibility to try after the fix of @pcanal for creating a TChain with a null gDirectory? One improvement which in general we could put in place and is likely to fix the issue is to use a TDirectory::TContext to restore the status of the gDirectory to the one at the beginning of the method call. In general I would expect that the call to Snapshot does not have an influence to the state of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/568
https://github.com/root-project/root/pull/568:443,reliability,doe,does,443,"Hi,. this mitigates the issue but still does not solve entirely the problem. Did you have the possibility to try after the fix of @pcanal for creating a TChain with a null gDirectory? One improvement which in general we could put in place and is likely to fix the issue is to use a TDirectory::TContext to restore the status of the gDirectory to the one at the beginning of the method call. In general I would expect that the call to Snapshot does not have an influence to the state of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/568
https://github.com/root-project/root/pull/568:318,usability,statu,status,318,"Hi,. this mitigates the issue but still does not solve entirely the problem. Did you have the possibility to try after the fix of @pcanal for creating a TChain with a null gDirectory? One improvement which in general we could put in place and is likely to fix the issue is to use a TDirectory::TContext to restore the status of the gDirectory to the one at the beginning of the method call. In general I would expect that the call to Snapshot does not have an influence to the state of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/568
https://github.com/root-project/root/pull/568:100,usability,help,helps,100,"Hi @amadio , great. Did you have the possibility to try the TDirectory::TContext RAII? Perhaps this helps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/568
https://github.com/root-project/root/pull/568:42,usability,Close,Close,42,"Yes, but it still crashes. Now in `TFile::Close()` in ~TBufferMerger() which calls `gROOT->GetListOfFiles()->Remove(this);` for `TBufferMerger::fFile`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/568
https://github.com/root-project/root/pull/568:24,usability,help,help,24,"I think I could use the help of someone more familiar with what happens in the background when a file is opened, closed, etc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/568
https://github.com/root-project/root/pull/568:113,usability,close,closed,113,"I think I could use the help of someone more familiar with what happens in the background when a file is opened, closed, etc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/568
https://github.com/root-project/root/pull/568:306,deployability,continu,continue,306,"@pcanal Yes, the problem is there even in the test `io/io/test/testTBufferMerger`. It's not related to TDF, but it's in the code for TBufferMerger itself. The ownership of the TTrees is unclear to me, and somehow they are destroyed more than once (or their files). I'm going to close this pull request and continue to investigate the problem. I will open a new pull request when I'm convinced the problem is fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/568
https://github.com/root-project/root/pull/568:46,safety,test,test,46,"@pcanal Yes, the problem is there even in the test `io/io/test/testTBufferMerger`. It's not related to TDF, but it's in the code for TBufferMerger itself. The ownership of the TTrees is unclear to me, and somehow they are destroyed more than once (or their files). I'm going to close this pull request and continue to investigate the problem. I will open a new pull request when I'm convinced the problem is fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/568
https://github.com/root-project/root/pull/568:58,safety,test,test,58,"@pcanal Yes, the problem is there even in the test `io/io/test/testTBufferMerger`. It's not related to TDF, but it's in the code for TBufferMerger itself. The ownership of the TTrees is unclear to me, and somehow they are destroyed more than once (or their files). I'm going to close this pull request and continue to investigate the problem. I will open a new pull request when I'm convinced the problem is fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/568
https://github.com/root-project/root/pull/568:63,safety,test,testTBufferMerger,63,"@pcanal Yes, the problem is there even in the test `io/io/test/testTBufferMerger`. It's not related to TDF, but it's in the code for TBufferMerger itself. The ownership of the TTrees is unclear to me, and somehow they are destroyed more than once (or their files). I'm going to close this pull request and continue to investigate the problem. I will open a new pull request when I'm convinced the problem is fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/568
https://github.com/root-project/root/pull/568:46,testability,test,test,46,"@pcanal Yes, the problem is there even in the test `io/io/test/testTBufferMerger`. It's not related to TDF, but it's in the code for TBufferMerger itself. The ownership of the TTrees is unclear to me, and somehow they are destroyed more than once (or their files). I'm going to close this pull request and continue to investigate the problem. I will open a new pull request when I'm convinced the problem is fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/568
https://github.com/root-project/root/pull/568:58,testability,test,test,58,"@pcanal Yes, the problem is there even in the test `io/io/test/testTBufferMerger`. It's not related to TDF, but it's in the code for TBufferMerger itself. The ownership of the TTrees is unclear to me, and somehow they are destroyed more than once (or their files). I'm going to close this pull request and continue to investigate the problem. I will open a new pull request when I'm convinced the problem is fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/568
https://github.com/root-project/root/pull/568:63,testability,test,testTBufferMerger,63,"@pcanal Yes, the problem is there even in the test `io/io/test/testTBufferMerger`. It's not related to TDF, but it's in the code for TBufferMerger itself. The ownership of the TTrees is unclear to me, and somehow they are destroyed more than once (or their files). I'm going to close this pull request and continue to investigate the problem. I will open a new pull request when I'm convinced the problem is fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/568
https://github.com/root-project/root/pull/568:278,usability,close,close,278,"@pcanal Yes, the problem is there even in the test `io/io/test/testTBufferMerger`. It's not related to TDF, but it's in the code for TBufferMerger itself. The ownership of the TTrees is unclear to me, and somehow they are destroyed more than once (or their files). I'm going to close this pull request and continue to investigate the problem. I will open a new pull request when I'm convinced the problem is fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/568
https://github.com/root-project/root/pull/570:69,interoperability,standard,standard,69,"guys, i fixed it in the original commit :). also, the way i read the standard it means they will be contiguous if theya re of the same size.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/570
https://github.com/root-project/root/pull/570:633,deployability,fail,fail,633,"Hmmh, what would it be? static_assert(&fY - &fX == 1 && &fZ - &fY == 1);. Can I volunteer Axel to commit this? I hate your PR procedure :). On 05/18/17 01:50, Vassil Vassilev wrote:. > *@vgvassilev* commented on this pull request. >. > --------------------------------------------------------------------------------. >. > In graf3d/eve/inc/TEveVector.h. > <https://github.com/root-project/root/pull/570#discussion_r117192062>:. >. >> public:. > - TT fX, fY, fZ; // Components of the vector. > + TT &fX = *&fXYZ[0], fY = *&fXYZ[1], fZ = *&fXYZ[3]; // Components of the vector. >. > Ok, then let's add a |static_assert| and see if we fail on some platforms. Could. > you do it? >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/570#discussion_r117192062>, or mute. > the thread. > <https://github.com/notifications/unsubscribe-auth/ACgPZ3tIlS9Wt-fT6qFSi2e89G4CUthkks5r7AZKgaJpZM4NZVRp>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/570
https://github.com/root-project/root/pull/570:435,integrability,pub,public,435,"Hmmh, what would it be? static_assert(&fY - &fX == 1 && &fZ - &fY == 1);. Can I volunteer Axel to commit this? I hate your PR procedure :). On 05/18/17 01:50, Vassil Vassilev wrote:. > *@vgvassilev* commented on this pull request. >. > --------------------------------------------------------------------------------. >. > In graf3d/eve/inc/TEveVector.h. > <https://github.com/root-project/root/pull/570#discussion_r117192062>:. >. >> public:. > - TT fX, fY, fZ; // Components of the vector. > + TT &fX = *&fXYZ[0], fY = *&fXYZ[1], fZ = *&fXYZ[3]; // Components of the vector. >. > Ok, then let's add a |static_assert| and see if we fail on some platforms. Could. > you do it? >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/570#discussion_r117192062>, or mute. > the thread. > <https://github.com/notifications/unsubscribe-auth/ACgPZ3tIlS9Wt-fT6qFSi2e89G4CUthkks5r7AZKgaJpZM4NZVRp>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/570
https://github.com/root-project/root/pull/570:466,integrability,Compon,Components,466,"Hmmh, what would it be? static_assert(&fY - &fX == 1 && &fZ - &fY == 1);. Can I volunteer Axel to commit this? I hate your PR procedure :). On 05/18/17 01:50, Vassil Vassilev wrote:. > *@vgvassilev* commented on this pull request. >. > --------------------------------------------------------------------------------. >. > In graf3d/eve/inc/TEveVector.h. > <https://github.com/root-project/root/pull/570#discussion_r117192062>:. >. >> public:. > - TT fX, fY, fZ; // Components of the vector. > + TT &fX = *&fXYZ[0], fY = *&fXYZ[1], fZ = *&fXYZ[3]; // Components of the vector. >. > Ok, then let's add a |static_assert| and see if we fail on some platforms. Could. > you do it? >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/570#discussion_r117192062>, or mute. > the thread. > <https://github.com/notifications/unsubscribe-auth/ACgPZ3tIlS9Wt-fT6qFSi2e89G4CUthkks5r7AZKgaJpZM4NZVRp>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/570
https://github.com/root-project/root/pull/570:551,integrability,Compon,Components,551,"Hmmh, what would it be? static_assert(&fY - &fX == 1 && &fZ - &fY == 1);. Can I volunteer Axel to commit this? I hate your PR procedure :). On 05/18/17 01:50, Vassil Vassilev wrote:. > *@vgvassilev* commented on this pull request. >. > --------------------------------------------------------------------------------. >. > In graf3d/eve/inc/TEveVector.h. > <https://github.com/root-project/root/pull/570#discussion_r117192062>:. >. >> public:. > - TT fX, fY, fZ; // Components of the vector. > + TT &fX = *&fXYZ[0], fY = *&fXYZ[1], fZ = *&fXYZ[3]; // Components of the vector. >. > Ok, then let's add a |static_assert| and see if we fail on some platforms. Could. > you do it? >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/570#discussion_r117192062>, or mute. > the thread. > <https://github.com/notifications/unsubscribe-auth/ACgPZ3tIlS9Wt-fT6qFSi2e89G4CUthkks5r7AZKgaJpZM4NZVRp>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/570
https://github.com/root-project/root/pull/570:466,interoperability,Compon,Components,466,"Hmmh, what would it be? static_assert(&fY - &fX == 1 && &fZ - &fY == 1);. Can I volunteer Axel to commit this? I hate your PR procedure :). On 05/18/17 01:50, Vassil Vassilev wrote:. > *@vgvassilev* commented on this pull request. >. > --------------------------------------------------------------------------------. >. > In graf3d/eve/inc/TEveVector.h. > <https://github.com/root-project/root/pull/570#discussion_r117192062>:. >. >> public:. > - TT fX, fY, fZ; // Components of the vector. > + TT &fX = *&fXYZ[0], fY = *&fXYZ[1], fZ = *&fXYZ[3]; // Components of the vector. >. > Ok, then let's add a |static_assert| and see if we fail on some platforms. Could. > you do it? >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/570#discussion_r117192062>, or mute. > the thread. > <https://github.com/notifications/unsubscribe-auth/ACgPZ3tIlS9Wt-fT6qFSi2e89G4CUthkks5r7AZKgaJpZM4NZVRp>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/570
https://github.com/root-project/root/pull/570:551,interoperability,Compon,Components,551,"Hmmh, what would it be? static_assert(&fY - &fX == 1 && &fZ - &fY == 1);. Can I volunteer Axel to commit this? I hate your PR procedure :). On 05/18/17 01:50, Vassil Vassilev wrote:. > *@vgvassilev* commented on this pull request. >. > --------------------------------------------------------------------------------. >. > In graf3d/eve/inc/TEveVector.h. > <https://github.com/root-project/root/pull/570#discussion_r117192062>:. >. >> public:. > - TT fX, fY, fZ; // Components of the vector. > + TT &fX = *&fXYZ[0], fY = *&fXYZ[1], fZ = *&fXYZ[3]; // Components of the vector. >. > Ok, then let's add a |static_assert| and see if we fail on some platforms. Could. > you do it? >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/570#discussion_r117192062>, or mute. > the thread. > <https://github.com/notifications/unsubscribe-auth/ACgPZ3tIlS9Wt-fT6qFSi2e89G4CUthkks5r7AZKgaJpZM4NZVRp>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/570
https://github.com/root-project/root/pull/570:646,interoperability,platform,platforms,646,"Hmmh, what would it be? static_assert(&fY - &fX == 1 && &fZ - &fY == 1);. Can I volunteer Axel to commit this? I hate your PR procedure :). On 05/18/17 01:50, Vassil Vassilev wrote:. > *@vgvassilev* commented on this pull request. >. > --------------------------------------------------------------------------------. >. > In graf3d/eve/inc/TEveVector.h. > <https://github.com/root-project/root/pull/570#discussion_r117192062>:. >. >> public:. > - TT fX, fY, fZ; // Components of the vector. > + TT &fX = *&fXYZ[0], fY = *&fXYZ[1], fZ = *&fXYZ[3]; // Components of the vector. >. > Ok, then let's add a |static_assert| and see if we fail on some platforms. Could. > you do it? >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/570#discussion_r117192062>, or mute. > the thread. > <https://github.com/notifications/unsubscribe-auth/ACgPZ3tIlS9Wt-fT6qFSi2e89G4CUthkks5r7AZKgaJpZM4NZVRp>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/570
https://github.com/root-project/root/pull/570:466,modifiability,Compon,Components,466,"Hmmh, what would it be? static_assert(&fY - &fX == 1 && &fZ - &fY == 1);. Can I volunteer Axel to commit this? I hate your PR procedure :). On 05/18/17 01:50, Vassil Vassilev wrote:. > *@vgvassilev* commented on this pull request. >. > --------------------------------------------------------------------------------. >. > In graf3d/eve/inc/TEveVector.h. > <https://github.com/root-project/root/pull/570#discussion_r117192062>:. >. >> public:. > - TT fX, fY, fZ; // Components of the vector. > + TT &fX = *&fXYZ[0], fY = *&fXYZ[1], fZ = *&fXYZ[3]; // Components of the vector. >. > Ok, then let's add a |static_assert| and see if we fail on some platforms. Could. > you do it? >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/570#discussion_r117192062>, or mute. > the thread. > <https://github.com/notifications/unsubscribe-auth/ACgPZ3tIlS9Wt-fT6qFSi2e89G4CUthkks5r7AZKgaJpZM4NZVRp>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/570
https://github.com/root-project/root/pull/570:551,modifiability,Compon,Components,551,"Hmmh, what would it be? static_assert(&fY - &fX == 1 && &fZ - &fY == 1);. Can I volunteer Axel to commit this? I hate your PR procedure :). On 05/18/17 01:50, Vassil Vassilev wrote:. > *@vgvassilev* commented on this pull request. >. > --------------------------------------------------------------------------------. >. > In graf3d/eve/inc/TEveVector.h. > <https://github.com/root-project/root/pull/570#discussion_r117192062>:. >. >> public:. > - TT fX, fY, fZ; // Components of the vector. > + TT &fX = *&fXYZ[0], fY = *&fXYZ[1], fZ = *&fXYZ[3]; // Components of the vector. >. > Ok, then let's add a |static_assert| and see if we fail on some platforms. Could. > you do it? >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/570#discussion_r117192062>, or mute. > the thread. > <https://github.com/notifications/unsubscribe-auth/ACgPZ3tIlS9Wt-fT6qFSi2e89G4CUthkks5r7AZKgaJpZM4NZVRp>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/570
https://github.com/root-project/root/pull/570:633,reliability,fail,fail,633,"Hmmh, what would it be? static_assert(&fY - &fX == 1 && &fZ - &fY == 1);. Can I volunteer Axel to commit this? I hate your PR procedure :). On 05/18/17 01:50, Vassil Vassilev wrote:. > *@vgvassilev* commented on this pull request. >. > --------------------------------------------------------------------------------. >. > In graf3d/eve/inc/TEveVector.h. > <https://github.com/root-project/root/pull/570#discussion_r117192062>:. >. >> public:. > - TT fX, fY, fZ; // Components of the vector. > + TT &fX = *&fXYZ[0], fY = *&fXYZ[1], fZ = *&fXYZ[3]; // Components of the vector. >. > Ok, then let's add a |static_assert| and see if we fail on some platforms. Could. > you do it? >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/570#discussion_r117192062>, or mute. > the thread. > <https://github.com/notifications/unsubscribe-auth/ACgPZ3tIlS9Wt-fT6qFSi2e89G4CUthkks5r7AZKgaJpZM4NZVRp>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/570
https://github.com/root-project/root/pull/570:933,security,auth,auth,933,"Hmmh, what would it be? static_assert(&fY - &fX == 1 && &fZ - &fY == 1);. Can I volunteer Axel to commit this? I hate your PR procedure :). On 05/18/17 01:50, Vassil Vassilev wrote:. > *@vgvassilev* commented on this pull request. >. > --------------------------------------------------------------------------------. >. > In graf3d/eve/inc/TEveVector.h. > <https://github.com/root-project/root/pull/570#discussion_r117192062>:. >. >> public:. > - TT fX, fY, fZ; // Components of the vector. > + TT &fX = *&fXYZ[0], fY = *&fXYZ[1], fZ = *&fXYZ[3]; // Components of the vector. >. > Ok, then let's add a |static_assert| and see if we fail on some platforms. Could. > you do it? >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/570#discussion_r117192062>, or mute. > the thread. > <https://github.com/notifications/unsubscribe-auth/ACgPZ3tIlS9Wt-fT6qFSi2e89G4CUthkks5r7AZKgaJpZM4NZVRp>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/570
https://github.com/root-project/root/pull/570:40,usability,close,closed,40,Done as 627f63b - I suppose this can be closed now?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/570
https://github.com/root-project/root/pull/572:36,integrability,pub,public,36,NB: opened the PR to make the draft public and open the discussion thread. no need to let jenkins run haven't tested the output of the codegen yet.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/572
https://github.com/root-project/root/pull/572:110,safety,test,tested,110,NB: opened the PR to make the draft public and open the discussion thread. no need to let jenkins run haven't tested the output of the codegen yet.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/572
https://github.com/root-project/root/pull/572:110,testability,test,tested,110,NB: opened the PR to make the draft public and open the discussion thread. no need to let jenkins run haven't tested the output of the codegen yet.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/572
https://github.com/root-project/root/pull/572:161,availability,consist,consistency,161,- [x] root builds. - [x] formatting applied. - [x] ran tutorials/tmva/TMVAClassification.C (produces .class.C files). - [x] class.C files compile. - [x] checked consistency with master branch with rapidcheck [link](https://github.com/pseyfert/tmva-codegen-rapidcheck). from my side good to merge. NB: in the rapidcheck repo you can also see how my change changes the generated code by comparing the class.C files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/572
https://github.com/root-project/root/pull/572:11,deployability,build,builds,11,- [x] root builds. - [x] formatting applied. - [x] ran tutorials/tmva/TMVAClassification.C (produces .class.C files). - [x] class.C files compile. - [x] checked consistency with master branch with rapidcheck [link](https://github.com/pseyfert/tmva-codegen-rapidcheck). from my side good to merge. NB: in the rapidcheck repo you can also see how my change changes the generated code by comparing the class.C files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/572
https://github.com/root-project/root/pull/572:25,interoperability,format,formatting,25,- [x] root builds. - [x] formatting applied. - [x] ran tutorials/tmva/TMVAClassification.C (produces .class.C files). - [x] class.C files compile. - [x] checked consistency with master branch with rapidcheck [link](https://github.com/pseyfert/tmva-codegen-rapidcheck). from my side good to merge. NB: in the rapidcheck repo you can also see how my change changes the generated code by comparing the class.C files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/572
https://github.com/root-project/root/pull/572:161,usability,consist,consistency,161,- [x] root builds. - [x] formatting applied. - [x] ran tutorials/tmva/TMVAClassification.C (produces .class.C files). - [x] class.C files compile. - [x] checked consistency with master branch with rapidcheck [link](https://github.com/pseyfert/tmva-codegen-rapidcheck). from my side good to merge. NB: in the rapidcheck repo you can also see how my change changes the generated code by comparing the class.C files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/572
https://github.com/root-project/root/pull/572:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/572
https://github.com/root-project/root/pull/572:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/572
https://github.com/root-project/root/pull/573:11,deployability,build,build,11,@phsft-bot build please,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/573
https://github.com/root-project/root/pull/573:11,deployability,build,build,11,@phsft-bot build please,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/573
https://github.com/root-project/root/pull/574:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/574
https://github.com/root-project/root/pull/575:167,integrability,sub,subdirectory,167,"For the header files, I think technically we ought to have the header declaring classes inside a namespace (excluding/ignoring Experimental and possibly Details) in a subdirectory (see include/Math). Since TDataFrame.hxx (the only user header file If I understood correctly) pull TDataFrame into the ROOT namespace I will keep it in [include]/ROOT but I would move all the other header in ROOT/TDF (and ROOT/Details) to keep things tidier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/575
https://github.com/root-project/root/pull/575:231,usability,user,user,231,"For the header files, I think technically we ought to have the header declaring classes inside a namespace (excluding/ignoring Experimental and possibly Details) in a subdirectory (see include/Math). Since TDataFrame.hxx (the only user header file If I understood correctly) pull TDataFrame into the ROOT namespace I will keep it in [include]/ROOT but I would move all the other header in ROOT/TDF (and ROOT/Details) to keep things tidier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/575
https://github.com/root-project/root/pull/575:257,safety,compl,comply,257,"@pcanal the namespaces we use are `ROOT::{Detail,Experimental,Internal}::TDF`, so I do not totally understand your proposal. Also `$ROOTSYS/tree/treeplayer/inc/ROOT/TDF` is an awful long pathname, but if that's the rule I will make the necessary changes to comply of course.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/575
https://github.com/root-project/root/pull/575:257,security,compl,comply,257,"@pcanal the namespaces we use are `ROOT::{Detail,Experimental,Internal}::TDF`, so I do not totally understand your proposal. Also `$ROOTSYS/tree/treeplayer/inc/ROOT/TDF` is an awful long pathname, but if that's the rule I will make the necessary changes to comply of course.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/575
https://github.com/root-project/root/pull/575:99,testability,understand,understand,99,"@pcanal the namespaces we use are `ROOT::{Detail,Experimental,Internal}::TDF`, so I do not totally understand your proposal. Also `$ROOTSYS/tree/treeplayer/inc/ROOT/TDF` is an awful long pathname, but if that's the rule I will make the necessary changes to comply of course.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/575
https://github.com/root-project/root/pull/575:108,usability,user,user,108,It would be ```$ROOTSYS//ROOT/TDF/DetailsHeader.hxx``` and would only be used by our own headers not by the user. (and yes the files in git would in tree/treeplayer/inc/ROOT/TDF),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/575
https://github.com/root-project/root/pull/575:133,deployability,contain,contains,133,"I am in favour of keeping things tidy. Still I find more informative/maintainable to have names for headers which refer to what they contains rather than a generic ""Details"". If we want to change the policy related to paths in general for ROOT it is perhaps worth thinking this through and maybe go for it in November?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/575
https://github.com/root-project/root/pull/575:69,modifiability,maintain,maintainable,69,"I am in favour of keeping things tidy. Still I find more informative/maintainable to have names for headers which refer to what they contains rather than a generic ""Details"". If we want to change the policy related to paths in general for ROOT it is perhaps worth thinking this through and maybe go for it in November?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/575
https://github.com/root-project/root/pull/575:69,safety,maintain,maintainable,69,"I am in favour of keeping things tidy. Still I find more informative/maintainable to have names for headers which refer to what they contains rather than a generic ""Details"". If we want to change the policy related to paths in general for ROOT it is perhaps worth thinking this through and maybe go for it in November?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/575
https://github.com/root-project/root/pull/575:200,security,polic,policy,200,"I am in favour of keeping things tidy. Still I find more informative/maintainable to have names for headers which refer to what they contains rather than a generic ""Details"". If we want to change the policy related to paths in general for ROOT it is perhaps worth thinking this through and maybe go for it in November?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/575
https://github.com/root-project/root/pull/575:185,availability,failur,failure,185,"`clang-format` complains about the usual markdown tables longer than 120 lines (I have not changed them). Test builds look good enough...mac did not finish due to a seemingly unrelated failure, while `root_dataframe_functiontraits` is fixed by a related PR in `roottest`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/575
https://github.com/root-project/root/pull/575:111,deployability,build,builds,111,"`clang-format` complains about the usual markdown tables longer than 120 lines (I have not changed them). Test builds look good enough...mac did not finish due to a seemingly unrelated failure, while `root_dataframe_functiontraits` is fixed by a related PR in `roottest`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/575
https://github.com/root-project/root/pull/575:185,deployability,fail,failure,185,"`clang-format` complains about the usual markdown tables longer than 120 lines (I have not changed them). Test builds look good enough...mac did not finish due to a seemingly unrelated failure, while `root_dataframe_functiontraits` is fixed by a related PR in `roottest`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/575
https://github.com/root-project/root/pull/575:7,interoperability,format,format,7,"`clang-format` complains about the usual markdown tables longer than 120 lines (I have not changed them). Test builds look good enough...mac did not finish due to a seemingly unrelated failure, while `root_dataframe_functiontraits` is fixed by a related PR in `roottest`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/575
https://github.com/root-project/root/pull/575:185,performance,failur,failure,185,"`clang-format` complains about the usual markdown tables longer than 120 lines (I have not changed them). Test builds look good enough...mac did not finish due to a seemingly unrelated failure, while `root_dataframe_functiontraits` is fixed by a related PR in `roottest`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/575
https://github.com/root-project/root/pull/575:185,reliability,fail,failure,185,"`clang-format` complains about the usual markdown tables longer than 120 lines (I have not changed them). Test builds look good enough...mac did not finish due to a seemingly unrelated failure, while `root_dataframe_functiontraits` is fixed by a related PR in `roottest`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/575
https://github.com/root-project/root/pull/575:15,safety,compl,complains,15,"`clang-format` complains about the usual markdown tables longer than 120 lines (I have not changed them). Test builds look good enough...mac did not finish due to a seemingly unrelated failure, while `root_dataframe_functiontraits` is fixed by a related PR in `roottest`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/575
https://github.com/root-project/root/pull/575:106,safety,Test,Test,106,"`clang-format` complains about the usual markdown tables longer than 120 lines (I have not changed them). Test builds look good enough...mac did not finish due to a seemingly unrelated failure, while `root_dataframe_functiontraits` is fixed by a related PR in `roottest`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/575
https://github.com/root-project/root/pull/575:15,security,compl,complains,15,"`clang-format` complains about the usual markdown tables longer than 120 lines (I have not changed them). Test builds look good enough...mac did not finish due to a seemingly unrelated failure, while `root_dataframe_functiontraits` is fixed by a related PR in `roottest`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/575
https://github.com/root-project/root/pull/575:106,testability,Test,Test,106,"`clang-format` complains about the usual markdown tables longer than 120 lines (I have not changed them). Test builds look good enough...mac did not finish due to a seemingly unrelated failure, while `root_dataframe_functiontraits` is fixed by a related PR in `roottest`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/575
https://github.com/root-project/root/pull/577:51,deployability,version,version,51,"I see that almost nothing is left from the initial version. Shall we change the author attribution, too?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:51,integrability,version,version,51,"I see that almost nothing is left from the initial version. Shall we change the author attribution, too?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:51,modifiability,version,version,51,"I see that almost nothing is left from the initial version. Shall we change the author attribution, too?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:80,security,auth,author,80,"I see that almost nothing is left from the initial version. Shall we change the author attribution, too?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:51,modifiability,variab,variable,51,Some unrelated commit broke the master (undeclared variable).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:241,usability,prefer,prefer,241,"@vgvassilev While I agree with you about little from the previous implementation being there now, I don't think it's necessary to remove attribution, as the code did come from GeantV. Unless @pcanal and/or Witek want to remove themselves, I prefer to give proper credit for the initial idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:6,usability,support,support,6,"Hi, I support being inclusive in recognising credit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:5,deployability,version,version,5,"This version still unfortunately fails with the stack trace below. This is true even if I call `mytree->ResetBit(kMustCleanup);` right after creation in the Google test. It did take ~1500 runs to fail, however. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7fbd8b86a700 (LWP 3468)):. #0 0x00007fbd8e6deb7b in __GI___waitpid (pid=3475, stat_loc=stat_loc. entry=0x7fbd8b863080, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007fbd8e6661eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fbd8f7d1e1d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007fbd8f7d440c in TUnixSystem::DispatchSignals (this=0x111a4f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3632. #5 <signal handler called>. #6 TList::Remove (this=this. entry=0x1134310, obj=obj. entry=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/TList.cxx:705. #7 0x00007fbd8f7546be in THashList::Remove (this=0x1134310, obj=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/THashList.cxx:289. #8 0x00007fbd900270ea in TFileMerger::~TFileMerger (this=0x7fbd8b865a90, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:110. #9 0x00007fbd90001798 in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:33,deployability,fail,fails,33,"This version still unfortunately fails with the stack trace below. This is true even if I call `mytree->ResetBit(kMustCleanup);` right after creation in the Google test. It did take ~1500 runs to fail, however. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7fbd8b86a700 (LWP 3468)):. #0 0x00007fbd8e6deb7b in __GI___waitpid (pid=3475, stat_loc=stat_loc. entry=0x7fbd8b863080, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007fbd8e6661eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fbd8f7d1e1d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007fbd8f7d440c in TUnixSystem::DispatchSignals (this=0x111a4f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3632. #5 <signal handler called>. #6 TList::Remove (this=this. entry=0x1134310, obj=obj. entry=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/TList.cxx:705. #7 0x00007fbd8f7546be in THashList::Remove (this=0x1134310, obj=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/THashList.cxx:289. #8 0x00007fbd900270ea in TFileMerger::~TFileMerger (this=0x7fbd8b865a90, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:110. #9 0x00007fbd90001798 in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:48,deployability,stack,stack,48,"This version still unfortunately fails with the stack trace below. This is true even if I call `mytree->ResetBit(kMustCleanup);` right after creation in the Google test. It did take ~1500 runs to fail, however. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7fbd8b86a700 (LWP 3468)):. #0 0x00007fbd8e6deb7b in __GI___waitpid (pid=3475, stat_loc=stat_loc. entry=0x7fbd8b863080, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007fbd8e6661eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fbd8f7d1e1d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007fbd8f7d440c in TUnixSystem::DispatchSignals (this=0x111a4f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3632. #5 <signal handler called>. #6 TList::Remove (this=this. entry=0x1134310, obj=obj. entry=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/TList.cxx:705. #7 0x00007fbd8f7546be in THashList::Remove (this=0x1134310, obj=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/THashList.cxx:289. #8 0x00007fbd900270ea in TFileMerger::~TFileMerger (this=0x7fbd8b865a90, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:110. #9 0x00007fbd90001798 in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:196,deployability,fail,fail,196,"This version still unfortunately fails with the stack trace below. This is true even if I call `mytree->ResetBit(kMustCleanup);` right after creation in the Google test. It did take ~1500 runs to fail, however. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7fbd8b86a700 (LWP 3468)):. #0 0x00007fbd8e6deb7b in __GI___waitpid (pid=3475, stat_loc=stat_loc. entry=0x7fbd8b863080, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007fbd8e6661eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fbd8f7d1e1d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007fbd8f7d440c in TUnixSystem::DispatchSignals (this=0x111a4f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3632. #5 <signal handler called>. #6 TList::Remove (this=this. entry=0x1134310, obj=obj. entry=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/TList.cxx:705. #7 0x00007fbd8f7546be in THashList::Remove (this=0x1134310, obj=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/THashList.cxx:289. #8 0x00007fbd900270ea in TFileMerger::~TFileMerger (this=0x7fbd8b865a90, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:110. #9 0x00007fbd90001798 in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:315,deployability,stack,stack,315,"This version still unfortunately fails with the stack trace below. This is true even if I call `mytree->ResetBit(kMustCleanup);` right after creation in the Google test. It did take ~1500 runs to fail, however. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7fbd8b86a700 (LWP 3468)):. #0 0x00007fbd8e6deb7b in __GI___waitpid (pid=3475, stat_loc=stat_loc. entry=0x7fbd8b863080, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007fbd8e6661eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fbd8f7d1e1d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007fbd8f7d440c in TUnixSystem::DispatchSignals (this=0x111a4f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3632. #5 <signal handler called>. #6 TList::Remove (this=this. entry=0x1134310, obj=obj. entry=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/TList.cxx:705. #7 0x00007fbd8f7546be in THashList::Remove (this=0x1134310, obj=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/THashList.cxx:289. #8 0x00007fbd900270ea in TFileMerger::~TFileMerger (this=0x7fbd8b865a90, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:110. #9 0x00007fbd90001798 in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:868,deployability,Stack,StackTrace,868,"This version still unfortunately fails with the stack trace below. This is true even if I call `mytree->ResetBit(kMustCleanup);` right after creation in the Google test. It did take ~1500 runs to fail, however. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7fbd8b86a700 (LWP 3468)):. #0 0x00007fbd8e6deb7b in __GI___waitpid (pid=3475, stat_loc=stat_loc. entry=0x7fbd8b863080, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007fbd8e6661eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fbd8f7d1e1d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007fbd8f7d440c in TUnixSystem::DispatchSignals (this=0x111a4f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3632. #5 <signal handler called>. #6 TList::Remove (this=this. entry=0x1134310, obj=obj. entry=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/TList.cxx:705. #7 0x00007fbd8f7546be in THashList::Remove (this=0x1134310, obj=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/THashList.cxx:289. #8 0x00007fbd900270ea in TFileMerger::~TFileMerger (this=0x7fbd8b865a90, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:110. #9 0x00007fbd90001798 in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:655,energy efficiency,optim,optimized,655,"This version still unfortunately fails with the stack trace below. This is true even if I call `mytree->ResetBit(kMustCleanup);` right after creation in the Google test. It did take ~1500 runs to fail, however. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7fbd8b86a700 (LWP 3468)):. #0 0x00007fbd8e6deb7b in __GI___waitpid (pid=3475, stat_loc=stat_loc. entry=0x7fbd8b863080, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007fbd8e6661eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fbd8f7d1e1d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007fbd8f7d440c in TUnixSystem::DispatchSignals (this=0x111a4f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3632. #5 <signal handler called>. #6 TList::Remove (this=this. entry=0x1134310, obj=obj. entry=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/TList.cxx:705. #7 0x00007fbd8f7546be in THashList::Remove (this=0x1134310, obj=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/THashList.cxx:289. #8 0x00007fbd900270ea in TFileMerger::~TFileMerger (this=0x7fbd8b865a90, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:110. #9 0x00007fbd90001798 in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:759,energy efficiency,optim,optimized,759,"This version still unfortunately fails with the stack trace below. This is true even if I call `mytree->ResetBit(kMustCleanup);` right after creation in the Google test. It did take ~1500 runs to fail, however. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7fbd8b86a700 (LWP 3468)):. #0 0x00007fbd8e6deb7b in __GI___waitpid (pid=3475, stat_loc=stat_loc. entry=0x7fbd8b863080, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007fbd8e6661eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fbd8f7d1e1d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007fbd8f7d440c in TUnixSystem::DispatchSignals (this=0x111a4f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3632. #5 <signal handler called>. #6 TList::Remove (this=this. entry=0x1134310, obj=obj. entry=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/TList.cxx:705. #7 0x00007fbd8f7546be in THashList::Remove (this=0x1134310, obj=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/THashList.cxx:289. #8 0x00007fbd900270ea in TFileMerger::~TFileMerger (this=0x7fbd8b865a90, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:110. #9 0x00007fbd90001798 in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:816,energy efficiency,core,core,816,"This version still unfortunately fails with the stack trace below. This is true even if I call `mytree->ResetBit(kMustCleanup);` right after creation in the Google test. It did take ~1500 runs to fail, however. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7fbd8b86a700 (LWP 3468)):. #0 0x00007fbd8e6deb7b in __GI___waitpid (pid=3475, stat_loc=stat_loc. entry=0x7fbd8b863080, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007fbd8e6661eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fbd8f7d1e1d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007fbd8f7d440c in TUnixSystem::DispatchSignals (this=0x111a4f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3632. #5 <signal handler called>. #6 TList::Remove (this=this. entry=0x1134310, obj=obj. entry=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/TList.cxx:705. #7 0x00007fbd8f7546be in THashList::Remove (this=0x1134310, obj=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/THashList.cxx:289. #8 0x00007fbd900270ea in TFileMerger::~TFileMerger (this=0x7fbd8b865a90, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:110. #9 0x00007fbd90001798 in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:921,energy efficiency,core,core,921,"This version still unfortunately fails with the stack trace below. This is true even if I call `mytree->ResetBit(kMustCleanup);` right after creation in the Google test. It did take ~1500 runs to fail, however. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7fbd8b86a700 (LWP 3468)):. #0 0x00007fbd8e6deb7b in __GI___waitpid (pid=3475, stat_loc=stat_loc. entry=0x7fbd8b863080, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007fbd8e6661eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fbd8f7d1e1d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007fbd8f7d440c in TUnixSystem::DispatchSignals (this=0x111a4f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3632. #5 <signal handler called>. #6 TList::Remove (this=this. entry=0x1134310, obj=obj. entry=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/TList.cxx:705. #7 0x00007fbd8f7546be in THashList::Remove (this=0x1134310, obj=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/THashList.cxx:289. #8 0x00007fbd900270ea in TFileMerger::~TFileMerger (this=0x7fbd8b865a90, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:110. #9 0x00007fbd90001798 in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:1084,energy efficiency,core,core,1084,"f I call `mytree->ResetBit(kMustCleanup);` right after creation in the Google test. It did take ~1500 runs to fail, however. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7fbd8b86a700 (LWP 3468)):. #0 0x00007fbd8e6deb7b in __GI___waitpid (pid=3475, stat_loc=stat_loc. entry=0x7fbd8b863080, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007fbd8e6661eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fbd8f7d1e1d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007fbd8f7d440c in TUnixSystem::DispatchSignals (this=0x111a4f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3632. #5 <signal handler called>. #6 TList::Remove (this=this. entry=0x1134310, obj=obj. entry=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/TList.cxx:705. #7 0x00007fbd8f7546be in THashList::Remove (this=0x1134310, obj=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/THashList.cxx:289. #8 0x00007fbd900270ea in TFileMerger::~TFileMerger (this=0x7fbd8b865a90, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:110. #9 0x00007fbd90001798 in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:1250,energy efficiency,core,core,1250,"=======================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7fbd8b86a700 (LWP 3468)):. #0 0x00007fbd8e6deb7b in __GI___waitpid (pid=3475, stat_loc=stat_loc. entry=0x7fbd8b863080, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007fbd8e6661eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fbd8f7d1e1d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007fbd8f7d440c in TUnixSystem::DispatchSignals (this=0x111a4f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3632. #5 <signal handler called>. #6 TList::Remove (this=this. entry=0x1134310, obj=obj. entry=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/TList.cxx:705. #7 0x00007fbd8f7546be in THashList::Remove (this=0x1134310, obj=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/THashList.cxx:289. #8 0x00007fbd900270ea in TFileMerger::~TFileMerger (this=0x7fbd8b865a90, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:110. #9 0x00007fbd90001798 in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:1384,energy efficiency,core,core,1384,"=================. Thread 2 (Thread 0x7fbd8b86a700 (LWP 3468)):. #0 0x00007fbd8e6deb7b in __GI___waitpid (pid=3475, stat_loc=stat_loc. entry=0x7fbd8b863080, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007fbd8e6661eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fbd8f7d1e1d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007fbd8f7d440c in TUnixSystem::DispatchSignals (this=0x111a4f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3632. #5 <signal handler called>. #6 TList::Remove (this=this. entry=0x1134310, obj=obj. entry=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/TList.cxx:705. #7 0x00007fbd8f7546be in THashList::Remove (this=0x1134310, obj=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/THashList.cxx:289. #8 0x00007fbd900270ea in TFileMerger::~TFileMerger (this=0x7fbd8b865a90, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:110. #9 0x00007fbd90001798 in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/ama",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:1501,energy efficiency,optim,optimized,1501,"_loc=stat_loc. entry=0x7fbd8b863080, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007fbd8e6661eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fbd8f7d1e1d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007fbd8f7d440c in TUnixSystem::DispatchSignals (this=0x111a4f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3632. #5 <signal handler called>. #6 TList::Remove (this=this. entry=0x1134310, obj=obj. entry=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/TList.cxx:705. #7 0x00007fbd8f7546be in THashList::Remove (this=0x1134310, obj=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/THashList.cxx:289. #8 0x00007fbd900270ea in TFileMerger::~TFileMerger (this=0x7fbd8b865a90, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:110. #9 0x00007fbd90001798 in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (thi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:2358,energy efficiency,optim,optimized,2358,"home/amadio/src/root/core/cont/src/THashList.cxx:289. #8 0x00007fbd900270ea in TFileMerger::~TFileMerger (this=0x7fbd8b865a90, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:110. #9 0x00007fbd90001798 in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x0000000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:2509,energy efficiency,optim,optimized,2509,">) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:110. #9 0x00007fbd90001798 in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x0000000000437",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:2731,energy efficiency,optim,optimized,2731,"007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:2755,energy efficiency,optim,optimized,2755,"from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-pref",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:4015,energy efficiency,optim,optimized,4015,"x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000418789 in RUN_ALL_TESTS () at /var/tmp/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=1, argv=0x7ffcab4c9b58) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ==",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:4039,energy efficiency,optim,optimized,4039,"arallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000418789 in RUN_ALL_TESTS () at /var/tmp/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=1, argv=0x7ffcab4c9b58) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ==========================",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:5,integrability,version,version,5,"This version still unfortunately fails with the stack trace below. This is true even if I call `mytree->ResetBit(kMustCleanup);` right after creation in the Google test. It did take ~1500 runs to fail, however. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7fbd8b86a700 (LWP 3468)):. #0 0x00007fbd8e6deb7b in __GI___waitpid (pid=3475, stat_loc=stat_loc. entry=0x7fbd8b863080, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007fbd8e6661eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fbd8f7d1e1d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007fbd8f7d440c in TUnixSystem::DispatchSignals (this=0x111a4f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3632. #5 <signal handler called>. #6 TList::Remove (this=this. entry=0x1134310, obj=obj. entry=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/TList.cxx:705. #7 0x00007fbd8f7546be in THashList::Remove (this=0x1134310, obj=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/THashList.cxx:289. #8 0x00007fbd900270ea in TFileMerger::~TFileMerger (this=0x7fbd8b865a90, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:110. #9 0x00007fbd90001798 in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:3988,integrability,event,event,3988,":*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000418789 in RUN_ALL_TESTS () at /var/tmp/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=1, argv=0x7ffcab4c9b58) at /var/tmp/root/googletest-prefix/src/googletest/google",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:4475,integrability,event,event,4475,"ation=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000418789 in RUN_ALL_TESTS () at /var/tmp/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=1, argv=0x7ffcab4c9b58) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:5,modifiability,version,version,5,"This version still unfortunately fails with the stack trace below. This is true even if I call `mytree->ResetBit(kMustCleanup);` right after creation in the Google test. It did take ~1500 runs to fail, however. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7fbd8b86a700 (LWP 3468)):. #0 0x00007fbd8e6deb7b in __GI___waitpid (pid=3475, stat_loc=stat_loc. entry=0x7fbd8b863080, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007fbd8e6661eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fbd8f7d1e1d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007fbd8f7d440c in TUnixSystem::DispatchSignals (this=0x111a4f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3632. #5 <signal handler called>. #6 TList::Remove (this=this. entry=0x1134310, obj=obj. entry=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/TList.cxx:705. #7 0x00007fbd8f7546be in THashList::Remove (this=0x1134310, obj=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/THashList.cxx:289. #8 0x00007fbd900270ea in TFileMerger::~TFileMerger (this=0x7fbd8b865a90, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:110. #9 0x00007fbd90001798 in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:655,performance,optimiz,optimized,655,"This version still unfortunately fails with the stack trace below. This is true even if I call `mytree->ResetBit(kMustCleanup);` right after creation in the Google test. It did take ~1500 runs to fail, however. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7fbd8b86a700 (LWP 3468)):. #0 0x00007fbd8e6deb7b in __GI___waitpid (pid=3475, stat_loc=stat_loc. entry=0x7fbd8b863080, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007fbd8e6661eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fbd8f7d1e1d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007fbd8f7d440c in TUnixSystem::DispatchSignals (this=0x111a4f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3632. #5 <signal handler called>. #6 TList::Remove (this=this. entry=0x1134310, obj=obj. entry=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/TList.cxx:705. #7 0x00007fbd8f7546be in THashList::Remove (this=0x1134310, obj=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/THashList.cxx:289. #8 0x00007fbd900270ea in TFileMerger::~TFileMerger (this=0x7fbd8b865a90, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:110. #9 0x00007fbd90001798 in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:759,performance,optimiz,optimized,759,"This version still unfortunately fails with the stack trace below. This is true even if I call `mytree->ResetBit(kMustCleanup);` right after creation in the Google test. It did take ~1500 runs to fail, however. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7fbd8b86a700 (LWP 3468)):. #0 0x00007fbd8e6deb7b in __GI___waitpid (pid=3475, stat_loc=stat_loc. entry=0x7fbd8b863080, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007fbd8e6661eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fbd8f7d1e1d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007fbd8f7d440c in TUnixSystem::DispatchSignals (this=0x111a4f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3632. #5 <signal handler called>. #6 TList::Remove (this=this. entry=0x1134310, obj=obj. entry=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/TList.cxx:705. #7 0x00007fbd8f7546be in THashList::Remove (this=0x1134310, obj=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/THashList.cxx:289. #8 0x00007fbd900270ea in TFileMerger::~TFileMerger (this=0x7fbd8b865a90, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:110. #9 0x00007fbd90001798 in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:1501,performance,optimiz,optimized,1501,"_loc=stat_loc. entry=0x7fbd8b863080, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007fbd8e6661eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fbd8f7d1e1d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007fbd8f7d440c in TUnixSystem::DispatchSignals (this=0x111a4f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3632. #5 <signal handler called>. #6 TList::Remove (this=this. entry=0x1134310, obj=obj. entry=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/TList.cxx:705. #7 0x00007fbd8f7546be in THashList::Remove (this=0x1134310, obj=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/THashList.cxx:289. #8 0x00007fbd900270ea in TFileMerger::~TFileMerger (this=0x7fbd8b865a90, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:110. #9 0x00007fbd90001798 in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (thi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:2358,performance,optimiz,optimized,2358,"home/amadio/src/root/core/cont/src/THashList.cxx:289. #8 0x00007fbd900270ea in TFileMerger::~TFileMerger (this=0x7fbd8b865a90, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:110. #9 0x00007fbd90001798 in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x0000000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:2509,performance,optimiz,optimized,2509,">) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:110. #9 0x00007fbd90001798 in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x0000000000437",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:2731,performance,optimiz,optimized,2731,"007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:2755,performance,optimiz,optimized,2755,"from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-pref",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:4015,performance,optimiz,optimized,4015,"x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000418789 in RUN_ALL_TESTS () at /var/tmp/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=1, argv=0x7ffcab4c9b58) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ==",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:4039,performance,optimiz,optimized,4039,"arallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000418789 in RUN_ALL_TESTS () at /var/tmp/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=1, argv=0x7ffcab4c9b58) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ==========================",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:33,reliability,fail,fails,33,"This version still unfortunately fails with the stack trace below. This is true even if I call `mytree->ResetBit(kMustCleanup);` right after creation in the Google test. It did take ~1500 runs to fail, however. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7fbd8b86a700 (LWP 3468)):. #0 0x00007fbd8e6deb7b in __GI___waitpid (pid=3475, stat_loc=stat_loc. entry=0x7fbd8b863080, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007fbd8e6661eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fbd8f7d1e1d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007fbd8f7d440c in TUnixSystem::DispatchSignals (this=0x111a4f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3632. #5 <signal handler called>. #6 TList::Remove (this=this. entry=0x1134310, obj=obj. entry=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/TList.cxx:705. #7 0x00007fbd8f7546be in THashList::Remove (this=0x1134310, obj=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/THashList.cxx:289. #8 0x00007fbd900270ea in TFileMerger::~TFileMerger (this=0x7fbd8b865a90, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:110. #9 0x00007fbd90001798 in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:196,reliability,fail,fail,196,"This version still unfortunately fails with the stack trace below. This is true even if I call `mytree->ResetBit(kMustCleanup);` right after creation in the Google test. It did take ~1500 runs to fail, however. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7fbd8b86a700 (LWP 3468)):. #0 0x00007fbd8e6deb7b in __GI___waitpid (pid=3475, stat_loc=stat_loc. entry=0x7fbd8b863080, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007fbd8e6661eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fbd8f7d1e1d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007fbd8f7d440c in TUnixSystem::DispatchSignals (this=0x111a4f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3632. #5 <signal handler called>. #6 TList::Remove (this=this. entry=0x1134310, obj=obj. entry=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/TList.cxx:705. #7 0x00007fbd8f7546be in THashList::Remove (this=0x1134310, obj=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/THashList.cxx:289. #8 0x00007fbd900270ea in TFileMerger::~TFileMerger (this=0x7fbd8b865a90, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:110. #9 0x00007fbd90001798 in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:164,safety,test,test,164,"This version still unfortunately fails with the stack trace below. This is true even if I call `mytree->ResetBit(kMustCleanup);` right after creation in the Google test. It did take ~1500 runs to fail, however. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7fbd8b86a700 (LWP 3468)):. #0 0x00007fbd8e6deb7b in __GI___waitpid (pid=3475, stat_loc=stat_loc. entry=0x7fbd8b863080, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007fbd8e6661eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fbd8f7d1e1d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007fbd8f7d440c in TUnixSystem::DispatchSignals (this=0x111a4f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3632. #5 <signal handler called>. #6 TList::Remove (this=this. entry=0x1134310, obj=obj. entry=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/TList.cxx:705. #7 0x00007fbd8f7546be in THashList::Remove (this=0x1134310, obj=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/THashList.cxx:289. #8 0x00007fbd900270ea in TFileMerger::~TFileMerger (this=0x7fbd8b865a90, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:110. #9 0x00007fbd90001798 in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:2493,safety,Test,TestBody,2493,"rg=<optimized out>) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:110. #9 0x00007fbd90001798 in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:2556,safety,test,test,2556,"erger.cxx:110. #9 0x00007fbd90001798 in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b9",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:2608,safety,test,testing,2608,"ntal::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/g",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:2666,safety,test,testing,2666," at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in test",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:2675,safety,Test,Test,2675,"me/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:2711,safety,test,test,2711,"Merger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:2854,safety,test,testing,2854," (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::Handl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:2909,safety,test,testing,2909,"007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::Un",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:2918,safety,Test,Test,2918,"e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:2977,safety,test,testing,2977,"e.S:105. Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environme",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:2986,safety,Test,Test,2986,". Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:2995,safety,test,testing,2995,"(Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event liste",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:3004,safety,Test,Test,3004," 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"",",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:3066,safety,Test,TestBody,3066,"oin (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:3118,safety,test,test,3118,"at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:3235,safety,test,testing,3235,"dc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (objec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:3244,safety,Test,Test,3244,".6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x117",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:3376,safety,test,testing,3376,"me/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:3385,safety,Test,TestInfo,3385,"/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::Ru",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:3521,safety,test,testing,3521,"at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-pre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:3530,safety,Test,TestCase,3530,"amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/g",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:3666,safety,test,testing,3666,"ing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:3834,safety,test,testing,3834,"est.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000418789 in RUN_ALL_TESTS () at /var/tmp/root/googletest-pre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:3892,safety,test,testing,3892,"dIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000418789 in RUN_ALL_TESTS () at /var/tmp/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:3961,safety,test,test,3961,"method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000418789 in RUN_ALL_TESTS () at /var/tmp/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=1, argv=0x7ffcab4c9b58) at /var/tmp/root/googletest-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:4139,safety,test,testing,4139,"ation=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000418789 in RUN_ALL_TESTS () at /var/tmp/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=1, argv=0x7ffcab4c9b58) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:4194,safety,test,testing,4194,"ation=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000418789 in RUN_ALL_TESTS () at /var/tmp/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=1, argv=0x7ffcab4c9b58) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:4266,safety,test,testing,4266,"ation=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000418789 in RUN_ALL_TESTS () at /var/tmp/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=1, argv=0x7ffcab4c9b58) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:4302,safety,test,testing,4302,"ation=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000418789 in RUN_ALL_TESTS () at /var/tmp/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=1, argv=0x7ffcab4c9b58) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:4354,safety,test,testing,4354,"ation=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000418789 in RUN_ALL_TESTS () at /var/tmp/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=1, argv=0x7ffcab4c9b58) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:4448,safety,test,test,4448,"ation=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000418789 in RUN_ALL_TESTS () at /var/tmp/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=1, argv=0x7ffcab4c9b58) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:4600,safety,test,testing,4600,"ation=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000418789 in RUN_ALL_TESTS () at /var/tmp/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=1, argv=0x7ffcab4c9b58) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:4639,safety,test,testing,4639,"ation=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000418789 in RUN_ALL_TESTS () at /var/tmp/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=1, argv=0x7ffcab4c9b58) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:1124,security,sign,signal,1124,"` right after creation in the Google test. It did take ~1500 runs to fail, however. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7fbd8b86a700 (LWP 3468)):. #0 0x00007fbd8e6deb7b in __GI___waitpid (pid=3475, stat_loc=stat_loc. entry=0x7fbd8b863080, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007fbd8e6661eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fbd8f7d1e1d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007fbd8f7d440c in TUnixSystem::DispatchSignals (this=0x111a4f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3632. #5 <signal handler called>. #6 TList::Remove (this=this. entry=0x1134310, obj=obj. entry=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/TList.cxx:705. #7 0x00007fbd8f7546be in THashList::Remove (this=0x1134310, obj=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/THashList.cxx:289. #8 0x00007fbd900270ea in TFileMerger::~TFileMerger (this=0x7fbd8b865a90, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:110. #9 0x00007fbd90001798 in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:54,testability,trace,trace,54,"This version still unfortunately fails with the stack trace below. This is true even if I call `mytree->ResetBit(kMustCleanup);` right after creation in the Google test. It did take ~1500 runs to fail, however. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7fbd8b86a700 (LWP 3468)):. #0 0x00007fbd8e6deb7b in __GI___waitpid (pid=3475, stat_loc=stat_loc. entry=0x7fbd8b863080, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007fbd8e6661eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fbd8f7d1e1d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007fbd8f7d440c in TUnixSystem::DispatchSignals (this=0x111a4f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3632. #5 <signal handler called>. #6 TList::Remove (this=this. entry=0x1134310, obj=obj. entry=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/TList.cxx:705. #7 0x00007fbd8f7546be in THashList::Remove (this=0x1134310, obj=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/THashList.cxx:289. #8 0x00007fbd900270ea in TFileMerger::~TFileMerger (this=0x7fbd8b865a90, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:110. #9 0x00007fbd90001798 in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:164,testability,test,test,164,"This version still unfortunately fails with the stack trace below. This is true even if I call `mytree->ResetBit(kMustCleanup);` right after creation in the Google test. It did take ~1500 runs to fail, however. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7fbd8b86a700 (LWP 3468)):. #0 0x00007fbd8e6deb7b in __GI___waitpid (pid=3475, stat_loc=stat_loc. entry=0x7fbd8b863080, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007fbd8e6661eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fbd8f7d1e1d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007fbd8f7d440c in TUnixSystem::DispatchSignals (this=0x111a4f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3632. #5 <signal handler called>. #6 TList::Remove (this=this. entry=0x1134310, obj=obj. entry=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/TList.cxx:705. #7 0x00007fbd8f7546be in THashList::Remove (this=0x1134310, obj=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/THashList.cxx:289. #8 0x00007fbd900270ea in TFileMerger::~TFileMerger (this=0x7fbd8b865a90, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:110. #9 0x00007fbd90001798 in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:321,testability,trace,trace,321,"This version still unfortunately fails with the stack trace below. This is true even if I call `mytree->ResetBit(kMustCleanup);` right after creation in the Google test. It did take ~1500 runs to fail, however. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7fbd8b86a700 (LWP 3468)):. #0 0x00007fbd8e6deb7b in __GI___waitpid (pid=3475, stat_loc=stat_loc. entry=0x7fbd8b863080, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007fbd8e6661eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fbd8f7d1e1d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x111a4f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007fbd8f7d440c in TUnixSystem::DispatchSignals (this=0x111a4f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3632. #5 <signal handler called>. #6 TList::Remove (this=this. entry=0x1134310, obj=obj. entry=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/TList.cxx:705. #7 0x00007fbd8f7546be in THashList::Remove (this=0x1134310, obj=0x7fbd8b865a90) at /home/amadio/src/root/core/cont/src/THashList.cxx:289. #8 0x00007fbd900270ea in TFileMerger::~TFileMerger (this=0x7fbd8b865a90, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:110. #9 0x00007fbd90001798 in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:2493,testability,Test,TestBody,2493,"rg=<optimized out>) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:110. #9 0x00007fbd90001798 in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:2556,testability,test,test,2556,"erger.cxx:110. #9 0x00007fbd90001798 in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b9",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:2608,testability,test,testing,2608,"ntal::TBufferMerger::WriteOutputFile (this=0x7ffcab4c96f0) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/g",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:2666,testability,test,testing,2666," at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in test",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:2675,testability,Test,Test,2675,"me/amadio/src/root/io/io/src/TBufferMerger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:2711,testability,test,test,2711,"Merger.cxx:63. #10 0x00007fbd8f1d3572 in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #11 0x00007fbd8e9c43f4 in start_thread (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:2854,testability,test,testing,2854," (arg=0x7fbd8b86a700) at pthread_create.c:333. #12 0x00007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::Handl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:2909,testability,test,testing,2909,"007fbd8e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::Un",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:2918,testability,Test,Test,2918,"e70f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:2977,testability,test,testing,2977,"e.S:105. Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environme",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:2986,testability,Test,Test,2986,". Thread 1 (Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:2995,testability,test,testing,2995,"(Thread 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event liste",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:3004,testability,Test,Test,3004," 0x7fbd90beaa80 (LWP 3446)):. #0 0x00007fbd8e9c56cd in pthread_join (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"",",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:3066,testability,Test,TestBody,3066,"oin (threadid=140452066404096, thread_return=0x0) at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:3118,testability,test,test,3118,"at pthread_join.c:90. #1 0x00007fbd8f1d3427 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/libstdc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:3235,testability,test,testing,3235,"dc++.so.6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (objec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:3244,testability,Test,Test,3244,".6. #2 0x00007fbd90000dea in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7ffcab4c96f0, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x117",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:3376,testability,test,testing,3376,"me/amadio/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:3385,testability,Test,TestInfo,3385,"/src/root/io/io/src/TBufferMerger.cxx:37. #3 0x0000000000419040 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::Ru",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:3521,testability,test,testing,3521,"at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-pre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:3530,testability,Test,TestCase,3530,"amadio/src/root/io/io/test/TBufferMerger.cxx:81. #4 0x0000000000440553 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/g",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:3666,testability,test,testing,3666,"ing::Test, void> (location=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:3685,testability,Unit,UnitTestImpl,3685,"ation=0x4436da ""the test body"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:3834,testability,test,testing,3834,"est.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000418789 in RUN_ALL_TESTS () at /var/tmp/root/googletest-pre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:3892,testability,test,testing,3892,"dIfSupported<testing::Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000418789 in RUN_ALL_TESTS () at /var/tmp/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:3911,testability,Unit,UnitTestImpl,3911,":Test, void> (object=object. entry=0x1170670, method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000418789 in RUN_ALL_TESTS () at /var/tmp/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=1, arg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:3961,testability,test,test,3961,"method=(void (testing::Test::*)(testing::Test * const)) 0x418ec0 <TBufferMerger_ParallelTreeFill_Test::TestBody()>, location=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000418789 in RUN_ALL_TESTS () at /var/tmp/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=1, argv=0x7ffcab4c9b58) at /var/tmp/root/googletest-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:4139,testability,test,testing,4139,"ation=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000418789 in RUN_ALL_TESTS () at /var/tmp/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=1, argv=0x7ffcab4c9b58) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:4194,testability,test,testing,4194,"ation=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000418789 in RUN_ALL_TESTS () at /var/tmp/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=1, argv=0x7ffcab4c9b58) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:4213,testability,Unit,UnitTestImpl,4213,"ation=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000418789 in RUN_ALL_TESTS () at /var/tmp/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=1, argv=0x7ffcab4c9b58) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:4266,testability,test,testing,4266,"ation=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000418789 in RUN_ALL_TESTS () at /var/tmp/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=1, argv=0x7ffcab4c9b58) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:4285,testability,Unit,UnitTestImpl,4285,"ation=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000418789 in RUN_ALL_TESTS () at /var/tmp/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=1, argv=0x7ffcab4c9b58) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:4302,testability,test,testing,4302,"ation=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000418789 in RUN_ALL_TESTS () at /var/tmp/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=1, argv=0x7ffcab4c9b58) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:4321,testability,Unit,UnitTestImpl,4321,"ation=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000418789 in RUN_ALL_TESTS () at /var/tmp/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=1, argv=0x7ffcab4c9b58) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:4354,testability,test,testing,4354,"ation=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000418789 in RUN_ALL_TESTS () at /var/tmp/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=1, argv=0x7ffcab4c9b58) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:4373,testability,Unit,UnitTestImpl,4373,"ation=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000418789 in RUN_ALL_TESTS () at /var/tmp/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=1, argv=0x7ffcab4c9b58) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:4448,testability,test,test,4448,"ation=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000418789 in RUN_ALL_TESTS () at /var/tmp/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=1, argv=0x7ffcab4c9b58) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:4600,testability,test,testing,4600,"ation=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000418789 in RUN_ALL_TESTS () at /var/tmp/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=1, argv=0x7ffcab4c9b58) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:4609,testability,Unit,UnitTest,4609,"ation=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000418789 in RUN_ALL_TESTS () at /var/tmp/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=1, argv=0x7ffcab4c9b58) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:4639,testability,test,testing,4639,"ation=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000418789 in RUN_ALL_TESTS () at /var/tmp/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=1, argv=0x7ffcab4c9b58) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:4648,testability,Unit,UnitTest,4648,"ation=location. entry=0x4436da ""the test body"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x000000000043709a in testing::Test::Run (this=0x1170670) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004371e8 in testing::TestInfo::Run (this=0x1171010) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004372c5 in testing::TestCase::Run (this=0x1170b90) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x000000000043759f in testing::internal::UnitTestImpl::RunAllTests (this=0x11708f0) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x0000000000440a33 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x442a78 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x11708f0, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x437350 <testing::internal::UnitTestImpl::RunAllTests()>, location=location. entry=0x442a78 ""auxiliary test code (environments or event listeners)"") at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x00000000004378d0 in testing::UnitTest::Run (this=0x651840 <testing::UnitTest::GetInstance()::instance>) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000418789 in RUN_ALL_TESTS () at /var/tmp/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=1, argv=0x7ffcab4c9b58) at /var/tmp/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:8,availability,error,errors,8,The Mac errors are not related to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:8,performance,error,errors,8,The Mac errors are not related to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:8,safety,error,errors,8,The Mac errors are not related to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/577:8,usability,error,errors,8,The Mac errors are not related to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/577
https://github.com/root-project/root/pull/578:64,deployability,patch,patches,64,Please merge this into master only after the branch of v6-10-00-patches (which is imminent).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/578
https://github.com/root-project/root/pull/578:64,safety,patch,patches,64,Please merge this into master only after the branch of v6-10-00-patches (which is imminent).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/578
https://github.com/root-project/root/pull/578:64,security,patch,patches,64,Please merge this into master only after the branch of v6-10-00-patches (which is imminent).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/578
https://github.com/root-project/root/pull/578:7,usability,prefer,prefer,7,As you prefer,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/578
https://github.com/root-project/root/pull/578:66,deployability,patch,patches,66,> Please merge this into master only after the branch of v6-10-00-patches (which is imminent). @Axel-Naumann . This PR solves most of known problems with TBufferJSON and does not touch basic I/O.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/578
https://github.com/root-project/root/pull/578:191,performance,I/O,I/O,191,> Please merge this into master only after the branch of v6-10-00-patches (which is imminent). @Axel-Naumann . This PR solves most of known problems with TBufferJSON and does not touch basic I/O.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/578
https://github.com/root-project/root/pull/578:170,reliability,doe,does,170,> Please merge this into master only after the branch of v6-10-00-patches (which is imminent). @Axel-Naumann . This PR solves most of known problems with TBufferJSON and does not touch basic I/O.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/578
https://github.com/root-project/root/pull/578:66,safety,patch,patches,66,> Please merge this into master only after the branch of v6-10-00-patches (which is imminent). @Axel-Naumann . This PR solves most of known problems with TBufferJSON and does not touch basic I/O.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/578
https://github.com/root-project/root/pull/578:66,security,patch,patches,66,> Please merge this into master only after the branch of v6-10-00-patches (which is imminent). @Axel-Naumann . This PR solves most of known problems with TBufferJSON and does not touch basic I/O.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/578
https://github.com/root-project/root/pull/579:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/579
https://github.com/root-project/root/pull/579:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/579
https://github.com/root-project/root/pull/579:10,deployability,patch,patches,10,"Yes +6-12-patches, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/579
https://github.com/root-project/root/pull/579:10,safety,patch,patches,10,"Yes +6-12-patches, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/579
https://github.com/root-project/root/pull/579:10,security,patch,patches,10,"Yes +6-12-patches, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/579
https://github.com/root-project/root/pull/580:11,deployability,build,build,11,@phsft-bot build with flags -Dhttp=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/580
https://github.com/root-project/root/pull/582:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/582
https://github.com/root-project/root/pull/582:45,availability,failur,failures,45,"@osschar, could you look at the clang-format failures? All modulo few alignment suggestions are reasonable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/582
https://github.com/root-project/root/pull/582:45,deployability,fail,failures,45,"@osschar, could you look at the clang-format failures? All modulo few alignment suggestions are reasonable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/582
https://github.com/root-project/root/pull/582:59,deployability,modul,modulo,59,"@osschar, could you look at the clang-format failures? All modulo few alignment suggestions are reasonable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/582
https://github.com/root-project/root/pull/582:38,interoperability,format,format,38,"@osschar, could you look at the clang-format failures? All modulo few alignment suggestions are reasonable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/582
https://github.com/root-project/root/pull/582:59,modifiability,modul,modulo,59,"@osschar, could you look at the clang-format failures? All modulo few alignment suggestions are reasonable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/582
https://github.com/root-project/root/pull/582:45,performance,failur,failures,45,"@osschar, could you look at the clang-format failures? All modulo few alignment suggestions are reasonable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/582
https://github.com/root-project/root/pull/582:45,reliability,fail,failures,45,"@osschar, could you look at the clang-format failures? All modulo few alignment suggestions are reasonable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/582
https://github.com/root-project/root/pull/582:59,safety,modul,modulo,59,"@osschar, could you look at the clang-format failures? All modulo few alignment suggestions are reasonable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/582
https://github.com/root-project/root/pull/582:126,interoperability,format,format,126,Hi @vgvassilev ... I went through it ... and this makes no sense. This is how all gl/eve are written. If you want to run clan-format on both whole packages it's fine with me but i'm not going to do it by hand on a set of random files that get touched for bugfixes :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/582
https://github.com/root-project/root/pull/582:147,modifiability,pac,packages,147,Hi @vgvassilev ... I went through it ... and this makes no sense. This is how all gl/eve are written. If you want to run clan-format on both whole packages it's fine with me but i'm not going to do it by hand on a set of random files that get touched for bugfixes :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/582
https://github.com/root-project/root/pull/582:11,deployability,build,build,11,@phsft-bot build! I understand your point. I had mostly in mind the changes in the function bodies and the spacing in the `ClassDef`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/582
https://github.com/root-project/root/pull/582:20,testability,understand,understand,20,@phsft-bot build! I understand your point. I had mostly in mind the changes in the function bodies and the spacing in the `ClassDef`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/582
https://github.com/root-project/root/pull/582:17,usability,statu,status,17,"Hi,. what is the status of this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/582
https://github.com/root-project/root/pull/582:11,deployability,build,build,11,@phsft-bot build please,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/582
https://github.com/root-project/root/pull/583:55,performance,deadlock,deadlocks,55,"@dpiparo Unfortunately, I think we will need it. I got deadlocks with my other trials. Maybe doing something else in the main thread would work? I will have a look.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:386,performance,deadlock,deadlock,386,"I don't understand how either the goto or the immedidate return are different from the break. If I read correctly, the old code (replaced by just return) was doing:. ```. done = true;. break out of loop over fQueue. check while(!done) condition. return due to end of function. ```. i.e. I don't see any difference except timing ... what am I missing? (I also don't quite understand the deadlock condition but that's another story :) )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:314,safety,except,except,314,"I don't understand how either the goto or the immedidate return are different from the break. If I read correctly, the old code (replaced by just return) was doing:. ```. done = true;. break out of loop over fQueue. check while(!done) condition. return due to end of function. ```. i.e. I don't see any difference except timing ... what am I missing? (I also don't quite understand the deadlock condition but that's another story :) )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:8,testability,understand,understand,8,"I don't understand how either the goto or the immedidate return are different from the break. If I read correctly, the old code (replaced by just return) was doing:. ```. done = true;. break out of loop over fQueue. check while(!done) condition. return due to end of function. ```. i.e. I don't see any difference except timing ... what am I missing? (I also don't quite understand the deadlock condition but that's another story :) )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:371,testability,understand,understand,371,"I don't understand how either the goto or the immedidate return are different from the break. If I read correctly, the old code (replaced by just return) was doing:. ```. done = true;. break out of loop over fQueue. check while(!done) condition. return due to end of function. ```. i.e. I don't see any difference except timing ... what am I missing? (I also don't quite understand the deadlock condition but that's another story :) )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:334,integrability,inject,injected,334,"@pcanal I am also not sure how the deadlock comes about, but looking at it with gdb, I noticed that the writing thread was waiting on the condition variable, while the main thread was waiting to join the writing thread. The change I introduced breaks out of the loop immediately, so it cannot reach the wait again once the nullptr is injected. I've now run the test over 22000 times without getting the deadlock, so I think it's fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:148,modifiability,variab,variable,148,"@pcanal I am also not sure how the deadlock comes about, but looking at it with gdb, I noticed that the writing thread was waiting on the condition variable, while the main thread was waiting to join the writing thread. The change I introduced breaks out of the loop immediately, so it cannot reach the wait again once the nullptr is injected. I've now run the test over 22000 times without getting the deadlock, so I think it's fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:35,performance,deadlock,deadlock,35,"@pcanal I am also not sure how the deadlock comes about, but looking at it with gdb, I noticed that the writing thread was waiting on the condition variable, while the main thread was waiting to join the writing thread. The change I introduced breaks out of the loop immediately, so it cannot reach the wait again once the nullptr is injected. I've now run the test over 22000 times without getting the deadlock, so I think it's fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:377,performance,time,times,377,"@pcanal I am also not sure how the deadlock comes about, but looking at it with gdb, I noticed that the writing thread was waiting on the condition variable, while the main thread was waiting to join the writing thread. The change I introduced breaks out of the loop immediately, so it cannot reach the wait again once the nullptr is injected. I've now run the test over 22000 times without getting the deadlock, so I think it's fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:403,performance,deadlock,deadlock,403,"@pcanal I am also not sure how the deadlock comes about, but looking at it with gdb, I noticed that the writing thread was waiting on the condition variable, while the main thread was waiting to join the writing thread. The change I introduced breaks out of the loop immediately, so it cannot reach the wait again once the nullptr is injected. I've now run the test over 22000 times without getting the deadlock, so I think it's fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:361,safety,test,test,361,"@pcanal I am also not sure how the deadlock comes about, but looking at it with gdb, I noticed that the writing thread was waiting on the condition variable, while the main thread was waiting to join the writing thread. The change I introduced breaks out of the loop immediately, so it cannot reach the wait again once the nullptr is injected. I've now run the test over 22000 times without getting the deadlock, so I think it's fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:334,security,inject,injected,334,"@pcanal I am also not sure how the deadlock comes about, but looking at it with gdb, I noticed that the writing thread was waiting on the condition variable, while the main thread was waiting to join the writing thread. The change I introduced breaks out of the loop immediately, so it cannot reach the wait again once the nullptr is injected. I've now run the test over 22000 times without getting the deadlock, so I think it's fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:361,testability,test,test,361,"@pcanal I am also not sure how the deadlock comes about, but looking at it with gdb, I noticed that the writing thread was waiting on the condition variable, while the main thread was waiting to join the writing thread. The change I introduced breaks out of the loop immediately, so it cannot reach the wait again once the nullptr is injected. I've now run the test over 22000 times without getting the deadlock, so I think it's fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:35,performance,time,times,35,"> I've now run the test over 22000 times without getting the deadlock, so I think it's fixed. I am sure it is not. There is really no functional changes introduces by the commit, just a tad bit of timing difference that might make it harder to stumble upon it. Will write my guess on the deadlock cause and a possible solution in a few minutes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:61,performance,deadlock,deadlock,61,"> I've now run the test over 22000 times without getting the deadlock, so I think it's fixed. I am sure it is not. There is really no functional changes introduces by the commit, just a tad bit of timing difference that might make it harder to stumble upon it. Will write my guess on the deadlock cause and a possible solution in a few minutes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:288,performance,deadlock,deadlock,288,"> I've now run the test over 22000 times without getting the deadlock, so I think it's fixed. I am sure it is not. There is really no functional changes introduces by the commit, just a tad bit of timing difference that might make it harder to stumble upon it. Will write my guess on the deadlock cause and a possible solution in a few minutes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:19,safety,test,test,19,"> I've now run the test over 22000 times without getting the deadlock, so I think it's fixed. I am sure it is not. There is really no functional changes introduces by the commit, just a tad bit of timing difference that might make it harder to stumble upon it. Will write my guess on the deadlock cause and a possible solution in a few minutes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:19,testability,test,test,19,"> I've now run the test over 22000 times without getting the deadlock, so I think it's fixed. I am sure it is not. There is really no functional changes introduces by the commit, just a tad bit of timing difference that might make it harder to stumble upon it. Will write my guess on the deadlock cause and a possible solution in a few minutes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:235,deployability,version,versions,235,"> I am sure it is not. There is really no functional changes introduces by the commit, just a tad bit of timing difference that might make it harder to stumble upon it. Ok, I will wait for your feedback, but the difference between the versions is that one relies on the variable `done` to break out of the outer loop, while the changed version breaks out directly. I cannot see how this can be any worse than before, and since we immediately break out of both loops, I also cannot see how the writing thread could get stuck on the condition variable wait again, which is what I observed before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:336,deployability,version,version,336,"> I am sure it is not. There is really no functional changes introduces by the commit, just a tad bit of timing difference that might make it harder to stumble upon it. Ok, I will wait for your feedback, but the difference between the versions is that one relies on the variable `done` to break out of the outer loop, while the changed version breaks out directly. I cannot see how this can be any worse than before, and since we immediately break out of both loops, I also cannot see how the writing thread could get stuck on the condition variable wait again, which is what I observed before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:578,deployability,observ,observed,578,"> I am sure it is not. There is really no functional changes introduces by the commit, just a tad bit of timing difference that might make it harder to stumble upon it. Ok, I will wait for your feedback, but the difference between the versions is that one relies on the variable `done` to break out of the outer loop, while the changed version breaks out directly. I cannot see how this can be any worse than before, and since we immediately break out of both loops, I also cannot see how the writing thread could get stuck on the condition variable wait again, which is what I observed before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:235,integrability,version,versions,235,"> I am sure it is not. There is really no functional changes introduces by the commit, just a tad bit of timing difference that might make it harder to stumble upon it. Ok, I will wait for your feedback, but the difference between the versions is that one relies on the variable `done` to break out of the outer loop, while the changed version breaks out directly. I cannot see how this can be any worse than before, and since we immediately break out of both loops, I also cannot see how the writing thread could get stuck on the condition variable wait again, which is what I observed before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:336,integrability,version,version,336,"> I am sure it is not. There is really no functional changes introduces by the commit, just a tad bit of timing difference that might make it harder to stumble upon it. Ok, I will wait for your feedback, but the difference between the versions is that one relies on the variable `done` to break out of the outer loop, while the changed version breaks out directly. I cannot see how this can be any worse than before, and since we immediately break out of both loops, I also cannot see how the writing thread could get stuck on the condition variable wait again, which is what I observed before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:235,modifiability,version,versions,235,"> I am sure it is not. There is really no functional changes introduces by the commit, just a tad bit of timing difference that might make it harder to stumble upon it. Ok, I will wait for your feedback, but the difference between the versions is that one relies on the variable `done` to break out of the outer loop, while the changed version breaks out directly. I cannot see how this can be any worse than before, and since we immediately break out of both loops, I also cannot see how the writing thread could get stuck on the condition variable wait again, which is what I observed before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:270,modifiability,variab,variable,270,"> I am sure it is not. There is really no functional changes introduces by the commit, just a tad bit of timing difference that might make it harder to stumble upon it. Ok, I will wait for your feedback, but the difference between the versions is that one relies on the variable `done` to break out of the outer loop, while the changed version breaks out directly. I cannot see how this can be any worse than before, and since we immediately break out of both loops, I also cannot see how the writing thread could get stuck on the condition variable wait again, which is what I observed before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:336,modifiability,version,version,336,"> I am sure it is not. There is really no functional changes introduces by the commit, just a tad bit of timing difference that might make it harder to stumble upon it. Ok, I will wait for your feedback, but the difference between the versions is that one relies on the variable `done` to break out of the outer loop, while the changed version breaks out directly. I cannot see how this can be any worse than before, and since we immediately break out of both loops, I also cannot see how the writing thread could get stuck on the condition variable wait again, which is what I observed before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:541,modifiability,variab,variable,541,"> I am sure it is not. There is really no functional changes introduces by the commit, just a tad bit of timing difference that might make it harder to stumble upon it. Ok, I will wait for your feedback, but the difference between the versions is that one relies on the variable `done` to break out of the outer loop, while the changed version breaks out directly. I cannot see how this can be any worse than before, and since we immediately break out of both loops, I also cannot see how the writing thread could get stuck on the condition variable wait again, which is what I observed before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:578,testability,observ,observed,578,"> I am sure it is not. There is really no functional changes introduces by the commit, just a tad bit of timing difference that might make it harder to stumble upon it. Ok, I will wait for your feedback, but the difference between the versions is that one relies on the variable `done` to break out of the outer loop, while the changed version breaks out directly. I cannot see how this can be any worse than before, and since we immediately break out of both loops, I also cannot see how the writing thread could get stuck on the condition variable wait again, which is what I observed before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:194,usability,feedback,feedback,194,"> I am sure it is not. There is really no functional changes introduces by the commit, just a tad bit of timing difference that might make it harder to stumble upon it. Ok, I will wait for your feedback, but the difference between the versions is that one relies on the variable `done` to break out of the outer loop, while the changed version breaks out directly. I cannot see how this can be any worse than before, and since we immediately break out of both loops, I also cannot see how the writing thread could get stuck on the condition variable wait again, which is what I observed before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:195,deployability,observ,observed,195,"> I cannot see how this can be any worse than before. yes, it is not any worse. > , I also cannot see how the writing thread could get stuck on the condition variable wait again, which is what I observed before. I agree and claim that the change made does not/can-not affect this deadlock (because once done is 'true' it does not go back to the condition variable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:158,modifiability,variab,variable,158,"> I cannot see how this can be any worse than before. yes, it is not any worse. > , I also cannot see how the writing thread could get stuck on the condition variable wait again, which is what I observed before. I agree and claim that the change made does not/can-not affect this deadlock (because once done is 'true' it does not go back to the condition variable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:355,modifiability,variab,variable,355,"> I cannot see how this can be any worse than before. yes, it is not any worse. > , I also cannot see how the writing thread could get stuck on the condition variable wait again, which is what I observed before. I agree and claim that the change made does not/can-not affect this deadlock (because once done is 'true' it does not go back to the condition variable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:280,performance,deadlock,deadlock,280,"> I cannot see how this can be any worse than before. yes, it is not any worse. > , I also cannot see how the writing thread could get stuck on the condition variable wait again, which is what I observed before. I agree and claim that the change made does not/can-not affect this deadlock (because once done is 'true' it does not go back to the condition variable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:251,reliability,doe,does,251,"> I cannot see how this can be any worse than before. yes, it is not any worse. > , I also cannot see how the writing thread could get stuck on the condition variable wait again, which is what I observed before. I agree and claim that the change made does not/can-not affect this deadlock (because once done is 'true' it does not go back to the condition variable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:321,reliability,doe,does,321,"> I cannot see how this can be any worse than before. yes, it is not any worse. > , I also cannot see how the writing thread could get stuck on the condition variable wait again, which is what I observed before. I agree and claim that the change made does not/can-not affect this deadlock (because once done is 'true' it does not go back to the condition variable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:195,testability,observ,observed,195,"> I cannot see how this can be any worse than before. yes, it is not any worse. > , I also cannot see how the writing thread could get stuck on the condition variable wait again, which is what I observed before. I agree and claim that the change made does not/can-not affect this deadlock (because once done is 'true' it does not go back to the condition variable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:478,deployability,releas,release,478,See http://en.cppreference.com/w/cpp/thread/condition_variable/wait and http://en.cppreference.com/w/cpp/thread/condition_variable. The dead lock happens in (for example) the following circunstances/time-ordering. ```. 1.1. WriteOutputFile holds http://en.cppreference.com/w/cpp/thread/condition_variable. 2.1. ~TBufferMerger acquires fQueueMutex. 1.2. WriteOutputFile checks fQueue.Empty() and gets tolds it is empty. 2.2. ~TBufferMerger push to the Queue. 2.3. ~TBufferMerger release fQueueMutex. 2.4. ~TBufferMerger calls fCV.notify_one();. 2.5. notify_one noticed that nobody is waiting and just return. 1.3. WriteOutputFile puts itself on the wait queue. 2.6. ~TBufferMerger starts waiting on the join. 1.4. WriteOutputFile waits forever. ```. Conclusion: fWriteMutex **must** be taken when modifying fQueue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:451,integrability,Queue,Queue,451,See http://en.cppreference.com/w/cpp/thread/condition_variable/wait and http://en.cppreference.com/w/cpp/thread/condition_variable. The dead lock happens in (for example) the following circunstances/time-ordering. ```. 1.1. WriteOutputFile holds http://en.cppreference.com/w/cpp/thread/condition_variable. 2.1. ~TBufferMerger acquires fQueueMutex. 1.2. WriteOutputFile checks fQueue.Empty() and gets tolds it is empty. 2.2. ~TBufferMerger push to the Queue. 2.3. ~TBufferMerger release fQueueMutex. 2.4. ~TBufferMerger calls fCV.notify_one();. 2.5. notify_one noticed that nobody is waiting and just return. 1.3. WriteOutputFile puts itself on the wait queue. 2.6. ~TBufferMerger starts waiting on the join. 1.4. WriteOutputFile waits forever. ```. Conclusion: fWriteMutex **must** be taken when modifying fQueue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:653,integrability,queue,queue,653,See http://en.cppreference.com/w/cpp/thread/condition_variable/wait and http://en.cppreference.com/w/cpp/thread/condition_variable. The dead lock happens in (for example) the following circunstances/time-ordering. ```. 1.1. WriteOutputFile holds http://en.cppreference.com/w/cpp/thread/condition_variable. 2.1. ~TBufferMerger acquires fQueueMutex. 1.2. WriteOutputFile checks fQueue.Empty() and gets tolds it is empty. 2.2. ~TBufferMerger push to the Queue. 2.3. ~TBufferMerger release fQueueMutex. 2.4. ~TBufferMerger calls fCV.notify_one();. 2.5. notify_one noticed that nobody is waiting and just return. 1.3. WriteOutputFile puts itself on the wait queue. 2.6. ~TBufferMerger starts waiting on the join. 1.4. WriteOutputFile waits forever. ```. Conclusion: fWriteMutex **must** be taken when modifying fQueue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:141,performance,lock,lock,141,See http://en.cppreference.com/w/cpp/thread/condition_variable/wait and http://en.cppreference.com/w/cpp/thread/condition_variable. The dead lock happens in (for example) the following circunstances/time-ordering. ```. 1.1. WriteOutputFile holds http://en.cppreference.com/w/cpp/thread/condition_variable. 2.1. ~TBufferMerger acquires fQueueMutex. 1.2. WriteOutputFile checks fQueue.Empty() and gets tolds it is empty. 2.2. ~TBufferMerger push to the Queue. 2.3. ~TBufferMerger release fQueueMutex. 2.4. ~TBufferMerger calls fCV.notify_one();. 2.5. notify_one noticed that nobody is waiting and just return. 1.3. WriteOutputFile puts itself on the wait queue. 2.6. ~TBufferMerger starts waiting on the join. 1.4. WriteOutputFile waits forever. ```. Conclusion: fWriteMutex **must** be taken when modifying fQueue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:199,performance,time,time-ordering,199,See http://en.cppreference.com/w/cpp/thread/condition_variable/wait and http://en.cppreference.com/w/cpp/thread/condition_variable. The dead lock happens in (for example) the following circunstances/time-ordering. ```. 1.1. WriteOutputFile holds http://en.cppreference.com/w/cpp/thread/condition_variable. 2.1. ~TBufferMerger acquires fQueueMutex. 1.2. WriteOutputFile checks fQueue.Empty() and gets tolds it is empty. 2.2. ~TBufferMerger push to the Queue. 2.3. ~TBufferMerger release fQueueMutex. 2.4. ~TBufferMerger calls fCV.notify_one();. 2.5. notify_one noticed that nobody is waiting and just return. 1.3. WriteOutputFile puts itself on the wait queue. 2.6. ~TBufferMerger starts waiting on the join. 1.4. WriteOutputFile waits forever. ```. Conclusion: fWriteMutex **must** be taken when modifying fQueue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:451,performance,Queue,Queue,451,See http://en.cppreference.com/w/cpp/thread/condition_variable/wait and http://en.cppreference.com/w/cpp/thread/condition_variable. The dead lock happens in (for example) the following circunstances/time-ordering. ```. 1.1. WriteOutputFile holds http://en.cppreference.com/w/cpp/thread/condition_variable. 2.1. ~TBufferMerger acquires fQueueMutex. 1.2. WriteOutputFile checks fQueue.Empty() and gets tolds it is empty. 2.2. ~TBufferMerger push to the Queue. 2.3. ~TBufferMerger release fQueueMutex. 2.4. ~TBufferMerger calls fCV.notify_one();. 2.5. notify_one noticed that nobody is waiting and just return. 1.3. WriteOutputFile puts itself on the wait queue. 2.6. ~TBufferMerger starts waiting on the join. 1.4. WriteOutputFile waits forever. ```. Conclusion: fWriteMutex **must** be taken when modifying fQueue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:653,performance,queue,queue,653,See http://en.cppreference.com/w/cpp/thread/condition_variable/wait and http://en.cppreference.com/w/cpp/thread/condition_variable. The dead lock happens in (for example) the following circunstances/time-ordering. ```. 1.1. WriteOutputFile holds http://en.cppreference.com/w/cpp/thread/condition_variable. 2.1. ~TBufferMerger acquires fQueueMutex. 1.2. WriteOutputFile checks fQueue.Empty() and gets tolds it is empty. 2.2. ~TBufferMerger push to the Queue. 2.3. ~TBufferMerger release fQueueMutex. 2.4. ~TBufferMerger calls fCV.notify_one();. 2.5. notify_one noticed that nobody is waiting and just return. 1.3. WriteOutputFile puts itself on the wait queue. 2.6. ~TBufferMerger starts waiting on the join. 1.4. WriteOutputFile waits forever. ```. Conclusion: fWriteMutex **must** be taken when modifying fQueue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:141,security,lock,lock,141,See http://en.cppreference.com/w/cpp/thread/condition_variable/wait and http://en.cppreference.com/w/cpp/thread/condition_variable. The dead lock happens in (for example) the following circunstances/time-ordering. ```. 1.1. WriteOutputFile holds http://en.cppreference.com/w/cpp/thread/condition_variable. 2.1. ~TBufferMerger acquires fQueueMutex. 1.2. WriteOutputFile checks fQueue.Empty() and gets tolds it is empty. 2.2. ~TBufferMerger push to the Queue. 2.3. ~TBufferMerger release fQueueMutex. 2.4. ~TBufferMerger calls fCV.notify_one();. 2.5. notify_one noticed that nobody is waiting and just return. 1.3. WriteOutputFile puts itself on the wait queue. 2.6. ~TBufferMerger starts waiting on the join. 1.4. WriteOutputFile waits forever. ```. Conclusion: fWriteMutex **must** be taken when modifying fQueue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:796,security,modif,modifying,796,See http://en.cppreference.com/w/cpp/thread/condition_variable/wait and http://en.cppreference.com/w/cpp/thread/condition_variable. The dead lock happens in (for example) the following circunstances/time-ordering. ```. 1.1. WriteOutputFile holds http://en.cppreference.com/w/cpp/thread/condition_variable. 2.1. ~TBufferMerger acquires fQueueMutex. 1.2. WriteOutputFile checks fQueue.Empty() and gets tolds it is empty. 2.2. ~TBufferMerger push to the Queue. 2.3. ~TBufferMerger release fQueueMutex. 2.4. ~TBufferMerger calls fCV.notify_one();. 2.5. notify_one noticed that nobody is waiting and just return. 1.3. WriteOutputFile puts itself on the wait queue. 2.6. ~TBufferMerger starts waiting on the join. 1.4. WriteOutputFile waits forever. ```. Conclusion: fWriteMutex **must** be taken when modifying fQueue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:57,deployability,version,version,57,@pcanal Please let me know what you think of this latest version. I hold the queue mutex in a few more places to avoid the deadlock.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:57,integrability,version,version,57,@pcanal Please let me know what you think of this latest version. I hold the queue mutex in a few more places to avoid the deadlock.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:77,integrability,queue,queue,77,@pcanal Please let me know what you think of this latest version. I hold the queue mutex in a few more places to avoid the deadlock.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:57,modifiability,version,version,57,@pcanal Please let me know what you think of this latest version. I hold the queue mutex in a few more places to avoid the deadlock.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:77,performance,queue,queue,77,@pcanal Please let me know what you think of this latest version. I hold the queue mutex in a few more places to avoid the deadlock.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:123,performance,deadlock,deadlock,123,@pcanal Please let me know what you think of this latest version. I hold the queue mutex in a few more places to avoid the deadlock.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:113,safety,avoid,avoid,113,@pcanal Please let me know what you think of this latest version. I hold the queue mutex in a few more places to avoid the deadlock.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/583:46,performance,deadlock,deadlock,46,"@pcanal With my latest changes, I believe the deadlock is now properly fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/583
https://github.com/root-project/root/pull/584:56,interoperability,format,format,56,Thanks for working on this! Could you address the clang-format and clang-tidy reports in travis?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/584
https://github.com/root-project/root/pull/584:21,deployability,instal,install,21,If you don't want to install clang-format you could copy paste the diff and apply it locally from here: https://api.travis-ci.org/jobs/233691739/log.txt?deansi=true,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/584
https://github.com/root-project/root/pull/584:112,deployability,api,api,112,If you don't want to install clang-format you could copy paste the diff and apply it locally from here: https://api.travis-ci.org/jobs/233691739/log.txt?deansi=true,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/584
https://github.com/root-project/root/pull/584:145,deployability,log,log,145,If you don't want to install clang-format you could copy paste the diff and apply it locally from here: https://api.travis-ci.org/jobs/233691739/log.txt?deansi=true,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/584
https://github.com/root-project/root/pull/584:112,integrability,api,api,112,If you don't want to install clang-format you could copy paste the diff and apply it locally from here: https://api.travis-ci.org/jobs/233691739/log.txt?deansi=true,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/584
https://github.com/root-project/root/pull/584:35,interoperability,format,format,35,If you don't want to install clang-format you could copy paste the diff and apply it locally from here: https://api.travis-ci.org/jobs/233691739/log.txt?deansi=true,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/584
https://github.com/root-project/root/pull/584:112,interoperability,api,api,112,If you don't want to install clang-format you could copy paste the diff and apply it locally from here: https://api.travis-ci.org/jobs/233691739/log.txt?deansi=true,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/584
https://github.com/root-project/root/pull/584:145,safety,log,log,145,If you don't want to install clang-format you could copy paste the diff and apply it locally from here: https://api.travis-ci.org/jobs/233691739/log.txt?deansi=true,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/584
https://github.com/root-project/root/pull/584:145,security,log,log,145,If you don't want to install clang-format you could copy paste the diff and apply it locally from here: https://api.travis-ci.org/jobs/233691739/log.txt?deansi=true,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/584
https://github.com/root-project/root/pull/584:145,testability,log,log,145,If you don't want to install clang-format you could copy paste the diff and apply it locally from here: https://api.travis-ci.org/jobs/233691739/log.txt?deansi=true,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/584
https://github.com/root-project/root/pull/584:36,usability,learn,learning,36,ah - i still didn't get it right... learning,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/584
https://github.com/root-project/root/pull/584:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/584
https://github.com/root-project/root/pull/584:14,availability,failur,failures,14,I think those failures are unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/584
https://github.com/root-project/root/pull/584:14,deployability,fail,failures,14,I think those failures are unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/584
https://github.com/root-project/root/pull/584:14,performance,failur,failures,14,I think those failures are unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/584
https://github.com/root-project/root/pull/584:14,reliability,fail,failures,14,I think those failures are unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/584
https://github.com/root-project/root/pull/585:37,reliability,Poisson,PoissonLogL,37,Do you think we can add a gtest for `PoissonLogL`?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/585
https://github.com/root-project/root/pull/585:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/585
https://github.com/root-project/root/pull/585:20,deployability,build,build,20,Rebased. @phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/585
https://github.com/root-project/root/pull/585:54,interoperability,format,format,54,"@xvallspl, could you address the clang-tidy and clang-format issues?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/585
https://github.com/root-project/root/pull/586:11,modifiability,refact,refactoring,11,"As this is refactoring stressMathMore, should we disable the old test in favor of the new one with Google test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/586
https://github.com/root-project/root/pull/586:11,performance,refactor,refactoring,11,"As this is refactoring stressMathMore, should we disable the old test in favor of the new one with Google test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/586
https://github.com/root-project/root/pull/586:65,safety,test,test,65,"As this is refactoring stressMathMore, should we disable the old test in favor of the new one with Google test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/586
https://github.com/root-project/root/pull/586:106,safety,test,test,106,"As this is refactoring stressMathMore, should we disable the old test in favor of the new one with Google test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/586
https://github.com/root-project/root/pull/586:65,testability,test,test,65,"As this is refactoring stressMathMore, should we disable the old test in favor of the new one with Google test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/586
https://github.com/root-project/root/pull/586:106,testability,test,test,106,"As this is refactoring stressMathMore, should we disable the old test in favor of the new one with Google test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/586
https://github.com/root-project/root/pull/586:35,modifiability,refact,refactor,35,"As this is a (assumingly complete) refactor of stressMathMore.cxx, I would actually have started with a 'git mv' of the file to mark the provenance and keep track of the changes :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/586
https://github.com/root-project/root/pull/586:35,performance,refactor,refactor,35,"As this is a (assumingly complete) refactor of stressMathMore.cxx, I would actually have started with a 'git mv' of the file to mark the provenance and keep track of the changes :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/586
https://github.com/root-project/root/pull/586:25,safety,compl,complete,25,"As this is a (assumingly complete) refactor of stressMathMore.cxx, I would actually have started with a 'git mv' of the file to mark the provenance and keep track of the changes :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/586
https://github.com/root-project/root/pull/586:25,security,compl,complete,25,"As this is a (assumingly complete) refactor of stressMathMore.cxx, I would actually have started with a 'git mv' of the file to mark the provenance and keep track of the changes :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/586
https://github.com/root-project/root/pull/586:183,deployability,build,builds,183,"@pcanal yes, but @peremato wanted me to leave the old file there for legacy purpose. However, what would make more sense now then is to disable the test from being executed on the CI builds. Any thoughts on this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/586
https://github.com/root-project/root/pull/586:148,safety,test,test,148,"@pcanal yes, but @peremato wanted me to leave the old file there for legacy purpose. However, what would make more sense now then is to disable the test from being executed on the CI builds. Any thoughts on this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/586
https://github.com/root-project/root/pull/586:148,testability,test,test,148,"@pcanal yes, but @peremato wanted me to leave the old file there for legacy purpose. However, what would make more sense now then is to disable the test from being executed on the CI builds. Any thoughts on this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/586
https://github.com/root-project/root/pull/586:246,deployability,fail,fail,246,"@martinmine I think you can do both with something like. ```. git mv old new. git checkout HEAD old. ```. On the other hand, I am not sure what is the point of keeping the original around if we don't run it for a little while (to check they both fail/succeed in the same circumstance",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/586
https://github.com/root-project/root/pull/586:246,reliability,fail,fail,246,"@martinmine I think you can do both with something like. ```. git mv old new. git checkout HEAD old. ```. On the other hand, I am not sure what is the point of keeping the original around if we don't run it for a little while (to check they both fail/succeed in the same circumstance",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/586
https://github.com/root-project/root/pull/586:97,deployability,log,log,97,"Also note that the history won't show up on GitHub, but you would have to do something like `git log --follow math/mathmore/test/testStress.cxx` to see the full commit history of the file before moving/renaming. See [this](https://stackoverflow.com/a/2314757/1924825) thread.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/586
https://github.com/root-project/root/pull/586:231,deployability,stack,stackoverflow,231,"Also note that the history won't show up on GitHub, but you would have to do something like `git log --follow math/mathmore/test/testStress.cxx` to see the full commit history of the file before moving/renaming. See [this](https://stackoverflow.com/a/2314757/1924825) thread.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/586
https://github.com/root-project/root/pull/586:97,safety,log,log,97,"Also note that the history won't show up on GitHub, but you would have to do something like `git log --follow math/mathmore/test/testStress.cxx` to see the full commit history of the file before moving/renaming. See [this](https://stackoverflow.com/a/2314757/1924825) thread.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/586
https://github.com/root-project/root/pull/586:124,safety,test,test,124,"Also note that the history won't show up on GitHub, but you would have to do something like `git log --follow math/mathmore/test/testStress.cxx` to see the full commit history of the file before moving/renaming. See [this](https://stackoverflow.com/a/2314757/1924825) thread.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/586
https://github.com/root-project/root/pull/586:129,safety,test,testStress,129,"Also note that the history won't show up on GitHub, but you would have to do something like `git log --follow math/mathmore/test/testStress.cxx` to see the full commit history of the file before moving/renaming. See [this](https://stackoverflow.com/a/2314757/1924825) thread.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/586
https://github.com/root-project/root/pull/586:97,security,log,log,97,"Also note that the history won't show up on GitHub, but you would have to do something like `git log --follow math/mathmore/test/testStress.cxx` to see the full commit history of the file before moving/renaming. See [this](https://stackoverflow.com/a/2314757/1924825) thread.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/586
https://github.com/root-project/root/pull/586:97,testability,log,log,97,"Also note that the history won't show up on GitHub, but you would have to do something like `git log --follow math/mathmore/test/testStress.cxx` to see the full commit history of the file before moving/renaming. See [this](https://stackoverflow.com/a/2314757/1924825) thread.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/586
https://github.com/root-project/root/pull/586:124,testability,test,test,124,"Also note that the history won't show up on GitHub, but you would have to do something like `git log --follow math/mathmore/test/testStress.cxx` to see the full commit history of the file before moving/renaming. See [this](https://stackoverflow.com/a/2314757/1924825) thread.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/586
https://github.com/root-project/root/pull/586:129,testability,test,testStress,129,"Also note that the history won't show up on GitHub, but you would have to do something like `git log --follow math/mathmore/test/testStress.cxx` to see the full commit history of the file before moving/renaming. See [this](https://stackoverflow.com/a/2314757/1924825) thread.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/586
https://github.com/root-project/root/pull/586:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/586
https://github.com/root-project/root/pull/586:22,usability,feedback,feedback,22,"Thanks a lot for your feedback @pcanal, I have fixed up the code convention mistakes in https://github.com/root-project/root/pull/586/commits/99fbdcd4fe8b90ebfa29f7ec27cb1f47353ac62f.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/586
https://github.com/root-project/root/pull/586:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/586
https://github.com/root-project/root/pull/587:84,integrability,messag,message,84,"@dpiparo, please wait to merge. I am making changes to the documentation and commit message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/587
https://github.com/root-project/root/pull/587:84,interoperability,messag,message,84,"@dpiparo, please wait to merge. I am making changes to the documentation and commit message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/587
https://github.com/root-project/root/pull/587:59,usability,document,documentation,59,"@dpiparo, please wait to merge. I am making changes to the documentation and commit message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/587
https://github.com/root-project/root/pull/589:11,deployability,build,build,11,@phsft-bot build with flags -Dvc=OFF -Dimt=ON -Dccache=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:11,deployability,build,build,11,"@phsft-bot build just on centos7/gcc49, ubuntu14/native with flags -Dccache=OFF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:11,deployability,build,build,11,@phsft-bot build with flags -Dccache=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:11,deployability,build,build,11,@phsft-bot build with flags -Dccache=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:11,deployability,build,build,11,@phsft-bot build with flags -Dccache=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:93,performance,cach,caching,93,**778b83c Create a virtual file entry for each input line.**. Will this mess up clang's file caching so all filenames following the pattern **input_file_N** won't be include-able?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:47,safety,input,input,47,**778b83c Create a virtual file entry for each input line.**. Will this mess up clang's file caching so all filenames following the pattern **input_file_N** won't be include-able?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:47,usability,input,input,47,**778b83c Create a virtual file entry for each input line.**. Will this mess up clang's file caching so all filenames following the pattern **input_file_N** won't be include-able?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:311,availability,failur,failures,311,"@marsupial, I can make the inclusion of `ConvertUTF.h` conditionally included if `LLVM_UTF8` is set. It is not clear to me what would be the benefit, though. There is more information about the virtual file changes here: https://reviews.llvm.org/D33275. I do not expect to mess up anything and I do not see any failures wrt to it. Can you give an example of which case you are thinking og?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:311,deployability,fail,failures,311,"@marsupial, I can make the inclusion of `ConvertUTF.h` conditionally included if `LLVM_UTF8` is set. It is not clear to me what would be the benefit, though. There is more information about the virtual file changes here: https://reviews.llvm.org/D33275. I do not expect to mess up anything and I do not see any failures wrt to it. Can you give an example of which case you are thinking og?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:311,performance,failur,failures,311,"@marsupial, I can make the inclusion of `ConvertUTF.h` conditionally included if `LLVM_UTF8` is set. It is not clear to me what would be the benefit, though. There is more information about the virtual file changes here: https://reviews.llvm.org/D33275. I do not expect to mess up anything and I do not see any failures wrt to it. Can you give an example of which case you are thinking og?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:311,reliability,fail,failures,311,"@marsupial, I can make the inclusion of `ConvertUTF.h` conditionally included if `LLVM_UTF8` is set. It is not clear to me what would be the benefit, though. There is more information about the virtual file changes here: https://reviews.llvm.org/D33275. I do not expect to mess up anything and I do not see any failures wrt to it. Can you give an example of which case you are thinking og?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:229,safety,review,reviews,229,"@marsupial, I can make the inclusion of `ConvertUTF.h` conditionally included if `LLVM_UTF8` is set. It is not clear to me what would be the benefit, though. There is more information about the virtual file changes here: https://reviews.llvm.org/D33275. I do not expect to mess up anything and I do not see any failures wrt to it. Can you give an example of which case you are thinking og?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:229,testability,review,reviews,229,"@marsupial, I can make the inclusion of `ConvertUTF.h` conditionally included if `LLVM_UTF8` is set. It is not clear to me what would be the benefit, though. There is more information about the virtual file changes here: https://reviews.llvm.org/D33275. I do not expect to mess up anything and I do not see any failures wrt to it. Can you give an example of which case you are thinking og?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:111,usability,clear,clear,111,"@marsupial, I can make the inclusion of `ConvertUTF.h` conditionally included if `LLVM_UTF8` is set. It is not clear to me what would be the benefit, though. There is more information about the virtual file changes here: https://reviews.llvm.org/D33275. I do not expect to mess up anything and I do not see any failures wrt to it. Can you give an example of which case you are thinking og?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:11,deployability,build,build,11,@phsft-bot build just on mac1012/native,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:11,deployability,build,build,11,@phsft-bot build just on mac1012/native,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:340,energy efficiency,alloc,allocate,340,"> @marsupial, I can make the inclusion of ConvertUTF.h conditionally included if LLVM_UTF8 is set. It is not clear to me what would be the benefit, though. It already is conditional. Look a few lines below the include to see it. The benefit is to use the C++ lib to do conversion when it can so client conversion will match, as well as not allocate 4x the string length which is what the LLVM routines do. > Can you give an example of which case you are thinking go? Have a memory of virtual file names being inserted into the cache so clang thinks it already hold a buffer to them, which would make the following not work:. ```. $ int Val = 5; // input_line_1. $ #include ""input_line_1"" // input_line_2. $ #include ""input_line_3"" // input_line_3. $ #include ""input_line_5"" // input_line_4. $ Val = 6; // input_line_5. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:393,integrability,rout,routines,393,"> @marsupial, I can make the inclusion of ConvertUTF.h conditionally included if LLVM_UTF8 is set. It is not clear to me what would be the benefit, though. It already is conditional. Look a few lines below the include to see it. The benefit is to use the C++ lib to do conversion when it can so client conversion will match, as well as not allocate 4x the string length which is what the LLVM routines do. > Can you give an example of which case you are thinking go? Have a memory of virtual file names being inserted into the cache so clang thinks it already hold a buffer to them, which would make the following not work:. ```. $ int Val = 5; // input_line_1. $ #include ""input_line_1"" // input_line_2. $ #include ""input_line_3"" // input_line_3. $ #include ""input_line_5"" // input_line_4. $ Val = 6; // input_line_5. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:567,integrability,buffer,buffer,567,"> @marsupial, I can make the inclusion of ConvertUTF.h conditionally included if LLVM_UTF8 is set. It is not clear to me what would be the benefit, though. It already is conditional. Look a few lines below the include to see it. The benefit is to use the C++ lib to do conversion when it can so client conversion will match, as well as not allocate 4x the string length which is what the LLVM routines do. > Can you give an example of which case you are thinking go? Have a memory of virtual file names being inserted into the cache so clang thinks it already hold a buffer to them, which would make the following not work:. ```. $ int Val = 5; // input_line_1. $ #include ""input_line_1"" // input_line_2. $ #include ""input_line_3"" // input_line_3. $ #include ""input_line_5"" // input_line_4. $ Val = 6; // input_line_5. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:269,interoperability,convers,conversion,269,"> @marsupial, I can make the inclusion of ConvertUTF.h conditionally included if LLVM_UTF8 is set. It is not clear to me what would be the benefit, though. It already is conditional. Look a few lines below the include to see it. The benefit is to use the C++ lib to do conversion when it can so client conversion will match, as well as not allocate 4x the string length which is what the LLVM routines do. > Can you give an example of which case you are thinking go? Have a memory of virtual file names being inserted into the cache so clang thinks it already hold a buffer to them, which would make the following not work:. ```. $ int Val = 5; // input_line_1. $ #include ""input_line_1"" // input_line_2. $ #include ""input_line_3"" // input_line_3. $ #include ""input_line_5"" // input_line_4. $ Val = 6; // input_line_5. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:302,interoperability,convers,conversion,302,"> @marsupial, I can make the inclusion of ConvertUTF.h conditionally included if LLVM_UTF8 is set. It is not clear to me what would be the benefit, though. It already is conditional. Look a few lines below the include to see it. The benefit is to use the C++ lib to do conversion when it can so client conversion will match, as well as not allocate 4x the string length which is what the LLVM routines do. > Can you give an example of which case you are thinking go? Have a memory of virtual file names being inserted into the cache so clang thinks it already hold a buffer to them, which would make the following not work:. ```. $ int Val = 5; // input_line_1. $ #include ""input_line_1"" // input_line_2. $ #include ""input_line_3"" // input_line_3. $ #include ""input_line_5"" // input_line_4. $ Val = 6; // input_line_5. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:474,performance,memor,memory,474,"> @marsupial, I can make the inclusion of ConvertUTF.h conditionally included if LLVM_UTF8 is set. It is not clear to me what would be the benefit, though. It already is conditional. Look a few lines below the include to see it. The benefit is to use the C++ lib to do conversion when it can so client conversion will match, as well as not allocate 4x the string length which is what the LLVM routines do. > Can you give an example of which case you are thinking go? Have a memory of virtual file names being inserted into the cache so clang thinks it already hold a buffer to them, which would make the following not work:. ```. $ int Val = 5; // input_line_1. $ #include ""input_line_1"" // input_line_2. $ #include ""input_line_3"" // input_line_3. $ #include ""input_line_5"" // input_line_4. $ Val = 6; // input_line_5. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:527,performance,cach,cache,527,"> @marsupial, I can make the inclusion of ConvertUTF.h conditionally included if LLVM_UTF8 is set. It is not clear to me what would be the benefit, though. It already is conditional. Look a few lines below the include to see it. The benefit is to use the C++ lib to do conversion when it can so client conversion will match, as well as not allocate 4x the string length which is what the LLVM routines do. > Can you give an example of which case you are thinking go? Have a memory of virtual file names being inserted into the cache so clang thinks it already hold a buffer to them, which would make the following not work:. ```. $ int Val = 5; // input_line_1. $ #include ""input_line_1"" // input_line_2. $ #include ""input_line_3"" // input_line_3. $ #include ""input_line_5"" // input_line_4. $ Val = 6; // input_line_5. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:109,usability,clear,clear,109,"> @marsupial, I can make the inclusion of ConvertUTF.h conditionally included if LLVM_UTF8 is set. It is not clear to me what would be the benefit, though. It already is conditional. Look a few lines below the include to see it. The benefit is to use the C++ lib to do conversion when it can so client conversion will match, as well as not allocate 4x the string length which is what the LLVM routines do. > Can you give an example of which case you are thinking go? Have a memory of virtual file names being inserted into the cache so clang thinks it already hold a buffer to them, which would make the following not work:. ```. $ int Val = 5; // input_line_1. $ #include ""input_line_1"" // input_line_2. $ #include ""input_line_3"" // input_line_3. $ #include ""input_line_5"" // input_line_4. $ Val = 6; // input_line_5. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:474,usability,memor,memory,474,"> @marsupial, I can make the inclusion of ConvertUTF.h conditionally included if LLVM_UTF8 is set. It is not clear to me what would be the benefit, though. It already is conditional. Look a few lines below the include to see it. The benefit is to use the C++ lib to do conversion when it can so client conversion will match, as well as not allocate 4x the string length which is what the LLVM routines do. > Can you give an example of which case you are thinking go? Have a memory of virtual file names being inserted into the cache so clang thinks it already hold a buffer to them, which would make the following not work:. ```. $ int Val = 5; // input_line_1. $ #include ""input_line_1"" // input_line_2. $ #include ""input_line_3"" // input_line_3. $ #include ""input_line_5"" // input_line_4. $ Val = 6; // input_line_5. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:48,integrability,rout,routines,48,"I overlooked the issue with the llvm conversion routines. I've inserted a better fix. For the second issue, I think it might be a good idea to do it as a post PR merge commit because it requires some changes in the test suites of both ROOT and cling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:37,interoperability,convers,conversion,37,"I overlooked the issue with the llvm conversion routines. I've inserted a better fix. For the second issue, I think it might be a good idea to do it as a post PR merge commit because it requires some changes in the test suites of both ROOT and cling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:215,safety,test,test,215,"I overlooked the issue with the llvm conversion routines. I've inserted a better fix. For the second issue, I think it might be a good idea to do it as a post PR merge commit because it requires some changes in the test suites of both ROOT and cling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:215,testability,test,test,215,"I overlooked the issue with the llvm conversion routines. I've inserted a better fix. For the second issue, I think it might be a good idea to do it as a post PR merge commit because it requires some changes in the test suites of both ROOT and cling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:11,deployability,build,build,11,@phsft-bot build just on slc6/icc17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:11,deployability,build,build,11,@phsft-bot build also on slc6/icc17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:11,deployability,build,build,11,@phsft-bot build also on slc6/icc17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:11,deployability,build,build,11,@phsft-bot build also on slc6/icc17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:4,deployability,updat,update,4,The update of the LLVM exposed an issue #614 which is outside of the scope of this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:4,safety,updat,update,4,The update of the LLVM exposed an issue #614 which is outside of the scope of this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:4,security,updat,update,4,The update of the LLVM exposed an issue #614 which is outside of the scope of this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:23,security,expos,exposed,23,The update of the LLVM exposed an issue #614 which is outside of the scope of this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:33,deployability,build,builds,33,And Travis should remove gcc-4.7 builds as LLVM now requires 4.8.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:94,availability,failur,failure,94,@vgvassilev Re: **778b83c Create a virtual file entry for each input line.**. Here's a simple failure:. ```. ./bin/cling -Xclang -verify. [$]for (int i=0;i<1;++i) { val; } // expected-error {{use of undeclared identifier 'val'}}. [$].q. fatal error: cannot open file 'input_line_3': No such file or directory. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:184,availability,error,error,184,@vgvassilev Re: **778b83c Create a virtual file entry for each input line.**. Here's a simple failure:. ```. ./bin/cling -Xclang -verify. [$]for (int i=0;i<1;++i) { val; } // expected-error {{use of undeclared identifier 'val'}}. [$].q. fatal error: cannot open file 'input_line_3': No such file or directory. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:243,availability,error,error,243,@vgvassilev Re: **778b83c Create a virtual file entry for each input line.**. Here's a simple failure:. ```. ./bin/cling -Xclang -verify. [$]for (int i=0;i<1;++i) { val; } // expected-error {{use of undeclared identifier 'val'}}. [$].q. fatal error: cannot open file 'input_line_3': No such file or directory. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:94,deployability,fail,failure,94,@vgvassilev Re: **778b83c Create a virtual file entry for each input line.**. Here's a simple failure:. ```. ./bin/cling -Xclang -verify. [$]for (int i=0;i<1;++i) { val; } // expected-error {{use of undeclared identifier 'val'}}. [$].q. fatal error: cannot open file 'input_line_3': No such file or directory. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:94,performance,failur,failure,94,@vgvassilev Re: **778b83c Create a virtual file entry for each input line.**. Here's a simple failure:. ```. ./bin/cling -Xclang -verify. [$]for (int i=0;i<1;++i) { val; } // expected-error {{use of undeclared identifier 'val'}}. [$].q. fatal error: cannot open file 'input_line_3': No such file or directory. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:184,performance,error,error,184,@vgvassilev Re: **778b83c Create a virtual file entry for each input line.**. Here's a simple failure:. ```. ./bin/cling -Xclang -verify. [$]for (int i=0;i<1;++i) { val; } // expected-error {{use of undeclared identifier 'val'}}. [$].q. fatal error: cannot open file 'input_line_3': No such file or directory. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:243,performance,error,error,243,@vgvassilev Re: **778b83c Create a virtual file entry for each input line.**. Here's a simple failure:. ```. ./bin/cling -Xclang -verify. [$]for (int i=0;i<1;++i) { val; } // expected-error {{use of undeclared identifier 'val'}}. [$].q. fatal error: cannot open file 'input_line_3': No such file or directory. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:94,reliability,fail,failure,94,@vgvassilev Re: **778b83c Create a virtual file entry for each input line.**. Here's a simple failure:. ```. ./bin/cling -Xclang -verify. [$]for (int i=0;i<1;++i) { val; } // expected-error {{use of undeclared identifier 'val'}}. [$].q. fatal error: cannot open file 'input_line_3': No such file or directory. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:63,safety,input,input,63,@vgvassilev Re: **778b83c Create a virtual file entry for each input line.**. Here's a simple failure:. ```. ./bin/cling -Xclang -verify. [$]for (int i=0;i<1;++i) { val; } // expected-error {{use of undeclared identifier 'val'}}. [$].q. fatal error: cannot open file 'input_line_3': No such file or directory. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:184,safety,error,error,184,@vgvassilev Re: **778b83c Create a virtual file entry for each input line.**. Here's a simple failure:. ```. ./bin/cling -Xclang -verify. [$]for (int i=0;i<1;++i) { val; } // expected-error {{use of undeclared identifier 'val'}}. [$].q. fatal error: cannot open file 'input_line_3': No such file or directory. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:243,safety,error,error,243,@vgvassilev Re: **778b83c Create a virtual file entry for each input line.**. Here's a simple failure:. ```. ./bin/cling -Xclang -verify. [$]for (int i=0;i<1;++i) { val; } // expected-error {{use of undeclared identifier 'val'}}. [$].q. fatal error: cannot open file 'input_line_3': No such file or directory. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:210,security,ident,identifier,210,@vgvassilev Re: **778b83c Create a virtual file entry for each input line.**. Here's a simple failure:. ```. ./bin/cling -Xclang -verify. [$]for (int i=0;i<1;++i) { val; } // expected-error {{use of undeclared identifier 'val'}}. [$].q. fatal error: cannot open file 'input_line_3': No such file or directory. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:87,testability,simpl,simple,87,@vgvassilev Re: **778b83c Create a virtual file entry for each input line.**. Here's a simple failure:. ```. ./bin/cling -Xclang -verify. [$]for (int i=0;i<1;++i) { val; } // expected-error {{use of undeclared identifier 'val'}}. [$].q. fatal error: cannot open file 'input_line_3': No such file or directory. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:130,testability,verif,verify,130,@vgvassilev Re: **778b83c Create a virtual file entry for each input line.**. Here's a simple failure:. ```. ./bin/cling -Xclang -verify. [$]for (int i=0;i<1;++i) { val; } // expected-error {{use of undeclared identifier 'val'}}. [$].q. fatal error: cannot open file 'input_line_3': No such file or directory. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:63,usability,input,input,63,@vgvassilev Re: **778b83c Create a virtual file entry for each input line.**. Here's a simple failure:. ```. ./bin/cling -Xclang -verify. [$]for (int i=0;i<1;++i) { val; } // expected-error {{use of undeclared identifier 'val'}}. [$].q. fatal error: cannot open file 'input_line_3': No such file or directory. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:87,usability,simpl,simple,87,@vgvassilev Re: **778b83c Create a virtual file entry for each input line.**. Here's a simple failure:. ```. ./bin/cling -Xclang -verify. [$]for (int i=0;i<1;++i) { val; } // expected-error {{use of undeclared identifier 'val'}}. [$].q. fatal error: cannot open file 'input_line_3': No such file or directory. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:184,usability,error,error,184,@vgvassilev Re: **778b83c Create a virtual file entry for each input line.**. Here's a simple failure:. ```. ./bin/cling -Xclang -verify. [$]for (int i=0;i<1;++i) { val; } // expected-error {{use of undeclared identifier 'val'}}. [$].q. fatal error: cannot open file 'input_line_3': No such file or directory. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:243,usability,error,error,243,@vgvassilev Re: **778b83c Create a virtual file entry for each input line.**. Here's a simple failure:. ```. ./bin/cling -Xclang -verify. [$]for (int i=0;i<1;++i) { val; } // expected-error {{use of undeclared identifier 'val'}}. [$].q. fatal error: cannot open file 'input_line_3': No such file or directory. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:13,deployability,version,version,13,"The new llvm version 'seems' to bring 'new' valgrind warnings. For example:. ```valgrind --suppresions=$ROOTSYS/etc/valgrind-root.supp root.exe -b -l -q```. outputs. ```. ==9328== Conditional jump or move depends on uninitialised value(s). ==9328== at 0xAD44B75: llvm::sys::path::filename(llvm::StringRef, llvm::sys::path::Style) (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x91D1526: clang::CodeGen::CodeGenModule::EmitCXXGlobalInitFunc() (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x90F366F: clang::CodeGen::CodeGenModule::Release() (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x903F906: clang::CodeGeneratorImpl::HandleTranslationUnit(clang::ASTContext&) (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x8B9E39F: cling::IncrementalParser::codeGenTransaction(cling::Transaction*) (IncrementalParser.cpp:544). ==9328== by 0x8B9E078: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u. , llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (IncrementalParser.cpp:481). ==9328== by 0x8B255F4: cling::Interpreter::Interpreter(int, char const* const*, char const*, bool, cling::Interpreter const*) (Interpreter.cpp:245). ==9328== by 0x894B3B8: cling::Interpreter::Interpreter(int, char const* const*, char const*, bool) (Interpreter.h:308). ==9328== by 0x8A3B5B1: TCling::TCling(char const*, char const*) (TCling.cxx:1116). ==9328== by 0x8A38697: CreateInterpreter (TCling.cxx:593). ==9328== by 0x517F717: TROOT::InitInterpreter() (TROOT.cxx:1974). ==9328== by 0x517983F: ROOT::Internal::GetROOT2() (TROOT.cxx:364). ==9328== Use of uninitialised value of size 8. ==9328== at 0xACFA1A0: llvm::StringRef::find_last_of(llvm::StringRef, unsigned long) const (in /local2/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:205,deployability,depend,depends,205,"The new llvm version 'seems' to bring 'new' valgrind warnings. For example:. ```valgrind --suppresions=$ROOTSYS/etc/valgrind-root.supp root.exe -b -l -q```. outputs. ```. ==9328== Conditional jump or move depends on uninitialised value(s). ==9328== at 0xAD44B75: llvm::sys::path::filename(llvm::StringRef, llvm::sys::path::Style) (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x91D1526: clang::CodeGen::CodeGenModule::EmitCXXGlobalInitFunc() (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x90F366F: clang::CodeGen::CodeGenModule::Release() (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x903F906: clang::CodeGeneratorImpl::HandleTranslationUnit(clang::ASTContext&) (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x8B9E39F: cling::IncrementalParser::codeGenTransaction(cling::Transaction*) (IncrementalParser.cpp:544). ==9328== by 0x8B9E078: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u. , llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (IncrementalParser.cpp:481). ==9328== by 0x8B255F4: cling::Interpreter::Interpreter(int, char const* const*, char const*, bool, cling::Interpreter const*) (Interpreter.cpp:245). ==9328== by 0x894B3B8: cling::Interpreter::Interpreter(int, char const* const*, char const*, bool) (Interpreter.h:308). ==9328== by 0x8A3B5B1: TCling::TCling(char const*, char const*) (TCling.cxx:1116). ==9328== by 0x8A38697: CreateInterpreter (TCling.cxx:593). ==9328== by 0x517F717: TROOT::InitInterpreter() (TROOT.cxx:1974). ==9328== by 0x517983F: ROOT::Internal::GetROOT2() (TROOT.cxx:364). ==9328== Use of uninitialised value of size 8. ==9328== at 0xACFA1A0: llvm::StringRef::find_last_of(llvm::StringRef, unsigned long) const (in /local2/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:602,deployability,Releas,Release,602,"The new llvm version 'seems' to bring 'new' valgrind warnings. For example:. ```valgrind --suppresions=$ROOTSYS/etc/valgrind-root.supp root.exe -b -l -q```. outputs. ```. ==9328== Conditional jump or move depends on uninitialised value(s). ==9328== at 0xAD44B75: llvm::sys::path::filename(llvm::StringRef, llvm::sys::path::Style) (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x91D1526: clang::CodeGen::CodeGenModule::EmitCXXGlobalInitFunc() (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x90F366F: clang::CodeGen::CodeGenModule::Release() (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x903F906: clang::CodeGeneratorImpl::HandleTranslationUnit(clang::ASTContext&) (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x8B9E39F: cling::IncrementalParser::codeGenTransaction(cling::Transaction*) (IncrementalParser.cpp:544). ==9328== by 0x8B9E078: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u. , llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (IncrementalParser.cpp:481). ==9328== by 0x8B255F4: cling::Interpreter::Interpreter(int, char const* const*, char const*, bool, cling::Interpreter const*) (Interpreter.cpp:245). ==9328== by 0x894B3B8: cling::Interpreter::Interpreter(int, char const* const*, char const*, bool) (Interpreter.h:308). ==9328== by 0x8A3B5B1: TCling::TCling(char const*, char const*) (TCling.cxx:1116). ==9328== by 0x8A38697: CreateInterpreter (TCling.cxx:593). ==9328== by 0x517F717: TROOT::InitInterpreter() (TROOT.cxx:1974). ==9328== by 0x517983F: ROOT::Internal::GetROOT2() (TROOT.cxx:364). ==9328== Use of uninitialised value of size 8. ==9328== at 0xACFA1A0: llvm::StringRef::find_last_of(llvm::StringRef, unsigned long) const (in /local2/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:2590,deployability,Releas,Release,2590,"B1: TCling::TCling(char const*, char const*) (TCling.cxx:1116). ==9328== by 0x8A38697: CreateInterpreter (TCling.cxx:593). ==9328== by 0x517F717: TROOT::InitInterpreter() (TROOT.cxx:1974). ==9328== by 0x517983F: ROOT::Internal::GetROOT2() (TROOT.cxx:364). ==9328== Use of uninitialised value of size 8. ==9328== at 0xACFA1A0: llvm::StringRef::find_last_of(llvm::StringRef, unsigned long) const (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0xAD41F86: (anonymous namespace)::filename_pos(llvm::StringRef, llvm::sys::path::Style) (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0xAD44A83: llvm::sys::path::filename(llvm::StringRef, llvm::sys::path::Style) (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x91D1526: clang::CodeGen::CodeGenModule::EmitCXXGlobalInitFunc() (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x90F366F: clang::CodeGen::CodeGenModule::Release() (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x903F906: clang::CodeGeneratorImpl::HandleTranslationUnit(clang::ASTContext&) (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x8B9E39F: cling::IncrementalParser::codeGenTransaction(cling::Transaction*) (IncrementalParser.cpp:544). ==9328== by 0x8B9E078: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (IncrementalParser.cpp:481). ==9328== by 0x8B255F4: cling::Interpreter::Interpreter(int, char const* const*, char const*, bool, cling::Interpreter const*) (Interpreter.cpp:245). ==9328== by 0x894B3B8: cling::Interpreter::Interpreter(int, char const* const*, char const*, bool) (Interpreter.h:308). ==9328== by 0x8A3B5B1: TCling::TC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:3963,deployability,Releas,Release,3963,"078: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (IncrementalParser.cpp:481). ==9328== by 0x8B255F4: cling::Interpreter::Interpreter(int, char const* const*, char const*, bool, cling::Interpreter const*) (Interpreter.cpp:245). ==9328== by 0x894B3B8: cling::Interpreter::Interpreter(int, char const* const*, char const*, bool) (Interpreter.h:308). ==9328== by 0x8A3B5B1: TCling::TCling(char const*, char const*) (TCling.cxx:1116). ==9328== by 0x8A38697: CreateInterpreter (TCling.cxx:593). ==9328== . ==9328== Use of uninitialised value of size 8. ==9328== at 0x91D15BB: clang::CodeGen::CodeGenModule::EmitCXXGlobalInitFunc() (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x90F366F: clang::CodeGen::CodeGenModule::Release() (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x903F906: clang::CodeGeneratorImpl::HandleTranslationUnit(clang::ASTContext&) (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x8B9E39F: cling::IncrementalParser::codeGenTransaction(cling::Transaction*) (IncrementalParser.cpp:544). ==9328== by 0x8B9E078: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (IncrementalParser.cpp:481). ==9328== by 0x8B255F4: cling::Interpreter::Interpreter(int, char const* const*, char const*, bool, cling::Interpreter const*) (Interpreter.cpp:245). ==9328== by 0x894B3B8: cling::Interpreter::Interpreter(int, char const* const*, char const*, bool) (Interpreter.h:308). ==9328== by 0x8A3B5B1: TCling::TC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:13,integrability,version,version,13,"The new llvm version 'seems' to bring 'new' valgrind warnings. For example:. ```valgrind --suppresions=$ROOTSYS/etc/valgrind-root.supp root.exe -b -l -q```. outputs. ```. ==9328== Conditional jump or move depends on uninitialised value(s). ==9328== at 0xAD44B75: llvm::sys::path::filename(llvm::StringRef, llvm::sys::path::Style) (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x91D1526: clang::CodeGen::CodeGenModule::EmitCXXGlobalInitFunc() (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x90F366F: clang::CodeGen::CodeGenModule::Release() (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x903F906: clang::CodeGeneratorImpl::HandleTranslationUnit(clang::ASTContext&) (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x8B9E39F: cling::IncrementalParser::codeGenTransaction(cling::Transaction*) (IncrementalParser.cpp:544). ==9328== by 0x8B9E078: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u. , llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (IncrementalParser.cpp:481). ==9328== by 0x8B255F4: cling::Interpreter::Interpreter(int, char const* const*, char const*, bool, cling::Interpreter const*) (Interpreter.cpp:245). ==9328== by 0x894B3B8: cling::Interpreter::Interpreter(int, char const* const*, char const*, bool) (Interpreter.h:308). ==9328== by 0x8A3B5B1: TCling::TCling(char const*, char const*) (TCling.cxx:1116). ==9328== by 0x8A38697: CreateInterpreter (TCling.cxx:593). ==9328== by 0x517F717: TROOT::InitInterpreter() (TROOT.cxx:1974). ==9328== by 0x517983F: ROOT::Internal::GetROOT2() (TROOT.cxx:364). ==9328== Use of uninitialised value of size 8. ==9328== at 0xACFA1A0: llvm::StringRef::find_last_of(llvm::StringRef, unsigned long) const (in /local2/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:205,integrability,depend,depends,205,"The new llvm version 'seems' to bring 'new' valgrind warnings. For example:. ```valgrind --suppresions=$ROOTSYS/etc/valgrind-root.supp root.exe -b -l -q```. outputs. ```. ==9328== Conditional jump or move depends on uninitialised value(s). ==9328== at 0xAD44B75: llvm::sys::path::filename(llvm::StringRef, llvm::sys::path::Style) (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x91D1526: clang::CodeGen::CodeGenModule::EmitCXXGlobalInitFunc() (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x90F366F: clang::CodeGen::CodeGenModule::Release() (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x903F906: clang::CodeGeneratorImpl::HandleTranslationUnit(clang::ASTContext&) (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x8B9E39F: cling::IncrementalParser::codeGenTransaction(cling::Transaction*) (IncrementalParser.cpp:544). ==9328== by 0x8B9E078: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u. , llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (IncrementalParser.cpp:481). ==9328== by 0x8B255F4: cling::Interpreter::Interpreter(int, char const* const*, char const*, bool, cling::Interpreter const*) (Interpreter.cpp:245). ==9328== by 0x894B3B8: cling::Interpreter::Interpreter(int, char const* const*, char const*, bool) (Interpreter.h:308). ==9328== by 0x8A3B5B1: TCling::TCling(char const*, char const*) (TCling.cxx:1116). ==9328== by 0x8A38697: CreateInterpreter (TCling.cxx:593). ==9328== by 0x517F717: TROOT::InitInterpreter() (TROOT.cxx:1974). ==9328== by 0x517983F: ROOT::Internal::GetROOT2() (TROOT.cxx:364). ==9328== Use of uninitialised value of size 8. ==9328== at 0xACFA1A0: llvm::StringRef::find_last_of(llvm::StringRef, unsigned long) const (in /local2/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:13,modifiability,version,version,13,"The new llvm version 'seems' to bring 'new' valgrind warnings. For example:. ```valgrind --suppresions=$ROOTSYS/etc/valgrind-root.supp root.exe -b -l -q```. outputs. ```. ==9328== Conditional jump or move depends on uninitialised value(s). ==9328== at 0xAD44B75: llvm::sys::path::filename(llvm::StringRef, llvm::sys::path::Style) (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x91D1526: clang::CodeGen::CodeGenModule::EmitCXXGlobalInitFunc() (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x90F366F: clang::CodeGen::CodeGenModule::Release() (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x903F906: clang::CodeGeneratorImpl::HandleTranslationUnit(clang::ASTContext&) (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x8B9E39F: cling::IncrementalParser::codeGenTransaction(cling::Transaction*) (IncrementalParser.cpp:544). ==9328== by 0x8B9E078: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u. , llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (IncrementalParser.cpp:481). ==9328== by 0x8B255F4: cling::Interpreter::Interpreter(int, char const* const*, char const*, bool, cling::Interpreter const*) (Interpreter.cpp:245). ==9328== by 0x894B3B8: cling::Interpreter::Interpreter(int, char const* const*, char const*, bool) (Interpreter.h:308). ==9328== by 0x8A3B5B1: TCling::TCling(char const*, char const*) (TCling.cxx:1116). ==9328== by 0x8A38697: CreateInterpreter (TCling.cxx:593). ==9328== by 0x517F717: TROOT::InitInterpreter() (TROOT.cxx:1974). ==9328== by 0x517983F: ROOT::Internal::GetROOT2() (TROOT.cxx:364). ==9328== Use of uninitialised value of size 8. ==9328== at 0xACFA1A0: llvm::StringRef::find_last_of(llvm::StringRef, unsigned long) const (in /local2/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:205,modifiability,depend,depends,205,"The new llvm version 'seems' to bring 'new' valgrind warnings. For example:. ```valgrind --suppresions=$ROOTSYS/etc/valgrind-root.supp root.exe -b -l -q```. outputs. ```. ==9328== Conditional jump or move depends on uninitialised value(s). ==9328== at 0xAD44B75: llvm::sys::path::filename(llvm::StringRef, llvm::sys::path::Style) (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x91D1526: clang::CodeGen::CodeGenModule::EmitCXXGlobalInitFunc() (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x90F366F: clang::CodeGen::CodeGenModule::Release() (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x903F906: clang::CodeGeneratorImpl::HandleTranslationUnit(clang::ASTContext&) (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x8B9E39F: cling::IncrementalParser::codeGenTransaction(cling::Transaction*) (IncrementalParser.cpp:544). ==9328== by 0x8B9E078: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u. , llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (IncrementalParser.cpp:481). ==9328== by 0x8B255F4: cling::Interpreter::Interpreter(int, char const* const*, char const*, bool, cling::Interpreter const*) (Interpreter.cpp:245). ==9328== by 0x894B3B8: cling::Interpreter::Interpreter(int, char const* const*, char const*, bool) (Interpreter.h:308). ==9328== by 0x8A3B5B1: TCling::TCling(char const*, char const*) (TCling.cxx:1116). ==9328== by 0x8A38697: CreateInterpreter (TCling.cxx:593). ==9328== by 0x517F717: TROOT::InitInterpreter() (TROOT.cxx:1974). ==9328== by 0x517983F: ROOT::Internal::GetROOT2() (TROOT.cxx:364). ==9328== Use of uninitialised value of size 8. ==9328== at 0xACFA1A0: llvm::StringRef::find_last_of(llvm::StringRef, unsigned long) const (in /local2/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:205,safety,depend,depends,205,"The new llvm version 'seems' to bring 'new' valgrind warnings. For example:. ```valgrind --suppresions=$ROOTSYS/etc/valgrind-root.supp root.exe -b -l -q```. outputs. ```. ==9328== Conditional jump or move depends on uninitialised value(s). ==9328== at 0xAD44B75: llvm::sys::path::filename(llvm::StringRef, llvm::sys::path::Style) (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x91D1526: clang::CodeGen::CodeGenModule::EmitCXXGlobalInitFunc() (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x90F366F: clang::CodeGen::CodeGenModule::Release() (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x903F906: clang::CodeGeneratorImpl::HandleTranslationUnit(clang::ASTContext&) (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x8B9E39F: cling::IncrementalParser::codeGenTransaction(cling::Transaction*) (IncrementalParser.cpp:544). ==9328== by 0x8B9E078: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u. , llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (IncrementalParser.cpp:481). ==9328== by 0x8B255F4: cling::Interpreter::Interpreter(int, char const* const*, char const*, bool, cling::Interpreter const*) (Interpreter.cpp:245). ==9328== by 0x894B3B8: cling::Interpreter::Interpreter(int, char const* const*, char const*, bool) (Interpreter.h:308). ==9328== by 0x8A3B5B1: TCling::TCling(char const*, char const*) (TCling.cxx:1116). ==9328== by 0x8A38697: CreateInterpreter (TCling.cxx:593). ==9328== by 0x517F717: TROOT::InitInterpreter() (TROOT.cxx:1974). ==9328== by 0x517983F: ROOT::Internal::GetROOT2() (TROOT.cxx:364). ==9328== Use of uninitialised value of size 8. ==9328== at 0xACFA1A0: llvm::StringRef::find_last_of(llvm::StringRef, unsigned long) const (in /local2/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:205,testability,depend,depends,205,"The new llvm version 'seems' to bring 'new' valgrind warnings. For example:. ```valgrind --suppresions=$ROOTSYS/etc/valgrind-root.supp root.exe -b -l -q```. outputs. ```. ==9328== Conditional jump or move depends on uninitialised value(s). ==9328== at 0xAD44B75: llvm::sys::path::filename(llvm::StringRef, llvm::sys::path::Style) (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x91D1526: clang::CodeGen::CodeGenModule::EmitCXXGlobalInitFunc() (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x90F366F: clang::CodeGen::CodeGenModule::Release() (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x903F906: clang::CodeGeneratorImpl::HandleTranslationUnit(clang::ASTContext&) (in /local2/scratch/pcanal/root_builds/master/c++11/lib/libCling.so). ==9328== by 0x8B9E39F: cling::IncrementalParser::codeGenTransaction(cling::Transaction*) (IncrementalParser.cpp:544). ==9328== by 0x8B9E078: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u. , llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (IncrementalParser.cpp:481). ==9328== by 0x8B255F4: cling::Interpreter::Interpreter(int, char const* const*, char const*, bool, cling::Interpreter const*) (Interpreter.cpp:245). ==9328== by 0x894B3B8: cling::Interpreter::Interpreter(int, char const* const*, char const*, bool) (Interpreter.h:308). ==9328== by 0x8A3B5B1: TCling::TCling(char const*, char const*) (TCling.cxx:1116). ==9328== by 0x8A38697: CreateInterpreter (TCling.cxx:593). ==9328== by 0x517F717: TROOT::InitInterpreter() (TROOT.cxx:1974). ==9328== by 0x517983F: ROOT::Internal::GetROOT2() (TROOT.cxx:364). ==9328== Use of uninitialised value of size 8. ==9328== at 0xACFA1A0: llvm::StringRef::find_last_of(llvm::StringRef, unsigned long) const (in /local2/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:152,deployability,log,log-file,152,"Another longer set (see attachement array.vallog.txt. ) from. ```. cd roottest/root/tree/array. valgrind --suppression=$ROOTSYS/etc/vagrind-root.supp --log-file=array.vallog root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -e 'gROOT->ProcessLine("".L TestObj.cpp+"");' -q -l -b runobjArrayTest.C. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:152,safety,log,log-file,152,"Another longer set (see attachement array.vallog.txt. ) from. ```. cd roottest/root/tree/array. valgrind --suppression=$ROOTSYS/etc/vagrind-root.supp --log-file=array.vallog root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -e 'gROOT->ProcessLine("".L TestObj.cpp+"");' -q -l -b runobjArrayTest.C. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:999,safety,Test,TestObj,999,"Another longer set (see attachement array.vallog.txt. ) from. ```. cd roottest/root/tree/array. valgrind --suppression=$ROOTSYS/etc/vagrind-root.supp --log-file=array.vallog root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -e 'gROOT->ProcessLine("".L TestObj.cpp+"");' -q -l -b runobjArrayTest.C. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:152,security,log,log-file,152,"Another longer set (see attachement array.vallog.txt. ) from. ```. cd roottest/root/tree/array. valgrind --suppression=$ROOTSYS/etc/vagrind-root.supp --log-file=array.vallog root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -e 'gROOT->ProcessLine("".L TestObj.cpp+"");' -q -l -b runobjArrayTest.C. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:152,testability,log,log-file,152,"Another longer set (see attachement array.vallog.txt. ) from. ```. cd roottest/root/tree/array. valgrind --suppression=$ROOTSYS/etc/vagrind-root.supp --log-file=array.vallog root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -e 'gROOT->ProcessLine("".L TestObj.cpp+"");' -q -l -b runobjArrayTest.C. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:999,testability,Test,TestObj,999,"Another longer set (see attachement array.vallog.txt. ) from. ```. cd roottest/root/tree/array. valgrind --suppression=$ROOTSYS/etc/vagrind-root.supp --log-file=array.vallog root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -e 'gROOT->ProcessLine("".L TestObj.cpp+"");' -q -l -b runobjArrayTest.C. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:17,deployability,fail,fails,17,. humm .. upload fails so far ... (Send it to vassil by mail),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:17,reliability,fail,fails,17,. humm .. upload fails so far ... (Send it to vassil by mail),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:26,availability,error,error,26,I have fixed the valgrind error from `clang::CodeGen::CodeGenModule::EmitCXXGlobalInitFunc()`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:26,performance,error,error,26,I have fixed the valgrind error from `clang::CodeGen::CodeGenModule::EmitCXXGlobalInitFunc()`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:26,safety,error,error,26,I have fixed the valgrind error from `clang::CodeGen::CodeGenModule::EmitCXXGlobalInitFunc()`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/589:26,usability,error,error,26,I have fixed the valgrind error from `clang::CodeGen::CodeGenModule::EmitCXXGlobalInitFunc()`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/589
https://github.com/root-project/root/pull/590:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:44,availability,failur,failure,44,"@pcanal - any idea how to debug the `ctest` failure? Or at least get it to cough up the failure message? When I run `make cleantest` directly it succeeds; when run via `ctest`, it fails.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:88,availability,failur,failure,88,"@pcanal - any idea how to debug the `ctest` failure? Or at least get it to cough up the failure message? When I run `make cleantest` directly it succeeds; when run via `ctest`, it fails.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:44,deployability,fail,failure,44,"@pcanal - any idea how to debug the `ctest` failure? Or at least get it to cough up the failure message? When I run `make cleantest` directly it succeeds; when run via `ctest`, it fails.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:88,deployability,fail,failure,88,"@pcanal - any idea how to debug the `ctest` failure? Or at least get it to cough up the failure message? When I run `make cleantest` directly it succeeds; when run via `ctest`, it fails.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:180,deployability,fail,fails,180,"@pcanal - any idea how to debug the `ctest` failure? Or at least get it to cough up the failure message? When I run `make cleantest` directly it succeeds; when run via `ctest`, it fails.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:96,integrability,messag,message,96,"@pcanal - any idea how to debug the `ctest` failure? Or at least get it to cough up the failure message? When I run `make cleantest` directly it succeeds; when run via `ctest`, it fails.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:96,interoperability,messag,message,96,"@pcanal - any idea how to debug the `ctest` failure? Or at least get it to cough up the failure message? When I run `make cleantest` directly it succeeds; when run via `ctest`, it fails.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:44,performance,failur,failure,44,"@pcanal - any idea how to debug the `ctest` failure? Or at least get it to cough up the failure message? When I run `make cleantest` directly it succeeds; when run via `ctest`, it fails.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:88,performance,failur,failure,88,"@pcanal - any idea how to debug the `ctest` failure? Or at least get it to cough up the failure message? When I run `make cleantest` directly it succeeds; when run via `ctest`, it fails.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:44,reliability,fail,failure,44,"@pcanal - any idea how to debug the `ctest` failure? Or at least get it to cough up the failure message? When I run `make cleantest` directly it succeeds; when run via `ctest`, it fails.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:88,reliability,fail,failure,88,"@pcanal - any idea how to debug the `ctest` failure? Or at least get it to cough up the failure message? When I run `make cleantest` directly it succeeds; when run via `ctest`, it fails.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:180,reliability,fail,fails,180,"@pcanal - any idea how to debug the `ctest` failure? Or at least get it to cough up the failure message? When I run `make cleantest` directly it succeeds; when run via `ctest`, it fails.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:21,availability,error,error,21,the root-io-geo-make error is due to a missing commit that is (new) on the master. for the other error try:. ```. VERBOSE=true ctest --output-on-failure --no-compress-output -V -R roottest.root.io.compression. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:97,availability,error,error,97,the root-io-geo-make error is due to a missing commit that is (new) on the master. for the other error try:. ```. VERBOSE=true ctest --output-on-failure --no-compress-output -V -R roottest.root.io.compression. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:145,availability,failur,failure,145,the root-io-geo-make error is due to a missing commit that is (new) on the master. for the other error try:. ```. VERBOSE=true ctest --output-on-failure --no-compress-output -V -R roottest.root.io.compression. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:145,deployability,fail,failure,145,the root-io-geo-make error is due to a missing commit that is (new) on the master. for the other error try:. ```. VERBOSE=true ctest --output-on-failure --no-compress-output -V -R roottest.root.io.compression. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:21,performance,error,error,21,the root-io-geo-make error is due to a missing commit that is (new) on the master. for the other error try:. ```. VERBOSE=true ctest --output-on-failure --no-compress-output -V -R roottest.root.io.compression. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:97,performance,error,error,97,the root-io-geo-make error is due to a missing commit that is (new) on the master. for the other error try:. ```. VERBOSE=true ctest --output-on-failure --no-compress-output -V -R roottest.root.io.compression. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:145,performance,failur,failure,145,the root-io-geo-make error is due to a missing commit that is (new) on the master. for the other error try:. ```. VERBOSE=true ctest --output-on-failure --no-compress-output -V -R roottest.root.io.compression. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:145,reliability,fail,failure,145,the root-io-geo-make error is due to a missing commit that is (new) on the master. for the other error try:. ```. VERBOSE=true ctest --output-on-failure --no-compress-output -V -R roottest.root.io.compression. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:21,safety,error,error,21,the root-io-geo-make error is due to a missing commit that is (new) on the master. for the other error try:. ```. VERBOSE=true ctest --output-on-failure --no-compress-output -V -R roottest.root.io.compression. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:97,safety,error,error,97,the root-io-geo-make error is due to a missing commit that is (new) on the master. for the other error try:. ```. VERBOSE=true ctest --output-on-failure --no-compress-output -V -R roottest.root.io.compression. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:21,usability,error,error,21,the root-io-geo-make error is due to a missing commit that is (new) on the master. for the other error try:. ```. VERBOSE=true ctest --output-on-failure --no-compress-output -V -R roottest.root.io.compression. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:97,usability,error,error,97,the root-io-geo-make error is due to a missing commit that is (new) on the master. for the other error try:. ```. VERBOSE=true ctest --output-on-failure --no-compress-output -V -R roottest.root.io.compression. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:10,availability,failur,failure,10,The ctest failure should be fixed by https://github.com/root-project/roottest/pull/45,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:10,deployability,fail,failure,10,The ctest failure should be fixed by https://github.com/root-project/roottest/pull/45,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:10,performance,failur,failure,10,The ctest failure should be fixed by https://github.com/root-project/roottest/pull/45,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:10,reliability,fail,failure,10,The ctest failure should be fixed by https://github.com/root-project/roottest/pull/45,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:48,deployability,log,log,48,"@bbockelm please, try to be explicit in the git log so that later (much later) we can avoid looking at commit (to find a problem) ... ""addressing review comment"" does not give (our later selves) any clue of what is the nature of the change. [The only exception to that rule are 'white space' only change that have no functional side-effect]. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:162,reliability,doe,does,162,"@bbockelm please, try to be explicit in the git log so that later (much later) we can avoid looking at commit (to find a problem) ... ""addressing review comment"" does not give (our later selves) any clue of what is the nature of the change. [The only exception to that rule are 'white space' only change that have no functional side-effect]. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:48,safety,log,log,48,"@bbockelm please, try to be explicit in the git log so that later (much later) we can avoid looking at commit (to find a problem) ... ""addressing review comment"" does not give (our later selves) any clue of what is the nature of the change. [The only exception to that rule are 'white space' only change that have no functional side-effect]. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:86,safety,avoid,avoid,86,"@bbockelm please, try to be explicit in the git log so that later (much later) we can avoid looking at commit (to find a problem) ... ""addressing review comment"" does not give (our later selves) any clue of what is the nature of the change. [The only exception to that rule are 'white space' only change that have no functional side-effect]. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:146,safety,review,review,146,"@bbockelm please, try to be explicit in the git log so that later (much later) we can avoid looking at commit (to find a problem) ... ""addressing review comment"" does not give (our later selves) any clue of what is the nature of the change. [The only exception to that rule are 'white space' only change that have no functional side-effect]. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:251,safety,except,exception,251,"@bbockelm please, try to be explicit in the git log so that later (much later) we can avoid looking at commit (to find a problem) ... ""addressing review comment"" does not give (our later selves) any clue of what is the nature of the change. [The only exception to that rule are 'white space' only change that have no functional side-effect]. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:48,security,log,log,48,"@bbockelm please, try to be explicit in the git log so that later (much later) we can avoid looking at commit (to find a problem) ... ""addressing review comment"" does not give (our later selves) any clue of what is the nature of the change. [The only exception to that rule are 'white space' only change that have no functional side-effect]. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:48,testability,log,log,48,"@bbockelm please, try to be explicit in the git log so that later (much later) we can avoid looking at commit (to find a problem) ... ""addressing review comment"" does not give (our later selves) any clue of what is the nature of the change. [The only exception to that rule are 'white space' only change that have no functional side-effect]. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:146,testability,review,review,146,"@bbockelm please, try to be explicit in the git log so that later (much later) we can avoid looking at commit (to find a problem) ... ""addressing review comment"" does not give (our later selves) any clue of what is the nature of the change. [The only exception to that rule are 'white space' only change that have no functional side-effect]. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:87,integrability,messag,messages,87,"@pcanal - the GitHub PR page right now is a bit messy, but the rewording of the commit messages you requested is complete. Ready to go?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:87,interoperability,messag,messages,87,"@pcanal - the GitHub PR page right now is a bit messy, but the rewording of the commit messages you requested is complete. Ready to go?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:113,safety,compl,complete,113,"@pcanal - the GitHub PR page right now is a bit messy, but the rewording of the commit messages you requested is complete. Ready to go?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:113,security,compl,complete,113,"@pcanal - the GitHub PR page right now is a bit messy, but the rewording of the commit messages you requested is complete. Ready to go?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:23,deployability,updat,update,23,Could you open a PR to update the configure/make :) ? Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:34,integrability,configur,configure,34,Could you open a PR to update the configure/make :) ? Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:34,modifiability,configur,configure,34,Could you open a PR to update the configure/make :) ? Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:23,safety,updat,update,23,Could you open a PR to update the configure/make :) ? Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:23,security,updat,update,23,Could you open a PR to update the configure/make :) ? Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:34,security,configur,configure,34,Could you open a PR to update the configure/make :) ? Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:33,deployability,build,builds,33,"Hi,. the PR broke Arm and fedora builds: could you please check? http://cdash.cern.ch/index.php?project=ROOT. Cheers,. D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:66,availability,error,error,66,"@dpiparo - is it possible to pull up the logs? Unfortunately, the error message says simply the error message is in a different log file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:96,availability,error,error,96,"@dpiparo - is it possible to pull up the logs? Unfortunately, the error message says simply the error message is in a different log file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:41,deployability,log,logs,41,"@dpiparo - is it possible to pull up the logs? Unfortunately, the error message says simply the error message is in a different log file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:128,deployability,log,log,128,"@dpiparo - is it possible to pull up the logs? Unfortunately, the error message says simply the error message is in a different log file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:72,integrability,messag,message,72,"@dpiparo - is it possible to pull up the logs? Unfortunately, the error message says simply the error message is in a different log file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:102,integrability,messag,message,102,"@dpiparo - is it possible to pull up the logs? Unfortunately, the error message says simply the error message is in a different log file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:72,interoperability,messag,message,72,"@dpiparo - is it possible to pull up the logs? Unfortunately, the error message says simply the error message is in a different log file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:102,interoperability,messag,message,102,"@dpiparo - is it possible to pull up the logs? Unfortunately, the error message says simply the error message is in a different log file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:66,performance,error,error,66,"@dpiparo - is it possible to pull up the logs? Unfortunately, the error message says simply the error message is in a different log file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:96,performance,error,error,96,"@dpiparo - is it possible to pull up the logs? Unfortunately, the error message says simply the error message is in a different log file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:41,safety,log,logs,41,"@dpiparo - is it possible to pull up the logs? Unfortunately, the error message says simply the error message is in a different log file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:66,safety,error,error,66,"@dpiparo - is it possible to pull up the logs? Unfortunately, the error message says simply the error message is in a different log file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:96,safety,error,error,96,"@dpiparo - is it possible to pull up the logs? Unfortunately, the error message says simply the error message is in a different log file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:128,safety,log,log,128,"@dpiparo - is it possible to pull up the logs? Unfortunately, the error message says simply the error message is in a different log file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:41,security,log,logs,41,"@dpiparo - is it possible to pull up the logs? Unfortunately, the error message says simply the error message is in a different log file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:128,security,log,log,128,"@dpiparo - is it possible to pull up the logs? Unfortunately, the error message says simply the error message is in a different log file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:41,testability,log,logs,41,"@dpiparo - is it possible to pull up the logs? Unfortunately, the error message says simply the error message is in a different log file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:85,testability,simpl,simply,85,"@dpiparo - is it possible to pull up the logs? Unfortunately, the error message says simply the error message is in a different log file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:128,testability,log,log,128,"@dpiparo - is it possible to pull up the logs? Unfortunately, the error message says simply the error message is in a different log file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:66,usability,error,error,66,"@dpiparo - is it possible to pull up the logs? Unfortunately, the error message says simply the error message is in a different log file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:85,usability,simpl,simply,85,"@dpiparo - is it possible to pull up the logs? Unfortunately, the error message says simply the error message is in a different log file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:96,usability,error,error,96,"@dpiparo - is it possible to pull up the logs? Unfortunately, the error message says simply the error message is in a different log file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:154,availability,down,downloaded,154,"Hi,. I fixed that since the bug affected my development platform. Now the tarball is fetched from the eos based website from where all other tarballs are downloaded. The reason for the bug was the fact that curl could not use https.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:56,interoperability,platform,platform,56,"Hi,. I fixed that since the bug affected my development platform. Now the tarball is fetched from the eos based website from where all other tarballs are downloaded. The reason for the bug was the fact that curl could not use https.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/590:44,deployability,stage,stage,44,"Thanks Danilo! Yes, that was a TODO item to stage the tarball to the official repo -- you just saved us some work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/590
https://github.com/root-project/root/pull/591:61,safety,Review,Reviewing,61,I merged the non-string_view changes in the master and 6.10. Reviewing the string_view changes made us rethink whether string_view ought to be used here ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/591
https://github.com/root-project/root/pull/591:61,testability,Review,Reviewing,61,I merged the non-string_view changes in the master and 6.10. Reviewing the string_view changes made us rethink whether string_view ought to be used here ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/591
https://github.com/root-project/root/pull/591:80,deployability,updat,update,80,"I am looking into this PR, but ROOT doesn't compile anymore in C++17 after LLVM update (I think, I found why -- testing). The patch to change __cplusplus__ is no more needed as exact same thing is already in newer integrated LLVM.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/591
https://github.com/root-project/root/pull/591:126,deployability,patch,patch,126,"I am looking into this PR, but ROOT doesn't compile anymore in C++17 after LLVM update (I think, I found why -- testing). The patch to change __cplusplus__ is no more needed as exact same thing is already in newer integrated LLVM.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/591
https://github.com/root-project/root/pull/591:214,deployability,integr,integrated,214,"I am looking into this PR, but ROOT doesn't compile anymore in C++17 after LLVM update (I think, I found why -- testing). The patch to change __cplusplus__ is no more needed as exact same thing is already in newer integrated LLVM.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/591
https://github.com/root-project/root/pull/591:214,integrability,integr,integrated,214,"I am looking into this PR, but ROOT doesn't compile anymore in C++17 after LLVM update (I think, I found why -- testing). The patch to change __cplusplus__ is no more needed as exact same thing is already in newer integrated LLVM.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/591
https://github.com/root-project/root/pull/591:214,interoperability,integr,integrated,214,"I am looking into this PR, but ROOT doesn't compile anymore in C++17 after LLVM update (I think, I found why -- testing). The patch to change __cplusplus__ is no more needed as exact same thing is already in newer integrated LLVM.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/591
https://github.com/root-project/root/pull/591:214,modifiability,integr,integrated,214,"I am looking into this PR, but ROOT doesn't compile anymore in C++17 after LLVM update (I think, I found why -- testing). The patch to change __cplusplus__ is no more needed as exact same thing is already in newer integrated LLVM.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/591
https://github.com/root-project/root/pull/591:36,reliability,doe,doesn,36,"I am looking into this PR, but ROOT doesn't compile anymore in C++17 after LLVM update (I think, I found why -- testing). The patch to change __cplusplus__ is no more needed as exact same thing is already in newer integrated LLVM.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/591
https://github.com/root-project/root/pull/591:214,reliability,integr,integrated,214,"I am looking into this PR, but ROOT doesn't compile anymore in C++17 after LLVM update (I think, I found why -- testing). The patch to change __cplusplus__ is no more needed as exact same thing is already in newer integrated LLVM.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/591
https://github.com/root-project/root/pull/591:80,safety,updat,update,80,"I am looking into this PR, but ROOT doesn't compile anymore in C++17 after LLVM update (I think, I found why -- testing). The patch to change __cplusplus__ is no more needed as exact same thing is already in newer integrated LLVM.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/591
https://github.com/root-project/root/pull/591:112,safety,test,testing,112,"I am looking into this PR, but ROOT doesn't compile anymore in C++17 after LLVM update (I think, I found why -- testing). The patch to change __cplusplus__ is no more needed as exact same thing is already in newer integrated LLVM.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/591
https://github.com/root-project/root/pull/591:126,safety,patch,patch,126,"I am looking into this PR, but ROOT doesn't compile anymore in C++17 after LLVM update (I think, I found why -- testing). The patch to change __cplusplus__ is no more needed as exact same thing is already in newer integrated LLVM.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/591
https://github.com/root-project/root/pull/591:80,security,updat,update,80,"I am looking into this PR, but ROOT doesn't compile anymore in C++17 after LLVM update (I think, I found why -- testing). The patch to change __cplusplus__ is no more needed as exact same thing is already in newer integrated LLVM.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/591
https://github.com/root-project/root/pull/591:126,security,patch,patch,126,"I am looking into this PR, but ROOT doesn't compile anymore in C++17 after LLVM update (I think, I found why -- testing). The patch to change __cplusplus__ is no more needed as exact same thing is already in newer integrated LLVM.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/591
https://github.com/root-project/root/pull/591:214,security,integr,integrated,214,"I am looking into this PR, but ROOT doesn't compile anymore in C++17 after LLVM update (I think, I found why -- testing). The patch to change __cplusplus__ is no more needed as exact same thing is already in newer integrated LLVM.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/591
https://github.com/root-project/root/pull/591:112,testability,test,testing,112,"I am looking into this PR, but ROOT doesn't compile anymore in C++17 after LLVM update (I think, I found why -- testing). The patch to change __cplusplus__ is no more needed as exact same thing is already in newer integrated LLVM.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/591
https://github.com/root-project/root/pull/591:214,testability,integr,integrated,214,"I am looking into this PR, but ROOT doesn't compile anymore in C++17 after LLVM update (I think, I found why -- testing). The patch to change __cplusplus__ is no more needed as exact same thing is already in newer integrated LLVM.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/591
https://github.com/root-project/root/pull/591:320,deployability,manag,managed,320,"Just to summarize, the following still needs to be resolved:. ```. diff --git a/io/io/v7/inc/ROOT/TFile.hxx b/io/io/v7/inc/ROOT/TFile.hxx. index dd62024076..020ea83789 100644. --- a/io/io/v7/inc/ROOT/TFile.hxx. +++ b/io/io/v7/inc/ROOT/TFile.hxx. @@ -160,7 +160,7 @@ public:. /// Write an object that is already lifetime managed by this TFileImplBase. void Write(std::string_view name) {. - auto dep = Find(name.to_string());. + auto dep = Find(std::string(name.data(), name.size()));. WriteMemoryWithType(name, dep.GetPointer().get(), dep.GetType());. }. diff --git a/io/io/v7/src/TFile.cxx b/io/io/v7/src/TFile.cxx. index 4d75333c46..1e01456327 100644. --- a/io/io/v7/src/TFile.cxx. +++ b/io/io/v7/src/TFile.cxx. @@ -97,7 +97,7 @@ public:. }. void WriteMemoryWithType(std::string_view name, const void* address, TClass* cl) final {. - fOldFile->WriteObjectAny(address, cl, name.to_string().c_str());. + fOldFile->WriteObjectAny(address, cl, std::string(name.data(), name.size()).c_str());. }. };. }. @@ -144,7 +144,7 @@ OpenV6TFile(std::string_view name, const char* mode,. }. } setCacheDirRAII(opts.fCachedRead);. - auto v6storage = std::make_unique<TV6Storage>(name.to_string(), GetV6TFileOpts(mode, opts));. + auto v6storage = std::make_unique<TV6Storage>(std::string(name.data(), name.size()), GetV6TFileOpts(mode, opts));. using namespace ROOT::Experimental::Internal;. return std::unique_ptr<TFileStorageInterface>{std::move(v6storage)};. @@ -191,7 +191,7 @@ std::string ROOT::Experimental::TFile::SetCacheDir(std::string_view path) {. std::lock_guard<std::mutex> lock(GetCacheDirMutex());. std::string ret = ::TFile::GetCacheFileDir();. - ::TFile::SetCacheFileDir(path.to_string().c_str());. + ::TFile::SetCacheFileDir(path);. return ret;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/591
https://github.com/root-project/root/pull/591:320,energy efficiency,manag,managed,320,"Just to summarize, the following still needs to be resolved:. ```. diff --git a/io/io/v7/inc/ROOT/TFile.hxx b/io/io/v7/inc/ROOT/TFile.hxx. index dd62024076..020ea83789 100644. --- a/io/io/v7/inc/ROOT/TFile.hxx. +++ b/io/io/v7/inc/ROOT/TFile.hxx. @@ -160,7 +160,7 @@ public:. /// Write an object that is already lifetime managed by this TFileImplBase. void Write(std::string_view name) {. - auto dep = Find(name.to_string());. + auto dep = Find(std::string(name.data(), name.size()));. WriteMemoryWithType(name, dep.GetPointer().get(), dep.GetType());. }. diff --git a/io/io/v7/src/TFile.cxx b/io/io/v7/src/TFile.cxx. index 4d75333c46..1e01456327 100644. --- a/io/io/v7/src/TFile.cxx. +++ b/io/io/v7/src/TFile.cxx. @@ -97,7 +97,7 @@ public:. }. void WriteMemoryWithType(std::string_view name, const void* address, TClass* cl) final {. - fOldFile->WriteObjectAny(address, cl, name.to_string().c_str());. + fOldFile->WriteObjectAny(address, cl, std::string(name.data(), name.size()).c_str());. }. };. }. @@ -144,7 +144,7 @@ OpenV6TFile(std::string_view name, const char* mode,. }. } setCacheDirRAII(opts.fCachedRead);. - auto v6storage = std::make_unique<TV6Storage>(name.to_string(), GetV6TFileOpts(mode, opts));. + auto v6storage = std::make_unique<TV6Storage>(std::string(name.data(), name.size()), GetV6TFileOpts(mode, opts));. using namespace ROOT::Experimental::Internal;. return std::unique_ptr<TFileStorageInterface>{std::move(v6storage)};. @@ -191,7 +191,7 @@ std::string ROOT::Experimental::TFile::SetCacheDir(std::string_view path) {. std::lock_guard<std::mutex> lock(GetCacheDirMutex());. std::string ret = ::TFile::GetCacheFileDir();. - ::TFile::SetCacheFileDir(path.to_string().c_str());. + ::TFile::SetCacheFileDir(path);. return ret;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/591
https://github.com/root-project/root/pull/591:266,integrability,pub,public,266,"Just to summarize, the following still needs to be resolved:. ```. diff --git a/io/io/v7/inc/ROOT/TFile.hxx b/io/io/v7/inc/ROOT/TFile.hxx. index dd62024076..020ea83789 100644. --- a/io/io/v7/inc/ROOT/TFile.hxx. +++ b/io/io/v7/inc/ROOT/TFile.hxx. @@ -160,7 +160,7 @@ public:. /// Write an object that is already lifetime managed by this TFileImplBase. void Write(std::string_view name) {. - auto dep = Find(name.to_string());. + auto dep = Find(std::string(name.data(), name.size()));. WriteMemoryWithType(name, dep.GetPointer().get(), dep.GetType());. }. diff --git a/io/io/v7/src/TFile.cxx b/io/io/v7/src/TFile.cxx. index 4d75333c46..1e01456327 100644. --- a/io/io/v7/src/TFile.cxx. +++ b/io/io/v7/src/TFile.cxx. @@ -97,7 +97,7 @@ public:. }. void WriteMemoryWithType(std::string_view name, const void* address, TClass* cl) final {. - fOldFile->WriteObjectAny(address, cl, name.to_string().c_str());. + fOldFile->WriteObjectAny(address, cl, std::string(name.data(), name.size()).c_str());. }. };. }. @@ -144,7 +144,7 @@ OpenV6TFile(std::string_view name, const char* mode,. }. } setCacheDirRAII(opts.fCachedRead);. - auto v6storage = std::make_unique<TV6Storage>(name.to_string(), GetV6TFileOpts(mode, opts));. + auto v6storage = std::make_unique<TV6Storage>(std::string(name.data(), name.size()), GetV6TFileOpts(mode, opts));. using namespace ROOT::Experimental::Internal;. return std::unique_ptr<TFileStorageInterface>{std::move(v6storage)};. @@ -191,7 +191,7 @@ std::string ROOT::Experimental::TFile::SetCacheDir(std::string_view path) {. std::lock_guard<std::mutex> lock(GetCacheDirMutex());. std::string ret = ::TFile::GetCacheFileDir();. - ::TFile::SetCacheFileDir(path.to_string().c_str());. + ::TFile::SetCacheFileDir(path);. return ret;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/591
https://github.com/root-project/root/pull/591:732,integrability,pub,public,732,"Just to summarize, the following still needs to be resolved:. ```. diff --git a/io/io/v7/inc/ROOT/TFile.hxx b/io/io/v7/inc/ROOT/TFile.hxx. index dd62024076..020ea83789 100644. --- a/io/io/v7/inc/ROOT/TFile.hxx. +++ b/io/io/v7/inc/ROOT/TFile.hxx. @@ -160,7 +160,7 @@ public:. /// Write an object that is already lifetime managed by this TFileImplBase. void Write(std::string_view name) {. - auto dep = Find(name.to_string());. + auto dep = Find(std::string(name.data(), name.size()));. WriteMemoryWithType(name, dep.GetPointer().get(), dep.GetType());. }. diff --git a/io/io/v7/src/TFile.cxx b/io/io/v7/src/TFile.cxx. index 4d75333c46..1e01456327 100644. --- a/io/io/v7/src/TFile.cxx. +++ b/io/io/v7/src/TFile.cxx. @@ -97,7 +97,7 @@ public:. }. void WriteMemoryWithType(std::string_view name, const void* address, TClass* cl) final {. - fOldFile->WriteObjectAny(address, cl, name.to_string().c_str());. + fOldFile->WriteObjectAny(address, cl, std::string(name.data(), name.size()).c_str());. }. };. }. @@ -144,7 +144,7 @@ OpenV6TFile(std::string_view name, const char* mode,. }. } setCacheDirRAII(opts.fCachedRead);. - auto v6storage = std::make_unique<TV6Storage>(name.to_string(), GetV6TFileOpts(mode, opts));. + auto v6storage = std::make_unique<TV6Storage>(std::string(name.data(), name.size()), GetV6TFileOpts(mode, opts));. using namespace ROOT::Experimental::Internal;. return std::unique_ptr<TFileStorageInterface>{std::move(v6storage)};. @@ -191,7 +191,7 @@ std::string ROOT::Experimental::TFile::SetCacheDir(std::string_view path) {. std::lock_guard<std::mutex> lock(GetCacheDirMutex());. std::string ret = ::TFile::GetCacheFileDir();. - ::TFile::SetCacheFileDir(path.to_string().c_str());. + ::TFile::SetCacheFileDir(path);. return ret;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/591
https://github.com/root-project/root/pull/591:1571,performance,lock,lock,1571,"Just to summarize, the following still needs to be resolved:. ```. diff --git a/io/io/v7/inc/ROOT/TFile.hxx b/io/io/v7/inc/ROOT/TFile.hxx. index dd62024076..020ea83789 100644. --- a/io/io/v7/inc/ROOT/TFile.hxx. +++ b/io/io/v7/inc/ROOT/TFile.hxx. @@ -160,7 +160,7 @@ public:. /// Write an object that is already lifetime managed by this TFileImplBase. void Write(std::string_view name) {. - auto dep = Find(name.to_string());. + auto dep = Find(std::string(name.data(), name.size()));. WriteMemoryWithType(name, dep.GetPointer().get(), dep.GetType());. }. diff --git a/io/io/v7/src/TFile.cxx b/io/io/v7/src/TFile.cxx. index 4d75333c46..1e01456327 100644. --- a/io/io/v7/src/TFile.cxx. +++ b/io/io/v7/src/TFile.cxx. @@ -97,7 +97,7 @@ public:. }. void WriteMemoryWithType(std::string_view name, const void* address, TClass* cl) final {. - fOldFile->WriteObjectAny(address, cl, name.to_string().c_str());. + fOldFile->WriteObjectAny(address, cl, std::string(name.data(), name.size()).c_str());. }. };. }. @@ -144,7 +144,7 @@ OpenV6TFile(std::string_view name, const char* mode,. }. } setCacheDirRAII(opts.fCachedRead);. - auto v6storage = std::make_unique<TV6Storage>(name.to_string(), GetV6TFileOpts(mode, opts));. + auto v6storage = std::make_unique<TV6Storage>(std::string(name.data(), name.size()), GetV6TFileOpts(mode, opts));. using namespace ROOT::Experimental::Internal;. return std::unique_ptr<TFileStorageInterface>{std::move(v6storage)};. @@ -191,7 +191,7 @@ std::string ROOT::Experimental::TFile::SetCacheDir(std::string_view path) {. std::lock_guard<std::mutex> lock(GetCacheDirMutex());. std::string ret = ::TFile::GetCacheFileDir();. - ::TFile::SetCacheFileDir(path.to_string().c_str());. + ::TFile::SetCacheFileDir(path);. return ret;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/591
https://github.com/root-project/root/pull/591:320,safety,manag,managed,320,"Just to summarize, the following still needs to be resolved:. ```. diff --git a/io/io/v7/inc/ROOT/TFile.hxx b/io/io/v7/inc/ROOT/TFile.hxx. index dd62024076..020ea83789 100644. --- a/io/io/v7/inc/ROOT/TFile.hxx. +++ b/io/io/v7/inc/ROOT/TFile.hxx. @@ -160,7 +160,7 @@ public:. /// Write an object that is already lifetime managed by this TFileImplBase. void Write(std::string_view name) {. - auto dep = Find(name.to_string());. + auto dep = Find(std::string(name.data(), name.size()));. WriteMemoryWithType(name, dep.GetPointer().get(), dep.GetType());. }. diff --git a/io/io/v7/src/TFile.cxx b/io/io/v7/src/TFile.cxx. index 4d75333c46..1e01456327 100644. --- a/io/io/v7/src/TFile.cxx. +++ b/io/io/v7/src/TFile.cxx. @@ -97,7 +97,7 @@ public:. }. void WriteMemoryWithType(std::string_view name, const void* address, TClass* cl) final {. - fOldFile->WriteObjectAny(address, cl, name.to_string().c_str());. + fOldFile->WriteObjectAny(address, cl, std::string(name.data(), name.size()).c_str());. }. };. }. @@ -144,7 +144,7 @@ OpenV6TFile(std::string_view name, const char* mode,. }. } setCacheDirRAII(opts.fCachedRead);. - auto v6storage = std::make_unique<TV6Storage>(name.to_string(), GetV6TFileOpts(mode, opts));. + auto v6storage = std::make_unique<TV6Storage>(std::string(name.data(), name.size()), GetV6TFileOpts(mode, opts));. using namespace ROOT::Experimental::Internal;. return std::unique_ptr<TFileStorageInterface>{std::move(v6storage)};. @@ -191,7 +191,7 @@ std::string ROOT::Experimental::TFile::SetCacheDir(std::string_view path) {. std::lock_guard<std::mutex> lock(GetCacheDirMutex());. std::string ret = ::TFile::GetCacheFileDir();. - ::TFile::SetCacheFileDir(path.to_string().c_str());. + ::TFile::SetCacheFileDir(path);. return ret;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/591
https://github.com/root-project/root/pull/591:1571,security,lock,lock,1571,"Just to summarize, the following still needs to be resolved:. ```. diff --git a/io/io/v7/inc/ROOT/TFile.hxx b/io/io/v7/inc/ROOT/TFile.hxx. index dd62024076..020ea83789 100644. --- a/io/io/v7/inc/ROOT/TFile.hxx. +++ b/io/io/v7/inc/ROOT/TFile.hxx. @@ -160,7 +160,7 @@ public:. /// Write an object that is already lifetime managed by this TFileImplBase. void Write(std::string_view name) {. - auto dep = Find(name.to_string());. + auto dep = Find(std::string(name.data(), name.size()));. WriteMemoryWithType(name, dep.GetPointer().get(), dep.GetType());. }. diff --git a/io/io/v7/src/TFile.cxx b/io/io/v7/src/TFile.cxx. index 4d75333c46..1e01456327 100644. --- a/io/io/v7/src/TFile.cxx. +++ b/io/io/v7/src/TFile.cxx. @@ -97,7 +97,7 @@ public:. }. void WriteMemoryWithType(std::string_view name, const void* address, TClass* cl) final {. - fOldFile->WriteObjectAny(address, cl, name.to_string().c_str());. + fOldFile->WriteObjectAny(address, cl, std::string(name.data(), name.size()).c_str());. }. };. }. @@ -144,7 +144,7 @@ OpenV6TFile(std::string_view name, const char* mode,. }. } setCacheDirRAII(opts.fCachedRead);. - auto v6storage = std::make_unique<TV6Storage>(name.to_string(), GetV6TFileOpts(mode, opts));. + auto v6storage = std::make_unique<TV6Storage>(std::string(name.data(), name.size()), GetV6TFileOpts(mode, opts));. using namespace ROOT::Experimental::Internal;. return std::unique_ptr<TFileStorageInterface>{std::move(v6storage)};. @@ -191,7 +191,7 @@ std::string ROOT::Experimental::TFile::SetCacheDir(std::string_view path) {. std::lock_guard<std::mutex> lock(GetCacheDirMutex());. std::string ret = ::TFile::GetCacheFileDir();. - ::TFile::SetCacheFileDir(path.to_string().c_str());. + ::TFile::SetCacheFileDir(path);. return ret;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/591
https://github.com/root-project/root/pull/591:57,safety,test,test,57,@davidlt Could you please rebase and push so that we can test against latest master? Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/591
https://github.com/root-project/root/pull/591:57,testability,test,test,57,@davidlt Could you please rebase and push so that we can test against latest master? Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/591
https://github.com/root-project/root/pull/591:172,energy efficiency,current,currently,172,@amadio to my understanding there is no resolution how to resolve it. See a comment from @pcanal https://github.com/root-project/root/pull/591#issuecomment-307159625. Thus currently this PR acts as a reminder/todo.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/591
https://github.com/root-project/root/pull/591:14,testability,understand,understanding,14,@amadio to my understanding there is no resolution how to resolve it. See a comment from @pcanal https://github.com/root-project/root/pull/591#issuecomment-307159625. Thus currently this PR acts as a reminder/todo.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/591
https://github.com/root-project/root/pull/591:115,usability,statu,status,115,"@davidlt I have changes to remove usage of string view from ROOT7's TFile in C++17 mode, but I wanted to check the status of this PR before merging them in. If you could remove your changes that were merged by Philippe and keep the rest, I can take a look and cherry-picking your fixes into master as needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/591
https://github.com/root-project/root/pull/591:183,usability,close,close,183,Based on this PR the only thing what's left is TFile changes (unless new breakage was introduced). The rest is already in to my knowledge. Thus you if you merge TFile changes you can close this one.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/591
https://github.com/root-project/root/pull/591:45,usability,close,close,45,"Alright, I guess I will merge my changes and close this then. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/591
https://github.com/root-project/root/pull/593:8,modifiability,exten,extend,8,Can you extend roottest/root/io/compression and roottest/root/io/filemerger to include lz4? thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/593
https://github.com/root-project/root/pull/594:31,interoperability,format,format,31,"It seems there are a few clang-format and clang-tidy issues. Could you address them, too?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/594
https://github.com/root-project/root/pull/594:49,deployability,build,build,49,"@vgvassilev Sorry, I thought it was fixed as the build passed so I didn't dive into the console logs of it. Anyhow, as far as I understand, the only issue it complains about is that `root/math/mathcore/test/stress/TestHelper.cxx:33:20` is never reached, which I find unreasonable. Do you think this could be a false flag, or something I should look more into?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/594
https://github.com/root-project/root/pull/594:96,deployability,log,logs,96,"@vgvassilev Sorry, I thought it was fixed as the build passed so I didn't dive into the console logs of it. Anyhow, as far as I understand, the only issue it complains about is that `root/math/mathcore/test/stress/TestHelper.cxx:33:20` is never reached, which I find unreasonable. Do you think this could be a false flag, or something I should look more into?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/594
https://github.com/root-project/root/pull/594:96,safety,log,logs,96,"@vgvassilev Sorry, I thought it was fixed as the build passed so I didn't dive into the console logs of it. Anyhow, as far as I understand, the only issue it complains about is that `root/math/mathcore/test/stress/TestHelper.cxx:33:20` is never reached, which I find unreasonable. Do you think this could be a false flag, or something I should look more into?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/594
https://github.com/root-project/root/pull/594:158,safety,compl,complains,158,"@vgvassilev Sorry, I thought it was fixed as the build passed so I didn't dive into the console logs of it. Anyhow, as far as I understand, the only issue it complains about is that `root/math/mathcore/test/stress/TestHelper.cxx:33:20` is never reached, which I find unreasonable. Do you think this could be a false flag, or something I should look more into?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/594
https://github.com/root-project/root/pull/594:202,safety,test,test,202,"@vgvassilev Sorry, I thought it was fixed as the build passed so I didn't dive into the console logs of it. Anyhow, as far as I understand, the only issue it complains about is that `root/math/mathcore/test/stress/TestHelper.cxx:33:20` is never reached, which I find unreasonable. Do you think this could be a false flag, or something I should look more into?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/594
https://github.com/root-project/root/pull/594:214,safety,Test,TestHelper,214,"@vgvassilev Sorry, I thought it was fixed as the build passed so I didn't dive into the console logs of it. Anyhow, as far as I understand, the only issue it complains about is that `root/math/mathcore/test/stress/TestHelper.cxx:33:20` is never reached, which I find unreasonable. Do you think this could be a false flag, or something I should look more into?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/594
https://github.com/root-project/root/pull/594:96,security,log,logs,96,"@vgvassilev Sorry, I thought it was fixed as the build passed so I didn't dive into the console logs of it. Anyhow, as far as I understand, the only issue it complains about is that `root/math/mathcore/test/stress/TestHelper.cxx:33:20` is never reached, which I find unreasonable. Do you think this could be a false flag, or something I should look more into?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/594
https://github.com/root-project/root/pull/594:158,security,compl,complains,158,"@vgvassilev Sorry, I thought it was fixed as the build passed so I didn't dive into the console logs of it. Anyhow, as far as I understand, the only issue it complains about is that `root/math/mathcore/test/stress/TestHelper.cxx:33:20` is never reached, which I find unreasonable. Do you think this could be a false flag, or something I should look more into?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/594
https://github.com/root-project/root/pull/594:96,testability,log,logs,96,"@vgvassilev Sorry, I thought it was fixed as the build passed so I didn't dive into the console logs of it. Anyhow, as far as I understand, the only issue it complains about is that `root/math/mathcore/test/stress/TestHelper.cxx:33:20` is never reached, which I find unreasonable. Do you think this could be a false flag, or something I should look more into?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/594
https://github.com/root-project/root/pull/594:128,testability,understand,understand,128,"@vgvassilev Sorry, I thought it was fixed as the build passed so I didn't dive into the console logs of it. Anyhow, as far as I understand, the only issue it complains about is that `root/math/mathcore/test/stress/TestHelper.cxx:33:20` is never reached, which I find unreasonable. Do you think this could be a false flag, or something I should look more into?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/594
https://github.com/root-project/root/pull/594:202,testability,test,test,202,"@vgvassilev Sorry, I thought it was fixed as the build passed so I didn't dive into the console logs of it. Anyhow, as far as I understand, the only issue it complains about is that `root/math/mathcore/test/stress/TestHelper.cxx:33:20` is never reached, which I find unreasonable. Do you think this could be a false flag, or something I should look more into?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/594
https://github.com/root-project/root/pull/594:214,testability,Test,TestHelper,214,"@vgvassilev Sorry, I thought it was fixed as the build passed so I didn't dive into the console logs of it. Anyhow, as far as I understand, the only issue it complains about is that `root/math/mathcore/test/stress/TestHelper.cxx:33:20` is never reached, which I find unreasonable. Do you think this could be a false flag, or something I should look more into?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/594
https://github.com/root-project/root/pull/596:102,performance,lock,lock,102,"@dpiparo I don't see the comments. Besides, after further development, I found the need also make the lock re-entrant from Read to Write lock making it relatively heavy so I am planning to actually separate the simple RW lock from the re-entrant one. So once I find (and address) the comments, I will close this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/596
https://github.com/root-project/root/pull/596:137,performance,lock,lock,137,"@dpiparo I don't see the comments. Besides, after further development, I found the need also make the lock re-entrant from Read to Write lock making it relatively heavy so I am planning to actually separate the simple RW lock from the re-entrant one. So once I find (and address) the comments, I will close this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/596
https://github.com/root-project/root/pull/596:221,performance,lock,lock,221,"@dpiparo I don't see the comments. Besides, after further development, I found the need also make the lock re-entrant from Read to Write lock making it relatively heavy so I am planning to actually separate the simple RW lock from the re-entrant one. So once I find (and address) the comments, I will close this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/596
https://github.com/root-project/root/pull/596:102,security,lock,lock,102,"@dpiparo I don't see the comments. Besides, after further development, I found the need also make the lock re-entrant from Read to Write lock making it relatively heavy so I am planning to actually separate the simple RW lock from the re-entrant one. So once I find (and address) the comments, I will close this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/596
https://github.com/root-project/root/pull/596:137,security,lock,lock,137,"@dpiparo I don't see the comments. Besides, after further development, I found the need also make the lock re-entrant from Read to Write lock making it relatively heavy so I am planning to actually separate the simple RW lock from the re-entrant one. So once I find (and address) the comments, I will close this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/596
https://github.com/root-project/root/pull/596:221,security,lock,lock,221,"@dpiparo I don't see the comments. Besides, after further development, I found the need also make the lock re-entrant from Read to Write lock making it relatively heavy so I am planning to actually separate the simple RW lock from the re-entrant one. So once I find (and address) the comments, I will close this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/596
https://github.com/root-project/root/pull/596:177,testability,plan,planning,177,"@dpiparo I don't see the comments. Besides, after further development, I found the need also make the lock re-entrant from Read to Write lock making it relatively heavy so I am planning to actually separate the simple RW lock from the re-entrant one. So once I find (and address) the comments, I will close this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/596
https://github.com/root-project/root/pull/596:211,testability,simpl,simple,211,"@dpiparo I don't see the comments. Besides, after further development, I found the need also make the lock re-entrant from Read to Write lock making it relatively heavy so I am planning to actually separate the simple RW lock from the re-entrant one. So once I find (and address) the comments, I will close this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/596
https://github.com/root-project/root/pull/596:211,usability,simpl,simple,211,"@dpiparo I don't see the comments. Besides, after further development, I found the need also make the lock re-entrant from Read to Write lock making it relatively heavy so I am planning to actually separate the simple RW lock from the re-entrant one. So once I find (and address) the comments, I will close this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/596
https://github.com/root-project/root/pull/596:301,usability,close,close,301,"@dpiparo I don't see the comments. Besides, after further development, I found the need also make the lock re-entrant from Read to Write lock making it relatively heavy so I am planning to actually separate the simple RW lock from the re-entrant one. So once I find (and address) the comments, I will close this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/596
https://github.com/root-project/root/pull/596:11,deployability,build,build,11,@phsft-bot build please.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/596
https://github.com/root-project/root/pull/598:78,deployability,fail,failing,78,"*Note:* When I turn on VecCore, the test `mathcore-testChi2ExecPolicy` is now failing and should be investigated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/598
https://github.com/root-project/root/pull/598:78,reliability,fail,failing,78,"*Note:* When I turn on VecCore, the test `mathcore-testChi2ExecPolicy` is now failing and should be investigated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/598
https://github.com/root-project/root/pull/598:36,safety,test,test,36,"*Note:* When I turn on VecCore, the test `mathcore-testChi2ExecPolicy` is now failing and should be investigated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/598
https://github.com/root-project/root/pull/598:36,testability,test,test,36,"*Note:* When I turn on VecCore, the test `mathcore-testChi2ExecPolicy` is now failing and should be investigated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/598
https://github.com/root-project/root/pull/599:33,deployability,updat,updates,33,I should mention that subsequent updates would then be done with the following command:. ```. git submodule update --remote. ```. Another advantage of `git submodule` is one can default to specific `roottest` branches or tags given a particular `root` branch or tag.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:108,deployability,updat,update,108,I should mention that subsequent updates would then be done with the following command:. ```. git submodule update --remote. ```. Another advantage of `git submodule` is one can default to specific `roottest` branches or tags given a particular `root` branch or tag.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:22,integrability,sub,subsequent,22,I should mention that subsequent updates would then be done with the following command:. ```. git submodule update --remote. ```. Another advantage of `git submodule` is one can default to specific `roottest` branches or tags given a particular `root` branch or tag.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:98,integrability,sub,submodule,98,I should mention that subsequent updates would then be done with the following command:. ```. git submodule update --remote. ```. Another advantage of `git submodule` is one can default to specific `roottest` branches or tags given a particular `root` branch or tag.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:156,integrability,sub,submodule,156,I should mention that subsequent updates would then be done with the following command:. ```. git submodule update --remote. ```. Another advantage of `git submodule` is one can default to specific `roottest` branches or tags given a particular `root` branch or tag.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:189,interoperability,specif,specific,189,I should mention that subsequent updates would then be done with the following command:. ```. git submodule update --remote. ```. Another advantage of `git submodule` is one can default to specific `roottest` branches or tags given a particular `root` branch or tag.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:33,safety,updat,updates,33,I should mention that subsequent updates would then be done with the following command:. ```. git submodule update --remote. ```. Another advantage of `git submodule` is one can default to specific `roottest` branches or tags given a particular `root` branch or tag.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:108,safety,updat,update,108,I should mention that subsequent updates would then be done with the following command:. ```. git submodule update --remote. ```. Another advantage of `git submodule` is one can default to specific `roottest` branches or tags given a particular `root` branch or tag.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:33,security,updat,updates,33,I should mention that subsequent updates would then be done with the following command:. ```. git submodule update --remote. ```. Another advantage of `git submodule` is one can default to specific `roottest` branches or tags given a particular `root` branch or tag.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:108,security,updat,update,108,I should mention that subsequent updates would then be done with the following command:. ```. git submodule update --remote. ```. Another advantage of `git submodule` is one can default to specific `roottest` branches or tags given a particular `root` branch or tag.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:79,usability,command,command,79,I should mention that subsequent updates would then be done with the following command:. ```. git submodule update --remote. ```. Another advantage of `git submodule` is one can default to specific `roottest` branches or tags given a particular `root` branch or tag.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:243,deployability,build,build,243,"Hi @bbockelm, thanks for this PR. I was wondering what is the concrete advantage of this approach with respect with the current solution? If `root` and `roottest` are in the same directory, this command launched from a third directory called `build`. ```cmake -Dtesting=ON -Droottest=ON ../root```. will give access to all tests. Tests can then be developed in the roottest directory and interaction with git can take place. If, on the other hand, no roottest is present, as you correctly point out, the repo is checked out within the root directory automatically.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:550,deployability,automat,automatically,550,"Hi @bbockelm, thanks for this PR. I was wondering what is the concrete advantage of this approach with respect with the current solution? If `root` and `roottest` are in the same directory, this command launched from a third directory called `build`. ```cmake -Dtesting=ON -Droottest=ON ../root```. will give access to all tests. Tests can then be developed in the roottest directory and interaction with git can take place. If, on the other hand, no roottest is present, as you correctly point out, the repo is checked out within the root directory automatically.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:120,energy efficiency,current,current,120,"Hi @bbockelm, thanks for this PR. I was wondering what is the concrete advantage of this approach with respect with the current solution? If `root` and `roottest` are in the same directory, this command launched from a third directory called `build`. ```cmake -Dtesting=ON -Droottest=ON ../root```. will give access to all tests. Tests can then be developed in the roottest directory and interaction with git can take place. If, on the other hand, no roottest is present, as you correctly point out, the repo is checked out within the root directory automatically.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:323,safety,test,tests,323,"Hi @bbockelm, thanks for this PR. I was wondering what is the concrete advantage of this approach with respect with the current solution? If `root` and `roottest` are in the same directory, this command launched from a third directory called `build`. ```cmake -Dtesting=ON -Droottest=ON ../root```. will give access to all tests. Tests can then be developed in the roottest directory and interaction with git can take place. If, on the other hand, no roottest is present, as you correctly point out, the repo is checked out within the root directory automatically.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:330,safety,Test,Tests,330,"Hi @bbockelm, thanks for this PR. I was wondering what is the concrete advantage of this approach with respect with the current solution? If `root` and `roottest` are in the same directory, this command launched from a third directory called `build`. ```cmake -Dtesting=ON -Droottest=ON ../root```. will give access to all tests. Tests can then be developed in the roottest directory and interaction with git can take place. If, on the other hand, no roottest is present, as you correctly point out, the repo is checked out within the root directory automatically.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:309,security,access,access,309,"Hi @bbockelm, thanks for this PR. I was wondering what is the concrete advantage of this approach with respect with the current solution? If `root` and `roottest` are in the same directory, this command launched from a third directory called `build`. ```cmake -Dtesting=ON -Droottest=ON ../root```. will give access to all tests. Tests can then be developed in the roottest directory and interaction with git can take place. If, on the other hand, no roottest is present, as you correctly point out, the repo is checked out within the root directory automatically.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:323,testability,test,tests,323,"Hi @bbockelm, thanks for this PR. I was wondering what is the concrete advantage of this approach with respect with the current solution? If `root` and `roottest` are in the same directory, this command launched from a third directory called `build`. ```cmake -Dtesting=ON -Droottest=ON ../root```. will give access to all tests. Tests can then be developed in the roottest directory and interaction with git can take place. If, on the other hand, no roottest is present, as you correctly point out, the repo is checked out within the root directory automatically.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:330,testability,Test,Tests,330,"Hi @bbockelm, thanks for this PR. I was wondering what is the concrete advantage of this approach with respect with the current solution? If `root` and `roottest` are in the same directory, this command launched from a third directory called `build`. ```cmake -Dtesting=ON -Droottest=ON ../root```. will give access to all tests. Tests can then be developed in the roottest directory and interaction with git can take place. If, on the other hand, no roottest is present, as you correctly point out, the repo is checked out within the root directory automatically.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:550,testability,automat,automatically,550,"Hi @bbockelm, thanks for this PR. I was wondering what is the concrete advantage of this approach with respect with the current solution? If `root` and `roottest` are in the same directory, this command launched from a third directory called `build`. ```cmake -Dtesting=ON -Droottest=ON ../root```. will give access to all tests. Tests can then be developed in the roottest directory and interaction with git can take place. If, on the other hand, no roottest is present, as you correctly point out, the repo is checked out within the root directory automatically.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:195,usability,command,command,195,"Hi @bbockelm, thanks for this PR. I was wondering what is the concrete advantage of this approach with respect with the current solution? If `root` and `roottest` are in the same directory, this command launched from a third directory called `build`. ```cmake -Dtesting=ON -Droottest=ON ../root```. will give access to all tests. Tests can then be developed in the roottest directory and interaction with git can take place. If, on the other hand, no roottest is present, as you correctly point out, the repo is checked out within the root directory automatically.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:388,usability,interact,interaction,388,"Hi @bbockelm, thanks for this PR. I was wondering what is the concrete advantage of this approach with respect with the current solution? If `root` and `roottest` are in the same directory, this command launched from a third directory called `build`. ```cmake -Dtesting=ON -Droottest=ON ../root```. will give access to all tests. Tests can then be developed in the roottest directory and interaction with git can take place. If, on the other hand, no roottest is present, as you correctly point out, the repo is checked out within the root directory automatically.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:271,energy efficiency,current,current,271,"Hi Danilo,. I think there are two reasons to take this approach, one technical and one social:. 1. *Social*: ROOT has effectively re-invented something similar to `git submodule` in the `cmake` code. There is plenty of documentation of how `git submodule` works, but the current ROOT approach is niche knowledge. 2. *Technical*: This allows one to explicitly specify the correct relationship between a particular `root` checkout and `roottest`. It's no longer specified in the minds of the core team or the docs. The nice thing about this is it should be a no-op for those who don't care to use `git submodule`; folks happy with the current setup should remain happy. Shouldn't disrupt existing workflows, but I hope it aligns better with standard git workflows. Brian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:490,energy efficiency,core,core,490,"Hi Danilo,. I think there are two reasons to take this approach, one technical and one social:. 1. *Social*: ROOT has effectively re-invented something similar to `git submodule` in the `cmake` code. There is plenty of documentation of how `git submodule` works, but the current ROOT approach is niche knowledge. 2. *Technical*: This allows one to explicitly specify the correct relationship between a particular `root` checkout and `roottest`. It's no longer specified in the minds of the core team or the docs. The nice thing about this is it should be a no-op for those who don't care to use `git submodule`; folks happy with the current setup should remain happy. Shouldn't disrupt existing workflows, but I hope it aligns better with standard git workflows. Brian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:633,energy efficiency,current,current,633,"Hi Danilo,. I think there are two reasons to take this approach, one technical and one social:. 1. *Social*: ROOT has effectively re-invented something similar to `git submodule` in the `cmake` code. There is plenty of documentation of how `git submodule` works, but the current ROOT approach is niche knowledge. 2. *Technical*: This allows one to explicitly specify the correct relationship between a particular `root` checkout and `roottest`. It's no longer specified in the minds of the core team or the docs. The nice thing about this is it should be a no-op for those who don't care to use `git submodule`; folks happy with the current setup should remain happy. Shouldn't disrupt existing workflows, but I hope it aligns better with standard git workflows. Brian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:168,integrability,sub,submodule,168,"Hi Danilo,. I think there are two reasons to take this approach, one technical and one social:. 1. *Social*: ROOT has effectively re-invented something similar to `git submodule` in the `cmake` code. There is plenty of documentation of how `git submodule` works, but the current ROOT approach is niche knowledge. 2. *Technical*: This allows one to explicitly specify the correct relationship between a particular `root` checkout and `roottest`. It's no longer specified in the minds of the core team or the docs. The nice thing about this is it should be a no-op for those who don't care to use `git submodule`; folks happy with the current setup should remain happy. Shouldn't disrupt existing workflows, but I hope it aligns better with standard git workflows. Brian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:245,integrability,sub,submodule,245,"Hi Danilo,. I think there are two reasons to take this approach, one technical and one social:. 1. *Social*: ROOT has effectively re-invented something similar to `git submodule` in the `cmake` code. There is plenty of documentation of how `git submodule` works, but the current ROOT approach is niche knowledge. 2. *Technical*: This allows one to explicitly specify the correct relationship between a particular `root` checkout and `roottest`. It's no longer specified in the minds of the core team or the docs. The nice thing about this is it should be a no-op for those who don't care to use `git submodule`; folks happy with the current setup should remain happy. Shouldn't disrupt existing workflows, but I hope it aligns better with standard git workflows. Brian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:600,integrability,sub,submodule,600,"Hi Danilo,. I think there are two reasons to take this approach, one technical and one social:. 1. *Social*: ROOT has effectively re-invented something similar to `git submodule` in the `cmake` code. There is plenty of documentation of how `git submodule` works, but the current ROOT approach is niche knowledge. 2. *Technical*: This allows one to explicitly specify the correct relationship between a particular `root` checkout and `roottest`. It's no longer specified in the minds of the core team or the docs. The nice thing about this is it should be a no-op for those who don't care to use `git submodule`; folks happy with the current setup should remain happy. Shouldn't disrupt existing workflows, but I hope it aligns better with standard git workflows. Brian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:359,interoperability,specif,specify,359,"Hi Danilo,. I think there are two reasons to take this approach, one technical and one social:. 1. *Social*: ROOT has effectively re-invented something similar to `git submodule` in the `cmake` code. There is plenty of documentation of how `git submodule` works, but the current ROOT approach is niche knowledge. 2. *Technical*: This allows one to explicitly specify the correct relationship between a particular `root` checkout and `roottest`. It's no longer specified in the minds of the core team or the docs. The nice thing about this is it should be a no-op for those who don't care to use `git submodule`; folks happy with the current setup should remain happy. Shouldn't disrupt existing workflows, but I hope it aligns better with standard git workflows. Brian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:460,interoperability,specif,specified,460,"Hi Danilo,. I think there are two reasons to take this approach, one technical and one social:. 1. *Social*: ROOT has effectively re-invented something similar to `git submodule` in the `cmake` code. There is plenty of documentation of how `git submodule` works, but the current ROOT approach is niche knowledge. 2. *Technical*: This allows one to explicitly specify the correct relationship between a particular `root` checkout and `roottest`. It's no longer specified in the minds of the core team or the docs. The nice thing about this is it should be a no-op for those who don't care to use `git submodule`; folks happy with the current setup should remain happy. Shouldn't disrupt existing workflows, but I hope it aligns better with standard git workflows. Brian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:739,interoperability,standard,standard,739,"Hi Danilo,. I think there are two reasons to take this approach, one technical and one social:. 1. *Social*: ROOT has effectively re-invented something similar to `git submodule` in the `cmake` code. There is plenty of documentation of how `git submodule` works, but the current ROOT approach is niche knowledge. 2. *Technical*: This allows one to explicitly specify the correct relationship between a particular `root` checkout and `roottest`. It's no longer specified in the minds of the core team or the docs. The nice thing about this is it should be a no-op for those who don't care to use `git submodule`; folks happy with the current setup should remain happy. Shouldn't disrupt existing workflows, but I hope it aligns better with standard git workflows. Brian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:87,security,soc,social,87,"Hi Danilo,. I think there are two reasons to take this approach, one technical and one social:. 1. *Social*: ROOT has effectively re-invented something similar to `git submodule` in the `cmake` code. There is plenty of documentation of how `git submodule` works, but the current ROOT approach is niche knowledge. 2. *Technical*: This allows one to explicitly specify the correct relationship between a particular `root` checkout and `roottest`. It's no longer specified in the minds of the core team or the docs. The nice thing about this is it should be a no-op for those who don't care to use `git submodule`; folks happy with the current setup should remain happy. Shouldn't disrupt existing workflows, but I hope it aligns better with standard git workflows. Brian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:100,security,Soc,Social,100,"Hi Danilo,. I think there are two reasons to take this approach, one technical and one social:. 1. *Social*: ROOT has effectively re-invented something similar to `git submodule` in the `cmake` code. There is plenty of documentation of how `git submodule` works, but the current ROOT approach is niche knowledge. 2. *Technical*: This allows one to explicitly specify the correct relationship between a particular `root` checkout and `roottest`. It's no longer specified in the minds of the core team or the docs. The nice thing about this is it should be a no-op for those who don't care to use `git submodule`; folks happy with the current setup should remain happy. Shouldn't disrupt existing workflows, but I hope it aligns better with standard git workflows. Brian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:495,security,team,team,495,"Hi Danilo,. I think there are two reasons to take this approach, one technical and one social:. 1. *Social*: ROOT has effectively re-invented something similar to `git submodule` in the `cmake` code. There is plenty of documentation of how `git submodule` works, but the current ROOT approach is niche knowledge. 2. *Technical*: This allows one to explicitly specify the correct relationship between a particular `root` checkout and `roottest`. It's no longer specified in the minds of the core team or the docs. The nice thing about this is it should be a no-op for those who don't care to use `git submodule`; folks happy with the current setup should remain happy. Shouldn't disrupt existing workflows, but I hope it aligns better with standard git workflows. Brian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:118,usability,effectiv,effectively,118,"Hi Danilo,. I think there are two reasons to take this approach, one technical and one social:. 1. *Social*: ROOT has effectively re-invented something similar to `git submodule` in the `cmake` code. There is plenty of documentation of how `git submodule` works, but the current ROOT approach is niche knowledge. 2. *Technical*: This allows one to explicitly specify the correct relationship between a particular `root` checkout and `roottest`. It's no longer specified in the minds of the core team or the docs. The nice thing about this is it should be a no-op for those who don't care to use `git submodule`; folks happy with the current setup should remain happy. Shouldn't disrupt existing workflows, but I hope it aligns better with standard git workflows. Brian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:219,usability,document,documentation,219,"Hi Danilo,. I think there are two reasons to take this approach, one technical and one social:. 1. *Social*: ROOT has effectively re-invented something similar to `git submodule` in the `cmake` code. There is plenty of documentation of how `git submodule` works, but the current ROOT approach is niche knowledge. 2. *Technical*: This allows one to explicitly specify the correct relationship between a particular `root` checkout and `roottest`. It's no longer specified in the minds of the core team or the docs. The nice thing about this is it should be a no-op for those who don't care to use `git submodule`; folks happy with the current setup should remain happy. Shouldn't disrupt existing workflows, but I hope it aligns better with standard git workflows. Brian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:695,usability,workflow,workflows,695,"Hi Danilo,. I think there are two reasons to take this approach, one technical and one social:. 1. *Social*: ROOT has effectively re-invented something similar to `git submodule` in the `cmake` code. There is plenty of documentation of how `git submodule` works, but the current ROOT approach is niche knowledge. 2. *Technical*: This allows one to explicitly specify the correct relationship between a particular `root` checkout and `roottest`. It's no longer specified in the minds of the core team or the docs. The nice thing about this is it should be a no-op for those who don't care to use `git submodule`; folks happy with the current setup should remain happy. Shouldn't disrupt existing workflows, but I hope it aligns better with standard git workflows. Brian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:752,usability,workflow,workflows,752,"Hi Danilo,. I think there are two reasons to take this approach, one technical and one social:. 1. *Social*: ROOT has effectively re-invented something similar to `git submodule` in the `cmake` code. There is plenty of documentation of how `git submodule` works, but the current ROOT approach is niche knowledge. 2. *Technical*: This allows one to explicitly specify the correct relationship between a particular `root` checkout and `roottest`. It's no longer specified in the minds of the core team or the docs. The nice thing about this is it should be a no-op for those who don't care to use `git submodule`; folks happy with the current setup should remain happy. Shouldn't disrupt existing workflows, but I hope it aligns better with standard git workflows. Brian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:209,deployability,automat,automatically,209,"> . Shouldn't disrupt existing workflows,. It seems that the PR is creating a file named roottest in the top source directory. Isn't going to break the cmake ""the repo is checked out within the root directory automatically.""?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:209,testability,automat,automatically,209,"> . Shouldn't disrupt existing workflows,. It seems that the PR is creating a file named roottest in the top source directory. Isn't going to break the cmake ""the repo is checked out within the root directory automatically.""?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:31,usability,workflow,workflows,31,"> . Shouldn't disrupt existing workflows,. It seems that the PR is creating a file named roottest in the top source directory. Isn't going to break the cmake ""the repo is checked out within the root directory automatically.""?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:808,availability,error,errors,808,"@pcanal - I don't think that's a problem as it's not a ""real"" directory. I did the following sequence:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root-build/. # This creates the `roottest` subdirectory in the source directory. cmake -Dtesting=ON -Droottest=ON ../root . cd ../root. # These three lines update the source directory to the branch with the submodule. git remote add github_bbockelm git@github.com:bbockelm/root.git. git fetch github_bbockelm. git checkout -b roottest_submodule -t github_bbockelm/roottest_submodule. # Converts the existing roottest directory to a submodule. Uses the same checkout. # These can be skipped by developers who are happy with their existing setup. git submodule init. git submodule update. git submodule update --remote. ```. No errors occurred - so I think there will be a non-disruptive upgrade path.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:172,deployability,build,build,172,"@pcanal - I don't think that's a problem as it's not a ""real"" directory. I did the following sequence:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root-build/. # This creates the `roottest` subdirectory in the source directory. cmake -Dtesting=ON -Droottest=ON ../root . cd ../root. # These three lines update the source directory to the branch with the submodule. git remote add github_bbockelm git@github.com:bbockelm/root.git. git fetch github_bbockelm. git checkout -b roottest_submodule -t github_bbockelm/roottest_submodule. # Converts the existing roottest directory to a submodule. Uses the same checkout. # These can be skipped by developers who are happy with their existing setup. git submodule init. git submodule update. git submodule update --remote. ```. No errors occurred - so I think there will be a non-disruptive upgrade path.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:187,deployability,build,build,187,"@pcanal - I don't think that's a problem as it's not a ""real"" directory. I did the following sequence:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root-build/. # This creates the `roottest` subdirectory in the source directory. cmake -Dtesting=ON -Droottest=ON ../root . cd ../root. # These three lines update the source directory to the branch with the submodule. git remote add github_bbockelm git@github.com:bbockelm/root.git. git fetch github_bbockelm. git checkout -b roottest_submodule -t github_bbockelm/roottest_submodule. # Converts the existing roottest directory to a submodule. Uses the same checkout. # These can be skipped by developers who are happy with their existing setup. git submodule init. git submodule update. git submodule update --remote. ```. No errors occurred - so I think there will be a non-disruptive upgrade path.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:338,deployability,updat,update,338,"@pcanal - I don't think that's a problem as it's not a ""real"" directory. I did the following sequence:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root-build/. # This creates the `roottest` subdirectory in the source directory. cmake -Dtesting=ON -Droottest=ON ../root . cd ../root. # These three lines update the source directory to the branch with the submodule. git remote add github_bbockelm git@github.com:bbockelm/root.git. git fetch github_bbockelm. git checkout -b roottest_submodule -t github_bbockelm/roottest_submodule. # Converts the existing roottest directory to a submodule. Uses the same checkout. # These can be skipped by developers who are happy with their existing setup. git submodule init. git submodule update. git submodule update --remote. ```. No errors occurred - so I think there will be a non-disruptive upgrade path.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:761,deployability,updat,update,761,"@pcanal - I don't think that's a problem as it's not a ""real"" directory. I did the following sequence:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root-build/. # This creates the `roottest` subdirectory in the source directory. cmake -Dtesting=ON -Droottest=ON ../root . cd ../root. # These three lines update the source directory to the branch with the submodule. git remote add github_bbockelm git@github.com:bbockelm/root.git. git fetch github_bbockelm. git checkout -b roottest_submodule -t github_bbockelm/roottest_submodule. # Converts the existing roottest directory to a submodule. Uses the same checkout. # These can be skipped by developers who are happy with their existing setup. git submodule init. git submodule update. git submodule update --remote. ```. No errors occurred - so I think there will be a non-disruptive upgrade path.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:783,deployability,updat,update,783,"@pcanal - I don't think that's a problem as it's not a ""real"" directory. I did the following sequence:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root-build/. # This creates the `roottest` subdirectory in the source directory. cmake -Dtesting=ON -Droottest=ON ../root . cd ../root. # These three lines update the source directory to the branch with the submodule. git remote add github_bbockelm git@github.com:bbockelm/root.git. git fetch github_bbockelm. git checkout -b roottest_submodule -t github_bbockelm/roottest_submodule. # Converts the existing roottest directory to a submodule. Uses the same checkout. # These can be skipped by developers who are happy with their existing setup. git submodule init. git submodule update. git submodule update --remote. ```. No errors occurred - so I think there will be a non-disruptive upgrade path.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:868,deployability,upgrad,upgrade,868,"@pcanal - I don't think that's a problem as it's not a ""real"" directory. I did the following sequence:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root-build/. # This creates the `roottest` subdirectory in the source directory. cmake -Dtesting=ON -Droottest=ON ../root . cd ../root. # These three lines update the source directory to the branch with the submodule. git remote add github_bbockelm git@github.com:bbockelm/root.git. git fetch github_bbockelm. git checkout -b roottest_submodule -t github_bbockelm/roottest_submodule. # Converts the existing roottest directory to a submodule. Uses the same checkout. # These can be skipped by developers who are happy with their existing setup. git submodule init. git submodule update. git submodule update --remote. ```. No errors occurred - so I think there will be a non-disruptive upgrade path.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:225,integrability,sub,subdirectory,225,"@pcanal - I don't think that's a problem as it's not a ""real"" directory. I did the following sequence:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root-build/. # This creates the `roottest` subdirectory in the source directory. cmake -Dtesting=ON -Droottest=ON ../root . cd ../root. # These three lines update the source directory to the branch with the submodule. git remote add github_bbockelm git@github.com:bbockelm/root.git. git fetch github_bbockelm. git checkout -b roottest_submodule -t github_bbockelm/roottest_submodule. # Converts the existing roottest directory to a submodule. Uses the same checkout. # These can be skipped by developers who are happy with their existing setup. git submodule init. git submodule update. git submodule update --remote. ```. No errors occurred - so I think there will be a non-disruptive upgrade path.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:389,integrability,sub,submodule,389,"@pcanal - I don't think that's a problem as it's not a ""real"" directory. I did the following sequence:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root-build/. # This creates the `roottest` subdirectory in the source directory. cmake -Dtesting=ON -Droottest=ON ../root . cd ../root. # These three lines update the source directory to the branch with the submodule. git remote add github_bbockelm git@github.com:bbockelm/root.git. git fetch github_bbockelm. git checkout -b roottest_submodule -t github_bbockelm/roottest_submodule. # Converts the existing roottest directory to a submodule. Uses the same checkout. # These can be skipped by developers who are happy with their existing setup. git submodule init. git submodule update. git submodule update --remote. ```. No errors occurred - so I think there will be a non-disruptive upgrade path.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:614,integrability,sub,submodule,614,"@pcanal - I don't think that's a problem as it's not a ""real"" directory. I did the following sequence:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root-build/. # This creates the `roottest` subdirectory in the source directory. cmake -Dtesting=ON -Droottest=ON ../root . cd ../root. # These three lines update the source directory to the branch with the submodule. git remote add github_bbockelm git@github.com:bbockelm/root.git. git fetch github_bbockelm. git checkout -b roottest_submodule -t github_bbockelm/roottest_submodule. # Converts the existing roottest directory to a submodule. Uses the same checkout. # These can be skipped by developers who are happy with their existing setup. git submodule init. git submodule update. git submodule update --remote. ```. No errors occurred - so I think there will be a non-disruptive upgrade path.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:731,integrability,sub,submodule,731,"@pcanal - I don't think that's a problem as it's not a ""real"" directory. I did the following sequence:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root-build/. # This creates the `roottest` subdirectory in the source directory. cmake -Dtesting=ON -Droottest=ON ../root . cd ../root. # These three lines update the source directory to the branch with the submodule. git remote add github_bbockelm git@github.com:bbockelm/root.git. git fetch github_bbockelm. git checkout -b roottest_submodule -t github_bbockelm/roottest_submodule. # Converts the existing roottest directory to a submodule. Uses the same checkout. # These can be skipped by developers who are happy with their existing setup. git submodule init. git submodule update. git submodule update --remote. ```. No errors occurred - so I think there will be a non-disruptive upgrade path.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:751,integrability,sub,submodule,751,"@pcanal - I don't think that's a problem as it's not a ""real"" directory. I did the following sequence:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root-build/. # This creates the `roottest` subdirectory in the source directory. cmake -Dtesting=ON -Droottest=ON ../root . cd ../root. # These three lines update the source directory to the branch with the submodule. git remote add github_bbockelm git@github.com:bbockelm/root.git. git fetch github_bbockelm. git checkout -b roottest_submodule -t github_bbockelm/roottest_submodule. # Converts the existing roottest directory to a submodule. Uses the same checkout. # These can be skipped by developers who are happy with their existing setup. git submodule init. git submodule update. git submodule update --remote. ```. No errors occurred - so I think there will be a non-disruptive upgrade path.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:773,integrability,sub,submodule,773,"@pcanal - I don't think that's a problem as it's not a ""real"" directory. I did the following sequence:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root-build/. # This creates the `roottest` subdirectory in the source directory. cmake -Dtesting=ON -Droottest=ON ../root . cd ../root. # These three lines update the source directory to the branch with the submodule. git remote add github_bbockelm git@github.com:bbockelm/root.git. git fetch github_bbockelm. git checkout -b roottest_submodule -t github_bbockelm/roottest_submodule. # Converts the existing roottest directory to a submodule. Uses the same checkout. # These can be skipped by developers who are happy with their existing setup. git submodule init. git submodule update. git submodule update --remote. ```. No errors occurred - so I think there will be a non-disruptive upgrade path.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:868,modifiability,upgrad,upgrade,868,"@pcanal - I don't think that's a problem as it's not a ""real"" directory. I did the following sequence:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root-build/. # This creates the `roottest` subdirectory in the source directory. cmake -Dtesting=ON -Droottest=ON ../root . cd ../root. # These three lines update the source directory to the branch with the submodule. git remote add github_bbockelm git@github.com:bbockelm/root.git. git fetch github_bbockelm. git checkout -b roottest_submodule -t github_bbockelm/roottest_submodule. # Converts the existing roottest directory to a submodule. Uses the same checkout. # These can be skipped by developers who are happy with their existing setup. git submodule init. git submodule update. git submodule update --remote. ```. No errors occurred - so I think there will be a non-disruptive upgrade path.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:808,performance,error,errors,808,"@pcanal - I don't think that's a problem as it's not a ""real"" directory. I did the following sequence:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root-build/. # This creates the `roottest` subdirectory in the source directory. cmake -Dtesting=ON -Droottest=ON ../root . cd ../root. # These three lines update the source directory to the branch with the submodule. git remote add github_bbockelm git@github.com:bbockelm/root.git. git fetch github_bbockelm. git checkout -b roottest_submodule -t github_bbockelm/roottest_submodule. # Converts the existing roottest directory to a submodule. Uses the same checkout. # These can be skipped by developers who are happy with their existing setup. git submodule init. git submodule update. git submodule update --remote. ```. No errors occurred - so I think there will be a non-disruptive upgrade path.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:338,safety,updat,update,338,"@pcanal - I don't think that's a problem as it's not a ""real"" directory. I did the following sequence:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root-build/. # This creates the `roottest` subdirectory in the source directory. cmake -Dtesting=ON -Droottest=ON ../root . cd ../root. # These three lines update the source directory to the branch with the submodule. git remote add github_bbockelm git@github.com:bbockelm/root.git. git fetch github_bbockelm. git checkout -b roottest_submodule -t github_bbockelm/roottest_submodule. # Converts the existing roottest directory to a submodule. Uses the same checkout. # These can be skipped by developers who are happy with their existing setup. git submodule init. git submodule update. git submodule update --remote. ```. No errors occurred - so I think there will be a non-disruptive upgrade path.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:761,safety,updat,update,761,"@pcanal - I don't think that's a problem as it's not a ""real"" directory. I did the following sequence:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root-build/. # This creates the `roottest` subdirectory in the source directory. cmake -Dtesting=ON -Droottest=ON ../root . cd ../root. # These three lines update the source directory to the branch with the submodule. git remote add github_bbockelm git@github.com:bbockelm/root.git. git fetch github_bbockelm. git checkout -b roottest_submodule -t github_bbockelm/roottest_submodule. # Converts the existing roottest directory to a submodule. Uses the same checkout. # These can be skipped by developers who are happy with their existing setup. git submodule init. git submodule update. git submodule update --remote. ```. No errors occurred - so I think there will be a non-disruptive upgrade path.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:783,safety,updat,update,783,"@pcanal - I don't think that's a problem as it's not a ""real"" directory. I did the following sequence:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root-build/. # This creates the `roottest` subdirectory in the source directory. cmake -Dtesting=ON -Droottest=ON ../root . cd ../root. # These three lines update the source directory to the branch with the submodule. git remote add github_bbockelm git@github.com:bbockelm/root.git. git fetch github_bbockelm. git checkout -b roottest_submodule -t github_bbockelm/roottest_submodule. # Converts the existing roottest directory to a submodule. Uses the same checkout. # These can be skipped by developers who are happy with their existing setup. git submodule init. git submodule update. git submodule update --remote. ```. No errors occurred - so I think there will be a non-disruptive upgrade path.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:808,safety,error,errors,808,"@pcanal - I don't think that's a problem as it's not a ""real"" directory. I did the following sequence:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root-build/. # This creates the `roottest` subdirectory in the source directory. cmake -Dtesting=ON -Droottest=ON ../root . cd ../root. # These three lines update the source directory to the branch with the submodule. git remote add github_bbockelm git@github.com:bbockelm/root.git. git fetch github_bbockelm. git checkout -b roottest_submodule -t github_bbockelm/roottest_submodule. # Converts the existing roottest directory to a submodule. Uses the same checkout. # These can be skipped by developers who are happy with their existing setup. git submodule init. git submodule update. git submodule update --remote. ```. No errors occurred - so I think there will be a non-disruptive upgrade path.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:338,security,updat,update,338,"@pcanal - I don't think that's a problem as it's not a ""real"" directory. I did the following sequence:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root-build/. # This creates the `roottest` subdirectory in the source directory. cmake -Dtesting=ON -Droottest=ON ../root . cd ../root. # These three lines update the source directory to the branch with the submodule. git remote add github_bbockelm git@github.com:bbockelm/root.git. git fetch github_bbockelm. git checkout -b roottest_submodule -t github_bbockelm/roottest_submodule. # Converts the existing roottest directory to a submodule. Uses the same checkout. # These can be skipped by developers who are happy with their existing setup. git submodule init. git submodule update. git submodule update --remote. ```. No errors occurred - so I think there will be a non-disruptive upgrade path.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:761,security,updat,update,761,"@pcanal - I don't think that's a problem as it's not a ""real"" directory. I did the following sequence:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root-build/. # This creates the `roottest` subdirectory in the source directory. cmake -Dtesting=ON -Droottest=ON ../root . cd ../root. # These three lines update the source directory to the branch with the submodule. git remote add github_bbockelm git@github.com:bbockelm/root.git. git fetch github_bbockelm. git checkout -b roottest_submodule -t github_bbockelm/roottest_submodule. # Converts the existing roottest directory to a submodule. Uses the same checkout. # These can be skipped by developers who are happy with their existing setup. git submodule init. git submodule update. git submodule update --remote. ```. No errors occurred - so I think there will be a non-disruptive upgrade path.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:783,security,updat,update,783,"@pcanal - I don't think that's a problem as it's not a ""real"" directory. I did the following sequence:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root-build/. # This creates the `roottest` subdirectory in the source directory. cmake -Dtesting=ON -Droottest=ON ../root . cd ../root. # These three lines update the source directory to the branch with the submodule. git remote add github_bbockelm git@github.com:bbockelm/root.git. git fetch github_bbockelm. git checkout -b roottest_submodule -t github_bbockelm/roottest_submodule. # Converts the existing roottest directory to a submodule. Uses the same checkout. # These can be skipped by developers who are happy with their existing setup. git submodule init. git submodule update. git submodule update --remote. ```. No errors occurred - so I think there will be a non-disruptive upgrade path.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:808,usability,error,errors,808,"@pcanal - I don't think that's a problem as it's not a ""real"" directory. I did the following sequence:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root-build/. # This creates the `roottest` subdirectory in the source directory. cmake -Dtesting=ON -Droottest=ON ../root . cd ../root. # These three lines update the source directory to the branch with the submodule. git remote add github_bbockelm git@github.com:bbockelm/root.git. git fetch github_bbockelm. git checkout -b roottest_submodule -t github_bbockelm/roottest_submodule. # Converts the existing roottest directory to a submodule. Uses the same checkout. # These can be skipped by developers who are happy with their existing setup. git submodule init. git submodule update. git submodule update --remote. ```. No errors occurred - so I think there will be a non-disruptive upgrade path.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:406,availability,Error,Error,406,"Hi Brian,. The sub-module solution and the existing solution can not co-exist:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root. git checkout -b bbockelm-roottest_submodule master. git pull https://github.com/bbockelm/root.git roottest_submodule. # Intentionally *NOT* doing sub-module stuff .... cd ../root-build/. cmake -Dtesting=ON -Droottest=ON ../root . ..... CMake Error at CMakeLists.txt:374 (add_subdirectory):. The source directory. /var/tmp/bb/root/roottest. does not contain a CMakeLists.txt file. ```. [And indeed, you point out that migrating from an existing non sub-module with roottest checked-out to the sub-module is seamless .... but once we move to sub-module, the existing solution no longer works for new clones]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:19,deployability,modul,module,19,"Hi Brian,. The sub-module solution and the existing solution can not co-exist:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root. git checkout -b bbockelm-roottest_submodule master. git pull https://github.com/bbockelm/root.git roottest_submodule. # Intentionally *NOT* doing sub-module stuff .... cd ../root-build/. cmake -Dtesting=ON -Droottest=ON ../root . ..... CMake Error at CMakeLists.txt:374 (add_subdirectory):. The source directory. /var/tmp/bb/root/roottest. does not contain a CMakeLists.txt file. ```. [And indeed, you point out that migrating from an existing non sub-module with roottest checked-out to the sub-module is seamless .... but once we move to sub-module, the existing solution no longer works for new clones]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:148,deployability,build,build,148,"Hi Brian,. The sub-module solution and the existing solution can not co-exist:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root. git checkout -b bbockelm-roottest_submodule master. git pull https://github.com/bbockelm/root.git roottest_submodule. # Intentionally *NOT* doing sub-module stuff .... cd ../root-build/. cmake -Dtesting=ON -Droottest=ON ../root . ..... CMake Error at CMakeLists.txt:374 (add_subdirectory):. The source directory. /var/tmp/bb/root/roottest. does not contain a CMakeLists.txt file. ```. [And indeed, you point out that migrating from an existing non sub-module with roottest checked-out to the sub-module is seamless .... but once we move to sub-module, the existing solution no longer works for new clones]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:314,deployability,modul,module,314,"Hi Brian,. The sub-module solution and the existing solution can not co-exist:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root. git checkout -b bbockelm-roottest_submodule master. git pull https://github.com/bbockelm/root.git roottest_submodule. # Intentionally *NOT* doing sub-module stuff .... cd ../root-build/. cmake -Dtesting=ON -Droottest=ON ../root . ..... CMake Error at CMakeLists.txt:374 (add_subdirectory):. The source directory. /var/tmp/bb/root/roottest. does not contain a CMakeLists.txt file. ```. [And indeed, you point out that migrating from an existing non sub-module with roottest checked-out to the sub-module is seamless .... but once we move to sub-module, the existing solution no longer works for new clones]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:343,deployability,build,build,343,"Hi Brian,. The sub-module solution and the existing solution can not co-exist:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root. git checkout -b bbockelm-roottest_submodule master. git pull https://github.com/bbockelm/root.git roottest_submodule. # Intentionally *NOT* doing sub-module stuff .... cd ../root-build/. cmake -Dtesting=ON -Droottest=ON ../root . ..... CMake Error at CMakeLists.txt:374 (add_subdirectory):. The source directory. /var/tmp/bb/root/roottest. does not contain a CMakeLists.txt file. ```. [And indeed, you point out that migrating from an existing non sub-module with roottest checked-out to the sub-module is seamless .... but once we move to sub-module, the existing solution no longer works for new clones]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:513,deployability,contain,contain,513,"Hi Brian,. The sub-module solution and the existing solution can not co-exist:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root. git checkout -b bbockelm-roottest_submodule master. git pull https://github.com/bbockelm/root.git roottest_submodule. # Intentionally *NOT* doing sub-module stuff .... cd ../root-build/. cmake -Dtesting=ON -Droottest=ON ../root . ..... CMake Error at CMakeLists.txt:374 (add_subdirectory):. The source directory. /var/tmp/bb/root/roottest. does not contain a CMakeLists.txt file. ```. [And indeed, you point out that migrating from an existing non sub-module with roottest checked-out to the sub-module is seamless .... but once we move to sub-module, the existing solution no longer works for new clones]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:616,deployability,modul,module,616,"Hi Brian,. The sub-module solution and the existing solution can not co-exist:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root. git checkout -b bbockelm-roottest_submodule master. git pull https://github.com/bbockelm/root.git roottest_submodule. # Intentionally *NOT* doing sub-module stuff .... cd ../root-build/. cmake -Dtesting=ON -Droottest=ON ../root . ..... CMake Error at CMakeLists.txt:374 (add_subdirectory):. The source directory. /var/tmp/bb/root/roottest. does not contain a CMakeLists.txt file. ```. [And indeed, you point out that migrating from an existing non sub-module with roottest checked-out to the sub-module is seamless .... but once we move to sub-module, the existing solution no longer works for new clones]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:660,deployability,modul,module,660,"Hi Brian,. The sub-module solution and the existing solution can not co-exist:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root. git checkout -b bbockelm-roottest_submodule master. git pull https://github.com/bbockelm/root.git roottest_submodule. # Intentionally *NOT* doing sub-module stuff .... cd ../root-build/. cmake -Dtesting=ON -Droottest=ON ../root . ..... CMake Error at CMakeLists.txt:374 (add_subdirectory):. The source directory. /var/tmp/bb/root/roottest. does not contain a CMakeLists.txt file. ```. [And indeed, you point out that migrating from an existing non sub-module with roottest checked-out to the sub-module is seamless .... but once we move to sub-module, the existing solution no longer works for new clones]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:708,deployability,modul,module,708,"Hi Brian,. The sub-module solution and the existing solution can not co-exist:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root. git checkout -b bbockelm-roottest_submodule master. git pull https://github.com/bbockelm/root.git roottest_submodule. # Intentionally *NOT* doing sub-module stuff .... cd ../root-build/. cmake -Dtesting=ON -Droottest=ON ../root . ..... CMake Error at CMakeLists.txt:374 (add_subdirectory):. The source directory. /var/tmp/bb/root/roottest. does not contain a CMakeLists.txt file. ```. [And indeed, you point out that migrating from an existing non sub-module with roottest checked-out to the sub-module is seamless .... but once we move to sub-module, the existing solution no longer works for new clones]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:15,integrability,sub,sub-module,15,"Hi Brian,. The sub-module solution and the existing solution can not co-exist:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root. git checkout -b bbockelm-roottest_submodule master. git pull https://github.com/bbockelm/root.git roottest_submodule. # Intentionally *NOT* doing sub-module stuff .... cd ../root-build/. cmake -Dtesting=ON -Droottest=ON ../root . ..... CMake Error at CMakeLists.txt:374 (add_subdirectory):. The source directory. /var/tmp/bb/root/roottest. does not contain a CMakeLists.txt file. ```. [And indeed, you point out that migrating from an existing non sub-module with roottest checked-out to the sub-module is seamless .... but once we move to sub-module, the existing solution no longer works for new clones]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:310,integrability,sub,sub-module,310,"Hi Brian,. The sub-module solution and the existing solution can not co-exist:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root. git checkout -b bbockelm-roottest_submodule master. git pull https://github.com/bbockelm/root.git roottest_submodule. # Intentionally *NOT* doing sub-module stuff .... cd ../root-build/. cmake -Dtesting=ON -Droottest=ON ../root . ..... CMake Error at CMakeLists.txt:374 (add_subdirectory):. The source directory. /var/tmp/bb/root/roottest. does not contain a CMakeLists.txt file. ```. [And indeed, you point out that migrating from an existing non sub-module with roottest checked-out to the sub-module is seamless .... but once we move to sub-module, the existing solution no longer works for new clones]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:612,integrability,sub,sub-module,612,"Hi Brian,. The sub-module solution and the existing solution can not co-exist:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root. git checkout -b bbockelm-roottest_submodule master. git pull https://github.com/bbockelm/root.git roottest_submodule. # Intentionally *NOT* doing sub-module stuff .... cd ../root-build/. cmake -Dtesting=ON -Droottest=ON ../root . ..... CMake Error at CMakeLists.txt:374 (add_subdirectory):. The source directory. /var/tmp/bb/root/roottest. does not contain a CMakeLists.txt file. ```. [And indeed, you point out that migrating from an existing non sub-module with roottest checked-out to the sub-module is seamless .... but once we move to sub-module, the existing solution no longer works for new clones]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:656,integrability,sub,sub-module,656,"Hi Brian,. The sub-module solution and the existing solution can not co-exist:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root. git checkout -b bbockelm-roottest_submodule master. git pull https://github.com/bbockelm/root.git roottest_submodule. # Intentionally *NOT* doing sub-module stuff .... cd ../root-build/. cmake -Dtesting=ON -Droottest=ON ../root . ..... CMake Error at CMakeLists.txt:374 (add_subdirectory):. The source directory. /var/tmp/bb/root/roottest. does not contain a CMakeLists.txt file. ```. [And indeed, you point out that migrating from an existing non sub-module with roottest checked-out to the sub-module is seamless .... but once we move to sub-module, the existing solution no longer works for new clones]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:704,integrability,sub,sub-module,704,"Hi Brian,. The sub-module solution and the existing solution can not co-exist:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root. git checkout -b bbockelm-roottest_submodule master. git pull https://github.com/bbockelm/root.git roottest_submodule. # Intentionally *NOT* doing sub-module stuff .... cd ../root-build/. cmake -Dtesting=ON -Droottest=ON ../root . ..... CMake Error at CMakeLists.txt:374 (add_subdirectory):. The source directory. /var/tmp/bb/root/roottest. does not contain a CMakeLists.txt file. ```. [And indeed, you point out that migrating from an existing non sub-module with roottest checked-out to the sub-module is seamless .... but once we move to sub-module, the existing solution no longer works for new clones]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:19,modifiability,modul,module,19,"Hi Brian,. The sub-module solution and the existing solution can not co-exist:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root. git checkout -b bbockelm-roottest_submodule master. git pull https://github.com/bbockelm/root.git roottest_submodule. # Intentionally *NOT* doing sub-module stuff .... cd ../root-build/. cmake -Dtesting=ON -Droottest=ON ../root . ..... CMake Error at CMakeLists.txt:374 (add_subdirectory):. The source directory. /var/tmp/bb/root/roottest. does not contain a CMakeLists.txt file. ```. [And indeed, you point out that migrating from an existing non sub-module with roottest checked-out to the sub-module is seamless .... but once we move to sub-module, the existing solution no longer works for new clones]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:314,modifiability,modul,module,314,"Hi Brian,. The sub-module solution and the existing solution can not co-exist:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root. git checkout -b bbockelm-roottest_submodule master. git pull https://github.com/bbockelm/root.git roottest_submodule. # Intentionally *NOT* doing sub-module stuff .... cd ../root-build/. cmake -Dtesting=ON -Droottest=ON ../root . ..... CMake Error at CMakeLists.txt:374 (add_subdirectory):. The source directory. /var/tmp/bb/root/roottest. does not contain a CMakeLists.txt file. ```. [And indeed, you point out that migrating from an existing non sub-module with roottest checked-out to the sub-module is seamless .... but once we move to sub-module, the existing solution no longer works for new clones]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:616,modifiability,modul,module,616,"Hi Brian,. The sub-module solution and the existing solution can not co-exist:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root. git checkout -b bbockelm-roottest_submodule master. git pull https://github.com/bbockelm/root.git roottest_submodule. # Intentionally *NOT* doing sub-module stuff .... cd ../root-build/. cmake -Dtesting=ON -Droottest=ON ../root . ..... CMake Error at CMakeLists.txt:374 (add_subdirectory):. The source directory. /var/tmp/bb/root/roottest. does not contain a CMakeLists.txt file. ```. [And indeed, you point out that migrating from an existing non sub-module with roottest checked-out to the sub-module is seamless .... but once we move to sub-module, the existing solution no longer works for new clones]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:660,modifiability,modul,module,660,"Hi Brian,. The sub-module solution and the existing solution can not co-exist:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root. git checkout -b bbockelm-roottest_submodule master. git pull https://github.com/bbockelm/root.git roottest_submodule. # Intentionally *NOT* doing sub-module stuff .... cd ../root-build/. cmake -Dtesting=ON -Droottest=ON ../root . ..... CMake Error at CMakeLists.txt:374 (add_subdirectory):. The source directory. /var/tmp/bb/root/roottest. does not contain a CMakeLists.txt file. ```. [And indeed, you point out that migrating from an existing non sub-module with roottest checked-out to the sub-module is seamless .... but once we move to sub-module, the existing solution no longer works for new clones]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:708,modifiability,modul,module,708,"Hi Brian,. The sub-module solution and the existing solution can not co-exist:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root. git checkout -b bbockelm-roottest_submodule master. git pull https://github.com/bbockelm/root.git roottest_submodule. # Intentionally *NOT* doing sub-module stuff .... cd ../root-build/. cmake -Dtesting=ON -Droottest=ON ../root . ..... CMake Error at CMakeLists.txt:374 (add_subdirectory):. The source directory. /var/tmp/bb/root/roottest. does not contain a CMakeLists.txt file. ```. [And indeed, you point out that migrating from an existing non sub-module with roottest checked-out to the sub-module is seamless .... but once we move to sub-module, the existing solution no longer works for new clones]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:406,performance,Error,Error,406,"Hi Brian,. The sub-module solution and the existing solution can not co-exist:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root. git checkout -b bbockelm-roottest_submodule master. git pull https://github.com/bbockelm/root.git roottest_submodule. # Intentionally *NOT* doing sub-module stuff .... cd ../root-build/. cmake -Dtesting=ON -Droottest=ON ../root . ..... CMake Error at CMakeLists.txt:374 (add_subdirectory):. The source directory. /var/tmp/bb/root/roottest. does not contain a CMakeLists.txt file. ```. [And indeed, you point out that migrating from an existing non sub-module with roottest checked-out to the sub-module is seamless .... but once we move to sub-module, the existing solution no longer works for new clones]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:504,reliability,doe,does,504,"Hi Brian,. The sub-module solution and the existing solution can not co-exist:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root. git checkout -b bbockelm-roottest_submodule master. git pull https://github.com/bbockelm/root.git roottest_submodule. # Intentionally *NOT* doing sub-module stuff .... cd ../root-build/. cmake -Dtesting=ON -Droottest=ON ../root . ..... CMake Error at CMakeLists.txt:374 (add_subdirectory):. The source directory. /var/tmp/bb/root/roottest. does not contain a CMakeLists.txt file. ```. [And indeed, you point out that migrating from an existing non sub-module with roottest checked-out to the sub-module is seamless .... but once we move to sub-module, the existing solution no longer works for new clones]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:19,safety,modul,module,19,"Hi Brian,. The sub-module solution and the existing solution can not co-exist:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root. git checkout -b bbockelm-roottest_submodule master. git pull https://github.com/bbockelm/root.git roottest_submodule. # Intentionally *NOT* doing sub-module stuff .... cd ../root-build/. cmake -Dtesting=ON -Droottest=ON ../root . ..... CMake Error at CMakeLists.txt:374 (add_subdirectory):. The source directory. /var/tmp/bb/root/roottest. does not contain a CMakeLists.txt file. ```. [And indeed, you point out that migrating from an existing non sub-module with roottest checked-out to the sub-module is seamless .... but once we move to sub-module, the existing solution no longer works for new clones]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:314,safety,modul,module,314,"Hi Brian,. The sub-module solution and the existing solution can not co-exist:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root. git checkout -b bbockelm-roottest_submodule master. git pull https://github.com/bbockelm/root.git roottest_submodule. # Intentionally *NOT* doing sub-module stuff .... cd ../root-build/. cmake -Dtesting=ON -Droottest=ON ../root . ..... CMake Error at CMakeLists.txt:374 (add_subdirectory):. The source directory. /var/tmp/bb/root/roottest. does not contain a CMakeLists.txt file. ```. [And indeed, you point out that migrating from an existing non sub-module with roottest checked-out to the sub-module is seamless .... but once we move to sub-module, the existing solution no longer works for new clones]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:406,safety,Error,Error,406,"Hi Brian,. The sub-module solution and the existing solution can not co-exist:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root. git checkout -b bbockelm-roottest_submodule master. git pull https://github.com/bbockelm/root.git roottest_submodule. # Intentionally *NOT* doing sub-module stuff .... cd ../root-build/. cmake -Dtesting=ON -Droottest=ON ../root . ..... CMake Error at CMakeLists.txt:374 (add_subdirectory):. The source directory. /var/tmp/bb/root/roottest. does not contain a CMakeLists.txt file. ```. [And indeed, you point out that migrating from an existing non sub-module with roottest checked-out to the sub-module is seamless .... but once we move to sub-module, the existing solution no longer works for new clones]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:616,safety,modul,module,616,"Hi Brian,. The sub-module solution and the existing solution can not co-exist:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root. git checkout -b bbockelm-roottest_submodule master. git pull https://github.com/bbockelm/root.git roottest_submodule. # Intentionally *NOT* doing sub-module stuff .... cd ../root-build/. cmake -Dtesting=ON -Droottest=ON ../root . ..... CMake Error at CMakeLists.txt:374 (add_subdirectory):. The source directory. /var/tmp/bb/root/roottest. does not contain a CMakeLists.txt file. ```. [And indeed, you point out that migrating from an existing non sub-module with roottest checked-out to the sub-module is seamless .... but once we move to sub-module, the existing solution no longer works for new clones]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:660,safety,modul,module,660,"Hi Brian,. The sub-module solution and the existing solution can not co-exist:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root. git checkout -b bbockelm-roottest_submodule master. git pull https://github.com/bbockelm/root.git roottest_submodule. # Intentionally *NOT* doing sub-module stuff .... cd ../root-build/. cmake -Dtesting=ON -Droottest=ON ../root . ..... CMake Error at CMakeLists.txt:374 (add_subdirectory):. The source directory. /var/tmp/bb/root/roottest. does not contain a CMakeLists.txt file. ```. [And indeed, you point out that migrating from an existing non sub-module with roottest checked-out to the sub-module is seamless .... but once we move to sub-module, the existing solution no longer works for new clones]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:708,safety,modul,module,708,"Hi Brian,. The sub-module solution and the existing solution can not co-exist:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root. git checkout -b bbockelm-roottest_submodule master. git pull https://github.com/bbockelm/root.git roottest_submodule. # Intentionally *NOT* doing sub-module stuff .... cd ../root-build/. cmake -Dtesting=ON -Droottest=ON ../root . ..... CMake Error at CMakeLists.txt:374 (add_subdirectory):. The source directory. /var/tmp/bb/root/roottest. does not contain a CMakeLists.txt file. ```. [And indeed, you point out that migrating from an existing non sub-module with roottest checked-out to the sub-module is seamless .... but once we move to sub-module, the existing solution no longer works for new clones]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:406,usability,Error,Error,406,"Hi Brian,. The sub-module solution and the existing solution can not co-exist:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root. git checkout -b bbockelm-roottest_submodule master. git pull https://github.com/bbockelm/root.git roottest_submodule. # Intentionally *NOT* doing sub-module stuff .... cd ../root-build/. cmake -Dtesting=ON -Droottest=ON ../root . ..... CMake Error at CMakeLists.txt:374 (add_subdirectory):. The source directory. /var/tmp/bb/root/roottest. does not contain a CMakeLists.txt file. ```. [And indeed, you point out that migrating from an existing non sub-module with roottest checked-out to the sub-module is seamless .... but once we move to sub-module, the existing solution no longer works for new clones]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:58,deployability,updat,update,58,Gotcha. That looks like something I can fix/address in an update of the PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:58,safety,updat,update,58,Gotcha. That looks like something I can fix/address in an update of the PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:58,security,updat,update,58,Gotcha. That looks like something I can fix/address in an update of the PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:94,energy efficiency,current,current,94,"Would that fix the case where I am on a custom ROOT branch and I do ctest? The issue with the current setup is:. ```. cd root/src && git checkout -b MyBranch. cd ../obj && cmake -Droottest=On ../src. make ; ctest. ```. Currently the cmake implementation would try to switch roottest to MyBranch, which doesn't exist and as a consequence I won't be able to run roottest on my changes in my local branch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:219,energy efficiency,Current,Currently,219,"Would that fix the case where I am on a custom ROOT branch and I do ctest? The issue with the current setup is:. ```. cd root/src && git checkout -b MyBranch. cd ../obj && cmake -Droottest=On ../src. make ; ctest. ```. Currently the cmake implementation would try to switch roottest to MyBranch, which doesn't exist and as a consequence I won't be able to run roottest on my changes in my local branch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:302,reliability,doe,doesn,302,"Would that fix the case where I am on a custom ROOT branch and I do ctest? The issue with the current setup is:. ```. cd root/src && git checkout -b MyBranch. cd ../obj && cmake -Droottest=On ../src. make ; ctest. ```. Currently the cmake implementation would try to switch roottest to MyBranch, which doesn't exist and as a consequence I won't be able to run roottest on my changes in my local branch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:40,usability,custom,custom,40,"Would that fix the case where I am on a custom ROOT branch and I do ctest? The issue with the current setup is:. ```. cd root/src && git checkout -b MyBranch. cd ../obj && cmake -Droottest=On ../src. make ; ctest. ```. Currently the cmake implementation would try to switch roottest to MyBranch, which doesn't exist and as a consequence I won't be able to run roottest on my changes in my local branch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:120,safety,test,testing,120,"@vgvassilev - yes, I think this would solve your issue as the `.gitmodules` in the branch would refer to the particular testing branch you referenced. Can I bump this ticket? I just wasted 5 minutes figuring out that I had `roottest` and `root` on mis-matching branches :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:120,testability,test,testing,120,"@vgvassilev - yes, I think this would solve your issue as the `.gitmodules` in the branch would refer to the particular testing branch you referenced. Can I bump this ticket? I just wasted 5 minutes figuring out that I had `roottest` and `root` on mis-matching branches :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:10,availability,ping,ping,10,"@peremato ping, that looks good to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:445,deployability,build,build,445,"Hi all,. I still do not see all the advantages of this solution. The recipe to run the test is on the ROOT website https://root.cern.ch/run-tests and is not exactly niche. With these commands, from scratch, you can start testing ROOT and you have at disposal roottest for developing tests:. ```. mkdir RootDevelopment. cd RootDevelopment. git clone https://github.com/root-project/root. git clone https://github.com/root-project/roottest. mkdir build. cd build. cmake -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON ../root. ```. I wonder if this is still simpler even though the potential of git is not fully exploited.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:455,deployability,build,build,455,"Hi all,. I still do not see all the advantages of this solution. The recipe to run the test is on the ROOT website https://root.cern.ch/run-tests and is not exactly niche. With these commands, from scratch, you can start testing ROOT and you have at disposal roottest for developing tests:. ```. mkdir RootDevelopment. cd RootDevelopment. git clone https://github.com/root-project/root. git clone https://github.com/root-project/roottest. mkdir build. cd build. cmake -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON ../root. ```. I wonder if this is still simpler even though the potential of git is not fully exploited.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:87,safety,test,test,87,"Hi all,. I still do not see all the advantages of this solution. The recipe to run the test is on the ROOT website https://root.cern.ch/run-tests and is not exactly niche. With these commands, from scratch, you can start testing ROOT and you have at disposal roottest for developing tests:. ```. mkdir RootDevelopment. cd RootDevelopment. git clone https://github.com/root-project/root. git clone https://github.com/root-project/roottest. mkdir build. cd build. cmake -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON ../root. ```. I wonder if this is still simpler even though the potential of git is not fully exploited.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:140,safety,test,tests,140,"Hi all,. I still do not see all the advantages of this solution. The recipe to run the test is on the ROOT website https://root.cern.ch/run-tests and is not exactly niche. With these commands, from scratch, you can start testing ROOT and you have at disposal roottest for developing tests:. ```. mkdir RootDevelopment. cd RootDevelopment. git clone https://github.com/root-project/root. git clone https://github.com/root-project/roottest. mkdir build. cd build. cmake -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON ../root. ```. I wonder if this is still simpler even though the potential of git is not fully exploited.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:221,safety,test,testing,221,"Hi all,. I still do not see all the advantages of this solution. The recipe to run the test is on the ROOT website https://root.cern.ch/run-tests and is not exactly niche. With these commands, from scratch, you can start testing ROOT and you have at disposal roottest for developing tests:. ```. mkdir RootDevelopment. cd RootDevelopment. git clone https://github.com/root-project/root. git clone https://github.com/root-project/roottest. mkdir build. cd build. cmake -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON ../root. ```. I wonder if this is still simpler even though the potential of git is not fully exploited.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:283,safety,test,tests,283,"Hi all,. I still do not see all the advantages of this solution. The recipe to run the test is on the ROOT website https://root.cern.ch/run-tests and is not exactly niche. With these commands, from scratch, you can start testing ROOT and you have at disposal roottest for developing tests:. ```. mkdir RootDevelopment. cd RootDevelopment. git clone https://github.com/root-project/root. git clone https://github.com/root-project/roottest. mkdir build. cd build. cmake -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON ../root. ```. I wonder if this is still simpler even though the potential of git is not fully exploited.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:87,testability,test,test,87,"Hi all,. I still do not see all the advantages of this solution. The recipe to run the test is on the ROOT website https://root.cern.ch/run-tests and is not exactly niche. With these commands, from scratch, you can start testing ROOT and you have at disposal roottest for developing tests:. ```. mkdir RootDevelopment. cd RootDevelopment. git clone https://github.com/root-project/root. git clone https://github.com/root-project/roottest. mkdir build. cd build. cmake -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON ../root. ```. I wonder if this is still simpler even though the potential of git is not fully exploited.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:140,testability,test,tests,140,"Hi all,. I still do not see all the advantages of this solution. The recipe to run the test is on the ROOT website https://root.cern.ch/run-tests and is not exactly niche. With these commands, from scratch, you can start testing ROOT and you have at disposal roottest for developing tests:. ```. mkdir RootDevelopment. cd RootDevelopment. git clone https://github.com/root-project/root. git clone https://github.com/root-project/roottest. mkdir build. cd build. cmake -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON ../root. ```. I wonder if this is still simpler even though the potential of git is not fully exploited.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:221,testability,test,testing,221,"Hi all,. I still do not see all the advantages of this solution. The recipe to run the test is on the ROOT website https://root.cern.ch/run-tests and is not exactly niche. With these commands, from scratch, you can start testing ROOT and you have at disposal roottest for developing tests:. ```. mkdir RootDevelopment. cd RootDevelopment. git clone https://github.com/root-project/root. git clone https://github.com/root-project/roottest. mkdir build. cd build. cmake -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON ../root. ```. I wonder if this is still simpler even though the potential of git is not fully exploited.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:283,testability,test,tests,283,"Hi all,. I still do not see all the advantages of this solution. The recipe to run the test is on the ROOT website https://root.cern.ch/run-tests and is not exactly niche. With these commands, from scratch, you can start testing ROOT and you have at disposal roottest for developing tests:. ```. mkdir RootDevelopment. cd RootDevelopment. git clone https://github.com/root-project/root. git clone https://github.com/root-project/roottest. mkdir build. cd build. cmake -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON ../root. ```. I wonder if this is still simpler even though the potential of git is not fully exploited.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:560,testability,simpl,simpler,560,"Hi all,. I still do not see all the advantages of this solution. The recipe to run the test is on the ROOT website https://root.cern.ch/run-tests and is not exactly niche. With these commands, from scratch, you can start testing ROOT and you have at disposal roottest for developing tests:. ```. mkdir RootDevelopment. cd RootDevelopment. git clone https://github.com/root-project/root. git clone https://github.com/root-project/roottest. mkdir build. cd build. cmake -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON ../root. ```. I wonder if this is still simpler even though the potential of git is not fully exploited.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:183,usability,command,commands,183,"Hi all,. I still do not see all the advantages of this solution. The recipe to run the test is on the ROOT website https://root.cern.ch/run-tests and is not exactly niche. With these commands, from scratch, you can start testing ROOT and you have at disposal roottest for developing tests:. ```. mkdir RootDevelopment. cd RootDevelopment. git clone https://github.com/root-project/root. git clone https://github.com/root-project/roottest. mkdir build. cd build. cmake -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON ../root. ```. I wonder if this is still simpler even though the potential of git is not fully exploited.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:560,usability,simpl,simpler,560,"Hi all,. I still do not see all the advantages of this solution. The recipe to run the test is on the ROOT website https://root.cern.ch/run-tests and is not exactly niche. With these commands, from scratch, you can start testing ROOT and you have at disposal roottest for developing tests:. ```. mkdir RootDevelopment. cd RootDevelopment. git clone https://github.com/root-project/root. git clone https://github.com/root-project/roottest. mkdir build. cd build. cmake -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON ../root. ```. I wonder if this is still simpler even though the potential of git is not fully exploited.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:65,deployability,fail,fails,65,"@dpiparo, please see my comment above with an example where this fails.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:65,reliability,fail,fails,65,"@dpiparo, please see my comment above with an example where this fails.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:30,testability,simpl,simple,30,"Hi @vgvassilev,. the fix is a simple *git checkout*, isn't it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:30,usability,simpl,simple,30,"Hi @vgvassilev,. the fix is a simple *git checkout*, isn't it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:58,safety,test,test,58,"@dpiparo, not if I have changes in MyBranch and I want to test them, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:58,testability,test,test,58,"@dpiparo, not if I have changes in MyBranch and I want to test them, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:81,safety,avoid,avoid,81,@bbockelm shall we close this and wait for the other PR that teaches roottest to avoid switching to the same root branch if that branch is local?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/599:19,usability,close,close,19,@bbockelm shall we close this and wait for the other PR that teaches roottest to avoid switching to the same root branch if that branch is local?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/599
https://github.com/root-project/root/pull/600:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/600
https://github.com/root-project/root/pull/600:88,availability,failur,failure,88,"Hi @ashlaban,. since this change is related to DNN, I allow myself to point you to this failure: http://cdash.cern.ch/testDetails.php?test=25539356&build=359962. It's a segfault linked to DNNs. Perhaps it's worth having a look before putting on top something else?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/600
https://github.com/root-project/root/pull/600:88,deployability,fail,failure,88,"Hi @ashlaban,. since this change is related to DNN, I allow myself to point you to this failure: http://cdash.cern.ch/testDetails.php?test=25539356&build=359962. It's a segfault linked to DNNs. Perhaps it's worth having a look before putting on top something else?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/600
https://github.com/root-project/root/pull/600:148,deployability,build,build,148,"Hi @ashlaban,. since this change is related to DNN, I allow myself to point you to this failure: http://cdash.cern.ch/testDetails.php?test=25539356&build=359962. It's a segfault linked to DNNs. Perhaps it's worth having a look before putting on top something else?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/600
https://github.com/root-project/root/pull/600:88,performance,failur,failure,88,"Hi @ashlaban,. since this change is related to DNN, I allow myself to point you to this failure: http://cdash.cern.ch/testDetails.php?test=25539356&build=359962. It's a segfault linked to DNNs. Perhaps it's worth having a look before putting on top something else?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/600
https://github.com/root-project/root/pull/600:88,reliability,fail,failure,88,"Hi @ashlaban,. since this change is related to DNN, I allow myself to point you to this failure: http://cdash.cern.ch/testDetails.php?test=25539356&build=359962. It's a segfault linked to DNNs. Perhaps it's worth having a look before putting on top something else?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/600
https://github.com/root-project/root/pull/600:118,safety,test,testDetails,118,"Hi @ashlaban,. since this change is related to DNN, I allow myself to point you to this failure: http://cdash.cern.ch/testDetails.php?test=25539356&build=359962. It's a segfault linked to DNNs. Perhaps it's worth having a look before putting on top something else?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/600
https://github.com/root-project/root/pull/600:134,safety,test,test,134,"Hi @ashlaban,. since this change is related to DNN, I allow myself to point you to this failure: http://cdash.cern.ch/testDetails.php?test=25539356&build=359962. It's a segfault linked to DNNs. Perhaps it's worth having a look before putting on top something else?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/600
https://github.com/root-project/root/pull/600:118,testability,test,testDetails,118,"Hi @ashlaban,. since this change is related to DNN, I allow myself to point you to this failure: http://cdash.cern.ch/testDetails.php?test=25539356&build=359962. It's a segfault linked to DNNs. Perhaps it's worth having a look before putting on top something else?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/600
https://github.com/root-project/root/pull/600:134,testability,test,test,134,"Hi @ashlaban,. since this change is related to DNN, I allow myself to point you to this failure: http://cdash.cern.ch/testDetails.php?test=25539356&build=359962. It's a segfault linked to DNNs. Perhaps it's worth having a look before putting on top something else?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/600
https://github.com/root-project/root/pull/600:43,availability,failur,failure,43,"Hi @dpiparo, Thanks for pointing me to the failure. This PR removes the DNN implementation that causes this issue from the publicly visible examples. This since we are aware of problems in this implementation. There should be a TMVA Dev meeting tomorrow where I will bring this conversation up . You can consider me as looking into the issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/600
https://github.com/root-project/root/pull/600:43,deployability,fail,failure,43,"Hi @dpiparo, Thanks for pointing me to the failure. This PR removes the DNN implementation that causes this issue from the publicly visible examples. This since we are aware of problems in this implementation. There should be a TMVA Dev meeting tomorrow where I will bring this conversation up . You can consider me as looking into the issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/600
https://github.com/root-project/root/pull/600:123,integrability,pub,publicly,123,"Hi @dpiparo, Thanks for pointing me to the failure. This PR removes the DNN implementation that causes this issue from the publicly visible examples. This since we are aware of problems in this implementation. There should be a TMVA Dev meeting tomorrow where I will bring this conversation up . You can consider me as looking into the issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/600
https://github.com/root-project/root/pull/600:278,interoperability,convers,conversation,278,"Hi @dpiparo, Thanks for pointing me to the failure. This PR removes the DNN implementation that causes this issue from the publicly visible examples. This since we are aware of problems in this implementation. There should be a TMVA Dev meeting tomorrow where I will bring this conversation up . You can consider me as looking into the issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/600
https://github.com/root-project/root/pull/600:43,performance,failur,failure,43,"Hi @dpiparo, Thanks for pointing me to the failure. This PR removes the DNN implementation that causes this issue from the publicly visible examples. This since we are aware of problems in this implementation. There should be a TMVA Dev meeting tomorrow where I will bring this conversation up . You can consider me as looking into the issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/600
https://github.com/root-project/root/pull/600:43,reliability,fail,failure,43,"Hi @dpiparo, Thanks for pointing me to the failure. This PR removes the DNN implementation that causes this issue from the publicly visible examples. This since we are aware of problems in this implementation. There should be a TMVA Dev meeting tomorrow where I will bring this conversation up . You can consider me as looking into the issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/600
https://github.com/root-project/root/pull/604:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/604
https://github.com/root-project/root/pull/606:0,availability,Ping,Ping,0,Ping.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/606
https://github.com/root-project/root/pull/606:48,interoperability,format,format,48,"@amadio, I wanted redo it without running clang-format on the changed lines.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/606
https://github.com/root-project/root/pull/606:80,deployability,updat,update,80,"Ok, just wanted to know if this should stay here or be closed... Thanks for the update.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/606
https://github.com/root-project/root/pull/606:80,safety,updat,update,80,"Ok, just wanted to know if this should stay here or be closed... Thanks for the update.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/606
https://github.com/root-project/root/pull/606:80,security,updat,update,80,"Ok, just wanted to know if this should stay here or be closed... Thanks for the update.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/606
https://github.com/root-project/root/pull/606:55,usability,close,closed,55,"Ok, just wanted to know if this should stay here or be closed... Thanks for the update.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/606
https://github.com/root-project/root/pull/606:20,interoperability,conflict,conflicts,20,"Given the amount of conflicts, it may actually make sense to just close this pull request and start a new one later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/606
https://github.com/root-project/root/pull/606:66,usability,close,close,66,"Given the amount of conflicts, it may actually make sense to just close this pull request and start a new one later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/606
https://github.com/root-project/root/pull/606:82,deployability,modul,module,82,"@vgvassilev - is it possible to break up this PR to a series of requests, one per module (or sub-module?)? Would help prevent the merge conflicts from accumulating...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/606
https://github.com/root-project/root/pull/606:97,deployability,modul,module,97,"@vgvassilev - is it possible to break up this PR to a series of requests, one per module (or sub-module?)? Would help prevent the merge conflicts from accumulating...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/606
https://github.com/root-project/root/pull/606:93,integrability,sub,sub-module,93,"@vgvassilev - is it possible to break up this PR to a series of requests, one per module (or sub-module?)? Would help prevent the merge conflicts from accumulating...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/606
https://github.com/root-project/root/pull/606:136,interoperability,conflict,conflicts,136,"@vgvassilev - is it possible to break up this PR to a series of requests, one per module (or sub-module?)? Would help prevent the merge conflicts from accumulating...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/606
https://github.com/root-project/root/pull/606:82,modifiability,modul,module,82,"@vgvassilev - is it possible to break up this PR to a series of requests, one per module (or sub-module?)? Would help prevent the merge conflicts from accumulating...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/606
https://github.com/root-project/root/pull/606:97,modifiability,modul,module,97,"@vgvassilev - is it possible to break up this PR to a series of requests, one per module (or sub-module?)? Would help prevent the merge conflicts from accumulating...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/606
https://github.com/root-project/root/pull/606:82,safety,modul,module,82,"@vgvassilev - is it possible to break up this PR to a series of requests, one per module (or sub-module?)? Would help prevent the merge conflicts from accumulating...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/606
https://github.com/root-project/root/pull/606:97,safety,modul,module,97,"@vgvassilev - is it possible to break up this PR to a series of requests, one per module (or sub-module?)? Would help prevent the merge conflicts from accumulating...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/606
https://github.com/root-project/root/pull/606:118,safety,prevent,prevent,118,"@vgvassilev - is it possible to break up this PR to a series of requests, one per module (or sub-module?)? Would help prevent the merge conflicts from accumulating...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/606
https://github.com/root-project/root/pull/606:118,security,preven,prevent,118,"@vgvassilev - is it possible to break up this PR to a series of requests, one per module (or sub-module?)? Would help prevent the merge conflicts from accumulating...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/606
https://github.com/root-project/root/pull/606:113,usability,help,help,113,"@vgvassilev - is it possible to break up this PR to a series of requests, one per module (or sub-module?)? Would help prevent the merge conflicts from accumulating...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/606
https://github.com/root-project/root/pull/608:4,safety,test,tests,4,"All tests passed, including my local ones, so I just merged this in.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/608
https://github.com/root-project/root/pull/608:4,testability,test,tests,4,"All tests passed, including my local ones, so I just merged this in.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/608
https://github.com/root-project/root/pull/611:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/611
https://github.com/root-project/root/pull/613:535,deployability,log,log,535,"Right, it says:. ```. /.../root/math/mathmore/src/GSLMultiRootFinder.cxx:161:42: note: declared here. return (fSolver != 0) ? fSolver->Name().c_str() : """";. ```. (And why can I not link to a warning in CDash?). It was actually fixed today by. ```. commit c9f996a7bd13f955eab41760c9839ffe697e750e. Author: moneta <lorenzo.moneta@cern.ch>. AuthorDate: Tue Jun 6 12:05:47 2017 +0200. Commit: moneta <lorenzo.moneta@cern.ch>. CommitDate: Wed Jun 7 15:17:33 2017 +0200. Add test for multi root solver and test Name() method. ```. (Yes, the log didn't really help in finding that commit...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/613
https://github.com/root-project/root/pull/613:469,safety,test,test,469,"Right, it says:. ```. /.../root/math/mathmore/src/GSLMultiRootFinder.cxx:161:42: note: declared here. return (fSolver != 0) ? fSolver->Name().c_str() : """";. ```. (And why can I not link to a warning in CDash?). It was actually fixed today by. ```. commit c9f996a7bd13f955eab41760c9839ffe697e750e. Author: moneta <lorenzo.moneta@cern.ch>. AuthorDate: Tue Jun 6 12:05:47 2017 +0200. Commit: moneta <lorenzo.moneta@cern.ch>. CommitDate: Wed Jun 7 15:17:33 2017 +0200. Add test for multi root solver and test Name() method. ```. (Yes, the log didn't really help in finding that commit...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/613
https://github.com/root-project/root/pull/613:500,safety,test,test,500,"Right, it says:. ```. /.../root/math/mathmore/src/GSLMultiRootFinder.cxx:161:42: note: declared here. return (fSolver != 0) ? fSolver->Name().c_str() : """";. ```. (And why can I not link to a warning in CDash?). It was actually fixed today by. ```. commit c9f996a7bd13f955eab41760c9839ffe697e750e. Author: moneta <lorenzo.moneta@cern.ch>. AuthorDate: Tue Jun 6 12:05:47 2017 +0200. Commit: moneta <lorenzo.moneta@cern.ch>. CommitDate: Wed Jun 7 15:17:33 2017 +0200. Add test for multi root solver and test Name() method. ```. (Yes, the log didn't really help in finding that commit...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/613
https://github.com/root-project/root/pull/613:535,safety,log,log,535,"Right, it says:. ```. /.../root/math/mathmore/src/GSLMultiRootFinder.cxx:161:42: note: declared here. return (fSolver != 0) ? fSolver->Name().c_str() : """";. ```. (And why can I not link to a warning in CDash?). It was actually fixed today by. ```. commit c9f996a7bd13f955eab41760c9839ffe697e750e. Author: moneta <lorenzo.moneta@cern.ch>. AuthorDate: Tue Jun 6 12:05:47 2017 +0200. Commit: moneta <lorenzo.moneta@cern.ch>. CommitDate: Wed Jun 7 15:17:33 2017 +0200. Add test for multi root solver and test Name() method. ```. (Yes, the log didn't really help in finding that commit...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/613
https://github.com/root-project/root/pull/613:297,security,Auth,Author,297,"Right, it says:. ```. /.../root/math/mathmore/src/GSLMultiRootFinder.cxx:161:42: note: declared here. return (fSolver != 0) ? fSolver->Name().c_str() : """";. ```. (And why can I not link to a warning in CDash?). It was actually fixed today by. ```. commit c9f996a7bd13f955eab41760c9839ffe697e750e. Author: moneta <lorenzo.moneta@cern.ch>. AuthorDate: Tue Jun 6 12:05:47 2017 +0200. Commit: moneta <lorenzo.moneta@cern.ch>. CommitDate: Wed Jun 7 15:17:33 2017 +0200. Add test for multi root solver and test Name() method. ```. (Yes, the log didn't really help in finding that commit...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/613
https://github.com/root-project/root/pull/613:338,security,Auth,AuthorDate,338,"Right, it says:. ```. /.../root/math/mathmore/src/GSLMultiRootFinder.cxx:161:42: note: declared here. return (fSolver != 0) ? fSolver->Name().c_str() : """";. ```. (And why can I not link to a warning in CDash?). It was actually fixed today by. ```. commit c9f996a7bd13f955eab41760c9839ffe697e750e. Author: moneta <lorenzo.moneta@cern.ch>. AuthorDate: Tue Jun 6 12:05:47 2017 +0200. Commit: moneta <lorenzo.moneta@cern.ch>. CommitDate: Wed Jun 7 15:17:33 2017 +0200. Add test for multi root solver and test Name() method. ```. (Yes, the log didn't really help in finding that commit...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/613
https://github.com/root-project/root/pull/613:535,security,log,log,535,"Right, it says:. ```. /.../root/math/mathmore/src/GSLMultiRootFinder.cxx:161:42: note: declared here. return (fSolver != 0) ? fSolver->Name().c_str() : """";. ```. (And why can I not link to a warning in CDash?). It was actually fixed today by. ```. commit c9f996a7bd13f955eab41760c9839ffe697e750e. Author: moneta <lorenzo.moneta@cern.ch>. AuthorDate: Tue Jun 6 12:05:47 2017 +0200. Commit: moneta <lorenzo.moneta@cern.ch>. CommitDate: Wed Jun 7 15:17:33 2017 +0200. Add test for multi root solver and test Name() method. ```. (Yes, the log didn't really help in finding that commit...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/613
https://github.com/root-project/root/pull/613:469,testability,test,test,469,"Right, it says:. ```. /.../root/math/mathmore/src/GSLMultiRootFinder.cxx:161:42: note: declared here. return (fSolver != 0) ? fSolver->Name().c_str() : """";. ```. (And why can I not link to a warning in CDash?). It was actually fixed today by. ```. commit c9f996a7bd13f955eab41760c9839ffe697e750e. Author: moneta <lorenzo.moneta@cern.ch>. AuthorDate: Tue Jun 6 12:05:47 2017 +0200. Commit: moneta <lorenzo.moneta@cern.ch>. CommitDate: Wed Jun 7 15:17:33 2017 +0200. Add test for multi root solver and test Name() method. ```. (Yes, the log didn't really help in finding that commit...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/613
https://github.com/root-project/root/pull/613:500,testability,test,test,500,"Right, it says:. ```. /.../root/math/mathmore/src/GSLMultiRootFinder.cxx:161:42: note: declared here. return (fSolver != 0) ? fSolver->Name().c_str() : """";. ```. (And why can I not link to a warning in CDash?). It was actually fixed today by. ```. commit c9f996a7bd13f955eab41760c9839ffe697e750e. Author: moneta <lorenzo.moneta@cern.ch>. AuthorDate: Tue Jun 6 12:05:47 2017 +0200. Commit: moneta <lorenzo.moneta@cern.ch>. CommitDate: Wed Jun 7 15:17:33 2017 +0200. Add test for multi root solver and test Name() method. ```. (Yes, the log didn't really help in finding that commit...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/613
https://github.com/root-project/root/pull/613:535,testability,log,log,535,"Right, it says:. ```. /.../root/math/mathmore/src/GSLMultiRootFinder.cxx:161:42: note: declared here. return (fSolver != 0) ? fSolver->Name().c_str() : """";. ```. (And why can I not link to a warning in CDash?). It was actually fixed today by. ```. commit c9f996a7bd13f955eab41760c9839ffe697e750e. Author: moneta <lorenzo.moneta@cern.ch>. AuthorDate: Tue Jun 6 12:05:47 2017 +0200. Commit: moneta <lorenzo.moneta@cern.ch>. CommitDate: Wed Jun 7 15:17:33 2017 +0200. Add test for multi root solver and test Name() method. ```. (Yes, the log didn't really help in finding that commit...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/613
https://github.com/root-project/root/pull/613:553,usability,help,help,553,"Right, it says:. ```. /.../root/math/mathmore/src/GSLMultiRootFinder.cxx:161:42: note: declared here. return (fSolver != 0) ? fSolver->Name().c_str() : """";. ```. (And why can I not link to a warning in CDash?). It was actually fixed today by. ```. commit c9f996a7bd13f955eab41760c9839ffe697e750e. Author: moneta <lorenzo.moneta@cern.ch>. AuthorDate: Tue Jun 6 12:05:47 2017 +0200. Commit: moneta <lorenzo.moneta@cern.ch>. CommitDate: Wed Jun 7 15:17:33 2017 +0200. Add test for multi root solver and test Name() method. ```. (Yes, the log didn't really help in finding that commit...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/613
https://github.com/root-project/root/pull/614:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/614
https://github.com/root-project/root/pull/614:24,availability,operat,operator,24,"> Also, when calling an operator, instead of using the function-style. way of doing ""a->operator==(b)"", we now just call ""a == b"". because that seems to be correct way of calling overloaded operators. Again, this should still resolve in the right lookup because we. provide the arguments with the exact type the target function. expects. Note that the semantic of CallFunc is as follow:. * find (by whatever means) a **specific** function/overload . * call that **specific** overload. Having the compilation of the wrapper function do **another** overload resolution defeats part of the purpose.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/614
https://github.com/root-project/root/pull/614:88,availability,operat,operator,88,"> Also, when calling an operator, instead of using the function-style. way of doing ""a->operator==(b)"", we now just call ""a == b"". because that seems to be correct way of calling overloaded operators. Again, this should still resolve in the right lookup because we. provide the arguments with the exact type the target function. expects. Note that the semantic of CallFunc is as follow:. * find (by whatever means) a **specific** function/overload . * call that **specific** overload. Having the compilation of the wrapper function do **another** overload resolution defeats part of the purpose.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/614
https://github.com/root-project/root/pull/614:190,availability,operat,operators,190,"> Also, when calling an operator, instead of using the function-style. way of doing ""a->operator==(b)"", we now just call ""a == b"". because that seems to be correct way of calling overloaded operators. Again, this should still resolve in the right lookup because we. provide the arguments with the exact type the target function. expects. Note that the semantic of CallFunc is as follow:. * find (by whatever means) a **specific** function/overload . * call that **specific** overload. Having the compilation of the wrapper function do **another** overload resolution defeats part of the purpose.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/614
https://github.com/root-project/root/pull/614:515,integrability,wrap,wrapper,515,"> Also, when calling an operator, instead of using the function-style. way of doing ""a->operator==(b)"", we now just call ""a == b"". because that seems to be correct way of calling overloaded operators. Again, this should still resolve in the right lookup because we. provide the arguments with the exact type the target function. expects. Note that the semantic of CallFunc is as follow:. * find (by whatever means) a **specific** function/overload . * call that **specific** overload. Having the compilation of the wrapper function do **another** overload resolution defeats part of the purpose.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/614
https://github.com/root-project/root/pull/614:352,interoperability,semant,semantic,352,"> Also, when calling an operator, instead of using the function-style. way of doing ""a->operator==(b)"", we now just call ""a == b"". because that seems to be correct way of calling overloaded operators. Again, this should still resolve in the right lookup because we. provide the arguments with the exact type the target function. expects. Note that the semantic of CallFunc is as follow:. * find (by whatever means) a **specific** function/overload . * call that **specific** overload. Having the compilation of the wrapper function do **another** overload resolution defeats part of the purpose.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/614
https://github.com/root-project/root/pull/614:419,interoperability,specif,specific,419,"> Also, when calling an operator, instead of using the function-style. way of doing ""a->operator==(b)"", we now just call ""a == b"". because that seems to be correct way of calling overloaded operators. Again, this should still resolve in the right lookup because we. provide the arguments with the exact type the target function. expects. Note that the semantic of CallFunc is as follow:. * find (by whatever means) a **specific** function/overload . * call that **specific** overload. Having the compilation of the wrapper function do **another** overload resolution defeats part of the purpose.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/614
https://github.com/root-project/root/pull/614:464,interoperability,specif,specific,464,"> Also, when calling an operator, instead of using the function-style. way of doing ""a->operator==(b)"", we now just call ""a == b"". because that seems to be correct way of calling overloaded operators. Again, this should still resolve in the right lookup because we. provide the arguments with the exact type the target function. expects. Note that the semantic of CallFunc is as follow:. * find (by whatever means) a **specific** function/overload . * call that **specific** overload. Having the compilation of the wrapper function do **another** overload resolution defeats part of the purpose.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/614
https://github.com/root-project/root/pull/614:515,interoperability,wrapper,wrapper,515,"> Also, when calling an operator, instead of using the function-style. way of doing ""a->operator==(b)"", we now just call ""a == b"". because that seems to be correct way of calling overloaded operators. Again, this should still resolve in the right lookup because we. provide the arguments with the exact type the target function. expects. Note that the semantic of CallFunc is as follow:. * find (by whatever means) a **specific** function/overload . * call that **specific** overload. Having the compilation of the wrapper function do **another** overload resolution defeats part of the purpose.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/614
https://github.com/root-project/root/pull/614:164,availability,operat,operator,164,"```. #include <iterator>. #include <vector>. std::__wrap_iter<int*> i;. bool b2 = ((bool (&)(const std::__wrap_iter<int*>&,const std::__wrap_iter<int*>&))std::__1::operator==<int*, int*>)(i,i);. ```. That disables lookup, ""dialing"" exactly the function overload we want to invoke. And then invoking it. Not surprisingly, the same mechanism works for libstdc++ (with a different spelling of the iterator and operator location). @Teemperor - it would be *awesome* if you could fix CallFunc by using this approach. It will work in ""all cases"" :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/614
https://github.com/root-project/root/pull/614:407,availability,operat,operator,407,"```. #include <iterator>. #include <vector>. std::__wrap_iter<int*> i;. bool b2 = ((bool (&)(const std::__wrap_iter<int*>&,const std::__wrap_iter<int*>&))std::__1::operator==<int*, int*>)(i,i);. ```. That disables lookup, ""dialing"" exactly the function overload we want to invoke. And then invoking it. Not surprisingly, the same mechanism works for libstdc++ (with a different spelling of the iterator and operator location). @Teemperor - it would be *awesome* if you could fix CallFunc by using this approach. It will work in ""all cases"" :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/614
https://github.com/root-project/root/pull/614:93,availability,operat,operator,93,"@Axel-Naumann,. It seems this won't still work:. ```. struct X {} x;. template<typename T> T operator==(X, bool);. template<typename T> bool operator==(X, T);. bool k1 = x == true;. bool k2 = ((bool(&)(X,bool))::operator==<bool>)(x, true);. ```. Courtesy of @zygoloid https://godbolt.org/g/k27s5o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/614
https://github.com/root-project/root/pull/614:141,availability,operat,operator,141,"@Axel-Naumann,. It seems this won't still work:. ```. struct X {} x;. template<typename T> T operator==(X, bool);. template<typename T> bool operator==(X, T);. bool k1 = x == true;. bool k2 = ((bool(&)(X,bool))::operator==<bool>)(x, true);. ```. Courtesy of @zygoloid https://godbolt.org/g/k27s5o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/614
https://github.com/root-project/root/pull/614:212,availability,operat,operator,212,"@Axel-Naumann,. It seems this won't still work:. ```. struct X {} x;. template<typename T> T operator==(X, bool);. template<typename T> bool operator==(X, T);. bool k1 = x == true;. bool k2 = ((bool(&)(X,bool))::operator==<bool>)(x, true);. ```. Courtesy of @zygoloid https://godbolt.org/g/k27s5o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/614
https://github.com/root-project/root/pull/614:69,availability,reliab,reliably,69,"Right - we've been there before, and the only way to invoke a `Decl` reliably is to generate the appropriate AST instead of generating source code. What I meant is: ""The above approach is more likely to pass roottest and existing usage patterns than this PR (which fails roottest)."" Thanks for pointing out the test case again!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/614
https://github.com/root-project/root/pull/614:265,deployability,fail,fails,265,"Right - we've been there before, and the only way to invoke a `Decl` reliably is to generate the appropriate AST instead of generating source code. What I meant is: ""The above approach is more likely to pass roottest and existing usage patterns than this PR (which fails roottest)."" Thanks for pointing out the test case again!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/614
https://github.com/root-project/root/pull/614:69,reliability,reliab,reliably,69,"Right - we've been there before, and the only way to invoke a `Decl` reliably is to generate the appropriate AST instead of generating source code. What I meant is: ""The above approach is more likely to pass roottest and existing usage patterns than this PR (which fails roottest)."" Thanks for pointing out the test case again!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/614
https://github.com/root-project/root/pull/614:265,reliability,fail,fails,265,"Right - we've been there before, and the only way to invoke a `Decl` reliably is to generate the appropriate AST instead of generating source code. What I meant is: ""The above approach is more likely to pass roottest and existing usage patterns than this PR (which fails roottest)."" Thanks for pointing out the test case again!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/614
https://github.com/root-project/root/pull/614:311,safety,test,test,311,"Right - we've been there before, and the only way to invoke a `Decl` reliably is to generate the appropriate AST instead of generating source code. What I meant is: ""The above approach is more likely to pass roottest and existing usage patterns than this PR (which fails roottest)."" Thanks for pointing out the test case again!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/614
https://github.com/root-project/root/pull/614:311,testability,test,test,311,"Right - we've been there before, and the only way to invoke a `Decl` reliably is to generate the appropriate AST instead of generating source code. What I meant is: ""The above approach is more likely to pass roottest and existing usage patterns than this PR (which fails roottest)."" Thanks for pointing out the test case again!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/614
https://github.com/root-project/root/pull/614:24,deployability,continu,continue,24,It looks like we should continue ahead with what Raphael has started as the proposed solution doesn't handle such cases...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/614
https://github.com/root-project/root/pull/614:94,reliability,doe,doesn,94,It looks like we should continue ahead with what Raphael has started as the proposed solution doesn't handle such cases...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/614
https://github.com/root-project/root/pull/614:26,deployability,continu,continue,26,> It looks like we should continue ahead with what Raphael has started . Are you talking about the code in this PR (which can't work as is -- as jenkins pointing out this PR breaks most of the test targeting (indirectly) the use of CallFunc for templated functions -- ) or something else?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/614
https://github.com/root-project/root/pull/614:193,safety,test,test,193,> It looks like we should continue ahead with what Raphael has started . Are you talking about the code in this PR (which can't work as is -- as jenkins pointing out this PR breaks most of the test targeting (indirectly) the use of CallFunc for templated functions -- ) or something else?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/614
https://github.com/root-project/root/pull/614:193,testability,test,test,193,> It looks like we should continue ahead with what Raphael has started . Are you talking about the code in this PR (which can't work as is -- as jenkins pointing out this PR breaks most of the test targeting (indirectly) the use of CallFunc for templated functions -- ) or something else?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/614
https://github.com/root-project/root/pull/614:67,reliability,doe,doesn,67,"Ok, using Axel's suggestion for doing a hot-fix for this issue. It doesn't work for member functions, but it should fix the libc++ STL.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/614
https://github.com/root-project/root/pull/614:40,safety,hot,hot-fix,40,"Ok, using Axel's suggestion for doing a hot-fix for this issue. It doesn't work for member functions, but it should fix the libc++ STL.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/614
https://github.com/root-project/root/pull/614:69,reliability,doe,doesn,69,"> Ok, using Axel's suggestion for doing a hot-fix for this issue. It doesn't work for member functions, but it should fix the libc++ STL. Since you can spell the type of function member and call them via a functions pointer:. ```. typedef void (TBranch::*ReadLeaves_t)(TBuffer &b);. ```. The same pattern should also be applicable to member functions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/614
https://github.com/root-project/root/pull/614:42,safety,hot,hot-fix,42,"> Ok, using Axel's suggestion for doing a hot-fix for this issue. It doesn't work for member functions, but it should fix the libc++ STL. Since you can spell the type of function member and call them via a functions pointer:. ```. typedef void (TBranch::*ReadLeaves_t)(TBuffer &b);. ```. The same pattern should also be applicable to member functions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/614
https://github.com/root-project/root/pull/615:43,interoperability,format,format,43,Hi Philippe @pcanal . Should I apply clang-format for TBufferJSON? It wants change mostly every line in the source code.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/615
https://github.com/root-project/root/pull/615:38,security,modif,modified,38,"You can restrict to just the line you modified in this PR. You can, **if you want**, elect to apply it to the whole file if you are somewhat happy with the result.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/615
https://github.com/root-project/root/pull/615:107,interoperability,format,format,107,"> You can restrict to just the line you modified in this PR. But how I can do this? Is there special clang-format command for that? > You can, if you want, elect to apply it to the whole file if you are somewhat happy with the result. I don't care. But does it always produce correct result? I do not want to check manually all ~3600 lines of code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/615
https://github.com/root-project/root/pull/615:253,reliability,doe,does,253,"> You can restrict to just the line you modified in this PR. But how I can do this? Is there special clang-format command for that? > You can, if you want, elect to apply it to the whole file if you are somewhat happy with the result. I don't care. But does it always produce correct result? I do not want to check manually all ~3600 lines of code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/615
https://github.com/root-project/root/pull/615:40,security,modif,modified,40,"> You can restrict to just the line you modified in this PR. But how I can do this? Is there special clang-format command for that? > You can, if you want, elect to apply it to the whole file if you are somewhat happy with the result. I don't care. But does it always produce correct result? I do not want to check manually all ~3600 lines of code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/615
https://github.com/root-project/root/pull/615:114,usability,command,command,114,"> You can restrict to just the line you modified in this PR. But how I can do this? Is there special clang-format command for that? > You can, if you want, elect to apply it to the whole file if you are somewhat happy with the result. I don't care. But does it always produce correct result? I do not want to check manually all ~3600 lines of code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/615
https://github.com/root-project/root/pull/615:279,deployability,patch,patch,279,"> I don't care. But does it always produce correct result? I do not want to check manually all ~3600 lines of code. It is pretty good but not perfect (i.e. it does not always format the code is a way that is better). The travis page has the information (both the command and the patch to be applied): https://travis-ci.org/root-project/root/jobs/240426093. The command is (in your case):. git-clang-format --commit 39af41d21cfe63141262dd7d03d21b5bad956aec --diff --binary /usr/local/clang-3.4/bin/clang-format. Cheers, Philippe. On 6/7/17 6:04 PM, Sergey Linev wrote:. >. > You can restrict to just the line you modified in this PR. >. > But how I can do this? Is there special clang-format command for that? >. > You can, if you want, elect to apply it to the whole file if you are somewhat happy with the result. >. > I don't care. But does it always produce correct result? I do not want to check manually all ~3600 lines of code. >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub <https://github.com/root-project/root/pull/615#issuecomment-306842481>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AE73L5CGd5RAKKhmaP6pXBG6rY5Yh9QGks5sBsn-gaJpZM4Ny5wd>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/615
https://github.com/root-project/root/pull/615:175,interoperability,format,format,175,"> I don't care. But does it always produce correct result? I do not want to check manually all ~3600 lines of code. It is pretty good but not perfect (i.e. it does not always format the code is a way that is better). The travis page has the information (both the command and the patch to be applied): https://travis-ci.org/root-project/root/jobs/240426093. The command is (in your case):. git-clang-format --commit 39af41d21cfe63141262dd7d03d21b5bad956aec --diff --binary /usr/local/clang-3.4/bin/clang-format. Cheers, Philippe. On 6/7/17 6:04 PM, Sergey Linev wrote:. >. > You can restrict to just the line you modified in this PR. >. > But how I can do this? Is there special clang-format command for that? >. > You can, if you want, elect to apply it to the whole file if you are somewhat happy with the result. >. > I don't care. But does it always produce correct result? I do not want to check manually all ~3600 lines of code. >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub <https://github.com/root-project/root/pull/615#issuecomment-306842481>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AE73L5CGd5RAKKhmaP6pXBG6rY5Yh9QGks5sBsn-gaJpZM4Ny5wd>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/615
https://github.com/root-project/root/pull/615:399,interoperability,format,format,399,"> I don't care. But does it always produce correct result? I do not want to check manually all ~3600 lines of code. It is pretty good but not perfect (i.e. it does not always format the code is a way that is better). The travis page has the information (both the command and the patch to be applied): https://travis-ci.org/root-project/root/jobs/240426093. The command is (in your case):. git-clang-format --commit 39af41d21cfe63141262dd7d03d21b5bad956aec --diff --binary /usr/local/clang-3.4/bin/clang-format. Cheers, Philippe. On 6/7/17 6:04 PM, Sergey Linev wrote:. >. > You can restrict to just the line you modified in this PR. >. > But how I can do this? Is there special clang-format command for that? >. > You can, if you want, elect to apply it to the whole file if you are somewhat happy with the result. >. > I don't care. But does it always produce correct result? I do not want to check manually all ~3600 lines of code. >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub <https://github.com/root-project/root/pull/615#issuecomment-306842481>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AE73L5CGd5RAKKhmaP6pXBG6rY5Yh9QGks5sBsn-gaJpZM4Ny5wd>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/615
https://github.com/root-project/root/pull/615:503,interoperability,format,format,503,"> I don't care. But does it always produce correct result? I do not want to check manually all ~3600 lines of code. It is pretty good but not perfect (i.e. it does not always format the code is a way that is better). The travis page has the information (both the command and the patch to be applied): https://travis-ci.org/root-project/root/jobs/240426093. The command is (in your case):. git-clang-format --commit 39af41d21cfe63141262dd7d03d21b5bad956aec --diff --binary /usr/local/clang-3.4/bin/clang-format. Cheers, Philippe. On 6/7/17 6:04 PM, Sergey Linev wrote:. >. > You can restrict to just the line you modified in this PR. >. > But how I can do this? Is there special clang-format command for that? >. > You can, if you want, elect to apply it to the whole file if you are somewhat happy with the result. >. > I don't care. But does it always produce correct result? I do not want to check manually all ~3600 lines of code. >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub <https://github.com/root-project/root/pull/615#issuecomment-306842481>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AE73L5CGd5RAKKhmaP6pXBG6rY5Yh9QGks5sBsn-gaJpZM4Ny5wd>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/615
https://github.com/root-project/root/pull/615:684,interoperability,format,format,684,"> I don't care. But does it always produce correct result? I do not want to check manually all ~3600 lines of code. It is pretty good but not perfect (i.e. it does not always format the code is a way that is better). The travis page has the information (both the command and the patch to be applied): https://travis-ci.org/root-project/root/jobs/240426093. The command is (in your case):. git-clang-format --commit 39af41d21cfe63141262dd7d03d21b5bad956aec --diff --binary /usr/local/clang-3.4/bin/clang-format. Cheers, Philippe. On 6/7/17 6:04 PM, Sergey Linev wrote:. >. > You can restrict to just the line you modified in this PR. >. > But how I can do this? Is there special clang-format command for that? >. > You can, if you want, elect to apply it to the whole file if you are somewhat happy with the result. >. > I don't care. But does it always produce correct result? I do not want to check manually all ~3600 lines of code. >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub <https://github.com/root-project/root/pull/615#issuecomment-306842481>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AE73L5CGd5RAKKhmaP6pXBG6rY5Yh9QGks5sBsn-gaJpZM4Ny5wd>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/615
https://github.com/root-project/root/pull/615:20,reliability,doe,does,20,"> I don't care. But does it always produce correct result? I do not want to check manually all ~3600 lines of code. It is pretty good but not perfect (i.e. it does not always format the code is a way that is better). The travis page has the information (both the command and the patch to be applied): https://travis-ci.org/root-project/root/jobs/240426093. The command is (in your case):. git-clang-format --commit 39af41d21cfe63141262dd7d03d21b5bad956aec --diff --binary /usr/local/clang-3.4/bin/clang-format. Cheers, Philippe. On 6/7/17 6:04 PM, Sergey Linev wrote:. >. > You can restrict to just the line you modified in this PR. >. > But how I can do this? Is there special clang-format command for that? >. > You can, if you want, elect to apply it to the whole file if you are somewhat happy with the result. >. > I don't care. But does it always produce correct result? I do not want to check manually all ~3600 lines of code. >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub <https://github.com/root-project/root/pull/615#issuecomment-306842481>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AE73L5CGd5RAKKhmaP6pXBG6rY5Yh9QGks5sBsn-gaJpZM4Ny5wd>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/615
https://github.com/root-project/root/pull/615:159,reliability,doe,does,159,"> I don't care. But does it always produce correct result? I do not want to check manually all ~3600 lines of code. It is pretty good but not perfect (i.e. it does not always format the code is a way that is better). The travis page has the information (both the command and the patch to be applied): https://travis-ci.org/root-project/root/jobs/240426093. The command is (in your case):. git-clang-format --commit 39af41d21cfe63141262dd7d03d21b5bad956aec --diff --binary /usr/local/clang-3.4/bin/clang-format. Cheers, Philippe. On 6/7/17 6:04 PM, Sergey Linev wrote:. >. > You can restrict to just the line you modified in this PR. >. > But how I can do this? Is there special clang-format command for that? >. > You can, if you want, elect to apply it to the whole file if you are somewhat happy with the result. >. > I don't care. But does it always produce correct result? I do not want to check manually all ~3600 lines of code. >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub <https://github.com/root-project/root/pull/615#issuecomment-306842481>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AE73L5CGd5RAKKhmaP6pXBG6rY5Yh9QGks5sBsn-gaJpZM4Ny5wd>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/615
https://github.com/root-project/root/pull/615:838,reliability,doe,does,838,"> I don't care. But does it always produce correct result? I do not want to check manually all ~3600 lines of code. It is pretty good but not perfect (i.e. it does not always format the code is a way that is better). The travis page has the information (both the command and the patch to be applied): https://travis-ci.org/root-project/root/jobs/240426093. The command is (in your case):. git-clang-format --commit 39af41d21cfe63141262dd7d03d21b5bad956aec --diff --binary /usr/local/clang-3.4/bin/clang-format. Cheers, Philippe. On 6/7/17 6:04 PM, Sergey Linev wrote:. >. > You can restrict to just the line you modified in this PR. >. > But how I can do this? Is there special clang-format command for that? >. > You can, if you want, elect to apply it to the whole file if you are somewhat happy with the result. >. > I don't care. But does it always produce correct result? I do not want to check manually all ~3600 lines of code. >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub <https://github.com/root-project/root/pull/615#issuecomment-306842481>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AE73L5CGd5RAKKhmaP6pXBG6rY5Yh9QGks5sBsn-gaJpZM4Ny5wd>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/615
https://github.com/root-project/root/pull/615:279,safety,patch,patch,279,"> I don't care. But does it always produce correct result? I do not want to check manually all ~3600 lines of code. It is pretty good but not perfect (i.e. it does not always format the code is a way that is better). The travis page has the information (both the command and the patch to be applied): https://travis-ci.org/root-project/root/jobs/240426093. The command is (in your case):. git-clang-format --commit 39af41d21cfe63141262dd7d03d21b5bad956aec --diff --binary /usr/local/clang-3.4/bin/clang-format. Cheers, Philippe. On 6/7/17 6:04 PM, Sergey Linev wrote:. >. > You can restrict to just the line you modified in this PR. >. > But how I can do this? Is there special clang-format command for that? >. > You can, if you want, elect to apply it to the whole file if you are somewhat happy with the result. >. > I don't care. But does it always produce correct result? I do not want to check manually all ~3600 lines of code. >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub <https://github.com/root-project/root/pull/615#issuecomment-306842481>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AE73L5CGd5RAKKhmaP6pXBG6rY5Yh9QGks5sBsn-gaJpZM4Ny5wd>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/615
https://github.com/root-project/root/pull/615:279,security,patch,patch,279,"> I don't care. But does it always produce correct result? I do not want to check manually all ~3600 lines of code. It is pretty good but not perfect (i.e. it does not always format the code is a way that is better). The travis page has the information (both the command and the patch to be applied): https://travis-ci.org/root-project/root/jobs/240426093. The command is (in your case):. git-clang-format --commit 39af41d21cfe63141262dd7d03d21b5bad956aec --diff --binary /usr/local/clang-3.4/bin/clang-format. Cheers, Philippe. On 6/7/17 6:04 PM, Sergey Linev wrote:. >. > You can restrict to just the line you modified in this PR. >. > But how I can do this? Is there special clang-format command for that? >. > You can, if you want, elect to apply it to the whole file if you are somewhat happy with the result. >. > I don't care. But does it always produce correct result? I do not want to check manually all ~3600 lines of code. >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub <https://github.com/root-project/root/pull/615#issuecomment-306842481>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AE73L5CGd5RAKKhmaP6pXBG6rY5Yh9QGks5sBsn-gaJpZM4Ny5wd>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/615
https://github.com/root-project/root/pull/615:612,security,modif,modified,612,"> I don't care. But does it always produce correct result? I do not want to check manually all ~3600 lines of code. It is pretty good but not perfect (i.e. it does not always format the code is a way that is better). The travis page has the information (both the command and the patch to be applied): https://travis-ci.org/root-project/root/jobs/240426093. The command is (in your case):. git-clang-format --commit 39af41d21cfe63141262dd7d03d21b5bad956aec --diff --binary /usr/local/clang-3.4/bin/clang-format. Cheers, Philippe. On 6/7/17 6:04 PM, Sergey Linev wrote:. >. > You can restrict to just the line you modified in this PR. >. > But how I can do this? Is there special clang-format command for that? >. > You can, if you want, elect to apply it to the whole file if you are somewhat happy with the result. >. > I don't care. But does it always produce correct result? I do not want to check manually all ~3600 lines of code. >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub <https://github.com/root-project/root/pull/615#issuecomment-306842481>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AE73L5CGd5RAKKhmaP6pXBG6rY5Yh9QGks5sBsn-gaJpZM4Ny5wd>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/615
https://github.com/root-project/root/pull/615:1182,security,auth,auth,1182,"> I don't care. But does it always produce correct result? I do not want to check manually all ~3600 lines of code. It is pretty good but not perfect (i.e. it does not always format the code is a way that is better). The travis page has the information (both the command and the patch to be applied): https://travis-ci.org/root-project/root/jobs/240426093. The command is (in your case):. git-clang-format --commit 39af41d21cfe63141262dd7d03d21b5bad956aec --diff --binary /usr/local/clang-3.4/bin/clang-format. Cheers, Philippe. On 6/7/17 6:04 PM, Sergey Linev wrote:. >. > You can restrict to just the line you modified in this PR. >. > But how I can do this? Is there special clang-format command for that? >. > You can, if you want, elect to apply it to the whole file if you are somewhat happy with the result. >. > I don't care. But does it always produce correct result? I do not want to check manually all ~3600 lines of code. >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub <https://github.com/root-project/root/pull/615#issuecomment-306842481>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AE73L5CGd5RAKKhmaP6pXBG6rY5Yh9QGks5sBsn-gaJpZM4Ny5wd>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/615
https://github.com/root-project/root/pull/615:263,usability,command,command,263,"> I don't care. But does it always produce correct result? I do not want to check manually all ~3600 lines of code. It is pretty good but not perfect (i.e. it does not always format the code is a way that is better). The travis page has the information (both the command and the patch to be applied): https://travis-ci.org/root-project/root/jobs/240426093. The command is (in your case):. git-clang-format --commit 39af41d21cfe63141262dd7d03d21b5bad956aec --diff --binary /usr/local/clang-3.4/bin/clang-format. Cheers, Philippe. On 6/7/17 6:04 PM, Sergey Linev wrote:. >. > You can restrict to just the line you modified in this PR. >. > But how I can do this? Is there special clang-format command for that? >. > You can, if you want, elect to apply it to the whole file if you are somewhat happy with the result. >. > I don't care. But does it always produce correct result? I do not want to check manually all ~3600 lines of code. >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub <https://github.com/root-project/root/pull/615#issuecomment-306842481>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AE73L5CGd5RAKKhmaP6pXBG6rY5Yh9QGks5sBsn-gaJpZM4Ny5wd>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/615
https://github.com/root-project/root/pull/615:361,usability,command,command,361,"> I don't care. But does it always produce correct result? I do not want to check manually all ~3600 lines of code. It is pretty good but not perfect (i.e. it does not always format the code is a way that is better). The travis page has the information (both the command and the patch to be applied): https://travis-ci.org/root-project/root/jobs/240426093. The command is (in your case):. git-clang-format --commit 39af41d21cfe63141262dd7d03d21b5bad956aec --diff --binary /usr/local/clang-3.4/bin/clang-format. Cheers, Philippe. On 6/7/17 6:04 PM, Sergey Linev wrote:. >. > You can restrict to just the line you modified in this PR. >. > But how I can do this? Is there special clang-format command for that? >. > You can, if you want, elect to apply it to the whole file if you are somewhat happy with the result. >. > I don't care. But does it always produce correct result? I do not want to check manually all ~3600 lines of code. >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub <https://github.com/root-project/root/pull/615#issuecomment-306842481>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AE73L5CGd5RAKKhmaP6pXBG6rY5Yh9QGks5sBsn-gaJpZM4Ny5wd>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/615
https://github.com/root-project/root/pull/615:691,usability,command,command,691,"> I don't care. But does it always produce correct result? I do not want to check manually all ~3600 lines of code. It is pretty good but not perfect (i.e. it does not always format the code is a way that is better). The travis page has the information (both the command and the patch to be applied): https://travis-ci.org/root-project/root/jobs/240426093. The command is (in your case):. git-clang-format --commit 39af41d21cfe63141262dd7d03d21b5bad956aec --diff --binary /usr/local/clang-3.4/bin/clang-format. Cheers, Philippe. On 6/7/17 6:04 PM, Sergey Linev wrote:. >. > You can restrict to just the line you modified in this PR. >. > But how I can do this? Is there special clang-format command for that? >. > You can, if you want, elect to apply it to the whole file if you are somewhat happy with the result. >. > I don't care. But does it always produce correct result? I do not want to check manually all ~3600 lines of code. >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub <https://github.com/root-project/root/pull/615#issuecomment-306842481>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AE73L5CGd5RAKKhmaP6pXBG6rY5Yh9QGks5sBsn-gaJpZM4Ny5wd>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/615
https://github.com/root-project/root/pull/615:2,integrability,sub,submit,2,I submit separate PR for roottest.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/615
https://github.com/root-project/root/pull/616:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/616
https://github.com/root-project/root/pull/616:145,deployability,Releas,ReleaseNotes,145,Could you (in a separate PR) hand in a test for this wonderful feature to the roottest repo? Could you also add a few lines about this to README/ReleaseNotes/v612/index.md?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/616
https://github.com/root-project/root/pull/616:39,safety,test,test,39,Could you (in a separate PR) hand in a test for this wonderful feature to the roottest repo? Could you also add a few lines about this to README/ReleaseNotes/v612/index.md?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/616
https://github.com/root-project/root/pull/616:39,testability,test,test,39,Could you (in a separate PR) hand in a test for this wonderful feature to the roottest repo? Could you also add a few lines about this to README/ReleaseNotes/v612/index.md?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/616
https://github.com/root-project/root/pull/616:24,usability,document,documentation,24,We still also need some documentation for it (similar to the PR description at least).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/616
https://github.com/root-project/root/pull/616:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/616
https://github.com/root-project/root/pull/616:66,availability,failur,failures,66,"We seem to have two successful builds versus three infrastructure failures - so I suppose that's ""green"". Merging - thank you for your contribution!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/616
https://github.com/root-project/root/pull/616:31,deployability,build,builds,31,"We seem to have two successful builds versus three infrastructure failures - so I suppose that's ""green"". Merging - thank you for your contribution!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/616
https://github.com/root-project/root/pull/616:51,deployability,infrastructur,infrastructure,51,"We seem to have two successful builds versus three infrastructure failures - so I suppose that's ""green"". Merging - thank you for your contribution!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/616
https://github.com/root-project/root/pull/616:66,deployability,fail,failures,66,"We seem to have two successful builds versus three infrastructure failures - so I suppose that's ""green"". Merging - thank you for your contribution!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/616
https://github.com/root-project/root/pull/616:98,energy efficiency,green,green,98,"We seem to have two successful builds versus three infrastructure failures - so I suppose that's ""green"". Merging - thank you for your contribution!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/616
https://github.com/root-project/root/pull/616:66,performance,failur,failures,66,"We seem to have two successful builds versus three infrastructure failures - so I suppose that's ""green"". Merging - thank you for your contribution!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/616
https://github.com/root-project/root/pull/616:66,reliability,fail,failures,66,"We seem to have two successful builds versus three infrastructure failures - so I suppose that's ""green"". Merging - thank you for your contribution!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/616
https://github.com/root-project/root/pull/620:81,usability,tool,tools,81,"Closing, the issue was because some people had a soft link `interpreter/llvm/src/tools/cling@ -> ../../../cling`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/620
https://github.com/root-project/root/pull/621:27,availability,error,errors,27,It looks like the warnings/errors were already present before my PR... :angry:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/621
https://github.com/root-project/root/pull/621:27,performance,error,errors,27,It looks like the warnings/errors were already present before my PR... :angry:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/621
https://github.com/root-project/root/pull/621:27,safety,error,errors,27,It looks like the warnings/errors were already present before my PR... :angry:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/621
https://github.com/root-project/root/pull/621:27,usability,error,errors,27,It looks like the warnings/errors were already present before my PR... :angry:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/621
https://github.com/root-project/root/pull/621:29,availability,error,errors,29,> It looks like the warnings/errors were already present before my PR... . What about the cyclic dependencies on LZ4? That seems to be new.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/621
https://github.com/root-project/root/pull/621:97,deployability,depend,dependencies,97,> It looks like the warnings/errors were already present before my PR... . What about the cyclic dependencies on LZ4? That seems to be new.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/621
https://github.com/root-project/root/pull/621:97,integrability,depend,dependencies,97,> It looks like the warnings/errors were already present before my PR... . What about the cyclic dependencies on LZ4? That seems to be new.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/621
https://github.com/root-project/root/pull/621:97,modifiability,depend,dependencies,97,> It looks like the warnings/errors were already present before my PR... . What about the cyclic dependencies on LZ4? That seems to be new.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/621
https://github.com/root-project/root/pull/621:29,performance,error,errors,29,> It looks like the warnings/errors were already present before my PR... . What about the cyclic dependencies on LZ4? That seems to be new.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/621
https://github.com/root-project/root/pull/621:29,safety,error,errors,29,> It looks like the warnings/errors were already present before my PR... . What about the cyclic dependencies on LZ4? That seems to be new.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/621
https://github.com/root-project/root/pull/621:97,safety,depend,dependencies,97,> It looks like the warnings/errors were already present before my PR... . What about the cyclic dependencies on LZ4? That seems to be new.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/621
https://github.com/root-project/root/pull/621:97,testability,depend,dependencies,97,> It looks like the warnings/errors were already present before my PR... . What about the cyclic dependencies on LZ4? That seems to be new.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/621
https://github.com/root-project/root/pull/621:29,usability,error,errors,29,> It looks like the warnings/errors were already present before my PR... . What about the cyclic dependencies on LZ4? That seems to be new.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/621
https://github.com/root-project/root/pull/622:22,safety,test,tests,22,I will merge once the tests are over...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/622
https://github.com/root-project/root/pull/622:22,testability,test,tests,22,I will merge once the tests are over...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/622
https://github.com/root-project/root/pull/622:147,interoperability,format,format,147,"> yes in this case, for 'just' the line changed (i.e. the travis recommendation). Philippe, your command does not work for me. I tried:. git-clang-format --commit 31fb30ff38 --diff --binary `which clang-format`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/622
https://github.com/root-project/root/pull/622:203,interoperability,format,format,203,"> yes in this case, for 'just' the line changed (i.e. the travis recommendation). Philippe, your command does not work for me. I tried:. git-clang-format --commit 31fb30ff38 --diff --binary `which clang-format`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/622
https://github.com/root-project/root/pull/622:105,reliability,doe,does,105,"> yes in this case, for 'just' the line changed (i.e. the travis recommendation). Philippe, your command does not work for me. I tried:. git-clang-format --commit 31fb30ff38 --diff --binary `which clang-format`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/622
https://github.com/root-project/root/pull/622:97,usability,command,command,97,"> yes in this case, for 'just' the line changed (i.e. the travis recommendation). Philippe, your command does not work for me. I tried:. git-clang-format --commit 31fb30ff38 --diff --binary `which clang-format`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/622
https://github.com/root-project/root/pull/622:19,deployability,fail,fail,19,@linev How does it fail? @vgvassilev Can you help me?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/622
https://github.com/root-project/root/pull/622:11,reliability,doe,does,11,@linev How does it fail? @vgvassilev Can you help me?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/622
https://github.com/root-project/root/pull/622:19,reliability,fail,fail,19,@linev How does it fail? @vgvassilev Can you help me?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/622
https://github.com/root-project/root/pull/622:45,usability,help,help,45,@linev How does it fail? @vgvassilev Can you help me?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/622
https://github.com/root-project/root/pull/622:14,deployability,fail,fail,14,> How does it fail? It says that there is nothing changed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/622
https://github.com/root-project/root/pull/622:6,reliability,doe,does,6,> How does it fail? It says that there is nothing changed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/622
https://github.com/root-project/root/pull/622:14,reliability,fail,fail,14,> How does it fail? It says that there is nothing changed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/622
https://github.com/root-project/root/pull/622:14,deployability,fail,failing,14,Note: the two failing test (math and cling) are unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/622
https://github.com/root-project/root/pull/622:14,reliability,fail,failing,14,Note: the two failing test (math and cling) are unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/622
https://github.com/root-project/root/pull/622:22,safety,test,test,22,Note: the two failing test (math and cling) are unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/622
https://github.com/root-project/root/pull/622:22,testability,test,test,22,Note: the two failing test (math and cling) are unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/622
https://github.com/root-project/root/pull/622:179,availability,failur,failure,179,'projectroot.math.mathcore.test.mathcore_testLogLExecPolicy' should be fixed by #627. 'projectroot.roottest.python.stl.roottest_python_stl_stl' should be fixed by #614. The other failure I don't know.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/622
https://github.com/root-project/root/pull/622:179,deployability,fail,failure,179,'projectroot.math.mathcore.test.mathcore_testLogLExecPolicy' should be fixed by #627. 'projectroot.roottest.python.stl.roottest_python_stl_stl' should be fixed by #614. The other failure I don't know.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/622
https://github.com/root-project/root/pull/622:179,performance,failur,failure,179,'projectroot.math.mathcore.test.mathcore_testLogLExecPolicy' should be fixed by #627. 'projectroot.roottest.python.stl.roottest_python_stl_stl' should be fixed by #614. The other failure I don't know.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/622
https://github.com/root-project/root/pull/622:179,reliability,fail,failure,179,'projectroot.math.mathcore.test.mathcore_testLogLExecPolicy' should be fixed by #627. 'projectroot.roottest.python.stl.roottest_python_stl_stl' should be fixed by #614. The other failure I don't know.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/622
https://github.com/root-project/root/pull/622:27,safety,test,test,27,'projectroot.math.mathcore.test.mathcore_testLogLExecPolicy' should be fixed by #627. 'projectroot.roottest.python.stl.roottest_python_stl_stl' should be fixed by #614. The other failure I don't know.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/622
https://github.com/root-project/root/pull/622:27,testability,test,test,27,'projectroot.math.mathcore.test.mathcore_testLogLExecPolicy' should be fixed by #627. 'projectroot.roottest.python.stl.roottest_python_stl_stl' should be fixed by #614. The other failure I don't know.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/622
https://github.com/root-project/root/pull/623:120,integrability,sub,submit,120,It seems this didn't end up in our llvm.git as it probably won't now and next time it would be wiped away again. I will submit it for upstreaming...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:78,performance,time,time,78,It seems this didn't end up in our llvm.git as it probably won't now and next time it would be wiped away again. I will submit it for upstreaming...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:801,availability,fault,fault,801,"Here are more details on where segfault happens:. ```. Starting program: /build/davidlt/build/bin/rootcling -rootbuild -f G__Html.cxx -s /build/davidlt/build/lib/libHtml.so -excludePath /build/davidlt/root -excludePath /build/davidlt/build -rml libHtml.so -rmf /build/davidlt/build/lib/libHtml.rootmap -I/build/davidlt/root -I/build/davidlt/root/interpreter/cling/include -I/build/davidlt/build/include TClassDocOutput.h TDocDirective.h TDocInfo.h TDocOutput.h TDocParser.h THtml.h /build/davidlt/root/html/inc/LinkDef.h. Missing separate debuginfos, use: dnf debuginfo-install glibc-2.25-5.fc26.x86_64. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". Detaching after fork from child process 62. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. 159	 const decl_type *getFirstDecl() const { return First; }. Missing separate debuginfos, use: dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectM",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:74,deployability,build,build,74,"Here are more details on where segfault happens:. ```. Starting program: /build/davidlt/build/bin/rootcling -rootbuild -f G__Html.cxx -s /build/davidlt/build/lib/libHtml.so -excludePath /build/davidlt/root -excludePath /build/davidlt/build -rml libHtml.so -rmf /build/davidlt/build/lib/libHtml.rootmap -I/build/davidlt/root -I/build/davidlt/root/interpreter/cling/include -I/build/davidlt/build/include TClassDocOutput.h TDocDirective.h TDocInfo.h TDocOutput.h TDocParser.h THtml.h /build/davidlt/root/html/inc/LinkDef.h. Missing separate debuginfos, use: dnf debuginfo-install glibc-2.25-5.fc26.x86_64. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". Detaching after fork from child process 62. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. 159	 const decl_type *getFirstDecl() const { return First; }. Missing separate debuginfos, use: dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectM",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:88,deployability,build,build,88,"Here are more details on where segfault happens:. ```. Starting program: /build/davidlt/build/bin/rootcling -rootbuild -f G__Html.cxx -s /build/davidlt/build/lib/libHtml.so -excludePath /build/davidlt/root -excludePath /build/davidlt/build -rml libHtml.so -rmf /build/davidlt/build/lib/libHtml.rootmap -I/build/davidlt/root -I/build/davidlt/root/interpreter/cling/include -I/build/davidlt/build/include TClassDocOutput.h TDocDirective.h TDocInfo.h TDocOutput.h TDocParser.h THtml.h /build/davidlt/root/html/inc/LinkDef.h. Missing separate debuginfos, use: dnf debuginfo-install glibc-2.25-5.fc26.x86_64. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". Detaching after fork from child process 62. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. 159	 const decl_type *getFirstDecl() const { return First; }. Missing separate debuginfos, use: dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectM",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:138,deployability,build,build,138,"Here are more details on where segfault happens:. ```. Starting program: /build/davidlt/build/bin/rootcling -rootbuild -f G__Html.cxx -s /build/davidlt/build/lib/libHtml.so -excludePath /build/davidlt/root -excludePath /build/davidlt/build -rml libHtml.so -rmf /build/davidlt/build/lib/libHtml.rootmap -I/build/davidlt/root -I/build/davidlt/root/interpreter/cling/include -I/build/davidlt/build/include TClassDocOutput.h TDocDirective.h TDocInfo.h TDocOutput.h TDocParser.h THtml.h /build/davidlt/root/html/inc/LinkDef.h. Missing separate debuginfos, use: dnf debuginfo-install glibc-2.25-5.fc26.x86_64. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". Detaching after fork from child process 62. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. 159	 const decl_type *getFirstDecl() const { return First; }. Missing separate debuginfos, use: dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectM",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:152,deployability,build,build,152,"Here are more details on where segfault happens:. ```. Starting program: /build/davidlt/build/bin/rootcling -rootbuild -f G__Html.cxx -s /build/davidlt/build/lib/libHtml.so -excludePath /build/davidlt/root -excludePath /build/davidlt/build -rml libHtml.so -rmf /build/davidlt/build/lib/libHtml.rootmap -I/build/davidlt/root -I/build/davidlt/root/interpreter/cling/include -I/build/davidlt/build/include TClassDocOutput.h TDocDirective.h TDocInfo.h TDocOutput.h TDocParser.h THtml.h /build/davidlt/root/html/inc/LinkDef.h. Missing separate debuginfos, use: dnf debuginfo-install glibc-2.25-5.fc26.x86_64. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". Detaching after fork from child process 62. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. 159	 const decl_type *getFirstDecl() const { return First; }. Missing separate debuginfos, use: dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectM",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:187,deployability,build,build,187,"Here are more details on where segfault happens:. ```. Starting program: /build/davidlt/build/bin/rootcling -rootbuild -f G__Html.cxx -s /build/davidlt/build/lib/libHtml.so -excludePath /build/davidlt/root -excludePath /build/davidlt/build -rml libHtml.so -rmf /build/davidlt/build/lib/libHtml.rootmap -I/build/davidlt/root -I/build/davidlt/root/interpreter/cling/include -I/build/davidlt/build/include TClassDocOutput.h TDocDirective.h TDocInfo.h TDocOutput.h TDocParser.h THtml.h /build/davidlt/root/html/inc/LinkDef.h. Missing separate debuginfos, use: dnf debuginfo-install glibc-2.25-5.fc26.x86_64. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". Detaching after fork from child process 62. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. 159	 const decl_type *getFirstDecl() const { return First; }. Missing separate debuginfos, use: dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectM",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:220,deployability,build,build,220,"Here are more details on where segfault happens:. ```. Starting program: /build/davidlt/build/bin/rootcling -rootbuild -f G__Html.cxx -s /build/davidlt/build/lib/libHtml.so -excludePath /build/davidlt/root -excludePath /build/davidlt/build -rml libHtml.so -rmf /build/davidlt/build/lib/libHtml.rootmap -I/build/davidlt/root -I/build/davidlt/root/interpreter/cling/include -I/build/davidlt/build/include TClassDocOutput.h TDocDirective.h TDocInfo.h TDocOutput.h TDocParser.h THtml.h /build/davidlt/root/html/inc/LinkDef.h. Missing separate debuginfos, use: dnf debuginfo-install glibc-2.25-5.fc26.x86_64. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". Detaching after fork from child process 62. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. 159	 const decl_type *getFirstDecl() const { return First; }. Missing separate debuginfos, use: dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectM",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:234,deployability,build,build,234,"Here are more details on where segfault happens:. ```. Starting program: /build/davidlt/build/bin/rootcling -rootbuild -f G__Html.cxx -s /build/davidlt/build/lib/libHtml.so -excludePath /build/davidlt/root -excludePath /build/davidlt/build -rml libHtml.so -rmf /build/davidlt/build/lib/libHtml.rootmap -I/build/davidlt/root -I/build/davidlt/root/interpreter/cling/include -I/build/davidlt/build/include TClassDocOutput.h TDocDirective.h TDocInfo.h TDocOutput.h TDocParser.h THtml.h /build/davidlt/root/html/inc/LinkDef.h. Missing separate debuginfos, use: dnf debuginfo-install glibc-2.25-5.fc26.x86_64. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". Detaching after fork from child process 62. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. 159	 const decl_type *getFirstDecl() const { return First; }. Missing separate debuginfos, use: dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectM",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:262,deployability,build,build,262,"Here are more details on where segfault happens:. ```. Starting program: /build/davidlt/build/bin/rootcling -rootbuild -f G__Html.cxx -s /build/davidlt/build/lib/libHtml.so -excludePath /build/davidlt/root -excludePath /build/davidlt/build -rml libHtml.so -rmf /build/davidlt/build/lib/libHtml.rootmap -I/build/davidlt/root -I/build/davidlt/root/interpreter/cling/include -I/build/davidlt/build/include TClassDocOutput.h TDocDirective.h TDocInfo.h TDocOutput.h TDocParser.h THtml.h /build/davidlt/root/html/inc/LinkDef.h. Missing separate debuginfos, use: dnf debuginfo-install glibc-2.25-5.fc26.x86_64. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". Detaching after fork from child process 62. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. 159	 const decl_type *getFirstDecl() const { return First; }. Missing separate debuginfos, use: dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectM",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:276,deployability,build,build,276,"Here are more details on where segfault happens:. ```. Starting program: /build/davidlt/build/bin/rootcling -rootbuild -f G__Html.cxx -s /build/davidlt/build/lib/libHtml.so -excludePath /build/davidlt/root -excludePath /build/davidlt/build -rml libHtml.so -rmf /build/davidlt/build/lib/libHtml.rootmap -I/build/davidlt/root -I/build/davidlt/root/interpreter/cling/include -I/build/davidlt/build/include TClassDocOutput.h TDocDirective.h TDocInfo.h TDocOutput.h TDocParser.h THtml.h /build/davidlt/root/html/inc/LinkDef.h. Missing separate debuginfos, use: dnf debuginfo-install glibc-2.25-5.fc26.x86_64. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". Detaching after fork from child process 62. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. 159	 const decl_type *getFirstDecl() const { return First; }. Missing separate debuginfos, use: dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectM",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:305,deployability,build,build,305,"Here are more details on where segfault happens:. ```. Starting program: /build/davidlt/build/bin/rootcling -rootbuild -f G__Html.cxx -s /build/davidlt/build/lib/libHtml.so -excludePath /build/davidlt/root -excludePath /build/davidlt/build -rml libHtml.so -rmf /build/davidlt/build/lib/libHtml.rootmap -I/build/davidlt/root -I/build/davidlt/root/interpreter/cling/include -I/build/davidlt/build/include TClassDocOutput.h TDocDirective.h TDocInfo.h TDocOutput.h TDocParser.h THtml.h /build/davidlt/root/html/inc/LinkDef.h. Missing separate debuginfos, use: dnf debuginfo-install glibc-2.25-5.fc26.x86_64. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". Detaching after fork from child process 62. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. 159	 const decl_type *getFirstDecl() const { return First; }. Missing separate debuginfos, use: dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectM",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:327,deployability,build,build,327,"Here are more details on where segfault happens:. ```. Starting program: /build/davidlt/build/bin/rootcling -rootbuild -f G__Html.cxx -s /build/davidlt/build/lib/libHtml.so -excludePath /build/davidlt/root -excludePath /build/davidlt/build -rml libHtml.so -rmf /build/davidlt/build/lib/libHtml.rootmap -I/build/davidlt/root -I/build/davidlt/root/interpreter/cling/include -I/build/davidlt/build/include TClassDocOutput.h TDocDirective.h TDocInfo.h TDocOutput.h TDocParser.h THtml.h /build/davidlt/root/html/inc/LinkDef.h. Missing separate debuginfos, use: dnf debuginfo-install glibc-2.25-5.fc26.x86_64. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". Detaching after fork from child process 62. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. 159	 const decl_type *getFirstDecl() const { return First; }. Missing separate debuginfos, use: dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectM",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:375,deployability,build,build,375,"Here are more details on where segfault happens:. ```. Starting program: /build/davidlt/build/bin/rootcling -rootbuild -f G__Html.cxx -s /build/davidlt/build/lib/libHtml.so -excludePath /build/davidlt/root -excludePath /build/davidlt/build -rml libHtml.so -rmf /build/davidlt/build/lib/libHtml.rootmap -I/build/davidlt/root -I/build/davidlt/root/interpreter/cling/include -I/build/davidlt/build/include TClassDocOutput.h TDocDirective.h TDocInfo.h TDocOutput.h TDocParser.h THtml.h /build/davidlt/root/html/inc/LinkDef.h. Missing separate debuginfos, use: dnf debuginfo-install glibc-2.25-5.fc26.x86_64. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". Detaching after fork from child process 62. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. 159	 const decl_type *getFirstDecl() const { return First; }. Missing separate debuginfos, use: dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectM",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:389,deployability,build,build,389,"Here are more details on where segfault happens:. ```. Starting program: /build/davidlt/build/bin/rootcling -rootbuild -f G__Html.cxx -s /build/davidlt/build/lib/libHtml.so -excludePath /build/davidlt/root -excludePath /build/davidlt/build -rml libHtml.so -rmf /build/davidlt/build/lib/libHtml.rootmap -I/build/davidlt/root -I/build/davidlt/root/interpreter/cling/include -I/build/davidlt/build/include TClassDocOutput.h TDocDirective.h TDocInfo.h TDocOutput.h TDocParser.h THtml.h /build/davidlt/root/html/inc/LinkDef.h. Missing separate debuginfos, use: dnf debuginfo-install glibc-2.25-5.fc26.x86_64. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". Detaching after fork from child process 62. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. 159	 const decl_type *getFirstDecl() const { return First; }. Missing separate debuginfos, use: dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectM",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:483,deployability,build,build,483,"Here are more details on where segfault happens:. ```. Starting program: /build/davidlt/build/bin/rootcling -rootbuild -f G__Html.cxx -s /build/davidlt/build/lib/libHtml.so -excludePath /build/davidlt/root -excludePath /build/davidlt/build -rml libHtml.so -rmf /build/davidlt/build/lib/libHtml.rootmap -I/build/davidlt/root -I/build/davidlt/root/interpreter/cling/include -I/build/davidlt/build/include TClassDocOutput.h TDocDirective.h TDocInfo.h TDocOutput.h TDocParser.h THtml.h /build/davidlt/root/html/inc/LinkDef.h. Missing separate debuginfos, use: dnf debuginfo-install glibc-2.25-5.fc26.x86_64. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". Detaching after fork from child process 62. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. 159	 const decl_type *getFirstDecl() const { return First; }. Missing separate debuginfos, use: dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectM",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:570,deployability,instal,install,570,"Here are more details on where segfault happens:. ```. Starting program: /build/davidlt/build/bin/rootcling -rootbuild -f G__Html.cxx -s /build/davidlt/build/lib/libHtml.so -excludePath /build/davidlt/root -excludePath /build/davidlt/build -rml libHtml.so -rmf /build/davidlt/build/lib/libHtml.rootmap -I/build/davidlt/root -I/build/davidlt/root/interpreter/cling/include -I/build/davidlt/build/include TClassDocOutput.h TDocDirective.h TDocInfo.h TDocOutput.h TDocParser.h THtml.h /build/davidlt/root/html/inc/LinkDef.h. Missing separate debuginfos, use: dnf debuginfo-install glibc-2.25-5.fc26.x86_64. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". Detaching after fork from child process 62. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. 159	 const decl_type *getFirstDecl() const { return First; }. Missing separate debuginfos, use: dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectM",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:913,deployability,build,build,913,"Here are more details on where segfault happens:. ```. Starting program: /build/davidlt/build/bin/rootcling -rootbuild -f G__Html.cxx -s /build/davidlt/build/lib/libHtml.so -excludePath /build/davidlt/root -excludePath /build/davidlt/build -rml libHtml.so -rmf /build/davidlt/build/lib/libHtml.rootmap -I/build/davidlt/root -I/build/davidlt/root/interpreter/cling/include -I/build/davidlt/build/include TClassDocOutput.h TDocDirective.h TDocInfo.h TDocOutput.h TDocParser.h THtml.h /build/davidlt/root/html/inc/LinkDef.h. Missing separate debuginfos, use: dnf debuginfo-install glibc-2.25-5.fc26.x86_64. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". Detaching after fork from child process 62. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. 159	 const decl_type *getFirstDecl() const { return First; }. Missing separate debuginfos, use: dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectM",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:1113,deployability,instal,install,1113,"d -f G__Html.cxx -s /build/davidlt/build/lib/libHtml.so -excludePath /build/davidlt/root -excludePath /build/davidlt/build -rml libHtml.so -rmf /build/davidlt/build/lib/libHtml.rootmap -I/build/davidlt/root -I/build/davidlt/root/interpreter/cling/include -I/build/davidlt/build/include TClassDocOutput.h TDocDirective.h TDocInfo.h TDocOutput.h TDocParser.h THtml.h /build/davidlt/root/html/inc/LinkDef.h. Missing separate debuginfos, use: dnf debuginfo-install glibc-2.25-5.fc26.x86_64. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". Detaching after fork from child process 62. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. 159	 const decl_type *getFirstDecl() const { return First; }. Missing separate debuginfos, use: dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x3084990, isTransient=true) at /build/davidlt/root/core/metacling/src/T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:1356,deployability,build,build,1356,"ling/include -I/build/davidlt/build/include TClassDocOutput.h TDocDirective.h TDocInfo.h TDocOutput.h TDocParser.h THtml.h /build/davidlt/root/html/inc/LinkDef.h. Missing separate debuginfos, use: dnf debuginfo-install glibc-2.25-5.fc26.x86_64. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". Detaching after fork from child process 62. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. 159	 const decl_type *getFirstDecl() const { return First; }. Missing separate debuginfos, use: dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x3084990, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2237. #5 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x3084990, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #6 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x3084990, point",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:1536,deployability,build,build,1536,"debuginfos, use: dnf debuginfo-install glibc-2.25-5.fc26.x86_64. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". Detaching after fork from child process 62. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. 159	 const decl_type *getFirstDecl() const { return First; }. Missing separate debuginfos, use: dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x3084990, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2237. #5 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x3084990, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #6 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:1709,deployability,build,build,1709,"etaching after fork from child process 62. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. 159	 const decl_type *getFirstDecl() const { return First; }. Missing separate debuginfos, use: dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x3084990, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2237. #5 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x3084990, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #6 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts"", add=0x138, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:851. #8 0x00007ffff1174e44 in TCling::InspectMembers ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:1898,deployability,build,build,1898,"s=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. 159	 const decl_type *getFirstDecl() const { return First; }. Missing separate debuginfos, use: dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x3084990, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2237. #5 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x3084990, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #6 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts"", add=0x138, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:851. #8 0x00007ffff1174e44 in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x1a934a0, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2362. #9 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x1a934a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:2078,deployability,build,build,2078," debuginfos, use: dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x3084990, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2237. #5 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x3084990, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #6 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts"", add=0x138, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:851. #8 0x00007ffff1174e44 in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x1a934a0, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2362. #9 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x1a934a0, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #10 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x1a934a0, pointer=0x0, isTransi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:2240,deployability,build,build,2240," bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x3084990, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2237. #5 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x3084990, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #6 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts"", add=0x138, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:851. #8 0x00007ffff1174e44 in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x1a934a0, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2362. #9 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x1a934a0, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #10 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x1a934a0, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #11 0x00007fffefe431b4 in TProtoClass::TProtoClass (this=0x305f4f0, cl=0x1a934a0) at /build/davidl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:2323,deployability,Build,BuildRealData,2323,"FirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x3084990, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2237. #5 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x3084990, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #6 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts"", add=0x138, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:851. #8 0x00007ffff1174e44 in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x1a934a0, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2362. #9 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x1a934a0, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #10 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x1a934a0, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #11 0x00007fffefe431b4 in TProtoClass::TProtoClass (this=0x305f4f0, cl=0x1a934a0) at /build/davidlt/root/core/meta/src/TProtoClass.cxx:67. #12 0x00007ffff7b44c50 in CloseStreamerInfoROO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:2389,deployability,build,build,2389,"src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x3084990, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2237. #5 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x3084990, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #6 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts"", add=0x138, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:851. #8 0x00007ffff1174e44 in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x1a934a0, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2362. #9 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x1a934a0, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #10 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x1a934a0, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #11 0x00007fffefe431b4 in TProtoClass::TProtoClass (this=0x305f4f0, cl=0x1a934a0) at /build/davidlt/root/core/meta/src/TProtoClass.cxx:67. #12 0x00007ffff7b44c50 in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /build/davidlt/root/io/root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:2615,deployability,build,build,2615,".h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x3084990, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2237. #5 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x3084990, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #6 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts"", add=0x138, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:851. #8 0x00007ffff1174e44 in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x1a934a0, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2362. #9 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x1a934a0, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #10 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x1a934a0, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #11 0x00007fffefe431b4 in TProtoClass::TProtoClass (this=0x305f4f0, cl=0x1a934a0) at /build/davidlt/root/core/meta/src/TProtoClass.cxx:67. #12 0x00007ffff7b44c50 in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /build/davidlt/root/io/rootpcm/src/rootclingIO.cxx:197. #13 0x00007ffff1147e1e in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:2919. #14 0x00007ffff11486a2 in GenerateFullDi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:2783,deployability,build,build,2783,"plate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x3084990, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2237. #5 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x3084990, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #6 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts"", add=0x138, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:851. #8 0x00007ffff1174e44 in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x1a934a0, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2362. #9 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x1a934a0, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #10 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x1a934a0, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #11 0x00007fffefe431b4 in TProtoClass::TProtoClass (this=0x305f4f0, cl=0x1a934a0) at /build/davidlt/root/core/meta/src/TProtoClass.cxx:67. #12 0x00007ffff7b44c50 in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /build/davidlt/root/io/rootpcm/src/rootclingIO.cxx:197. #13 0x00007ffff1147e1e in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:2919. #14 0x00007ffff11486a2 in GenerateFullDict (dictStream=..., interp=..., scan=..., ctorTypes=std::__cxx11::list = {...}, isSplit=false, isGenreflex=false, writeEmptyRootPCM=false) at /build/davidlt/root/core/d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:2945,deployability,build,build,2945,".cxx:4587. #4 0x00007ffff117457e in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x3084990, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2237. #5 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x3084990, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #6 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts"", add=0x138, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:851. #8 0x00007ffff1174e44 in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x1a934a0, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2362. #9 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x1a934a0, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #10 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x1a934a0, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #11 0x00007fffefe431b4 in TProtoClass::TProtoClass (this=0x305f4f0, cl=0x1a934a0) at /build/davidlt/root/core/meta/src/TProtoClass.cxx:67. #12 0x00007ffff7b44c50 in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /build/davidlt/root/io/rootpcm/src/rootclingIO.cxx:197. #13 0x00007ffff1147e1e in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:2919. #14 0x00007ffff11486a2 in GenerateFullDict (dictStream=..., interp=..., scan=..., ctorTypes=std::__cxx11::list = {...}, isSplit=false, isGenreflex=false, writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:3050. #15 0x00007ffff115295f in RootClingMain (argc=24, argv=0x7fffffffe3c8, isDeep=false, isGenreflex=false) at /build/davidlt/root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:3029,deployability,Build,BuildRealData,3029,"=0x0, cl=0x3084990, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2237. #5 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x3084990, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #6 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts"", add=0x138, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:851. #8 0x00007ffff1174e44 in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x1a934a0, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2362. #9 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x1a934a0, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #10 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x1a934a0, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #11 0x00007fffefe431b4 in TProtoClass::TProtoClass (this=0x305f4f0, cl=0x1a934a0) at /build/davidlt/root/core/meta/src/TProtoClass.cxx:67. #12 0x00007ffff7b44c50 in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /build/davidlt/root/io/rootpcm/src/rootclingIO.cxx:197. #13 0x00007ffff1147e1e in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:2919. #14 0x00007ffff11486a2 in GenerateFullDict (dictStream=..., interp=..., scan=..., ctorTypes=std::__cxx11::list = {...}, isSplit=false, isGenreflex=false, writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:3050. #15 0x00007ffff115295f in RootClingMain (argc=24, argv=0x7fffffffe3c8, isDeep=false, isGenreflex=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:4723. #16 0x00007ffff1157fba in ROOT_rootcling_Driv",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:3095,deployability,build,build,3095,"ore/metacling/src/TCling.cxx:2237. #5 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x3084990, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #6 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts"", add=0x138, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:851. #8 0x00007ffff1174e44 in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x1a934a0, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2362. #9 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x1a934a0, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #10 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x1a934a0, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #11 0x00007fffefe431b4 in TProtoClass::TProtoClass (this=0x305f4f0, cl=0x1a934a0) at /build/davidlt/root/core/meta/src/TProtoClass.cxx:67. #12 0x00007ffff7b44c50 in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /build/davidlt/root/io/rootpcm/src/rootclingIO.cxx:197. #13 0x00007ffff1147e1e in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:2919. #14 0x00007ffff11486a2 in GenerateFullDict (dictStream=..., interp=..., scan=..., ctorTypes=std::__cxx11::list = {...}, isSplit=false, isGenreflex=false, writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:3050. #15 0x00007ffff115295f in RootClingMain (argc=24, argv=0x7fffffffe3c8, isDeep=false, isGenreflex=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:4723. #16 0x00007ffff1157fba in ROOT_rootcling_Driver (argc=24, argv=0x7fffffffe3c8, config=...) at /build/davidl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:3231,deployability,build,build,3231,") at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #6 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts"", add=0x138, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:851. #8 0x00007ffff1174e44 in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x1a934a0, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2362. #9 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x1a934a0, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #10 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x1a934a0, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #11 0x00007fffefe431b4 in TProtoClass::TProtoClass (this=0x305f4f0, cl=0x1a934a0) at /build/davidlt/root/core/meta/src/TProtoClass.cxx:67. #12 0x00007ffff7b44c50 in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /build/davidlt/root/io/rootpcm/src/rootclingIO.cxx:197. #13 0x00007ffff1147e1e in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:2919. #14 0x00007ffff11486a2 in GenerateFullDict (dictStream=..., interp=..., scan=..., ctorTypes=std::__cxx11::list = {...}, isSplit=false, isGenreflex=false, writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:3050. #15 0x00007ffff115295f in RootClingMain (argc=24, argv=0x7fffffffe3c8, isDeep=false, isGenreflex=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:4723. #16 0x00007ffff1157fba in ROOT_rootcling_Driver (argc=24, argv=0x7fffffffe3c8, config=...) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:5910. #17 0x0000000000400bbc in main (argc=24, argv=0x7fffffffe3c8) at /build/davidlt/root/ma",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:3366,deployability,build,build,3366,"fe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts"", add=0x138, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:851. #8 0x00007ffff1174e44 in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x1a934a0, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2362. #9 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x1a934a0, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #10 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x1a934a0, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #11 0x00007fffefe431b4 in TProtoClass::TProtoClass (this=0x305f4f0, cl=0x1a934a0) at /build/davidlt/root/core/meta/src/TProtoClass.cxx:67. #12 0x00007ffff7b44c50 in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /build/davidlt/root/io/rootpcm/src/rootclingIO.cxx:197. #13 0x00007ffff1147e1e in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:2919. #14 0x00007ffff11486a2 in GenerateFullDict (dictStream=..., interp=..., scan=..., ctorTypes=std::__cxx11::list = {...}, isSplit=false, isGenreflex=false, writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:3050. #15 0x00007ffff115295f in RootClingMain (argc=24, argv=0x7fffffffe3c8, isDeep=false, isGenreflex=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:4723. #16 0x00007ffff1157fba in ROOT_rootcling_Driver (argc=24, argv=0x7fffffffe3c8, config=...) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:5910. #17 0x0000000000400bbc in main (argc=24, argv=0x7fffffffe3c8) at /build/davidlt/root/main/src/rootcling.cxx:46. ```. `clang::Redeclarable` has a bad address.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:3517,deployability,build,build,3517,"fe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts"", add=0x138, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:851. #8 0x00007ffff1174e44 in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x1a934a0, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2362. #9 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x1a934a0, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #10 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x1a934a0, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #11 0x00007fffefe431b4 in TProtoClass::TProtoClass (this=0x305f4f0, cl=0x1a934a0) at /build/davidlt/root/core/meta/src/TProtoClass.cxx:67. #12 0x00007ffff7b44c50 in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /build/davidlt/root/io/rootpcm/src/rootclingIO.cxx:197. #13 0x00007ffff1147e1e in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:2919. #14 0x00007ffff11486a2 in GenerateFullDict (dictStream=..., interp=..., scan=..., ctorTypes=std::__cxx11::list = {...}, isSplit=false, isGenreflex=false, writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:3050. #15 0x00007ffff115295f in RootClingMain (argc=24, argv=0x7fffffffe3c8, isDeep=false, isGenreflex=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:4723. #16 0x00007ffff1157fba in ROOT_rootcling_Driver (argc=24, argv=0x7fffffffe3c8, config=...) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:5910. #17 0x0000000000400bbc in main (argc=24, argv=0x7fffffffe3c8) at /build/davidlt/root/main/src/rootcling.cxx:46. ```. `clang::Redeclarable` has a bad address.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:3761,deployability,build,build,3761,"fe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts"", add=0x138, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:851. #8 0x00007ffff1174e44 in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x1a934a0, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2362. #9 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x1a934a0, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #10 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x1a934a0, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #11 0x00007fffefe431b4 in TProtoClass::TProtoClass (this=0x305f4f0, cl=0x1a934a0) at /build/davidlt/root/core/meta/src/TProtoClass.cxx:67. #12 0x00007ffff7b44c50 in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /build/davidlt/root/io/rootpcm/src/rootclingIO.cxx:197. #13 0x00007ffff1147e1e in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:2919. #14 0x00007ffff11486a2 in GenerateFullDict (dictStream=..., interp=..., scan=..., ctorTypes=std::__cxx11::list = {...}, isSplit=false, isGenreflex=false, writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:3050. #15 0x00007ffff115295f in RootClingMain (argc=24, argv=0x7fffffffe3c8, isDeep=false, isGenreflex=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:4723. #16 0x00007ffff1157fba in ROOT_rootcling_Driver (argc=24, argv=0x7fffffffe3c8, config=...) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:5910. #17 0x0000000000400bbc in main (argc=24, argv=0x7fffffffe3c8) at /build/davidlt/root/main/src/rootcling.cxx:46. ```. `clang::Redeclarable` has a bad address.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:3930,deployability,build,build,3930,"fe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts"", add=0x138, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:851. #8 0x00007ffff1174e44 in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x1a934a0, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2362. #9 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x1a934a0, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #10 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x1a934a0, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #11 0x00007fffefe431b4 in TProtoClass::TProtoClass (this=0x305f4f0, cl=0x1a934a0) at /build/davidlt/root/core/meta/src/TProtoClass.cxx:67. #12 0x00007ffff7b44c50 in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /build/davidlt/root/io/rootpcm/src/rootclingIO.cxx:197. #13 0x00007ffff1147e1e in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:2919. #14 0x00007ffff11486a2 in GenerateFullDict (dictStream=..., interp=..., scan=..., ctorTypes=std::__cxx11::list = {...}, isSplit=false, isGenreflex=false, writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:3050. #15 0x00007ffff115295f in RootClingMain (argc=24, argv=0x7fffffffe3c8, isDeep=false, isGenreflex=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:4723. #16 0x00007ffff1157fba in ROOT_rootcling_Driver (argc=24, argv=0x7fffffffe3c8, config=...) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:5910. #17 0x0000000000400bbc in main (argc=24, argv=0x7fffffffe3c8) at /build/davidlt/root/main/src/rootcling.cxx:46. ```. `clang::Redeclarable` has a bad address.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:4086,deployability,build,build,4086,"fe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts"", add=0x138, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:851. #8 0x00007ffff1174e44 in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x1a934a0, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2362. #9 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x1a934a0, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #10 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x1a934a0, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #11 0x00007fffefe431b4 in TProtoClass::TProtoClass (this=0x305f4f0, cl=0x1a934a0) at /build/davidlt/root/core/meta/src/TProtoClass.cxx:67. #12 0x00007ffff7b44c50 in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /build/davidlt/root/io/rootpcm/src/rootclingIO.cxx:197. #13 0x00007ffff1147e1e in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:2919. #14 0x00007ffff11486a2 in GenerateFullDict (dictStream=..., interp=..., scan=..., ctorTypes=std::__cxx11::list = {...}, isSplit=false, isGenreflex=false, writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:3050. #15 0x00007ffff115295f in RootClingMain (argc=24, argv=0x7fffffffe3c8, isDeep=false, isGenreflex=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:4723. #16 0x00007ffff1157fba in ROOT_rootcling_Driver (argc=24, argv=0x7fffffffe3c8, config=...) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:5910. #17 0x0000000000400bbc in main (argc=24, argv=0x7fffffffe3c8) at /build/davidlt/root/main/src/rootcling.cxx:46. ```. `clang::Redeclarable` has a bad address.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:4213,deployability,build,build,4213,"fe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts"", add=0x138, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:851. #8 0x00007ffff1174e44 in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x1a934a0, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2362. #9 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x1a934a0, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #10 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x1a934a0, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #11 0x00007fffefe431b4 in TProtoClass::TProtoClass (this=0x305f4f0, cl=0x1a934a0) at /build/davidlt/root/core/meta/src/TProtoClass.cxx:67. #12 0x00007ffff7b44c50 in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /build/davidlt/root/io/rootpcm/src/rootclingIO.cxx:197. #13 0x00007ffff1147e1e in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:2919. #14 0x00007ffff11486a2 in GenerateFullDict (dictStream=..., interp=..., scan=..., ctorTypes=std::__cxx11::list = {...}, isSplit=false, isGenreflex=false, writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:3050. #15 0x00007ffff115295f in RootClingMain (argc=24, argv=0x7fffffffe3c8, isDeep=false, isGenreflex=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:4723. #16 0x00007ffff1157fba in ROOT_rootcling_Driver (argc=24, argv=0x7fffffffe3c8, config=...) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:5910. #17 0x0000000000400bbc in main (argc=24, argv=0x7fffffffe3c8) at /build/davidlt/root/main/src/rootcling.cxx:46. ```. `clang::Redeclarable` has a bad address.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:801,energy efficiency,fault,fault,801,"Here are more details on where segfault happens:. ```. Starting program: /build/davidlt/build/bin/rootcling -rootbuild -f G__Html.cxx -s /build/davidlt/build/lib/libHtml.so -excludePath /build/davidlt/root -excludePath /build/davidlt/build -rml libHtml.so -rmf /build/davidlt/build/lib/libHtml.rootmap -I/build/davidlt/root -I/build/davidlt/root/interpreter/cling/include -I/build/davidlt/build/include TClassDocOutput.h TDocDirective.h TDocInfo.h TDocOutput.h TDocParser.h THtml.h /build/davidlt/root/html/inc/LinkDef.h. Missing separate debuginfos, use: dnf debuginfo-install glibc-2.25-5.fc26.x86_64. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". Detaching after fork from child process 62. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. 159	 const decl_type *getFirstDecl() const { return First; }. Missing separate debuginfos, use: dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectM",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:1917,energy efficiency,core,core,1917,"davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. 159	 const decl_type *getFirstDecl() const { return First; }. Missing separate debuginfos, use: dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x3084990, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2237. #5 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x3084990, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #6 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts"", add=0x138, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:851. #8 0x00007ffff1174e44 in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x1a934a0, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2362. #9 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x1a934a0, obj=0x0, insp=.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:2097,energy efficiency,core,core,2097,"dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x3084990, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2237. #5 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x3084990, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #6 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts"", add=0x138, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:851. #8 0x00007ffff1174e44 in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x1a934a0, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2362. #9 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x1a934a0, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #10 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x1a934a0, pointer=0x0, isTransient=true) at /buil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:2259,energy efficiency,core,core,2259,"f103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x3084990, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2237. #5 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x3084990, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #6 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts"", add=0x138, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:851. #8 0x00007ffff1174e44 in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x1a934a0, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2362. #9 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x1a934a0, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #10 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x1a934a0, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #11 0x00007fffefe431b4 in TProtoClass::TProtoClass (this=0x305f4f0, cl=0x1a934a0) at /build/davidlt/root/core/meta/s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:2408,energy efficiency,core,core,2408,"clude/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x3084990, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2237. #5 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x3084990, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #6 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts"", add=0x138, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:851. #8 0x00007ffff1174e44 in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x1a934a0, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2362. #9 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x1a934a0, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #10 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x1a934a0, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #11 0x00007fffefe431b4 in TProtoClass::TProtoClass (this=0x305f4f0, cl=0x1a934a0) at /build/davidlt/root/core/meta/src/TProtoClass.cxx:67. #12 0x00007ffff7b44c50 in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /build/davidlt/root/io/rootpcm/src/rootclingI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:2634,energy efficiency,core,core,2634,"ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x3084990, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2237. #5 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x3084990, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #6 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts"", add=0x138, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:851. #8 0x00007ffff1174e44 in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x1a934a0, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2362. #9 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x1a934a0, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #10 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x1a934a0, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #11 0x00007fffefe431b4 in TProtoClass::TProtoClass (this=0x305f4f0, cl=0x1a934a0) at /build/davidlt/root/core/meta/src/TProtoClass.cxx:67. #12 0x00007ffff7b44c50 in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /build/davidlt/root/io/rootpcm/src/rootclingIO.cxx:197. #13 0x00007ffff1147e1e in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:2919. #14 0x00007ffff11486a2 in GenerateFullDict (dictStream=...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:2802,energy efficiency,core,core,2802,"x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x3084990, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2237. #5 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x3084990, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #6 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts"", add=0x138, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:851. #8 0x00007ffff1174e44 in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x1a934a0, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2362. #9 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x1a934a0, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #10 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x1a934a0, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #11 0x00007fffefe431b4 in TProtoClass::TProtoClass (this=0x305f4f0, cl=0x1a934a0) at /build/davidlt/root/core/meta/src/TProtoClass.cxx:67. #12 0x00007ffff7b44c50 in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /build/davidlt/root/io/rootpcm/src/rootclingIO.cxx:197. #13 0x00007ffff1147e1e in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:2919. #14 0x00007ffff11486a2 in GenerateFullDict (dictStream=..., interp=..., scan=..., ctorTypes=std::__cxx11::list = {...}, isSplit=false, isGenreflex=false, writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:2964,energy efficiency,core,core,2964,"007ffff117457e in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x3084990, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2237. #5 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x3084990, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #6 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts"", add=0x138, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:851. #8 0x00007ffff1174e44 in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x1a934a0, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2362. #9 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x1a934a0, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #10 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x1a934a0, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #11 0x00007fffefe431b4 in TProtoClass::TProtoClass (this=0x305f4f0, cl=0x1a934a0) at /build/davidlt/root/core/meta/src/TProtoClass.cxx:67. #12 0x00007ffff7b44c50 in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /build/davidlt/root/io/rootpcm/src/rootclingIO.cxx:197. #13 0x00007ffff1147e1e in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:2919. #14 0x00007ffff11486a2 in GenerateFullDict (dictStream=..., interp=..., scan=..., ctorTypes=std::__cxx11::list = {...}, isSplit=false, isGenreflex=false, writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:3050. #15 0x00007ffff115295f in RootClingMain (argc=24, argv=0x7fffffffe3c8, isDeep=false, isGenreflex=false) at /build/davidlt/root/core/dictgen/src/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:3114,energy efficiency,core,core,3114,"TCling.cxx:2237. #5 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x3084990, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #6 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts"", add=0x138, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:851. #8 0x00007ffff1174e44 in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x1a934a0, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2362. #9 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x1a934a0, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #10 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x1a934a0, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #11 0x00007fffefe431b4 in TProtoClass::TProtoClass (this=0x305f4f0, cl=0x1a934a0) at /build/davidlt/root/core/meta/src/TProtoClass.cxx:67. #12 0x00007ffff7b44c50 in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /build/davidlt/root/io/rootpcm/src/rootclingIO.cxx:197. #13 0x00007ffff1147e1e in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:2919. #14 0x00007ffff11486a2 in GenerateFullDict (dictStream=..., interp=..., scan=..., ctorTypes=std::__cxx11::list = {...}, isSplit=false, isGenreflex=false, writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:3050. #15 0x00007ffff115295f in RootClingMain (argc=24, argv=0x7fffffffe3c8, isDeep=false, isGenreflex=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:4723. #16 0x00007ffff1157fba in ROOT_rootcling_Driver (argc=24, argv=0x7fffffffe3c8, config=...) at /build/davidlt/root/core/dictge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:3250,energy efficiency,core,core,3250,"t/root/core/meta/src/TClass.cxx:2137. #6 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts"", add=0x138, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:851. #8 0x00007ffff1174e44 in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x1a934a0, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2362. #9 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x1a934a0, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #10 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x1a934a0, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #11 0x00007fffefe431b4 in TProtoClass::TProtoClass (this=0x305f4f0, cl=0x1a934a0) at /build/davidlt/root/core/meta/src/TProtoClass.cxx:67. #12 0x00007ffff7b44c50 in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /build/davidlt/root/io/rootpcm/src/rootclingIO.cxx:197. #13 0x00007ffff1147e1e in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:2919. #14 0x00007ffff11486a2 in GenerateFullDict (dictStream=..., interp=..., scan=..., ctorTypes=std::__cxx11::list = {...}, isSplit=false, isGenreflex=false, writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:3050. #15 0x00007ffff115295f in RootClingMain (argc=24, argv=0x7fffffffe3c8, isDeep=false, isGenreflex=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:4723. #16 0x00007ffff1157fba in ROOT_rootcling_Driver (argc=24, argv=0x7fffffffe3c8, config=...) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:5910. #17 0x0000000000400bbc in main (argc=24, argv=0x7fffffffe3c8) at /build/davidlt/root/main/src/rootcling.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:3536,energy efficiency,core,core,3536,"fe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts"", add=0x138, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:851. #8 0x00007ffff1174e44 in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x1a934a0, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2362. #9 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x1a934a0, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #10 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x1a934a0, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #11 0x00007fffefe431b4 in TProtoClass::TProtoClass (this=0x305f4f0, cl=0x1a934a0) at /build/davidlt/root/core/meta/src/TProtoClass.cxx:67. #12 0x00007ffff7b44c50 in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /build/davidlt/root/io/rootpcm/src/rootclingIO.cxx:197. #13 0x00007ffff1147e1e in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:2919. #14 0x00007ffff11486a2 in GenerateFullDict (dictStream=..., interp=..., scan=..., ctorTypes=std::__cxx11::list = {...}, isSplit=false, isGenreflex=false, writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:3050. #15 0x00007ffff115295f in RootClingMain (argc=24, argv=0x7fffffffe3c8, isDeep=false, isGenreflex=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:4723. #16 0x00007ffff1157fba in ROOT_rootcling_Driver (argc=24, argv=0x7fffffffe3c8, config=...) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:5910. #17 0x0000000000400bbc in main (argc=24, argv=0x7fffffffe3c8) at /build/davidlt/root/main/src/rootcling.cxx:46. ```. `clang::Redeclarable` has a bad address.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:3780,energy efficiency,core,core,3780,"fe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts"", add=0x138, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:851. #8 0x00007ffff1174e44 in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x1a934a0, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2362. #9 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x1a934a0, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #10 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x1a934a0, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #11 0x00007fffefe431b4 in TProtoClass::TProtoClass (this=0x305f4f0, cl=0x1a934a0) at /build/davidlt/root/core/meta/src/TProtoClass.cxx:67. #12 0x00007ffff7b44c50 in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /build/davidlt/root/io/rootpcm/src/rootclingIO.cxx:197. #13 0x00007ffff1147e1e in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:2919. #14 0x00007ffff11486a2 in GenerateFullDict (dictStream=..., interp=..., scan=..., ctorTypes=std::__cxx11::list = {...}, isSplit=false, isGenreflex=false, writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:3050. #15 0x00007ffff115295f in RootClingMain (argc=24, argv=0x7fffffffe3c8, isDeep=false, isGenreflex=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:4723. #16 0x00007ffff1157fba in ROOT_rootcling_Driver (argc=24, argv=0x7fffffffe3c8, config=...) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:5910. #17 0x0000000000400bbc in main (argc=24, argv=0x7fffffffe3c8) at /build/davidlt/root/main/src/rootcling.cxx:46. ```. `clang::Redeclarable` has a bad address.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:3949,energy efficiency,core,core,3949,"fe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts"", add=0x138, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:851. #8 0x00007ffff1174e44 in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x1a934a0, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2362. #9 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x1a934a0, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #10 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x1a934a0, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #11 0x00007fffefe431b4 in TProtoClass::TProtoClass (this=0x305f4f0, cl=0x1a934a0) at /build/davidlt/root/core/meta/src/TProtoClass.cxx:67. #12 0x00007ffff7b44c50 in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /build/davidlt/root/io/rootpcm/src/rootclingIO.cxx:197. #13 0x00007ffff1147e1e in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:2919. #14 0x00007ffff11486a2 in GenerateFullDict (dictStream=..., interp=..., scan=..., ctorTypes=std::__cxx11::list = {...}, isSplit=false, isGenreflex=false, writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:3050. #15 0x00007ffff115295f in RootClingMain (argc=24, argv=0x7fffffffe3c8, isDeep=false, isGenreflex=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:4723. #16 0x00007ffff1157fba in ROOT_rootcling_Driver (argc=24, argv=0x7fffffffe3c8, config=...) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:5910. #17 0x0000000000400bbc in main (argc=24, argv=0x7fffffffe3c8) at /build/davidlt/root/main/src/rootcling.cxx:46. ```. `clang::Redeclarable` has a bad address.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:4105,energy efficiency,core,core,4105,"fe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts"", add=0x138, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:851. #8 0x00007ffff1174e44 in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x1a934a0, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2362. #9 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x1a934a0, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #10 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x1a934a0, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #11 0x00007fffefe431b4 in TProtoClass::TProtoClass (this=0x305f4f0, cl=0x1a934a0) at /build/davidlt/root/core/meta/src/TProtoClass.cxx:67. #12 0x00007ffff7b44c50 in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /build/davidlt/root/io/rootpcm/src/rootclingIO.cxx:197. #13 0x00007ffff1147e1e in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:2919. #14 0x00007ffff11486a2 in GenerateFullDict (dictStream=..., interp=..., scan=..., ctorTypes=std::__cxx11::list = {...}, isSplit=false, isGenreflex=false, writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:3050. #15 0x00007ffff115295f in RootClingMain (argc=24, argv=0x7fffffffe3c8, isDeep=false, isGenreflex=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:4723. #16 0x00007ffff1157fba in ROOT_rootcling_Driver (argc=24, argv=0x7fffffffe3c8, config=...) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:5910. #17 0x0000000000400bbc in main (argc=24, argv=0x7fffffffe3c8) at /build/davidlt/root/main/src/rootcling.cxx:46. ```. `clang::Redeclarable` has a bad address.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:801,performance,fault,fault,801,"Here are more details on where segfault happens:. ```. Starting program: /build/davidlt/build/bin/rootcling -rootbuild -f G__Html.cxx -s /build/davidlt/build/lib/libHtml.so -excludePath /build/davidlt/root -excludePath /build/davidlt/build -rml libHtml.so -rmf /build/davidlt/build/lib/libHtml.rootmap -I/build/davidlt/root -I/build/davidlt/root/interpreter/cling/include -I/build/davidlt/build/include TClassDocOutput.h TDocDirective.h TDocInfo.h TDocOutput.h TDocParser.h THtml.h /build/davidlt/root/html/inc/LinkDef.h. Missing separate debuginfos, use: dnf debuginfo-install glibc-2.25-5.fc26.x86_64. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". Detaching after fork from child process 62. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. 159	 const decl_type *getFirstDecl() const { return First; }. Missing separate debuginfos, use: dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectM",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:801,reliability,fault,fault,801,"Here are more details on where segfault happens:. ```. Starting program: /build/davidlt/build/bin/rootcling -rootbuild -f G__Html.cxx -s /build/davidlt/build/lib/libHtml.so -excludePath /build/davidlt/root -excludePath /build/davidlt/build -rml libHtml.so -rmf /build/davidlt/build/lib/libHtml.rootmap -I/build/davidlt/root -I/build/davidlt/root/interpreter/cling/include -I/build/davidlt/build/include TClassDocOutput.h TDocDirective.h TDocInfo.h TDocOutput.h TDocParser.h THtml.h /build/davidlt/root/html/inc/LinkDef.h. Missing separate debuginfos, use: dnf debuginfo-install glibc-2.25-5.fc26.x86_64. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". Detaching after fork from child process 62. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. 159	 const decl_type *getFirstDecl() const { return First; }. Missing separate debuginfos, use: dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectM",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:801,safety,fault,fault,801,"Here are more details on where segfault happens:. ```. Starting program: /build/davidlt/build/bin/rootcling -rootbuild -f G__Html.cxx -s /build/davidlt/build/lib/libHtml.so -excludePath /build/davidlt/root -excludePath /build/davidlt/build -rml libHtml.so -rmf /build/davidlt/build/lib/libHtml.rootmap -I/build/davidlt/root -I/build/davidlt/root/interpreter/cling/include -I/build/davidlt/build/include TClassDocOutput.h TDocDirective.h TDocInfo.h TDocOutput.h TDocParser.h THtml.h /build/davidlt/root/html/inc/LinkDef.h. Missing separate debuginfos, use: dnf debuginfo-install glibc-2.25-5.fc26.x86_64. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". Detaching after fork from child process 62. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. 159	 const decl_type *getFirstDecl() const { return First; }. Missing separate debuginfos, use: dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectM",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:1863,safety,input,input,1863,"bleTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. 159	 const decl_type *getFirstDecl() const { return First; }. Missing separate debuginfos, use: dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x3084990, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2237. #5 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x3084990, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #6 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts"", add=0x138, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:851. #8 0x00007ffff1174e44 in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x1a934a0, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2362. #9 0x00007fffefe107d6 in TCl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:772,security,sign,signal,772,"Here are more details on where segfault happens:. ```. Starting program: /build/davidlt/build/bin/rootcling -rootbuild -f G__Html.cxx -s /build/davidlt/build/lib/libHtml.so -excludePath /build/davidlt/root -excludePath /build/davidlt/build -rml libHtml.so -rmf /build/davidlt/build/lib/libHtml.rootmap -I/build/davidlt/root -I/build/davidlt/root/interpreter/cling/include -I/build/davidlt/build/include TClassDocOutput.h TDocDirective.h TDocInfo.h TDocOutput.h TDocParser.h THtml.h /build/davidlt/root/html/inc/LinkDef.h. Missing separate debuginfos, use: dnf debuginfo-install glibc-2.25-5.fc26.x86_64. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". Detaching after fork from child process 62. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. 159	 const decl_type *getFirstDecl() const { return First; }. Missing separate debuginfos, use: dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectM",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:953,usability,tool,tools,953,"Here are more details on where segfault happens:. ```. Starting program: /build/davidlt/build/bin/rootcling -rootbuild -f G__Html.cxx -s /build/davidlt/build/lib/libHtml.so -excludePath /build/davidlt/root -excludePath /build/davidlt/build -rml libHtml.so -rmf /build/davidlt/build/lib/libHtml.rootmap -I/build/davidlt/root -I/build/davidlt/root/interpreter/cling/include -I/build/davidlt/build/include TClassDocOutput.h TDocDirective.h TDocInfo.h TDocOutput.h TDocParser.h THtml.h /build/davidlt/root/html/inc/LinkDef.h. Missing separate debuginfos, use: dnf debuginfo-install glibc-2.25-5.fc26.x86_64. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". Detaching after fork from child process 62. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. 159	 const decl_type *getFirstDecl() const { return First; }. Missing separate debuginfos, use: dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectM",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:1396,usability,tool,tools,1396,"ude TClassDocOutput.h TDocDirective.h TDocInfo.h TDocOutput.h TDocParser.h THtml.h /build/davidlt/root/html/inc/LinkDef.h. Missing separate debuginfos, use: dnf debuginfo-install glibc-2.25-5.fc26.x86_64. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". Detaching after fork from child process 62. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. 159	 const decl_type *getFirstDecl() const { return First; }. Missing separate debuginfos, use: dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x3084990, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2237. #5 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x3084990, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #6 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:1576,usability,tool,tools,1576,"libc-2.25-5.fc26.x86_64. [Thread debugging using libthread_db enabled]. Using host libthread_db library ""/lib64/libthread_db.so.1"". Detaching after fork from child process 62. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. 159	 const decl_type *getFirstDecl() const { return First; }. Missing separate debuginfos, use: dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x3084990, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2237. #5 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x3084990, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #6 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:1749,usability,tool,tools,1749,"2. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. 159	 const decl_type *getFirstDecl() const { return First; }. Missing separate debuginfos, use: dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x3084990, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2237. #5 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x3084990, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #6 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts"", add=0x138, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:851. #8 0x00007ffff1174e44 in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:1863,usability,input,input,1863,"bleTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. 159	 const decl_type *getFirstDecl() const { return First; }. Missing separate debuginfos, use: dnf debuginfo-install libgcc-7.1.1-2.fc26.x86_64 libstdc++-7.1.1-2.fc26.x86_64 sssd-client-1.15.2-5.fc26.x86_64 zlib-1.2.11-2.fc26.x86_64. (gdb) bt. #0 0x00007ffff103ee92 in clang::Redeclarable<clang::RedeclarableTemplateDecl>::getFirstDecl (this=0x38) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Redeclarable.h:159. #1 0x00007ffff103bfa6 in clang::RedeclarableTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:828. #2 0x00007ffff103c1b8 in clang::ClassTemplateDecl::getCanonicalDecl (this=0x0) at /build/davidlt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:2126. #3 0x00007ffff10319a4 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., instance=0x3044f50) at /build/davidlt/root/core/clingutils/src/TClingUtils.cxx:4587. #4 0x00007ffff117457e in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x3084990, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2237. #5 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x3084990, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #6 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts"", add=0x138, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:851. #8 0x00007ffff1174e44 in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x1a934a0, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2362. #9 0x00007fffefe107d6 in TCl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:3310,usability,Close,CloseStreamerInfoROOTFile,3310,"fe0fd69 in TClass::BuildRealData (this=0x3084990, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #7 0x00007fffefe09ffe in TBuildRealData::Inspect (this=0x7fffffffbba0, cl=0x1a934a0, pname=0x30743f0 """", mname=0x7fffffffb800 ""fMethodCounts"", add=0x138, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:851. #8 0x00007ffff1174e44 in TCling::InspectMembers (this=0x68dcc0, insp=..., obj=0x0, cl=0x1a934a0, isTransient=true) at /build/davidlt/root/core/metacling/src/TCling.cxx:2362. #9 0x00007fffefe107d6 in TClass::CallShowMembers (this=0x1a934a0, obj=0x0, insp=..., isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:2137. #10 0x00007fffefe0fd69 in TClass::BuildRealData (this=0x1a934a0, pointer=0x0, isTransient=true) at /build/davidlt/root/core/meta/src/TClass.cxx:1992. #11 0x00007fffefe431b4 in TProtoClass::TProtoClass (this=0x305f4f0, cl=0x1a934a0) at /build/davidlt/root/core/meta/src/TProtoClass.cxx:67. #12 0x00007ffff7b44c50 in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /build/davidlt/root/io/rootpcm/src/rootclingIO.cxx:197. #13 0x00007ffff1147e1e in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:2919. #14 0x00007ffff11486a2 in GenerateFullDict (dictStream=..., interp=..., scan=..., ctorTypes=std::__cxx11::list = {...}, isSplit=false, isGenreflex=false, writeEmptyRootPCM=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:3050. #15 0x00007ffff115295f in RootClingMain (argc=24, argv=0x7fffffffe3c8, isDeep=false, isGenreflex=false) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:4723. #16 0x00007ffff1157fba in ROOT_rootcling_Driver (argc=24, argv=0x7fffffffe3c8, config=...) at /build/davidlt/root/core/dictgen/src/rootcling_impl.cxx:5910. #17 0x0000000000400bbc in main (argc=24, argv=0x7fffffffe3c8) at /build/davidlt/root/main/src/rootcling.cxx:46. ```. `clang::Redeclarable` has a bad address.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:120,energy efficiency,reduc,reduced,120,It seems that `ROOT::TMetaUtils::ReSubstTemplateArg` couldn't find the `ClassTemplateDecl` it expected. Could we have a reduced example of the code that's being passed and mishandled by `TClingUtils.cxx:4587`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/623:163,deployability,build,build,163,As you said the `TSTdecl` has no specializations. It could be that it was not seen by the interpreter... Was it expecting some `llvm::`entity? I.e. On the working build what did it return?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/623
https://github.com/root-project/root/pull/624:31,availability,error,errors,31,"I hope, now I fix all spelling errors",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/624
https://github.com/root-project/root/pull/624:31,performance,error,errors,31,"I hope, now I fix all spelling errors",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/624
https://github.com/root-project/root/pull/624:31,safety,error,errors,31,"I hope, now I fix all spelling errors",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/624
https://github.com/root-project/root/pull/624:31,usability,error,errors,31,"I hope, now I fix all spelling errors",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/624
https://github.com/root-project/root/pull/625:11,deployability,build,build,11,@phsft-bot build with CMake flags -Dclingtest=On -Dvc=OFF -Dimt=ON -Dccache=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/625
https://github.com/root-project/root/pull/625:11,deployability,build,build,11,@phsft-bot build with flags -Dclingtest=On -Dvc=OFF -Dimt=ON -Dccache=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/625
https://github.com/root-project/root/pull/626:41,safety,test,test,41,"@amadio My plan was to cherrypick if the test on 6.10 branch was successful. Some of the fixes are identical, some are different and you have few more I didn't see.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/626
https://github.com/root-project/root/pull/626:99,security,ident,identical,99,"@amadio My plan was to cherrypick if the test on 6.10 branch was successful. Some of the fixes are identical, some are different and you have few more I didn't see.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/626
https://github.com/root-project/root/pull/626:11,testability,plan,plan,11,"@amadio My plan was to cherrypick if the test on 6.10 branch was successful. Some of the fixes are identical, some are different and you have few more I didn't see.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/626
https://github.com/root-project/root/pull/626:41,testability,test,test,41,"@amadio My plan was to cherrypick if the test on 6.10 branch was successful. Some of the fixes are identical, some are different and you have few more I didn't see.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/626
https://github.com/root-project/root/pull/626:89,testability,plan,planned,89,"@peremato No problem on my side. Just cherry-pick from either branch to the other as you planned, and feel free to cherry-pick from my branch as well. I will rebase and fix the remainder when you are done.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/626
https://github.com/root-project/root/pull/626:21,availability,failur,failures,21,"I'm merging this, as failures on Jenkins are not related to this PR, and clang-format wants to put a for loop and its body into a single line, so I'm ignoring it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/626
https://github.com/root-project/root/pull/626:21,deployability,fail,failures,21,"I'm merging this, as failures on Jenkins are not related to this PR, and clang-format wants to put a for loop and its body into a single line, so I'm ignoring it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/626
https://github.com/root-project/root/pull/626:79,interoperability,format,format,79,"I'm merging this, as failures on Jenkins are not related to this PR, and clang-format wants to put a for loop and its body into a single line, so I'm ignoring it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/626
https://github.com/root-project/root/pull/626:21,performance,failur,failures,21,"I'm merging this, as failures on Jenkins are not related to this PR, and clang-format wants to put a for loop and its body into a single line, so I'm ignoring it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/626
https://github.com/root-project/root/pull/626:21,reliability,fail,failures,21,"I'm merging this, as failures on Jenkins are not related to this PR, and clang-format wants to put a for loop and its body into a single line, so I'm ignoring it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/626
https://github.com/root-project/root/pull/627:53,integrability,sub,submit,53,It seems stuck. I am merging it and I will immediate submit a revert PR so that @lmoneta can still look at it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/627
https://github.com/root-project/root/pull/628:150,deployability,unload,unload,150,@marsupial The test projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make is likely related to recent change in cling related to unload. Could you take a look? Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/628
https://github.com/root-project/root/pull/628:15,safety,test,test,15,@marsupial The test projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make is likely related to recent change in cling related to unload. Could you take a look? Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/628
https://github.com/root-project/root/pull/628:15,testability,test,test,15,@marsupial The test projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make is likely related to recent change in cling related to unload. Could you take a look? Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/628
https://github.com/root-project/root/pull/628:21,deployability,fail,failing,21,"To be clear this was failing from the original LLVM update, not because of. https://github.com/root-project/cling/commit/aea1940093488a51f8f8a970f1b68facb3fab324 or https://github.com/root-project/cling/commit/70bf1a3e8b3760af657dd1f22b81195ee6b3adb6 ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/628
https://github.com/root-project/root/pull/628:52,deployability,updat,update,52,"To be clear this was failing from the original LLVM update, not because of. https://github.com/root-project/cling/commit/aea1940093488a51f8f8a970f1b68facb3fab324 or https://github.com/root-project/cling/commit/70bf1a3e8b3760af657dd1f22b81195ee6b3adb6 ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/628
https://github.com/root-project/root/pull/628:21,reliability,fail,failing,21,"To be clear this was failing from the original LLVM update, not because of. https://github.com/root-project/cling/commit/aea1940093488a51f8f8a970f1b68facb3fab324 or https://github.com/root-project/cling/commit/70bf1a3e8b3760af657dd1f22b81195ee6b3adb6 ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/628
https://github.com/root-project/root/pull/628:52,safety,updat,update,52,"To be clear this was failing from the original LLVM update, not because of. https://github.com/root-project/cling/commit/aea1940093488a51f8f8a970f1b68facb3fab324 or https://github.com/root-project/cling/commit/70bf1a3e8b3760af657dd1f22b81195ee6b3adb6 ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/628
https://github.com/root-project/root/pull/628:52,security,updat,update,52,"To be clear this was failing from the original LLVM update, not because of. https://github.com/root-project/cling/commit/aea1940093488a51f8f8a970f1b68facb3fab324 or https://github.com/root-project/cling/commit/70bf1a3e8b3760af657dd1f22b81195ee6b3adb6 ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/628
https://github.com/root-project/root/pull/628:6,usability,clear,clear,6,"To be clear this was failing from the original LLVM update, not because of. https://github.com/root-project/cling/commit/aea1940093488a51f8f8a970f1b68facb3fab324 or https://github.com/root-project/cling/commit/70bf1a3e8b3760af657dd1f22b81195ee6b3adb6 ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/628
https://github.com/root-project/root/pull/628:36,deployability,fail,failing,36,This PR is obsolete. I see the test failing today on [CDash](http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=376860). Closing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/628
https://github.com/root-project/root/pull/628:106,deployability,build,buildid,106,This PR is obsolete. I see the test failing today on [CDash](http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=376860). Closing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/628
https://github.com/root-project/root/pull/628:36,reliability,fail,failing,36,This PR is obsolete. I see the test failing today on [CDash](http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=376860). Closing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/628
https://github.com/root-project/root/pull/628:31,safety,test,test,31,This PR is obsolete. I see the test failing today on [CDash](http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=376860). Closing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/628
https://github.com/root-project/root/pull/628:31,testability,test,test,31,This PR is obsolete. I see the test failing today on [CDash](http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=376860). Closing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/628
https://github.com/root-project/root/pull/631:11,deployability,build,build,11,"@phsft-bot build with flags -Dclingtest=On -Dvc=OFF -Dimt=ON -Dccache=ON -DCMAKE_GENERATOR=""Unix Makefiles""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:11,deployability,build,build,11,@phsft-bot build with flags -Dclingtest=On -Dvc=OFF -Dimt=ON -Dccache=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:75,safety,review,review,75,"@marsupial, I do not understand that fix but I am sure @Axel-Naumann would review it. This is at least to make sure that works for ROOT, too. It seems, this is fixing the symptom. I think the real issue is that we are mishandling the way we extract decls at first place. See https://github.com/vgvassilev/cling/issues/124",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:21,testability,understand,understand,21,"@marsupial, I do not understand that fix but I am sure @Axel-Naumann would review it. This is at least to make sure that works for ROOT, too. It seems, this is fixing the symptom. I think the real issue is that we are mishandling the way we extract decls at first place. See https://github.com/vgvassilev/cling/issues/124",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:75,testability,review,review,75,"@marsupial, I do not understand that fix but I am sure @Axel-Naumann would review it. This is at least to make sure that works for ROOT, too. It seems, this is fixing the symptom. I think the real issue is that we are mishandling the way we extract decls at first place. See https://github.com/vgvassilev/cling/issues/124",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:535,availability,state,state,535,"Well https://github.com/root-project/cling/pull/148/commits/9313dbca01b00f1399b14b256925b3f99f0be97b fixes a real bug. Not everything has a destructor (or even needs to run it if it does). https://github.com/root-project/cling/pull/148/commits/6b550ad6d0b762adcdb07abbff27ddd5691ed7c1 just warns the user that capture by copy doesn't work. I understand there may be other issues with lambda's but generally capture by copy in general should not be supported at the global scope. 1. Because it would mean the entire program/Interpreter state would need to be held by the lambda. 2. It wouldn't be standard compliant:. ```. #include <stdio.h>. int Var = 42;. auto LC = [=] { return Var; };. int main(int argc, const char** argv) {. 	++Var;. 	printf(""%d\n"", LC());. 	return 0;. }. . ```. => 43",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:535,integrability,state,state,535,"Well https://github.com/root-project/cling/pull/148/commits/9313dbca01b00f1399b14b256925b3f99f0be97b fixes a real bug. Not everything has a destructor (or even needs to run it if it does). https://github.com/root-project/cling/pull/148/commits/6b550ad6d0b762adcdb07abbff27ddd5691ed7c1 just warns the user that capture by copy doesn't work. I understand there may be other issues with lambda's but generally capture by copy in general should not be supported at the global scope. 1. Because it would mean the entire program/Interpreter state would need to be held by the lambda. 2. It wouldn't be standard compliant:. ```. #include <stdio.h>. int Var = 42;. auto LC = [=] { return Var; };. int main(int argc, const char** argv) {. 	++Var;. 	printf(""%d\n"", LC());. 	return 0;. }. . ```. => 43",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:605,integrability,complian,compliant,605,"Well https://github.com/root-project/cling/pull/148/commits/9313dbca01b00f1399b14b256925b3f99f0be97b fixes a real bug. Not everything has a destructor (or even needs to run it if it does). https://github.com/root-project/cling/pull/148/commits/6b550ad6d0b762adcdb07abbff27ddd5691ed7c1 just warns the user that capture by copy doesn't work. I understand there may be other issues with lambda's but generally capture by copy in general should not be supported at the global scope. 1. Because it would mean the entire program/Interpreter state would need to be held by the lambda. 2. It wouldn't be standard compliant:. ```. #include <stdio.h>. int Var = 42;. auto LC = [=] { return Var; };. int main(int argc, const char** argv) {. 	++Var;. 	printf(""%d\n"", LC());. 	return 0;. }. . ```. => 43",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:596,interoperability,standard,standard,596,"Well https://github.com/root-project/cling/pull/148/commits/9313dbca01b00f1399b14b256925b3f99f0be97b fixes a real bug. Not everything has a destructor (or even needs to run it if it does). https://github.com/root-project/cling/pull/148/commits/6b550ad6d0b762adcdb07abbff27ddd5691ed7c1 just warns the user that capture by copy doesn't work. I understand there may be other issues with lambda's but generally capture by copy in general should not be supported at the global scope. 1. Because it would mean the entire program/Interpreter state would need to be held by the lambda. 2. It wouldn't be standard compliant:. ```. #include <stdio.h>. int Var = 42;. auto LC = [=] { return Var; };. int main(int argc, const char** argv) {. 	++Var;. 	printf(""%d\n"", LC());. 	return 0;. }. . ```. => 43",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:182,reliability,doe,does,182,"Well https://github.com/root-project/cling/pull/148/commits/9313dbca01b00f1399b14b256925b3f99f0be97b fixes a real bug. Not everything has a destructor (or even needs to run it if it does). https://github.com/root-project/cling/pull/148/commits/6b550ad6d0b762adcdb07abbff27ddd5691ed7c1 just warns the user that capture by copy doesn't work. I understand there may be other issues with lambda's but generally capture by copy in general should not be supported at the global scope. 1. Because it would mean the entire program/Interpreter state would need to be held by the lambda. 2. It wouldn't be standard compliant:. ```. #include <stdio.h>. int Var = 42;. auto LC = [=] { return Var; };. int main(int argc, const char** argv) {. 	++Var;. 	printf(""%d\n"", LC());. 	return 0;. }. . ```. => 43",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:326,reliability,doe,doesn,326,"Well https://github.com/root-project/cling/pull/148/commits/9313dbca01b00f1399b14b256925b3f99f0be97b fixes a real bug. Not everything has a destructor (or even needs to run it if it does). https://github.com/root-project/cling/pull/148/commits/6b550ad6d0b762adcdb07abbff27ddd5691ed7c1 just warns the user that capture by copy doesn't work. I understand there may be other issues with lambda's but generally capture by copy in general should not be supported at the global scope. 1. Because it would mean the entire program/Interpreter state would need to be held by the lambda. 2. It wouldn't be standard compliant:. ```. #include <stdio.h>. int Var = 42;. auto LC = [=] { return Var; };. int main(int argc, const char** argv) {. 	++Var;. 	printf(""%d\n"", LC());. 	return 0;. }. . ```. => 43",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:605,safety,compl,compliant,605,"Well https://github.com/root-project/cling/pull/148/commits/9313dbca01b00f1399b14b256925b3f99f0be97b fixes a real bug. Not everything has a destructor (or even needs to run it if it does). https://github.com/root-project/cling/pull/148/commits/6b550ad6d0b762adcdb07abbff27ddd5691ed7c1 just warns the user that capture by copy doesn't work. I understand there may be other issues with lambda's but generally capture by copy in general should not be supported at the global scope. 1. Because it would mean the entire program/Interpreter state would need to be held by the lambda. 2. It wouldn't be standard compliant:. ```. #include <stdio.h>. int Var = 42;. auto LC = [=] { return Var; };. int main(int argc, const char** argv) {. 	++Var;. 	printf(""%d\n"", LC());. 	return 0;. }. . ```. => 43",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:605,security,compl,compliant,605,"Well https://github.com/root-project/cling/pull/148/commits/9313dbca01b00f1399b14b256925b3f99f0be97b fixes a real bug. Not everything has a destructor (or even needs to run it if it does). https://github.com/root-project/cling/pull/148/commits/6b550ad6d0b762adcdb07abbff27ddd5691ed7c1 just warns the user that capture by copy doesn't work. I understand there may be other issues with lambda's but generally capture by copy in general should not be supported at the global scope. 1. Because it would mean the entire program/Interpreter state would need to be held by the lambda. 2. It wouldn't be standard compliant:. ```. #include <stdio.h>. int Var = 42;. auto LC = [=] { return Var; };. int main(int argc, const char** argv) {. 	++Var;. 	printf(""%d\n"", LC());. 	return 0;. }. . ```. => 43",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:342,testability,understand,understand,342,"Well https://github.com/root-project/cling/pull/148/commits/9313dbca01b00f1399b14b256925b3f99f0be97b fixes a real bug. Not everything has a destructor (or even needs to run it if it does). https://github.com/root-project/cling/pull/148/commits/6b550ad6d0b762adcdb07abbff27ddd5691ed7c1 just warns the user that capture by copy doesn't work. I understand there may be other issues with lambda's but generally capture by copy in general should not be supported at the global scope. 1. Because it would mean the entire program/Interpreter state would need to be held by the lambda. 2. It wouldn't be standard compliant:. ```. #include <stdio.h>. int Var = 42;. auto LC = [=] { return Var; };. int main(int argc, const char** argv) {. 	++Var;. 	printf(""%d\n"", LC());. 	return 0;. }. . ```. => 43",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:300,usability,user,user,300,"Well https://github.com/root-project/cling/pull/148/commits/9313dbca01b00f1399b14b256925b3f99f0be97b fixes a real bug. Not everything has a destructor (or even needs to run it if it does). https://github.com/root-project/cling/pull/148/commits/6b550ad6d0b762adcdb07abbff27ddd5691ed7c1 just warns the user that capture by copy doesn't work. I understand there may be other issues with lambda's but generally capture by copy in general should not be supported at the global scope. 1. Because it would mean the entire program/Interpreter state would need to be held by the lambda. 2. It wouldn't be standard compliant:. ```. #include <stdio.h>. int Var = 42;. auto LC = [=] { return Var; };. int main(int argc, const char** argv) {. 	++Var;. 	printf(""%d\n"", LC());. 	return 0;. }. . ```. => 43",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:448,usability,support,supported,448,"Well https://github.com/root-project/cling/pull/148/commits/9313dbca01b00f1399b14b256925b3f99f0be97b fixes a real bug. Not everything has a destructor (or even needs to run it if it does). https://github.com/root-project/cling/pull/148/commits/6b550ad6d0b762adcdb07abbff27ddd5691ed7c1 just warns the user that capture by copy doesn't work. I understand there may be other issues with lambda's but generally capture by copy in general should not be supported at the global scope. 1. Because it would mean the entire program/Interpreter state would need to be held by the lambda. 2. It wouldn't be standard compliant:. ```. #include <stdio.h>. int Var = 42;. auto LC = [=] { return Var; };. int main(int argc, const char** argv) {. 	++Var;. 	printf(""%d\n"", LC());. 	return 0;. }. . ```. => 43",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:220,deployability,depend,dependent,220,"Don't understand, 'happy with' what? I see the issue is that interpreter the behavior is a bit different than someone might reasonably expect and showing a warning is probably worthwhile. That is the current behavior is dependent on all variables in the Interpreter being globals, which is an implementation detail not known to all users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:200,energy efficiency,current,current,200,"Don't understand, 'happy with' what? I see the issue is that interpreter the behavior is a bit different than someone might reasonably expect and showing a warning is probably worthwhile. That is the current behavior is dependent on all variables in the Interpreter being globals, which is an implementation detail not known to all users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:220,integrability,depend,dependent,220,"Don't understand, 'happy with' what? I see the issue is that interpreter the behavior is a bit different than someone might reasonably expect and showing a warning is probably worthwhile. That is the current behavior is dependent on all variables in the Interpreter being globals, which is an implementation detail not known to all users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:220,modifiability,depend,dependent,220,"Don't understand, 'happy with' what? I see the issue is that interpreter the behavior is a bit different than someone might reasonably expect and showing a warning is probably worthwhile. That is the current behavior is dependent on all variables in the Interpreter being globals, which is an implementation detail not known to all users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:237,modifiability,variab,variables,237,"Don't understand, 'happy with' what? I see the issue is that interpreter the behavior is a bit different than someone might reasonably expect and showing a warning is probably worthwhile. That is the current behavior is dependent on all variables in the Interpreter being globals, which is an implementation detail not known to all users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:220,safety,depend,dependent,220,"Don't understand, 'happy with' what? I see the issue is that interpreter the behavior is a bit different than someone might reasonably expect and showing a warning is probably worthwhile. That is the current behavior is dependent on all variables in the Interpreter being globals, which is an implementation detail not known to all users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:6,testability,understand,understand,6,"Don't understand, 'happy with' what? I see the issue is that interpreter the behavior is a bit different than someone might reasonably expect and showing a warning is probably worthwhile. That is the current behavior is dependent on all variables in the Interpreter being globals, which is an implementation detail not known to all users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:220,testability,depend,dependent,220,"Don't understand, 'happy with' what? I see the issue is that interpreter the behavior is a bit different than someone might reasonably expect and showing a warning is probably worthwhile. That is the current behavior is dependent on all variables in the Interpreter being globals, which is an implementation detail not known to all users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:77,usability,behavi,behavior,77,"Don't understand, 'happy with' what? I see the issue is that interpreter the behavior is a bit different than someone might reasonably expect and showing a warning is probably worthwhile. That is the current behavior is dependent on all variables in the Interpreter being globals, which is an implementation detail not known to all users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:208,usability,behavi,behavior,208,"Don't understand, 'happy with' what? I see the issue is that interpreter the behavior is a bit different than someone might reasonably expect and showing a warning is probably worthwhile. That is the current behavior is dependent on all variables in the Interpreter being globals, which is an implementation detail not known to all users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:332,usability,user,users,332,"Don't understand, 'happy with' what? I see the issue is that interpreter the behavior is a bit different than someone might reasonably expect and showing a warning is probably worthwhile. That is the current behavior is dependent on all variables in the Interpreter being globals, which is an implementation detail not known to all users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:11,deployability,build,build,11,"@phsft-bot build with flags -Dclingtest=On -Dvc=OFF -Dimt=ON -Dccache=ON -DCMAKE_GENERATOR=""Unix Makefiles""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:583,deployability,automat,automatic,583,"In the current C++ working paper:. [expr.prim.lambda]/10: ""A lambda-expression whose smallest enclosing scope is a block scope (3.3.3) is a local lambda expression; any other lambda-expression shall not have a capture-default or simple-capture in its lambda-introducer."". As we decl-extract lambdas we should forbid capture-defaults. But we decl-extract after Sema. So indeed - a post-processing step makes sense, but it should complain about *any* capture default. [expr.prim.lambda]/11: ""An entity that is designated by a simple-capture...and shall be *this ... or a variable with automatic storage duration"": this should be noticeable by Sema, except for transactions that declare both the variable and the capture in the same input. So here, too, we'll need a postprocessing step - but it's not as urgent. @marsupial - do you think you could widen the first check (i.e. forbid *any* capture default)? And yes, we need https://github.com/root-project/cling/commit/9313dbca01b00f1399b14b256925b3f99f0be97b.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:7,energy efficiency,current,current,7,"In the current C++ working paper:. [expr.prim.lambda]/10: ""A lambda-expression whose smallest enclosing scope is a block scope (3.3.3) is a local lambda expression; any other lambda-expression shall not have a capture-default or simple-capture in its lambda-introducer."". As we decl-extract lambdas we should forbid capture-defaults. But we decl-extract after Sema. So indeed - a post-processing step makes sense, but it should complain about *any* capture default. [expr.prim.lambda]/11: ""An entity that is designated by a simple-capture...and shall be *this ... or a variable with automatic storage duration"": this should be noticeable by Sema, except for transactions that declare both the variable and the capture in the same input. So here, too, we'll need a postprocessing step - but it's not as urgent. @marsupial - do you think you could widen the first check (i.e. forbid *any* capture default)? And yes, we need https://github.com/root-project/cling/commit/9313dbca01b00f1399b14b256925b3f99f0be97b.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:569,modifiability,variab,variable,569,"In the current C++ working paper:. [expr.prim.lambda]/10: ""A lambda-expression whose smallest enclosing scope is a block scope (3.3.3) is a local lambda expression; any other lambda-expression shall not have a capture-default or simple-capture in its lambda-introducer."". As we decl-extract lambdas we should forbid capture-defaults. But we decl-extract after Sema. So indeed - a post-processing step makes sense, but it should complain about *any* capture default. [expr.prim.lambda]/11: ""An entity that is designated by a simple-capture...and shall be *this ... or a variable with automatic storage duration"": this should be noticeable by Sema, except for transactions that declare both the variable and the capture in the same input. So here, too, we'll need a postprocessing step - but it's not as urgent. @marsupial - do you think you could widen the first check (i.e. forbid *any* capture default)? And yes, we need https://github.com/root-project/cling/commit/9313dbca01b00f1399b14b256925b3f99f0be97b.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:693,modifiability,variab,variable,693,"In the current C++ working paper:. [expr.prim.lambda]/10: ""A lambda-expression whose smallest enclosing scope is a block scope (3.3.3) is a local lambda expression; any other lambda-expression shall not have a capture-default or simple-capture in its lambda-introducer."". As we decl-extract lambdas we should forbid capture-defaults. But we decl-extract after Sema. So indeed - a post-processing step makes sense, but it should complain about *any* capture default. [expr.prim.lambda]/11: ""An entity that is designated by a simple-capture...and shall be *this ... or a variable with automatic storage duration"": this should be noticeable by Sema, except for transactions that declare both the variable and the capture in the same input. So here, too, we'll need a postprocessing step - but it's not as urgent. @marsupial - do you think you could widen the first check (i.e. forbid *any* capture default)? And yes, we need https://github.com/root-project/cling/commit/9313dbca01b00f1399b14b256925b3f99f0be97b.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:428,safety,compl,complain,428,"In the current C++ working paper:. [expr.prim.lambda]/10: ""A lambda-expression whose smallest enclosing scope is a block scope (3.3.3) is a local lambda expression; any other lambda-expression shall not have a capture-default or simple-capture in its lambda-introducer."". As we decl-extract lambdas we should forbid capture-defaults. But we decl-extract after Sema. So indeed - a post-processing step makes sense, but it should complain about *any* capture default. [expr.prim.lambda]/11: ""An entity that is designated by a simple-capture...and shall be *this ... or a variable with automatic storage duration"": this should be noticeable by Sema, except for transactions that declare both the variable and the capture in the same input. So here, too, we'll need a postprocessing step - but it's not as urgent. @marsupial - do you think you could widen the first check (i.e. forbid *any* capture default)? And yes, we need https://github.com/root-project/cling/commit/9313dbca01b00f1399b14b256925b3f99f0be97b.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:647,safety,except,except,647,"In the current C++ working paper:. [expr.prim.lambda]/10: ""A lambda-expression whose smallest enclosing scope is a block scope (3.3.3) is a local lambda expression; any other lambda-expression shall not have a capture-default or simple-capture in its lambda-introducer."". As we decl-extract lambdas we should forbid capture-defaults. But we decl-extract after Sema. So indeed - a post-processing step makes sense, but it should complain about *any* capture default. [expr.prim.lambda]/11: ""An entity that is designated by a simple-capture...and shall be *this ... or a variable with automatic storage duration"": this should be noticeable by Sema, except for transactions that declare both the variable and the capture in the same input. So here, too, we'll need a postprocessing step - but it's not as urgent. @marsupial - do you think you could widen the first check (i.e. forbid *any* capture default)? And yes, we need https://github.com/root-project/cling/commit/9313dbca01b00f1399b14b256925b3f99f0be97b.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:730,safety,input,input,730,"In the current C++ working paper:. [expr.prim.lambda]/10: ""A lambda-expression whose smallest enclosing scope is a block scope (3.3.3) is a local lambda expression; any other lambda-expression shall not have a capture-default or simple-capture in its lambda-introducer."". As we decl-extract lambdas we should forbid capture-defaults. But we decl-extract after Sema. So indeed - a post-processing step makes sense, but it should complain about *any* capture default. [expr.prim.lambda]/11: ""An entity that is designated by a simple-capture...and shall be *this ... or a variable with automatic storage duration"": this should be noticeable by Sema, except for transactions that declare both the variable and the capture in the same input. So here, too, we'll need a postprocessing step - but it's not as urgent. @marsupial - do you think you could widen the first check (i.e. forbid *any* capture default)? And yes, we need https://github.com/root-project/cling/commit/9313dbca01b00f1399b14b256925b3f99f0be97b.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:428,security,compl,complain,428,"In the current C++ working paper:. [expr.prim.lambda]/10: ""A lambda-expression whose smallest enclosing scope is a block scope (3.3.3) is a local lambda expression; any other lambda-expression shall not have a capture-default or simple-capture in its lambda-introducer."". As we decl-extract lambdas we should forbid capture-defaults. But we decl-extract after Sema. So indeed - a post-processing step makes sense, but it should complain about *any* capture default. [expr.prim.lambda]/11: ""An entity that is designated by a simple-capture...and shall be *this ... or a variable with automatic storage duration"": this should be noticeable by Sema, except for transactions that declare both the variable and the capture in the same input. So here, too, we'll need a postprocessing step - but it's not as urgent. @marsupial - do you think you could widen the first check (i.e. forbid *any* capture default)? And yes, we need https://github.com/root-project/cling/commit/9313dbca01b00f1399b14b256925b3f99f0be97b.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:229,testability,simpl,simple-capture,229,"In the current C++ working paper:. [expr.prim.lambda]/10: ""A lambda-expression whose smallest enclosing scope is a block scope (3.3.3) is a local lambda expression; any other lambda-expression shall not have a capture-default or simple-capture in its lambda-introducer."". As we decl-extract lambdas we should forbid capture-defaults. But we decl-extract after Sema. So indeed - a post-processing step makes sense, but it should complain about *any* capture default. [expr.prim.lambda]/11: ""An entity that is designated by a simple-capture...and shall be *this ... or a variable with automatic storage duration"": this should be noticeable by Sema, except for transactions that declare both the variable and the capture in the same input. So here, too, we'll need a postprocessing step - but it's not as urgent. @marsupial - do you think you could widen the first check (i.e. forbid *any* capture default)? And yes, we need https://github.com/root-project/cling/commit/9313dbca01b00f1399b14b256925b3f99f0be97b.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:524,testability,simpl,simple-capture,524,"In the current C++ working paper:. [expr.prim.lambda]/10: ""A lambda-expression whose smallest enclosing scope is a block scope (3.3.3) is a local lambda expression; any other lambda-expression shall not have a capture-default or simple-capture in its lambda-introducer."". As we decl-extract lambdas we should forbid capture-defaults. But we decl-extract after Sema. So indeed - a post-processing step makes sense, but it should complain about *any* capture default. [expr.prim.lambda]/11: ""An entity that is designated by a simple-capture...and shall be *this ... or a variable with automatic storage duration"": this should be noticeable by Sema, except for transactions that declare both the variable and the capture in the same input. So here, too, we'll need a postprocessing step - but it's not as urgent. @marsupial - do you think you could widen the first check (i.e. forbid *any* capture default)? And yes, we need https://github.com/root-project/cling/commit/9313dbca01b00f1399b14b256925b3f99f0be97b.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:583,testability,automat,automatic,583,"In the current C++ working paper:. [expr.prim.lambda]/10: ""A lambda-expression whose smallest enclosing scope is a block scope (3.3.3) is a local lambda expression; any other lambda-expression shall not have a capture-default or simple-capture in its lambda-introducer."". As we decl-extract lambdas we should forbid capture-defaults. But we decl-extract after Sema. So indeed - a post-processing step makes sense, but it should complain about *any* capture default. [expr.prim.lambda]/11: ""An entity that is designated by a simple-capture...and shall be *this ... or a variable with automatic storage duration"": this should be noticeable by Sema, except for transactions that declare both the variable and the capture in the same input. So here, too, we'll need a postprocessing step - but it's not as urgent. @marsupial - do you think you could widen the first check (i.e. forbid *any* capture default)? And yes, we need https://github.com/root-project/cling/commit/9313dbca01b00f1399b14b256925b3f99f0be97b.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:229,usability,simpl,simple-capture,229,"In the current C++ working paper:. [expr.prim.lambda]/10: ""A lambda-expression whose smallest enclosing scope is a block scope (3.3.3) is a local lambda expression; any other lambda-expression shall not have a capture-default or simple-capture in its lambda-introducer."". As we decl-extract lambdas we should forbid capture-defaults. But we decl-extract after Sema. So indeed - a post-processing step makes sense, but it should complain about *any* capture default. [expr.prim.lambda]/11: ""An entity that is designated by a simple-capture...and shall be *this ... or a variable with automatic storage duration"": this should be noticeable by Sema, except for transactions that declare both the variable and the capture in the same input. So here, too, we'll need a postprocessing step - but it's not as urgent. @marsupial - do you think you could widen the first check (i.e. forbid *any* capture default)? And yes, we need https://github.com/root-project/cling/commit/9313dbca01b00f1399b14b256925b3f99f0be97b.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:524,usability,simpl,simple-capture,524,"In the current C++ working paper:. [expr.prim.lambda]/10: ""A lambda-expression whose smallest enclosing scope is a block scope (3.3.3) is a local lambda expression; any other lambda-expression shall not have a capture-default or simple-capture in its lambda-introducer."". As we decl-extract lambdas we should forbid capture-defaults. But we decl-extract after Sema. So indeed - a post-processing step makes sense, but it should complain about *any* capture default. [expr.prim.lambda]/11: ""An entity that is designated by a simple-capture...and shall be *this ... or a variable with automatic storage duration"": this should be noticeable by Sema, except for transactions that declare both the variable and the capture in the same input. So here, too, we'll need a postprocessing step - but it's not as urgent. @marsupial - do you think you could widen the first check (i.e. forbid *any* capture default)? And yes, we need https://github.com/root-project/cling/commit/9313dbca01b00f1399b14b256925b3f99f0be97b.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:730,usability,input,input,730,"In the current C++ working paper:. [expr.prim.lambda]/10: ""A lambda-expression whose smallest enclosing scope is a block scope (3.3.3) is a local lambda expression; any other lambda-expression shall not have a capture-default or simple-capture in its lambda-introducer."". As we decl-extract lambdas we should forbid capture-defaults. But we decl-extract after Sema. So indeed - a post-processing step makes sense, but it should complain about *any* capture default. [expr.prim.lambda]/11: ""An entity that is designated by a simple-capture...and shall be *this ... or a variable with automatic storage duration"": this should be noticeable by Sema, except for transactions that declare both the variable and the capture in the same input. So here, too, we'll need a postprocessing step - but it's not as urgent. @marsupial - do you think you could widen the first check (i.e. forbid *any* capture default)? And yes, we need https://github.com/root-project/cling/commit/9313dbca01b00f1399b14b256925b3f99f0be97b.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:512,deployability,fail,fail,512,"I'm against forbidding except if **-Wpedantic** is used just so things can be copy/pasted easier. It seems the warning could be expanded if any default is given, but what is gained from that? I.e. `auto LC = [&] { /*blah blah*/ };`. behaves exactly as one would intend/expect, and the fact it is being put into a global scope from a local one seems like an impl. detail that doesn't have to annoy users. I guess at one point DeclExtraction may go away and if ever evaluated in the global scope the example would fail, but is it necessary to punish now for something that may happen in the future?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:375,reliability,doe,doesn,375,"I'm against forbidding except if **-Wpedantic** is used just so things can be copy/pasted easier. It seems the warning could be expanded if any default is given, but what is gained from that? I.e. `auto LC = [&] { /*blah blah*/ };`. behaves exactly as one would intend/expect, and the fact it is being put into a global scope from a local one seems like an impl. detail that doesn't have to annoy users. I guess at one point DeclExtraction may go away and if ever evaluated in the global scope the example would fail, but is it necessary to punish now for something that may happen in the future?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:512,reliability,fail,fail,512,"I'm against forbidding except if **-Wpedantic** is used just so things can be copy/pasted easier. It seems the warning could be expanded if any default is given, but what is gained from that? I.e. `auto LC = [&] { /*blah blah*/ };`. behaves exactly as one would intend/expect, and the fact it is being put into a global scope from a local one seems like an impl. detail that doesn't have to annoy users. I guess at one point DeclExtraction may go away and if ever evaluated in the global scope the example would fail, but is it necessary to punish now for something that may happen in the future?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:23,safety,except,except,23,"I'm against forbidding except if **-Wpedantic** is used just so things can be copy/pasted easier. It seems the warning could be expanded if any default is given, but what is gained from that? I.e. `auto LC = [&] { /*blah blah*/ };`. behaves exactly as one would intend/expect, and the fact it is being put into a global scope from a local one seems like an impl. detail that doesn't have to annoy users. I guess at one point DeclExtraction may go away and if ever evaluated in the global scope the example would fail, but is it necessary to punish now for something that may happen in the future?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/631:397,usability,user,users,397,"I'm against forbidding except if **-Wpedantic** is used just so things can be copy/pasted easier. It seems the warning could be expanded if any default is given, but what is gained from that? I.e. `auto LC = [&] { /*blah blah*/ };`. behaves exactly as one would intend/expect, and the fact it is being put into a global scope from a local one seems like an impl. detail that doesn't have to annoy users. I guess at one point DeclExtraction may go away and if ever evaluated in the global scope the example would fail, but is it necessary to punish now for something that may happen in the future?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/631
https://github.com/root-project/root/pull/632:98,availability,repair,repair,98,"I used the github web interface to resolve some conflicts. It inserted a merge commit, we need to repair that, please do not merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/632
https://github.com/root-project/root/pull/632:22,integrability,interfac,interface,22,"I used the github web interface to resolve some conflicts. It inserted a merge commit, we need to repair that, please do not merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/632
https://github.com/root-project/root/pull/632:22,interoperability,interfac,interface,22,"I used the github web interface to resolve some conflicts. It inserted a merge commit, we need to repair that, please do not merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/632
https://github.com/root-project/root/pull/632:48,interoperability,conflict,conflicts,48,"I used the github web interface to resolve some conflicts. It inserted a merge commit, we need to repair that, please do not merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/632
https://github.com/root-project/root/pull/632:22,modifiability,interfac,interface,22,"I used the github web interface to resolve some conflicts. It inserted a merge commit, we need to repair that, please do not merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/632
https://github.com/root-project/root/pull/632:98,reliability,repair,repair,98,"I used the github web interface to resolve some conflicts. It inserted a merge commit, we need to repair that, please do not merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/632
https://github.com/root-project/root/pull/636:9,safety,test,test,9,A google test is on the way,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/636:9,testability,test,test,9,A google test is on the way,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/636:42,energy efficiency,core,core,42,"A google test has been added in `$ROOTSYS/core/foundation/test`. `roottest_dataframe_functiontraits` has been broken by moving the meta utils away from TDataFrame, and is removed by PR n.48 in roottest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/636:9,safety,test,test,9,"A google test has been added in `$ROOTSYS/core/foundation/test`. `roottest_dataframe_functiontraits` has been broken by moving the meta utils away from TDataFrame, and is removed by PR n.48 in roottest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/636:58,safety,test,test,58,"A google test has been added in `$ROOTSYS/core/foundation/test`. `roottest_dataframe_functiontraits` has been broken by moving the meta utils away from TDataFrame, and is removed by PR n.48 in roottest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/636:9,testability,test,test,9,"A google test has been added in `$ROOTSYS/core/foundation/test`. `roottest_dataframe_functiontraits` has been broken by moving the meta utils away from TDataFrame, and is removed by PR n.48 in roottest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/636:58,testability,test,test,58,"A google test has been added in `$ROOTSYS/core/foundation/test`. `roottest_dataframe_functiontraits` has been broken by moving the meta utils away from TDataFrame, and is removed by PR n.48 in roottest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/636:11,deployability,build,build,11,@phsft-bot build please.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/636:75,reliability,doe,does,75,"Addressed most of the comments, cleaned up history (for some reason github does not show it as it is on file). TODO:. - make `CallableTraits` SFINAE-friendly (thanks Axel). - remove `type` from the most generic `TakeFirstParameter`, have `TDataFrame` use something else",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/636:408,availability,operat,operator,408,"@bluehood > reasonable use-case for the sfinae-friendliness of `CallableTraits`. What about `TMVA::AddDataSource(""name"", T)`. That `T` is either an array of `ELEM`, or something returning `ELEM`. Would be nice if I can use `CallableTraits` to figure out the return type - if it's a function. Instead of having to hide this in another template that is then sfinae protecting the ""o but your array has no call operator!"" error. As I said during our chat: I don't know whether that's a sufficiently strong reason to make `CallableTraits` sfinae friendly. But as you're publishing this to the world now you could as well make it super nice ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/636:419,availability,error,error,419,"@bluehood > reasonable use-case for the sfinae-friendliness of `CallableTraits`. What about `TMVA::AddDataSource(""name"", T)`. That `T` is either an array of `ELEM`, or something returning `ELEM`. Would be nice if I can use `CallableTraits` to figure out the return type - if it's a function. Instead of having to hide this in another template that is then sfinae protecting the ""o but your array has no call operator!"" error. As I said during our chat: I don't know whether that's a sufficiently strong reason to make `CallableTraits` sfinae friendly. But as you're publishing this to the world now you could as well make it super nice ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/636:566,integrability,pub,publishing,566,"@bluehood > reasonable use-case for the sfinae-friendliness of `CallableTraits`. What about `TMVA::AddDataSource(""name"", T)`. That `T` is either an array of `ELEM`, or something returning `ELEM`. Would be nice if I can use `CallableTraits` to figure out the return type - if it's a function. Instead of having to hide this in another template that is then sfinae protecting the ""o but your array has no call operator!"" error. As I said during our chat: I don't know whether that's a sufficiently strong reason to make `CallableTraits` sfinae friendly. But as you're publishing this to the world now you could as well make it super nice ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/636:419,performance,error,error,419,"@bluehood > reasonable use-case for the sfinae-friendliness of `CallableTraits`. What about `TMVA::AddDataSource(""name"", T)`. That `T` is either an array of `ELEM`, or something returning `ELEM`. Would be nice if I can use `CallableTraits` to figure out the return type - if it's a function. Instead of having to hide this in another template that is then sfinae protecting the ""o but your array has no call operator!"" error. As I said during our chat: I don't know whether that's a sufficiently strong reason to make `CallableTraits` sfinae friendly. But as you're publishing this to the world now you could as well make it super nice ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/636:419,safety,error,error,419,"@bluehood > reasonable use-case for the sfinae-friendliness of `CallableTraits`. What about `TMVA::AddDataSource(""name"", T)`. That `T` is either an array of `ELEM`, or something returning `ELEM`. Would be nice if I can use `CallableTraits` to figure out the return type - if it's a function. Instead of having to hide this in another template that is then sfinae protecting the ""o but your array has no call operator!"" error. As I said during our chat: I don't know whether that's a sufficiently strong reason to make `CallableTraits` sfinae friendly. But as you're publishing this to the world now you could as well make it super nice ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/636:419,usability,error,error,419,"@bluehood > reasonable use-case for the sfinae-friendliness of `CallableTraits`. What about `TMVA::AddDataSource(""name"", T)`. That `T` is either an array of `ELEM`, or something returning `ELEM`. Would be nice if I can use `CallableTraits` to figure out the return type - if it's a function. Instead of having to hide this in another template that is then sfinae protecting the ""o but your array has no call operator!"" error. As I said during our chat: I don't know whether that's a sufficiently strong reason to make `CallableTraits` sfinae friendly. But as you're publishing this to the world now you could as well make it super nice ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/636:842,availability,operat,operator,842,"@Axel-Naumann I am not able to write a sfinae-friendly version of `CallableTraits`. As far as I understand, your proposed usage would be the following:. ```c++. template<typename T, std::size_t N> . void foo(std::array<T,N> a) { return; }. . template<typename F, typename R = typename CallableTraits<F>::ret_type> . void foo(F f) { return; } . . int main() { . foo(std::array<int,1>{1}); // overload #2 is SFINAE'd out. foo([]() { return std::array<int,1>{1}; }); // overload #1 does not apply . return 0; . } . ```. The self-contained snippet [attached](https://github.com/root-project/root/files/1082588/testcallabletraits.txt) was my playground to try and make this work, with no success. In principle I would like to have an empty `CallableTraits` as the most generic object, and then partially specialise for the types `T` that have `T::operator()`, but afaik it's not possible to partially specialise on properties of a type. The second idea was writing two mutually exclusive (SFINAE-wise) `template<typename T> CallableTraits`, an empty one for all types without `operator()`, and the usual one for types with `operator()`, but I don't know how to write a SFINAE expression that answers the question ""does T have operator()?"" with a boolean. It's very possible that this would be trivial with concepts. Any suggestion is super welcome.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/636:1072,availability,operat,operator,1072,"@Axel-Naumann I am not able to write a sfinae-friendly version of `CallableTraits`. As far as I understand, your proposed usage would be the following:. ```c++. template<typename T, std::size_t N> . void foo(std::array<T,N> a) { return; }. . template<typename F, typename R = typename CallableTraits<F>::ret_type> . void foo(F f) { return; } . . int main() { . foo(std::array<int,1>{1}); // overload #2 is SFINAE'd out. foo([]() { return std::array<int,1>{1}; }); // overload #1 does not apply . return 0; . } . ```. The self-contained snippet [attached](https://github.com/root-project/root/files/1082588/testcallabletraits.txt) was my playground to try and make this work, with no success. In principle I would like to have an empty `CallableTraits` as the most generic object, and then partially specialise for the types `T` that have `T::operator()`, but afaik it's not possible to partially specialise on properties of a type. The second idea was writing two mutually exclusive (SFINAE-wise) `template<typename T> CallableTraits`, an empty one for all types without `operator()`, and the usual one for types with `operator()`, but I don't know how to write a SFINAE expression that answers the question ""does T have operator()?"" with a boolean. It's very possible that this would be trivial with concepts. Any suggestion is super welcome.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/636:1119,availability,operat,operator,1119,"@Axel-Naumann I am not able to write a sfinae-friendly version of `CallableTraits`. As far as I understand, your proposed usage would be the following:. ```c++. template<typename T, std::size_t N> . void foo(std::array<T,N> a) { return; }. . template<typename F, typename R = typename CallableTraits<F>::ret_type> . void foo(F f) { return; } . . int main() { . foo(std::array<int,1>{1}); // overload #2 is SFINAE'd out. foo([]() { return std::array<int,1>{1}; }); // overload #1 does not apply . return 0; . } . ```. The self-contained snippet [attached](https://github.com/root-project/root/files/1082588/testcallabletraits.txt) was my playground to try and make this work, with no success. In principle I would like to have an empty `CallableTraits` as the most generic object, and then partially specialise for the types `T` that have `T::operator()`, but afaik it's not possible to partially specialise on properties of a type. The second idea was writing two mutually exclusive (SFINAE-wise) `template<typename T> CallableTraits`, an empty one for all types without `operator()`, and the usual one for types with `operator()`, but I don't know how to write a SFINAE expression that answers the question ""does T have operator()?"" with a boolean. It's very possible that this would be trivial with concepts. Any suggestion is super welcome.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/636:1221,availability,operat,operator,1221,"@Axel-Naumann I am not able to write a sfinae-friendly version of `CallableTraits`. As far as I understand, your proposed usage would be the following:. ```c++. template<typename T, std::size_t N> . void foo(std::array<T,N> a) { return; }. . template<typename F, typename R = typename CallableTraits<F>::ret_type> . void foo(F f) { return; } . . int main() { . foo(std::array<int,1>{1}); // overload #2 is SFINAE'd out. foo([]() { return std::array<int,1>{1}; }); // overload #1 does not apply . return 0; . } . ```. The self-contained snippet [attached](https://github.com/root-project/root/files/1082588/testcallabletraits.txt) was my playground to try and make this work, with no success. In principle I would like to have an empty `CallableTraits` as the most generic object, and then partially specialise for the types `T` that have `T::operator()`, but afaik it's not possible to partially specialise on properties of a type. The second idea was writing two mutually exclusive (SFINAE-wise) `template<typename T> CallableTraits`, an empty one for all types without `operator()`, and the usual one for types with `operator()`, but I don't know how to write a SFINAE expression that answers the question ""does T have operator()?"" with a boolean. It's very possible that this would be trivial with concepts. Any suggestion is super welcome.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/636:55,deployability,version,version,55,"@Axel-Naumann I am not able to write a sfinae-friendly version of `CallableTraits`. As far as I understand, your proposed usage would be the following:. ```c++. template<typename T, std::size_t N> . void foo(std::array<T,N> a) { return; }. . template<typename F, typename R = typename CallableTraits<F>::ret_type> . void foo(F f) { return; } . . int main() { . foo(std::array<int,1>{1}); // overload #2 is SFINAE'd out. foo([]() { return std::array<int,1>{1}; }); // overload #1 does not apply . return 0; . } . ```. The self-contained snippet [attached](https://github.com/root-project/root/files/1082588/testcallabletraits.txt) was my playground to try and make this work, with no success. In principle I would like to have an empty `CallableTraits` as the most generic object, and then partially specialise for the types `T` that have `T::operator()`, but afaik it's not possible to partially specialise on properties of a type. The second idea was writing two mutually exclusive (SFINAE-wise) `template<typename T> CallableTraits`, an empty one for all types without `operator()`, and the usual one for types with `operator()`, but I don't know how to write a SFINAE expression that answers the question ""does T have operator()?"" with a boolean. It's very possible that this would be trivial with concepts. Any suggestion is super welcome.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/636:526,deployability,contain,contained,526,"@Axel-Naumann I am not able to write a sfinae-friendly version of `CallableTraits`. As far as I understand, your proposed usage would be the following:. ```c++. template<typename T, std::size_t N> . void foo(std::array<T,N> a) { return; }. . template<typename F, typename R = typename CallableTraits<F>::ret_type> . void foo(F f) { return; } . . int main() { . foo(std::array<int,1>{1}); // overload #2 is SFINAE'd out. foo([]() { return std::array<int,1>{1}; }); // overload #1 does not apply . return 0; . } . ```. The self-contained snippet [attached](https://github.com/root-project/root/files/1082588/testcallabletraits.txt) was my playground to try and make this work, with no success. In principle I would like to have an empty `CallableTraits` as the most generic object, and then partially specialise for the types `T` that have `T::operator()`, but afaik it's not possible to partially specialise on properties of a type. The second idea was writing two mutually exclusive (SFINAE-wise) `template<typename T> CallableTraits`, an empty one for all types without `operator()`, and the usual one for types with `operator()`, but I don't know how to write a SFINAE expression that answers the question ""does T have operator()?"" with a boolean. It's very possible that this would be trivial with concepts. Any suggestion is super welcome.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/636:55,integrability,version,version,55,"@Axel-Naumann I am not able to write a sfinae-friendly version of `CallableTraits`. As far as I understand, your proposed usage would be the following:. ```c++. template<typename T, std::size_t N> . void foo(std::array<T,N> a) { return; }. . template<typename F, typename R = typename CallableTraits<F>::ret_type> . void foo(F f) { return; } . . int main() { . foo(std::array<int,1>{1}); // overload #2 is SFINAE'd out. foo([]() { return std::array<int,1>{1}; }); // overload #1 does not apply . return 0; . } . ```. The self-contained snippet [attached](https://github.com/root-project/root/files/1082588/testcallabletraits.txt) was my playground to try and make this work, with no success. In principle I would like to have an empty `CallableTraits` as the most generic object, and then partially specialise for the types `T` that have `T::operator()`, but afaik it's not possible to partially specialise on properties of a type. The second idea was writing two mutually exclusive (SFINAE-wise) `template<typename T> CallableTraits`, an empty one for all types without `operator()`, and the usual one for types with `operator()`, but I don't know how to write a SFINAE expression that answers the question ""does T have operator()?"" with a boolean. It's very possible that this would be trivial with concepts. Any suggestion is super welcome.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/636:55,modifiability,version,version,55,"@Axel-Naumann I am not able to write a sfinae-friendly version of `CallableTraits`. As far as I understand, your proposed usage would be the following:. ```c++. template<typename T, std::size_t N> . void foo(std::array<T,N> a) { return; }. . template<typename F, typename R = typename CallableTraits<F>::ret_type> . void foo(F f) { return; } . . int main() { . foo(std::array<int,1>{1}); // overload #2 is SFINAE'd out. foo([]() { return std::array<int,1>{1}; }); // overload #1 does not apply . return 0; . } . ```. The self-contained snippet [attached](https://github.com/root-project/root/files/1082588/testcallabletraits.txt) was my playground to try and make this work, with no success. In principle I would like to have an empty `CallableTraits` as the most generic object, and then partially specialise for the types `T` that have `T::operator()`, but afaik it's not possible to partially specialise on properties of a type. The second idea was writing two mutually exclusive (SFINAE-wise) `template<typename T> CallableTraits`, an empty one for all types without `operator()`, and the usual one for types with `operator()`, but I don't know how to write a SFINAE expression that answers the question ""does T have operator()?"" with a boolean. It's very possible that this would be trivial with concepts. Any suggestion is super welcome.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/636:479,reliability,doe,does,479,"@Axel-Naumann I am not able to write a sfinae-friendly version of `CallableTraits`. As far as I understand, your proposed usage would be the following:. ```c++. template<typename T, std::size_t N> . void foo(std::array<T,N> a) { return; }. . template<typename F, typename R = typename CallableTraits<F>::ret_type> . void foo(F f) { return; } . . int main() { . foo(std::array<int,1>{1}); // overload #2 is SFINAE'd out. foo([]() { return std::array<int,1>{1}; }); // overload #1 does not apply . return 0; . } . ```. The self-contained snippet [attached](https://github.com/root-project/root/files/1082588/testcallabletraits.txt) was my playground to try and make this work, with no success. In principle I would like to have an empty `CallableTraits` as the most generic object, and then partially specialise for the types `T` that have `T::operator()`, but afaik it's not possible to partially specialise on properties of a type. The second idea was writing two mutually exclusive (SFINAE-wise) `template<typename T> CallableTraits`, an empty one for all types without `operator()`, and the usual one for types with `operator()`, but I don't know how to write a SFINAE expression that answers the question ""does T have operator()?"" with a boolean. It's very possible that this would be trivial with concepts. Any suggestion is super welcome.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/636:1209,reliability,doe,does,1209,"@Axel-Naumann I am not able to write a sfinae-friendly version of `CallableTraits`. As far as I understand, your proposed usage would be the following:. ```c++. template<typename T, std::size_t N> . void foo(std::array<T,N> a) { return; }. . template<typename F, typename R = typename CallableTraits<F>::ret_type> . void foo(F f) { return; } . . int main() { . foo(std::array<int,1>{1}); // overload #2 is SFINAE'd out. foo([]() { return std::array<int,1>{1}; }); // overload #1 does not apply . return 0; . } . ```. The self-contained snippet [attached](https://github.com/root-project/root/files/1082588/testcallabletraits.txt) was my playground to try and make this work, with no success. In principle I would like to have an empty `CallableTraits` as the most generic object, and then partially specialise for the types `T` that have `T::operator()`, but afaik it's not possible to partially specialise on properties of a type. The second idea was writing two mutually exclusive (SFINAE-wise) `template<typename T> CallableTraits`, an empty one for all types without `operator()`, and the usual one for types with `operator()`, but I don't know how to write a SFINAE expression that answers the question ""does T have operator()?"" with a boolean. It's very possible that this would be trivial with concepts. Any suggestion is super welcome.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/636:606,safety,test,testcallabletraits,606,"@Axel-Naumann I am not able to write a sfinae-friendly version of `CallableTraits`. As far as I understand, your proposed usage would be the following:. ```c++. template<typename T, std::size_t N> . void foo(std::array<T,N> a) { return; }. . template<typename F, typename R = typename CallableTraits<F>::ret_type> . void foo(F f) { return; } . . int main() { . foo(std::array<int,1>{1}); // overload #2 is SFINAE'd out. foo([]() { return std::array<int,1>{1}; }); // overload #1 does not apply . return 0; . } . ```. The self-contained snippet [attached](https://github.com/root-project/root/files/1082588/testcallabletraits.txt) was my playground to try and make this work, with no success. In principle I would like to have an empty `CallableTraits` as the most generic object, and then partially specialise for the types `T` that have `T::operator()`, but afaik it's not possible to partially specialise on properties of a type. The second idea was writing two mutually exclusive (SFINAE-wise) `template<typename T> CallableTraits`, an empty one for all types without `operator()`, and the usual one for types with `operator()`, but I don't know how to write a SFINAE expression that answers the question ""does T have operator()?"" with a boolean. It's very possible that this would be trivial with concepts. Any suggestion is super welcome.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/636:96,testability,understand,understand,96,"@Axel-Naumann I am not able to write a sfinae-friendly version of `CallableTraits`. As far as I understand, your proposed usage would be the following:. ```c++. template<typename T, std::size_t N> . void foo(std::array<T,N> a) { return; }. . template<typename F, typename R = typename CallableTraits<F>::ret_type> . void foo(F f) { return; } . . int main() { . foo(std::array<int,1>{1}); // overload #2 is SFINAE'd out. foo([]() { return std::array<int,1>{1}; }); // overload #1 does not apply . return 0; . } . ```. The self-contained snippet [attached](https://github.com/root-project/root/files/1082588/testcallabletraits.txt) was my playground to try and make this work, with no success. In principle I would like to have an empty `CallableTraits` as the most generic object, and then partially specialise for the types `T` that have `T::operator()`, but afaik it's not possible to partially specialise on properties of a type. The second idea was writing two mutually exclusive (SFINAE-wise) `template<typename T> CallableTraits`, an empty one for all types without `operator()`, and the usual one for types with `operator()`, but I don't know how to write a SFINAE expression that answers the question ""does T have operator()?"" with a boolean. It's very possible that this would be trivial with concepts. Any suggestion is super welcome.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/636:606,testability,test,testcallabletraits,606,"@Axel-Naumann I am not able to write a sfinae-friendly version of `CallableTraits`. As far as I understand, your proposed usage would be the following:. ```c++. template<typename T, std::size_t N> . void foo(std::array<T,N> a) { return; }. . template<typename F, typename R = typename CallableTraits<F>::ret_type> . void foo(F f) { return; } . . int main() { . foo(std::array<int,1>{1}); // overload #2 is SFINAE'd out. foo([]() { return std::array<int,1>{1}; }); // overload #1 does not apply . return 0; . } . ```. The self-contained snippet [attached](https://github.com/root-project/root/files/1082588/testcallabletraits.txt) was my playground to try and make this work, with no success. In principle I would like to have an empty `CallableTraits` as the most generic object, and then partially specialise for the types `T` that have `T::operator()`, but afaik it's not possible to partially specialise on properties of a type. The second idea was writing two mutually exclusive (SFINAE-wise) `template<typename T> CallableTraits`, an empty one for all types without `operator()`, and the usual one for types with `operator()`, but I don't know how to write a SFINAE expression that answers the question ""does T have operator()?"" with a boolean. It's very possible that this would be trivial with concepts. Any suggestion is super welcome.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/636:31,interoperability,convers,conversation,31,P.S. there is a [google groups conversation](https://groups.google.com/forum/#!msg/comp.lang.c++.moderated/T3x6lvmvvkQ/mfY5VTDJ--UJ) that points to an article in russian where something like this has apparently been implemented....,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/636:100,deployability,fail,failing,100,The last two items on my to-do list have been addressed. Branch has been rebased on master to avoid failing on newly added tests.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/636:100,reliability,fail,failing,100,The last two items on my to-do list have been addressed. Branch has been rebased on master to avoid failing on newly added tests.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/636:94,safety,avoid,avoid,94,The last two items on my to-do list have been addressed. Branch has been rebased on master to avoid failing on newly added tests.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/636:123,safety,test,tests,123,The last two items on my to-do list have been addressed. Branch has been rebased on master to avoid failing on newly added tests.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/636:123,testability,test,tests,123,The last two items on my to-do list have been addressed. Branch has been rebased on master to avoid failing on newly added tests.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/636:24,interoperability,format,formatting,24,Rebased and fixed clang-formatting. There are no items pending afaik.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/636:28,interoperability,conflict,conflicts,28,"Rebased on master, resolved conflicts",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/636
https://github.com/root-project/root/pull/639:59,interoperability,format,format,59,I just was asking Simon to adjust his code according clang-format. But this I can do later myself.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/639
https://github.com/root-project/root/pull/641:43,deployability,build,build,43,Isn't there an option on Travis CI to only build branches that have a `.travis.yml` file in them?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/641
https://github.com/root-project/root/pull/641:114,deployability,build,build,114,"I don't think so, if I'm interpreting the comment here correctly: https://docs.travis-ci.com/user/customizing-the-build#Building-Specific-Branches:. ```. Note that for historical reasons .travis.yml needs to be present on all active branches of your project. ```. Since these branches don't already have a `.travis.yml`, Travis-CI attempts to build ROOT as a Ruby application. Unsurprisingly, this does not work out well...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/641
https://github.com/root-project/root/pull/641:120,deployability,Build,Building-Specific-Branches,120,"I don't think so, if I'm interpreting the comment here correctly: https://docs.travis-ci.com/user/customizing-the-build#Building-Specific-Branches:. ```. Note that for historical reasons .travis.yml needs to be present on all active branches of your project. ```. Since these branches don't already have a `.travis.yml`, Travis-CI attempts to build ROOT as a Ruby application. Unsurprisingly, this does not work out well...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/641
https://github.com/root-project/root/pull/641:343,deployability,build,build,343,"I don't think so, if I'm interpreting the comment here correctly: https://docs.travis-ci.com/user/customizing-the-build#Building-Specific-Branches:. ```. Note that for historical reasons .travis.yml needs to be present on all active branches of your project. ```. Since these branches don't already have a `.travis.yml`, Travis-CI attempts to build ROOT as a Ruby application. Unsurprisingly, this does not work out well...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/641
https://github.com/root-project/root/pull/641:129,interoperability,Specif,Specific-Branches,129,"I don't think so, if I'm interpreting the comment here correctly: https://docs.travis-ci.com/user/customizing-the-build#Building-Specific-Branches:. ```. Note that for historical reasons .travis.yml needs to be present on all active branches of your project. ```. Since these branches don't already have a `.travis.yml`, Travis-CI attempts to build ROOT as a Ruby application. Unsurprisingly, this does not work out well...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/641
https://github.com/root-project/root/pull/641:398,reliability,doe,does,398,"I don't think so, if I'm interpreting the comment here correctly: https://docs.travis-ci.com/user/customizing-the-build#Building-Specific-Branches:. ```. Note that for historical reasons .travis.yml needs to be present on all active branches of your project. ```. Since these branches don't already have a `.travis.yml`, Travis-CI attempts to build ROOT as a Ruby application. Unsurprisingly, this does not work out well...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/641
https://github.com/root-project/root/pull/641:93,usability,user,user,93,"I don't think so, if I'm interpreting the comment here correctly: https://docs.travis-ci.com/user/customizing-the-build#Building-Specific-Branches:. ```. Note that for historical reasons .travis.yml needs to be present on all active branches of your project. ```. Since these branches don't already have a `.travis.yml`, Travis-CI attempts to build ROOT as a Ruby application. Unsurprisingly, this does not work out well...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/641
https://github.com/root-project/root/pull/641:98,usability,custom,customizing-the-build,98,"I don't think so, if I'm interpreting the comment here correctly: https://docs.travis-ci.com/user/customizing-the-build#Building-Specific-Branches:. ```. Note that for historical reasons .travis.yml needs to be present on all active branches of your project. ```. Since these branches don't already have a `.travis.yml`, Travis-CI attempts to build ROOT as a Ruby application. Unsurprisingly, this does not work out well...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/641
https://github.com/root-project/root/pull/642:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/642
https://github.com/root-project/root/pull/644:20,safety,test,test,20,Just making a PR to test this on OS X for now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/644
https://github.com/root-project/root/pull/644:20,testability,test,test,20,Just making a PR to test this on OS X for now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/644
https://github.com/root-project/root/pull/644:169,performance,content,content,169,Can you attach the `diff -u` of the two files? You moving the file *and* changing it in the same commit makes it impossible for me to figure out what has changed in the content...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/644
https://github.com/root-project/root/pull/644:13,usability,person,personally,13,The diff was personally brought to my office - it's empty. Will merge once Jenkins reports happiness.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/644
https://github.com/root-project/root/pull/644:9,availability,failur,failure,9,The same failure exists without this PR. Merging!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/644
https://github.com/root-project/root/pull/644:9,deployability,fail,failure,9,The same failure exists without this PR. Merging!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/644
https://github.com/root-project/root/pull/644:9,performance,failur,failure,9,The same failure exists without this PR. Merging!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/644
https://github.com/root-project/root/pull/644:9,reliability,fail,failure,9,The same failure exists without this PR. Merging!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/644
https://github.com/root-project/root/pull/645:0,availability,Ping,Ping,0,Ping.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/645
https://github.com/root-project/root/pull/645:0,availability,Ping,Ping,0,Ping.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/645
https://github.com/root-project/root/pull/645:11,deployability,build,build,11,"@phsft-bot build! @Teemperor, you've been working in this area, could you review? @marsupial, sorry for the delay. This LGTM.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/645
https://github.com/root-project/root/pull/645:74,safety,review,review,74,"@phsft-bot build! @Teemperor, you've been working in this area, could you review? @marsupial, sorry for the delay. This LGTM.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/645
https://github.com/root-project/root/pull/645:74,testability,review,review,74,"@phsft-bot build! @Teemperor, you've been working in this area, could you review? @marsupial, sorry for the delay. This LGTM.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/645
https://github.com/root-project/root/pull/645:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/645
https://github.com/root-project/root/pull/645:8,deployability,infrastructur,infrastructure,8,"Another infrastructure issue for one of the builds, all rest seem good.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/645
https://github.com/root-project/root/pull/645:44,deployability,build,builds,44,"Another infrastructure issue for one of the builds, all rest seem good.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/645
https://github.com/root-project/root/pull/650:0,deployability,build,build,0,build please.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/650
https://github.com/root-project/root/pull/650:11,deployability,build,build,11,"@phsft-bot build, please",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/650
https://github.com/root-project/root/pull/650:26,interoperability,format,formatting,26,I will be able to do some formatting. git-clang-format causes some global change however.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/650
https://github.com/root-project/root/pull/650:48,interoperability,format,format,48,I will be able to do some formatting. git-clang-format causes some global change however.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/650
https://github.com/root-project/root/pull/650:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/650
https://github.com/root-project/root/pull/650:11,deployability,build,build,11,"@phsft-bot build, please",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/650
https://github.com/root-project/root/pull/650:158,availability,failur,failures,158,"Hi @sawenzel, has this been merged in another PR? If not, could you please rebase and push so that we can test against the latest master? Most unrelated test failures from above have been fixed. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/650
https://github.com/root-project/root/pull/650:158,deployability,fail,failures,158,"Hi @sawenzel, has this been merged in another PR? If not, could you please rebase and push so that we can test against the latest master? Most unrelated test failures from above have been fixed. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/650
https://github.com/root-project/root/pull/650:158,performance,failur,failures,158,"Hi @sawenzel, has this been merged in another PR? If not, could you please rebase and push so that we can test against the latest master? Most unrelated test failures from above have been fixed. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/650
https://github.com/root-project/root/pull/650:158,reliability,fail,failures,158,"Hi @sawenzel, has this been merged in another PR? If not, could you please rebase and push so that we can test against the latest master? Most unrelated test failures from above have been fixed. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/650
https://github.com/root-project/root/pull/650:106,safety,test,test,106,"Hi @sawenzel, has this been merged in another PR? If not, could you please rebase and push so that we can test against the latest master? Most unrelated test failures from above have been fixed. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/650
https://github.com/root-project/root/pull/650:153,safety,test,test,153,"Hi @sawenzel, has this been merged in another PR? If not, could you please rebase and push so that we can test against the latest master? Most unrelated test failures from above have been fixed. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/650
https://github.com/root-project/root/pull/650:106,testability,test,test,106,"Hi @sawenzel, has this been merged in another PR? If not, could you please rebase and push so that we can test against the latest master? Most unrelated test failures from above have been fixed. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/650
https://github.com/root-project/root/pull/650:153,testability,test,test,153,"Hi @sawenzel, has this been merged in another PR? If not, could you please rebase and push so that we can test against the latest master? Most unrelated test failures from above have been fixed. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/650
https://github.com/root-project/root/pull/650:36,usability,close,closed,36,I think this has been merged can be closed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/650
https://github.com/root-project/root/pull/654:11,deployability,build,build,11,"@phsft-bot build also on gcc49/centos7, native/mac1012, gcc49/slc6, gcc62/slc6, native/ubuntu14 with flags -Dbuiltin_vc=ON -Dbuiltin_veccore=ON",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/654
https://github.com/root-project/root/pull/654:11,deployability,build,build,11,"@phsft-bot build also on centos7/gcc49, mac1012/native, slc6/gcc49, slc6/gcc62, ubuntu14/native with flags -Dbuiltin_vc=ON -Dbuiltin_veccore=ON",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/654
https://github.com/root-project/root/pull/654:11,deployability,build,build,11,"@phsft-bot build also on centos7/gcc49, mac1012/native, slc6/gcc49, slc6/gcc62, ubuntu14/native with flags -Dbuiltin_vc=ON -Dbuiltin_veccore=ON",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/654
https://github.com/root-project/root/pull/655:11,deployability,build,build,11,"@phsft-bot build also on centos7/gcc49, mac1012/native, slc6/gcc49, slc6/gcc62, ubuntu14/native with flags -Dbuiltin_vc=ON -Dbuiltin_veccore=ON",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:320,deployability,version,version,320,"Hi, . Strange there is this precision problem in NormQuantile. It would be nice to understand the reason. . On the other hand the NormQuantile is an inverse distribution function and I am not expecting to be used very much in fitting. We can probably postpone the vectorisation of this function and keep only the scalar version. . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:320,integrability,version,version,320,"Hi, . Strange there is this precision problem in NormQuantile. It would be nice to understand the reason. . On the other hand the NormQuantile is an inverse distribution function and I am not expecting to be used very much in fitting. We can probably postpone the vectorisation of this function and keep only the scalar version. . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:157,interoperability,distribut,distribution,157,"Hi, . Strange there is this precision problem in NormQuantile. It would be nice to understand the reason. . On the other hand the NormQuantile is an inverse distribution function and I am not expecting to be used very much in fitting. We can probably postpone the vectorisation of this function and keep only the scalar version. . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:313,modifiability,scal,scalar,313,"Hi, . Strange there is this precision problem in NormQuantile. It would be nice to understand the reason. . On the other hand the NormQuantile is an inverse distribution function and I am not expecting to be used very much in fitting. We can probably postpone the vectorisation of this function and keep only the scalar version. . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:320,modifiability,version,version,320,"Hi, . Strange there is this precision problem in NormQuantile. It would be nice to understand the reason. . On the other hand the NormQuantile is an inverse distribution function and I am not expecting to be used very much in fitting. We can probably postpone the vectorisation of this function and keep only the scalar version. . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:83,testability,understand,understand,83,"Hi, . Strange there is this precision problem in NormQuantile. It would be nice to understand the reason. . On the other hand the NormQuantile is an inverse distribution function and I am not expecting to be used very much in fitting. We can probably postpone the vectorisation of this function and keep only the scalar version. . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:11,deployability,build,build,11,"@phsft-bot build also on centos7/gcc49, mac1012/native, slc6/gcc49, slc6/gcc62, ubuntu14/native with flags -Dbuiltin_vc=ON -Dbuiltin_veccore=ON",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:4,usability,progress,progress,4,Any progress here?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:52,integrability,interfac,interfaces,52,Closed temporarily while I'm busy with the gradient interfaces. I'll reopen it later.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:52,interoperability,interfac,interfaces,52,Closed temporarily while I'm busy with the gradient interfaces. I'll reopen it later.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:52,modifiability,interfac,interfaces,52,Closed temporarily while I'm busy with the gradient interfaces. I'll reopen it later.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:0,usability,Close,Closed,0,Closed temporarily while I'm busy with the gradient interfaces. I'll reopen it later.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:78,interoperability,conflict,conflicts,78,"Reopening just to follow the review comments, clean the code, and resolve the conflicts before GSoC deadline.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:29,safety,review,review,29,"Reopening just to follow the review comments, clean the code, and resolve the conflicts before GSoC deadline.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:29,testability,review,review,29,"Reopening just to follow the review comments, clean the code, and resolve the conflicts before GSoC deadline.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:80,energy efficiency,reduc,reduced,80,"The code has been cleaned, the requested changes done and the number of commits reduced and with better messages. This PR is far from being finished, but these latest changes should make following development easier and the addition of new vectorized implementations more clear.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:104,integrability,messag,messages,104,"The code has been cleaned, the requested changes done and the number of commits reduced and with better messages. This PR is far from being finished, but these latest changes should make following development easier and the addition of new vectorized implementations more clear.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:104,interoperability,messag,messages,104,"The code has been cleaned, the requested changes done and the number of commits reduced and with better messages. This PR is far from being finished, but these latest changes should make following development easier and the addition of new vectorized implementations more clear.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:272,usability,clear,clear,272,"The code has been cleaned, the requested changes done and the number of commits reduced and with better messages. This PR is far from being finished, but these latest changes should make following development easier and the addition of new vectorized implementations more clear.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:159,safety,test,tests,159,Which unticked boxes from the description remain to be done? Please make sure to tick the ones that are already addressed. Once it's all good we can rerun the tests and merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:159,testability,test,tests,159,Which unticked boxes from the description remain to be done? Please make sure to tick the ones that are already addressed. Once it's all good we can rerun the tests and merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:45,availability,error,errors,45,"@agarciamontoro Could you please address the errors shown in the build? I believe these are due to the fact that there are a scalar and vector version, but the vector version ends up being the same as the scalar one when `ROOT::Double_v == double`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:65,deployability,build,build,65,"@agarciamontoro Could you please address the errors shown in the build? I believe these are due to the fact that there are a scalar and vector version, but the vector version ends up being the same as the scalar one when `ROOT::Double_v == double`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:143,deployability,version,version,143,"@agarciamontoro Could you please address the errors shown in the build? I believe these are due to the fact that there are a scalar and vector version, but the vector version ends up being the same as the scalar one when `ROOT::Double_v == double`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:167,deployability,version,version,167,"@agarciamontoro Could you please address the errors shown in the build? I believe these are due to the fact that there are a scalar and vector version, but the vector version ends up being the same as the scalar one when `ROOT::Double_v == double`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:143,integrability,version,version,143,"@agarciamontoro Could you please address the errors shown in the build? I believe these are due to the fact that there are a scalar and vector version, but the vector version ends up being the same as the scalar one when `ROOT::Double_v == double`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:167,integrability,version,version,167,"@agarciamontoro Could you please address the errors shown in the build? I believe these are due to the fact that there are a scalar and vector version, but the vector version ends up being the same as the scalar one when `ROOT::Double_v == double`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:125,modifiability,scal,scalar,125,"@agarciamontoro Could you please address the errors shown in the build? I believe these are due to the fact that there are a scalar and vector version, but the vector version ends up being the same as the scalar one when `ROOT::Double_v == double`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:143,modifiability,version,version,143,"@agarciamontoro Could you please address the errors shown in the build? I believe these are due to the fact that there are a scalar and vector version, but the vector version ends up being the same as the scalar one when `ROOT::Double_v == double`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:167,modifiability,version,version,167,"@agarciamontoro Could you please address the errors shown in the build? I believe these are due to the fact that there are a scalar and vector version, but the vector version ends up being the same as the scalar one when `ROOT::Double_v == double`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:205,modifiability,scal,scalar,205,"@agarciamontoro Could you please address the errors shown in the build? I believe these are due to the fact that there are a scalar and vector version, but the vector version ends up being the same as the scalar one when `ROOT::Double_v == double`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:45,performance,error,errors,45,"@agarciamontoro Could you please address the errors shown in the build? I believe these are due to the fact that there are a scalar and vector version, but the vector version ends up being the same as the scalar one when `ROOT::Double_v == double`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:45,safety,error,errors,45,"@agarciamontoro Could you please address the errors shown in the build? I believe these are due to the fact that there are a scalar and vector version, but the vector version ends up being the same as the scalar one when `ROOT::Double_v == double`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:45,usability,error,errors,45,"@agarciamontoro Could you please address the errors shown in the build? I believe these are due to the fact that there are a scalar and vector version, but the vector version ends up being the same as the scalar one when `ROOT::Double_v == double`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:12,usability,statu,status,12,What is the status of this pull request? Has it been merged manually?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:106,deployability,continu,continue,106,"No, and it probably won't. Since Alejandro stopped working this became orphan work waiting for someone to continue Alejandro's work. It doesn't make sense to merge this PR and leave the thing half cooked. I may take over it and contribute porting a function every now and then (everyone is welcome to join!), but it won't be my priority, so we should probably close it and maybe continue the development on a side repository.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:379,deployability,continu,continue,379,"No, and it probably won't. Since Alejandro stopped working this became orphan work waiting for someone to continue Alejandro's work. It doesn't make sense to merge this PR and leave the thing half cooked. I may take over it and contribute porting a function every now and then (everyone is welcome to join!), but it won't be my priority, so we should probably close it and maybe continue the development on a side repository.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:414,integrability,repositor,repository,414,"No, and it probably won't. Since Alejandro stopped working this became orphan work waiting for someone to continue Alejandro's work. It doesn't make sense to merge this PR and leave the thing half cooked. I may take over it and contribute porting a function every now and then (everyone is welcome to join!), but it won't be my priority, so we should probably close it and maybe continue the development on a side repository.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:414,interoperability,repositor,repository,414,"No, and it probably won't. Since Alejandro stopped working this became orphan work waiting for someone to continue Alejandro's work. It doesn't make sense to merge this PR and leave the thing half cooked. I may take over it and contribute porting a function every now and then (everyone is welcome to join!), but it won't be my priority, so we should probably close it and maybe continue the development on a side repository.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:136,reliability,doe,doesn,136,"No, and it probably won't. Since Alejandro stopped working this became orphan work waiting for someone to continue Alejandro's work. It doesn't make sense to merge this PR and leave the thing half cooked. I may take over it and contribute porting a function every now and then (everyone is welcome to join!), but it won't be my priority, so we should probably close it and maybe continue the development on a side repository.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:43,usability,stop,stopped,43,"No, and it probably won't. Since Alejandro stopped working this became orphan work waiting for someone to continue Alejandro's work. It doesn't make sense to merge this PR and leave the thing half cooked. I may take over it and contribute porting a function every now and then (everyone is welcome to join!), but it won't be my priority, so we should probably close it and maybe continue the development on a side repository.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:360,usability,close,close,360,"No, and it probably won't. Since Alejandro stopped working this became orphan work waiting for someone to continue Alejandro's work. It doesn't make sense to merge this PR and leave the thing half cooked. I may take over it and contribute porting a function every now and then (everyone is welcome to join!), but it won't be my priority, so we should probably close it and maybe continue the development on a side repository.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:60,deployability,continu,continue,60,"I do not have time now to finish this PR, so if nobody will continue this work for now, maybe it's better to do as @xvallspl says.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:14,performance,time,time,14,"I do not have time now to finish this PR, so if nobody will continue this work for now, maybe it's better to do as @xvallspl says.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/655:97,deployability,continu,continue,97,"@amadio @lmoneta Don't know if it's the best option, but I moved the code to a branch of mine to continue development: https://github.com/xvallspl/root/tree/math-vectorization. If someone feels like contributing, please be my guest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/655
https://github.com/root-project/root/pull/657:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/657
https://github.com/root-project/root/pull/657:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/657
https://github.com/root-project/root/pull/657:37,availability,error,errors,37,@bbockelm Could you please check the errors reported by Jenkins? The test failure does seem to be caused by the changes in this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/657
https://github.com/root-project/root/pull/657:74,availability,failur,failure,74,@bbockelm Could you please check the errors reported by Jenkins? The test failure does seem to be caused by the changes in this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/657
https://github.com/root-project/root/pull/657:74,deployability,fail,failure,74,@bbockelm Could you please check the errors reported by Jenkins? The test failure does seem to be caused by the changes in this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/657
https://github.com/root-project/root/pull/657:37,performance,error,errors,37,@bbockelm Could you please check the errors reported by Jenkins? The test failure does seem to be caused by the changes in this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/657
https://github.com/root-project/root/pull/657:74,performance,failur,failure,74,@bbockelm Could you please check the errors reported by Jenkins? The test failure does seem to be caused by the changes in this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/657
https://github.com/root-project/root/pull/657:74,reliability,fail,failure,74,@bbockelm Could you please check the errors reported by Jenkins? The test failure does seem to be caused by the changes in this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/657
https://github.com/root-project/root/pull/657:82,reliability,doe,does,82,@bbockelm Could you please check the errors reported by Jenkins? The test failure does seem to be caused by the changes in this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/657
https://github.com/root-project/root/pull/657:37,safety,error,errors,37,@bbockelm Could you please check the errors reported by Jenkins? The test failure does seem to be caused by the changes in this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/657
https://github.com/root-project/root/pull/657:69,safety,test,test,69,@bbockelm Could you please check the errors reported by Jenkins? The test failure does seem to be caused by the changes in this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/657
https://github.com/root-project/root/pull/657:69,testability,test,test,69,@bbockelm Could you please check the errors reported by Jenkins? The test failure does seem to be caused by the changes in this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/657
https://github.com/root-project/root/pull/657:37,usability,error,errors,37,@bbockelm Could you please check the errors reported by Jenkins? The test failure does seem to be caused by the changes in this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/657
https://github.com/root-project/root/pull/657:109,performance,time,time,109,"Closing this PR -- now that it's recorded in GitHub instead of personal email threads, we can revisit at any time in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/657
https://github.com/root-project/root/pull/657:63,usability,person,personal,63,"Closing this PR -- now that it's recorded in GitHub instead of personal email threads, we can revisit at any time in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/657
https://github.com/root-project/root/pull/661:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/661
https://github.com/root-project/root/pull/663:11,deployability,build,build,11,@phsft-bot build please.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:11,deployability,build,build,11,@phsft-bot build please.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:11,deployability,build,build,11,@phsft-bot build please.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:17,deployability,version,version,17,"@davidlt Is this version still desirable, or should we make the jump directly to a more recent version like 1.2.11?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:95,deployability,version,version,95,"@davidlt Is this version still desirable, or should we make the jump directly to a more recent version like 1.2.11?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:17,integrability,version,version,17,"@davidlt Is this version still desirable, or should we make the jump directly to a more recent version like 1.2.11?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:95,integrability,version,version,95,"@davidlt Is this version still desirable, or should we make the jump directly to a more recent version like 1.2.11?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:17,modifiability,version,version,17,"@davidlt Is this version still desirable, or should we make the jump directly to a more recent version like 1.2.11?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:95,modifiability,version,version,95,"@davidlt Is this version still desirable, or should we make the jump directly to a more recent version like 1.2.11?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:35,deployability,version,version,35,"TL;DR Yes, this is still desirable version. The 1.2.8 was picked because HW compression/decompression accelerators provide zlib-shim based on 1.2.8 (Intel and Cavium does that). Also Cloudflare/CMS forks of zlib optimized for SSE4.2, AVX, AVX2 are based on 1.2.8.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:183,energy efficiency,Cloud,Cloudflare,183,"TL;DR Yes, this is still desirable version. The 1.2.8 was picked because HW compression/decompression accelerators provide zlib-shim based on 1.2.8 (Intel and Cavium does that). Also Cloudflare/CMS forks of zlib optimized for SSE4.2, AVX, AVX2 are based on 1.2.8.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:212,energy efficiency,optim,optimized,212,"TL;DR Yes, this is still desirable version. The 1.2.8 was picked because HW compression/decompression accelerators provide zlib-shim based on 1.2.8 (Intel and Cavium does that). Also Cloudflare/CMS forks of zlib optimized for SSE4.2, AVX, AVX2 are based on 1.2.8.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:35,integrability,version,version,35,"TL;DR Yes, this is still desirable version. The 1.2.8 was picked because HW compression/decompression accelerators provide zlib-shim based on 1.2.8 (Intel and Cavium does that). Also Cloudflare/CMS forks of zlib optimized for SSE4.2, AVX, AVX2 are based on 1.2.8.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:35,modifiability,version,version,35,"TL;DR Yes, this is still desirable version. The 1.2.8 was picked because HW compression/decompression accelerators provide zlib-shim based on 1.2.8 (Intel and Cavium does that). Also Cloudflare/CMS forks of zlib optimized for SSE4.2, AVX, AVX2 are based on 1.2.8.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:88,modifiability,deco,decompression,88,"TL;DR Yes, this is still desirable version. The 1.2.8 was picked because HW compression/decompression accelerators provide zlib-shim based on 1.2.8 (Intel and Cavium does that). Also Cloudflare/CMS forks of zlib optimized for SSE4.2, AVX, AVX2 are based on 1.2.8.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:212,performance,optimiz,optimized,212,"TL;DR Yes, this is still desirable version. The 1.2.8 was picked because HW compression/decompression accelerators provide zlib-shim based on 1.2.8 (Intel and Cavium does that). Also Cloudflare/CMS forks of zlib optimized for SSE4.2, AVX, AVX2 are based on 1.2.8.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:166,reliability,doe,does,166,"TL;DR Yes, this is still desirable version. The 1.2.8 was picked because HW compression/decompression accelerators provide zlib-shim based on 1.2.8 (Intel and Cavium does that). Also Cloudflare/CMS forks of zlib optimized for SSE4.2, AVX, AVX2 are based on 1.2.8.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:132,deployability,patch,patches,132,"@davidlt Ok, thanks for the explanation. Are the forks by CMS and Cloudfare only adding vectorization? Could we just upstream those patches if that's the case? Alternatively, should we include those patches in ROOT's version of zlib? zlib is probably quite stable between versions, maybe we can just rebase the patches on the more recent version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:199,deployability,patch,patches,199,"@davidlt Ok, thanks for the explanation. Are the forks by CMS and Cloudfare only adding vectorization? Could we just upstream those patches if that's the case? Alternatively, should we include those patches in ROOT's version of zlib? zlib is probably quite stable between versions, maybe we can just rebase the patches on the more recent version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:217,deployability,version,version,217,"@davidlt Ok, thanks for the explanation. Are the forks by CMS and Cloudfare only adding vectorization? Could we just upstream those patches if that's the case? Alternatively, should we include those patches in ROOT's version of zlib? zlib is probably quite stable between versions, maybe we can just rebase the patches on the more recent version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:272,deployability,version,versions,272,"@davidlt Ok, thanks for the explanation. Are the forks by CMS and Cloudfare only adding vectorization? Could we just upstream those patches if that's the case? Alternatively, should we include those patches in ROOT's version of zlib? zlib is probably quite stable between versions, maybe we can just rebase the patches on the more recent version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:311,deployability,patch,patches,311,"@davidlt Ok, thanks for the explanation. Are the forks by CMS and Cloudfare only adding vectorization? Could we just upstream those patches if that's the case? Alternatively, should we include those patches in ROOT's version of zlib? zlib is probably quite stable between versions, maybe we can just rebase the patches on the more recent version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:338,deployability,version,version,338,"@davidlt Ok, thanks for the explanation. Are the forks by CMS and Cloudfare only adding vectorization? Could we just upstream those patches if that's the case? Alternatively, should we include those patches in ROOT's version of zlib? zlib is probably quite stable between versions, maybe we can just rebase the patches on the more recent version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:66,energy efficiency,Cloud,Cloudfare,66,"@davidlt Ok, thanks for the explanation. Are the forks by CMS and Cloudfare only adding vectorization? Could we just upstream those patches if that's the case? Alternatively, should we include those patches in ROOT's version of zlib? zlib is probably quite stable between versions, maybe we can just rebase the patches on the more recent version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:217,integrability,version,version,217,"@davidlt Ok, thanks for the explanation. Are the forks by CMS and Cloudfare only adding vectorization? Could we just upstream those patches if that's the case? Alternatively, should we include those patches in ROOT's version of zlib? zlib is probably quite stable between versions, maybe we can just rebase the patches on the more recent version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:272,integrability,version,versions,272,"@davidlt Ok, thanks for the explanation. Are the forks by CMS and Cloudfare only adding vectorization? Could we just upstream those patches if that's the case? Alternatively, should we include those patches in ROOT's version of zlib? zlib is probably quite stable between versions, maybe we can just rebase the patches on the more recent version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:338,integrability,version,version,338,"@davidlt Ok, thanks for the explanation. Are the forks by CMS and Cloudfare only adding vectorization? Could we just upstream those patches if that's the case? Alternatively, should we include those patches in ROOT's version of zlib? zlib is probably quite stable between versions, maybe we can just rebase the patches on the more recent version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:217,modifiability,version,version,217,"@davidlt Ok, thanks for the explanation. Are the forks by CMS and Cloudfare only adding vectorization? Could we just upstream those patches if that's the case? Alternatively, should we include those patches in ROOT's version of zlib? zlib is probably quite stable between versions, maybe we can just rebase the patches on the more recent version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:272,modifiability,version,versions,272,"@davidlt Ok, thanks for the explanation. Are the forks by CMS and Cloudfare only adding vectorization? Could we just upstream those patches if that's the case? Alternatively, should we include those patches in ROOT's version of zlib? zlib is probably quite stable between versions, maybe we can just rebase the patches on the more recent version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:338,modifiability,version,version,338,"@davidlt Ok, thanks for the explanation. Are the forks by CMS and Cloudfare only adding vectorization? Could we just upstream those patches if that's the case? Alternatively, should we include those patches in ROOT's version of zlib? zlib is probably quite stable between versions, maybe we can just rebase the patches on the more recent version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:132,safety,patch,patches,132,"@davidlt Ok, thanks for the explanation. Are the forks by CMS and Cloudfare only adding vectorization? Could we just upstream those patches if that's the case? Alternatively, should we include those patches in ROOT's version of zlib? zlib is probably quite stable between versions, maybe we can just rebase the patches on the more recent version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:199,safety,patch,patches,199,"@davidlt Ok, thanks for the explanation. Are the forks by CMS and Cloudfare only adding vectorization? Could we just upstream those patches if that's the case? Alternatively, should we include those patches in ROOT's version of zlib? zlib is probably quite stable between versions, maybe we can just rebase the patches on the more recent version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:311,safety,patch,patches,311,"@davidlt Ok, thanks for the explanation. Are the forks by CMS and Cloudfare only adding vectorization? Could we just upstream those patches if that's the case? Alternatively, should we include those patches in ROOT's version of zlib? zlib is probably quite stable between versions, maybe we can just rebase the patches on the more recent version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:132,security,patch,patches,132,"@davidlt Ok, thanks for the explanation. Are the forks by CMS and Cloudfare only adding vectorization? Could we just upstream those patches if that's the case? Alternatively, should we include those patches in ROOT's version of zlib? zlib is probably quite stable between versions, maybe we can just rebase the patches on the more recent version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:199,security,patch,patches,199,"@davidlt Ok, thanks for the explanation. Are the forks by CMS and Cloudfare only adding vectorization? Could we just upstream those patches if that's the case? Alternatively, should we include those patches in ROOT's version of zlib? zlib is probably quite stable between versions, maybe we can just rebase the patches on the more recent version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:311,security,patch,patches,311,"@davidlt Ok, thanks for the explanation. Are the forks by CMS and Cloudfare only adding vectorization? Could we just upstream those patches if that's the case? Alternatively, should we include those patches in ROOT's version of zlib? zlib is probably quite stable between versions, maybe we can just rebase the patches on the more recent version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:198,availability,avail,available,198,"CMS fork is based on Cloudflare fork (which is Intel-only, adds SSE4.2and PCLMUL. CMS adds additional vectorization bits (adler32) and makes it fat (i.e. picks implementations at load time based on available ISA). You can build it on 10+ year old Intel system and successfully use AVX optimized adler32 if AVX is available at run-time. This would be introduced as a patch on top (after this is merged). . There is no effort to rebase Cloudflare fork on 1.2.11 and thus no CMS effort also (as of now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:313,availability,avail,available,313,"CMS fork is based on Cloudflare fork (which is Intel-only, adds SSE4.2and PCLMUL. CMS adds additional vectorization bits (adler32) and makes it fat (i.e. picks implementations at load time based on available ISA). You can build it on 10+ year old Intel system and successfully use AVX optimized adler32 if AVX is available at run-time. This would be introduced as a patch on top (after this is merged). . There is no effort to rebase Cloudflare fork on 1.2.11 and thus no CMS effort also (as of now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:222,deployability,build,build,222,"CMS fork is based on Cloudflare fork (which is Intel-only, adds SSE4.2and PCLMUL. CMS adds additional vectorization bits (adler32) and makes it fat (i.e. picks implementations at load time based on available ISA). You can build it on 10+ year old Intel system and successfully use AVX optimized adler32 if AVX is available at run-time. This would be introduced as a patch on top (after this is merged). . There is no effort to rebase Cloudflare fork on 1.2.11 and thus no CMS effort also (as of now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:366,deployability,patch,patch,366,"CMS fork is based on Cloudflare fork (which is Intel-only, adds SSE4.2and PCLMUL. CMS adds additional vectorization bits (adler32) and makes it fat (i.e. picks implementations at load time based on available ISA). You can build it on 10+ year old Intel system and successfully use AVX optimized adler32 if AVX is available at run-time. This would be introduced as a patch on top (after this is merged). . There is no effort to rebase Cloudflare fork on 1.2.11 and thus no CMS effort also (as of now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:21,energy efficiency,Cloud,Cloudflare,21,"CMS fork is based on Cloudflare fork (which is Intel-only, adds SSE4.2and PCLMUL. CMS adds additional vectorization bits (adler32) and makes it fat (i.e. picks implementations at load time based on available ISA). You can build it on 10+ year old Intel system and successfully use AVX optimized adler32 if AVX is available at run-time. This would be introduced as a patch on top (after this is merged). . There is no effort to rebase Cloudflare fork on 1.2.11 and thus no CMS effort also (as of now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:179,energy efficiency,load,load,179,"CMS fork is based on Cloudflare fork (which is Intel-only, adds SSE4.2and PCLMUL. CMS adds additional vectorization bits (adler32) and makes it fat (i.e. picks implementations at load time based on available ISA). You can build it on 10+ year old Intel system and successfully use AVX optimized adler32 if AVX is available at run-time. This would be introduced as a patch on top (after this is merged). . There is no effort to rebase Cloudflare fork on 1.2.11 and thus no CMS effort also (as of now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:285,energy efficiency,optim,optimized,285,"CMS fork is based on Cloudflare fork (which is Intel-only, adds SSE4.2and PCLMUL. CMS adds additional vectorization bits (adler32) and makes it fat (i.e. picks implementations at load time based on available ISA). You can build it on 10+ year old Intel system and successfully use AVX optimized adler32 if AVX is available at run-time. This would be introduced as a patch on top (after this is merged). . There is no effort to rebase Cloudflare fork on 1.2.11 and thus no CMS effort also (as of now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:434,energy efficiency,Cloud,Cloudflare,434,"CMS fork is based on Cloudflare fork (which is Intel-only, adds SSE4.2and PCLMUL. CMS adds additional vectorization bits (adler32) and makes it fat (i.e. picks implementations at load time based on available ISA). You can build it on 10+ year old Intel system and successfully use AVX optimized adler32 if AVX is available at run-time. This would be introduced as a patch on top (after this is merged). . There is no effort to rebase Cloudflare fork on 1.2.11 and thus no CMS effort also (as of now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:179,performance,load,load,179,"CMS fork is based on Cloudflare fork (which is Intel-only, adds SSE4.2and PCLMUL. CMS adds additional vectorization bits (adler32) and makes it fat (i.e. picks implementations at load time based on available ISA). You can build it on 10+ year old Intel system and successfully use AVX optimized adler32 if AVX is available at run-time. This would be introduced as a patch on top (after this is merged). . There is no effort to rebase Cloudflare fork on 1.2.11 and thus no CMS effort also (as of now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:184,performance,time,time,184,"CMS fork is based on Cloudflare fork (which is Intel-only, adds SSE4.2and PCLMUL. CMS adds additional vectorization bits (adler32) and makes it fat (i.e. picks implementations at load time based on available ISA). You can build it on 10+ year old Intel system and successfully use AVX optimized adler32 if AVX is available at run-time. This would be introduced as a patch on top (after this is merged). . There is no effort to rebase Cloudflare fork on 1.2.11 and thus no CMS effort also (as of now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:285,performance,optimiz,optimized,285,"CMS fork is based on Cloudflare fork (which is Intel-only, adds SSE4.2and PCLMUL. CMS adds additional vectorization bits (adler32) and makes it fat (i.e. picks implementations at load time based on available ISA). You can build it on 10+ year old Intel system and successfully use AVX optimized adler32 if AVX is available at run-time. This would be introduced as a patch on top (after this is merged). . There is no effort to rebase Cloudflare fork on 1.2.11 and thus no CMS effort also (as of now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:330,performance,time,time,330,"CMS fork is based on Cloudflare fork (which is Intel-only, adds SSE4.2and PCLMUL. CMS adds additional vectorization bits (adler32) and makes it fat (i.e. picks implementations at load time based on available ISA). You can build it on 10+ year old Intel system and successfully use AVX optimized adler32 if AVX is available at run-time. This would be introduced as a patch on top (after this is merged). . There is no effort to rebase Cloudflare fork on 1.2.11 and thus no CMS effort also (as of now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:198,reliability,availab,available,198,"CMS fork is based on Cloudflare fork (which is Intel-only, adds SSE4.2and PCLMUL. CMS adds additional vectorization bits (adler32) and makes it fat (i.e. picks implementations at load time based on available ISA). You can build it on 10+ year old Intel system and successfully use AVX optimized adler32 if AVX is available at run-time. This would be introduced as a patch on top (after this is merged). . There is no effort to rebase Cloudflare fork on 1.2.11 and thus no CMS effort also (as of now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:313,reliability,availab,available,313,"CMS fork is based on Cloudflare fork (which is Intel-only, adds SSE4.2and PCLMUL. CMS adds additional vectorization bits (adler32) and makes it fat (i.e. picks implementations at load time based on available ISA). You can build it on 10+ year old Intel system and successfully use AVX optimized adler32 if AVX is available at run-time. This would be introduced as a patch on top (after this is merged). . There is no effort to rebase Cloudflare fork on 1.2.11 and thus no CMS effort also (as of now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:198,safety,avail,available,198,"CMS fork is based on Cloudflare fork (which is Intel-only, adds SSE4.2and PCLMUL. CMS adds additional vectorization bits (adler32) and makes it fat (i.e. picks implementations at load time based on available ISA). You can build it on 10+ year old Intel system and successfully use AVX optimized adler32 if AVX is available at run-time. This would be introduced as a patch on top (after this is merged). . There is no effort to rebase Cloudflare fork on 1.2.11 and thus no CMS effort also (as of now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:313,safety,avail,available,313,"CMS fork is based on Cloudflare fork (which is Intel-only, adds SSE4.2and PCLMUL. CMS adds additional vectorization bits (adler32) and makes it fat (i.e. picks implementations at load time based on available ISA). You can build it on 10+ year old Intel system and successfully use AVX optimized adler32 if AVX is available at run-time. This would be introduced as a patch on top (after this is merged). . There is no effort to rebase Cloudflare fork on 1.2.11 and thus no CMS effort also (as of now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:366,safety,patch,patch,366,"CMS fork is based on Cloudflare fork (which is Intel-only, adds SSE4.2and PCLMUL. CMS adds additional vectorization bits (adler32) and makes it fat (i.e. picks implementations at load time based on available ISA). You can build it on 10+ year old Intel system and successfully use AVX optimized adler32 if AVX is available at run-time. This would be introduced as a patch on top (after this is merged). . There is no effort to rebase Cloudflare fork on 1.2.11 and thus no CMS effort also (as of now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:198,security,availab,available,198,"CMS fork is based on Cloudflare fork (which is Intel-only, adds SSE4.2and PCLMUL. CMS adds additional vectorization bits (adler32) and makes it fat (i.e. picks implementations at load time based on available ISA). You can build it on 10+ year old Intel system and successfully use AVX optimized adler32 if AVX is available at run-time. This would be introduced as a patch on top (after this is merged). . There is no effort to rebase Cloudflare fork on 1.2.11 and thus no CMS effort also (as of now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:313,security,availab,available,313,"CMS fork is based on Cloudflare fork (which is Intel-only, adds SSE4.2and PCLMUL. CMS adds additional vectorization bits (adler32) and makes it fat (i.e. picks implementations at load time based on available ISA). You can build it on 10+ year old Intel system and successfully use AVX optimized adler32 if AVX is available at run-time. This would be introduced as a patch on top (after this is merged). . There is no effort to rebase Cloudflare fork on 1.2.11 and thus no CMS effort also (as of now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:366,security,patch,patch,366,"CMS fork is based on Cloudflare fork (which is Intel-only, adds SSE4.2and PCLMUL. CMS adds additional vectorization bits (adler32) and makes it fat (i.e. picks implementations at load time based on available ISA). You can build it on 10+ year old Intel system and successfully use AVX optimized adler32 if AVX is available at run-time. This would be introduced as a patch on top (after this is merged). . There is no effort to rebase Cloudflare fork on 1.2.11 and thus no CMS effort also (as of now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:81,deployability,updat,update,81,"@peremato Could you please let us know what is your opinion? I think that if the update passes the tests, it shouldn't be a problem to merge this in. @davidlt It would still be interesting to try to upstream the patches to the official library instead of relying on a patched version. Do you think that would be too difficult?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:212,deployability,patch,patches,212,"@peremato Could you please let us know what is your opinion? I think that if the update passes the tests, it shouldn't be a problem to merge this in. @davidlt It would still be interesting to try to upstream the patches to the official library instead of relying on a patched version. Do you think that would be too difficult?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:268,deployability,patch,patched,268,"@peremato Could you please let us know what is your opinion? I think that if the update passes the tests, it shouldn't be a problem to merge this in. @davidlt It would still be interesting to try to upstream the patches to the official library instead of relying on a patched version. Do you think that would be too difficult?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:276,deployability,version,version,276,"@peremato Could you please let us know what is your opinion? I think that if the update passes the tests, it shouldn't be a problem to merge this in. @davidlt It would still be interesting to try to upstream the patches to the official library instead of relying on a patched version. Do you think that would be too difficult?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:276,integrability,version,version,276,"@peremato Could you please let us know what is your opinion? I think that if the update passes the tests, it shouldn't be a problem to merge this in. @davidlt It would still be interesting to try to upstream the patches to the official library instead of relying on a patched version. Do you think that would be too difficult?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:276,modifiability,version,version,276,"@peremato Could you please let us know what is your opinion? I think that if the update passes the tests, it shouldn't be a problem to merge this in. @davidlt It would still be interesting to try to upstream the patches to the official library instead of relying on a patched version. Do you think that would be too difficult?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:81,safety,updat,update,81,"@peremato Could you please let us know what is your opinion? I think that if the update passes the tests, it shouldn't be a problem to merge this in. @davidlt It would still be interesting to try to upstream the patches to the official library instead of relying on a patched version. Do you think that would be too difficult?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:99,safety,test,tests,99,"@peremato Could you please let us know what is your opinion? I think that if the update passes the tests, it shouldn't be a problem to merge this in. @davidlt It would still be interesting to try to upstream the patches to the official library instead of relying on a patched version. Do you think that would be too difficult?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:212,safety,patch,patches,212,"@peremato Could you please let us know what is your opinion? I think that if the update passes the tests, it shouldn't be a problem to merge this in. @davidlt It would still be interesting to try to upstream the patches to the official library instead of relying on a patched version. Do you think that would be too difficult?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:268,safety,patch,patched,268,"@peremato Could you please let us know what is your opinion? I think that if the update passes the tests, it shouldn't be a problem to merge this in. @davidlt It would still be interesting to try to upstream the patches to the official library instead of relying on a patched version. Do you think that would be too difficult?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:81,security,updat,update,81,"@peremato Could you please let us know what is your opinion? I think that if the update passes the tests, it shouldn't be a problem to merge this in. @davidlt It would still be interesting to try to upstream the patches to the official library instead of relying on a patched version. Do you think that would be too difficult?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:212,security,patch,patches,212,"@peremato Could you please let us know what is your opinion? I think that if the update passes the tests, it shouldn't be a problem to merge this in. @davidlt It would still be interesting to try to upstream the patches to the official library instead of relying on a patched version. Do you think that would be too difficult?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:268,security,patch,patched,268,"@peremato Could you please let us know what is your opinion? I think that if the update passes the tests, it shouldn't be a problem to merge this in. @davidlt It would still be interesting to try to upstream the patches to the official library instead of relying on a patched version. Do you think that would be too difficult?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:99,testability,test,tests,99,"@peremato Could you please let us know what is your opinion? I think that if the update passes the tests, it shouldn't be a problem to merge this in. @davidlt It would still be interesting to try to upstream the patches to the official library instead of relying on a patched version. Do you think that would be too difficult?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:110,deployability,releas,releases,110,TL;DR Difficult due to many reasons. I wouldn't count on upstreaming this. The upstream very rarely makes new releases. It was 4 years between 1.2.8 and 1.2.9. There are 81 pull request pending and I don't see comments from maintainer. Plus as-is it's not good enough for upstreaming. There are other pull request adding NEON/ARM optimized pieces thus a different multi-architecture & multi-ISA-extensions design might be needed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:330,energy efficiency,optim,optimized,330,TL;DR Difficult due to many reasons. I wouldn't count on upstreaming this. The upstream very rarely makes new releases. It was 4 years between 1.2.8 and 1.2.9. There are 81 pull request pending and I don't see comments from maintainer. Plus as-is it's not good enough for upstreaming. There are other pull request adding NEON/ARM optimized pieces thus a different multi-architecture & multi-ISA-extensions design might be needed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:370,interoperability,architectur,architecture,370,TL;DR Difficult due to many reasons. I wouldn't count on upstreaming this. The upstream very rarely makes new releases. It was 4 years between 1.2.8 and 1.2.9. There are 81 pull request pending and I don't see comments from maintainer. Plus as-is it's not good enough for upstreaming. There are other pull request adding NEON/ARM optimized pieces thus a different multi-architecture & multi-ISA-extensions design might be needed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:224,modifiability,maintain,maintainer,224,TL;DR Difficult due to many reasons. I wouldn't count on upstreaming this. The upstream very rarely makes new releases. It was 4 years between 1.2.8 and 1.2.9. There are 81 pull request pending and I don't see comments from maintainer. Plus as-is it's not good enough for upstreaming. There are other pull request adding NEON/ARM optimized pieces thus a different multi-architecture & multi-ISA-extensions design might be needed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:395,modifiability,extens,extensions,395,TL;DR Difficult due to many reasons. I wouldn't count on upstreaming this. The upstream very rarely makes new releases. It was 4 years between 1.2.8 and 1.2.9. There are 81 pull request pending and I don't see comments from maintainer. Plus as-is it's not good enough for upstreaming. There are other pull request adding NEON/ARM optimized pieces thus a different multi-architecture & multi-ISA-extensions design might be needed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:330,performance,optimiz,optimized,330,TL;DR Difficult due to many reasons. I wouldn't count on upstreaming this. The upstream very rarely makes new releases. It was 4 years between 1.2.8 and 1.2.9. There are 81 pull request pending and I don't see comments from maintainer. Plus as-is it's not good enough for upstreaming. There are other pull request adding NEON/ARM optimized pieces thus a different multi-architecture & multi-ISA-extensions design might be needed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:224,safety,maintain,maintainer,224,TL;DR Difficult due to many reasons. I wouldn't count on upstreaming this. The upstream very rarely makes new releases. It was 4 years between 1.2.8 and 1.2.9. There are 81 pull request pending and I don't see comments from maintainer. Plus as-is it's not good enough for upstreaming. There are other pull request adding NEON/ARM optimized pieces thus a different multi-architecture & multi-ISA-extensions design might be needed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:4,deployability,build,build,4,"The build seems alright, so upon receiving a green light from @peremato we can merge this. It does look like the maintainer is back, since there were 3 releases this year. Maybe if the patches are reworked they could be upstreamed, which would benefit eveyone. However, for now we should just focus on ROOT and get the base 1.2.8 version merged in.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:152,deployability,releas,releases,152,"The build seems alright, so upon receiving a green light from @peremato we can merge this. It does look like the maintainer is back, since there were 3 releases this year. Maybe if the patches are reworked they could be upstreamed, which would benefit eveyone. However, for now we should just focus on ROOT and get the base 1.2.8 version merged in.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:185,deployability,patch,patches,185,"The build seems alright, so upon receiving a green light from @peremato we can merge this. It does look like the maintainer is back, since there were 3 releases this year. Maybe if the patches are reworked they could be upstreamed, which would benefit eveyone. However, for now we should just focus on ROOT and get the base 1.2.8 version merged in.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:330,deployability,version,version,330,"The build seems alright, so upon receiving a green light from @peremato we can merge this. It does look like the maintainer is back, since there were 3 releases this year. Maybe if the patches are reworked they could be upstreamed, which would benefit eveyone. However, for now we should just focus on ROOT and get the base 1.2.8 version merged in.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:45,energy efficiency,green,green,45,"The build seems alright, so upon receiving a green light from @peremato we can merge this. It does look like the maintainer is back, since there were 3 releases this year. Maybe if the patches are reworked they could be upstreamed, which would benefit eveyone. However, for now we should just focus on ROOT and get the base 1.2.8 version merged in.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:330,integrability,version,version,330,"The build seems alright, so upon receiving a green light from @peremato we can merge this. It does look like the maintainer is back, since there were 3 releases this year. Maybe if the patches are reworked they could be upstreamed, which would benefit eveyone. However, for now we should just focus on ROOT and get the base 1.2.8 version merged in.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:113,modifiability,maintain,maintainer,113,"The build seems alright, so upon receiving a green light from @peremato we can merge this. It does look like the maintainer is back, since there were 3 releases this year. Maybe if the patches are reworked they could be upstreamed, which would benefit eveyone. However, for now we should just focus on ROOT and get the base 1.2.8 version merged in.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:330,modifiability,version,version,330,"The build seems alright, so upon receiving a green light from @peremato we can merge this. It does look like the maintainer is back, since there were 3 releases this year. Maybe if the patches are reworked they could be upstreamed, which would benefit eveyone. However, for now we should just focus on ROOT and get the base 1.2.8 version merged in.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:94,reliability,doe,does,94,"The build seems alright, so upon receiving a green light from @peremato we can merge this. It does look like the maintainer is back, since there were 3 releases this year. Maybe if the patches are reworked they could be upstreamed, which would benefit eveyone. However, for now we should just focus on ROOT and get the base 1.2.8 version merged in.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:113,safety,maintain,maintainer,113,"The build seems alright, so upon receiving a green light from @peremato we can merge this. It does look like the maintainer is back, since there were 3 releases this year. Maybe if the patches are reworked they could be upstreamed, which would benefit eveyone. However, for now we should just focus on ROOT and get the base 1.2.8 version merged in.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:185,safety,patch,patches,185,"The build seems alright, so upon receiving a green light from @peremato we can merge this. It does look like the maintainer is back, since there were 3 releases this year. Maybe if the patches are reworked they could be upstreamed, which would benefit eveyone. However, for now we should just focus on ROOT and get the base 1.2.8 version merged in.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:185,security,patch,patches,185,"The build seems alright, so upon receiving a green light from @peremato we can merge this. It does look like the maintainer is back, since there were 3 releases this year. Maybe if the patches are reworked they could be upstreamed, which would benefit eveyone. However, for now we should just focus on ROOT and get the base 1.2.8 version merged in.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:60,deployability,manag,manage,60,"@bbockelm Hi Brian, I am working on maybe using subtrees to manage the in-source external projects like zlib. However, that involves quite a few changes to our build system, so it will still take a bit until we can have the new version merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:160,deployability,build,build,160,"@bbockelm Hi Brian, I am working on maybe using subtrees to manage the in-source external projects like zlib. However, that involves quite a few changes to our build system, so it will still take a bit until we can have the new version merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:228,deployability,version,version,228,"@bbockelm Hi Brian, I am working on maybe using subtrees to manage the in-source external projects like zlib. However, that involves quite a few changes to our build system, so it will still take a bit until we can have the new version merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:60,energy efficiency,manag,manage,60,"@bbockelm Hi Brian, I am working on maybe using subtrees to manage the in-source external projects like zlib. However, that involves quite a few changes to our build system, so it will still take a bit until we can have the new version merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:48,integrability,sub,subtrees,48,"@bbockelm Hi Brian, I am working on maybe using subtrees to manage the in-source external projects like zlib. However, that involves quite a few changes to our build system, so it will still take a bit until we can have the new version merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:228,integrability,version,version,228,"@bbockelm Hi Brian, I am working on maybe using subtrees to manage the in-source external projects like zlib. However, that involves quite a few changes to our build system, so it will still take a bit until we can have the new version merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:228,modifiability,version,version,228,"@bbockelm Hi Brian, I am working on maybe using subtrees to manage the in-source external projects like zlib. However, that involves quite a few changes to our build system, so it will still take a bit until we can have the new version merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:60,safety,manag,manage,60,"@bbockelm Hi Brian, I am working on maybe using subtrees to manage the in-source external projects like zlib. However, that involves quite a few changes to our build system, so it will still take a bit until we can have the new version merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:78,integrability,sub,subtree,78,@amadio I don't think that tying this PR to a completely different one (about subtree) is good idea (especially since the subtree PR is likely to spark some debate).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:122,integrability,sub,subtree,122,@amadio I don't think that tying this PR to a completely different one (about subtree) is good idea (especially since the subtree PR is likely to spark some debate).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:46,safety,compl,completely,46,@amadio I don't think that tying this PR to a completely different one (about subtree) is good idea (especially since the subtree PR is likely to spark some debate).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:46,security,compl,completely,46,@amadio I don't think that tying this PR to a completely different one (about subtree) is good idea (especially since the subtree PR is likely to spark some debate).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:19,deployability,manag,manage,19,"@pcanal We want to manage externals in a more homogeneous way in the future, and Pere liked the idea of using subtree for externals that we have copies in the repository. Let's add this topic to the group meeting today.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:19,energy efficiency,manag,manage,19,"@pcanal We want to manage externals in a more homogeneous way in the future, and Pere liked the idea of using subtree for externals that we have copies in the repository. Let's add this topic to the group meeting today.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:110,integrability,sub,subtree,110,"@pcanal We want to manage externals in a more homogeneous way in the future, and Pere liked the idea of using subtree for externals that we have copies in the repository. Let's add this topic to the group meeting today.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:159,integrability,repositor,repository,159,"@pcanal We want to manage externals in a more homogeneous way in the future, and Pere liked the idea of using subtree for externals that we have copies in the repository. Let's add this topic to the group meeting today.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:186,integrability,topic,topic,186,"@pcanal We want to manage externals in a more homogeneous way in the future, and Pere liked the idea of using subtree for externals that we have copies in the repository. Let's add this topic to the group meeting today.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:159,interoperability,repositor,repository,159,"@pcanal We want to manage externals in a more homogeneous way in the future, and Pere liked the idea of using subtree for externals that we have copies in the repository. Let's add this topic to the group meeting today.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:19,safety,manag,manage,19,"@pcanal We want to manage externals in a more homogeneous way in the future, and Pere liked the idea of using subtree for externals that we have copies in the repository. Let's add this topic to the group meeting today.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:209,deployability,stage,stage,209,"I do not see a reason why this PR should probably be be blocked by your work on subtrees. Can't you deal with the zlib subtree after this has been merged, also given that the subtree idea is in the discussion stage? (I believe that's what Philippe meant with ""tying this PR to that""). So - who's going to merge this? :-) @peremato ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:80,integrability,sub,subtrees,80,"I do not see a reason why this PR should probably be be blocked by your work on subtrees. Can't you deal with the zlib subtree after this has been merged, also given that the subtree idea is in the discussion stage? (I believe that's what Philippe meant with ""tying this PR to that""). So - who's going to merge this? :-) @peremato ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:119,integrability,sub,subtree,119,"I do not see a reason why this PR should probably be be blocked by your work on subtrees. Can't you deal with the zlib subtree after this has been merged, also given that the subtree idea is in the discussion stage? (I believe that's what Philippe meant with ""tying this PR to that""). So - who's going to merge this? :-) @peremato ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:175,integrability,sub,subtree,175,"I do not see a reason why this PR should probably be be blocked by your work on subtrees. Can't you deal with the zlib subtree after this has been merged, also given that the subtree idea is in the discussion stage? (I believe that's what Philippe meant with ""tying this PR to that""). So - who's going to merge this? :-) @peremato ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:214,integrability,sub,subtree,214,"I wanted to have merged it as is before, but was asked not to. I am not blocking this either, as my first comment is from two weeks ago, while the PR is from June 19. Feel free to merge, we can deal with using git subtree later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/663:11,deployability,build,build,11,@phsft-bot build please,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/663
https://github.com/root-project/root/pull/665:58,reliability,doe,does,58,"The header will be compiled with C++. And this definition does what C++ is asking for, and allows us to sneak in an attribute. And btw, it's basically unused because +/- all code is getting `NULL` from outside this header as RtypesCore.h `#include`s stddef.h. It's just a (likely irrelevant) fallback.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/665
https://github.com/root-project/root/pull/665:54,interoperability,standard,standard,54,"I still don't see the advantage in deviating from the standard (i.e., either `#include <cstddef>` instead of `stddef.h` or just `#define NULL nullptr`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/665
https://github.com/root-project/root/pull/665:56,interoperability,standard,standard,56,"> I still don't see the advantage in deviating from the standard (i.e., either #include <cstddef> instead of stddef.h or just #define NULL nullptr). Let's see whether all implementations provide it as prescribed and simply remove it from ROOT (in a new PR). Once that works I'll close this one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/665
https://github.com/root-project/root/pull/665:216,testability,simpl,simply,216,"> I still don't see the advantage in deviating from the standard (i.e., either #include <cstddef> instead of stddef.h or just #define NULL nullptr). Let's see whether all implementations provide it as prescribed and simply remove it from ROOT (in a new PR). Once that works I'll close this one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/665
https://github.com/root-project/root/pull/665:216,usability,simpl,simply,216,"> I still don't see the advantage in deviating from the standard (i.e., either #include <cstddef> instead of stddef.h or just #define NULL nullptr). Let's see whether all implementations provide it as prescribed and simply remove it from ROOT (in a new PR). Once that works I'll close this one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/665
https://github.com/root-project/root/pull/665:279,usability,close,close,279,"> I still don't see the advantage in deviating from the standard (i.e., either #include <cstddef> instead of stddef.h or just #define NULL nullptr). Let's see whether all implementations provide it as prescribed and simply remove it from ROOT (in a new PR). Once that works I'll close this one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/665
https://github.com/root-project/root/pull/666:84,modifiability,scenario,scenario,84,"On a general note, very nice find! Thanks! Does the second graph means that in that scenario the 'merging' is now the bottle neck (i.e the one long thread)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:43,reliability,Doe,Does,43,"On a general note, very nice find! Thanks! Does the second graph means that in that scenario the 'merging' is now the bottle neck (i.e the one long thread)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:47,performance,bottleneck,bottleneck,47,"Yes, the second graph basically shows that the bottleneck is now the disk speed. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:69,performance,disk,disk,69,"Yes, the second graph basically shows that the bottleneck is now the disk speed. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:46,deployability,instal,installed,46,"I am asking for access to an NVMe SSD that is installed on this server. With that I will collect more scaling data, which should be much better than before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:102,modifiability,scal,scaling,102,"I am asking for access to an NVMe SSD that is installed on this server. With that I will collect more scaling data, which should be much better than before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:16,security,access,access,16,"I am asking for access to an NVMe SSD that is installed on this server. With that I will collect more scaling data, which should be much better than before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:61,availability,cluster,cluster,61,The graph 'seems' to also indicates that there is only 'one' cluster per thread .. is that plausible? I am deriving this guess from the fact that the merger thread seems to only start doing something after the worker thread has mostly done all their work.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:61,deployability,cluster,cluster,61,The graph 'seems' to also indicates that there is only 'one' cluster per thread .. is that plausible? I am deriving this guess from the fact that the merger thread seems to only start doing something after the worker thread has mostly done all their work.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:26,usability,indicat,indicates,26,The graph 'seems' to also indicates that there is only 'one' cluster per thread .. is that plausible? I am deriving this guess from the fact that the merger thread seems to only start doing something after the worker thread has mostly done all their work.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:48,deployability,instal,installed,48,"> I am asking for access to an NVMe SSD that is installed on this server. To emulate an infinite speed disk, I suspect you can also write the file named ""/dev/null"" :). More realistically, this is actually good news and we ought to be able to compare the run-time of this process to the run-time of the equivalent copy or dd of full resulting file ... humm this would involve/include the reading so a completely fair comparison ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:103,performance,disk,disk,103,"> I am asking for access to an NVMe SSD that is installed on this server. To emulate an infinite speed disk, I suspect you can also write the file named ""/dev/null"" :). More realistically, this is actually good news and we ought to be able to compare the run-time of this process to the run-time of the equivalent copy or dd of full resulting file ... humm this would involve/include the reading so a completely fair comparison ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:259,performance,time,time,259,"> I am asking for access to an NVMe SSD that is installed on this server. To emulate an infinite speed disk, I suspect you can also write the file named ""/dev/null"" :). More realistically, this is actually good news and we ought to be able to compare the run-time of this process to the run-time of the equivalent copy or dd of full resulting file ... humm this would involve/include the reading so a completely fair comparison ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:291,performance,time,time,291,"> I am asking for access to an NVMe SSD that is installed on this server. To emulate an infinite speed disk, I suspect you can also write the file named ""/dev/null"" :). More realistically, this is actually good news and we ought to be able to compare the run-time of this process to the run-time of the equivalent copy or dd of full resulting file ... humm this would involve/include the reading so a completely fair comparison ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:401,safety,compl,completely,401,"> I am asking for access to an NVMe SSD that is installed on this server. To emulate an infinite speed disk, I suspect you can also write the file named ""/dev/null"" :). More realistically, this is actually good news and we ought to be able to compare the run-time of this process to the run-time of the equivalent copy or dd of full resulting file ... humm this would involve/include the reading so a completely fair comparison ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:18,security,access,access,18,"> I am asking for access to an NVMe SSD that is installed on this server. To emulate an infinite speed disk, I suspect you can also write the file named ""/dev/null"" :). More realistically, this is actually good news and we ought to be able to compare the run-time of this process to the run-time of the equivalent copy or dd of full resulting file ... humm this would involve/include the reading so a completely fair comparison ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:401,security,compl,completely,401,"> I am asking for access to an NVMe SSD that is installed on this server. To emulate an infinite speed disk, I suspect you can also write the file named ""/dev/null"" :). More realistically, this is actually good news and we ought to be able to compare the run-time of this process to the run-time of the equivalent copy or dd of full resulting file ... humm this would involve/include the reading so a completely fair comparison ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:77,testability,emul,emulate,77,"> I am asking for access to an NVMe SSD that is installed on this server. To emulate an infinite speed disk, I suspect you can also write the file named ""/dev/null"" :). More realistically, this is actually good news and we ought to be able to compare the run-time of this process to the run-time of the equivalent copy or dd of full resulting file ... humm this would involve/include the reading so a completely fair comparison ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:10,deployability,fail,failing,10,"Well, the failing test shows that there is indeed a problem with my changes. I will push a new version shortly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:95,deployability,version,version,95,"Well, the failing test shows that there is indeed a problem with my changes. I will push a new version shortly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:95,integrability,version,version,95,"Well, the failing test shows that there is indeed a problem with my changes. I will push a new version shortly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:95,modifiability,version,version,95,"Well, the failing test shows that there is indeed a problem with my changes. I will push a new version shortly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:10,reliability,fail,failing,10,"Well, the failing test shows that there is indeed a problem with my changes. I will push a new version shortly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:18,safety,test,test,18,"Well, the failing test shows that there is indeed a problem with my changes. I will push a new version shortly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:18,testability,test,test,18,"Well, the failing test shows that there is indeed a problem with my changes. I will push a new version shortly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:138,safety,test,test,138,I removed the other two commits because I still see a race condition on `TList::RecursiveRemove` that causes a crash of the TBufferMerger test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:138,testability,test,test,138,I removed the other two commits because I still see a race condition on `TList::RecursiveRemove` that causes a crash of the TBufferMerger test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:89,deployability,stack,stack,89,> I removed the other two commits because I still see a race condition on. What were the stack trace?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:95,testability,trace,trace,95,> I removed the other two commits because I still see a race condition on. What were the stack trace?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:186,deployability,stack,stack,186,"```. ... [ RUN ] TBufferMerger.ParallelTreeFill. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7f75ebd7a700 (LWP 834)):. #0 0x00007f75eee0eb7b in __GI___waitpid (pid=841, stat_loc=stat_loc. entry=0x7f75ebd72bc0, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007f75eed961eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f75eff097d8 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007f75eff0be1c in TUnixSystem::DispatchSignals (this=0x1e074f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3643. #5 <signal handler called>. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f75f0758a38 in TFileMerger::MergeRecursive (this=0x7f75ebd75a90, target=0x7f75e4dd2780, sourcelist=0x7f75e4844ec0, type=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:756. #12 0x00007f75f0756e37 in TFileMerger::P",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:737,deployability,Stack,StackTrace,737,"```. ... [ RUN ] TBufferMerger.ParallelTreeFill. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7f75ebd7a700 (LWP 834)):. #0 0x00007f75eee0eb7b in __GI___waitpid (pid=841, stat_loc=stat_loc. entry=0x7f75ebd72bc0, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007f75eed961eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f75eff097d8 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007f75eff0be1c in TUnixSystem::DispatchSignals (this=0x1e074f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3643. #5 <signal handler called>. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f75f0758a38 in TFileMerger::MergeRecursive (this=0x7f75ebd75a90, target=0x7f75e4dd2780, sourcelist=0x7f75e4844ec0, type=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:756. #12 0x00007f75f0756e37 in TFileMerger::P",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3343,deployability,build,build,3343,"inux-gnu/7.1.0/libstdc++.so.6. #15 0x00007f75ef0f43f4 in start_thread (arg=0x7f75ebd7a700) at pthread_create.c:333. #16 0x00007f75eee3f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7f75f1325a80 (LWP 771)):. #0 0x00007f75ef0f56cd in pthread_join (threadid=140144444679936, thread_return=0x0) at pthread_join.c:90. #1 0x00007f75ef905063 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x00000000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3620,deployability,build,build,3620,"d_join (threadid=140144444679936, thread_return=0x0) at pthread_join.c:90. #1 0x00007f75ef905063 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3771,deployability,build,build,3771,"linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3926,deployability,build,build,3926," at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/g",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:4081,deployability,build,build,4081,"/home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstan",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:4258,deployability,build,build,4258," ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:4595,deployability,build,build,4595,"ody"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:4917,deployability,build,build,4917,"madio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:5117,deployability,build,build,5117,"test/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashLis",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:5250,deployability,build,build,5250,"adio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:5402,deployability,build,build,5402,"fSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:5800,deployability,stack,stack,5800," out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f75f0758a38 in TFileMerger::MergeRecursive (this=0x7f75ebd75a90, targe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:524,energy efficiency,optim,optimized,524,"```. ... [ RUN ] TBufferMerger.ParallelTreeFill. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7f75ebd7a700 (LWP 834)):. #0 0x00007f75eee0eb7b in __GI___waitpid (pid=841, stat_loc=stat_loc. entry=0x7f75ebd72bc0, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007f75eed961eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f75eff097d8 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007f75eff0be1c in TUnixSystem::DispatchSignals (this=0x1e074f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3643. #5 <signal handler called>. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f75f0758a38 in TFileMerger::MergeRecursive (this=0x7f75ebd75a90, target=0x7f75e4dd2780, sourcelist=0x7f75e4844ec0, type=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:756. #12 0x00007f75f0756e37 in TFileMerger::P",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:628,energy efficiency,optim,optimized,628,"```. ... [ RUN ] TBufferMerger.ParallelTreeFill. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7f75ebd7a700 (LWP 834)):. #0 0x00007f75eee0eb7b in __GI___waitpid (pid=841, stat_loc=stat_loc. entry=0x7f75ebd72bc0, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007f75eed961eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f75eff097d8 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007f75eff0be1c in TUnixSystem::DispatchSignals (this=0x1e074f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3643. #5 <signal handler called>. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f75f0758a38 in TFileMerger::MergeRecursive (this=0x7f75ebd75a90, target=0x7f75e4dd2780, sourcelist=0x7f75e4844ec0, type=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:756. #12 0x00007f75f0756e37 in TFileMerger::P",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:685,energy efficiency,core,core,685,"```. ... [ RUN ] TBufferMerger.ParallelTreeFill. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7f75ebd7a700 (LWP 834)):. #0 0x00007f75eee0eb7b in __GI___waitpid (pid=841, stat_loc=stat_loc. entry=0x7f75ebd72bc0, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007f75eed961eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f75eff097d8 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007f75eff0be1c in TUnixSystem::DispatchSignals (this=0x1e074f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3643. #5 <signal handler called>. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f75f0758a38 in TFileMerger::MergeRecursive (this=0x7f75ebd75a90, target=0x7f75e4dd2780, sourcelist=0x7f75e4844ec0, type=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:756. #12 0x00007f75f0756e37 in TFileMerger::P",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:790,energy efficiency,core,core,790,"```. ... [ RUN ] TBufferMerger.ParallelTreeFill. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7f75ebd7a700 (LWP 834)):. #0 0x00007f75eee0eb7b in __GI___waitpid (pid=841, stat_loc=stat_loc. entry=0x7f75ebd72bc0, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007f75eed961eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f75eff097d8 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007f75eff0be1c in TUnixSystem::DispatchSignals (this=0x1e074f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3643. #5 <signal handler called>. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f75f0758a38 in TFileMerger::MergeRecursive (this=0x7f75ebd75a90, target=0x7f75e4dd2780, sourcelist=0x7f75e4844ec0, type=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:756. #12 0x00007f75f0756e37 in TFileMerger::P",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:953,energy efficiency,core,core,953,"```. ... [ RUN ] TBufferMerger.ParallelTreeFill. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7f75ebd7a700 (LWP 834)):. #0 0x00007f75eee0eb7b in __GI___waitpid (pid=841, stat_loc=stat_loc. entry=0x7f75ebd72bc0, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007f75eed961eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f75eff097d8 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007f75eff0be1c in TUnixSystem::DispatchSignals (this=0x1e074f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3643. #5 <signal handler called>. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f75f0758a38 in TFileMerger::MergeRecursive (this=0x7f75ebd75a90, target=0x7f75e4dd2780, sourcelist=0x7f75e4844ec0, type=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:756. #12 0x00007f75f0756e37 in TFileMerger::P",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:1105,energy efficiency,core,core,1105,"=======================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7f75ebd7a700 (LWP 834)):. #0 0x00007f75eee0eb7b in __GI___waitpid (pid=841, stat_loc=stat_loc. entry=0x7f75ebd72bc0, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007f75eed961eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f75eff097d8 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007f75eff0be1c in TUnixSystem::DispatchSignals (this=0x1e074f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3643. #5 <signal handler called>. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f75f0758a38 in TFileMerger::MergeRecursive (this=0x7f75ebd75a90, target=0x7f75e4dd2780, sourcelist=0x7f75e4844ec0, type=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:756. #12 0x00007f75f0756e37 in TFileMerger::PartialMerge (this=this. entry=0x7f75ebd75a90, in_type=in_type. entry=14) at /home/amadio/src/root/io/io/src",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:1193,energy efficiency,optim,optimized,1193,"of all threads:. ===========================================================. Thread 2 (Thread 0x7f75ebd7a700 (LWP 834)):. #0 0x00007f75eee0eb7b in __GI___waitpid (pid=841, stat_loc=stat_loc. entry=0x7f75ebd72bc0, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007f75eed961eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f75eff097d8 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007f75eff0be1c in TUnixSystem::DispatchSignals (this=0x1e074f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3643. #5 <signal handler called>. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f75f0758a38 in TFileMerger::MergeRecursive (this=0x7f75ebd75a90, target=0x7f75e4dd2780, sourcelist=0x7f75e4844ec0, type=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:756. #12 0x00007f75f0756e37 in TFileMerger::PartialMerge (this=this. entry=0x7f75ebd75a90, in_type=in_type. entry=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:842. #13 0x00007f75f073097e in ROOT::Experimental::TBufferMerger::WriteOut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:1254,energy efficiency,core,core,1254,"==================. Thread 2 (Thread 0x7f75ebd7a700 (LWP 834)):. #0 0x00007f75eee0eb7b in __GI___waitpid (pid=841, stat_loc=stat_loc. entry=0x7f75ebd72bc0, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007f75eed961eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f75eff097d8 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007f75eff0be1c in TUnixSystem::DispatchSignals (this=0x1e074f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3643. #5 <signal handler called>. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f75f0758a38 in TFileMerger::MergeRecursive (this=0x7f75ebd75a90, target=0x7f75e4dd2780, sourcelist=0x7f75e4844ec0, type=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:756. #12 0x00007f75f0756e37 in TFileMerger::PartialMerge (this=this. entry=0x7f75ebd75a90, in_type=in_type. entry=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:842. #13 0x00007f75f073097e in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7fff3e662d00) at /home/amadio/src/root/io/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:1363,energy efficiency,optim,optimized,1363,"1, stat_loc=stat_loc. entry=0x7f75ebd72bc0, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007f75eed961eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f75eff097d8 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007f75eff0be1c in TUnixSystem::DispatchSignals (this=0x1e074f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3643. #5 <signal handler called>. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f75f0758a38 in TFileMerger::MergeRecursive (this=0x7f75ebd75a90, target=0x7f75e4dd2780, sourcelist=0x7f75e4844ec0, type=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:756. #12 0x00007f75f0756e37 in TFileMerger::PartialMerge (this=this. entry=0x7f75ebd75a90, in_type=in_type. entry=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:842. #13 0x00007f75f073097e in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7fff3e662d00) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:90. #14 0x00007f75ef904d9e in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:1404,energy efficiency,core,core,1404,"2bc0, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007f75eed961eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f75eff097d8 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007f75eff0be1c in TUnixSystem::DispatchSignals (this=0x1e074f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3643. #5 <signal handler called>. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f75f0758a38 in TFileMerger::MergeRecursive (this=0x7f75ebd75a90, target=0x7f75e4dd2780, sourcelist=0x7f75e4844ec0, type=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:756. #12 0x00007f75f0756e37 in TFileMerger::PartialMerge (this=this. entry=0x7f75ebd75a90, in_type=in_type. entry=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:842. #13 0x00007f75f073097e in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7fff3e662d00) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:90. #14 0x00007f75ef904d9e in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #15 0x00007f75ef0f43f4 in sta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:1506,energy efficiency,optim,optimized,1506,"ystem (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f75eff097d8 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007f75eff0be1c in TUnixSystem::DispatchSignals (this=0x1e074f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3643. #5 <signal handler called>. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f75f0758a38 in TFileMerger::MergeRecursive (this=0x7f75ebd75a90, target=0x7f75e4dd2780, sourcelist=0x7f75e4844ec0, type=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:756. #12 0x00007f75f0756e37 in TFileMerger::PartialMerge (this=this. entry=0x7f75ebd75a90, in_type=in_type. entry=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:842. #13 0x00007f75f073097e in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7fff3e662d00) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:90. #14 0x00007f75ef904d9e in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #15 0x00007f75ef0f43f4 in start_thread (arg=0x7f75ebd7a700) at pthread_create.c:333. #16 0x00007f75eee3f65f in clone () at ../sysdeps/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:1738,energy efficiency,core,core,1738,"ckTrace (this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007f75eff0be1c in TUnixSystem::DispatchSignals (this=0x1e074f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3643. #5 <signal handler called>. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f75f0758a38 in TFileMerger::MergeRecursive (this=0x7f75ebd75a90, target=0x7f75e4dd2780, sourcelist=0x7f75e4844ec0, type=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:756. #12 0x00007f75f0756e37 in TFileMerger::PartialMerge (this=this. entry=0x7f75ebd75a90, in_type=in_type. entry=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:842. #13 0x00007f75f073097e in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7fff3e662d00) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:90. #14 0x00007f75ef904d9e in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #15 0x00007f75ef0f43f4 in start_thread (arg=0x7f75ebd7a700) at pthread_create.c:333. #16 0x00007f75eee3f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7f75f1325a80 (LWP 771)):. #0 0x00007f75ef0f56cd in pthread_join (threadid=140144444679936, thread_return=0x0) at pthread_join.c:90. #1 0x00007f75ef905063 in std::thread::join",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:2914,energy efficiency,optim,optimized,2914,"/src/root/io/io/src/TFileMerger.cxx:756. #12 0x00007f75f0756e37 in TFileMerger::PartialMerge (this=this. entry=0x7f75ebd75a90, in_type=in_type. entry=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:842. #13 0x00007f75f073097e in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7fff3e662d00) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:90. #14 0x00007f75ef904d9e in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #15 0x00007f75ef0f43f4 in start_thread (arg=0x7f75ebd7a700) at pthread_create.c:333. #16 0x00007f75eee3f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7f75f1325a80 (LWP 771)):. #0 0x00007f75ef0f56cd in pthread_join (threadid=140144444679936, thread_return=0x0) at pthread_join.c:90. #1 0x00007f75ef905063 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3065,energy efficiency,optim,optimized,3065,"4) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:842. #13 0x00007f75f073097e in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7fff3e662d00) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:90. #14 0x00007f75ef904d9e in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #15 0x00007f75ef0f43f4 in start_thread (arg=0x7f75ebd7a700) at pthread_create.c:333. #16 0x00007f75eee3f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7f75f1325a80 (LWP 771)):. #0 0x00007f75ef0f56cd in pthread_join (threadid=140144444679936, thread_return=0x0) at pthread_join.c:90. #1 0x00007f75ef905063 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3287,energy efficiency,optim,optimized,3287,"0007f75ef904d9e in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #15 0x00007f75ef0f43f4 in start_thread (arg=0x7f75ebd7a700) at pthread_create.c:333. #16 0x00007f75eee3f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7f75f1325a80 (LWP 771)):. #0 0x00007f75ef0f56cd in pthread_join (threadid=140144444679936, thread_return=0x0) at pthread_join.c:90. #1 0x00007f75ef905063 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/g",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3311,energy efficiency,optim,optimized,3311," from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #15 0x00007f75ef0f43f4 in start_thread (arg=0x7f75ebd7a700) at pthread_create.c:333. #16 0x00007f75eee3f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7f75f1325a80 (LWP 771)):. #0 0x00007f75ef0f56cd in pthread_join (threadid=140144444679936, thread_return=0x0) at pthread_join.c:90. #1 0x00007f75ef905063 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3537,energy efficiency,optim,optimized,3537,"105. Thread 1 (Thread 0x7f75f1325a80 (LWP 771)):. #0 0x00007f75ef0f56cd in pthread_join (threadid=140144444679936, thread_return=0x0) at pthread_join.c:90. #1 0x00007f75ef905063 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:4539,energy efficiency,optim,optimized,4539,"ed out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:4563,energy efficiency,optim,optimized,4563,"on. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:4794,energy efficiency,optim,optimized,4794,"/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. Please post the ENTIRE",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:5349,energy efficiency,optim,optimized,5349," in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/ro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:6058,energy efficiency,core,core,6058,"ing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f75f0758a38 in TFileMerger::MergeRecursive (this=0x7f75ebd75a90, target=0x7f75e4dd2780, sourcelist=0x7f75e4844ec0, type=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:756. #12 0x00007f75f0756e37 in TFileMerger::PartialMerge (this=this. entry=0x7f75ebd75a90, in_type=in_type. entry=14) at /home/amadio/src/root/io/io/src",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:6146,energy efficiency,optim,optimized,6146,"oogletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f75f0758a38 in TFileMerger::MergeRecursive (this=0x7f75ebd75a90, target=0x7f75e4dd2780, sourcelist=0x7f75e4844ec0, type=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:756. #12 0x00007f75f0756e37 in TFileMerger::PartialMerge (this=this. entry=0x7f75ebd75a90, in_type=in_type. entry=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:842. #13 0x00007f75f073097e in ROOT::Experimental::TBufferMerger::WriteOut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:6207,energy efficiency,core,core,6207,"7c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f75f0758a38 in TFileMerger::MergeRecursive (this=0x7f75ebd75a90, target=0x7f75e4dd2780, sourcelist=0x7f75e4844ec0, type=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:756. #12 0x00007f75f0756e37 in TFileMerger::PartialMerge (this=this. entry=0x7f75ebd75a90, in_type=in_type. entry=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:842. #13 0x00007f75f073097e in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7fff3e662d00) at /home/amadio/src/root/io/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:6316,energy efficiency,optim,optimized,6316,"est.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f75f0758a38 in TFileMerger::MergeRecursive (this=0x7f75ebd75a90, target=0x7f75e4dd2780, sourcelist=0x7f75e4844ec0, type=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:756. #12 0x00007f75f0756e37 in TFileMerger::PartialMerge (this=this. entry=0x7f75ebd75a90, in_type=in_type. entry=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:842. #13 0x00007f75f073097e in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7fff3e662d00) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:90. #14 0x00007f75ef904d9e in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:6357,energy efficiency,core,core,6357,"out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f75f0758a38 in TFileMerger::MergeRecursive (this=0x7f75ebd75a90, target=0x7f75e4dd2780, sourcelist=0x7f75e4844ec0, type=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:756. #12 0x00007f75f0756e37 in TFileMerger::PartialMerge (this=this. entry=0x7f75ebd75a90, in_type=in_type. entry=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:842. #13 0x00007f75f073097e in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7fff3e662d00) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:90. #14 0x00007f75ef904d9e in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #15 0x00007f75ef0f43f4 in sta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:6459,energy efficiency,optim,optimized,6459,"st_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f75f0758a38 in TFileMerger::MergeRecursive (this=0x7f75ebd75a90, target=0x7f75e4dd2780, sourcelist=0x7f75e4844ec0, type=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:756. #12 0x00007f75f0756e37 in TFileMerger::PartialMerge (this=this. entry=0x7f75ebd75a90, in_type=in_type. entry=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:842. #13 0x00007f75f073097e in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7fff3e662d00) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:90. #14 0x00007f75ef904d9e in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #15 0x00007f75ef0f43f4 in start_thread (arg=0x7f75ebd7a700) at pthread_create.c:333. #16 0x00007f75eee3f65f in clone () at ../sysdeps/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:6691,energy efficiency,core,core,6691,"inced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f75f0758a38 in TFileMerger::MergeRecursive (this=0x7f75ebd75a90, target=0x7f75e4dd2780, sourcelist=0x7f75e4844ec0, type=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:756. #12 0x00007f75f0756e37 in TFileMerger::PartialMerge (this=this. entry=0x7f75ebd75a90, in_type=in_type. entry=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:842. #13 0x00007f75f073097e in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7fff3e662d00) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:90. #14 0x00007f75ef904d9e in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #15 0x00007f75ef0f43f4 in start_thread (arg=0x7f75ebd7a700) at pthread_create.c:333. #16 0x00007f75eee3f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. ===========================================================. Fatal in <TFileMerger::RecursiveRemove>: Output file of the TFile Merger (targeting tbuffermerger_parallel.root) has been deleted (l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:4512,integrability,event,event,4512,"ry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ====================================",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:4882,integrability,event,event,4882,"fo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might hel",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:5731,integrability,sub,submit,5731,"g::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:31,performance,Parallel,ParallelTreeFill,31,"```. ... [ RUN ] TBufferMerger.ParallelTreeFill. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7f75ebd7a700 (LWP 834)):. #0 0x00007f75eee0eb7b in __GI___waitpid (pid=841, stat_loc=stat_loc. entry=0x7f75ebd72bc0, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007f75eed961eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f75eff097d8 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007f75eff0be1c in TUnixSystem::DispatchSignals (this=0x1e074f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3643. #5 <signal handler called>. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f75f0758a38 in TFileMerger::MergeRecursive (this=0x7f75ebd75a90, target=0x7f75e4dd2780, sourcelist=0x7f75e4844ec0, type=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:756. #12 0x00007f75f0756e37 in TFileMerger::P",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:524,performance,optimiz,optimized,524,"```. ... [ RUN ] TBufferMerger.ParallelTreeFill. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7f75ebd7a700 (LWP 834)):. #0 0x00007f75eee0eb7b in __GI___waitpid (pid=841, stat_loc=stat_loc. entry=0x7f75ebd72bc0, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007f75eed961eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f75eff097d8 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007f75eff0be1c in TUnixSystem::DispatchSignals (this=0x1e074f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3643. #5 <signal handler called>. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f75f0758a38 in TFileMerger::MergeRecursive (this=0x7f75ebd75a90, target=0x7f75e4dd2780, sourcelist=0x7f75e4844ec0, type=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:756. #12 0x00007f75f0756e37 in TFileMerger::P",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:628,performance,optimiz,optimized,628,"```. ... [ RUN ] TBufferMerger.ParallelTreeFill. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7f75ebd7a700 (LWP 834)):. #0 0x00007f75eee0eb7b in __GI___waitpid (pid=841, stat_loc=stat_loc. entry=0x7f75ebd72bc0, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007f75eed961eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f75eff097d8 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007f75eff0be1c in TUnixSystem::DispatchSignals (this=0x1e074f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3643. #5 <signal handler called>. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f75f0758a38 in TFileMerger::MergeRecursive (this=0x7f75ebd75a90, target=0x7f75e4dd2780, sourcelist=0x7f75e4844ec0, type=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:756. #12 0x00007f75f0756e37 in TFileMerger::P",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:1193,performance,optimiz,optimized,1193,"of all threads:. ===========================================================. Thread 2 (Thread 0x7f75ebd7a700 (LWP 834)):. #0 0x00007f75eee0eb7b in __GI___waitpid (pid=841, stat_loc=stat_loc. entry=0x7f75ebd72bc0, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007f75eed961eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f75eff097d8 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007f75eff0be1c in TUnixSystem::DispatchSignals (this=0x1e074f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3643. #5 <signal handler called>. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f75f0758a38 in TFileMerger::MergeRecursive (this=0x7f75ebd75a90, target=0x7f75e4dd2780, sourcelist=0x7f75e4844ec0, type=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:756. #12 0x00007f75f0756e37 in TFileMerger::PartialMerge (this=this. entry=0x7f75ebd75a90, in_type=in_type. entry=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:842. #13 0x00007f75f073097e in ROOT::Experimental::TBufferMerger::WriteOut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:1363,performance,optimiz,optimized,1363,"1, stat_loc=stat_loc. entry=0x7f75ebd72bc0, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007f75eed961eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f75eff097d8 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007f75eff0be1c in TUnixSystem::DispatchSignals (this=0x1e074f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3643. #5 <signal handler called>. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f75f0758a38 in TFileMerger::MergeRecursive (this=0x7f75ebd75a90, target=0x7f75e4dd2780, sourcelist=0x7f75e4844ec0, type=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:756. #12 0x00007f75f0756e37 in TFileMerger::PartialMerge (this=this. entry=0x7f75ebd75a90, in_type=in_type. entry=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:842. #13 0x00007f75f073097e in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7fff3e662d00) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:90. #14 0x00007f75ef904d9e in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:1506,performance,optimiz,optimized,1506,"ystem (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f75eff097d8 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007f75eff0be1c in TUnixSystem::DispatchSignals (this=0x1e074f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3643. #5 <signal handler called>. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f75f0758a38 in TFileMerger::MergeRecursive (this=0x7f75ebd75a90, target=0x7f75e4dd2780, sourcelist=0x7f75e4844ec0, type=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:756. #12 0x00007f75f0756e37 in TFileMerger::PartialMerge (this=this. entry=0x7f75ebd75a90, in_type=in_type. entry=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:842. #13 0x00007f75f073097e in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7fff3e662d00) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:90. #14 0x00007f75ef904d9e in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #15 0x00007f75ef0f43f4 in start_thread (arg=0x7f75ebd7a700) at pthread_create.c:333. #16 0x00007f75eee3f65f in clone () at ../sysdeps/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:2914,performance,optimiz,optimized,2914,"/src/root/io/io/src/TFileMerger.cxx:756. #12 0x00007f75f0756e37 in TFileMerger::PartialMerge (this=this. entry=0x7f75ebd75a90, in_type=in_type. entry=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:842. #13 0x00007f75f073097e in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7fff3e662d00) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:90. #14 0x00007f75ef904d9e in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #15 0x00007f75ef0f43f4 in start_thread (arg=0x7f75ebd7a700) at pthread_create.c:333. #16 0x00007f75eee3f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7f75f1325a80 (LWP 771)):. #0 0x00007f75ef0f56cd in pthread_join (threadid=140144444679936, thread_return=0x0) at pthread_join.c:90. #1 0x00007f75ef905063 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3065,performance,optimiz,optimized,3065,"4) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:842. #13 0x00007f75f073097e in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7fff3e662d00) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:90. #14 0x00007f75ef904d9e in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #15 0x00007f75ef0f43f4 in start_thread (arg=0x7f75ebd7a700) at pthread_create.c:333. #16 0x00007f75eee3f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7f75f1325a80 (LWP 771)):. #0 0x00007f75ef0f56cd in pthread_join (threadid=140144444679936, thread_return=0x0) at pthread_join.c:90. #1 0x00007f75ef905063 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3287,performance,optimiz,optimized,3287,"0007f75ef904d9e in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #15 0x00007f75ef0f43f4 in start_thread (arg=0x7f75ebd7a700) at pthread_create.c:333. #16 0x00007f75eee3f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7f75f1325a80 (LWP 771)):. #0 0x00007f75ef0f56cd in pthread_join (threadid=140144444679936, thread_return=0x0) at pthread_join.c:90. #1 0x00007f75ef905063 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/g",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3311,performance,optimiz,optimized,3311," from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #15 0x00007f75ef0f43f4 in start_thread (arg=0x7f75ebd7a700) at pthread_create.c:333. #16 0x00007f75eee3f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7f75f1325a80 (LWP 771)):. #0 0x00007f75ef0f56cd in pthread_join (threadid=140144444679936, thread_return=0x0) at pthread_join.c:90. #1 0x00007f75ef905063 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3537,performance,optimiz,optimized,3537,"105. Thread 1 (Thread 0x7f75f1325a80 (LWP 771)):. #0 0x00007f75ef0f56cd in pthread_join (threadid=140144444679936, thread_return=0x0) at pthread_join.c:90. #1 0x00007f75ef905063 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:4539,performance,optimiz,optimized,4539,"ed out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:4563,performance,optimiz,optimized,4563,"on. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:4794,performance,optimiz,optimized,4794,"/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. Please post the ENTIRE",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:5349,performance,optimiz,optimized,5349," in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/ro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:6146,performance,optimiz,optimized,6146,"oogletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f75f0758a38 in TFileMerger::MergeRecursive (this=0x7f75ebd75a90, target=0x7f75e4dd2780, sourcelist=0x7f75e4844ec0, type=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:756. #12 0x00007f75f0756e37 in TFileMerger::PartialMerge (this=this. entry=0x7f75ebd75a90, in_type=in_type. entry=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:842. #13 0x00007f75f073097e in ROOT::Experimental::TBufferMerger::WriteOut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:6316,performance,optimiz,optimized,6316,"est.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f75f0758a38 in TFileMerger::MergeRecursive (this=0x7f75ebd75a90, target=0x7f75e4dd2780, sourcelist=0x7f75e4844ec0, type=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:756. #12 0x00007f75f0756e37 in TFileMerger::PartialMerge (this=this. entry=0x7f75ebd75a90, in_type=in_type. entry=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:842. #13 0x00007f75f073097e in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7fff3e662d00) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:90. #14 0x00007f75ef904d9e in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:6459,performance,optimiz,optimized,6459,"st_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f75f0758a38 in TFileMerger::MergeRecursive (this=0x7f75ebd75a90, target=0x7f75e4dd2780, sourcelist=0x7f75e4844ec0, type=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:756. #12 0x00007f75f0756e37 in TFileMerger::PartialMerge (this=this. entry=0x7f75ebd75a90, in_type=in_type. entry=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:842. #13 0x00007f75f073097e in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7fff3e662d00) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:90. #14 0x00007f75ef904d9e in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #15 0x00007f75ef0f43f4 in start_thread (arg=0x7f75ebd7a700) at pthread_create.c:333. #16 0x00007f75eee3f65f in clone () at ../sysdeps/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3049,safety,Test,TestBody,3049,"=in_type. entry=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:842. #13 0x00007f75f073097e in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7fff3e662d00) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:90. #14 0x00007f75ef904d9e in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #15 0x00007f75ef0f43f4 in start_thread (arg=0x7f75ebd7a700) at pthread_create.c:333. #16 0x00007f75eee3f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7f75f1325a80 (LWP 771)):. #0 0x00007f75ef0f56cd in pthread_join (threadid=140144444679936, thread_return=0x0) at pthread_join.c:90. #1 0x00007f75ef905063 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3112,safety,test,test,3112,"erger.cxx:842. #13 0x00007f75f073097e in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7fff3e662d00) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:90. #14 0x00007f75ef904d9e in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #15 0x00007f75ef0f43f4 in start_thread (arg=0x7f75ebd7a700) at pthread_create.c:333. #16 0x00007f75eee3f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7f75f1325a80 (LWP 771)):. #0 0x00007f75ef0f56cd in pthread_join (threadid=140144444679936, thread_return=0x0) at pthread_join.c:90. #1 0x00007f75ef905063 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3164,safety,test,testing,3164,"ental::TBufferMerger::WriteOutputFile (this=0x7fff3e662d00) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:90. #14 0x00007f75ef904d9e in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #15 0x00007f75ef0f43f4 in start_thread (arg=0x7f75ebd7a700) at pthread_create.c:333. #16 0x00007f75eee3f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7f75f1325a80 (LWP 771)):. #0 0x00007f75ef0f56cd in pthread_join (threadid=140144444679936, thread_return=0x0) at pthread_join.c:90. #1 0x00007f75ef905063 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x00000000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3222,safety,test,testing,3222,") at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:90. #14 0x00007f75ef904d9e in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #15 0x00007f75ef0f43f4 in start_thread (arg=0x7f75ebd7a700) at pthread_create.c:333. #16 0x00007f75eee3f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7f75f1325a80 (LWP 771)):. #0 0x00007f75ef0f56cd in pthread_join (threadid=140144444679936, thread_return=0x0) at pthread_join.c:90. #1 0x00007f75ef905063 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3231,safety,Test,Test,3231,"ome/amadio/src/root/io/io/src/TBufferMerger.cxx:90. #14 0x00007f75ef904d9e in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #15 0x00007f75ef0f43f4 in start_thread (arg=0x7f75ebd7a700) at pthread_create.c:333. #16 0x00007f75eee3f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7f75f1325a80 (LWP 771)):. #0 0x00007f75ef0f56cd in pthread_join (threadid=140144444679936, thread_return=0x0) at pthread_join.c:90. #1 0x00007f75ef905063 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3267,safety,test,test,3267,"rMerger.cxx:90. #14 0x00007f75ef904d9e in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #15 0x00007f75ef0f43f4 in start_thread (arg=0x7f75ebd7a700) at pthread_create.c:333. #16 0x00007f75eee3f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7f75f1325a80 (LWP 771)):. #0 0x00007f75ef0f56cd in pthread_join (threadid=140144444679936, thread_return=0x0) at pthread_join.c:90. #1 0x00007f75ef905063 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3420,safety,test,testing,3420,"f75ebd7a700) at pthread_create.c:333. #16 0x00007f75eee3f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7f75f1325a80 (LWP 771)):. #0 0x00007f75ef0f56cd in pthread_join (threadid=140144444679936, thread_return=0x0) at pthread_join.c:90. #1 0x00007f75ef905063 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3475,safety,test,testing,3475,"3f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7f75f1325a80 (LWP 771)):. #0 0x00007f75ef0f56cd in pthread_join (threadid=140144444679936, thread_return=0x0) at pthread_join.c:90. #1 0x00007f75ef905063 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3484,safety,Test,Test,3484,"n clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7f75f1325a80 (LWP 771)):. #0 0x00007f75ef0f56cd in pthread_join (threadid=140144444679936, thread_return=0x0) at pthread_join.c:90. #1 0x00007f75ef905063 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3592,safety,test,test,3592," 0x00007f75ef0f56cd in pthread_join (threadid=140144444679936, thread_return=0x0) at pthread_join.c:90. #1 0x00007f75ef905063 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3719,safety,test,testing,3719,"std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSuppo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3728,safety,Test,Test,3728,"read::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<te",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3870,safety,test,testing,3870,"Merger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3879,safety,Test,TestInfo,3879,"his=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:4025,safety,test,testing,4025,"allelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::Uni",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:4034,safety,Test,TestCase,4034,"Fill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Ru",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:4180,safety,test,testing,4180,"andleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:4358,safety,test,testing,4358,"st-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:4416,safety,test,testing,4416,"testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googlet",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:4485,safety,test,test,4485,"t, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ========",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:4673,safety,test,testing,4673,"c/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:4728,safety,test,testing,4728,"::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:4855,safety,test,test,4855,"0004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. Please post the ENTIRE stack trace. from above as an attachment in addition to a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:5017,safety,test,testing,5017," in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:5056,safety,test,testing,5056,"0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:993,security,sign,signal,993,"```. ... [ RUN ] TBufferMerger.ParallelTreeFill. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7f75ebd7a700 (LWP 834)):. #0 0x00007f75eee0eb7b in __GI___waitpid (pid=841, stat_loc=stat_loc. entry=0x7f75ebd72bc0, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007f75eed961eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f75eff097d8 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007f75eff0be1c in TUnixSystem::DispatchSignals (this=0x1e074f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3643. #5 <signal handler called>. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f75f0758a38 in TFileMerger::MergeRecursive (this=0x7f75ebd75a90, target=0x7f75e4dd2780, sourcelist=0x7f75e4844ec0, type=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:756. #12 0x00007f75f0756e37 in TFileMerger::P",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:192,testability,trace,trace,192,"```. ... [ RUN ] TBufferMerger.ParallelTreeFill. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 2 (Thread 0x7f75ebd7a700 (LWP 834)):. #0 0x00007f75eee0eb7b in __GI___waitpid (pid=841, stat_loc=stat_loc. entry=0x7f75ebd72bc0, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29. #1 0x00007f75eed961eb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f75eff097d8 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2118. #3 TUnixSystem::StackTrace (this=0x1e074f0) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412. #4 0x00007f75eff0be1c in TUnixSystem::DispatchSignals (this=0x1e074f0, sig=kSigSegmentationViolation) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:3643. #5 <signal handler called>. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f75f0758a38 in TFileMerger::MergeRecursive (this=0x7f75ebd75a90, target=0x7f75e4dd2780, sourcelist=0x7f75e4844ec0, type=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:756. #12 0x00007f75f0756e37 in TFileMerger::P",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3049,testability,Test,TestBody,3049,"=in_type. entry=14) at /home/amadio/src/root/io/io/src/TFileMerger.cxx:842. #13 0x00007f75f073097e in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7fff3e662d00) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:90. #14 0x00007f75ef904d9e in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #15 0x00007f75ef0f43f4 in start_thread (arg=0x7f75ebd7a700) at pthread_create.c:333. #16 0x00007f75eee3f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7f75f1325a80 (LWP 771)):. #0 0x00007f75ef0f56cd in pthread_join (threadid=140144444679936, thread_return=0x0) at pthread_join.c:90. #1 0x00007f75ef905063 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3112,testability,test,test,3112,"erger.cxx:842. #13 0x00007f75f073097e in ROOT::Experimental::TBufferMerger::WriteOutputFile (this=0x7fff3e662d00) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:90. #14 0x00007f75ef904d9e in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #15 0x00007f75ef0f43f4 in start_thread (arg=0x7f75ebd7a700) at pthread_create.c:333. #16 0x00007f75eee3f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7f75f1325a80 (LWP 771)):. #0 0x00007f75ef0f56cd in pthread_join (threadid=140144444679936, thread_return=0x0) at pthread_join.c:90. #1 0x00007f75ef905063 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3164,testability,test,testing,3164,"ental::TBufferMerger::WriteOutputFile (this=0x7fff3e662d00) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:90. #14 0x00007f75ef904d9e in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #15 0x00007f75ef0f43f4 in start_thread (arg=0x7f75ebd7a700) at pthread_create.c:333. #16 0x00007f75eee3f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7f75f1325a80 (LWP 771)):. #0 0x00007f75ef0f56cd in pthread_join (threadid=140144444679936, thread_return=0x0) at pthread_join.c:90. #1 0x00007f75ef905063 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x00000000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3222,testability,test,testing,3222,") at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:90. #14 0x00007f75ef904d9e in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #15 0x00007f75ef0f43f4 in start_thread (arg=0x7f75ebd7a700) at pthread_create.c:333. #16 0x00007f75eee3f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7f75f1325a80 (LWP 771)):. #0 0x00007f75ef0f56cd in pthread_join (threadid=140144444679936, thread_return=0x0) at pthread_join.c:90. #1 0x00007f75ef905063 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3231,testability,Test,Test,3231,"ome/amadio/src/root/io/io/src/TBufferMerger.cxx:90. #14 0x00007f75ef904d9e in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #15 0x00007f75ef0f43f4 in start_thread (arg=0x7f75ebd7a700) at pthread_create.c:333. #16 0x00007f75eee3f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7f75f1325a80 (LWP 771)):. #0 0x00007f75ef0f56cd in pthread_join (threadid=140144444679936, thread_return=0x0) at pthread_join.c:90. #1 0x00007f75ef905063 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3267,testability,test,test,3267,"rMerger.cxx:90. #14 0x00007f75ef904d9e in ?? () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #15 0x00007f75ef0f43f4 in start_thread (arg=0x7f75ebd7a700) at pthread_create.c:333. #16 0x00007f75eee3f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7f75f1325a80 (LWP 771)):. #0 0x00007f75ef0f56cd in pthread_join (threadid=140144444679936, thread_return=0x0) at pthread_join.c:90. #1 0x00007f75ef905063 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3420,testability,test,testing,3420,"f75ebd7a700) at pthread_create.c:333. #16 0x00007f75eee3f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7f75f1325a80 (LWP 771)):. #0 0x00007f75ef0f56cd in pthread_join (threadid=140144444679936, thread_return=0x0) at pthread_join.c:90. #1 0x00007f75ef905063 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3475,testability,test,testing,3475,"3f65f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7f75f1325a80 (LWP 771)):. #0 0x00007f75ef0f56cd in pthread_join (threadid=140144444679936, thread_return=0x0) at pthread_join.c:90. #1 0x00007f75ef905063 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3484,testability,Test,Test,3484,"n clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105. Thread 1 (Thread 0x7f75f1325a80 (LWP 771)):. #0 0x00007f75ef0f56cd in pthread_join (threadid=140144444679936, thread_return=0x0) at pthread_join.c:90. #1 0x00007f75ef905063 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3592,testability,test,test,3592," 0x00007f75ef0f56cd in pthread_join (threadid=140144444679936, thread_return=0x0) at pthread_join.c:90. #1 0x00007f75ef905063 in std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3719,testability,test,testing,3719,"std::thread::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSuppo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3728,testability,Test,Test,3728,"read::join() () from /usr/lib/gcc/x86_64-pc-linux-gnu/7.1.0/libstdc++.so.6. #2 0x00007f75f072fd76 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<te",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3870,testability,test,testing,3870,"Merger (this=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:3879,testability,Test,TestInfo,3879,"his=0x7fff3e662d00, __in_chrg=<optimized out>) at /home/amadio/src/root/io/io/src/TBufferMerger.cxx:35. #3 0x00000000004182f0 in TBufferMerger_ParallelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:4025,testability,test,testing,4025,"allelTreeFill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::Uni",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:4034,testability,Test,TestCase,4034,"Fill_Test::TestBody (this=<optimized out>) at /home/amadio/src/root/io/io/test/TBufferMerger.cxx:86. #4 0x000000000043fa74 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Ru",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:4180,testability,test,testing,4180,"andleSehExceptionsInMethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:4199,testability,Unit,UnitTestImpl,4199,"ethodIfSupported<testing::Test, void> (location=0x442444 ""the test body"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x00000000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:4358,testability,test,testing,4358,"st-prefix/src/googletest/googletest/src/gtest.cc:2402. #5 testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:4416,testability,test,testing,4416,"testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googlet",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:4435,testability,Unit,UnitTestImpl,4435,"ndleExceptionsInMethodIfSupported<testing::Test, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/google",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:4485,testability,test,test,4485,"t, void> (object=object. entry=0x1e5e370, method=<optimized out>, location=location. entry=0x442444 ""the test body"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ========",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:4673,testability,test,testing,4673,"c/gtest.cc:2438. #6 0x00000000004365aa in testing::Test::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:4728,testability,test,testing,4728,"::Run (this=0x1e5e370) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:4747,testability,Unit,UnitTestImpl,4747,") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2475. #7 0x00000000004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at ht",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:4855,testability,test,test,4855,"0004366f8 in testing::TestInfo::Run (this=0x1e5e520) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2656. #8 0x00000000004367d5 in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. Please post the ENTIRE stack trace. from above as an attachment in addition to a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:5017,testability,test,testing,5017," in testing::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:5026,testability,Unit,UnitTest,5026,"ng::TestCase::Run (this=0x1e5e0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b4",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:5056,testability,test,testing,5056,"0a0) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:5065,testability,Unit,UnitTest,5065,"home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2774. #9 0x0000000000436ab7 in testing::internal::UnitTestImpl::RunAllTests (this=0x1e5de00) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4649. #10 0x000000000043ff24 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (location=0x4419b8 ""auxiliary test code (environments or event listeners)"", method=<optimized out>, object=<optimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:5806,testability,trace,trace,5806," location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f75f0758a38 in TFileMerger::MergeRecursive (this=0x7f75ebd75a90, target=0x7f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:5562,usability,hint,hint,5562,"ptimized out>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:5606,usability,help,help,5606,"ogletest-prefix/src/googletest/googletest/src/gtest.cc:2402. #11 testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x1e5de00, method=<optimized out>, location=location. entry=0x4419b8 ""auxiliary test code (environments or event listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:5882,usability,help,help,5882,"ent listeners)"") at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:2438. #12 0x0000000000436dd0 in testing::UnitTest::Run (this=0x650860 <testing::UnitTest::GetInstance()::instance>) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest.cc:4257. #13 0x0000000000417c59 in RUN_ALL_TESTS () at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2233. #14 main (argc=<optimized out>, argv=0x7fff3e663168) at /home/amadio/build/root/googletest-prefix/src/googletest/googletest/src/gtest_main.cc:37. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 TList::RecursiveRemove (this=0x1e0d6c0, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #7 0x00007f75efe885b3 in THashList::RecursiveRemove (this=<optimized out>, obj=0x7f75e4d04b40) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #8 0x00007f75efe25047 in TObject::~TObject (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #9 0x00007f75f0eef6a9 in TTree::~TTree (this=0x7f75e4d04b40, __in_chrg=<optimized out>) at /home/amadio/src/root/tree/tree/src/TTree.cxx:917. #10 0x00007f75efeba961 in TClass::Destructor (this=this. entry=0x1e81470, obj=obj. entry=0x7f75e4d04b40, dtorOnly=dtorOnly. entry=false) at /home/amadio/src/root/core/meta/src/TClass.cxx:5074. #11 0x00007f75f0758a38 in TFileMerger::MergeRecursive (this=0x7f75ebd75a90, target=0x7f75e4dd2780, sourcelist=0x7f75e4844ec0, type=14) at /home/amadio/src/root/io",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:22,performance,lock,lock,22,"After adding back the lock on `PartialMerge()` performance is not amazing, but still much better than before. Now we need to figure out a way to make `PartialMerge()` thread-safe to get back the remaining performance gains as shown at the top of this PR. After that, `TClass::GetClass()` is the next biggest bottleneck that can help improve performance a bit further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:47,performance,perform,performance,47,"After adding back the lock on `PartialMerge()` performance is not amazing, but still much better than before. Now we need to figure out a way to make `PartialMerge()` thread-safe to get back the remaining performance gains as shown at the top of this PR. After that, `TClass::GetClass()` is the next biggest bottleneck that can help improve performance a bit further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:205,performance,perform,performance,205,"After adding back the lock on `PartialMerge()` performance is not amazing, but still much better than before. Now we need to figure out a way to make `PartialMerge()` thread-safe to get back the remaining performance gains as shown at the top of this PR. After that, `TClass::GetClass()` is the next biggest bottleneck that can help improve performance a bit further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:308,performance,bottleneck,bottleneck,308,"After adding back the lock on `PartialMerge()` performance is not amazing, but still much better than before. Now we need to figure out a way to make `PartialMerge()` thread-safe to get back the remaining performance gains as shown at the top of this PR. After that, `TClass::GetClass()` is the next biggest bottleneck that can help improve performance a bit further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:333,performance,improve perform,improve performance,333,"After adding back the lock on `PartialMerge()` performance is not amazing, but still much better than before. Now we need to figure out a way to make `PartialMerge()` thread-safe to get back the remaining performance gains as shown at the top of this PR. After that, `TClass::GetClass()` is the next biggest bottleneck that can help improve performance a bit further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:174,safety,safe,safe,174,"After adding back the lock on `PartialMerge()` performance is not amazing, but still much better than before. Now we need to figure out a way to make `PartialMerge()` thread-safe to get back the remaining performance gains as shown at the top of this PR. After that, `TClass::GetClass()` is the next biggest bottleneck that can help improve performance a bit further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:22,security,lock,lock,22,"After adding back the lock on `PartialMerge()` performance is not amazing, but still much better than before. Now we need to figure out a way to make `PartialMerge()` thread-safe to get back the remaining performance gains as shown at the top of this PR. After that, `TClass::GetClass()` is the next biggest bottleneck that can help improve performance a bit further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:47,usability,perform,performance,47,"After adding back the lock on `PartialMerge()` performance is not amazing, but still much better than before. Now we need to figure out a way to make `PartialMerge()` thread-safe to get back the remaining performance gains as shown at the top of this PR. After that, `TClass::GetClass()` is the next biggest bottleneck that can help improve performance a bit further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:205,usability,perform,performance,205,"After adding back the lock on `PartialMerge()` performance is not amazing, but still much better than before. Now we need to figure out a way to make `PartialMerge()` thread-safe to get back the remaining performance gains as shown at the top of this PR. After that, `TClass::GetClass()` is the next biggest bottleneck that can help improve performance a bit further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:328,usability,help,help,328,"After adding back the lock on `PartialMerge()` performance is not amazing, but still much better than before. Now we need to figure out a way to make `PartialMerge()` thread-safe to get back the remaining performance gains as shown at the top of this PR. After that, `TClass::GetClass()` is the next biggest bottleneck that can help improve performance a bit further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:341,usability,perform,performance,341,"After adding back the lock on `PartialMerge()` performance is not amazing, but still much better than before. Now we need to figure out a way to make `PartialMerge()` thread-safe to get back the remaining performance gains as shown at the top of this PR. After that, `TClass::GetClass()` is the next biggest bottleneck that can help improve performance a bit further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:9,availability,down,down,9,"To Track down the problem, you may want to turn on the multi-thread access protector for TList and THashList. To do so, either add -DR__CHECK_COLLECTION_MULTI_ACCESS or revert 9b8bd150c1cae2d1bd96405c87cb8c350738b4fe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:55,performance,multi-thread,multi-thread,55,"To Track down the problem, you may want to turn on the multi-thread access protector for TList and THashList. To do so, either add -DR__CHECK_COLLECTION_MULTI_ACCESS or revert 9b8bd150c1cae2d1bd96405c87cb8c350738b4fe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:68,security,access,access,68,"To Track down the problem, you may want to turn on the multi-thread access protector for TList and THashList. To do so, either add -DR__CHECK_COLLECTION_MULTI_ACCESS or revert 9b8bd150c1cae2d1bd96405c87cb8c350738b4fe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:102,deployability,build,build,102,"@pcanal Could you please take a look at this test? http://cdash.cern.ch/testDetails.php?test=26224986&build=367429 It could be failing because of my commit, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:127,deployability,fail,failing,127,"@pcanal Could you please take a look at this test? http://cdash.cern.ch/testDetails.php?test=26224986&build=367429 It could be failing because of my commit, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:127,reliability,fail,failing,127,"@pcanal Could you please take a look at this test? http://cdash.cern.ch/testDetails.php?test=26224986&build=367429 It could be failing because of my commit, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:45,safety,test,test,45,"@pcanal Could you please take a look at this test? http://cdash.cern.ch/testDetails.php?test=26224986&build=367429 It could be failing because of my commit, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:72,safety,test,testDetails,72,"@pcanal Could you please take a look at this test? http://cdash.cern.ch/testDetails.php?test=26224986&build=367429 It could be failing because of my commit, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:88,safety,test,test,88,"@pcanal Could you please take a look at this test? http://cdash.cern.ch/testDetails.php?test=26224986&build=367429 It could be failing because of my commit, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:45,testability,test,test,45,"@pcanal Could you please take a look at this test? http://cdash.cern.ch/testDetails.php?test=26224986&build=367429 It could be failing because of my commit, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:72,testability,test,testDetails,72,"@pcanal Could you please take a look at this test? http://cdash.cern.ch/testDetails.php?test=26224986&build=367429 It could be failing because of my commit, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:88,testability,test,test,88,"@pcanal Could you please take a look at this test? http://cdash.cern.ch/testDetails.php?test=26224986&build=367429 It could be failing because of my commit, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:67,deployability,version,version,67,"i guess it could .... but I am not sure how .... [Besides, today's version is still sub-optimal, i.e. a WIP]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:88,energy efficiency,optim,optimal,88,"i guess it could .... but I am not sure how .... [Besides, today's version is still sub-optimal, i.e. a WIP]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:67,integrability,version,version,67,"i guess it could .... but I am not sure how .... [Besides, today's version is still sub-optimal, i.e. a WIP]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:84,integrability,sub,sub-optimal,84,"i guess it could .... but I am not sure how .... [Besides, today's version is still sub-optimal, i.e. a WIP]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:67,modifiability,version,version,67,"i guess it could .... but I am not sure how .... [Besides, today's version is still sub-optimal, i.e. a WIP]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:111,energy efficiency,current,current,111,"Yes, this is work in progress, I will make several more changes to TClass based on my analysis with VTune. The current situation is shown in the figure below. ![screenshot](https://user-images.githubusercontent.com/249404/27436376-5539c408-575f-11e7-8cfc-be5e51908af6.png). The wait time is still somewhat high, but the situation with only this PR's commits is still much better than it currently is on master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:387,energy efficiency,current,currently,387,"Yes, this is work in progress, I will make several more changes to TClass based on my analysis with VTune. The current situation is shown in the figure below. ![screenshot](https://user-images.githubusercontent.com/249404/27436376-5539c408-575f-11e7-8cfc-be5e51908af6.png). The wait time is still somewhat high, but the situation with only this PR's commits is still much better than it currently is on master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:283,performance,time,time,283,"Yes, this is work in progress, I will make several more changes to TClass based on my analysis with VTune. The current situation is shown in the figure below. ![screenshot](https://user-images.githubusercontent.com/249404/27436376-5539c408-575f-11e7-8cfc-be5e51908af6.png). The wait time is still somewhat high, but the situation with only this PR's commits is still much better than it currently is on master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:21,usability,progress,progress,21,"Yes, this is work in progress, I will make several more changes to TClass based on my analysis with VTune. The current situation is shown in the figure below. ![screenshot](https://user-images.githubusercontent.com/249404/27436376-5539c408-575f-11e7-8cfc-be5e51908af6.png). The wait time is still somewhat high, but the situation with only this PR's commits is still much better than it currently is on master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:181,usability,user,user-images,181,"Yes, this is work in progress, I will make several more changes to TClass based on my analysis with VTune. The current situation is shown in the figure below. ![screenshot](https://user-images.githubusercontent.com/249404/27436376-5539c408-575f-11e7-8cfc-be5e51908af6.png). The wait time is still somewhat high, but the situation with only this PR's commits is still much better than it currently is on master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:25,deployability,contain,contains,25,I am confused ... the PR contains VC change and only 2 changes in TClass ... and the one change is still introduced a decrease of the single-thread performance (missing if (fClassInfo) and/or removal of the fClassInfo!=nullptr && fCanLoadClassInfo.),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:148,performance,perform,performance,148,I am confused ... the PR contains VC change and only 2 changes in TClass ... and the one change is still introduced a decrease of the single-thread performance (missing if (fClassInfo) and/or removal of the fClassInfo!=nullptr && fCanLoadClassInfo.),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:148,usability,perform,performance,148,I am confused ... the PR contains VC change and only 2 changes in TClass ... and the one change is still introduced a decrease of the single-thread performance (missing if (fClassInfo) and/or removal of the fClassInfo!=nullptr && fCanLoadClassInfo.),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:277,energy efficiency,measur,measure,277,"The commit for Vc/VecCore sneaked in from another branch. I added it just to shut up warnings because of how things are on master at the moment, but it's not part of this PR (i.e. I will remove it prior to merging). I don't see a decrease of single thread performance, did you measure it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:256,performance,perform,performance,256,"The commit for Vc/VecCore sneaked in from another branch. I added it just to shut up warnings because of how things are on master at the moment, but it's not part of this PR (i.e. I will remove it prior to merging). I don't see a decrease of single thread performance, did you measure it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:256,usability,perform,performance,256,"The commit for Vc/VecCore sneaked in from another branch. I added it just to shut up warnings because of how things are on master at the moment, but it's not part of this PR (i.e. I will remove it prior to merging). I don't see a decrease of single thread performance, did you measure it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:651,availability,state,statement,651,"> I don't see a decrease of single thread performance, did you measure it? I *know* and have tried to explain it earlier. There is a (quite) common case where a TClass is created (running TClass::Init) and ends up with fClassInfo != nullptr but fCanLoadClassInfo == true. In this commong case the removal of the . ```if (fClassInfo) return;```. means that we do a useless (expensive) lookup (or at least series of function calls) for something already set and know. [On the other hand because that early return is **NOT** setting fCanLoadClassInfo it leads to LoadClassInfo being call often and the lock being taken]. We either need to re-add this if statement OR better yet make sure that all cases of fClassInfo!=nullptr also have fCanLoadClassInfo == false. . If you are still not convince, you can do the following test:. a) use the master. b) have the if (fStremearInfo) *also* set fCanLoadClassInfo to false. and you will notice that the performance improvement is equal and/or similar to the one with your patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:1013,deployability,patch,patch,1013,"> I don't see a decrease of single thread performance, did you measure it? I *know* and have tried to explain it earlier. There is a (quite) common case where a TClass is created (running TClass::Init) and ends up with fClassInfo != nullptr but fCanLoadClassInfo == true. In this commong case the removal of the . ```if (fClassInfo) return;```. means that we do a useless (expensive) lookup (or at least series of function calls) for something already set and know. [On the other hand because that early return is **NOT** setting fCanLoadClassInfo it leads to LoadClassInfo being call often and the lock being taken]. We either need to re-add this if statement OR better yet make sure that all cases of fClassInfo!=nullptr also have fCanLoadClassInfo == false. . If you are still not convince, you can do the following test:. a) use the master. b) have the if (fStremearInfo) *also* set fCanLoadClassInfo to false. and you will notice that the performance improvement is equal and/or similar to the one with your patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:63,energy efficiency,measur,measure,63,"> I don't see a decrease of single thread performance, did you measure it? I *know* and have tried to explain it earlier. There is a (quite) common case where a TClass is created (running TClass::Init) and ends up with fClassInfo != nullptr but fCanLoadClassInfo == true. In this commong case the removal of the . ```if (fClassInfo) return;```. means that we do a useless (expensive) lookup (or at least series of function calls) for something already set and know. [On the other hand because that early return is **NOT** setting fCanLoadClassInfo it leads to LoadClassInfo being call often and the lock being taken]. We either need to re-add this if statement OR better yet make sure that all cases of fClassInfo!=nullptr also have fCanLoadClassInfo == false. . If you are still not convince, you can do the following test:. a) use the master. b) have the if (fStremearInfo) *also* set fCanLoadClassInfo to false. and you will notice that the performance improvement is equal and/or similar to the one with your patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:560,energy efficiency,Load,LoadClassInfo,560,"> I don't see a decrease of single thread performance, did you measure it? I *know* and have tried to explain it earlier. There is a (quite) common case where a TClass is created (running TClass::Init) and ends up with fClassInfo != nullptr but fCanLoadClassInfo == true. In this commong case the removal of the . ```if (fClassInfo) return;```. means that we do a useless (expensive) lookup (or at least series of function calls) for something already set and know. [On the other hand because that early return is **NOT** setting fCanLoadClassInfo it leads to LoadClassInfo being call often and the lock being taken]. We either need to re-add this if statement OR better yet make sure that all cases of fClassInfo!=nullptr also have fCanLoadClassInfo == false. . If you are still not convince, you can do the following test:. a) use the master. b) have the if (fStremearInfo) *also* set fCanLoadClassInfo to false. and you will notice that the performance improvement is equal and/or similar to the one with your patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:651,integrability,state,statement,651,"> I don't see a decrease of single thread performance, did you measure it? I *know* and have tried to explain it earlier. There is a (quite) common case where a TClass is created (running TClass::Init) and ends up with fClassInfo != nullptr but fCanLoadClassInfo == true. In this commong case the removal of the . ```if (fClassInfo) return;```. means that we do a useless (expensive) lookup (or at least series of function calls) for something already set and know. [On the other hand because that early return is **NOT** setting fCanLoadClassInfo it leads to LoadClassInfo being call often and the lock being taken]. We either need to re-add this if statement OR better yet make sure that all cases of fClassInfo!=nullptr also have fCanLoadClassInfo == false. . If you are still not convince, you can do the following test:. a) use the master. b) have the if (fStremearInfo) *also* set fCanLoadClassInfo to false. and you will notice that the performance improvement is equal and/or similar to the one with your patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:42,performance,perform,performance,42,"> I don't see a decrease of single thread performance, did you measure it? I *know* and have tried to explain it earlier. There is a (quite) common case where a TClass is created (running TClass::Init) and ends up with fClassInfo != nullptr but fCanLoadClassInfo == true. In this commong case the removal of the . ```if (fClassInfo) return;```. means that we do a useless (expensive) lookup (or at least series of function calls) for something already set and know. [On the other hand because that early return is **NOT** setting fCanLoadClassInfo it leads to LoadClassInfo being call often and the lock being taken]. We either need to re-add this if statement OR better yet make sure that all cases of fClassInfo!=nullptr also have fCanLoadClassInfo == false. . If you are still not convince, you can do the following test:. a) use the master. b) have the if (fStremearInfo) *also* set fCanLoadClassInfo to false. and you will notice that the performance improvement is equal and/or similar to the one with your patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:560,performance,Load,LoadClassInfo,560,"> I don't see a decrease of single thread performance, did you measure it? I *know* and have tried to explain it earlier. There is a (quite) common case where a TClass is created (running TClass::Init) and ends up with fClassInfo != nullptr but fCanLoadClassInfo == true. In this commong case the removal of the . ```if (fClassInfo) return;```. means that we do a useless (expensive) lookup (or at least series of function calls) for something already set and know. [On the other hand because that early return is **NOT** setting fCanLoadClassInfo it leads to LoadClassInfo being call often and the lock being taken]. We either need to re-add this if statement OR better yet make sure that all cases of fClassInfo!=nullptr also have fCanLoadClassInfo == false. . If you are still not convince, you can do the following test:. a) use the master. b) have the if (fStremearInfo) *also* set fCanLoadClassInfo to false. and you will notice that the performance improvement is equal and/or similar to the one with your patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:599,performance,lock,lock,599,"> I don't see a decrease of single thread performance, did you measure it? I *know* and have tried to explain it earlier. There is a (quite) common case where a TClass is created (running TClass::Init) and ends up with fClassInfo != nullptr but fCanLoadClassInfo == true. In this commong case the removal of the . ```if (fClassInfo) return;```. means that we do a useless (expensive) lookup (or at least series of function calls) for something already set and know. [On the other hand because that early return is **NOT** setting fCanLoadClassInfo it leads to LoadClassInfo being call often and the lock being taken]. We either need to re-add this if statement OR better yet make sure that all cases of fClassInfo!=nullptr also have fCanLoadClassInfo == false. . If you are still not convince, you can do the following test:. a) use the master. b) have the if (fStremearInfo) *also* set fCanLoadClassInfo to false. and you will notice that the performance improvement is equal and/or similar to the one with your patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:944,performance,perform,performance,944,"> I don't see a decrease of single thread performance, did you measure it? I *know* and have tried to explain it earlier. There is a (quite) common case where a TClass is created (running TClass::Init) and ends up with fClassInfo != nullptr but fCanLoadClassInfo == true. In this commong case the removal of the . ```if (fClassInfo) return;```. means that we do a useless (expensive) lookup (or at least series of function calls) for something already set and know. [On the other hand because that early return is **NOT** setting fCanLoadClassInfo it leads to LoadClassInfo being call often and the lock being taken]. We either need to re-add this if statement OR better yet make sure that all cases of fClassInfo!=nullptr also have fCanLoadClassInfo == false. . If you are still not convince, you can do the following test:. a) use the master. b) have the if (fStremearInfo) *also* set fCanLoadClassInfo to false. and you will notice that the performance improvement is equal and/or similar to the one with your patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:819,safety,test,test,819,"> I don't see a decrease of single thread performance, did you measure it? I *know* and have tried to explain it earlier. There is a (quite) common case where a TClass is created (running TClass::Init) and ends up with fClassInfo != nullptr but fCanLoadClassInfo == true. In this commong case the removal of the . ```if (fClassInfo) return;```. means that we do a useless (expensive) lookup (or at least series of function calls) for something already set and know. [On the other hand because that early return is **NOT** setting fCanLoadClassInfo it leads to LoadClassInfo being call often and the lock being taken]. We either need to re-add this if statement OR better yet make sure that all cases of fClassInfo!=nullptr also have fCanLoadClassInfo == false. . If you are still not convince, you can do the following test:. a) use the master. b) have the if (fStremearInfo) *also* set fCanLoadClassInfo to false. and you will notice that the performance improvement is equal and/or similar to the one with your patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:1013,safety,patch,patch,1013,"> I don't see a decrease of single thread performance, did you measure it? I *know* and have tried to explain it earlier. There is a (quite) common case where a TClass is created (running TClass::Init) and ends up with fClassInfo != nullptr but fCanLoadClassInfo == true. In this commong case the removal of the . ```if (fClassInfo) return;```. means that we do a useless (expensive) lookup (or at least series of function calls) for something already set and know. [On the other hand because that early return is **NOT** setting fCanLoadClassInfo it leads to LoadClassInfo being call often and the lock being taken]. We either need to re-add this if statement OR better yet make sure that all cases of fClassInfo!=nullptr also have fCanLoadClassInfo == false. . If you are still not convince, you can do the following test:. a) use the master. b) have the if (fStremearInfo) *also* set fCanLoadClassInfo to false. and you will notice that the performance improvement is equal and/or similar to the one with your patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:599,security,lock,lock,599,"> I don't see a decrease of single thread performance, did you measure it? I *know* and have tried to explain it earlier. There is a (quite) common case where a TClass is created (running TClass::Init) and ends up with fClassInfo != nullptr but fCanLoadClassInfo == true. In this commong case the removal of the . ```if (fClassInfo) return;```. means that we do a useless (expensive) lookup (or at least series of function calls) for something already set and know. [On the other hand because that early return is **NOT** setting fCanLoadClassInfo it leads to LoadClassInfo being call often and the lock being taken]. We either need to re-add this if statement OR better yet make sure that all cases of fClassInfo!=nullptr also have fCanLoadClassInfo == false. . If you are still not convince, you can do the following test:. a) use the master. b) have the if (fStremearInfo) *also* set fCanLoadClassInfo to false. and you will notice that the performance improvement is equal and/or similar to the one with your patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:1013,security,patch,patch,1013,"> I don't see a decrease of single thread performance, did you measure it? I *know* and have tried to explain it earlier. There is a (quite) common case where a TClass is created (running TClass::Init) and ends up with fClassInfo != nullptr but fCanLoadClassInfo == true. In this commong case the removal of the . ```if (fClassInfo) return;```. means that we do a useless (expensive) lookup (or at least series of function calls) for something already set and know. [On the other hand because that early return is **NOT** setting fCanLoadClassInfo it leads to LoadClassInfo being call often and the lock being taken]. We either need to re-add this if statement OR better yet make sure that all cases of fClassInfo!=nullptr also have fCanLoadClassInfo == false. . If you are still not convince, you can do the following test:. a) use the master. b) have the if (fStremearInfo) *also* set fCanLoadClassInfo to false. and you will notice that the performance improvement is equal and/or similar to the one with your patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:819,testability,test,test,819,"> I don't see a decrease of single thread performance, did you measure it? I *know* and have tried to explain it earlier. There is a (quite) common case where a TClass is created (running TClass::Init) and ends up with fClassInfo != nullptr but fCanLoadClassInfo == true. In this commong case the removal of the . ```if (fClassInfo) return;```. means that we do a useless (expensive) lookup (or at least series of function calls) for something already set and know. [On the other hand because that early return is **NOT** setting fCanLoadClassInfo it leads to LoadClassInfo being call often and the lock being taken]. We either need to re-add this if statement OR better yet make sure that all cases of fClassInfo!=nullptr also have fCanLoadClassInfo == false. . If you are still not convince, you can do the following test:. a) use the master. b) have the if (fStremearInfo) *also* set fCanLoadClassInfo to false. and you will notice that the performance improvement is equal and/or similar to the one with your patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:42,usability,perform,performance,42,"> I don't see a decrease of single thread performance, did you measure it? I *know* and have tried to explain it earlier. There is a (quite) common case where a TClass is created (running TClass::Init) and ends up with fClassInfo != nullptr but fCanLoadClassInfo == true. In this commong case the removal of the . ```if (fClassInfo) return;```. means that we do a useless (expensive) lookup (or at least series of function calls) for something already set and know. [On the other hand because that early return is **NOT** setting fCanLoadClassInfo it leads to LoadClassInfo being call often and the lock being taken]. We either need to re-add this if statement OR better yet make sure that all cases of fClassInfo!=nullptr also have fCanLoadClassInfo == false. . If you are still not convince, you can do the following test:. a) use the master. b) have the if (fStremearInfo) *also* set fCanLoadClassInfo to false. and you will notice that the performance improvement is equal and/or similar to the one with your patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:944,usability,perform,performance,944,"> I don't see a decrease of single thread performance, did you measure it? I *know* and have tried to explain it earlier. There is a (quite) common case where a TClass is created (running TClass::Init) and ends up with fClassInfo != nullptr but fCanLoadClassInfo == true. In this commong case the removal of the . ```if (fClassInfo) return;```. means that we do a useless (expensive) lookup (or at least series of function calls) for something already set and know. [On the other hand because that early return is **NOT** setting fCanLoadClassInfo it leads to LoadClassInfo being call often and the lock being taken]. We either need to re-add this if statement OR better yet make sure that all cases of fClassInfo!=nullptr also have fCanLoadClassInfo == false. . If you are still not convince, you can do the following test:. a) use the master. b) have the if (fStremearInfo) *also* set fCanLoadClassInfo to false. and you will notice that the performance improvement is equal and/or similar to the one with your patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:400,performance,I/O,I/O,400,"I am not sure that setting `fCanLoadClassInfo` to false whenever `fClassInfo != nullptr` will have no other side effects. I see at least a few places where `fCanLoadClassInfo` is used that could be affected by this change. `TClass` is too important to risk breaking, so at this point I think the best thing to do is to close this PR and to delegate making the right change to you, since you know the I/O system a lot better than me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:252,safety,risk,risk,252,"I am not sure that setting `fCanLoadClassInfo` to false whenever `fClassInfo != nullptr` will have no other side effects. I see at least a few places where `fCanLoadClassInfo` is used that could be affected by this change. `TClass` is too important to risk breaking, so at this point I think the best thing to do is to close this PR and to delegate making the right change to you, since you know the I/O system a lot better than me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:252,security,risk,risk,252,"I am not sure that setting `fCanLoadClassInfo` to false whenever `fClassInfo != nullptr` will have no other side effects. I see at least a few places where `fCanLoadClassInfo` is used that could be affected by this change. `TClass` is too important to risk breaking, so at this point I think the best thing to do is to close this PR and to delegate making the right change to you, since you know the I/O system a lot better than me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:319,usability,close,close,319,"I am not sure that setting `fCanLoadClassInfo` to false whenever `fClassInfo != nullptr` will have no other side effects. I see at least a few places where `fCanLoadClassInfo` is used that could be affected by this change. `TClass` is too important to risk breaking, so at this point I think the best thing to do is to close this PR and to delegate making the right change to you, since you know the I/O system a lot better than me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:140,deployability,patch,patch,140,"Re-adding `if (fClassInfo) return;` (as Philippe suggested) sounded like the more effective path forward :-( No chance for you to have your patch not touch that if, and then ask roottest? The world would be a better place with this PR in!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:140,safety,patch,patch,140,"Re-adding `if (fClassInfo) return;` (as Philippe suggested) sounded like the more effective path forward :-( No chance for you to have your patch not touch that if, and then ask roottest? The world would be a better place with this PR in!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:140,security,patch,patch,140,"Re-adding `if (fClassInfo) return;` (as Philippe suggested) sounded like the more effective path forward :-( No chance for you to have your patch not touch that if, and then ask roottest? The world would be a better place with this PR in!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:82,usability,effectiv,effective,82,"Re-adding `if (fClassInfo) return;` (as Philippe suggested) sounded like the more effective path forward :-( No chance for you to have your patch not touch that if, and then ask roottest? The world would be a better place with this PR in!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:183,energy efficiency,core,core,183,"@Axel-Naumann Well, @pcanal disagrees. Philippe wants to just add `fCanLoadClassInfo = kFALSE;` right after [line 1413 of TClass.cxx](https://github.com/root-project/root/blob/master/core/meta/src/TClass.cxx#L1413), so that the calls to `LoadClassInfo()` which are guarded by `if (fCanLoadClassInfo)` are never made. However, I am not sure this change is safe yet. That said, we surely need to fix this problem (given the difference seen in VTune), and I will keep working on a solution and will probably open a new pull request with either this change or similar changes after enough testing to ensure that everything is ok.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:238,energy efficiency,Load,LoadClassInfo,238,"@Axel-Naumann Well, @pcanal disagrees. Philippe wants to just add `fCanLoadClassInfo = kFALSE;` right after [line 1413 of TClass.cxx](https://github.com/root-project/root/blob/master/core/meta/src/TClass.cxx#L1413), so that the calls to `LoadClassInfo()` which are guarded by `if (fCanLoadClassInfo)` are never made. However, I am not sure this change is safe yet. That said, we surely need to fix this problem (given the difference seen in VTune), and I will keep working on a solution and will probably open a new pull request with either this change or similar changes after enough testing to ensure that everything is ok.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:238,performance,Load,LoadClassInfo,238,"@Axel-Naumann Well, @pcanal disagrees. Philippe wants to just add `fCanLoadClassInfo = kFALSE;` right after [line 1413 of TClass.cxx](https://github.com/root-project/root/blob/master/core/meta/src/TClass.cxx#L1413), so that the calls to `LoadClassInfo()` which are guarded by `if (fCanLoadClassInfo)` are never made. However, I am not sure this change is safe yet. That said, we surely need to fix this problem (given the difference seen in VTune), and I will keep working on a solution and will probably open a new pull request with either this change or similar changes after enough testing to ensure that everything is ok.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:355,safety,safe,safe,355,"@Axel-Naumann Well, @pcanal disagrees. Philippe wants to just add `fCanLoadClassInfo = kFALSE;` right after [line 1413 of TClass.cxx](https://github.com/root-project/root/blob/master/core/meta/src/TClass.cxx#L1413), so that the calls to `LoadClassInfo()` which are guarded by `if (fCanLoadClassInfo)` are never made. However, I am not sure this change is safe yet. That said, we surely need to fix this problem (given the difference seen in VTune), and I will keep working on a solution and will probably open a new pull request with either this change or similar changes after enough testing to ensure that everything is ok.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:585,safety,test,testing,585,"@Axel-Naumann Well, @pcanal disagrees. Philippe wants to just add `fCanLoadClassInfo = kFALSE;` right after [line 1413 of TClass.cxx](https://github.com/root-project/root/blob/master/core/meta/src/TClass.cxx#L1413), so that the calls to `LoadClassInfo()` which are guarded by `if (fCanLoadClassInfo)` are never made. However, I am not sure this change is safe yet. That said, we surely need to fix this problem (given the difference seen in VTune), and I will keep working on a solution and will probably open a new pull request with either this change or similar changes after enough testing to ensure that everything is ok.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/666:585,testability,test,testing,585,"@Axel-Naumann Well, @pcanal disagrees. Philippe wants to just add `fCanLoadClassInfo = kFALSE;` right after [line 1413 of TClass.cxx](https://github.com/root-project/root/blob/master/core/meta/src/TClass.cxx#L1413), so that the calls to `LoadClassInfo()` which are guarded by `if (fCanLoadClassInfo)` are never made. However, I am not sure this change is safe yet. That said, we surely need to fix this problem (given the difference seen in VTune), and I will keep working on a solution and will probably open a new pull request with either this change or similar changes after enough testing to ensure that everything is ok.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/666
https://github.com/root-project/root/pull/668:41,usability,user,users,41,@vgvassilev none of those are visible to users. But be my guest...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/668
https://github.com/root-project/root/pull/668:261,interoperability,standard,standard,261,"> a) because that's out of scope for this PR (I did not add the #include). Since `cstddef` usually includes `stddef.h` and adds a bit of C++ extras, there's no harm in changing it to the C++ header. > b) because we need size_t, not std::size_t. Even though the standard says that only `std::size_t` needs to be defined, `size_t` is defined anyway, because `cstddef` usually includes `stddef.h` before adding the C++ stuff on top. This is what I see in GCC. ```cpp. #ifndef _GLIBCXX_CSTDDEF. #define _GLIBCXX_CSTDDEF 1. #pragma GCC system_header. #include <bits/c++config.h>. #include <stddef.h>. #if __cplusplus >= 201103L. namespace std. {. // We handle size_t, ptrdiff_t, and nullptr_t in c++config.h. using ::max_align_t;. }. #endif. #endif // _GLIBCXX_CSTDDEF. ```. and Boost. ```cpp. #ifndef __CSTDDEF_HEADER. #define __CSTDDEF_HEADER. #include <stddef.h>. namespace std {. using ::ptrdiff_t;. using ::size_t;. }. #endif // CSTDDEF_HEADER. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/668
https://github.com/root-project/root/pull/668:520,reliability,pra,pragma,520,"> a) because that's out of scope for this PR (I did not add the #include). Since `cstddef` usually includes `stddef.h` and adds a bit of C++ extras, there's no harm in changing it to the C++ header. > b) because we need size_t, not std::size_t. Even though the standard says that only `std::size_t` needs to be defined, `size_t` is defined anyway, because `cstddef` usually includes `stddef.h` before adding the C++ stuff on top. This is what I see in GCC. ```cpp. #ifndef _GLIBCXX_CSTDDEF. #define _GLIBCXX_CSTDDEF 1. #pragma GCC system_header. #include <bits/c++config.h>. #include <stddef.h>. #if __cplusplus >= 201103L. namespace std. {. // We handle size_t, ptrdiff_t, and nullptr_t in c++config.h. using ::max_align_t;. }. #endif. #endif // _GLIBCXX_CSTDDEF. ```. and Boost. ```cpp. #ifndef __CSTDDEF_HEADER. #define __CSTDDEF_HEADER. #include <stddef.h>. namespace std {. using ::ptrdiff_t;. using ::size_t;. }. #endif // CSTDDEF_HEADER. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/668
https://github.com/root-project/root/pull/668:300,availability,avail,available,300,"Changing code based on heuristics and guesses (""usually"", ""This is what I see in GCC"") is not a stable approach to coding :-). We need to write code that works on all compilers now and in 10 years. cstddef is meant to provide `std::size_t`, and we had cases in the past where `size_t` was indeed not available after including cstddef. So no, I'm not in favor of the change you propose, it's very different in personality from what I am changing here, and so *at least* requires motivation and a different PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/668
https://github.com/root-project/root/pull/668:300,reliability,availab,available,300,"Changing code based on heuristics and guesses (""usually"", ""This is what I see in GCC"") is not a stable approach to coding :-). We need to write code that works on all compilers now and in 10 years. cstddef is meant to provide `std::size_t`, and we had cases in the past where `size_t` was indeed not available after including cstddef. So no, I'm not in favor of the change you propose, it's very different in personality from what I am changing here, and so *at least* requires motivation and a different PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/668
https://github.com/root-project/root/pull/668:300,safety,avail,available,300,"Changing code based on heuristics and guesses (""usually"", ""This is what I see in GCC"") is not a stable approach to coding :-). We need to write code that works on all compilers now and in 10 years. cstddef is meant to provide `std::size_t`, and we had cases in the past where `size_t` was indeed not available after including cstddef. So no, I'm not in favor of the change you propose, it's very different in personality from what I am changing here, and so *at least* requires motivation and a different PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/668
https://github.com/root-project/root/pull/668:300,security,availab,available,300,"Changing code based on heuristics and guesses (""usually"", ""This is what I see in GCC"") is not a stable approach to coding :-). We need to write code that works on all compilers now and in 10 years. cstddef is meant to provide `std::size_t`, and we had cases in the past where `size_t` was indeed not available after including cstddef. So no, I'm not in favor of the change you propose, it's very different in personality from what I am changing here, and so *at least* requires motivation and a different PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/668
https://github.com/root-project/root/pull/668:409,usability,person,personality,409,"Changing code based on heuristics and guesses (""usually"", ""This is what I see in GCC"") is not a stable approach to coding :-). We need to write code that works on all compilers now and in 10 years. cstddef is meant to provide `std::size_t`, and we had cases in the past where `size_t` was indeed not available after including cstddef. So no, I'm not in favor of the change you propose, it's very different in personality from what I am changing here, and so *at least* requires motivation and a different PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/668
https://github.com/root-project/root/pull/675:11,deployability,build,build,11,"@phsft-bot build, please!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/675
https://github.com/root-project/root/pull/679:11,deployability,build,build,11,@phsft-bot build on mac1012/native,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/679
https://github.com/root-project/root/pull/679:11,deployability,build,build,11,@phsft-bot build on native/mac1012 with flags -Dvc=OFF -Dimt=ON -Dccache=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/679
https://github.com/root-project/root/pull/681:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/681
https://github.com/root-project/root/pull/681:12,usability,confirm,confirm,12,"Hi, can you confirm that this PR was for the first evaluation of GSoC? In that case we will close it and await your next one :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/681
https://github.com/root-project/root/pull/681:92,usability,close,close,92,"Hi, can you confirm that this PR was for the first evaluation of GSoC? In that case we will close it and await your next one :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/681
https://github.com/root-project/root/pull/681:73,deployability,continu,continue,73,This PR was done for the first evaluation of GSOC. The students does not continue the program so the PR can now be closed,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/681
https://github.com/root-project/root/pull/681:64,reliability,doe,does,64,This PR was done for the first evaluation of GSOC. The students does not continue the program so the PR can now be closed,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/681
https://github.com/root-project/root/pull/681:115,usability,close,closed,115,This PR was done for the first evaluation of GSOC. The students does not continue the program so the PR can now be closed,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/681
https://github.com/root-project/root/pull/682:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/682
https://github.com/root-project/root/pull/682:11,deployability,build,build,11,@phsft-bot build! @Axel-Naumann shall we merge that in?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/682
https://github.com/root-project/root/pull/682:45,deployability,updat,update,45,"@vgvassilev I'd prefer to first get a status update from say CMS and LHCb: they need to have a green build *now*, such that we can confirm that this reversed patch doesn't break them. I *think* this one was (also) visible in LHCb. Could you contact Marco and DavidA to assert that they get a green build with the master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/682
https://github.com/root-project/root/pull/682:101,deployability,build,build,101,"@vgvassilev I'd prefer to first get a status update from say CMS and LHCb: they need to have a green build *now*, such that we can confirm that this reversed patch doesn't break them. I *think* this one was (also) visible in LHCb. Could you contact Marco and DavidA to assert that they get a green build with the master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/682
https://github.com/root-project/root/pull/682:158,deployability,patch,patch,158,"@vgvassilev I'd prefer to first get a status update from say CMS and LHCb: they need to have a green build *now*, such that we can confirm that this reversed patch doesn't break them. I *think* this one was (also) visible in LHCb. Could you contact Marco and DavidA to assert that they get a green build with the master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/682
https://github.com/root-project/root/pull/682:298,deployability,build,build,298,"@vgvassilev I'd prefer to first get a status update from say CMS and LHCb: they need to have a green build *now*, such that we can confirm that this reversed patch doesn't break them. I *think* this one was (also) visible in LHCb. Could you contact Marco and DavidA to assert that they get a green build with the master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/682
https://github.com/root-project/root/pull/682:95,energy efficiency,green,green,95,"@vgvassilev I'd prefer to first get a status update from say CMS and LHCb: they need to have a green build *now*, such that we can confirm that this reversed patch doesn't break them. I *think* this one was (also) visible in LHCb. Could you contact Marco and DavidA to assert that they get a green build with the master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/682
https://github.com/root-project/root/pull/682:292,energy efficiency,green,green,292,"@vgvassilev I'd prefer to first get a status update from say CMS and LHCb: they need to have a green build *now*, such that we can confirm that this reversed patch doesn't break them. I *think* this one was (also) visible in LHCb. Could you contact Marco and DavidA to assert that they get a green build with the master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/682
https://github.com/root-project/root/pull/682:164,reliability,doe,doesn,164,"@vgvassilev I'd prefer to first get a status update from say CMS and LHCb: they need to have a green build *now*, such that we can confirm that this reversed patch doesn't break them. I *think* this one was (also) visible in LHCb. Could you contact Marco and DavidA to assert that they get a green build with the master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/682
https://github.com/root-project/root/pull/682:45,safety,updat,update,45,"@vgvassilev I'd prefer to first get a status update from say CMS and LHCb: they need to have a green build *now*, such that we can confirm that this reversed patch doesn't break them. I *think* this one was (also) visible in LHCb. Could you contact Marco and DavidA to assert that they get a green build with the master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/682
https://github.com/root-project/root/pull/682:158,safety,patch,patch,158,"@vgvassilev I'd prefer to first get a status update from say CMS and LHCb: they need to have a green build *now*, such that we can confirm that this reversed patch doesn't break them. I *think* this one was (also) visible in LHCb. Could you contact Marco and DavidA to assert that they get a green build with the master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/682
https://github.com/root-project/root/pull/682:45,security,updat,update,45,"@vgvassilev I'd prefer to first get a status update from say CMS and LHCb: they need to have a green build *now*, such that we can confirm that this reversed patch doesn't break them. I *think* this one was (also) visible in LHCb. Could you contact Marco and DavidA to assert that they get a green build with the master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/682
https://github.com/root-project/root/pull/682:158,security,patch,patch,158,"@vgvassilev I'd prefer to first get a status update from say CMS and LHCb: they need to have a green build *now*, such that we can confirm that this reversed patch doesn't break them. I *think* this one was (also) visible in LHCb. Could you contact Marco and DavidA to assert that they get a green build with the master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/682
https://github.com/root-project/root/pull/682:269,testability,assert,assert,269,"@vgvassilev I'd prefer to first get a status update from say CMS and LHCb: they need to have a green build *now*, such that we can confirm that this reversed patch doesn't break them. I *think* this one was (also) visible in LHCb. Could you contact Marco and DavidA to assert that they get a green build with the master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/682
https://github.com/root-project/root/pull/682:16,usability,prefer,prefer,16,"@vgvassilev I'd prefer to first get a status update from say CMS and LHCb: they need to have a green build *now*, such that we can confirm that this reversed patch doesn't break them. I *think* this one was (also) visible in LHCb. Could you contact Marco and DavidA to assert that they get a green build with the master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/682
https://github.com/root-project/root/pull/682:38,usability,statu,status,38,"@vgvassilev I'd prefer to first get a status update from say CMS and LHCb: they need to have a green build *now*, such that we can confirm that this reversed patch doesn't break them. I *think* this one was (also) visible in LHCb. Could you contact Marco and DavidA to assert that they get a green build with the master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/682
https://github.com/root-project/root/pull/682:131,usability,confirm,confirm,131,"@vgvassilev I'd prefer to first get a status update from say CMS and LHCb: they need to have a green build *now*, such that we can confirm that this reversed patch doesn't break them. I *think* this one was (also) visible in LHCb. Could you contact Marco and DavidA to assert that they get a green build with the master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/682
https://github.com/root-project/root/pull/682:19,safety,valid,validate,19,"@davidlt, could we validate if with this PR CMSSW is still fine? @Axel-Naumann I do not have Marco's git handle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/682
https://github.com/root-project/root/pull/682:19,security,validat,validate,19,"@davidlt, could we validate if with this PR CMSSW is still fine? @Axel-Naumann I do not have Marco's git handle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/682
https://github.com/root-project/root/pull/682:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/682
https://github.com/root-project/root/pull/683:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/683
https://github.com/root-project/root/pull/683:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/683
https://github.com/root-project/root/pull/683:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/683
https://github.com/root-project/root/pull/683:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/683
https://github.com/root-project/root/pull/683:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/683
https://github.com/root-project/root/pull/683:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/683
https://github.com/root-project/root/pull/684:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/684
https://github.com/root-project/root/pull/684:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/684
https://github.com/root-project/root/pull/684:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/684
https://github.com/root-project/root/pull/684:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/684
https://github.com/root-project/root/pull/684:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/684
https://github.com/root-project/root/pull/684:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/684
https://github.com/root-project/root/pull/684:4,availability,failur,failures,4,The failures are on only one platform and they seem infrastructural.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/684
https://github.com/root-project/root/pull/684:4,deployability,fail,failures,4,The failures are on only one platform and they seem infrastructural.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/684
https://github.com/root-project/root/pull/684:52,deployability,infrastructur,infrastructural,52,The failures are on only one platform and they seem infrastructural.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/684
https://github.com/root-project/root/pull/684:29,interoperability,platform,platform,29,The failures are on only one platform and they seem infrastructural.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/684
https://github.com/root-project/root/pull/684:4,performance,failur,failures,4,The failures are on only one platform and they seem infrastructural.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/684
https://github.com/root-project/root/pull/684:4,reliability,fail,failures,4,The failures are on only one platform and they seem infrastructural.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/684
https://github.com/root-project/root/pull/685:296,deployability,stack,stackoverflow,296,"Hi @vgvassilev , thank you for your suggestion. I realized that I should've done `rebase` when doing `git pull` from `upstream`. I will do it next time. Turns out removing these merge commits once made from the `rnn` branch and this pull request can be difficult (I took help from [here](https://stackoverflow.com/questions/5968964/avoid-unwanted-merge-commits-and-other-commits-when-doing-pull-request-on-github) and [here](https://stackoverflow.com/questions/33502205/how-to-delete-merge-commits)). . So I am just rebasing my commits on my `master` branch and making a new pull request from `master` branch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/685
https://github.com/root-project/root/pull/685:433,deployability,stack,stackoverflow,433,"Hi @vgvassilev , thank you for your suggestion. I realized that I should've done `rebase` when doing `git pull` from `upstream`. I will do it next time. Turns out removing these merge commits once made from the `rnn` branch and this pull request can be difficult (I took help from [here](https://stackoverflow.com/questions/5968964/avoid-unwanted-merge-commits-and-other-commits-when-doing-pull-request-on-github) and [here](https://stackoverflow.com/questions/33502205/how-to-delete-merge-commits)). . So I am just rebasing my commits on my `master` branch and making a new pull request from `master` branch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/685
https://github.com/root-project/root/pull/685:147,performance,time,time,147,"Hi @vgvassilev , thank you for your suggestion. I realized that I should've done `rebase` when doing `git pull` from `upstream`. I will do it next time. Turns out removing these merge commits once made from the `rnn` branch and this pull request can be difficult (I took help from [here](https://stackoverflow.com/questions/5968964/avoid-unwanted-merge-commits-and-other-commits-when-doing-pull-request-on-github) and [here](https://stackoverflow.com/questions/33502205/how-to-delete-merge-commits)). . So I am just rebasing my commits on my `master` branch and making a new pull request from `master` branch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/685
https://github.com/root-project/root/pull/685:332,safety,avoid,avoid-unwanted-merge-commits-and-other-commits-when-doing-pull-request-on-github,332,"Hi @vgvassilev , thank you for your suggestion. I realized that I should've done `rebase` when doing `git pull` from `upstream`. I will do it next time. Turns out removing these merge commits once made from the `rnn` branch and this pull request can be difficult (I took help from [here](https://stackoverflow.com/questions/5968964/avoid-unwanted-merge-commits-and-other-commits-when-doing-pull-request-on-github) and [here](https://stackoverflow.com/questions/33502205/how-to-delete-merge-commits)). . So I am just rebasing my commits on my `master` branch and making a new pull request from `master` branch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/685
https://github.com/root-project/root/pull/685:271,usability,help,help,271,"Hi @vgvassilev , thank you for your suggestion. I realized that I should've done `rebase` when doing `git pull` from `upstream`. I will do it next time. Turns out removing these merge commits once made from the `rnn` branch and this pull request can be difficult (I took help from [here](https://stackoverflow.com/questions/5968964/avoid-unwanted-merge-commits-and-other-commits-when-doing-pull-request-on-github) and [here](https://stackoverflow.com/questions/33502205/how-to-delete-merge-commits)). . So I am just rebasing my commits on my `master` branch and making a new pull request from `master` branch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/685
https://github.com/root-project/root/pull/687:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/687
https://github.com/root-project/root/pull/688:70,deployability,depend,dependent,70,This is what I get with this. Please note that the code is still very dependent of -Dbuiltin_vc=On. ![image](https://user-images.githubusercontent.com/6516307/27535617-f712d74c-5a6b-11e7-802a-5a23a7ea4b5e.png).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/688
https://github.com/root-project/root/pull/688:70,integrability,depend,dependent,70,This is what I get with this. Please note that the code is still very dependent of -Dbuiltin_vc=On. ![image](https://user-images.githubusercontent.com/6516307/27535617-f712d74c-5a6b-11e7-802a-5a23a7ea4b5e.png).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/688
https://github.com/root-project/root/pull/688:70,modifiability,depend,dependent,70,This is what I get with this. Please note that the code is still very dependent of -Dbuiltin_vc=On. ![image](https://user-images.githubusercontent.com/6516307/27535617-f712d74c-5a6b-11e7-802a-5a23a7ea4b5e.png).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/688
https://github.com/root-project/root/pull/688:70,safety,depend,dependent,70,This is what I get with this. Please note that the code is still very dependent of -Dbuiltin_vc=On. ![image](https://user-images.githubusercontent.com/6516307/27535617-f712d74c-5a6b-11e7-802a-5a23a7ea4b5e.png).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/688
https://github.com/root-project/root/pull/688:70,testability,depend,dependent,70,This is what I get with this. Please note that the code is still very dependent of -Dbuiltin_vc=On. ![image](https://user-images.githubusercontent.com/6516307/27535617-f712d74c-5a6b-11e7-802a-5a23a7ea4b5e.png).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/688
https://github.com/root-project/root/pull/688:117,usability,user,user-images,117,This is what I get with this. Please note that the code is still very dependent of -Dbuiltin_vc=On. ![image](https://user-images.githubusercontent.com/6516307/27535617-f712d74c-5a6b-11e7-802a-5a23a7ea4b5e.png).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/688
https://github.com/root-project/root/pull/688:26,availability,servic,services,26,![](https://github.trello.services/images/mini-trello-icon.png) [Help with RooFit GBenchmark](https://trello.com/c/x1HfNaSf/16-help-with-roofit-gbenchmark),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/688
https://github.com/root-project/root/pull/688:26,deployability,servic,services,26,![](https://github.trello.services/images/mini-trello-icon.png) [Help with RooFit GBenchmark](https://trello.com/c/x1HfNaSf/16-help-with-roofit-gbenchmark),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/688
https://github.com/root-project/root/pull/688:26,integrability,servic,services,26,![](https://github.trello.services/images/mini-trello-icon.png) [Help with RooFit GBenchmark](https://trello.com/c/x1HfNaSf/16-help-with-roofit-gbenchmark),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/688
https://github.com/root-project/root/pull/688:26,modifiability,servic,services,26,![](https://github.trello.services/images/mini-trello-icon.png) [Help with RooFit GBenchmark](https://trello.com/c/x1HfNaSf/16-help-with-roofit-gbenchmark),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/688
https://github.com/root-project/root/pull/688:65,usability,Help,Help,65,![](https://github.trello.services/images/mini-trello-icon.png) [Help with RooFit GBenchmark](https://trello.com/c/x1HfNaSf/16-help-with-roofit-gbenchmark),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/688
https://github.com/root-project/root/pull/688:127,usability,help,help-with-roofit-gbenchmark,127,![](https://github.trello.services/images/mini-trello-icon.png) [Help with RooFit GBenchmark](https://trello.com/c/x1HfNaSf/16-help-with-roofit-gbenchmark),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/688
https://github.com/root-project/root/pull/688:26,availability,servic,services,26,![](https://github.trello.services/images/mini-trello-icon.png) [Help with RooFit GBenchmark](https://trello.com/c/x1HfNaSf/16-help-with-roofit-gbenchmark),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/688
https://github.com/root-project/root/pull/688:26,deployability,servic,services,26,![](https://github.trello.services/images/mini-trello-icon.png) [Help with RooFit GBenchmark](https://trello.com/c/x1HfNaSf/16-help-with-roofit-gbenchmark),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/688
https://github.com/root-project/root/pull/688:26,integrability,servic,services,26,![](https://github.trello.services/images/mini-trello-icon.png) [Help with RooFit GBenchmark](https://trello.com/c/x1HfNaSf/16-help-with-roofit-gbenchmark),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/688
https://github.com/root-project/root/pull/688:26,modifiability,servic,services,26,![](https://github.trello.services/images/mini-trello-icon.png) [Help with RooFit GBenchmark](https://trello.com/c/x1HfNaSf/16-help-with-roofit-gbenchmark),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/688
https://github.com/root-project/root/pull/688:65,usability,Help,Help,65,![](https://github.trello.services/images/mini-trello-icon.png) [Help with RooFit GBenchmark](https://trello.com/c/x1HfNaSf/16-help-with-roofit-gbenchmark),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/688
https://github.com/root-project/root/pull/688:127,usability,help,help-with-roofit-gbenchmark,127,![](https://github.trello.services/images/mini-trello-icon.png) [Help with RooFit GBenchmark](https://trello.com/c/x1HfNaSf/16-help-with-roofit-gbenchmark),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/688
https://github.com/root-project/root/pull/688:169,security,team,teams,169,"> Help with RooFit GBenchmark. Card not found. This card may be on a private board. If someone gave you this link, they may need to invite you to one of their boards or teams.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/688
https://github.com/root-project/root/pull/688:2,usability,Help,Help,2,"> Help with RooFit GBenchmark. Card not found. This card may be on a private board. If someone gave you this link, they may need to invite you to one of their boards or teams.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/688
https://github.com/root-project/root/pull/688:38,deployability,integr,integration,38,"@pcanal, this is some weird GH trello integration which should be ignored.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/688
https://github.com/root-project/root/pull/688:38,integrability,integr,integration,38,"@pcanal, this is some weird GH trello integration which should be ignored.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/688
https://github.com/root-project/root/pull/688:38,interoperability,integr,integration,38,"@pcanal, this is some weird GH trello integration which should be ignored.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/688
https://github.com/root-project/root/pull/688:38,modifiability,integr,integration,38,"@pcanal, this is some weird GH trello integration which should be ignored.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/688
https://github.com/root-project/root/pull/688:38,reliability,integr,integration,38,"@pcanal, this is some weird GH trello integration which should be ignored.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/688
https://github.com/root-project/root/pull/688:38,security,integr,integration,38,"@pcanal, this is some weird GH trello integration which should be ignored.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/688
https://github.com/root-project/root/pull/688:38,testability,integr,integration,38,"@pcanal, this is some weird GH trello integration which should be ignored.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/688
https://github.com/root-project/root/pull/688:83,energy efficiency,green,green,83,Looks like jenkins cannot propagate the return results back to the PR. We have all green except for gcc4.9 on centos7 which I had to cancel because of the huge backlog of jobs it currently has.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/688
https://github.com/root-project/root/pull/688:179,energy efficiency,current,currently,179,Looks like jenkins cannot propagate the return results back to the PR. We have all green except for gcc4.9 on centos7 which I had to cancel because of the huge backlog of jobs it currently has.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/688
https://github.com/root-project/root/pull/688:89,safety,except,except,89,Looks like jenkins cannot propagate the return results back to the PR. We have all green except for gcc4.9 on centos7 which I had to cancel because of the huge backlog of jobs it currently has.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/688
https://github.com/root-project/root/pull/688:133,usability,cancel,cancel,133,Looks like jenkins cannot propagate the return results back to the PR. We have all green except for gcc4.9 on centos7 which I had to cancel because of the huge backlog of jobs it currently has.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/688
https://github.com/root-project/root/pull/689:137,deployability,updat,update,137,Thanks for working on this. There are a few things we can improve in this PR:. * Could you add more meaningful commit messages? * Please update the Copyright information as in the other files in ROOT. * Please migrate the tests to use gtest. It is much easier to understand what exactly you are testing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/689
https://github.com/root-project/root/pull/689:118,integrability,messag,messages,118,Thanks for working on this. There are a few things we can improve in this PR:. * Could you add more meaningful commit messages? * Please update the Copyright information as in the other files in ROOT. * Please migrate the tests to use gtest. It is much easier to understand what exactly you are testing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/689
https://github.com/root-project/root/pull/689:118,interoperability,messag,messages,118,Thanks for working on this. There are a few things we can improve in this PR:. * Could you add more meaningful commit messages? * Please update the Copyright information as in the other files in ROOT. * Please migrate the tests to use gtest. It is much easier to understand what exactly you are testing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/689
https://github.com/root-project/root/pull/689:137,safety,updat,update,137,Thanks for working on this. There are a few things we can improve in this PR:. * Could you add more meaningful commit messages? * Please update the Copyright information as in the other files in ROOT. * Please migrate the tests to use gtest. It is much easier to understand what exactly you are testing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/689
https://github.com/root-project/root/pull/689:222,safety,test,tests,222,Thanks for working on this. There are a few things we can improve in this PR:. * Could you add more meaningful commit messages? * Please update the Copyright information as in the other files in ROOT. * Please migrate the tests to use gtest. It is much easier to understand what exactly you are testing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/689
https://github.com/root-project/root/pull/689:295,safety,test,testing,295,Thanks for working on this. There are a few things we can improve in this PR:. * Could you add more meaningful commit messages? * Please update the Copyright information as in the other files in ROOT. * Please migrate the tests to use gtest. It is much easier to understand what exactly you are testing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/689
https://github.com/root-project/root/pull/689:137,security,updat,update,137,Thanks for working on this. There are a few things we can improve in this PR:. * Could you add more meaningful commit messages? * Please update the Copyright information as in the other files in ROOT. * Please migrate the tests to use gtest. It is much easier to understand what exactly you are testing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/689
https://github.com/root-project/root/pull/689:222,testability,test,tests,222,Thanks for working on this. There are a few things we can improve in this PR:. * Could you add more meaningful commit messages? * Please update the Copyright information as in the other files in ROOT. * Please migrate the tests to use gtest. It is much easier to understand what exactly you are testing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/689
https://github.com/root-project/root/pull/689:263,testability,understand,understand,263,Thanks for working on this. There are a few things we can improve in this PR:. * Could you add more meaningful commit messages? * Please update the Copyright information as in the other files in ROOT. * Please migrate the tests to use gtest. It is much easier to understand what exactly you are testing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/689
https://github.com/root-project/root/pull/689:295,testability,test,testing,295,Thanks for working on this. There are a few things we can improve in this PR:. * Could you add more meaningful commit messages? * Please update the Copyright information as in the other files in ROOT. * Please migrate the tests to use gtest. It is much easier to understand what exactly you are testing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/689
https://github.com/root-project/root/pull/689:12,usability,confirm,confirm,12,"Hi, can you confirm that this PR was for the first evaluation of GSoC? In that case we will close it and await your next one :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/689
https://github.com/root-project/root/pull/689:92,usability,close,close,92,"Hi, can you confirm that this PR was for the first evaluation of GSoC? In that case we will close it and await your next one :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/689
https://github.com/root-project/root/pull/689:74,deployability,patch,patch,74,"Yes, it was for the first evaluation. I didn't realize how messy was this patch, the next one will be with more organized commits. Let's close it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/689
https://github.com/root-project/root/pull/689:74,safety,patch,patch,74,"Yes, it was for the first evaluation. I didn't realize how messy was this patch, the next one will be with more organized commits. Let's close it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/689
https://github.com/root-project/root/pull/689:74,security,patch,patch,74,"Yes, it was for the first evaluation. I didn't realize how messy was this patch, the next one will be with more organized commits. Let's close it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/689
https://github.com/root-project/root/pull/689:137,usability,close,close,137,"Yes, it was for the first evaluation. I didn't realize how messy was this patch, the next one will be with more organized commits. Let's close it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/689
https://github.com/root-project/root/pull/690:11,deployability,build,build,11,@phsft-bot build with flags -Dhttp=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/690
https://github.com/root-project/root/pull/693:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/693
https://github.com/root-project/root/pull/693:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/693
https://github.com/root-project/root/pull/693:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/693
https://github.com/root-project/root/pull/693:476,deployability,build,build,476,"As mentioned by @Teemperor , please rebase your branch rather than adding a merge commit, and please combine commits by amending them instead of adding a broken commit and then another one with fixes. The addition of broken commits make it really hard to do a git bisect if we find problems in the future. No commit hash is allowed not to compile. Please check on [CDash](http://cdash.cern.ch/index.php?project=ROOT) and [Jenkins](https://epsft-jenkins.cern.ch/view/ROOT) the build for this PR, and make sure you also do not introduce any warnings or failing tests. For Jenkins the PR itself has a link, and for CDash you can check towards the end of the page to find the specific builds. Thank you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/693
https://github.com/root-project/root/pull/693:551,deployability,fail,failing,551,"As mentioned by @Teemperor , please rebase your branch rather than adding a merge commit, and please combine commits by amending them instead of adding a broken commit and then another one with fixes. The addition of broken commits make it really hard to do a git bisect if we find problems in the future. No commit hash is allowed not to compile. Please check on [CDash](http://cdash.cern.ch/index.php?project=ROOT) and [Jenkins](https://epsft-jenkins.cern.ch/view/ROOT) the build for this PR, and make sure you also do not introduce any warnings or failing tests. For Jenkins the PR itself has a link, and for CDash you can check towards the end of the page to find the specific builds. Thank you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/693
https://github.com/root-project/root/pull/693:681,deployability,build,builds,681,"As mentioned by @Teemperor , please rebase your branch rather than adding a merge commit, and please combine commits by amending them instead of adding a broken commit and then another one with fixes. The addition of broken commits make it really hard to do a git bisect if we find problems in the future. No commit hash is allowed not to compile. Please check on [CDash](http://cdash.cern.ch/index.php?project=ROOT) and [Jenkins](https://epsft-jenkins.cern.ch/view/ROOT) the build for this PR, and make sure you also do not introduce any warnings or failing tests. For Jenkins the PR itself has a link, and for CDash you can check towards the end of the page to find the specific builds. Thank you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/693
https://github.com/root-project/root/pull/693:672,interoperability,specif,specific,672,"As mentioned by @Teemperor , please rebase your branch rather than adding a merge commit, and please combine commits by amending them instead of adding a broken commit and then another one with fixes. The addition of broken commits make it really hard to do a git bisect if we find problems in the future. No commit hash is allowed not to compile. Please check on [CDash](http://cdash.cern.ch/index.php?project=ROOT) and [Jenkins](https://epsft-jenkins.cern.ch/view/ROOT) the build for this PR, and make sure you also do not introduce any warnings or failing tests. For Jenkins the PR itself has a link, and for CDash you can check towards the end of the page to find the specific builds. Thank you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/693
https://github.com/root-project/root/pull/693:551,reliability,fail,failing,551,"As mentioned by @Teemperor , please rebase your branch rather than adding a merge commit, and please combine commits by amending them instead of adding a broken commit and then another one with fixes. The addition of broken commits make it really hard to do a git bisect if we find problems in the future. No commit hash is allowed not to compile. Please check on [CDash](http://cdash.cern.ch/index.php?project=ROOT) and [Jenkins](https://epsft-jenkins.cern.ch/view/ROOT) the build for this PR, and make sure you also do not introduce any warnings or failing tests. For Jenkins the PR itself has a link, and for CDash you can check towards the end of the page to find the specific builds. Thank you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/693
https://github.com/root-project/root/pull/693:559,safety,test,tests,559,"As mentioned by @Teemperor , please rebase your branch rather than adding a merge commit, and please combine commits by amending them instead of adding a broken commit and then another one with fixes. The addition of broken commits make it really hard to do a git bisect if we find problems in the future. No commit hash is allowed not to compile. Please check on [CDash](http://cdash.cern.ch/index.php?project=ROOT) and [Jenkins](https://epsft-jenkins.cern.ch/view/ROOT) the build for this PR, and make sure you also do not introduce any warnings or failing tests. For Jenkins the PR itself has a link, and for CDash you can check towards the end of the page to find the specific builds. Thank you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/693
https://github.com/root-project/root/pull/693:316,security,hash,hash,316,"As mentioned by @Teemperor , please rebase your branch rather than adding a merge commit, and please combine commits by amending them instead of adding a broken commit and then another one with fixes. The addition of broken commits make it really hard to do a git bisect if we find problems in the future. No commit hash is allowed not to compile. Please check on [CDash](http://cdash.cern.ch/index.php?project=ROOT) and [Jenkins](https://epsft-jenkins.cern.ch/view/ROOT) the build for this PR, and make sure you also do not introduce any warnings or failing tests. For Jenkins the PR itself has a link, and for CDash you can check towards the end of the page to find the specific builds. Thank you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/693
https://github.com/root-project/root/pull/693:559,testability,test,tests,559,"As mentioned by @Teemperor , please rebase your branch rather than adding a merge commit, and please combine commits by amending them instead of adding a broken commit and then another one with fixes. The addition of broken commits make it really hard to do a git bisect if we find problems in the future. No commit hash is allowed not to compile. Please check on [CDash](http://cdash.cern.ch/index.php?project=ROOT) and [Jenkins](https://epsft-jenkins.cern.ch/view/ROOT) the build for this PR, and make sure you also do not introduce any warnings or failing tests. For Jenkins the PR itself has a link, and for CDash you can check towards the end of the page to find the specific builds. Thank you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/693
https://github.com/root-project/root/pull/693:12,usability,confirm,confirm,12,"Hi, can you confirm that this PR was for the first evaluation of GSoC? In that case we will close it and await your next one :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/693
https://github.com/root-project/root/pull/693:92,usability,close,close,92,"Hi, can you confirm that this PR was for the first evaluation of GSoC? In that case we will close it and await your next one :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/693
https://github.com/root-project/root/pull/693:423,deployability,build,build,423,"Thank you for the comments @ashlaban and @amadio . Based on the feedback these are the steps I took. This PR was for the first evaluation of GSoC and I am closing it. New PR is #778. * Make a new branch from first commit and cherry pick my commits one by one, amending them and rewriting history such that commits are merged into 3 working commits. * From now I'll always `rebase` before merging and make sure that commits build correctly. . * Changing intendation to 3 spaces.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/693
https://github.com/root-project/root/pull/693:64,usability,feedback,feedback,64,"Thank you for the comments @ashlaban and @amadio . Based on the feedback these are the steps I took. This PR was for the first evaluation of GSoC and I am closing it. New PR is #778. * Make a new branch from first commit and cherry pick my commits one by one, amending them and rewriting history such that commits are merged into 3 working commits. * From now I'll always `rebase` before merging and make sure that commits build correctly. . * Changing intendation to 3 spaces.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/693
https://github.com/root-project/root/pull/694:15,interoperability,conflict,conflicts,15,Rebased to fix conflicts,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/694
https://github.com/root-project/root/pull/696:234,availability,consist,consistent,234,"Hi, these are four commits with very non-descriptive names that change a total of 23 files. The first commit only adds almost 2000 loc in 22 files, making this very hard to review. Please modify your history so that the smallest self-consistent changes are each in their own commit,. with a descriptive short message and a useful longer description:. ```. what this commit does: add/fix/remove/change. explanation of why these changes were necessary,. and whatever else is useful to the reviewer/people who. will look at this in the future. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/696
https://github.com/root-project/root/pull/696:309,integrability,messag,message,309,"Hi, these are four commits with very non-descriptive names that change a total of 23 files. The first commit only adds almost 2000 loc in 22 files, making this very hard to review. Please modify your history so that the smallest self-consistent changes are each in their own commit,. with a descriptive short message and a useful longer description:. ```. what this commit does: add/fix/remove/change. explanation of why these changes were necessary,. and whatever else is useful to the reviewer/people who. will look at this in the future. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/696
https://github.com/root-project/root/pull/696:309,interoperability,messag,message,309,"Hi, these are four commits with very non-descriptive names that change a total of 23 files. The first commit only adds almost 2000 loc in 22 files, making this very hard to review. Please modify your history so that the smallest self-consistent changes are each in their own commit,. with a descriptive short message and a useful longer description:. ```. what this commit does: add/fix/remove/change. explanation of why these changes were necessary,. and whatever else is useful to the reviewer/people who. will look at this in the future. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/696
https://github.com/root-project/root/pull/696:373,reliability,doe,does,373,"Hi, these are four commits with very non-descriptive names that change a total of 23 files. The first commit only adds almost 2000 loc in 22 files, making this very hard to review. Please modify your history so that the smallest self-consistent changes are each in their own commit,. with a descriptive short message and a useful longer description:. ```. what this commit does: add/fix/remove/change. explanation of why these changes were necessary,. and whatever else is useful to the reviewer/people who. will look at this in the future. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/696
https://github.com/root-project/root/pull/696:173,safety,review,review,173,"Hi, these are four commits with very non-descriptive names that change a total of 23 files. The first commit only adds almost 2000 loc in 22 files, making this very hard to review. Please modify your history so that the smallest self-consistent changes are each in their own commit,. with a descriptive short message and a useful longer description:. ```. what this commit does: add/fix/remove/change. explanation of why these changes were necessary,. and whatever else is useful to the reviewer/people who. will look at this in the future. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/696
https://github.com/root-project/root/pull/696:487,safety,review,reviewer,487,"Hi, these are four commits with very non-descriptive names that change a total of 23 files. The first commit only adds almost 2000 loc in 22 files, making this very hard to review. Please modify your history so that the smallest self-consistent changes are each in their own commit,. with a descriptive short message and a useful longer description:. ```. what this commit does: add/fix/remove/change. explanation of why these changes were necessary,. and whatever else is useful to the reviewer/people who. will look at this in the future. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/696
https://github.com/root-project/root/pull/696:188,security,modif,modify,188,"Hi, these are four commits with very non-descriptive names that change a total of 23 files. The first commit only adds almost 2000 loc in 22 files, making this very hard to review. Please modify your history so that the smallest self-consistent changes are each in their own commit,. with a descriptive short message and a useful longer description:. ```. what this commit does: add/fix/remove/change. explanation of why these changes were necessary,. and whatever else is useful to the reviewer/people who. will look at this in the future. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/696
https://github.com/root-project/root/pull/696:173,testability,review,review,173,"Hi, these are four commits with very non-descriptive names that change a total of 23 files. The first commit only adds almost 2000 loc in 22 files, making this very hard to review. Please modify your history so that the smallest self-consistent changes are each in their own commit,. with a descriptive short message and a useful longer description:. ```. what this commit does: add/fix/remove/change. explanation of why these changes were necessary,. and whatever else is useful to the reviewer/people who. will look at this in the future. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/696
https://github.com/root-project/root/pull/696:487,testability,review,reviewer,487,"Hi, these are four commits with very non-descriptive names that change a total of 23 files. The first commit only adds almost 2000 loc in 22 files, making this very hard to review. Please modify your history so that the smallest self-consistent changes are each in their own commit,. with a descriptive short message and a useful longer description:. ```. what this commit does: add/fix/remove/change. explanation of why these changes were necessary,. and whatever else is useful to the reviewer/people who. will look at this in the future. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/696
https://github.com/root-project/root/pull/696:234,usability,consist,consistent,234,"Hi, these are four commits with very non-descriptive names that change a total of 23 files. The first commit only adds almost 2000 loc in 22 files, making this very hard to review. Please modify your history so that the smallest self-consistent changes are each in their own commit,. with a descriptive short message and a useful longer description:. ```. what this commit does: add/fix/remove/change. explanation of why these changes were necessary,. and whatever else is useful to the reviewer/people who. will look at this in the future. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/696
https://github.com/root-project/root/pull/696:101,integrability,messag,messages,101,"Hello @bluehood , thanks for advise. I will surely do the same and raise a new PR with proper commit messages for every step. So I am closing this PR. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/696
https://github.com/root-project/root/pull/696:101,interoperability,messag,messages,101,"Hello @bluehood , thanks for advise. I will surely do the same and raise a new PR with proper commit messages for every step. So I am closing this PR. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/696
https://github.com/root-project/root/pull/697:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/697
https://github.com/root-project/root/pull/697:0,deployability,Fail,Fails,0,Fails everywhere; needs updated root-project/cling#158,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/697
https://github.com/root-project/root/pull/697:24,deployability,updat,updated,24,Fails everywhere; needs updated root-project/cling#158,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/697
https://github.com/root-project/root/pull/697:0,reliability,Fail,Fails,0,Fails everywhere; needs updated root-project/cling#158,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/697
https://github.com/root-project/root/pull/697:24,safety,updat,updated,24,Fails everywhere; needs updated root-project/cling#158,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/697
https://github.com/root-project/root/pull/697:24,security,updat,updated,24,Fails everywhere; needs updated root-project/cling#158,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/697
https://github.com/root-project/root/pull/698:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/698
https://github.com/root-project/root/pull/698:11,deployability,build,build,11,"@phsft-bot build, again! (now that the missing jenkins procedure arrived)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/698
https://github.com/root-project/root/pull/699:11,deployability,build,build,11,"@phsft-bot build also on centos7/gcc49, mac1012/native, slc6/gcc49, slc6/gcc62, ubuntu14/native with flags -Dbuiltin_vc=ON -Dbuiltin_veccore=ON -Dvc=ON",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/699
https://github.com/root-project/root/pull/699:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/699
https://github.com/root-project/root/pull/699:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/699
https://github.com/root-project/root/pull/699:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/699
https://github.com/root-project/root/pull/699:19,safety,test,tests,19,Passes all default tests! Let's see the vectorized ones,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/699
https://github.com/root-project/root/pull/699:19,testability,test,tests,19,Passes all default tests! Let's see the vectorized ones,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/699
https://github.com/root-project/root/pull/699:11,deployability,build,build,11,"@phsft-bot build also on centos7/gcc49, mac1012/native, slc6/gcc49, slc6/gcc62, ubuntu14/native with flags -Dbuiltin_vc=ON -Dbuiltin_veccore=ON -Dvc=ON",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/699
https://github.com/root-project/root/pull/700:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/700
https://github.com/root-project/root/pull/700:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/700
https://github.com/root-project/root/pull/700:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/700
https://github.com/root-project/root/pull/700:11,deployability,build,build,11,@phsft-bot build just on slc6/clang_gcc62 with flags -Dvc=OFF -Dimt=ON -Dccache=Off -Dcxxmodules=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/700
https://github.com/root-project/root/pull/700:36,availability,failur,failure,36,@Teemperor could you check the last failure?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/700
https://github.com/root-project/root/pull/700:36,deployability,fail,failure,36,@Teemperor could you check the last failure?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/700
https://github.com/root-project/root/pull/700:36,performance,failur,failure,36,@Teemperor could you check the last failure?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/700
https://github.com/root-project/root/pull/700:36,reliability,fail,failure,36,@Teemperor could you check the last failure?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/700
https://github.com/root-project/root/pull/700:10,deployability,infrastructur,infrastructure,10,Seems and infrastructure issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/700
https://github.com/root-project/root/pull/703:4,deployability,fail,failing,4,The failing tests are addressed by PR #55 in roottest. clang-format complains about markdown that I did not touch as it sometimes does.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/703
https://github.com/root-project/root/pull/703:61,interoperability,format,format,61,The failing tests are addressed by PR #55 in roottest. clang-format complains about markdown that I did not touch as it sometimes does.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/703
https://github.com/root-project/root/pull/703:4,reliability,fail,failing,4,The failing tests are addressed by PR #55 in roottest. clang-format complains about markdown that I did not touch as it sometimes does.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/703
https://github.com/root-project/root/pull/703:130,reliability,doe,does,130,The failing tests are addressed by PR #55 in roottest. clang-format complains about markdown that I did not touch as it sometimes does.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/703
https://github.com/root-project/root/pull/703:12,safety,test,tests,12,The failing tests are addressed by PR #55 in roottest. clang-format complains about markdown that I did not touch as it sometimes does.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/703
https://github.com/root-project/root/pull/703:68,safety,compl,complains,68,The failing tests are addressed by PR #55 in roottest. clang-format complains about markdown that I did not touch as it sometimes does.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/703
https://github.com/root-project/root/pull/703:68,security,compl,complains,68,The failing tests are addressed by PR #55 in roottest. clang-format complains about markdown that I did not touch as it sometimes does.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/703
https://github.com/root-project/root/pull/703:12,testability,test,tests,12,The failing tests are addressed by PR #55 in roottest. clang-format complains about markdown that I did not touch as it sometimes does.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/703
https://github.com/root-project/root/pull/703:35,integrability,coupl,couple,35,I hijacked the PR to also put in a couple of commits unrelated to TH*D/TH*F.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/703
https://github.com/root-project/root/pull/703:35,modifiability,coupl,couple,35,I hijacked the PR to also put in a couple of commits unrelated to TH*D/TH*F.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/703
https://github.com/root-project/root/pull/703:35,testability,coupl,couple,35,I hijacked the PR to also put in a couple of commits unrelated to TH*D/TH*F.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/703
https://github.com/root-project/root/pull/705:11,deployability,build,build,11,@phsft-bot build. and stop spamming,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/705
https://github.com/root-project/root/pull/705:22,usability,stop,stop,22,@phsft-bot build. and stop spamming,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/705
https://github.com/root-project/root/pull/705:18,deployability,patch,patch,18,"Hi, including the patch in my build I have failed to reproduce the problem on the same machine where it occurred (mac1012/native). Maybe a glitch or some other strange effect. This said, the developer taking care of TH1 is back next week and I think we need his advise on this change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/705
https://github.com/root-project/root/pull/705:30,deployability,build,build,30,"Hi, including the patch in my build I have failed to reproduce the problem on the same machine where it occurred (mac1012/native). Maybe a glitch or some other strange effect. This said, the developer taking care of TH1 is back next week and I think we need his advise on this change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/705
https://github.com/root-project/root/pull/705:43,deployability,fail,failed,43,"Hi, including the patch in my build I have failed to reproduce the problem on the same machine where it occurred (mac1012/native). Maybe a glitch or some other strange effect. This said, the developer taking care of TH1 is back next week and I think we need his advise on this change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/705
https://github.com/root-project/root/pull/705:43,reliability,fail,failed,43,"Hi, including the patch in my build I have failed to reproduce the problem on the same machine where it occurred (mac1012/native). Maybe a glitch or some other strange effect. This said, the developer taking care of TH1 is back next week and I think we need his advise on this change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/705
https://github.com/root-project/root/pull/705:18,safety,patch,patch,18,"Hi, including the patch in my build I have failed to reproduce the problem on the same machine where it occurred (mac1012/native). Maybe a glitch or some other strange effect. This said, the developer taking care of TH1 is back next week and I think we need his advise on this change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/705
https://github.com/root-project/root/pull/705:18,security,patch,patch,18,"Hi, including the patch in my build I have failed to reproduce the problem on the same machine where it occurred (mac1012/native). Maybe a glitch or some other strange effect. This said, the developer taking care of TH1 is back next week and I think we need his advise on this change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/705
https://github.com/root-project/root/pull/705:50,modifiability,exten,extend,50,"Sounds good, thanks for looking into it! Should I extend the reproducer into a full test case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/705
https://github.com/root-project/root/pull/705:84,safety,test,test,84,"Sounds good, thanks for looking into it! Should I extend the reproducer into a full test case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/705
https://github.com/root-project/root/pull/705:84,testability,test,test,84,"Sounds good, thanks for looking into it! Should I extend the reproducer into a full test case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/705
https://github.com/root-project/root/pull/705:44,performance,time,time,44,"Hi, who is the TH1 developer? I think it is time to check in with him :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/705
https://github.com/root-project/root/pull/705:0,availability,Ping,Ping,0,Ping @lmoneta. Updated according to our discussion.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/705
https://github.com/root-project/root/pull/705:15,deployability,Updat,Updated,15,Ping @lmoneta. Updated according to our discussion.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/705
https://github.com/root-project/root/pull/705:15,safety,Updat,Updated,15,Ping @lmoneta. Updated according to our discussion.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/705
https://github.com/root-project/root/pull/705:15,security,Updat,Updated,15,Ping @lmoneta. Updated according to our discussion.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/705
https://github.com/root-project/root/pull/706:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/706
https://github.com/root-project/root/pull/706:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/706
https://github.com/root-project/root/pull/707:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/707
https://github.com/root-project/root/pull/708:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/708
https://github.com/root-project/root/pull/708:12,usability,confirm,confirm,12,"Hi, can you confirm that this PR was for the first evaluation of GSoC? In that case we will close it and await your next one :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/708
https://github.com/root-project/root/pull/708:92,usability,close,close,92,"Hi, can you confirm that this PR was for the first evaluation of GSoC? In that case we will close it and await your next one :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/708
https://github.com/root-project/root/pull/709:122,interoperability,format,formatting,122,"Great PR, a very nice job. The first thing, even without going into the details, I'd like to note is that many changes to formatting have been applied. I wonder if those are really necessary and do not add noise/dificulties by cherry-picking.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/709
https://github.com/root-project/root/pull/709:46,interoperability,format,formatting,46,"Hi Danilo. Yes, indeed, there are quite a few formatting changes. I was reading the whole file, so I thought I might as well fix the more glaring issues with formatting. I can separate the commits that are pure formatting and just push them first, leaving only real changes here if you prefer. Cherry picking shouldn't be difficult, however, as I did try to make the commits more or less independent. They do not interfere with each other.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/709
https://github.com/root-project/root/pull/709:158,interoperability,format,formatting,158,"Hi Danilo. Yes, indeed, there are quite a few formatting changes. I was reading the whole file, so I thought I might as well fix the more glaring issues with formatting. I can separate the commits that are pure formatting and just push them first, leaving only real changes here if you prefer. Cherry picking shouldn't be difficult, however, as I did try to make the commits more or less independent. They do not interfere with each other.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/709
https://github.com/root-project/root/pull/709:211,interoperability,format,formatting,211,"Hi Danilo. Yes, indeed, there are quite a few formatting changes. I was reading the whole file, so I thought I might as well fix the more glaring issues with formatting. I can separate the commits that are pure formatting and just push them first, leaving only real changes here if you prefer. Cherry picking shouldn't be difficult, however, as I did try to make the commits more or less independent. They do not interfere with each other.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/709
https://github.com/root-project/root/pull/709:286,usability,prefer,prefer,286,"Hi Danilo. Yes, indeed, there are quite a few formatting changes. I was reading the whole file, so I thought I might as well fix the more glaring issues with formatting. I can separate the commits that are pure formatting and just push them first, leaving only real changes here if you prefer. Cherry picking shouldn't be difficult, however, as I did try to make the commits more or less independent. They do not interfere with each other.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/709
https://github.com/root-project/root/pull/709:28,usability,feedback,feedback,28,"Alright, thanks for all the feedback! I think that it will be better to break this PR into smaller pieces, so I will close this one, rework the commits according to the feedback received, and push new PRs soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/709
https://github.com/root-project/root/pull/709:117,usability,close,close,117,"Alright, thanks for all the feedback! I think that it will be better to break this PR into smaller pieces, so I will close this one, rework the commits according to the feedback received, and push new PRs soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/709
https://github.com/root-project/root/pull/709:169,usability,feedback,feedback,169,"Alright, thanks for all the feedback! I think that it will be better to break this PR into smaller pieces, so I will close this one, rework the commits according to the feedback received, and push new PRs soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/709
https://github.com/root-project/root/pull/711:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/711
https://github.com/root-project/root/pull/712:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/712
https://github.com/root-project/root/pull/712:0,deployability,Fail,Fails,0,Fails roottest.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/712
https://github.com/root-project/root/pull/712:0,reliability,Fail,Fails,0,Fails roottest.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/712
https://github.com/root-project/root/pull/714:136,availability,state,statements,136,Clant format will complain in the IncrementalParser because it wants me to reformat the whole constructor. I only adjusted the specific statements to the suggested style to prevent that I touch so many lines with this NFC patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/714
https://github.com/root-project/root/pull/714:222,deployability,patch,patch,222,Clant format will complain in the IncrementalParser because it wants me to reformat the whole constructor. I only adjusted the specific statements to the suggested style to prevent that I touch so many lines with this NFC patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/714
https://github.com/root-project/root/pull/714:136,integrability,state,statements,136,Clant format will complain in the IncrementalParser because it wants me to reformat the whole constructor. I only adjusted the specific statements to the suggested style to prevent that I touch so many lines with this NFC patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/714
https://github.com/root-project/root/pull/714:6,interoperability,format,format,6,Clant format will complain in the IncrementalParser because it wants me to reformat the whole constructor. I only adjusted the specific statements to the suggested style to prevent that I touch so many lines with this NFC patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/714
https://github.com/root-project/root/pull/714:127,interoperability,specif,specific,127,Clant format will complain in the IncrementalParser because it wants me to reformat the whole constructor. I only adjusted the specific statements to the suggested style to prevent that I touch so many lines with this NFC patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/714
https://github.com/root-project/root/pull/714:18,safety,compl,complain,18,Clant format will complain in the IncrementalParser because it wants me to reformat the whole constructor. I only adjusted the specific statements to the suggested style to prevent that I touch so many lines with this NFC patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/714
https://github.com/root-project/root/pull/714:173,safety,prevent,prevent,173,Clant format will complain in the IncrementalParser because it wants me to reformat the whole constructor. I only adjusted the specific statements to the suggested style to prevent that I touch so many lines with this NFC patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/714
https://github.com/root-project/root/pull/714:222,safety,patch,patch,222,Clant format will complain in the IncrementalParser because it wants me to reformat the whole constructor. I only adjusted the specific statements to the suggested style to prevent that I touch so many lines with this NFC patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/714
https://github.com/root-project/root/pull/714:18,security,compl,complain,18,Clant format will complain in the IncrementalParser because it wants me to reformat the whole constructor. I only adjusted the specific statements to the suggested style to prevent that I touch so many lines with this NFC patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/714
https://github.com/root-project/root/pull/714:173,security,preven,prevent,173,Clant format will complain in the IncrementalParser because it wants me to reformat the whole constructor. I only adjusted the specific statements to the suggested style to prevent that I touch so many lines with this NFC patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/714
https://github.com/root-project/root/pull/714:222,security,patch,patch,222,Clant format will complain in the IncrementalParser because it wants me to reformat the whole constructor. I only adjusted the specific statements to the suggested style to prevent that I touch so many lines with this NFC patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/714
https://github.com/root-project/root/pull/714:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/714
https://github.com/root-project/root/pull/714:30,safety,review,review,30,"@Axel-Naumann, thanks for the review, I already reviewed this code and it looks good.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/714
https://github.com/root-project/root/pull/714:48,safety,review,reviewed,48,"@Axel-Naumann, thanks for the review, I already reviewed this code and it looks good.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/714
https://github.com/root-project/root/pull/714:30,testability,review,review,30,"@Axel-Naumann, thanks for the review, I already reviewed this code and it looks good.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/714
https://github.com/root-project/root/pull/714:48,testability,review,reviewed,48,"@Axel-Naumann, thanks for the review, I already reviewed this code and it looks good.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/714
https://github.com/root-project/root/pull/714:281,integrability,sub,submit,281,"I'll make a follow up PR where we fix this. Thanks for the review! - Raphael. 2017-06-30 10:14 GMT+02:00 Axel Naumann <notifications@github.com>:. > *@Axel-Naumann* commented on this pull request. >. > @vgvassilev <https://github.com/vgvassilev> merged before I had a chance. > to submit my review :-(. > ------------------------------. >. > In interpreter/cling/include/cling/Interpreter/CIFactory.h. > <https://github.com/root-project/root/pull/714#discussion_r124974599>:. >. > > const char* LLVMDir,. > + clang::ASTConsumer* consumer,. >. > Can we argue bool OnlyLex = !consumer, and remove the OnlyLex parameter? > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974774>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > This should take a unique_ptr<ASTConsumer, as should all callers, because. > CI->SetASTConsumer() ""converts"" customConsumer to a unique_ptr. > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974821>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > customConsumer should probably be called consumer; there's nothing custom. > about it? >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-pr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/714
https://github.com/root-project/root/pull/714:955,integrability,Buffer,Buffer,955,"I'll make a follow up PR where we fix this. Thanks for the review! - Raphael. 2017-06-30 10:14 GMT+02:00 Axel Naumann <notifications@github.com>:. > *@Axel-Naumann* commented on this pull request. >. > @vgvassilev <https://github.com/vgvassilev> merged before I had a chance. > to submit my review :-(. > ------------------------------. >. > In interpreter/cling/include/cling/Interpreter/CIFactory.h. > <https://github.com/root-project/root/pull/714#discussion_r124974599>:. >. > > const char* LLVMDir,. > + clang::ASTConsumer* consumer,. >. > Can we argue bool OnlyLex = !consumer, and remove the OnlyLex parameter? > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974774>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > This should take a unique_ptr<ASTConsumer, as should all callers, because. > CI->SetASTConsumer() ""converts"" customConsumer to a unique_ptr. > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974821>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > customConsumer should probably be called consumer; there's nothing custom. > about it? >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-pr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/714
https://github.com/root-project/root/pull/714:1600,integrability,Buffer,Buffer,1600,"l request. >. > @vgvassilev <https://github.com/vgvassilev> merged before I had a chance. > to submit my review :-(. > ------------------------------. >. > In interpreter/cling/include/cling/Interpreter/CIFactory.h. > <https://github.com/root-project/root/pull/714#discussion_r124974599>:. >. > > const char* LLVMDir,. > + clang::ASTConsumer* consumer,. >. > Can we argue bool OnlyLex = !consumer, and remove the OnlyLex parameter? > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974774>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > This should take a unique_ptr<ASTConsumer, as should all callers, because. > CI->SetASTConsumer() ""converts"" customConsumer to a unique_ptr. > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974821>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > customConsumer should probably be called consumer; there's nothing custom. > about it? >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/714#pullrequestreview-47317796>,. > or mute the thread. > <https://github.com/notifications/unsubscribe-auth/AAs7AZ80SwohnpiTogjRYY15nz0hCryMks5sJK5ogaJpZM4OJRjT>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/714
https://github.com/root-project/root/pull/714:607,modifiability,paramet,parameter,607,"I'll make a follow up PR where we fix this. Thanks for the review! - Raphael. 2017-06-30 10:14 GMT+02:00 Axel Naumann <notifications@github.com>:. > *@Axel-Naumann* commented on this pull request. >. > @vgvassilev <https://github.com/vgvassilev> merged before I had a chance. > to submit my review :-(. > ------------------------------. >. > In interpreter/cling/include/cling/Interpreter/CIFactory.h. > <https://github.com/root-project/root/pull/714#discussion_r124974599>:. >. > > const char* LLVMDir,. > + clang::ASTConsumer* consumer,. >. > Can we argue bool OnlyLex = !consumer, and remove the OnlyLex parameter? > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974774>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > This should take a unique_ptr<ASTConsumer, as should all callers, because. > CI->SetASTConsumer() ""converts"" customConsumer to a unique_ptr. > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974821>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > customConsumer should probably be called consumer; there's nothing custom. > about it? >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-pr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/714
https://github.com/root-project/root/pull/714:941,performance,Memor,MemoryBuffer,941,"I'll make a follow up PR where we fix this. Thanks for the review! - Raphael. 2017-06-30 10:14 GMT+02:00 Axel Naumann <notifications@github.com>:. > *@Axel-Naumann* commented on this pull request. >. > @vgvassilev <https://github.com/vgvassilev> merged before I had a chance. > to submit my review :-(. > ------------------------------. >. > In interpreter/cling/include/cling/Interpreter/CIFactory.h. > <https://github.com/root-project/root/pull/714#discussion_r124974599>:. >. > > const char* LLVMDir,. > + clang::ASTConsumer* consumer,. >. > Can we argue bool OnlyLex = !consumer, and remove the OnlyLex parameter? > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974774>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > This should take a unique_ptr<ASTConsumer, as should all callers, because. > CI->SetASTConsumer() ""converts"" customConsumer to a unique_ptr. > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974821>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > customConsumer should probably be called consumer; there's nothing custom. > about it? >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-pr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/714
https://github.com/root-project/root/pull/714:1586,performance,Memor,MemoryBuffer,1586,"l request. >. > @vgvassilev <https://github.com/vgvassilev> merged before I had a chance. > to submit my review :-(. > ------------------------------. >. > In interpreter/cling/include/cling/Interpreter/CIFactory.h. > <https://github.com/root-project/root/pull/714#discussion_r124974599>:. >. > > const char* LLVMDir,. > + clang::ASTConsumer* consumer,. >. > Can we argue bool OnlyLex = !consumer, and remove the OnlyLex parameter? > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974774>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > This should take a unique_ptr<ASTConsumer, as should all callers, because. > CI->SetASTConsumer() ""converts"" customConsumer to a unique_ptr. > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974821>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > customConsumer should probably be called consumer; there's nothing custom. > about it? >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/714#pullrequestreview-47317796>,. > or mute the thread. > <https://github.com/notifications/unsubscribe-auth/AAs7AZ80SwohnpiTogjRYY15nz0hCryMks5sJK5ogaJpZM4OJRjT>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/714
https://github.com/root-project/root/pull/714:59,safety,review,review,59,"I'll make a follow up PR where we fix this. Thanks for the review! - Raphael. 2017-06-30 10:14 GMT+02:00 Axel Naumann <notifications@github.com>:. > *@Axel-Naumann* commented on this pull request. >. > @vgvassilev <https://github.com/vgvassilev> merged before I had a chance. > to submit my review :-(. > ------------------------------. >. > In interpreter/cling/include/cling/Interpreter/CIFactory.h. > <https://github.com/root-project/root/pull/714#discussion_r124974599>:. >. > > const char* LLVMDir,. > + clang::ASTConsumer* consumer,. >. > Can we argue bool OnlyLex = !consumer, and remove the OnlyLex parameter? > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974774>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > This should take a unique_ptr<ASTConsumer, as should all callers, because. > CI->SetASTConsumer() ""converts"" customConsumer to a unique_ptr. > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974821>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > customConsumer should probably be called consumer; there's nothing custom. > about it? >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-pr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/714
https://github.com/root-project/root/pull/714:291,safety,review,review,291,"I'll make a follow up PR where we fix this. Thanks for the review! - Raphael. 2017-06-30 10:14 GMT+02:00 Axel Naumann <notifications@github.com>:. > *@Axel-Naumann* commented on this pull request. >. > @vgvassilev <https://github.com/vgvassilev> merged before I had a chance. > to submit my review :-(. > ------------------------------. >. > In interpreter/cling/include/cling/Interpreter/CIFactory.h. > <https://github.com/root-project/root/pull/714#discussion_r124974599>:. >. > > const char* LLVMDir,. > + clang::ASTConsumer* consumer,. >. > Can we argue bool OnlyLex = !consumer, and remove the OnlyLex parameter? > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974774>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > This should take a unique_ptr<ASTConsumer, as should all callers, because. > CI->SetASTConsumer() ""converts"" customConsumer to a unique_ptr. > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974821>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > customConsumer should probably be called consumer; there's nothing custom. > about it? >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-pr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/714
https://github.com/root-project/root/pull/714:1899,security,auth,authored,1899,"l request. >. > @vgvassilev <https://github.com/vgvassilev> merged before I had a chance. > to submit my review :-(. > ------------------------------. >. > In interpreter/cling/include/cling/Interpreter/CIFactory.h. > <https://github.com/root-project/root/pull/714#discussion_r124974599>:. >. > > const char* LLVMDir,. > + clang::ASTConsumer* consumer,. >. > Can we argue bool OnlyLex = !consumer, and remove the OnlyLex parameter? > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974774>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > This should take a unique_ptr<ASTConsumer, as should all callers, because. > CI->SetASTConsumer() ""converts"" customConsumer to a unique_ptr. > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974821>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > customConsumer should probably be called consumer; there's nothing custom. > about it? >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/714#pullrequestreview-47317796>,. > or mute the thread. > <https://github.com/notifications/unsubscribe-auth/AAs7AZ80SwohnpiTogjRYY15nz0hCryMks5sJK5ogaJpZM4OJRjT>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/714
https://github.com/root-project/root/pull/714:2120,security,auth,auth,2120,"l request. >. > @vgvassilev <https://github.com/vgvassilev> merged before I had a chance. > to submit my review :-(. > ------------------------------. >. > In interpreter/cling/include/cling/Interpreter/CIFactory.h. > <https://github.com/root-project/root/pull/714#discussion_r124974599>:. >. > > const char* LLVMDir,. > + clang::ASTConsumer* consumer,. >. > Can we argue bool OnlyLex = !consumer, and remove the OnlyLex parameter? > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974774>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > This should take a unique_ptr<ASTConsumer, as should all callers, because. > CI->SetASTConsumer() ""converts"" customConsumer to a unique_ptr. > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974821>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > customConsumer should probably be called consumer; there's nothing custom. > about it? >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/714#pullrequestreview-47317796>,. > or mute the thread. > <https://github.com/notifications/unsubscribe-auth/AAs7AZ80SwohnpiTogjRYY15nz0hCryMks5sJK5ogaJpZM4OJRjT>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/714
https://github.com/root-project/root/pull/714:59,testability,review,review,59,"I'll make a follow up PR where we fix this. Thanks for the review! - Raphael. 2017-06-30 10:14 GMT+02:00 Axel Naumann <notifications@github.com>:. > *@Axel-Naumann* commented on this pull request. >. > @vgvassilev <https://github.com/vgvassilev> merged before I had a chance. > to submit my review :-(. > ------------------------------. >. > In interpreter/cling/include/cling/Interpreter/CIFactory.h. > <https://github.com/root-project/root/pull/714#discussion_r124974599>:. >. > > const char* LLVMDir,. > + clang::ASTConsumer* consumer,. >. > Can we argue bool OnlyLex = !consumer, and remove the OnlyLex parameter? > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974774>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > This should take a unique_ptr<ASTConsumer, as should all callers, because. > CI->SetASTConsumer() ""converts"" customConsumer to a unique_ptr. > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974821>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > customConsumer should probably be called consumer; there's nothing custom. > about it? >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-pr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/714
https://github.com/root-project/root/pull/714:291,testability,review,review,291,"I'll make a follow up PR where we fix this. Thanks for the review! - Raphael. 2017-06-30 10:14 GMT+02:00 Axel Naumann <notifications@github.com>:. > *@Axel-Naumann* commented on this pull request. >. > @vgvassilev <https://github.com/vgvassilev> merged before I had a chance. > to submit my review :-(. > ------------------------------. >. > In interpreter/cling/include/cling/Interpreter/CIFactory.h. > <https://github.com/root-project/root/pull/714#discussion_r124974599>:. >. > > const char* LLVMDir,. > + clang::ASTConsumer* consumer,. >. > Can we argue bool OnlyLex = !consumer, and remove the OnlyLex parameter? > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974774>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > This should take a unique_ptr<ASTConsumer, as should all callers, because. > CI->SetASTConsumer() ""converts"" customConsumer to a unique_ptr. > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974821>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > customConsumer should probably be called consumer; there's nothing custom. > about it? >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-pr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/714
https://github.com/root-project/root/pull/714:941,usability,Memor,MemoryBuffer,941,"I'll make a follow up PR where we fix this. Thanks for the review! - Raphael. 2017-06-30 10:14 GMT+02:00 Axel Naumann <notifications@github.com>:. > *@Axel-Naumann* commented on this pull request. >. > @vgvassilev <https://github.com/vgvassilev> merged before I had a chance. > to submit my review :-(. > ------------------------------. >. > In interpreter/cling/include/cling/Interpreter/CIFactory.h. > <https://github.com/root-project/root/pull/714#discussion_r124974599>:. >. > > const char* LLVMDir,. > + clang::ASTConsumer* consumer,. >. > Can we argue bool OnlyLex = !consumer, and remove the OnlyLex parameter? > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974774>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > This should take a unique_ptr<ASTConsumer, as should all callers, because. > CI->SetASTConsumer() ""converts"" customConsumer to a unique_ptr. > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974821>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > customConsumer should probably be called consumer; there's nothing custom. > about it? >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-pr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/714
https://github.com/root-project/root/pull/714:1086,usability,custom,customConsumer,1086,"4 GMT+02:00 Axel Naumann <notifications@github.com>:. > *@Axel-Naumann* commented on this pull request. >. > @vgvassilev <https://github.com/vgvassilev> merged before I had a chance. > to submit my review :-(. > ------------------------------. >. > In interpreter/cling/include/cling/Interpreter/CIFactory.h. > <https://github.com/root-project/root/pull/714#discussion_r124974599>:. >. > > const char* LLVMDir,. > + clang::ASTConsumer* consumer,. >. > Can we argue bool OnlyLex = !consumer, and remove the OnlyLex parameter? > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974774>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > This should take a unique_ptr<ASTConsumer, as should all callers, because. > CI->SetASTConsumer() ""converts"" customConsumer to a unique_ptr. > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974821>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > customConsumer should probably be called consumer; there's nothing custom. > about it? >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/714#pullrequestreview-47317796>,. > or mute the thread. > <https://github.com",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/714
https://github.com/root-project/root/pull/714:1231,usability,custom,customConsumer,1231,"l request. >. > @vgvassilev <https://github.com/vgvassilev> merged before I had a chance. > to submit my review :-(. > ------------------------------. >. > In interpreter/cling/include/cling/Interpreter/CIFactory.h. > <https://github.com/root-project/root/pull/714#discussion_r124974599>:. >. > > const char* LLVMDir,. > + clang::ASTConsumer* consumer,. >. > Can we argue bool OnlyLex = !consumer, and remove the OnlyLex parameter? > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974774>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > This should take a unique_ptr<ASTConsumer, as should all callers, because. > CI->SetASTConsumer() ""converts"" customConsumer to a unique_ptr. > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974821>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > customConsumer should probably be called consumer; there's nothing custom. > about it? >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/714#pullrequestreview-47317796>,. > or mute the thread. > <https://github.com/notifications/unsubscribe-auth/AAs7AZ80SwohnpiTogjRYY15nz0hCryMks5sJK5ogaJpZM4OJRjT>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/714
https://github.com/root-project/root/pull/714:1586,usability,Memor,MemoryBuffer,1586,"l request. >. > @vgvassilev <https://github.com/vgvassilev> merged before I had a chance. > to submit my review :-(. > ------------------------------. >. > In interpreter/cling/include/cling/Interpreter/CIFactory.h. > <https://github.com/root-project/root/pull/714#discussion_r124974599>:. >. > > const char* LLVMDir,. > + clang::ASTConsumer* consumer,. >. > Can we argue bool OnlyLex = !consumer, and remove the OnlyLex parameter? > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974774>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > This should take a unique_ptr<ASTConsumer, as should all callers, because. > CI->SetASTConsumer() ""converts"" customConsumer to a unique_ptr. > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974821>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > customConsumer should probably be called consumer; there's nothing custom. > about it? >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/714#pullrequestreview-47317796>,. > or mute the thread. > <https://github.com/notifications/unsubscribe-auth/AAs7AZ80SwohnpiTogjRYY15nz0hCryMks5sJK5ogaJpZM4OJRjT>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/714
https://github.com/root-project/root/pull/714:1731,usability,custom,customConsumer,1731,"l request. >. > @vgvassilev <https://github.com/vgvassilev> merged before I had a chance. > to submit my review :-(. > ------------------------------. >. > In interpreter/cling/include/cling/Interpreter/CIFactory.h. > <https://github.com/root-project/root/pull/714#discussion_r124974599>:. >. > > const char* LLVMDir,. > + clang::ASTConsumer* consumer,. >. > Can we argue bool OnlyLex = !consumer, and remove the OnlyLex parameter? > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974774>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > This should take a unique_ptr<ASTConsumer, as should all callers, because. > CI->SetASTConsumer() ""converts"" customConsumer to a unique_ptr. > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974821>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > customConsumer should probably be called consumer; there's nothing custom. > about it? >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/714#pullrequestreview-47317796>,. > or mute the thread. > <https://github.com/notifications/unsubscribe-auth/AAs7AZ80SwohnpiTogjRYY15nz0hCryMks5sJK5ogaJpZM4OJRjT>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/714
https://github.com/root-project/root/pull/714:1767,usability,custom,customConsumer,1767,"l request. >. > @vgvassilev <https://github.com/vgvassilev> merged before I had a chance. > to submit my review :-(. > ------------------------------. >. > In interpreter/cling/include/cling/Interpreter/CIFactory.h. > <https://github.com/root-project/root/pull/714#discussion_r124974599>:. >. > > const char* LLVMDir,. > + clang::ASTConsumer* consumer,. >. > Can we argue bool OnlyLex = !consumer, and remove the OnlyLex parameter? > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974774>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > This should take a unique_ptr<ASTConsumer, as should all callers, because. > CI->SetASTConsumer() ""converts"" customConsumer to a unique_ptr. > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974821>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > customConsumer should probably be called consumer; there's nothing custom. > about it? >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/714#pullrequestreview-47317796>,. > or mute the thread. > <https://github.com/notifications/unsubscribe-auth/AAs7AZ80SwohnpiTogjRYY15nz0hCryMks5sJK5ogaJpZM4OJRjT>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/714
https://github.com/root-project/root/pull/714:1834,usability,custom,custom,1834,"l request. >. > @vgvassilev <https://github.com/vgvassilev> merged before I had a chance. > to submit my review :-(. > ------------------------------. >. > In interpreter/cling/include/cling/Interpreter/CIFactory.h. > <https://github.com/root-project/root/pull/714#discussion_r124974599>:. >. > > const char* LLVMDir,. > + clang::ASTConsumer* consumer,. >. > Can we argue bool OnlyLex = !consumer, and remove the OnlyLex parameter? > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974774>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > This should take a unique_ptr<ASTConsumer, as should all callers, because. > CI->SetASTConsumer() ""converts"" customConsumer to a unique_ptr. > ------------------------------. >. > In interpreter/cling/lib/Interpreter/CIFactory.cpp. > <https://github.com/root-project/root/pull/714#discussion_r124974821>:. >. > > @@ -697,7 +697,8 @@ static void stringifyPreprocSetting(PreprocessorOptions& PPOpts,. > static CompilerInstance*. > createCIImpl(std::unique_ptr<llvm::MemoryBuffer> Buffer,. > const CompilerOptions& COpts, const char* LLVMDir,. > - bool OnlyLex, bool HasInput = false) {. > + clang::ASTConsumer* customConsumer, bool OnlyLex,. >. > customConsumer should probably be called consumer; there's nothing custom. > about it? >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/714#pullrequestreview-47317796>,. > or mute the thread. > <https://github.com/notifications/unsubscribe-auth/AAs7AZ80SwohnpiTogjRYY15nz0hCryMks5sJK5ogaJpZM4OJRjT>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/714
https://github.com/root-project/root/pull/716:279,modifiability,variab,variable,279,"@peremato, @Axel-Naumann do you remember why we added this checks if `CLANG_BUILD_EXAMPLES` is set. In https://github.com/root-project/root/blob/master/interpreter/llvm/src/tools/clang/examples/CMakeLists.txt we check this flag and ignore the examples. Did you mean to name this variable (adding a new option) `CLANG_INCLUDE_EXAMPLES` following the `LLVM_INCLUDE_EXAMPLES` pattern?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/716
https://github.com/root-project/root/pull/716:32,safety,reme,remember,32,"@peremato, @Axel-Naumann do you remember why we added this checks if `CLANG_BUILD_EXAMPLES` is set. In https://github.com/root-project/root/blob/master/interpreter/llvm/src/tools/clang/examples/CMakeLists.txt we check this flag and ignore the examples. Did you mean to name this variable (adding a new option) `CLANG_INCLUDE_EXAMPLES` following the `LLVM_INCLUDE_EXAMPLES` pattern?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/716
https://github.com/root-project/root/pull/716:173,usability,tool,tools,173,"@peremato, @Axel-Naumann do you remember why we added this checks if `CLANG_BUILD_EXAMPLES` is set. In https://github.com/root-project/root/blob/master/interpreter/llvm/src/tools/clang/examples/CMakeLists.txt we check this flag and ignore the examples. Did you mean to name this variable (adding a new option) `CLANG_INCLUDE_EXAMPLES` following the `LLVM_INCLUDE_EXAMPLES` pattern?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/716
https://github.com/root-project/root/pull/716:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/716
https://github.com/root-project/root/pull/717:257,availability,state,state,257,"Hi @Axel-Naumann . I apply most of the requested changes. Do you want that I will search for the solution with TMenuItems before you merging this PR? This will also require changes on the client side (in JS). For the moment TMenuItem is in very preliminary state. . It needs to get list of call arguments, their types and default values (if any), icon(s) and many others. I do not think, that we could resolve all these problems with single PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/717
https://github.com/root-project/root/pull/717:257,integrability,state,state,257,"Hi @Axel-Naumann . I apply most of the requested changes. Do you want that I will search for the solution with TMenuItems before you merging this PR? This will also require changes on the client side (in JS). For the moment TMenuItem is in very preliminary state. . It needs to get list of call arguments, their types and default values (if any), icon(s) and many others. I do not think, that we could resolve all these problems with single PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/717
https://github.com/root-project/root/pull/717:165,modifiability,require chang,require changes,165,"Hi @Axel-Naumann . I apply most of the requested changes. Do you want that I will search for the solution with TMenuItems before you merging this PR? This will also require changes on the client side (in JS). For the moment TMenuItem is in very preliminary state. . It needs to get list of call arguments, their types and default values (if any), icon(s) and many others. I do not think, that we could resolve all these problems with single PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/717
https://github.com/root-project/root/pull/717:629,availability,state,state,629,"Just merge whenever you see fit, I let Bertrand and you guys handle this! --. short mobile;. ________________________________. From: Sergey Linev <notifications@github.com>. Sent: Jul 17, 2017 20:31. To: root-project/root. Cc: Axel Naumann; Mention. Subject: Re: [root-project/root] webgui: Introduce Menu Handling to the ROOT7 GUI (#717). Hi @Axel-Naumann<https://github.com/axel-naumann>. I apply most of the requested changes. Do you want that I will search for the solution with TMenuItems before you merging this PR? This will also require changes on the client side (in JS). For the moment TMenuItem is in very preliminary state. It needs to get list of call arguments, their types and default values (if any), icon(s) and many others. I do not think, that we could resolve all these problems with single PR. —. You are receiving this because you were mentioned. Reply to this email directly, view it on GitHub<https://github.com/root-project/root/pull/717#issuecomment-315840903>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AAI1I1h_c0ca-7qS4YLHVwbF3XByEspWks5sO6fxgaJpZM4OJe90>.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/717
https://github.com/root-project/root/pull/717:250,integrability,Sub,Subject,250,"Just merge whenever you see fit, I let Bertrand and you guys handle this! --. short mobile;. ________________________________. From: Sergey Linev <notifications@github.com>. Sent: Jul 17, 2017 20:31. To: root-project/root. Cc: Axel Naumann; Mention. Subject: Re: [root-project/root] webgui: Introduce Menu Handling to the ROOT7 GUI (#717). Hi @Axel-Naumann<https://github.com/axel-naumann>. I apply most of the requested changes. Do you want that I will search for the solution with TMenuItems before you merging this PR? This will also require changes on the client side (in JS). For the moment TMenuItem is in very preliminary state. It needs to get list of call arguments, their types and default values (if any), icon(s) and many others. I do not think, that we could resolve all these problems with single PR. —. You are receiving this because you were mentioned. Reply to this email directly, view it on GitHub<https://github.com/root-project/root/pull/717#issuecomment-315840903>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AAI1I1h_c0ca-7qS4YLHVwbF3XByEspWks5sO6fxgaJpZM4OJe90>.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/717
https://github.com/root-project/root/pull/717:629,integrability,state,state,629,"Just merge whenever you see fit, I let Bertrand and you guys handle this! --. short mobile;. ________________________________. From: Sergey Linev <notifications@github.com>. Sent: Jul 17, 2017 20:31. To: root-project/root. Cc: Axel Naumann; Mention. Subject: Re: [root-project/root] webgui: Introduce Menu Handling to the ROOT7 GUI (#717). Hi @Axel-Naumann<https://github.com/axel-naumann>. I apply most of the requested changes. Do you want that I will search for the solution with TMenuItems before you merging this PR? This will also require changes on the client side (in JS). For the moment TMenuItem is in very preliminary state. It needs to get list of call arguments, their types and default values (if any), icon(s) and many others. I do not think, that we could resolve all these problems with single PR. —. You are receiving this because you were mentioned. Reply to this email directly, view it on GitHub<https://github.com/root-project/root/pull/717#issuecomment-315840903>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AAI1I1h_c0ca-7qS4YLHVwbF3XByEspWks5sO6fxgaJpZM4OJe90>.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/717
https://github.com/root-project/root/pull/717:537,modifiability,require chang,require changes,537,"Just merge whenever you see fit, I let Bertrand and you guys handle this! --. short mobile;. ________________________________. From: Sergey Linev <notifications@github.com>. Sent: Jul 17, 2017 20:31. To: root-project/root. Cc: Axel Naumann; Mention. Subject: Re: [root-project/root] webgui: Introduce Menu Handling to the ROOT7 GUI (#717). Hi @Axel-Naumann<https://github.com/axel-naumann>. I apply most of the requested changes. Do you want that I will search for the solution with TMenuItems before you merging this PR? This will also require changes on the client side (in JS). For the moment TMenuItem is in very preliminary state. It needs to get list of call arguments, their types and default values (if any), icon(s) and many others. I do not think, that we could resolve all these problems with single PR. —. You are receiving this because you were mentioned. Reply to this email directly, view it on GitHub<https://github.com/root-project/root/pull/717#issuecomment-315840903>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AAI1I1h_c0ca-7qS4YLHVwbF3XByEspWks5sO6fxgaJpZM4OJe90>.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/717
https://github.com/root-project/root/pull/717:1052,security,auth,auth,1052,"Just merge whenever you see fit, I let Bertrand and you guys handle this! --. short mobile;. ________________________________. From: Sergey Linev <notifications@github.com>. Sent: Jul 17, 2017 20:31. To: root-project/root. Cc: Axel Naumann; Mention. Subject: Re: [root-project/root] webgui: Introduce Menu Handling to the ROOT7 GUI (#717). Hi @Axel-Naumann<https://github.com/axel-naumann>. I apply most of the requested changes. Do you want that I will search for the solution with TMenuItems before you merging this PR? This will also require changes on the client side (in JS). For the moment TMenuItem is in very preliminary state. It needs to get list of call arguments, their types and default values (if any), icon(s) and many others. I do not think, that we could resolve all these problems with single PR. —. You are receiving this because you were mentioned. Reply to this email directly, view it on GitHub<https://github.com/root-project/root/pull/717#issuecomment-315840903>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AAI1I1h_c0ca-7qS4YLHVwbF3XByEspWks5sO6fxgaJpZM4OJe90>.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/717
https://github.com/root-project/root/pull/717:301,usability,Menu,Menu,301,"Just merge whenever you see fit, I let Bertrand and you guys handle this! --. short mobile;. ________________________________. From: Sergey Linev <notifications@github.com>. Sent: Jul 17, 2017 20:31. To: root-project/root. Cc: Axel Naumann; Mention. Subject: Re: [root-project/root] webgui: Introduce Menu Handling to the ROOT7 GUI (#717). Hi @Axel-Naumann<https://github.com/axel-naumann>. I apply most of the requested changes. Do you want that I will search for the solution with TMenuItems before you merging this PR? This will also require changes on the client side (in JS). For the moment TMenuItem is in very preliminary state. It needs to get list of call arguments, their types and default values (if any), icon(s) and many others. I do not think, that we could resolve all these problems with single PR. —. You are receiving this because you were mentioned. Reply to this email directly, view it on GitHub<https://github.com/root-project/root/pull/717#issuecomment-315840903>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AAI1I1h_c0ca-7qS4YLHVwbF3XByEspWks5sO6fxgaJpZM4OJe90>.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/717
https://github.com/root-project/root/pull/717:10,interoperability,format,format,10,Now clang-format is applied,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/717
https://github.com/root-project/root/pull/718:52,integrability,sub,submit,52,"> I see a few coding style issues. Bertrand, please submit such changes directly to JSROOT repository.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/718
https://github.com/root-project/root/pull/718:91,integrability,repositor,repository,91,"> I see a few coding style issues. Bertrand, please submit such changes directly to JSROOT repository.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/718
https://github.com/root-project/root/pull/718:91,interoperability,repositor,repository,91,"> I see a few coding style issues. Bertrand, please submit such changes directly to JSROOT repository.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/718
https://github.com/root-project/root/pull/719:26,safety,test,test,26,"HI @amadio , do we have a test showing the problem you solved for this PR? In other words, how could you spot this :)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:26,testability,test,test,26,"HI @amadio , do we have a test showing the problem you solved for this PR? In other words, how could you spot this :)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:83,availability,failur,failure,83,Isn't this only handling one single case (in a non-thread-safe way) out of many MT failure modes in this function? What it the `link` got deleted? What if the `obj` currently gets deleted? I.e. I'm not sure this is sufficient. I remember that Philippe and Chris Jones have tried several times to make `RecursiveRemove()` more cooperative and failed. I would prefer to have his opinion on this before this gets merged.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:83,deployability,fail,failure,83,Isn't this only handling one single case (in a non-thread-safe way) out of many MT failure modes in this function? What it the `link` got deleted? What if the `obj` currently gets deleted? I.e. I'm not sure this is sufficient. I remember that Philippe and Chris Jones have tried several times to make `RecursiveRemove()` more cooperative and failed. I would prefer to have his opinion on this before this gets merged.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:342,deployability,fail,failed,342,Isn't this only handling one single case (in a non-thread-safe way) out of many MT failure modes in this function? What it the `link` got deleted? What if the `obj` currently gets deleted? I.e. I'm not sure this is sufficient. I remember that Philippe and Chris Jones have tried several times to make `RecursiveRemove()` more cooperative and failed. I would prefer to have his opinion on this before this gets merged.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:165,energy efficiency,current,currently,165,Isn't this only handling one single case (in a non-thread-safe way) out of many MT failure modes in this function? What it the `link` got deleted? What if the `obj` currently gets deleted? I.e. I'm not sure this is sufficient. I remember that Philippe and Chris Jones have tried several times to make `RecursiveRemove()` more cooperative and failed. I would prefer to have his opinion on this before this gets merged.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:326,interoperability,cooperat,cooperative,326,Isn't this only handling one single case (in a non-thread-safe way) out of many MT failure modes in this function? What it the `link` got deleted? What if the `obj` currently gets deleted? I.e. I'm not sure this is sufficient. I remember that Philippe and Chris Jones have tried several times to make `RecursiveRemove()` more cooperative and failed. I would prefer to have his opinion on this before this gets merged.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:83,performance,failur,failure,83,Isn't this only handling one single case (in a non-thread-safe way) out of many MT failure modes in this function? What it the `link` got deleted? What if the `obj` currently gets deleted? I.e. I'm not sure this is sufficient. I remember that Philippe and Chris Jones have tried several times to make `RecursiveRemove()` more cooperative and failed. I would prefer to have his opinion on this before this gets merged.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:287,performance,time,times,287,Isn't this only handling one single case (in a non-thread-safe way) out of many MT failure modes in this function? What it the `link` got deleted? What if the `obj` currently gets deleted? I.e. I'm not sure this is sufficient. I remember that Philippe and Chris Jones have tried several times to make `RecursiveRemove()` more cooperative and failed. I would prefer to have his opinion on this before this gets merged.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:83,reliability,fail,failure,83,Isn't this only handling one single case (in a non-thread-safe way) out of many MT failure modes in this function? What it the `link` got deleted? What if the `obj` currently gets deleted? I.e. I'm not sure this is sufficient. I remember that Philippe and Chris Jones have tried several times to make `RecursiveRemove()` more cooperative and failed. I would prefer to have his opinion on this before this gets merged.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:342,reliability,fail,failed,342,Isn't this only handling one single case (in a non-thread-safe way) out of many MT failure modes in this function? What it the `link` got deleted? What if the `obj` currently gets deleted? I.e. I'm not sure this is sufficient. I remember that Philippe and Chris Jones have tried several times to make `RecursiveRemove()` more cooperative and failed. I would prefer to have his opinion on this before this gets merged.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:58,safety,safe,safe,58,Isn't this only handling one single case (in a non-thread-safe way) out of many MT failure modes in this function? What it the `link` got deleted? What if the `obj` currently gets deleted? I.e. I'm not sure this is sufficient. I remember that Philippe and Chris Jones have tried several times to make `RecursiveRemove()` more cooperative and failed. I would prefer to have his opinion on this before this gets merged.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:229,safety,reme,remember,229,Isn't this only handling one single case (in a non-thread-safe way) out of many MT failure modes in this function? What it the `link` got deleted? What if the `obj` currently gets deleted? I.e. I'm not sure this is sufficient. I remember that Philippe and Chris Jones have tried several times to make `RecursiveRemove()` more cooperative and failed. I would prefer to have his opinion on this before this gets merged.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:358,usability,prefer,prefer,358,Isn't this only handling one single case (in a non-thread-safe way) out of many MT failure modes in this function? What it the `link` got deleted? What if the `obj` currently gets deleted? I.e. I'm not sure this is sufficient. I remember that Philippe and Chris Jones have tried several times to make `RecursiveRemove()` more cooperative and failed. I would prefer to have his opinion on this before this gets merged.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:847,availability,echo,echo,847,"Phillipe just pushed last evening his read/write lock updates, so I'm going to rebase and push. However, I still see the crash after his changes when compiling and running the code below. ```cpp. #include <iostream>. #include <string>. #include <thread>. #include <vector>. #include ""TH1F.h"". #include ""TMemFile.h"". #include ""TROOT.h"". void test(int i). {. std::string name = ""test-"" + std::to_string(i);. TMemFile f(name.c_str(), ""create"");. TH1F h(""a"",""a"",60,0,10);. h.FillRandom(""gaus"");. f.Write();. }. int main(). {. auto nthreads = 100;. ROOT::EnableThreadSafety();. std::vector<std::thread> threads;. for (auto i = 0; i < nthreads; ++i). threads.emplace_back(test, i);. for (auto& thread : threads). thread.join();. return 0;. }. ```. I compile and run with. ```bash. $ g++ $(root-config --cflags --libs) test.cc. $ while [[ $? == 0 ]]; do echo -n .; ./a.out; done. ```. Note that the TMemFiles have different names and are created and destroyed in the same thread.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:54,deployability,updat,updates,54,"Phillipe just pushed last evening his read/write lock updates, so I'm going to rebase and push. However, I still see the crash after his changes when compiling and running the code below. ```cpp. #include <iostream>. #include <string>. #include <thread>. #include <vector>. #include ""TH1F.h"". #include ""TMemFile.h"". #include ""TROOT.h"". void test(int i). {. std::string name = ""test-"" + std::to_string(i);. TMemFile f(name.c_str(), ""create"");. TH1F h(""a"",""a"",60,0,10);. h.FillRandom(""gaus"");. f.Write();. }. int main(). {. auto nthreads = 100;. ROOT::EnableThreadSafety();. std::vector<std::thread> threads;. for (auto i = 0; i < nthreads; ++i). threads.emplace_back(test, i);. for (auto& thread : threads). thread.join();. return 0;. }. ```. I compile and run with. ```bash. $ g++ $(root-config --cflags --libs) test.cc. $ while [[ $? == 0 ]]; do echo -n .; ./a.out; done. ```. Note that the TMemFiles have different names and are created and destroyed in the same thread.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:49,performance,lock,lock,49,"Phillipe just pushed last evening his read/write lock updates, so I'm going to rebase and push. However, I still see the crash after his changes when compiling and running the code below. ```cpp. #include <iostream>. #include <string>. #include <thread>. #include <vector>. #include ""TH1F.h"". #include ""TMemFile.h"". #include ""TROOT.h"". void test(int i). {. std::string name = ""test-"" + std::to_string(i);. TMemFile f(name.c_str(), ""create"");. TH1F h(""a"",""a"",60,0,10);. h.FillRandom(""gaus"");. f.Write();. }. int main(). {. auto nthreads = 100;. ROOT::EnableThreadSafety();. std::vector<std::thread> threads;. for (auto i = 0; i < nthreads; ++i). threads.emplace_back(test, i);. for (auto& thread : threads). thread.join();. return 0;. }. ```. I compile and run with. ```bash. $ g++ $(root-config --cflags --libs) test.cc. $ while [[ $? == 0 ]]; do echo -n .; ./a.out; done. ```. Note that the TMemFiles have different names and are created and destroyed in the same thread.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:54,safety,updat,updates,54,"Phillipe just pushed last evening his read/write lock updates, so I'm going to rebase and push. However, I still see the crash after his changes when compiling and running the code below. ```cpp. #include <iostream>. #include <string>. #include <thread>. #include <vector>. #include ""TH1F.h"". #include ""TMemFile.h"". #include ""TROOT.h"". void test(int i). {. std::string name = ""test-"" + std::to_string(i);. TMemFile f(name.c_str(), ""create"");. TH1F h(""a"",""a"",60,0,10);. h.FillRandom(""gaus"");. f.Write();. }. int main(). {. auto nthreads = 100;. ROOT::EnableThreadSafety();. std::vector<std::thread> threads;. for (auto i = 0; i < nthreads; ++i). threads.emplace_back(test, i);. for (auto& thread : threads). thread.join();. return 0;. }. ```. I compile and run with. ```bash. $ g++ $(root-config --cflags --libs) test.cc. $ while [[ $? == 0 ]]; do echo -n .; ./a.out; done. ```. Note that the TMemFiles have different names and are created and destroyed in the same thread.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:341,safety,test,test,341,"Phillipe just pushed last evening his read/write lock updates, so I'm going to rebase and push. However, I still see the crash after his changes when compiling and running the code below. ```cpp. #include <iostream>. #include <string>. #include <thread>. #include <vector>. #include ""TH1F.h"". #include ""TMemFile.h"". #include ""TROOT.h"". void test(int i). {. std::string name = ""test-"" + std::to_string(i);. TMemFile f(name.c_str(), ""create"");. TH1F h(""a"",""a"",60,0,10);. h.FillRandom(""gaus"");. f.Write();. }. int main(). {. auto nthreads = 100;. ROOT::EnableThreadSafety();. std::vector<std::thread> threads;. for (auto i = 0; i < nthreads; ++i). threads.emplace_back(test, i);. for (auto& thread : threads). thread.join();. return 0;. }. ```. I compile and run with. ```bash. $ g++ $(root-config --cflags --libs) test.cc. $ while [[ $? == 0 ]]; do echo -n .; ./a.out; done. ```. Note that the TMemFiles have different names and are created and destroyed in the same thread.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:377,safety,test,test,377,"Phillipe just pushed last evening his read/write lock updates, so I'm going to rebase and push. However, I still see the crash after his changes when compiling and running the code below. ```cpp. #include <iostream>. #include <string>. #include <thread>. #include <vector>. #include ""TH1F.h"". #include ""TMemFile.h"". #include ""TROOT.h"". void test(int i). {. std::string name = ""test-"" + std::to_string(i);. TMemFile f(name.c_str(), ""create"");. TH1F h(""a"",""a"",60,0,10);. h.FillRandom(""gaus"");. f.Write();. }. int main(). {. auto nthreads = 100;. ROOT::EnableThreadSafety();. std::vector<std::thread> threads;. for (auto i = 0; i < nthreads; ++i). threads.emplace_back(test, i);. for (auto& thread : threads). thread.join();. return 0;. }. ```. I compile and run with. ```bash. $ g++ $(root-config --cflags --libs) test.cc. $ while [[ $? == 0 ]]; do echo -n .; ./a.out; done. ```. Note that the TMemFiles have different names and are created and destroyed in the same thread.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:666,safety,test,test,666,"Phillipe just pushed last evening his read/write lock updates, so I'm going to rebase and push. However, I still see the crash after his changes when compiling and running the code below. ```cpp. #include <iostream>. #include <string>. #include <thread>. #include <vector>. #include ""TH1F.h"". #include ""TMemFile.h"". #include ""TROOT.h"". void test(int i). {. std::string name = ""test-"" + std::to_string(i);. TMemFile f(name.c_str(), ""create"");. TH1F h(""a"",""a"",60,0,10);. h.FillRandom(""gaus"");. f.Write();. }. int main(). {. auto nthreads = 100;. ROOT::EnableThreadSafety();. std::vector<std::thread> threads;. for (auto i = 0; i < nthreads; ++i). threads.emplace_back(test, i);. for (auto& thread : threads). thread.join();. return 0;. }. ```. I compile and run with. ```bash. $ g++ $(root-config --cflags --libs) test.cc. $ while [[ $? == 0 ]]; do echo -n .; ./a.out; done. ```. Note that the TMemFiles have different names and are created and destroyed in the same thread.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:812,safety,test,test,812,"Phillipe just pushed last evening his read/write lock updates, so I'm going to rebase and push. However, I still see the crash after his changes when compiling and running the code below. ```cpp. #include <iostream>. #include <string>. #include <thread>. #include <vector>. #include ""TH1F.h"". #include ""TMemFile.h"". #include ""TROOT.h"". void test(int i). {. std::string name = ""test-"" + std::to_string(i);. TMemFile f(name.c_str(), ""create"");. TH1F h(""a"",""a"",60,0,10);. h.FillRandom(""gaus"");. f.Write();. }. int main(). {. auto nthreads = 100;. ROOT::EnableThreadSafety();. std::vector<std::thread> threads;. for (auto i = 0; i < nthreads; ++i). threads.emplace_back(test, i);. for (auto& thread : threads). thread.join();. return 0;. }. ```. I compile and run with. ```bash. $ g++ $(root-config --cflags --libs) test.cc. $ while [[ $? == 0 ]]; do echo -n .; ./a.out; done. ```. Note that the TMemFiles have different names and are created and destroyed in the same thread.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:49,security,lock,lock,49,"Phillipe just pushed last evening his read/write lock updates, so I'm going to rebase and push. However, I still see the crash after his changes when compiling and running the code below. ```cpp. #include <iostream>. #include <string>. #include <thread>. #include <vector>. #include ""TH1F.h"". #include ""TMemFile.h"". #include ""TROOT.h"". void test(int i). {. std::string name = ""test-"" + std::to_string(i);. TMemFile f(name.c_str(), ""create"");. TH1F h(""a"",""a"",60,0,10);. h.FillRandom(""gaus"");. f.Write();. }. int main(). {. auto nthreads = 100;. ROOT::EnableThreadSafety();. std::vector<std::thread> threads;. for (auto i = 0; i < nthreads; ++i). threads.emplace_back(test, i);. for (auto& thread : threads). thread.join();. return 0;. }. ```. I compile and run with. ```bash. $ g++ $(root-config --cflags --libs) test.cc. $ while [[ $? == 0 ]]; do echo -n .; ./a.out; done. ```. Note that the TMemFiles have different names and are created and destroyed in the same thread.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:54,security,updat,updates,54,"Phillipe just pushed last evening his read/write lock updates, so I'm going to rebase and push. However, I still see the crash after his changes when compiling and running the code below. ```cpp. #include <iostream>. #include <string>. #include <thread>. #include <vector>. #include ""TH1F.h"". #include ""TMemFile.h"". #include ""TROOT.h"". void test(int i). {. std::string name = ""test-"" + std::to_string(i);. TMemFile f(name.c_str(), ""create"");. TH1F h(""a"",""a"",60,0,10);. h.FillRandom(""gaus"");. f.Write();. }. int main(). {. auto nthreads = 100;. ROOT::EnableThreadSafety();. std::vector<std::thread> threads;. for (auto i = 0; i < nthreads; ++i). threads.emplace_back(test, i);. for (auto& thread : threads). thread.join();. return 0;. }. ```. I compile and run with. ```bash. $ g++ $(root-config --cflags --libs) test.cc. $ while [[ $? == 0 ]]; do echo -n .; ./a.out; done. ```. Note that the TMemFiles have different names and are created and destroyed in the same thread.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:341,testability,test,test,341,"Phillipe just pushed last evening his read/write lock updates, so I'm going to rebase and push. However, I still see the crash after his changes when compiling and running the code below. ```cpp. #include <iostream>. #include <string>. #include <thread>. #include <vector>. #include ""TH1F.h"". #include ""TMemFile.h"". #include ""TROOT.h"". void test(int i). {. std::string name = ""test-"" + std::to_string(i);. TMemFile f(name.c_str(), ""create"");. TH1F h(""a"",""a"",60,0,10);. h.FillRandom(""gaus"");. f.Write();. }. int main(). {. auto nthreads = 100;. ROOT::EnableThreadSafety();. std::vector<std::thread> threads;. for (auto i = 0; i < nthreads; ++i). threads.emplace_back(test, i);. for (auto& thread : threads). thread.join();. return 0;. }. ```. I compile and run with. ```bash. $ g++ $(root-config --cflags --libs) test.cc. $ while [[ $? == 0 ]]; do echo -n .; ./a.out; done. ```. Note that the TMemFiles have different names and are created and destroyed in the same thread.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:377,testability,test,test,377,"Phillipe just pushed last evening his read/write lock updates, so I'm going to rebase and push. However, I still see the crash after his changes when compiling and running the code below. ```cpp. #include <iostream>. #include <string>. #include <thread>. #include <vector>. #include ""TH1F.h"". #include ""TMemFile.h"". #include ""TROOT.h"". void test(int i). {. std::string name = ""test-"" + std::to_string(i);. TMemFile f(name.c_str(), ""create"");. TH1F h(""a"",""a"",60,0,10);. h.FillRandom(""gaus"");. f.Write();. }. int main(). {. auto nthreads = 100;. ROOT::EnableThreadSafety();. std::vector<std::thread> threads;. for (auto i = 0; i < nthreads; ++i). threads.emplace_back(test, i);. for (auto& thread : threads). thread.join();. return 0;. }. ```. I compile and run with. ```bash. $ g++ $(root-config --cflags --libs) test.cc. $ while [[ $? == 0 ]]; do echo -n .; ./a.out; done. ```. Note that the TMemFiles have different names and are created and destroyed in the same thread.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:666,testability,test,test,666,"Phillipe just pushed last evening his read/write lock updates, so I'm going to rebase and push. However, I still see the crash after his changes when compiling and running the code below. ```cpp. #include <iostream>. #include <string>. #include <thread>. #include <vector>. #include ""TH1F.h"". #include ""TMemFile.h"". #include ""TROOT.h"". void test(int i). {. std::string name = ""test-"" + std::to_string(i);. TMemFile f(name.c_str(), ""create"");. TH1F h(""a"",""a"",60,0,10);. h.FillRandom(""gaus"");. f.Write();. }. int main(). {. auto nthreads = 100;. ROOT::EnableThreadSafety();. std::vector<std::thread> threads;. for (auto i = 0; i < nthreads; ++i). threads.emplace_back(test, i);. for (auto& thread : threads). thread.join();. return 0;. }. ```. I compile and run with. ```bash. $ g++ $(root-config --cflags --libs) test.cc. $ while [[ $? == 0 ]]; do echo -n .; ./a.out; done. ```. Note that the TMemFiles have different names and are created and destroyed in the same thread.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:812,testability,test,test,812,"Phillipe just pushed last evening his read/write lock updates, so I'm going to rebase and push. However, I still see the crash after his changes when compiling and running the code below. ```cpp. #include <iostream>. #include <string>. #include <thread>. #include <vector>. #include ""TH1F.h"". #include ""TMemFile.h"". #include ""TROOT.h"". void test(int i). {. std::string name = ""test-"" + std::to_string(i);. TMemFile f(name.c_str(), ""create"");. TH1F h(""a"",""a"",60,0,10);. h.FillRandom(""gaus"");. f.Write();. }. int main(). {. auto nthreads = 100;. ROOT::EnableThreadSafety();. std::vector<std::thread> threads;. for (auto i = 0; i < nthreads; ++i). threads.emplace_back(test, i);. for (auto& thread : threads). thread.join();. return 0;. }. ```. I compile and run with. ```bash. $ g++ $(root-config --cflags --libs) test.cc. $ while [[ $? == 0 ]]; do echo -n .; ./a.out; done. ```. Note that the TMemFiles have different names and are created and destroyed in the same thread.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:17,deployability,stack,stack,17,"Here is the full stack trace:. ```. ===========================================================. #8 0x00007f12f0e152c7 in TObject::TestBit (this=0x0, f=33554432) at /home/amadio/build/root/include/TObject.h:159. #9 0x00007f12f0f5ab9d in TList::RecursiveRemove (this=0x1d3c3e0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #10 0x00007f12f0f57139 in THashList::RecursiveRemove (this=0x1d504b0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #11 0x00007f12f0ee27e1 in TObject::~TObject (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #12 0x00007f12f0e7e6e8 in TNamed::~TNamed (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/build/root/include/TNamed.h:41. #13 0x00007f12efed42dd in TH1::~TH1 (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:575. #14 0x00007f12efef781d in TH1F::~TH1F (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:9192. #15 0x000000000040594d in test(int) (). ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:178,deployability,build,build,178,"Here is the full stack trace:. ```. ===========================================================. #8 0x00007f12f0e152c7 in TObject::TestBit (this=0x0, f=33554432) at /home/amadio/build/root/include/TObject.h:159. #9 0x00007f12f0f5ab9d in TList::RecursiveRemove (this=0x1d3c3e0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #10 0x00007f12f0f57139 in THashList::RecursiveRemove (this=0x1d504b0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #11 0x00007f12f0ee27e1 in TObject::~TObject (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #12 0x00007f12f0e7e6e8 in TNamed::~TNamed (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/build/root/include/TNamed.h:41. #13 0x00007f12efed42dd in TH1::~TH1 (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:575. #14 0x00007f12efef781d in TH1F::~TH1F (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:9192. #15 0x000000000040594d in test(int) (). ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:754,deployability,build,build,754,"Here is the full stack trace:. ```. ===========================================================. #8 0x00007f12f0e152c7 in TObject::TestBit (this=0x0, f=33554432) at /home/amadio/build/root/include/TObject.h:159. #9 0x00007f12f0f5ab9d in TList::RecursiveRemove (this=0x1d3c3e0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #10 0x00007f12f0f57139 in THashList::RecursiveRemove (this=0x1d504b0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #11 0x00007f12f0ee27e1 in TObject::~TObject (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #12 0x00007f12f0e7e6e8 in TNamed::~TNamed (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/build/root/include/TNamed.h:41. #13 0x00007f12efed42dd in TH1::~TH1 (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:575. #14 0x00007f12efef781d in TH1F::~TH1F (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:9192. #15 0x000000000040594d in test(int) (). ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:322,energy efficiency,core,core,322,"Here is the full stack trace:. ```. ===========================================================. #8 0x00007f12f0e152c7 in TObject::TestBit (this=0x0, f=33554432) at /home/amadio/build/root/include/TObject.h:159. #9 0x00007f12f0f5ab9d in TList::RecursiveRemove (this=0x1d3c3e0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #10 0x00007f12f0f57139 in THashList::RecursiveRemove (this=0x1d504b0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #11 0x00007f12f0ee27e1 in TObject::~TObject (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #12 0x00007f12f0e7e6e8 in TNamed::~TNamed (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/build/root/include/TNamed.h:41. #13 0x00007f12efed42dd in TH1::~TH1 (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:575. #14 0x00007f12efef781d in TH1F::~TH1F (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:9192. #15 0x000000000040594d in test(int) (). ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:466,energy efficiency,core,core,466,"Here is the full stack trace:. ```. ===========================================================. #8 0x00007f12f0e152c7 in TObject::TestBit (this=0x0, f=33554432) at /home/amadio/build/root/include/TObject.h:159. #9 0x00007f12f0f5ab9d in TList::RecursiveRemove (this=0x1d3c3e0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #10 0x00007f12f0f57139 in THashList::RecursiveRemove (this=0x1d504b0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #11 0x00007f12f0ee27e1 in TObject::~TObject (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #12 0x00007f12f0e7e6e8 in TNamed::~TNamed (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/build/root/include/TNamed.h:41. #13 0x00007f12efed42dd in TH1::~TH1 (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:575. #14 0x00007f12efef781d in TH1F::~TH1F (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:9192. #15 0x000000000040594d in test(int) (). ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:576,energy efficiency,optim,optimized,576,"Here is the full stack trace:. ```. ===========================================================. #8 0x00007f12f0e152c7 in TObject::TestBit (this=0x0, f=33554432) at /home/amadio/build/root/include/TObject.h:159. #9 0x00007f12f0f5ab9d in TList::RecursiveRemove (this=0x1d3c3e0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #10 0x00007f12f0f57139 in THashList::RecursiveRemove (this=0x1d504b0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #11 0x00007f12f0ee27e1 in TObject::~TObject (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #12 0x00007f12f0e7e6e8 in TNamed::~TNamed (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/build/root/include/TNamed.h:41. #13 0x00007f12efed42dd in TH1::~TH1 (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:575. #14 0x00007f12efef781d in TH1F::~TH1F (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:9192. #15 0x000000000040594d in test(int) (). ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:617,energy efficiency,core,core,617,"Here is the full stack trace:. ```. ===========================================================. #8 0x00007f12f0e152c7 in TObject::TestBit (this=0x0, f=33554432) at /home/amadio/build/root/include/TObject.h:159. #9 0x00007f12f0f5ab9d in TList::RecursiveRemove (this=0x1d3c3e0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #10 0x00007f12f0f57139 in THashList::RecursiveRemove (this=0x1d504b0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #11 0x00007f12f0ee27e1 in TObject::~TObject (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #12 0x00007f12f0e7e6e8 in TNamed::~TNamed (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/build/root/include/TNamed.h:41. #13 0x00007f12efed42dd in TH1::~TH1 (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:575. #14 0x00007f12efef781d in TH1F::~TH1F (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:9192. #15 0x000000000040594d in test(int) (). ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:722,energy efficiency,optim,optimized,722,"Here is the full stack trace:. ```. ===========================================================. #8 0x00007f12f0e152c7 in TObject::TestBit (this=0x0, f=33554432) at /home/amadio/build/root/include/TObject.h:159. #9 0x00007f12f0f5ab9d in TList::RecursiveRemove (this=0x1d3c3e0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #10 0x00007f12f0f57139 in THashList::RecursiveRemove (this=0x1d504b0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #11 0x00007f12f0ee27e1 in TObject::~TObject (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #12 0x00007f12f0e7e6e8 in TNamed::~TNamed (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/build/root/include/TNamed.h:41. #13 0x00007f12efed42dd in TH1::~TH1 (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:575. #14 0x00007f12efef781d in TH1F::~TH1F (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:9192. #15 0x000000000040594d in test(int) (). ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:855,energy efficiency,optim,optimized,855,"Here is the full stack trace:. ```. ===========================================================. #8 0x00007f12f0e152c7 in TObject::TestBit (this=0x0, f=33554432) at /home/amadio/build/root/include/TObject.h:159. #9 0x00007f12f0f5ab9d in TList::RecursiveRemove (this=0x1d3c3e0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #10 0x00007f12f0f57139 in THashList::RecursiveRemove (this=0x1d504b0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #11 0x00007f12f0ee27e1 in TObject::~TObject (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #12 0x00007f12f0e7e6e8 in TNamed::~TNamed (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/build/root/include/TNamed.h:41. #13 0x00007f12efed42dd in TH1::~TH1 (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:575. #14 0x00007f12efef781d in TH1F::~TH1F (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:9192. #15 0x000000000040594d in test(int) (). ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:994,energy efficiency,optim,optimized,994,"Here is the full stack trace:. ```. ===========================================================. #8 0x00007f12f0e152c7 in TObject::TestBit (this=0x0, f=33554432) at /home/amadio/build/root/include/TObject.h:159. #9 0x00007f12f0f5ab9d in TList::RecursiveRemove (this=0x1d3c3e0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #10 0x00007f12f0f57139 in THashList::RecursiveRemove (this=0x1d504b0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #11 0x00007f12f0ee27e1 in TObject::~TObject (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #12 0x00007f12f0e7e6e8 in TNamed::~TNamed (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/build/root/include/TNamed.h:41. #13 0x00007f12efed42dd in TH1::~TH1 (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:575. #14 0x00007f12efef781d in TH1F::~TH1F (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:9192. #15 0x000000000040594d in test(int) (). ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:576,performance,optimiz,optimized,576,"Here is the full stack trace:. ```. ===========================================================. #8 0x00007f12f0e152c7 in TObject::TestBit (this=0x0, f=33554432) at /home/amadio/build/root/include/TObject.h:159. #9 0x00007f12f0f5ab9d in TList::RecursiveRemove (this=0x1d3c3e0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #10 0x00007f12f0f57139 in THashList::RecursiveRemove (this=0x1d504b0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #11 0x00007f12f0ee27e1 in TObject::~TObject (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #12 0x00007f12f0e7e6e8 in TNamed::~TNamed (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/build/root/include/TNamed.h:41. #13 0x00007f12efed42dd in TH1::~TH1 (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:575. #14 0x00007f12efef781d in TH1F::~TH1F (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:9192. #15 0x000000000040594d in test(int) (). ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:722,performance,optimiz,optimized,722,"Here is the full stack trace:. ```. ===========================================================. #8 0x00007f12f0e152c7 in TObject::TestBit (this=0x0, f=33554432) at /home/amadio/build/root/include/TObject.h:159. #9 0x00007f12f0f5ab9d in TList::RecursiveRemove (this=0x1d3c3e0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #10 0x00007f12f0f57139 in THashList::RecursiveRemove (this=0x1d504b0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #11 0x00007f12f0ee27e1 in TObject::~TObject (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #12 0x00007f12f0e7e6e8 in TNamed::~TNamed (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/build/root/include/TNamed.h:41. #13 0x00007f12efed42dd in TH1::~TH1 (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:575. #14 0x00007f12efef781d in TH1F::~TH1F (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:9192. #15 0x000000000040594d in test(int) (). ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:855,performance,optimiz,optimized,855,"Here is the full stack trace:. ```. ===========================================================. #8 0x00007f12f0e152c7 in TObject::TestBit (this=0x0, f=33554432) at /home/amadio/build/root/include/TObject.h:159. #9 0x00007f12f0f5ab9d in TList::RecursiveRemove (this=0x1d3c3e0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #10 0x00007f12f0f57139 in THashList::RecursiveRemove (this=0x1d504b0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #11 0x00007f12f0ee27e1 in TObject::~TObject (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #12 0x00007f12f0e7e6e8 in TNamed::~TNamed (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/build/root/include/TNamed.h:41. #13 0x00007f12efed42dd in TH1::~TH1 (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:575. #14 0x00007f12efef781d in TH1F::~TH1F (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:9192. #15 0x000000000040594d in test(int) (). ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:994,performance,optimiz,optimized,994,"Here is the full stack trace:. ```. ===========================================================. #8 0x00007f12f0e152c7 in TObject::TestBit (this=0x0, f=33554432) at /home/amadio/build/root/include/TObject.h:159. #9 0x00007f12f0f5ab9d in TList::RecursiveRemove (this=0x1d3c3e0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #10 0x00007f12f0f57139 in THashList::RecursiveRemove (this=0x1d504b0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #11 0x00007f12f0ee27e1 in TObject::~TObject (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #12 0x00007f12f0e7e6e8 in TNamed::~TNamed (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/build/root/include/TNamed.h:41. #13 0x00007f12efed42dd in TH1::~TH1 (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:575. #14 0x00007f12efef781d in TH1F::~TH1F (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:9192. #15 0x000000000040594d in test(int) (). ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:131,safety,Test,TestBit,131,"Here is the full stack trace:. ```. ===========================================================. #8 0x00007f12f0e152c7 in TObject::TestBit (this=0x0, f=33554432) at /home/amadio/build/root/include/TObject.h:159. #9 0x00007f12f0f5ab9d in TList::RecursiveRemove (this=0x1d3c3e0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #10 0x00007f12f0f57139 in THashList::RecursiveRemove (this=0x1d504b0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #11 0x00007f12f0ee27e1 in TObject::~TObject (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #12 0x00007f12f0e7e6e8 in TNamed::~TNamed (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/build/root/include/TNamed.h:41. #13 0x00007f12efed42dd in TH1::~TH1 (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:575. #14 0x00007f12efef781d in TH1F::~TH1F (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:9192. #15 0x000000000040594d in test(int) (). ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:1089,safety,test,test,1089,"Here is the full stack trace:. ```. ===========================================================. #8 0x00007f12f0e152c7 in TObject::TestBit (this=0x0, f=33554432) at /home/amadio/build/root/include/TObject.h:159. #9 0x00007f12f0f5ab9d in TList::RecursiveRemove (this=0x1d3c3e0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #10 0x00007f12f0f57139 in THashList::RecursiveRemove (this=0x1d504b0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #11 0x00007f12f0ee27e1 in TObject::~TObject (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #12 0x00007f12f0e7e6e8 in TNamed::~TNamed (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/build/root/include/TNamed.h:41. #13 0x00007f12efed42dd in TH1::~TH1 (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:575. #14 0x00007f12efef781d in TH1F::~TH1F (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:9192. #15 0x000000000040594d in test(int) (). ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:23,testability,trace,trace,23,"Here is the full stack trace:. ```. ===========================================================. #8 0x00007f12f0e152c7 in TObject::TestBit (this=0x0, f=33554432) at /home/amadio/build/root/include/TObject.h:159. #9 0x00007f12f0f5ab9d in TList::RecursiveRemove (this=0x1d3c3e0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #10 0x00007f12f0f57139 in THashList::RecursiveRemove (this=0x1d504b0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #11 0x00007f12f0ee27e1 in TObject::~TObject (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #12 0x00007f12f0e7e6e8 in TNamed::~TNamed (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/build/root/include/TNamed.h:41. #13 0x00007f12efed42dd in TH1::~TH1 (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:575. #14 0x00007f12efef781d in TH1F::~TH1F (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:9192. #15 0x000000000040594d in test(int) (). ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:131,testability,Test,TestBit,131,"Here is the full stack trace:. ```. ===========================================================. #8 0x00007f12f0e152c7 in TObject::TestBit (this=0x0, f=33554432) at /home/amadio/build/root/include/TObject.h:159. #9 0x00007f12f0f5ab9d in TList::RecursiveRemove (this=0x1d3c3e0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #10 0x00007f12f0f57139 in THashList::RecursiveRemove (this=0x1d504b0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #11 0x00007f12f0ee27e1 in TObject::~TObject (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #12 0x00007f12f0e7e6e8 in TNamed::~TNamed (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/build/root/include/TNamed.h:41. #13 0x00007f12efed42dd in TH1::~TH1 (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:575. #14 0x00007f12efef781d in TH1F::~TH1F (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:9192. #15 0x000000000040594d in test(int) (). ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:1089,testability,test,test,1089,"Here is the full stack trace:. ```. ===========================================================. #8 0x00007f12f0e152c7 in TObject::TestBit (this=0x0, f=33554432) at /home/amadio/build/root/include/TObject.h:159. #9 0x00007f12f0f5ab9d in TList::RecursiveRemove (this=0x1d3c3e0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/TList.cxx:717. #10 0x00007f12f0f57139 in THashList::RecursiveRemove (this=0x1d504b0, obj=0x7f1291fb56a0) at /home/amadio/src/root/core/cont/src/THashList.cxx:286. #11 0x00007f12f0ee27e1 in TObject::~TObject (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/core/base/src/TObject.cxx:88. #12 0x00007f12f0e7e6e8 in TNamed::~TNamed (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/build/root/include/TNamed.h:41. #13 0x00007f12efed42dd in TH1::~TH1 (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:575. #14 0x00007f12efef781d in TH1F::~TH1F (this=0x7f1291fb56a0, __in_chrg=<optimized out>) at /home/amadio/src/root/hist/hist/src/TH1.cxx:9192. #15 0x000000000040594d in test(int) (). ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:108,safety,safe,safety,108,"Hi @amadio , what happens with normal TFiles? This could be a violation of the guarantee we have on ""thread safety with one file per thread"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:49,deployability,stack,stack,49,It has the same problem with normal TFiles (same stack trace too).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:55,testability,trace,trace,55,It has the same problem with normal TFiles (same stack trace too).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:132,performance,lock,lock,132,"Yes, it does look like this is the cause of that issue. I will need to test further to be sure, but after this change I removed the lock from the `PartialMerge()` calls in the `TBufferMerger` and have seen no crashes so far.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:8,reliability,doe,does,8,"Yes, it does look like this is the cause of that issue. I will need to test further to be sure, but after this change I removed the lock from the `PartialMerge()` calls in the `TBufferMerger` and have seen no crashes so far.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:71,safety,test,test,71,"Yes, it does look like this is the cause of that issue. I will need to test further to be sure, but after this change I removed the lock from the `PartialMerge()` calls in the `TBufferMerger` and have seen no crashes so far.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:132,security,lock,lock,132,"Yes, it does look like this is the cause of that issue. I will need to test further to be sure, but after this change I removed the lock from the `PartialMerge()` calls in the `TBufferMerger` and have seen no crashes so far.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:71,testability,test,test,71,"Yes, it does look like this is the cause of that issue. I will need to test further to be sure, but after this change I removed the lock from the `PartialMerge()` calls in the `TBufferMerger` and have seen no crashes so far.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:191,performance,lock,lock,191,"@pcanal Could you please take a look and let us know what you think here? I see that at line 705 a similar check is done before dereferencing, so it looks like we need this or the read/write lock to be in place.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:191,security,lock,lock,191,"@pcanal Could you please take a look and let us know what you think here? I see that at line 705 a similar check is done before dereferencing, so it looks like we need this or the read/write lock to be in place.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:56,deployability,updat,updates,56,"> Phillipe just pushed last evening his read/write lock updates. I *only* pushed the implementation of the lock and **not** the usage thereof. As mentioned in the PR:. The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:. 1 Replace gROOTMutex by a TRWMutexImp. 2 Add R__READLOCKGUARD. 3 Add a TListWithRWLock and THashListWithRWLock. 4 Use those in TROOT. 5 Remove current external locks for those ROOT lists (in particular the ListOfFiles). 6 Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock. 7 Introduce scalability test on RecursiveRemove.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:544,deployability,Updat,Update,544,"> Phillipe just pushed last evening his read/write lock updates. I *only* pushed the implementation of the lock and **not** the usage thereof. As mentioned in the PR:. The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:. 1 Replace gROOTMutex by a TRWMutexImp. 2 Add R__READLOCKGUARD. 3 Add a TListWithRWLock and THashListWithRWLock. 4 Use those in TROOT. 5 Remove current external locks for those ROOT lists (in particular the ListOfFiles). 6 Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock. 7 Introduce scalability test on RecursiveRemove.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:634,deployability,updat,update,634,"> Phillipe just pushed last evening his read/write lock updates. I *only* pushed the implementation of the lock and **not** the usage thereof. As mentioned in the PR:. The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:. 1 Replace gROOTMutex by a TRWMutexImp. 2 Add R__READLOCKGUARD. 3 Add a TListWithRWLock and THashListWithRWLock. 4 Use those in TROOT. 5 Remove current external locks for those ROOT lists (in particular the ListOfFiles). 6 Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock. 7 Introduce scalability test on RecursiveRemove.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:465,energy efficiency,current,current,465,"> Phillipe just pushed last evening his read/write lock updates. I *only* pushed the implementation of the lock and **not** the usage thereof. As mentioned in the PR:. The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:. 1 Replace gROOTMutex by a TRWMutexImp. 2 Add R__READLOCKGUARD. 3 Add a TListWithRWLock and THashListWithRWLock. 4 Use those in TROOT. 5 Remove current external locks for those ROOT lists (in particular the ListOfFiles). 6 Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock. 7 Introduce scalability test on RecursiveRemove.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:237,integrability,abstract,abstract,237,"> Phillipe just pushed last evening his read/write lock updates. I *only* pushed the implementation of the lock and **not** the usage thereof. As mentioned in the PR:. The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:. 1 Replace gROOTMutex by a TRWMutexImp. 2 Add R__READLOCKGUARD. 3 Add a TListWithRWLock and THashListWithRWLock. 4 Use those in TROOT. 5 Remove current external locks for those ROOT lists (in particular the ListOfFiles). 6 Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock. 7 Introduce scalability test on RecursiveRemove.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:246,integrability,interfac,interface,246,"> Phillipe just pushed last evening his read/write lock updates. I *only* pushed the implementation of the lock and **not** the usage thereof. As mentioned in the PR:. The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:. 1 Replace gROOTMutex by a TRWMutexImp. 2 Add R__READLOCKGUARD. 3 Add a TListWithRWLock and THashListWithRWLock. 4 Use those in TROOT. 5 Remove current external locks for those ROOT lists (in particular the ListOfFiles). 6 Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock. 7 Introduce scalability test on RecursiveRemove.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:246,interoperability,interfac,interface,246,"> Phillipe just pushed last evening his read/write lock updates. I *only* pushed the implementation of the lock and **not** the usage thereof. As mentioned in the PR:. The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:. 1 Replace gROOTMutex by a TRWMutexImp. 2 Add R__READLOCKGUARD. 3 Add a TListWithRWLock and THashListWithRWLock. 4 Use those in TROOT. 5 Remove current external locks for those ROOT lists (in particular the ListOfFiles). 6 Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock. 7 Introduce scalability test on RecursiveRemove.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:237,modifiability,abstract,abstract,237,"> Phillipe just pushed last evening his read/write lock updates. I *only* pushed the implementation of the lock and **not** the usage thereof. As mentioned in the PR:. The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:. 1 Replace gROOTMutex by a TRWMutexImp. 2 Add R__READLOCKGUARD. 3 Add a TListWithRWLock and THashListWithRWLock. 4 Use those in TROOT. 5 Remove current external locks for those ROOT lists (in particular the ListOfFiles). 6 Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock. 7 Introduce scalability test on RecursiveRemove.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:246,modifiability,interfac,interface,246,"> Phillipe just pushed last evening his read/write lock updates. I *only* pushed the implementation of the lock and **not** the usage thereof. As mentioned in the PR:. The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:. 1 Replace gROOTMutex by a TRWMutexImp. 2 Add R__READLOCKGUARD. 3 Add a TListWithRWLock and THashListWithRWLock. 4 Use those in TROOT. 5 Remove current external locks for those ROOT lists (in particular the ListOfFiles). 6 Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock. 7 Introduce scalability test on RecursiveRemove.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:653,modifiability,scal,scalability,653,"> Phillipe just pushed last evening his read/write lock updates. I *only* pushed the implementation of the lock and **not** the usage thereof. As mentioned in the PR:. The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:. 1 Replace gROOTMutex by a TRWMutexImp. 2 Add R__READLOCKGUARD. 3 Add a TListWithRWLock and THashListWithRWLock. 4 Use those in TROOT. 5 Remove current external locks for those ROOT lists (in particular the ListOfFiles). 6 Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock. 7 Introduce scalability test on RecursiveRemove.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:714,modifiability,scal,scalability,714,"> Phillipe just pushed last evening his read/write lock updates. I *only* pushed the implementation of the lock and **not** the usage thereof. As mentioned in the PR:. The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:. 1 Replace gROOTMutex by a TRWMutexImp. 2 Add R__READLOCKGUARD. 3 Add a TListWithRWLock and THashListWithRWLock. 4 Use those in TROOT. 5 Remove current external locks for those ROOT lists (in particular the ListOfFiles). 6 Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock. 7 Introduce scalability test on RecursiveRemove.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:51,performance,lock,lock,51,"> Phillipe just pushed last evening his read/write lock updates. I *only* pushed the implementation of the lock and **not** the usage thereof. As mentioned in the PR:. The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:. 1 Replace gROOTMutex by a TRWMutexImp. 2 Add R__READLOCKGUARD. 3 Add a TListWithRWLock and THashListWithRWLock. 4 Use those in TROOT. 5 Remove current external locks for those ROOT lists (in particular the ListOfFiles). 6 Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock. 7 Introduce scalability test on RecursiveRemove.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:107,performance,lock,lock,107,"> Phillipe just pushed last evening his read/write lock updates. I *only* pushed the implementation of the lock and **not** the usage thereof. As mentioned in the PR:. The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:. 1 Replace gROOTMutex by a TRWMutexImp. 2 Add R__READLOCKGUARD. 3 Add a TListWithRWLock and THashListWithRWLock. 4 Use those in TROOT. 5 Remove current external locks for those ROOT lists (in particular the ListOfFiles). 6 Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock. 7 Introduce scalability test on RecursiveRemove.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:482,performance,lock,locks,482,"> Phillipe just pushed last evening his read/write lock updates. I *only* pushed the implementation of the lock and **not** the usage thereof. As mentioned in the PR:. The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:. 1 Replace gROOTMutex by a TRWMutexImp. 2 Add R__READLOCKGUARD. 3 Add a TListWithRWLock and THashListWithRWLock. 4 Use those in TROOT. 5 Remove current external locks for those ROOT lists (in particular the ListOfFiles). 6 Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock. 7 Introduce scalability test on RecursiveRemove.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:653,performance,scalab,scalability,653,"> Phillipe just pushed last evening his read/write lock updates. I *only* pushed the implementation of the lock and **not** the usage thereof. As mentioned in the PR:. The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:. 1 Replace gROOTMutex by a TRWMutexImp. 2 Add R__READLOCKGUARD. 3 Add a TListWithRWLock and THashListWithRWLock. 4 Use those in TROOT. 5 Remove current external locks for those ROOT lists (in particular the ListOfFiles). 6 Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock. 7 Introduce scalability test on RecursiveRemove.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:696,performance,lock,lock,696,"> Phillipe just pushed last evening his read/write lock updates. I *only* pushed the implementation of the lock and **not** the usage thereof. As mentioned in the PR:. The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:. 1 Replace gROOTMutex by a TRWMutexImp. 2 Add R__READLOCKGUARD. 3 Add a TListWithRWLock and THashListWithRWLock. 4 Use those in TROOT. 5 Remove current external locks for those ROOT lists (in particular the ListOfFiles). 6 Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock. 7 Introduce scalability test on RecursiveRemove.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:714,performance,scalab,scalability,714,"> Phillipe just pushed last evening his read/write lock updates. I *only* pushed the implementation of the lock and **not** the usage thereof. As mentioned in the PR:. The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:. 1 Replace gROOTMutex by a TRWMutexImp. 2 Add R__READLOCKGUARD. 3 Add a TListWithRWLock and THashListWithRWLock. 4 Use those in TROOT. 5 Remove current external locks for those ROOT lists (in particular the ListOfFiles). 6 Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock. 7 Introduce scalability test on RecursiveRemove.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:56,safety,updat,updates,56,"> Phillipe just pushed last evening his read/write lock updates. I *only* pushed the implementation of the lock and **not** the usage thereof. As mentioned in the PR:. The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:. 1 Replace gROOTMutex by a TRWMutexImp. 2 Add R__READLOCKGUARD. 3 Add a TListWithRWLock and THashListWithRWLock. 4 Use those in TROOT. 5 Remove current external locks for those ROOT lists (in particular the ListOfFiles). 6 Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock. 7 Introduce scalability test on RecursiveRemove.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:544,safety,Updat,Update,544,"> Phillipe just pushed last evening his read/write lock updates. I *only* pushed the implementation of the lock and **not** the usage thereof. As mentioned in the PR:. The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:. 1 Replace gROOTMutex by a TRWMutexImp. 2 Add R__READLOCKGUARD. 3 Add a TListWithRWLock and THashListWithRWLock. 4 Use those in TROOT. 5 Remove current external locks for those ROOT lists (in particular the ListOfFiles). 6 Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock. 7 Introduce scalability test on RecursiveRemove.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:634,safety,updat,update,634,"> Phillipe just pushed last evening his read/write lock updates. I *only* pushed the implementation of the lock and **not** the usage thereof. As mentioned in the PR:. The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:. 1 Replace gROOTMutex by a TRWMutexImp. 2 Add R__READLOCKGUARD. 3 Add a TListWithRWLock and THashListWithRWLock. 4 Use those in TROOT. 5 Remove current external locks for those ROOT lists (in particular the ListOfFiles). 6 Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock. 7 Introduce scalability test on RecursiveRemove.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:726,safety,test,test,726,"> Phillipe just pushed last evening his read/write lock updates. I *only* pushed the implementation of the lock and **not** the usage thereof. As mentioned in the PR:. The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:. 1 Replace gROOTMutex by a TRWMutexImp. 2 Add R__READLOCKGUARD. 3 Add a TListWithRWLock and THashListWithRWLock. 4 Use those in TROOT. 5 Remove current external locks for those ROOT lists (in particular the ListOfFiles). 6 Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock. 7 Introduce scalability test on RecursiveRemove.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:51,security,lock,lock,51,"> Phillipe just pushed last evening his read/write lock updates. I *only* pushed the implementation of the lock and **not** the usage thereof. As mentioned in the PR:. The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:. 1 Replace gROOTMutex by a TRWMutexImp. 2 Add R__READLOCKGUARD. 3 Add a TListWithRWLock and THashListWithRWLock. 4 Use those in TROOT. 5 Remove current external locks for those ROOT lists (in particular the ListOfFiles). 6 Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock. 7 Introduce scalability test on RecursiveRemove.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:56,security,updat,updates,56,"> Phillipe just pushed last evening his read/write lock updates. I *only* pushed the implementation of the lock and **not** the usage thereof. As mentioned in the PR:. The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:. 1 Replace gROOTMutex by a TRWMutexImp. 2 Add R__READLOCKGUARD. 3 Add a TListWithRWLock and THashListWithRWLock. 4 Use those in TROOT. 5 Remove current external locks for those ROOT lists (in particular the ListOfFiles). 6 Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock. 7 Introduce scalability test on RecursiveRemove.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:107,security,lock,lock,107,"> Phillipe just pushed last evening his read/write lock updates. I *only* pushed the implementation of the lock and **not** the usage thereof. As mentioned in the PR:. The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:. 1 Replace gROOTMutex by a TRWMutexImp. 2 Add R__READLOCKGUARD. 3 Add a TListWithRWLock and THashListWithRWLock. 4 Use those in TROOT. 5 Remove current external locks for those ROOT lists (in particular the ListOfFiles). 6 Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock. 7 Introduce scalability test on RecursiveRemove.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:211,security,access,access,211,"> Phillipe just pushed last evening his read/write lock updates. I *only* pushed the implementation of the lock and **not** the usage thereof. As mentioned in the PR:. The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:. 1 Replace gROOTMutex by a TRWMutexImp. 2 Add R__READLOCKGUARD. 3 Add a TListWithRWLock and THashListWithRWLock. 4 Use those in TROOT. 5 Remove current external locks for those ROOT lists (in particular the ListOfFiles). 6 Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock. 7 Introduce scalability test on RecursiveRemove.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:482,security,lock,locks,482,"> Phillipe just pushed last evening his read/write lock updates. I *only* pushed the implementation of the lock and **not** the usage thereof. As mentioned in the PR:. The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:. 1 Replace gROOTMutex by a TRWMutexImp. 2 Add R__READLOCKGUARD. 3 Add a TListWithRWLock and THashListWithRWLock. 4 Use those in TROOT. 5 Remove current external locks for those ROOT lists (in particular the ListOfFiles). 6 Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock. 7 Introduce scalability test on RecursiveRemove.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:544,security,Updat,Update,544,"> Phillipe just pushed last evening his read/write lock updates. I *only* pushed the implementation of the lock and **not** the usage thereof. As mentioned in the PR:. The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:. 1 Replace gROOTMutex by a TRWMutexImp. 2 Add R__READLOCKGUARD. 3 Add a TListWithRWLock and THashListWithRWLock. 4 Use those in TROOT. 5 Remove current external locks for those ROOT lists (in particular the ListOfFiles). 6 Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock. 7 Introduce scalability test on RecursiveRemove.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:634,security,updat,update,634,"> Phillipe just pushed last evening his read/write lock updates. I *only* pushed the implementation of the lock and **not** the usage thereof. As mentioned in the PR:. The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:. 1 Replace gROOTMutex by a TRWMutexImp. 2 Add R__READLOCKGUARD. 3 Add a TListWithRWLock and THashListWithRWLock. 4 Use those in TROOT. 5 Remove current external locks for those ROOT lists (in particular the ListOfFiles). 6 Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock. 7 Introduce scalability test on RecursiveRemove.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:696,security,lock,lock,696,"> Phillipe just pushed last evening his read/write lock updates. I *only* pushed the implementation of the lock and **not** the usage thereof. As mentioned in the PR:. The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:. 1 Replace gROOTMutex by a TRWMutexImp. 2 Add R__READLOCKGUARD. 3 Add a TListWithRWLock and THashListWithRWLock. 4 Use those in TROOT. 5 Remove current external locks for those ROOT lists (in particular the ListOfFiles). 6 Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock. 7 Introduce scalability test on RecursiveRemove.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:726,testability,test,test,726,"> Phillipe just pushed last evening his read/write lock updates. I *only* pushed the implementation of the lock and **not** the usage thereof. As mentioned in the PR:. The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:. 1 Replace gROOTMutex by a TRWMutexImp. 2 Add R__READLOCKGUARD. 3 Add a TListWithRWLock and THashListWithRWLock. 4 Use those in TROOT. 5 Remove current external locks for those ROOT lists (in particular the ListOfFiles). 6 Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock. 7 Introduce scalability test on RecursiveRemove.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:162,safety,safe,safe,162,"> maybe we could convert the nice little example you pasted above into a gtest. Too soon. As mentioned by Axel, this is 'just' one of the symptom of the unthread-safe modification of the list.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:167,security,modif,modification,167,"> maybe we could convert the nice little example you pasted above into a gtest. Too soon. As mentioned by Axel, this is 'just' one of the symptom of the unthread-safe modification of the list.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:302,deployability,fail,failing,302,"On 30/06/17 11:37, Philippe Canal wrote:. >. > maybe we could convert the nice little example you pasted above. > into a gtest. >. > Too soon. As mentioned by Axel, this is 'just' one of the symptom of . > the unthread-safe modification of the list. >. Aren't test cases testing for symptoms? How this failing example doesn't . increase the coverage in that area?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:302,reliability,fail,failing,302,"On 30/06/17 11:37, Philippe Canal wrote:. >. > maybe we could convert the nice little example you pasted above. > into a gtest. >. > Too soon. As mentioned by Axel, this is 'just' one of the symptom of . > the unthread-safe modification of the list. >. Aren't test cases testing for symptoms? How this failing example doesn't . increase the coverage in that area?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:318,reliability,doe,doesn,318,"On 30/06/17 11:37, Philippe Canal wrote:. >. > maybe we could convert the nice little example you pasted above. > into a gtest. >. > Too soon. As mentioned by Axel, this is 'just' one of the symptom of . > the unthread-safe modification of the list. >. Aren't test cases testing for symptoms? How this failing example doesn't . increase the coverage in that area?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:219,safety,safe,safe,219,"On 30/06/17 11:37, Philippe Canal wrote:. >. > maybe we could convert the nice little example you pasted above. > into a gtest. >. > Too soon. As mentioned by Axel, this is 'just' one of the symptom of . > the unthread-safe modification of the list. >. Aren't test cases testing for symptoms? How this failing example doesn't . increase the coverage in that area?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:260,safety,test,test,260,"On 30/06/17 11:37, Philippe Canal wrote:. >. > maybe we could convert the nice little example you pasted above. > into a gtest. >. > Too soon. As mentioned by Axel, this is 'just' one of the symptom of . > the unthread-safe modification of the list. >. Aren't test cases testing for symptoms? How this failing example doesn't . increase the coverage in that area?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:271,safety,test,testing,271,"On 30/06/17 11:37, Philippe Canal wrote:. >. > maybe we could convert the nice little example you pasted above. > into a gtest. >. > Too soon. As mentioned by Axel, this is 'just' one of the symptom of . > the unthread-safe modification of the list. >. Aren't test cases testing for symptoms? How this failing example doesn't . increase the coverage in that area?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:224,security,modif,modification,224,"On 30/06/17 11:37, Philippe Canal wrote:. >. > maybe we could convert the nice little example you pasted above. > into a gtest. >. > Too soon. As mentioned by Axel, this is 'just' one of the symptom of . > the unthread-safe modification of the list. >. Aren't test cases testing for symptoms? How this failing example doesn't . increase the coverage in that area?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:260,testability,test,test,260,"On 30/06/17 11:37, Philippe Canal wrote:. >. > maybe we could convert the nice little example you pasted above. > into a gtest. >. > Too soon. As mentioned by Axel, this is 'just' one of the symptom of . > the unthread-safe modification of the list. >. Aren't test cases testing for symptoms? How this failing example doesn't . increase the coverage in that area?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:271,testability,test,testing,271,"On 30/06/17 11:37, Philippe Canal wrote:. >. > maybe we could convert the nice little example you pasted above. > into a gtest. >. > Too soon. As mentioned by Axel, this is 'just' one of the symptom of . > the unthread-safe modification of the list. >. Aren't test cases testing for symptoms? How this failing example doesn't . increase the coverage in that area?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:341,testability,coverag,coverage,341,"On 30/06/17 11:37, Philippe Canal wrote:. >. > maybe we could convert the nice little example you pasted above. > into a gtest. >. > Too soon. As mentioned by Axel, this is 'just' one of the symptom of . > the unthread-safe modification of the list. >. Aren't test cases testing for symptoms? How this failing example doesn't . increase the coverage in that area?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:153,deployability,fail,failed,153,"> I.e. I'm not sure this is sufficient. I remember that Philippe and Chris Jones have tried several times to make RecursiveRemove() more cooperative and failed. I would prefer to have his opinion on this before this gets merged. You are right, it is not sufficient. The only complete solution is the read-write lock.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:137,interoperability,cooperat,cooperative,137,"> I.e. I'm not sure this is sufficient. I remember that Philippe and Chris Jones have tried several times to make RecursiveRemove() more cooperative and failed. I would prefer to have his opinion on this before this gets merged. You are right, it is not sufficient. The only complete solution is the read-write lock.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:100,performance,time,times,100,"> I.e. I'm not sure this is sufficient. I remember that Philippe and Chris Jones have tried several times to make RecursiveRemove() more cooperative and failed. I would prefer to have his opinion on this before this gets merged. You are right, it is not sufficient. The only complete solution is the read-write lock.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:311,performance,lock,lock,311,"> I.e. I'm not sure this is sufficient. I remember that Philippe and Chris Jones have tried several times to make RecursiveRemove() more cooperative and failed. I would prefer to have his opinion on this before this gets merged. You are right, it is not sufficient. The only complete solution is the read-write lock.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:153,reliability,fail,failed,153,"> I.e. I'm not sure this is sufficient. I remember that Philippe and Chris Jones have tried several times to make RecursiveRemove() more cooperative and failed. I would prefer to have his opinion on this before this gets merged. You are right, it is not sufficient. The only complete solution is the read-write lock.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:42,safety,reme,remember,42,"> I.e. I'm not sure this is sufficient. I remember that Philippe and Chris Jones have tried several times to make RecursiveRemove() more cooperative and failed. I would prefer to have his opinion on this before this gets merged. You are right, it is not sufficient. The only complete solution is the read-write lock.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:275,safety,compl,complete,275,"> I.e. I'm not sure this is sufficient. I remember that Philippe and Chris Jones have tried several times to make RecursiveRemove() more cooperative and failed. I would prefer to have his opinion on this before this gets merged. You are right, it is not sufficient. The only complete solution is the read-write lock.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:275,security,compl,complete,275,"> I.e. I'm not sure this is sufficient. I remember that Philippe and Chris Jones have tried several times to make RecursiveRemove() more cooperative and failed. I would prefer to have his opinion on this before this gets merged. You are right, it is not sufficient. The only complete solution is the read-write lock.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:311,security,lock,lock,311,"> I.e. I'm not sure this is sufficient. I remember that Philippe and Chris Jones have tried several times to make RecursiveRemove() more cooperative and failed. I would prefer to have his opinion on this before this gets merged. You are right, it is not sufficient. The only complete solution is the read-write lock.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:169,usability,prefer,prefer,169,"> I.e. I'm not sure this is sufficient. I remember that Philippe and Chris Jones have tried several times to make RecursiveRemove() more cooperative and failed. I would prefer to have his opinion on this before this gets merged. You are right, it is not sufficient. The only complete solution is the read-write lock.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:51,deployability,fail,failing,51,"> Aren't test cases testing for symptoms? How this failing example doesn't increase the coverage in that area? Yes, you are right. Is the infrastructure 'ready' to handle a test that is expected to fail **some** of the time (and succeed some of the time)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:138,deployability,infrastructur,infrastructure,138,"> Aren't test cases testing for symptoms? How this failing example doesn't increase the coverage in that area? Yes, you are right. Is the infrastructure 'ready' to handle a test that is expected to fail **some** of the time (and succeed some of the time)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:198,deployability,fail,fail,198,"> Aren't test cases testing for symptoms? How this failing example doesn't increase the coverage in that area? Yes, you are right. Is the infrastructure 'ready' to handle a test that is expected to fail **some** of the time (and succeed some of the time)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:219,performance,time,time,219,"> Aren't test cases testing for symptoms? How this failing example doesn't increase the coverage in that area? Yes, you are right. Is the infrastructure 'ready' to handle a test that is expected to fail **some** of the time (and succeed some of the time)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:249,performance,time,time,249,"> Aren't test cases testing for symptoms? How this failing example doesn't increase the coverage in that area? Yes, you are right. Is the infrastructure 'ready' to handle a test that is expected to fail **some** of the time (and succeed some of the time)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:51,reliability,fail,failing,51,"> Aren't test cases testing for symptoms? How this failing example doesn't increase the coverage in that area? Yes, you are right. Is the infrastructure 'ready' to handle a test that is expected to fail **some** of the time (and succeed some of the time)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:67,reliability,doe,doesn,67,"> Aren't test cases testing for symptoms? How this failing example doesn't increase the coverage in that area? Yes, you are right. Is the infrastructure 'ready' to handle a test that is expected to fail **some** of the time (and succeed some of the time)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:198,reliability,fail,fail,198,"> Aren't test cases testing for symptoms? How this failing example doesn't increase the coverage in that area? Yes, you are right. Is the infrastructure 'ready' to handle a test that is expected to fail **some** of the time (and succeed some of the time)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:9,safety,test,test,9,"> Aren't test cases testing for symptoms? How this failing example doesn't increase the coverage in that area? Yes, you are right. Is the infrastructure 'ready' to handle a test that is expected to fail **some** of the time (and succeed some of the time)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:20,safety,test,testing,20,"> Aren't test cases testing for symptoms? How this failing example doesn't increase the coverage in that area? Yes, you are right. Is the infrastructure 'ready' to handle a test that is expected to fail **some** of the time (and succeed some of the time)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:173,safety,test,test,173,"> Aren't test cases testing for symptoms? How this failing example doesn't increase the coverage in that area? Yes, you are right. Is the infrastructure 'ready' to handle a test that is expected to fail **some** of the time (and succeed some of the time)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:9,testability,test,test,9,"> Aren't test cases testing for symptoms? How this failing example doesn't increase the coverage in that area? Yes, you are right. Is the infrastructure 'ready' to handle a test that is expected to fail **some** of the time (and succeed some of the time)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:20,testability,test,testing,20,"> Aren't test cases testing for symptoms? How this failing example doesn't increase the coverage in that area? Yes, you are right. Is the infrastructure 'ready' to handle a test that is expected to fail **some** of the time (and succeed some of the time)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:88,testability,coverag,coverage,88,"> Aren't test cases testing for symptoms? How this failing example doesn't increase the coverage in that area? Yes, you are right. Is the infrastructure 'ready' to handle a test that is expected to fail **some** of the time (and succeed some of the time)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:173,testability,test,test,173,"> Aren't test cases testing for symptoms? How this failing example doesn't increase the coverage in that area? Yes, you are right. Is the infrastructure 'ready' to handle a test that is expected to fail **some** of the time (and succeed some of the time)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:13,safety,test,testing,13,"Upon further testing, `TList::FindObject()` has the same nullptr dereference issue (line 547).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:13,testability,test,testing,13,"Upon further testing, `TList::FindObject()` has the same nullptr dereference issue (line 547).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:33,performance,lock,lock,33,"We need to enable the read/write lock as soon as possible. I also think that instead of only using it in TROOT, we should TList thread-safe as well. We could use [RCU](https://lwn.net/Articles/262464) instead of locks, although the differences are minimal.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:212,performance,lock,locks,212,"We need to enable the read/write lock as soon as possible. I also think that instead of only using it in TROOT, we should TList thread-safe as well. We could use [RCU](https://lwn.net/Articles/262464) instead of locks, although the differences are minimal.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:135,safety,safe,safe,135,"We need to enable the read/write lock as soon as possible. I also think that instead of only using it in TROOT, we should TList thread-safe as well. We could use [RCU](https://lwn.net/Articles/262464) instead of locks, although the differences are minimal.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:33,security,lock,lock,33,"We need to enable the read/write lock as soon as possible. I also think that instead of only using it in TROOT, we should TList thread-safe as well. We could use [RCU](https://lwn.net/Articles/262464) instead of locks, although the differences are minimal.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:212,security,lock,locks,212,"We need to enable the read/write lock as soon as possible. I also think that instead of only using it in TROOT, we should TList thread-safe as well. We could use [RCU](https://lwn.net/Articles/262464) instead of locks, although the differences are minimal.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:248,usability,minim,minimal,248,"We need to enable the read/write lock as soon as possible. I also think that instead of only using it in TROOT, we should TList thread-safe as well. We could use [RCU](https://lwn.net/Articles/262464) instead of locks, although the differences are minimal.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:122,performance,lock,lock,122,"because of the hierarchical nature of the list of cleanups, a 'thread-safe' collection is not enough. You need a 'global' lock and the full complexity I described.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:70,safety,safe,safe,70,"because of the hierarchical nature of the list of cleanups, a 'thread-safe' collection is not enough. You need a 'global' lock and the full complexity I described.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:140,safety,compl,complexity,140,"because of the hierarchical nature of the list of cleanups, a 'thread-safe' collection is not enough. You need a 'global' lock and the full complexity I described.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:122,security,lock,lock,122,"because of the hierarchical nature of the list of cleanups, a 'thread-safe' collection is not enough. You need a 'global' lock and the full complexity I described.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:140,security,compl,complexity,140,"because of the hierarchical nature of the list of cleanups, a 'thread-safe' collection is not enough. You need a 'global' lock and the full complexity I described.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:85,availability,sli,slight,85,@vgvassilev > note that using this coding pattern you avoid such nullptr derefs at a slight indentation cost. I would not support choosing indentation over correctness. You are correct. I forgot (did not see) the else part which need to be protected too ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:85,reliability,sli,slight,85,@vgvassilev > note that using this coding pattern you avoid such nullptr derefs at a slight indentation cost. I would not support choosing indentation over correctness. You are correct. I forgot (did not see) the else part which need to be protected too ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:54,safety,avoid,avoid,54,@vgvassilev > note that using this coding pattern you avoid such nullptr derefs at a slight indentation cost. I would not support choosing indentation over correctness. You are correct. I forgot (did not see) the else part which need to be protected too ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:122,usability,support,support,122,@vgvassilev > note that using this coding pattern you avoid such nullptr derefs at a slight indentation cost. I would not support choosing indentation over correctness. You are correct. I forgot (did not see) the else part which need to be protected too ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:448,deployability,updat,updating,448,"On a different note, the test shown by @amadio is indeed a 'stress' test of the list of cleanups and it seems that it should not be since in 'actual' use case for the following reasons. A priori the problem appears only if the creation and destruction of TMemFile overlaps ... But I suspect we do create TMemFile in the middle of the processing ... If this is the case, we can 'mitigate' the problem (if nobody wants to tackle the RW lock yet) but updating TFile/TMemFile to not add itself (in those cases) to the list of files ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:434,performance,lock,lock,434,"On a different note, the test shown by @amadio is indeed a 'stress' test of the list of cleanups and it seems that it should not be since in 'actual' use case for the following reasons. A priori the problem appears only if the creation and destruction of TMemFile overlaps ... But I suspect we do create TMemFile in the middle of the processing ... If this is the case, we can 'mitigate' the problem (if nobody wants to tackle the RW lock yet) but updating TFile/TMemFile to not add itself (in those cases) to the list of files ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:25,safety,test,test,25,"On a different note, the test shown by @amadio is indeed a 'stress' test of the list of cleanups and it seems that it should not be since in 'actual' use case for the following reasons. A priori the problem appears only if the creation and destruction of TMemFile overlaps ... But I suspect we do create TMemFile in the middle of the processing ... If this is the case, we can 'mitigate' the problem (if nobody wants to tackle the RW lock yet) but updating TFile/TMemFile to not add itself (in those cases) to the list of files ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:68,safety,test,test,68,"On a different note, the test shown by @amadio is indeed a 'stress' test of the list of cleanups and it seems that it should not be since in 'actual' use case for the following reasons. A priori the problem appears only if the creation and destruction of TMemFile overlaps ... But I suspect we do create TMemFile in the middle of the processing ... If this is the case, we can 'mitigate' the problem (if nobody wants to tackle the RW lock yet) but updating TFile/TMemFile to not add itself (in those cases) to the list of files ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:448,safety,updat,updating,448,"On a different note, the test shown by @amadio is indeed a 'stress' test of the list of cleanups and it seems that it should not be since in 'actual' use case for the following reasons. A priori the problem appears only if the creation and destruction of TMemFile overlaps ... But I suspect we do create TMemFile in the middle of the processing ... If this is the case, we can 'mitigate' the problem (if nobody wants to tackle the RW lock yet) but updating TFile/TMemFile to not add itself (in those cases) to the list of files ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:434,security,lock,lock,434,"On a different note, the test shown by @amadio is indeed a 'stress' test of the list of cleanups and it seems that it should not be since in 'actual' use case for the following reasons. A priori the problem appears only if the creation and destruction of TMemFile overlaps ... But I suspect we do create TMemFile in the middle of the processing ... If this is the case, we can 'mitigate' the problem (if nobody wants to tackle the RW lock yet) but updating TFile/TMemFile to not add itself (in those cases) to the list of files ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:448,security,updat,updating,448,"On a different note, the test shown by @amadio is indeed a 'stress' test of the list of cleanups and it seems that it should not be since in 'actual' use case for the following reasons. A priori the problem appears only if the creation and destruction of TMemFile overlaps ... But I suspect we do create TMemFile in the middle of the processing ... If this is the case, we can 'mitigate' the problem (if nobody wants to tackle the RW lock yet) but updating TFile/TMemFile to not add itself (in those cases) to the list of files ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:25,testability,test,test,25,"On a different note, the test shown by @amadio is indeed a 'stress' test of the list of cleanups and it seems that it should not be since in 'actual' use case for the following reasons. A priori the problem appears only if the creation and destruction of TMemFile overlaps ... But I suspect we do create TMemFile in the middle of the processing ... If this is the case, we can 'mitigate' the problem (if nobody wants to tackle the RW lock yet) but updating TFile/TMemFile to not add itself (in those cases) to the list of files ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:68,testability,test,test,68,"On a different note, the test shown by @amadio is indeed a 'stress' test of the list of cleanups and it seems that it should not be since in 'actual' use case for the following reasons. A priori the problem appears only if the creation and destruction of TMemFile overlaps ... But I suspect we do create TMemFile in the middle of the processing ... If this is the case, we can 'mitigate' the problem (if nobody wants to tackle the RW lock yet) but updating TFile/TMemFile to not add itself (in those cases) to the list of files ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:17,performance,synch,synchronous,17,"The issue is the synchronous deregistration of a memfile in the list of files, and a histogram's recursive remove in the same list of files. Not two files versus list of anything.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:210,performance,synch,synchronous,210,"Fair enough. Still not registering the TMemFile in the first place (And/or removing them immediately after creation) would be a workable work-around. On 6/30/17 1:39 PM, Axel Naumann wrote:. > The issue is the synchronous deregistration of a memfile in the list of files, and a histogram's recursive remove in the same list of files. Not two files versus list of anything. >. >. >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub <https://github.com/root-project/root/pull/719#issuecomment-312245702>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AE73L2WJ1NqYx_HstfsQYKjX46uKaADnks5sJN54gaJpZM4OJk7c>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:627,security,auth,auth,627,"Fair enough. Still not registering the TMemFile in the first place (And/or removing them immediately after creation) would be a workable work-around. On 6/30/17 1:39 PM, Axel Naumann wrote:. > The issue is the synchronous deregistration of a memfile in the list of files, and a histogram's recursive remove in the same list of files. Not two files versus list of anything. >. >. >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub <https://github.com/root-project/root/pull/719#issuecomment-312245702>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AE73L2WJ1NqYx_HstfsQYKjX46uKaADnks5sJN54gaJpZM4OJk7c>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:175,deployability,Manag,ManageTheirLifetimesMyself,175,"Define ""immediately"" in a thread-safe way ;-) And yes, avoiding registration in the first place would be a solution, a la static TH1::AddDirectory(). static TFile::IPromiseTo ManageTheirLifetimesMyself().",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:175,energy efficiency,Manag,ManageTheirLifetimesMyself,175,"Define ""immediately"" in a thread-safe way ;-) And yes, avoiding registration in the first place would be a solution, a la static TH1::AddDirectory(). static TFile::IPromiseTo ManageTheirLifetimesMyself().",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:64,interoperability,registr,registration,64,"Define ""immediately"" in a thread-safe way ;-) And yes, avoiding registration in the first place would be a solution, a la static TH1::AddDirectory(). static TFile::IPromiseTo ManageTheirLifetimesMyself().",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:33,safety,safe,safe,33,"Define ""immediately"" in a thread-safe way ;-) And yes, avoiding registration in the first place would be a solution, a la static TH1::AddDirectory(). static TFile::IPromiseTo ManageTheirLifetimesMyself().",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:55,safety,avoid,avoiding,55,"Define ""immediately"" in a thread-safe way ;-) And yes, avoiding registration in the first place would be a solution, a la static TH1::AddDirectory(). static TFile::IPromiseTo ManageTheirLifetimesMyself().",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:175,safety,Manag,ManageTheirLifetimesMyself,175,"Define ""immediately"" in a thread-safe way ;-) And yes, avoiding registration in the first place would be a solution, a la static TH1::AddDirectory(). static TFile::IPromiseTo ManageTheirLifetimesMyself().",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:122,deployability,Manag,ManageTheirLifetimesMyself,122,"> avoiding registration in the first place would be a solution, a la static TH1::AddDirectory(). static TFile::IPromiseTo ManageTheirLifetimesMyself(). This would be a boon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:122,energy efficiency,Manag,ManageTheirLifetimesMyself,122,"> avoiding registration in the first place would be a solution, a la static TH1::AddDirectory(). static TFile::IPromiseTo ManageTheirLifetimesMyself(). This would be a boon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:11,interoperability,registr,registration,11,"> avoiding registration in the first place would be a solution, a la static TH1::AddDirectory(). static TFile::IPromiseTo ManageTheirLifetimesMyself(). This would be a boon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:2,safety,avoid,avoiding,2,"> avoiding registration in the first place would be a solution, a la static TH1::AddDirectory(). static TFile::IPromiseTo ManageTheirLifetimesMyself(). This would be a boon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:122,safety,Manag,ManageTheirLifetimesMyself,122,"> avoiding registration in the first place would be a solution, a la static TH1::AddDirectory(). static TFile::IPromiseTo ManageTheirLifetimesMyself(). This would be a boon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:53,performance,lock,lock,53,"Closing this PR. The solution will be the read/write lock by Philippe, so this change will not be necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:53,security,lock,lock,53,"Closing this PR. The solution will be the read/write lock by Philippe, so this change will not be necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:123,performance,lock,lock,123,"As a side note, being able to opt out from ROOT's clean-up mechanism would still be nice to have, even with the read/write lock.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/719:123,security,lock,lock,123,"As a side note, being able to opt out from ROOT's clean-up mechanism would still be nice to have, even with the read/write lock.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/719
https://github.com/root-project/root/pull/720:16,energy efficiency,optim,optimisation,16,Thanks for this optimisation and for having delivered it so quickly! I'll merge it as soon as you had a moment to rebase.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/720
https://github.com/root-project/root/pull/721:8,deployability,build,build,8,"Current build is based on CEF_PATH shell variable, which is pointed on compiled version of CEF binaries. It should be solved differently.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/721
https://github.com/root-project/root/pull/721:80,deployability,version,version,80,"Current build is based on CEF_PATH shell variable, which is pointed on compiled version of CEF binaries. It should be solved differently.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/721
https://github.com/root-project/root/pull/721:0,energy efficiency,Current,Current,0,"Current build is based on CEF_PATH shell variable, which is pointed on compiled version of CEF binaries. It should be solved differently.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/721
https://github.com/root-project/root/pull/721:80,integrability,version,version,80,"Current build is based on CEF_PATH shell variable, which is pointed on compiled version of CEF binaries. It should be solved differently.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/721
https://github.com/root-project/root/pull/721:41,modifiability,variab,variable,41,"Current build is based on CEF_PATH shell variable, which is pointed on compiled version of CEF binaries. It should be solved differently.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/721
https://github.com/root-project/root/pull/721:80,modifiability,version,version,80,"Current build is based on CEF_PATH shell variable, which is pointed on compiled version of CEF binaries. It should be solved differently.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/721
https://github.com/root-project/root/pull/721:6,interoperability,format,format,6,Clang format applied also here.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/721
https://github.com/root-project/root/pull/722:126,energy efficiency,core,core,126,This seems fixed the symptoms. The real issue was fixed by introducing clearer separation of the way we compile some parts in core.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/722
https://github.com/root-project/root/pull/722:71,usability,clear,clearer,71,This seems fixed the symptoms. The real issue was fixed by introducing clearer separation of the way we compile some parts in core.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/722
https://github.com/root-project/root/pull/723:19,interoperability,format,format,19,Can you make clang-format happy by fixing the formatting? :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:46,interoperability,format,formatting,46,Can you make clang-format happy by fixing the formatting? :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:102,usability,document,documentation,102,"Nevermind, It turns out that TMVA follows different code conventions. I don't know if it uses Doxygen documentation though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:9,availability,ping,ping,9,@acarnes ping? What did you agree with Sergei? Is someone working on this?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:26,availability,slo,slowed,26,@xvallspl My analysis has slowed down. I will take care of the needed updates early next week.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:33,availability,down,down,33,@xvallspl My analysis has slowed down. I will take care of the needed updates early next week.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:70,deployability,updat,updates,70,@xvallspl My analysis has slowed down. I will take care of the needed updates early next week.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:26,reliability,slo,slowed,26,@xvallspl My analysis has slowed down. I will take care of the needed updates early next week.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:70,safety,updat,updates,70,@xvallspl My analysis has slowed down. I will take care of the needed updates early next week.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:70,security,updat,updates,70,@xvallspl My analysis has slowed down. I will take care of the needed updates early next week.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:438,energy efficiency,Cpu,Cpu,438,"Hi Andrew, . I see in your code you create inside your TThreadExecutor instance. I think it is better to uleave this to TMVA::Config. We have changed this for the DNN, and in the latest master we have now a global TThreadExecutor created in the singleton TMVA::Config class and can be access via TMVA::gConfig()::GetThreadExecutor(). . See for example https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu/CpuMatrix.h#L105. If you need to have more functions (e.g. number of threads or cpu) we can add them in TMVA::Config. . I am planning to add a function TMVA::Config::GetNCpu() , it is already in our dev branch for the DNN. . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:442,energy efficiency,Cpu,CpuMatrix,442,"Hi Andrew, . I see in your code you create inside your TThreadExecutor instance. I think it is better to uleave this to TMVA::Config. We have changed this for the DNN, and in the latest master we have now a global TThreadExecutor created in the singleton TMVA::Config class and can be access via TMVA::gConfig()::GetThreadExecutor(). . See for example https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu/CpuMatrix.h#L105. If you need to have more functions (e.g. number of threads or cpu) we can add them in TMVA::Config. . I am planning to add a function TMVA::Config::GetNCpu() , it is already in our dev branch for the DNN. . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:522,energy efficiency,cpu,cpu,522,"Hi Andrew, . I see in your code you create inside your TThreadExecutor instance. I think it is better to uleave this to TMVA::Config. We have changed this for the DNN, and in the latest master we have now a global TThreadExecutor created in the singleton TMVA::Config class and can be access via TMVA::gConfig()::GetThreadExecutor(). . See for example https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu/CpuMatrix.h#L105. If you need to have more functions (e.g. number of threads or cpu) we can add them in TMVA::Config. . I am planning to add a function TMVA::Config::GetNCpu() , it is already in our dev branch for the DNN. . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:424,interoperability,Architectur,Architectures,424,"Hi Andrew, . I see in your code you create inside your TThreadExecutor instance. I think it is better to uleave this to TMVA::Config. We have changed this for the DNN, and in the latest master we have now a global TThreadExecutor created in the singleton TMVA::Config class and can be access via TMVA::gConfig()::GetThreadExecutor(). . See for example https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu/CpuMatrix.h#L105. If you need to have more functions (e.g. number of threads or cpu) we can add them in TMVA::Config. . I am planning to add a function TMVA::Config::GetNCpu() , it is already in our dev branch for the DNN. . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:438,performance,Cpu,Cpu,438,"Hi Andrew, . I see in your code you create inside your TThreadExecutor instance. I think it is better to uleave this to TMVA::Config. We have changed this for the DNN, and in the latest master we have now a global TThreadExecutor created in the singleton TMVA::Config class and can be access via TMVA::gConfig()::GetThreadExecutor(). . See for example https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu/CpuMatrix.h#L105. If you need to have more functions (e.g. number of threads or cpu) we can add them in TMVA::Config. . I am planning to add a function TMVA::Config::GetNCpu() , it is already in our dev branch for the DNN. . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:442,performance,Cpu,CpuMatrix,442,"Hi Andrew, . I see in your code you create inside your TThreadExecutor instance. I think it is better to uleave this to TMVA::Config. We have changed this for the DNN, and in the latest master we have now a global TThreadExecutor created in the singleton TMVA::Config class and can be access via TMVA::gConfig()::GetThreadExecutor(). . See for example https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu/CpuMatrix.h#L105. If you need to have more functions (e.g. number of threads or cpu) we can add them in TMVA::Config. . I am planning to add a function TMVA::Config::GetNCpu() , it is already in our dev branch for the DNN. . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:522,performance,cpu,cpu,522,"Hi Andrew, . I see in your code you create inside your TThreadExecutor instance. I think it is better to uleave this to TMVA::Config. We have changed this for the DNN, and in the latest master we have now a global TThreadExecutor created in the singleton TMVA::Config class and can be access via TMVA::gConfig()::GetThreadExecutor(). . See for example https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu/CpuMatrix.h#L105. If you need to have more functions (e.g. number of threads or cpu) we can add them in TMVA::Config. . I am planning to add a function TMVA::Config::GetNCpu() , it is already in our dev branch for the DNN. . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:285,security,access,access,285,"Hi Andrew, . I see in your code you create inside your TThreadExecutor instance. I think it is better to uleave this to TMVA::Config. We have changed this for the DNN, and in the latest master we have now a global TThreadExecutor created in the singleton TMVA::Config class and can be access via TMVA::gConfig()::GetThreadExecutor(). . See for example https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu/CpuMatrix.h#L105. If you need to have more functions (e.g. number of threads or cpu) we can add them in TMVA::Config. . I am planning to add a function TMVA::Config::GetNCpu() , it is already in our dev branch for the DNN. . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:567,testability,plan,planning,567,"Hi Andrew, . I see in your code you create inside your TThreadExecutor instance. I think it is better to uleave this to TMVA::Config. We have changed this for the DNN, and in the latest master we have now a global TThreadExecutor created in the singleton TMVA::Config class and can be access via TMVA::gConfig()::GetThreadExecutor(). . See for example https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu/CpuMatrix.h#L105. If you need to have more functions (e.g. number of threads or cpu) we can add them in TMVA::Config. . I am planning to add a function TMVA::Config::GetNCpu() , it is already in our dev branch for the DNN. . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:506,integrability,event,eventually,506,"Hi Andrew. Can you please fix the conflicts so we can proceed with the testing and then merging of this PR. I would suggest to change the following.. Instead of having the TThreadExecutor object as data member of MethodBDT and LossFunction, you should use it from TMVA::Config. . So basically replace the fPool in MethodBDT.cxx and LossFunction.cxx with . TMVA::Config::Instance().GetThreadExecutor(). Thank you for applying these changes. If you don't have time to do them, please let us know and we will eventually do it. Best Regards. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:34,interoperability,conflict,conflicts,34,"Hi Andrew. Can you please fix the conflicts so we can proceed with the testing and then merging of this PR. I would suggest to change the following.. Instead of having the TThreadExecutor object as data member of MethodBDT and LossFunction, you should use it from TMVA::Config. . So basically replace the fPool in MethodBDT.cxx and LossFunction.cxx with . TMVA::Config::Instance().GetThreadExecutor(). Thank you for applying these changes. If you don't have time to do them, please let us know and we will eventually do it. Best Regards. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:458,performance,time,time,458,"Hi Andrew. Can you please fix the conflicts so we can proceed with the testing and then merging of this PR. I would suggest to change the following.. Instead of having the TThreadExecutor object as data member of MethodBDT and LossFunction, you should use it from TMVA::Config. . So basically replace the fPool in MethodBDT.cxx and LossFunction.cxx with . TMVA::Config::Instance().GetThreadExecutor(). Thank you for applying these changes. If you don't have time to do them, please let us know and we will eventually do it. Best Regards. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:71,safety,test,testing,71,"Hi Andrew. Can you please fix the conflicts so we can proceed with the testing and then merging of this PR. I would suggest to change the following.. Instead of having the TThreadExecutor object as data member of MethodBDT and LossFunction, you should use it from TMVA::Config. . So basically replace the fPool in MethodBDT.cxx and LossFunction.cxx with . TMVA::Config::Instance().GetThreadExecutor(). Thank you for applying these changes. If you don't have time to do them, please let us know and we will eventually do it. Best Regards. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:227,security,Loss,LossFunction,227,"Hi Andrew. Can you please fix the conflicts so we can proceed with the testing and then merging of this PR. I would suggest to change the following.. Instead of having the TThreadExecutor object as data member of MethodBDT and LossFunction, you should use it from TMVA::Config. . So basically replace the fPool in MethodBDT.cxx and LossFunction.cxx with . TMVA::Config::Instance().GetThreadExecutor(). Thank you for applying these changes. If you don't have time to do them, please let us know and we will eventually do it. Best Regards. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:332,security,Loss,LossFunction,332,"Hi Andrew. Can you please fix the conflicts so we can proceed with the testing and then merging of this PR. I would suggest to change the following.. Instead of having the TThreadExecutor object as data member of MethodBDT and LossFunction, you should use it from TMVA::Config. . So basically replace the fPool in MethodBDT.cxx and LossFunction.cxx with . TMVA::Config::Instance().GetThreadExecutor(). Thank you for applying these changes. If you don't have time to do them, please let us know and we will eventually do it. Best Regards. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:71,testability,test,testing,71,"Hi Andrew. Can you please fix the conflicts so we can proceed with the testing and then merging of this PR. I would suggest to change the following.. Instead of having the TThreadExecutor object as data member of MethodBDT and LossFunction, you should use it from TMVA::Config. . So basically replace the fPool in MethodBDT.cxx and LossFunction.cxx with . TMVA::Config::Instance().GetThreadExecutor(). Thank you for applying these changes. If you don't have time to do them, please let us know and we will eventually do it. Best Regards. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:685,integrability,event,eventually,685,"Hi Xavi,. I will start to fix the conflicts tomorrow. Best,. Andrew. On Fri, Feb 9, 2018 at 12:10 PM, Lorenzo Moneta <notifications@github.com>. wrote:. > Hi Andrew. >. > Can you please fix the conflicts so we can proceed with the testing and. > then merging of this PR. > I would suggest to change the following.. > Instead of having the TThreadExecutor object as data member of MethodBDT. > and LossFunction, you should use it from TMVA::Config. > So basically replace the fPool in MethodBDT.cxx and LossFunction.cxx with. > TMVA::Config::Instance().GetThreadExecutor(). >. > Thank you for applying these changes. If you don't have time to do them,. > please let us know and we will eventually do it. >. > Best Regards. >. > Lorenzo. >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/723#issuecomment-364496382>,. > or mute the thread. > <https://github.com/notifications/unsubscribe-auth/AG5CKRNo5JLXqIYrDhgOuR2pQafNwD05ks5tTHwigaJpZM4OLkmb>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:34,interoperability,conflict,conflicts,34,"Hi Xavi,. I will start to fix the conflicts tomorrow. Best,. Andrew. On Fri, Feb 9, 2018 at 12:10 PM, Lorenzo Moneta <notifications@github.com>. wrote:. > Hi Andrew. >. > Can you please fix the conflicts so we can proceed with the testing and. > then merging of this PR. > I would suggest to change the following.. > Instead of having the TThreadExecutor object as data member of MethodBDT. > and LossFunction, you should use it from TMVA::Config. > So basically replace the fPool in MethodBDT.cxx and LossFunction.cxx with. > TMVA::Config::Instance().GetThreadExecutor(). >. > Thank you for applying these changes. If you don't have time to do them,. > please let us know and we will eventually do it. >. > Best Regards. >. > Lorenzo. >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/723#issuecomment-364496382>,. > or mute the thread. > <https://github.com/notifications/unsubscribe-auth/AG5CKRNo5JLXqIYrDhgOuR2pQafNwD05ks5tTHwigaJpZM4OLkmb>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:194,interoperability,conflict,conflicts,194,"Hi Xavi,. I will start to fix the conflicts tomorrow. Best,. Andrew. On Fri, Feb 9, 2018 at 12:10 PM, Lorenzo Moneta <notifications@github.com>. wrote:. > Hi Andrew. >. > Can you please fix the conflicts so we can proceed with the testing and. > then merging of this PR. > I would suggest to change the following.. > Instead of having the TThreadExecutor object as data member of MethodBDT. > and LossFunction, you should use it from TMVA::Config. > So basically replace the fPool in MethodBDT.cxx and LossFunction.cxx with. > TMVA::Config::Instance().GetThreadExecutor(). >. > Thank you for applying these changes. If you don't have time to do them,. > please let us know and we will eventually do it. >. > Best Regards. >. > Lorenzo. >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/723#issuecomment-364496382>,. > or mute the thread. > <https://github.com/notifications/unsubscribe-auth/AG5CKRNo5JLXqIYrDhgOuR2pQafNwD05ks5tTHwigaJpZM4OLkmb>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:634,performance,time,time,634,"Hi Xavi,. I will start to fix the conflicts tomorrow. Best,. Andrew. On Fri, Feb 9, 2018 at 12:10 PM, Lorenzo Moneta <notifications@github.com>. wrote:. > Hi Andrew. >. > Can you please fix the conflicts so we can proceed with the testing and. > then merging of this PR. > I would suggest to change the following.. > Instead of having the TThreadExecutor object as data member of MethodBDT. > and LossFunction, you should use it from TMVA::Config. > So basically replace the fPool in MethodBDT.cxx and LossFunction.cxx with. > TMVA::Config::Instance().GetThreadExecutor(). >. > Thank you for applying these changes. If you don't have time to do them,. > please let us know and we will eventually do it. >. > Best Regards. >. > Lorenzo. >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/723#issuecomment-364496382>,. > or mute the thread. > <https://github.com/notifications/unsubscribe-auth/AG5CKRNo5JLXqIYrDhgOuR2pQafNwD05ks5tTHwigaJpZM4OLkmb>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:231,safety,test,testing,231,"Hi Xavi,. I will start to fix the conflicts tomorrow. Best,. Andrew. On Fri, Feb 9, 2018 at 12:10 PM, Lorenzo Moneta <notifications@github.com>. wrote:. > Hi Andrew. >. > Can you please fix the conflicts so we can proceed with the testing and. > then merging of this PR. > I would suggest to change the following.. > Instead of having the TThreadExecutor object as data member of MethodBDT. > and LossFunction, you should use it from TMVA::Config. > So basically replace the fPool in MethodBDT.cxx and LossFunction.cxx with. > TMVA::Config::Instance().GetThreadExecutor(). >. > Thank you for applying these changes. If you don't have time to do them,. > please let us know and we will eventually do it. >. > Best Regards. >. > Lorenzo. >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/723#issuecomment-364496382>,. > or mute the thread. > <https://github.com/notifications/unsubscribe-auth/AG5CKRNo5JLXqIYrDhgOuR2pQafNwD05ks5tTHwigaJpZM4OLkmb>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:397,security,Loss,LossFunction,397,"Hi Xavi,. I will start to fix the conflicts tomorrow. Best,. Andrew. On Fri, Feb 9, 2018 at 12:10 PM, Lorenzo Moneta <notifications@github.com>. wrote:. > Hi Andrew. >. > Can you please fix the conflicts so we can proceed with the testing and. > then merging of this PR. > I would suggest to change the following.. > Instead of having the TThreadExecutor object as data member of MethodBDT. > and LossFunction, you should use it from TMVA::Config. > So basically replace the fPool in MethodBDT.cxx and LossFunction.cxx with. > TMVA::Config::Instance().GetThreadExecutor(). >. > Thank you for applying these changes. If you don't have time to do them,. > please let us know and we will eventually do it. >. > Best Regards. >. > Lorenzo. >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/723#issuecomment-364496382>,. > or mute the thread. > <https://github.com/notifications/unsubscribe-auth/AG5CKRNo5JLXqIYrDhgOuR2pQafNwD05ks5tTHwigaJpZM4OLkmb>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:502,security,Loss,LossFunction,502,"Hi Xavi,. I will start to fix the conflicts tomorrow. Best,. Andrew. On Fri, Feb 9, 2018 at 12:10 PM, Lorenzo Moneta <notifications@github.com>. wrote:. > Hi Andrew. >. > Can you please fix the conflicts so we can proceed with the testing and. > then merging of this PR. > I would suggest to change the following.. > Instead of having the TThreadExecutor object as data member of MethodBDT. > and LossFunction, you should use it from TMVA::Config. > So basically replace the fPool in MethodBDT.cxx and LossFunction.cxx with. > TMVA::Config::Instance().GetThreadExecutor(). >. > Thank you for applying these changes. If you don't have time to do them,. > please let us know and we will eventually do it. >. > Best Regards. >. > Lorenzo. >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/723#issuecomment-364496382>,. > or mute the thread. > <https://github.com/notifications/unsubscribe-auth/AG5CKRNo5JLXqIYrDhgOuR2pQafNwD05ks5tTHwigaJpZM4OLkmb>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:993,security,auth,auth,993,"Hi Xavi,. I will start to fix the conflicts tomorrow. Best,. Andrew. On Fri, Feb 9, 2018 at 12:10 PM, Lorenzo Moneta <notifications@github.com>. wrote:. > Hi Andrew. >. > Can you please fix the conflicts so we can proceed with the testing and. > then merging of this PR. > I would suggest to change the following.. > Instead of having the TThreadExecutor object as data member of MethodBDT. > and LossFunction, you should use it from TMVA::Config. > So basically replace the fPool in MethodBDT.cxx and LossFunction.cxx with. > TMVA::Config::Instance().GetThreadExecutor(). >. > Thank you for applying these changes. If you don't have time to do them,. > please let us know and we will eventually do it. >. > Best Regards. >. > Lorenzo. >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/723#issuecomment-364496382>,. > or mute the thread. > <https://github.com/notifications/unsubscribe-auth/AG5CKRNo5JLXqIYrDhgOuR2pQafNwD05ks5tTHwigaJpZM4OLkmb>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:231,testability,test,testing,231,"Hi Xavi,. I will start to fix the conflicts tomorrow. Best,. Andrew. On Fri, Feb 9, 2018 at 12:10 PM, Lorenzo Moneta <notifications@github.com>. wrote:. > Hi Andrew. >. > Can you please fix the conflicts so we can proceed with the testing and. > then merging of this PR. > I would suggest to change the following.. > Instead of having the TThreadExecutor object as data member of MethodBDT. > and LossFunction, you should use it from TMVA::Config. > So basically replace the fPool in MethodBDT.cxx and LossFunction.cxx with. > TMVA::Config::Instance().GetThreadExecutor(). >. > Thank you for applying these changes. If you don't have time to do them,. > please let us know and we will eventually do it. >. > Best Regards. >. > Lorenzo. >. > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/723#issuecomment-364496382>,. > or mute the thread. > <https://github.com/notifications/unsubscribe-auth/AG5CKRNo5JLXqIYrDhgOuR2pQafNwD05ks5tTHwigaJpZM4OLkmb>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:105,interoperability,conflict,conflicts,105,"Hi Andrew, . Thank you for the changes. These are perfect ! The only thing is that this PR has still two conflicts with the master, in LoassFunction and MethodBDT. . It would be great if you can fix them so we can test it and then merge. Cheers. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:214,safety,test,test,214,"Hi Andrew, . Thank you for the changes. These are perfect ! The only thing is that this PR has still two conflicts with the master, in LoassFunction and MethodBDT. . It would be great if you can fix them so we can test it and then merge. Cheers. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:214,testability,test,test,214,"Hi Andrew, . Thank you for the changes. These are perfect ! The only thing is that this PR has still two conflicts with the master, in LoassFunction and MethodBDT. . It would be great if you can fix them so we can test it and then merge. Cheers. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:40,deployability,releas,release,40,Should we merge this after the next dev release?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/723:11,deployability,build,build,11,@phsft-bot build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/723
https://github.com/root-project/root/pull/724:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/724
https://github.com/root-project/root/pull/725:85,energy efficiency,green,green,85,@admins This PR should be built with imt=OFF to check that test_reports goes back to green.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/725
https://github.com/root-project/root/pull/725:11,deployability,build,build,11,@phsft-bot build with flags -Dvc=OFF -Dimt=OFF -Dccache=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/725
https://github.com/root-project/root/pull/725:11,deployability,build,build,11,"@phsft-bot build on gcc49/centos7, native/mac1012, gcc49/slc6, gcc62/slc6, native/ubuntu14 with flags -Dvc=OFF -Dimt=OFF -Dccache=ON",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/725
https://github.com/root-project/root/pull/725:11,deployability,build,build,11,@phsft-bot build just on gcc62/slc6 with flags -Dcxxmodules=On -Dccache=Off,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/725
